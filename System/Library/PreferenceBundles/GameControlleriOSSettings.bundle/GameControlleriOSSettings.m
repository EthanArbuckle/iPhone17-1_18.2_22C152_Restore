int64_t sub_52A8(id a1, LSApplicationRecord *a2, LSApplicationRecord *a3)
{
  LSApplicationRecord *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = [(LSApplicationRecord *)a2 localizedName];
  v6 = [(LSApplicationRecord *)v4 localizedName];

  v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_58C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_58F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained filterSupportedApps];
}

BOOL sub_5B14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  v5 = *(void **)(*(void *)(a1 + 32) + 232);
  id v6 = a3;
  v7 = [v5 objectForKeyedSubscript:a2];
  LODWORD(v5) = [v7 remappingKey];

  v8 = [*(id *)(*(void *)(v4 + 32) + 232) objectForKeyedSubscript:v6];

  LODWORD(v4) = [v8 remappingKey];
  return (int)v5 > (int)v4;
}

BOOL sub_5D98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  v5 = *(void **)(*(void *)(a1 + 32) + 232);
  id v6 = a3;
  v7 = [v5 objectForKeyedSubscript:a2];
  LODWORD(v5) = [v7 remappingKey];

  v8 = [*(id *)(*(void *)(v4 + 32) + 232) objectForKeyedSubscript:v6];

  LODWORD(v4) = [v8 remappingKey];
  return (int)v5 > (int)v4;
}

id sub_6614(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 3) {
    v1 = @"OFF";
  }
  else {
    v1 = off_1119A8[a1 + 1];
  }
  v2 = sub_CF14(v1);

  return v2;
}

void sub_B2FC(uint64_t a1, void *a2)
{
  v2 = *(void **)(a1 + 32);
  id v3 = a2;
  [v2 setFill];
  uint64_t v4 = (CGContext *)[v3 CGContext];

  double v5 = 5.0;
  double v6 = 5.0;
  double v7 = 10.0;
  double v8 = 10.0;

  CGContextFillEllipseInRect(v4, *(CGRect *)&v5);
}

BOOL sub_B884(id a1, GCController *a2, NSDictionary *a3)
{
  id v3 = a2;
  uint64_t v4 = [(GCController *)v3 extendedGamepad];
  if (v4)
  {
    double v5 = (void *)v4;
    unsigned __int8 v6 = [(GCController *)v3 isComponentBased];
  }
  else
  {
    unsigned __int8 v6 = 0;
  }

  return v6;
}

id sub_BEC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFindingController:0];
}

id sub_CE64()
{
  if (qword_125D40 != -1) {
    dispatch_once(&qword_125D40, &stru_111A78);
  }
  v0 = (void *)qword_125D48;

  return v0;
}

void sub_CEB8(id a1)
{
  uint64_t v1 = +[NSBundle bundleForClass:objc_opt_class()];
  uint64_t v2 = qword_125D48;
  qword_125D48 = v1;

  _objc_release_x1(v1, v2);
}

id sub_CF14(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_CE64();
  id v3 = [v2 localizedStringForKey:v1 value:&stru_118E68 table:@"Localizable"];

  return v3;
}

id sub_CF88(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = sub_CE64();
  uint64_t v4 = [v3 localizedStringForKey:v2 value:&stru_118E68 table:@"Localizable"];

  return v4;
}

id sub_CFFC(void *a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = a1;
  id v7 = objc_alloc_init((Class)NSMutableAttributedString);
  if (v5 && a3)
  {
    id v8 = [objc_alloc((Class)NSTextAttachment) initWithData:0 ofType:0];
    v9 = +[UIImage systemImageNamed:v5];
    v10 = [v9 imageWithRenderingMode:2];
    [v8 setImage:v10];

    v11 = +[NSAttributedString attributedStringWithAttachment:v8];
    v12 = [v8 image];

    if (!v12)
    {
      id v13 = [objc_alloc((Class)NSAttributedString) initWithString:v5];

      v11 = v13;
    }
    v14 = +[UIApplication sharedApplication];
    v15 = (char *)[v14 userInterfaceLayoutDirection];

    if (v15 == (unsigned char *)&dword_0 + 1)
    {
      id v16 = [objc_alloc((Class)NSAttributedString) initWithString:@"\u200F"];
      [v7 appendAttributedString:v16];
    }
    id v17 = [objc_alloc((Class)NSAttributedString) initWithString:@"\t⁨"];
    [v7 appendAttributedString:v17];

    [v7 appendAttributedString:v11];
    id v18 = [objc_alloc((Class)NSAttributedString) initWithString:@"⁩\t"];
    [v7 appendAttributedString:v18];
  }
  id v19 = [objc_alloc((Class)NSAttributedString) initWithString:v6];

  [v7 appendAttributedString:v19];
  v20 = +[NSParagraphStyle defaultParagraphStyle];
  id v21 = [v20 mutableCopy];

  id v22 = [objc_alloc((Class)NSTextTab) initWithTextAlignment:4 location:&__NSDictionary0__struct options:0.0];
  v30[0] = v22;
  id v23 = [objc_alloc((Class)NSTextTab) initWithTextAlignment:1 location:&__NSDictionary0__struct options:10.0];
  v30[1] = v23;
  id v24 = [objc_alloc((Class)NSTextTab) initWithTextAlignment:4 location:&__NSDictionary0__struct options:28.0];
  v30[2] = v24;
  v25 = +[NSArray arrayWithObjects:v30 count:3];
  [v21 setTabStops:v25];

  NSAttributedStringKey v28 = NSParagraphStyleAttributeName;
  id v29 = v21;
  v26 = +[NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
  objc_msgSend(v7, "addAttributes:range:", v26, 0, objc_msgSend(v7, "length"));

  return v7;
}

void sub_D348(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    id v4 = a1;
    id v5 = [v4 textLabel];
    id v6 = [v5 font];
    id v12 = +[UIImageSymbolConfiguration configurationWithFont:v6];

    id v7 = +[UIImage systemImageNamed:v3 withConfiguration:v12];

    id v8 = [v4 imageView];
    [v8 setImage:v7];

    v9 = [v4 textLabel];
    v10 = [v9 textColor];
    v11 = [v4 imageView];

    [v11 setTintColor:v10];
  }
}

void sub_D470(void *a1, void *a2)
{
  id v10 = a2;
  if (v10)
  {
    id v3 = a1;
    id v4 = [v3 textLabel];
    id v5 = [v4 font];
    id v6 = +[UIImageSymbolConfiguration configurationWithFont:v5];

    id v7 = +[UIImage systemImageNamed:v10 withConfiguration:v6];
    id v8 = [v3 remappedElementView];

    [v8 setImage:v7];
  }
  else
  {
    id v9 = a1;
    id v6 = [v9 remappedElementView];

    [v6 setImage:0];
  }
}

BOOL sub_DA98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  id v5 = *(void **)(*(void *)(a1 + 32) + 216);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  LODWORD(v5) = [v7 remappingKey];

  id v8 = [*(id *)(*(void *)(v4 + 32) + 216) objectForKeyedSubscript:v6];

  LODWORD(v4) = [v8 remappingKey];
  return (int)v5 > (int)v4;
}

__CFString *sub_DD40(unint64_t a1)
{
  if (a1 > 2)
  {
    id v2 = &stru_118E68;
  }
  else
  {
    sub_CF14(*(&off_111A98 + a1));
    id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

__CFString *sub_DDF8(uint64_t a1)
{
  if (!a1)
  {
    id v2 = @"VIDEO_RECORDING_MODE_MANUAL";
LABEL_5:
    sub_CF14(v2);
    id v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
    return v3;
  }
  if (a1 == 1)
  {
    id v2 = @"VIDEO_RECORDING_MODE_LAST15SEC";
    goto LABEL_5;
  }
  id v3 = &stru_118E68;
  return v3;
}

BOOL sub_F0C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  id v5 = *(void **)(*(void *)(a1 + 32) + 216);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  LODWORD(v5) = [v7 remappingKey];

  id v8 = [*(id *)(*(void *)(v4 + 32) + 216) objectForKeyedSubscript:v6];

  LODWORD(v4) = [v8 remappingKey];
  return (int)v5 > (int)v4;
}

__CFString *sub_F370(unint64_t a1)
{
  if (a1 > 2)
  {
    id v2 = &stru_118E68;
  }
  else
  {
    sub_CF14(*(&off_111AB0 + a1));
    id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

__CFString *sub_F428(uint64_t a1)
{
  if (!a1)
  {
    id v2 = @"VIDEO_RECORDING_MODE_MANUAL";
LABEL_5:
    sub_CF14(v2);
    id v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
    return v3;
  }
  if (a1 == 1)
  {
    id v2 = @"VIDEO_RECORDING_MODE_LAST15SEC";
    goto LABEL_5;
  }
  id v3 = &stru_118E68;
  return v3;
}

id sub_10BE8()
{
  if (qword_125D58[0] != -1) {
    dispatch_once(qword_125D58, &stru_111AC8);
  }
  v0 = (void *)qword_125D50;

  return v0;
}

void sub_10C3C(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = qword_125D50;
  qword_125D50 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

uint64_t sub_10C7C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10CC0()
{
  return sub_10FB0();
}

uint64_t sub_10CD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_10D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 104);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10D74()
{
  return sub_110D0();
}

uint64_t (*sub_10D88(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_10E14;
}

void *sub_10E18()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10E24()
{
  return sub_1124C();
}

uint64_t sub_10E30(uint64_t a1)
{
  return sub_112B8(a1);
}

uint64_t (*sub_10E3C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122130);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__buttonMappings;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122128);
  sub_E6140();
  swift_endAccess();
  return sub_10F4C;
}

uint64_t sub_10F54()
{
  return sub_E6130();
}

uint64_t sub_10F9C()
{
  return sub_10FB0();
}

uint64_t sub_10FB0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1101C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result;
  return result;
}

uint64_t sub_11068(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 152);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_110BC()
{
  return sub_110D0();
}

uint64_t sub_110D0()
{
  return sub_E6180();
}

uint64_t (*sub_1113C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_111C8;
}

void sub_111CC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

void *sub_11234()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_11240()
{
  return sub_1124C();
}

uint64_t sub_1124C()
{
  return swift_endAccess();
}

uint64_t sub_112AC(uint64_t a1)
{
  return sub_112B8(a1);
}

uint64_t sub_112B8(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_122130);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_10C7C(&qword_122128);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*sub_113E4(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122130);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__dpadMappings;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122128);
  sub_E6140();
  swift_endAccess();
  return sub_114F4;
}

void sub_114F8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  id v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    id v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_11668(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10C7C(&qword_122120);
  sub_E6130();
  sub_E6130();

  return v2;
}

uint64_t sub_11710(void *a1)
{
  uint64_t v3 = sub_10C7C(&qword_122128);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  size_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__buttonMappings;
  id v12 = &_swiftEmptyArrayStorage;
  sub_10C7C(&qword_122120);
  sub_E6130();
  uint64_t v8 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v8(v7, v6, v3);
  uint64_t v9 = v1 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__dpadMappings;
  id v12 = &_swiftEmptyArrayStorage;
  sub_E6130();

  v8(v9, v6, v3);
  return v1;
}

uint64_t sub_11868()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__buttonMappings;
  uint64_t v2 = sub_10C7C(&qword_122128);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__dpadMappings, v2);
  return v0;
}

uint64_t sub_11900()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__buttonMappings;
  uint64_t v2 = sub_10C7C(&qword_122128);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerPreferences__dpadMappings, v2);
  uint64_t v4 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v5 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v4, v5);
}

void *sub_119D4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_119E0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GCSControllerPreferences();
  uint64_t result = sub_E6110();
  *a1 = result;
  return result;
}

uint64_t sub_11A20()
{
  return type metadata accessor for GCSControllerPreferences();
}

uint64_t type metadata accessor for GCSControllerPreferences()
{
  uint64_t result = qword_125E10;
  if (!qword_125E10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_11A74()
{
  sub_11B04();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_11B04()
{
  if (!qword_122160)
  {
    sub_11B60(&qword_122120);
    unint64_t v0 = sub_E6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_122160);
    }
  }
}

uint64_t sub_11B60(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

_OWORD *sub_11BA8()
{
  type metadata accessor for BluetoothManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_16358();
  qword_12B690 = v0;
  return result;
}

uint64_t sub_11BE8()
{
  uint64_t v0 = swift_allocObject();
  sub_16358();
  return v0;
}

uint64_t *sub_11C20()
{
  if (qword_125E20 != -1) {
    swift_once();
  }
  return &qword_12B690;
}

uint64_t sub_11C6C()
{
  if (qword_125E20 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t variable initialization expression of BluetoothManager.controller()
{
  return 0;
}

void *sub_11CD0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void sub_11D14(uint64_t a1)
{
  if (!a1)
  {
    swift_beginAccess();
    uint64_t v3 = *(void **)(v1 + 16);
    if (v3) {
      [v3 invalidate];
    }
  }
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

void (*sub_11D88(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 16);
  v3[3] = v4;
  id v5 = v4;
  return sub_11E04;
}

void sub_11E04(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  uint64_t v3 = *v4;
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  size_t v6 = *(void **)(v5 + 16);
  if (a2)
  {
    if (!v3 && v6)
    {
      [*(id *)(v5 + 16) invalidate];
      size_t v6 = *(void **)(v5 + 16);
      uint64_t v5 = v2[4];
    }
    *(void *)(v5 + 16) = v3;
    id v7 = v3;

    size_t v6 = *v4;
  }
  else
  {
    if (!v3 && v6)
    {
      [*(id *)(v5 + 16) invalidate];
      size_t v6 = *(void **)(v5 + 16);
      uint64_t v5 = v2[4];
    }
    *(void *)(v5 + 16) = v3;
  }

  free(v2);
}

uint64_t variable initialization expression of BluetoothManager.discovery()
{
  return 0;
}

void *sub_11EC0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void sub_11F04(uint64_t a1)
{
  if (!a1)
  {
    swift_beginAccess();
    uint64_t v3 = *(void **)(v1 + 24);
    if (v3) {
      [v3 invalidate];
    }
  }
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = a1;
}

void (*sub_11F78(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 24);
  v3[3] = v4;
  id v5 = v4;
  return sub_11FF4;
}

void sub_11FF4(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  uint64_t v3 = *v4;
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  size_t v6 = *(void **)(v5 + 24);
  if (a2)
  {
    if (!v3 && v6)
    {
      [*(id *)(v5 + 24) invalidate];
      size_t v6 = *(void **)(v5 + 24);
      uint64_t v5 = v2[4];
    }
    *(void *)(v5 + 24) = v3;
    id v7 = v3;

    size_t v6 = *v4;
  }
  else
  {
    if (!v3 && v6)
    {
      [*(id *)(v5 + 24) invalidate];
      size_t v6 = *(void **)(v5 + 24);
      uint64_t v5 = v2[4];
    }
    *(void *)(v5 + 24) = v3;
  }

  free(v2);
}

uint64_t variable initialization expression of BluetoothManager.controllerInfo()
{
  return 0;
}

void *sub_120B0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void sub_120F4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1213C())()
{
  return j__swift_endAccess;
}

uint64_t variable initialization expression of BluetoothManager.controllerSettings()
{
  return 0;
}

void *sub_1219C()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void sub_121E0(void *a1)
{
  swift_beginAccess();
  uint64_t v3 = (void *)v1[5];
  v1[5] = a1;
  id v4 = a1;

  uint64_t v5 = (void *)v1[5];
  if (v5)
  {
    id v6 = v5;
    (*(void (**)(BOOL))(*v1 + 1072))([v6 setupAssistantIfNoKeyboard] == 1);
    (*(void (**)(BOOL))(*v1 + 1120))([v6 setupAssistantIfNoPointingDevice] == 1);
    (*(void (**)(uint64_t))(*v1 + 464))(1);

    id v4 = v6;
  }
}

void (*sub_1232C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_12384;
}

void sub_12384(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 24);
    uint64_t v5 = (void *)v4[5];
    if (v5)
    {
      id v6 = v5;
      (*(void (**)(BOOL))(*v4 + 1072))([v6 setupAssistantIfNoKeyboard] == 1);
      (*(void (**)(BOOL))(*v4 + 1120))([v6 setupAssistantIfNoPointingDevice] == 1);
      (*(void (**)(uint64_t))(*v4 + 464))(1);
    }
  }
}

uint64_t variable initialization expression of BluetoothManager.numericComparisonPairingDevice()
{
  return 0;
}

uint64_t sub_124D0()
{
  return swift_retain();
}

uint64_t sub_12508(uint64_t a1)
{
  id v2 = v1;
  (*(void (**)(BOOL))(*v1 + 880))(a1 != 0);
  if (!a1)
  {
    swift_beginAccess();
    uint64_t v4 = v1[6];
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 424);
      swift_retain();
      v5(0);
      swift_release();
    }
  }
  swift_beginAccess();
  v2[6] = a1;
  return swift_release();
}

void (*sub_125F8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(void *)(v1 + 48);
  swift_retain();
  return sub_12674;
}

void sub_12674(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void (**)(BOOL))(*v4 + 880);
  if (a2)
  {
    swift_retain();
    v5(v3 != 0);
    uint64_t v6 = v4[6];
    if (!v3 && v6)
    {
      id v7 = *(void (**)(void))(*(void *)v6 + 424);
      swift_retain();
      v7(0);
      swift_release();
    }
    *(void *)(v2[4] + 48) = v3;
    swift_release();
  }
  else
  {
    v5(v3 != 0);
    uint64_t v8 = v4[6];
    if (!v3 && v8)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)v8 + 424);
      swift_retain();
      v9(0);
      swift_release();
    }
    *(void *)(v2[4] + 48) = v3;
  }
  swift_release();

  free(v2);
}

uint64_t variable initialization expression of BluetoothManager.passkeyPairingDevice()
{
  return 0;
}

uint64_t sub_127F0()
{
  return swift_retain();
}

uint64_t sub_12828(uint64_t a1)
{
  id v2 = v1;
  (*(void (**)(BOOL))(*v1 + 928))(a1 != 0);
  if (!a1)
  {
    swift_beginAccess();
    uint64_t v4 = v1[7];
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 424);
      swift_retain();
      v5(0);
      swift_release();
    }
  }
  swift_beginAccess();
  v2[7] = a1;
  return swift_release();
}

void (*sub_12918(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(void *)(v1 + 56);
  swift_retain();
  return sub_12994;
}

void sub_12994(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void (**)(BOOL))(*v4 + 928);
  if (a2)
  {
    swift_retain();
    v5(v3 != 0);
    uint64_t v6 = v4[7];
    if (!v3 && v6)
    {
      id v7 = *(void (**)(void))(*(void *)v6 + 424);
      swift_retain();
      v7(0);
      swift_release();
    }
    *(void *)(v2[4] + 56) = v3;
    swift_release();
  }
  else
  {
    v5(v3 != 0);
    uint64_t v8 = v4[7];
    if (!v3 && v8)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)v8 + 424);
      swift_retain();
      v9(0);
      swift_release();
    }
    *(void *)(v2[4] + 56) = v3;
  }
  swift_release();

  free(v2);
}

uint64_t variable initialization expression of BluetoothManager.pincodeEntryPairingDevice()
{
  return 0;
}

uint64_t sub_12B10()
{
  return swift_retain();
}

uint64_t sub_12B48(uint64_t a1)
{
  id v2 = v1;
  (*(void (**)(BOOL))(*v1 + 976))(a1 != 0);
  if (!a1)
  {
    swift_beginAccess();
    uint64_t v4 = v1[8];
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 424);
      swift_retain();
      v5(0);
      swift_release();
    }
  }
  swift_beginAccess();
  v2[8] = a1;
  return swift_release();
}

void (*sub_12C38(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(void *)(v1 + 64);
  swift_retain();
  return sub_12CB4;
}

void sub_12CB4(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void (**)(BOOL))(*v4 + 976);
  if (a2)
  {
    swift_retain();
    v5(v3 != 0);
    uint64_t v6 = v4[8];
    if (!v3 && v6)
    {
      id v7 = *(void (**)(void))(*(void *)v6 + 424);
      swift_retain();
      v7(0);
      swift_release();
    }
    *(void *)(v2[4] + 64) = v3;
    swift_release();
  }
  else
  {
    v5(v3 != 0);
    uint64_t v8 = v4[8];
    if (!v3 && v8)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)v8 + 424);
      swift_retain();
      v9(0);
      swift_release();
    }
    *(void *)(v2[4] + 64) = v3;
  }
  swift_release();

  free(v2);
}

uint64_t variable initialization expression of BluetoothManager.btsaSettingsChanged()
{
  return 0;
}

uint64_t sub_12E30()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_12E64(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_12EA4())()
{
  return j_j__swift_endAccess;
}

uint64_t variable initialization expression of BluetoothManager.didFinishLaunching()
{
  return 0;
}

uint64_t sub_12F00()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t sub_12F34(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 73) = a1;
  return result;
}

uint64_t (*sub_12F74())()
{
  return j_j__swift_endAccess_0;
}

void *sub_12FC8()
{
  uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 288))();
  if (result)
  {
    id v2 = result;
    unsigned int v3 = [result useCase];

    return (void *)(v3 == 131081);
  }
  return result;
}

uint64_t sub_13038()
{
  return sub_15A34();
}

uint64_t sub_1304C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 488))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_130A4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 496))(*a1);
}

uint64_t sub_130F4()
{
  return sub_14F60();
}

uint64_t (*sub_13108(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_13194;
}

uint64_t variable initialization expression of BluetoothManager._anyDeviceIsConnecting()
{
  return 0;
}

uint64_t sub_131A0()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__anyDeviceIsConnecting, (uint64_t *)&unk_124E10);
}

uint64_t sub_131B4(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__anyDeviceIsConnecting, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_131D0(void *a1))()
{
  unsigned int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__anyDeviceIsConnecting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_132E0;
}

uint64_t sub_132E8()
{
  return sub_14064();
}

uint64_t sub_132FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 536))();
  *a2 = result;
  return result;
}

uint64_t sub_13350(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 544);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_133AC()
{
  return sub_14194();
}

uint64_t (*sub_133C0(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_1344C;
}

void *variable initialization expression of BluetoothManager._connectedPairedDevices()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1345C()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__connectedPairedDevices, &qword_122258);
}

uint64_t sub_13470(uint64_t a1)
{
  return sub_15E20(a1, &qword_122260, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__connectedPairedDevices, &qword_122258);
}

uint64_t (*sub_1348C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122260);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__connectedPairedDevices;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122258);
  sub_E6140();
  swift_endAccess();
  return sub_1359C;
}

uint64_t property wrapper backing initializer of BluetoothManager.controllerDiscoverableState(uint64_t a1)
{
  return sub_13878(a1, type metadata accessor for CBDiscoverableState);
}

uint64_t sub_135B8()
{
  return sub_138D4();
}

uint64_t sub_135CC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 584))();
  *a2 = result;
  return result;
}

uint64_t sub_13620(unsigned int *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 592))(*a1);
}

uint64_t sub_13670()
{
  return sub_139F8();
}

uint64_t (*sub_13684(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_13710;
}

uint64_t variable initialization expression of BluetoothManager._controllerDiscoverableState()
{
  return 1;
}

uint64_t sub_1371C()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerDiscoverableState, &qword_122268);
}

uint64_t sub_13730(uint64_t a1)
{
  return sub_15E20(a1, &qword_122270, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerDiscoverableState, &qword_122268);
}

uint64_t (*sub_1374C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122270);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerDiscoverableState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122268);
  sub_E6140();
  swift_endAccess();
  return sub_1385C;
}

uint64_t property wrapper backing initializer of BluetoothManager.controllerInquiryState(uint64_t a1)
{
  return sub_13878(a1, type metadata accessor for CBInquiryState);
}

uint64_t sub_13878(uint64_t a1, void (*a2)(void))
{
  return sub_E6130();
}

uint64_t sub_138C0()
{
  return sub_138D4();
}

uint64_t sub_138D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_13940@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 632))();
  *a2 = result;
  return result;
}

uint64_t sub_13994(unsigned int *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 640))(*a1);
}

uint64_t sub_139E4()
{
  return sub_139F8();
}

uint64_t sub_139F8()
{
  return sub_E6180();
}

uint64_t (*sub_13A64(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_13AF0;
}

uint64_t variable initialization expression of BluetoothManager._controllerInquiryState()
{
  return 1;
}

uint64_t sub_13AFC()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerInquiryState, &qword_122278);
}

uint64_t sub_13B10(uint64_t a1)
{
  return sub_15E20(a1, &qword_122280, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerInquiryState, &qword_122278);
}

uint64_t (*sub_13B2C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122280);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerInquiryState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122278);
  sub_E6140();
  swift_endAccess();
  return sub_13C3C;
}

uint64_t property wrapper backing initializer of BluetoothManager.devicePincode()
{
  return sub_E6130();
}

uint64_t sub_13C70()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_13CE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 680))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_13D38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 688);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_13DA8()
{
  return sub_E6180();
}

uint64_t (*sub_13E24(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_13EB0;
}

uint64_t variable initialization expression of BluetoothManager._devicePincode()
{
  return 0;
}

uint64_t sub_13EC0()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__devicePincode, &qword_122288);
}

uint64_t sub_13ED4(uint64_t a1)
{
  return sub_15E20(a1, &qword_122290, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__devicePincode, &qword_122288);
}

uint64_t (*sub_13EF0(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122290);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__devicePincode;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122288);
  sub_E6140();
  swift_endAccess();
  return sub_14000;
}

uint64_t _s25GameControlleriOSSettings16BluetoothManagerC22connectedPairedDevicesSayAA6DeviceCGvpfP_0()
{
  return sub_E6130();
}

uint64_t sub_14050()
{
  return sub_14064();
}

uint64_t sub_14064()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_140D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 728))();
  *a2 = result;
  return result;
}

uint64_t sub_14124(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 736);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_14180()
{
  return sub_14194();
}

uint64_t sub_14194()
{
  return sub_E6180();
}

uint64_t (*sub_14200(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_1428C;
}

void *variable initialization expression of BluetoothManager._nearbyDevices()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1429C()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__nearbyDevices, &qword_122258);
}

uint64_t sub_142B0(uint64_t a1)
{
  return sub_15E20(a1, &qword_122260, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__nearbyDevices, &qword_122258);
}

uint64_t (*sub_142CC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122260);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__nearbyDevices;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122258);
  sub_E6140();
  swift_endAccess();
  return sub_143DC;
}

uint64_t sub_143E0()
{
  return sub_15A34();
}

uint64_t sub_143F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 776))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1444C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 784))(*a1);
}

uint64_t sub_1449C()
{
  return sub_14F60();
}

uint64_t (*sub_144B0(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_1453C;
}

uint64_t variable initialization expression of BluetoothManager._shouldShowBTSAKeyboardModal()
{
  return 0;
}

uint64_t sub_14548()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAKeyboardModal, (uint64_t *)&unk_124E10);
}

uint64_t sub_1455C(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAKeyboardModal, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_14578(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAKeyboardModal;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_14688;
}

uint64_t sub_1468C()
{
  return sub_15A34();
}

uint64_t sub_146A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 824))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_146F8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 832))(*a1);
}

uint64_t sub_14748()
{
  return sub_14F60();
}

uint64_t (*sub_1475C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_147E8;
}

uint64_t variable initialization expression of BluetoothManager._shouldShowBTSAPointingModal()
{
  return 0;
}

uint64_t sub_147F4()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAPointingModal, (uint64_t *)&unk_124E10);
}

uint64_t sub_14808(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAPointingModal, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_14824(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAPointingModal;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_14934;
}

uint64_t sub_14938()
{
  return sub_15A34();
}

uint64_t sub_1494C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 872))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_149A4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 880))(*a1);
}

uint64_t sub_149F4()
{
  return sub_14F60();
}

uint64_t (*sub_14A08(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_14A94;
}

uint64_t variable initialization expression of BluetoothManager._showNumericComparisonPairingAlert()
{
  return 0;
}

uint64_t sub_14AA0()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showNumericComparisonPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t sub_14AB4(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showNumericComparisonPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_14AD0(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showNumericComparisonPairingAlert;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_14BE0;
}

uint64_t sub_14BE4()
{
  return sub_15A34();
}

uint64_t sub_14BF8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 920))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_14C50(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 928))(*a1);
}

uint64_t sub_14CA0()
{
  return sub_14F60();
}

uint64_t (*sub_14CB4(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_14D40;
}

uint64_t variable initialization expression of BluetoothManager._showPasskeyPairingAlert()
{
  return 0;
}

uint64_t sub_14D4C()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPasskeyPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t sub_14D60(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPasskeyPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_14D7C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPasskeyPairingAlert;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_14E8C;
}

uint64_t sub_14E90()
{
  return sub_15A34();
}

uint64_t sub_14EA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 968))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_14EFC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 976))(*a1);
}

uint64_t sub_14F4C()
{
  return sub_14F60();
}

uint64_t sub_14F60()
{
  return sub_E6180();
}

uint64_t (*sub_14FCC(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_15058;
}

void sub_1505C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t variable initialization expression of BluetoothManager._showPincodeEntryPairingAlert()
{
  return 0;
}

uint64_t sub_150CC()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPincodeEntryPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t sub_150E0(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPincodeEntryPairingAlert, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_150FC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPincodeEntryPairingAlert;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_1520C;
}

uint64_t property wrapper backing initializer of BluetoothManager.bluetoothEnabled()
{
  return sub_E6130();
}

uint64_t sub_15240()
{
  return sub_15A34();
}

uint64_t sub_15254@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1016))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_152AC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1024))(*a1);
}

uint64_t sub_152FC(int a1)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 264))();
  if (v3)
  {
    uint64_t v4 = v3;
    if (((([v3 bluetoothState] != (char *)&dword_4 + 1) ^ a1) & 1) == 0) {
      sub_422C0(a1 & 1);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_E6180();
}

uint64_t (*sub_153CC(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_1546C;
}

uint64_t sub_1546C(uint64_t a1)
{
  return sub_152FC(*(unsigned __int8 *)(a1 + 8));
}

uint64_t variable initialization expression of BluetoothManager._bluetoothEnabled()
{
  return 0;
}

uint64_t sub_1549C()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__bluetoothEnabled, (uint64_t *)&unk_124E10);
}

uint64_t sub_154B0(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__bluetoothEnabled, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_154CC(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__bluetoothEnabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_155DC;
}

uint64_t sub_155E0()
{
  return sub_15A34();
}

uint64_t sub_155F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1064))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1564C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1072))(*a1);
}

void sub_1569C(char a1)
{
  if ((*(uint64_t (**)(void))(*v1 + 456))())
  {
    uint64_t v3 = *v1;
    if (a1)
    {
      (*(void (**)(uint64_t))(v3 + 440))(1);
    }
    else if ((*(uint64_t (**)(void))(v3 + 1064))())
    {
      (*(void (**)(uint64_t))(*v1 + 784))(1);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v4 = sub_E6180();
  if ((*(uint64_t (**)(uint64_t))(*v1 + 432))(v4)) {
    sub_41A58();
  }
}

void (*sub_1580C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_158AC;
}

void sub_158AC(uint64_t a1)
{
}

uint64_t variable initialization expression of BluetoothManager._setupAssistantIfNoKeyboard()
{
  return 0;
}

uint64_t sub_158DC()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoKeyboard, (uint64_t *)&unk_124E10);
}

uint64_t sub_158F0(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoKeyboard, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_1590C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoKeyboard;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_15A1C;
}

uint64_t sub_15A20()
{
  return sub_15A34();
}

uint64_t sub_15A34()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_15AA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1112))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_15AF8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1120))(*a1);
}

void sub_15B48(char a1)
{
  if ((*(uint64_t (**)(void))(*v1 + 456))())
  {
    uint64_t v3 = *v1;
    if (a1)
    {
      (*(void (**)(uint64_t))(v3 + 440))(1);
    }
    else if ((*(uint64_t (**)(void))(v3 + 1112))())
    {
      (*(void (**)(uint64_t))(*v1 + 832))(1);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v4 = sub_E6180();
  if ((*(uint64_t (**)(uint64_t))(*v1 + 432))(v4)) {
    sub_41A58();
  }
}

void (*sub_15CB8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_15D58;
}

void sub_15D58(uint64_t a1)
{
}

uint64_t variable initialization expression of BluetoothManager._setupAssistantIfNoPointingDevice()
{
  return 0;
}

uint64_t sub_15D88()
{
  return sub_15D9C((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoPointingDevice, (uint64_t *)&unk_124E10);
}

uint64_t sub_15D9C(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_15E04(uint64_t a1)
{
  return sub_15E20(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoPointingDevice, (uint64_t *)&unk_124E10);
}

uint64_t sub_15E20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_10C7C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_10C7C(a4);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_15F50(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoPointingDevice;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_16060;
}

void sub_16064(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

unint64_t sub_161D4()
{
  unint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 536))();
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t result = sub_E7570();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = sub_E74E0();
      }
      else
      {
        uint64_t v5 = *(void *)(v2 + 8 * i + 32);
        swift_retain();
      }
      if ((*(uint64_t (**)(void))(*(void *)v5 + 536))())
      {
        sub_E7510();
        sub_E7540();
        sub_E7550();
        sub_E7520();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

_OWORD *sub_16358()
{
  uint64_t v1 = sub_10C7C(&qword_122288);
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  __chkstk_darwin();
  v43 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10C7C(&qword_122278);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin();
  v40 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10C7C(&qword_122268);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10C7C(&qword_122258);
  uint64_t v8 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C((uint64_t *)&unk_124E10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)((char *)v0 + 58) = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[1] = 0u;
  v15 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__anyDeviceIsConnecting;
  LOBYTE(v47) = 0;
  sub_E6130();
  id v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v16(v15, v14, v11);
  id v17 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__connectedPairedDevices;
  v47 = _swiftEmptyArrayStorage;
  uint64_t v37 = sub_10C7C(&qword_122250);
  sub_E6130();
  v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v36(v17, v10, v46);
  id v18 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerDiscoverableState;
  LODWORD(v47) = 1;
  type metadata accessor for CBDiscoverableState(0);
  sub_E6130();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v18, v7, v39);
  id v19 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerInquiryState;
  LODWORD(v47) = 1;
  type metadata accessor for CBInquiryState(0);
  v20 = v40;
  sub_E6130();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v19, v20, v42);
  id v21 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__devicePincode;
  v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  id v22 = v43;
  sub_E6130();
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v21, v22, v45);
  id v23 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__nearbyDevices;
  v47 = _swiftEmptyArrayStorage;
  sub_E6130();
  v36(v23, v10, v46);
  id v24 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAKeyboardModal;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v24, v14, v11);
  v25 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAPointingModal;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v25, v14, v11);
  v26 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showNumericComparisonPairingAlert;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v26, v14, v11);
  v27 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPasskeyPairingAlert;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v27, v14, v11);
  NSAttributedStringKey v28 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPincodeEntryPairingAlert;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v28, v14, v11);
  id v29 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__bluetoothEnabled;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v29, v14, v11);
  v30 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoKeyboard;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v30, v14, v11);
  v31 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoPointingDevice;
  LOBYTE(v47) = 0;
  sub_E6130();
  v16(v31, v14, v11);
  sub_40DE8();
  uint64_t v32 = sub_C7F8C();
  sub_99490(v32);
  id v33 = [self defaultCenter];
  [v33 addObserver:v0 selector:"didEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];
  [v33 addObserver:v0 selector:"willEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];

  return v0;
}

id *BluetoothManager.deinit()
{
  swift_beginAccess();
  id v1 = v0[2];
  if (v1) {
    [v1 invalidate];
  }
  swift_beginAccess();
  id v2 = v0[3];
  if (v2) {
    [v2 invalidate];
  }
  sub_C0CE0();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__anyDeviceIsConnecting;
  uint64_t v4 = sub_10C7C((uint64_t *)&unk_124E10);
  uint64_t v5 = *(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__connectedPairedDevices;
  uint64_t v7 = sub_10C7C(&qword_122258);
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerDiscoverableState;
  uint64_t v10 = sub_10C7C(&qword_122268);
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__controllerInquiryState;
  uint64_t v12 = sub_10C7C(&qword_122278);
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = (char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__devicePincode;
  uint64_t v14 = sub_10C7C(&qword_122288);
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  v8((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__nearbyDevices, v7);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAKeyboardModal, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__shouldShowBTSAPointingModal, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showNumericComparisonPairingAlert, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPasskeyPairingAlert, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__showPincodeEntryPairingAlert, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__bluetoothEnabled, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoKeyboard, v4);
  v5((char *)v0 + OBJC_IVAR____TtC25GameControlleriOSSettings16BluetoothManager__setupAssistantIfNoPointingDevice, v4);
  return v0;
}

uint64_t BluetoothManager.__deallocating_deinit()
{
  BluetoothManager.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

BOOL sub_16DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_10C7C(&qword_122298);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_EB580;
    *(void *)(v6 + 56) = &type metadata for String;
    unint64_t v7 = sub_17068();
    *(void *)(v6 + 64) = v7;
    *(void *)(v6 + 32) = a1;
    *(void *)(v6 + 40) = a2;
    swift_getErrorValue();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    sub_E7650();
    uint64_t v8 = sub_E7160();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v6 + 96) = &type metadata for String;
    *(void *)(v6 + 104) = v7;
    *(void *)(v6 + 72) = v8;
    *(void *)(v6 + 80) = v10;
    sub_170BC();
    uint64_t v11 = (void *)sub_E73C0();
    sub_E7320();
    sub_E60B0();
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  return a3 != 0;
}

void sub_16EEC()
{
  uint64_t v0 = sub_C7F9C();

  sub_99B18(v0, 1);
}

void sub_16F34()
{
  uint64_t v0 = sub_C7F8C();

  sub_99B18(v0, 2);
}

uint64_t sub_16F7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6 = swift_retain();
  uint64_t v7 = a3(v6);
  sub_99B18(v7, a4);

  return swift_release();
}

uint64_t sub_16FD8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BluetoothManager();
  uint64_t result = sub_E6110();
  *a1 = result;
  return result;
}

void type metadata accessor for CBDiscoverableState(uint64_t a1)
{
}

void type metadata accessor for CBInquiryState(uint64_t a1)
{
}

unint64_t sub_17068()
{
  unint64_t result = qword_1222A0;
  if (!qword_1222A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1222A0);
  }
  return result;
}

unint64_t sub_170BC()
{
  unint64_t result = qword_1222A8;
  if (!qword_1222A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1222A8);
  }
  return result;
}

void *sub_170FC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_17108()
{
  return type metadata accessor for BluetoothManager();
}

uint64_t type metadata accessor for BluetoothManager()
{
  uint64_t result = qword_126000;
  if (!qword_126000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1715C()
{
  sub_17444(319, &qword_124F50, (uint64_t)&type metadata for Bool, (uint64_t (*)(void, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    sub_17394();
    if (v1 <= 0x3F)
    {
      sub_173F0(319, &qword_1222E0, type metadata accessor for CBDiscoverableState);
      if (v2 <= 0x3F)
      {
        sub_173F0(319, &qword_1222E8, type metadata accessor for CBInquiryState);
        if (v3 <= 0x3F)
        {
          sub_17444(319, (unint64_t *)&unk_1222F0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Published);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_17394()
{
  if (!qword_1222D8)
  {
    sub_11B60(&qword_122250);
    unint64_t v0 = sub_E6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1222D8);
    }
  }
}

void sub_173F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_E6190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_17444(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_17490()
{
}

void sub_174D0(void *a1)
{
  id *v1 = a1;
}

uint64_t (*sub_174FC())()
{
  return nullsub_1;
}

void sub_17524(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*sub_17550())()
{
  return nullsub_2;
}

double sub_17574()
{
  return 40.0;
}

void sub_17584(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*sub_1758C())()
{
  return nullsub_4;
}

double sub_175B0@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_E6F30();
  uint64_t v8 = v7;
  sub_17698(a1, a2, (uint64_t)&v17);
  long long v16 = v17;
  uint64_t v9 = v18;
  char v10 = v19;
  sub_E6F30();
  sub_E62A0();
  uint64_t v11 = v17;
  char v12 = BYTE8(v17);
  uint64_t v13 = v18;
  char v14 = v19;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 16) = v16;
  *(void *)(a3 + 32) = v9;
  *(unsigned char *)(a3 + 40) = v10;
  *(void *)(a3 + 48) = 0x3FF0000000000000;
  *(_WORD *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = v11;
  *(unsigned char *)(a3 + 72) = v12;
  *(void *)(a3 + 80) = v13;
  *(unsigned char *)(a3 + 88) = v14;
  double result = *(double *)&v20;
  *(_OWORD *)(a3 + 96) = v20;
  return result;
}

double sub_17698@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v34 = a2;
  uint64_t v35 = a3;
  uint64_t v4 = sub_E6C40();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 bundleIdentifier];
  uint64_t v9 = sub_E7110();
  uint64_t v11 = v10;

  id v12 = [self defaultIdentifier];
  uint64_t v13 = sub_E7110();
  uint64_t v15 = v14;

  if (v9 == v13 && v11 == v15)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v18 = v35;
LABEL_10:
    v34;
    uint64_t v26 = sub_61950();
    uint64_t v36 = nullsub_44(v26);
    *(void *)&long long v37 = v27;
    *((void *)&v37 + 1) = v28;
    char v38 = 1;
    sub_10C7C(&qword_122830);
    sub_18864();
    sub_188D8();
    sub_E6610();
    goto LABEL_11;
  }
  id v33 = v7;
  char v17 = sub_E7620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v35;
  if (v17) {
    goto LABEL_10;
  }
  id v19 = [a1 bundleIdentifier];
  sub_E7110();

  NSString v20 = sub_E70D0();
  swift_bridgeObjectRelease();
  id v21 = [self appIconImageForBundleIdentifier:v20];

  if (!v21) {
    goto LABEL_10;
  }
  id v22 = [v21 UIImage];

  if (!v22) {
    goto LABEL_10;
  }
  id v23 = v22;
  sub_E6C20();
  id v24 = v33;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v33, enum case for Image.ResizingMode.stretch(_:), v4);
  uint64_t v25 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  uint64_t v36 = v25;
  long long v37 = xmmword_EBAA0;
  char v38 = 0;
  swift_retain();
  sub_10C7C(&qword_122830);
  sub_18864();
  sub_188D8();
  sub_E6610();
  swift_release();

LABEL_11:
  double result = *(double *)&v39;
  uint64_t v30 = v40;
  char v31 = v41;
  *(_OWORD *)uint64_t v18 = v39;
  *(void *)(v18 + 16) = v30;
  *(unsigned char *)(v18 + 24) = v31;
  return result;
}

double sub_17A08()
{
  return 40.0;
}

uint64_t sub_17A20()
{
  return sub_E69D0();
}

double sub_17A3C@<D0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void **)(v1 + 8);
  uint64_t v5 = sub_E6F30();
  uint64_t v7 = v6;
  sub_17698(v3, v4, (uint64_t)&v15);
  long long v14 = v15;
  uint64_t v8 = v16;
  LOBYTE(v4) = v17;
  sub_E6F30();
  sub_E62A0();
  uint64_t v9 = v15;
  char v10 = BYTE8(v15);
  uint64_t v11 = v16;
  char v12 = v17;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 16) = v14;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = (_BYTE)v4;
  *(void *)(a1 + 48) = 0x3FF0000000000000;
  *(_WORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v12;
  double result = *(double *)&v18;
  *(_OWORD *)(a1 + 96) = v18;
  return result;
}

id sub_17B14(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

unint64_t sub_17B60()
{
  unint64_t result = qword_1227D8;
  if (!qword_1227D8)
  {
    type metadata accessor for GCSPreferencesStore();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1227D8);
  }
  return result;
}

uint64_t sub_17BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  unint64_t v5 = sub_17B60();

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

void sub_17C1C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_17C48())()
{
  return nullsub_6;
}

double sub_17C74@<D0>(void *a1@<X0>, int a2@<W1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_E6560();
  sub_17D30(a1, a2, a3, a4, (uint64_t)&v20);
  double result = v21;
  char v12 = v23;
  uint64_t v13 = v25;
  char v14 = v26;
  char v15 = v27;
  char v16 = v28;
  long long v17 = v22;
  long long v18 = v20;
  long long v19 = v24;
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = 0x4008000000000000;
  *(unsigned char *)(a5 + 16) = 0;
  *(_OWORD *)(a5 + 24) = v18;
  *(double *)(a5 + 40) = result;
  *(_OWORD *)(a5 + 48) = v17;
  *(unsigned char *)(a5 + 64) = v12;
  *(_OWORD *)(a5 + 72) = v19;
  *(void *)(a5 + 88) = v13;
  *(unsigned char *)(a5 + 96) = v14;
  *(unsigned char *)(a5 + 97) = v15;
  *(unsigned char *)(a5 + 98) = v16;
  return result;
}

uint64_t sub_17D30@<X0>(void *a1@<X0>, int a2@<W1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v9 = a3;
  id v10 = a4;
  sub_17FC8(a1, a2, v9);
  sub_187B0();
  uint64_t v11 = sub_E6920();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a5 = v9;
  *(void *)(a5 + 8) = v10;
  *(void *)(a5 + 16) = 0x4044000000000000;
  *(void *)(a5 + 24) = v11;
  *(void *)(a5 + 32) = v13;
  *(unsigned char *)(a5 + 40) = v17;
  *(void *)(a5 + 48) = v15;
  *(void *)(a5 + 56) = KeyPath;
  *(void *)(a5 + 64) = 2;
  *(unsigned char *)(a5 + 72) = 0;
  *(_WORD *)(a5 + 73) = 256;
  id v19 = v9;
  id v20 = v10;
  sub_18804(v11, v13, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18814(v11, v13, v17);

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_17E60()
{
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();

  return sub_E63F0();
}

double sub_17EB0@<D0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v6 = *(void **)(v1 + 16);
  unint64_t v5 = *(void **)(v1 + 24);
  uint64_t v7 = sub_E6560();
  sub_17D30(v3, v4, v6, v5, (uint64_t)&v17);
  double result = v18;
  char v9 = v20;
  uint64_t v10 = v22;
  char v11 = v23;
  char v12 = v24;
  char v13 = v25;
  long long v14 = v19;
  long long v15 = v17;
  long long v16 = v21;
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v15;
  *(double *)(a1 + 40) = result;
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = v16;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  *(unsigned char *)(a1 + 97) = v12;
  *(unsigned char *)(a1 + 98) = v13;
  return result;
}

uint64_t sub_17F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_E6500();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_17F98()
{
  return sub_E6510();
}

uint64_t sub_17FC8(void *a1, int a2, id a3)
{
  id v5 = [a3 bundleIdentifier];
  uint64_t v6 = sub_E7110();
  uint64_t v8 = v7;

  id v9 = [self defaultIdentifier];
  uint64_t v10 = sub_E7110();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_15:
      id v19 = [a3 localizedName];
      uint64_t v20 = sub_E7110();

      return v20;
    }
  }
  if (a1)
  {
    id v15 = [a1 games];
    sub_18824();
    unint64_t v16 = sub_E7210();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_E7570();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    if (v17 <= 1) {
      goto LABEL_15;
    }
    return sub_B7108(0x41475F524548544FLL, (void *)0xEB0000000053454DLL);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_181DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_181F8()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for GCSGameIconView(void *a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for GCSGameIconView(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for GCSGameIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for GCSGameIconView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GCSGameIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSGameIconView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSGameIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSGameIconView()
{
  return &type metadata for GCSGameIconView;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSControllerSheetSidebarRow(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for GCSControllerSheetSidebarRow(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for GCSControllerSheetSidebarRow(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v5;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for GCSControllerSheetSidebarRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  return a1;
}

__n128 initializeWithTake for GCSControllerSheetSidebarRow(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for GCSControllerSheetSidebarRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerSheetSidebarRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerSheetSidebarRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerSheetSidebarRow()
{
  return &type metadata for GCSControllerSheetSidebarRow;
}

unint64_t sub_18614()
{
  unint64_t result = qword_1227E0;
  if (!qword_1227E0)
  {
    sub_11B60(&qword_1227E8);
    sub_18690();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1227E0);
  }
  return result;
}

unint64_t sub_18690()
{
  unint64_t result = qword_1227F0;
  if (!qword_1227F0)
  {
    sub_11B60(&qword_1227F8);
    sub_1876C(&qword_122800, &qword_122808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1227F0);
  }
  return result;
}

uint64_t sub_18730()
{
  return sub_1876C(&qword_122810, &qword_122818);
}

uint64_t sub_1876C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_187B0()
{
  unint64_t result = qword_122820;
  if (!qword_122820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122820);
  }
  return result;
}

uint64_t sub_18804(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_18814(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_18824()
{
  unint64_t result = qword_122828;
  if (!qword_122828)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_122828);
  }
  return result;
}

unint64_t sub_18864()
{
  unint64_t result = qword_122838;
  if (!qword_122838)
  {
    sub_11B60(&qword_122830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122838);
  }
  return result;
}

unint64_t sub_188D8()
{
  unint64_t result = qword_122840;
  if (!qword_122840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122840);
  }
  return result;
}

uint64_t sub_18934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_E64E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_18964()
{
  return sub_E64F0();
}

uint64_t sub_1898C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18994()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_189E4()
{
  return sub_E6DF0();
}

uint64_t (*sub_18A38(void *a1))()
{
  long long v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[5];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *long long v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_18B1C((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_18AEC;
}

uint64_t sub_18AF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_18B1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_18B48(uint64_t a1)
{
  return a1;
}

uint64_t sub_18B74(uint64_t a1)
{
  return a1;
}

uint64_t sub_18BA0()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_18BF4()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_18C44()
{
  return sub_E6DF0();
}

uint64_t (*sub_18C98(void *a1))()
{
  long long v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[8];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *long long v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_18B1C((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_18D4C;
}

uint64_t sub_18D50()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_18DA8()
{
  return 0;
}

uint64_t sub_18DB0()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t v1 = swift_allocObject();
  long long v2 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 64) = v2;
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 96) = *(void *)(v0 + 80);
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v3;
  sub_1905C(v0);
  sub_1910C();
  sub_191D8();
  sub_2346C(&qword_122878, &qword_122880, (void (*)(void))sub_1922C);
  return sub_E6EC0();
}

__n128 sub_18EF8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 24);
  unint64_t v16 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  unsigned __int8 v14 = *(unsigned char *)(a1 + 57);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v13 = *(unsigned char *)(a1 + 58);
  unint64_t v10 = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t KeyPath = swift_getKeyPath();
  sub_E6D10();
  a3->n128_u64[0] = KeyPath;
  a3->n128_u8[8] = 0;
  a3[1].n128_u64[0] = v4;
  a3[1].n128_u64[1] = v5;
  a3[2].n128_u64[0] = v16;
  a3[2].n128_u64[1] = v6;
  a3[3].n128_u64[0] = v8;
  a3[3].n128_u64[1] = v7;
  a3[4].n128_u64[0] = v9;
  a3[4].n128_u8[8] = v15;
  a3[4].n128_u8[9] = v14;
  a3[4].n128_u8[10] = v13;
  a3[5].n128_u64[0] = v10;
  a3[5].n128_u64[1] = v17;
  __n128 result = v18;
  a3[6] = v18;
  a3[7].n128_u8[0] = v17;
  a3[7].n128_u64[1] = v18.n128_u64[0];
  return result;
}

uint64_t sub_19048(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

double sub_19054@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  *(void *)&double result = sub_18EF8(a1, v2 + 16, a2).n128_u64[0];
  return result;
}

uint64_t sub_1905C(uint64_t a1)
{
  return a1;
}

uint64_t sub_19100(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1910C()
{
  unint64_t result = qword_122850;
  if (!qword_122850)
  {
    sub_11B60(&qword_122848);
    sub_25790(&qword_122858, &qword_122860);
    sub_25790(&qword_122868, &qword_122860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122850);
  }
  return result;
}

unint64_t sub_191D8()
{
  unint64_t result = qword_122870;
  if (!qword_122870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122870);
  }
  return result;
}

unint64_t sub_1922C()
{
  unint64_t result = qword_122888;
  if (!qword_122888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122888);
  }
  return result;
}

__n128 sub_19280@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v18 = a1[1];
  long long v19 = *a1;
  __n128 v17 = (__n128)a1[2];
  uint64_t v11 = *((void *)a1 + 6);
  char v12 = *((unsigned char *)a1 + 56) & 1;
  char v13 = *((unsigned char *)a1 + 57) & 1;
  char v14 = *((unsigned char *)a1 + 58) & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_E6D10();
  *(void *)a6 = KeyPath;
  *(unsigned char *)(a6 + 8) = 0;
  *(_OWORD *)(a6 + 16) = v19;
  *(_OWORD *)(a6 + 32) = v18;
  __n128 result = v17;
  *(__n128 *)(a6 + 48) = v17;
  *(void *)(a6 + 64) = v11;
  *(unsigned char *)(a6 + 72) = v12;
  *(unsigned char *)(a6 + 73) = v13;
  *(unsigned char *)(a6 + 74) = v14;
  *(void *)(a6 + 80) = a2;
  *(void *)(a6 + 88) = a3;
  *(void *)(a6 + 96) = a4;
  *(void *)(a6 + 104) = a5;
  *(unsigned char *)(a6 + 112) = v20;
  *(void *)(a6 + 120) = v21;
  return result;
}

uint64_t sub_19378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = sub_E6D10();
  *(void *)a8 = KeyPath;
  *(unsigned char *)(a8 + 8) = 0;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  *(void *)(a8 + 56) = a6;
  *(void *)(a8 + 64) = a7;
  *(unsigned char *)(a8 + 72) = v18;
  *(void *)(a8 + 80) = v19;
  return result;
}

uint64_t sub_19434()
{
  long long v1 = v0[4];
  long long v10 = v0[3];
  long long v11 = v1;
  long long v2 = v0[2];
  long long v8 = v0[1];
  long long v9 = v2;
  uint64_t v12 = *((void *)v0 + 10);
  long long v7 = *v0;
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t v3 = swift_allocObject();
  long long v4 = v10;
  *(_OWORD *)(v3 + 48) = v9;
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 80) = v11;
  *(void *)(v3 + 96) = v12;
  long long v5 = v8;
  *(_OWORD *)(v3 + 16) = v7;
  *(_OWORD *)(v3 + 32) = v5;
  sub_1905C((uint64_t)&v7);
  sub_1910C();
  sub_191D8();
  sub_2346C(&qword_122878, &qword_122880, (void (*)(void))sub_1922C);
  return sub_E6EC0();
}

uint64_t sub_19598()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_195E0()
{
  return sub_E6DF0();
}

void (*sub_1962C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5))(uint64_t a1)
{
  long long v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[19] = a5;
  *((void *)v9 + 3) = a3;
  *((void *)v9 + 4) = a4;
  *(void *)long long v9 = a3;
  *((void *)v9 + 1) = a4;
  v9[16] = a5;
  swift_retain();
  swift_retain();
  *((void *)v9 + 5) = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_196D4;
}

void sub_196D4(uint64_t a1)
{
  unsigned __int8 v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_19744()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_19790@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v23[1] = a5;
  uint64_t v9 = sub_E66A0();
  v23[0] = *(void *)(v9 - 8);
  __chkstk_darwin();
  long long v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_122898);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  unsigned __int8 v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  *(unsigned char *)(v16 + 40) = a4;
  v23[4] = a1;
  v23[5] = a2;
  v23[6] = a3;
  char v24 = a4;
  swift_retain();
  swift_retain();
  id v17 = a1;
  sub_10C7C(&qword_1228A0);
  uint64_t v18 = sub_11B60(&qword_1228A8);
  uint64_t v19 = sub_E6580();
  uint64_t v20 = sub_25790(&qword_1228B0, &qword_1228A8);
  uint64_t v21 = sub_1D940(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v25 = v18;
  uint64_t v26 = v19;
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  swift_getOpaqueTypeConformance2();
  sub_E6D80();
  sub_E6690();
  sub_25790(&qword_1228C0, &qword_122898);
  sub_1D940((unint64_t *)&qword_1228C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v23[0] + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_19AD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = sub_E6580();
  v17[0] = *(void *)(v3 - 8);
  __chkstk_darwin();
  long long v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_1228A8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10C7C(&qword_122298);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_EBBE0;
  id v11 = [a1 localizedName];
  uint64_t v12 = sub_E7110();
  uint64_t v14 = v13;

  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_17068();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  Swift::String v15 = String.localized(with:)((Swift::OpaquePointer)v10);
  swift_bridgeObjectRelease();
  Swift::String v18 = v15;
  sub_187B0();
  sub_E6CA0();
  sub_E6570();
  sub_25790(&qword_1228B0, &qword_1228A8);
  sub_1D940(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  sub_E6970();
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_19DB8@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  v21[0] = sub_E66A0();
  uint64_t v2 = *(void *)(v21[0] - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10C7C(&qword_122898);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)v1;
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v11 = *(void *)(v1 + 16);
  char v12 = *(unsigned char *)(v1 + 24);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v10;
  *(void *)(v13 + 32) = v11;
  *(unsigned char *)(v13 + 40) = v12;
  v21[4] = v9;
  v21[5] = v10;
  v21[6] = v11;
  char v22 = v12;
  swift_retain();
  swift_retain();
  id v14 = v9;
  sub_10C7C(&qword_1228A0);
  uint64_t v15 = sub_11B60(&qword_1228A8);
  uint64_t v16 = sub_E6580();
  uint64_t v17 = sub_25790(&qword_1228B0, &qword_1228A8);
  uint64_t v18 = sub_1D940(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v23 = v15;
  uint64_t v24 = v16;
  uint64_t v25 = v17;
  uint64_t v26 = v18;
  swift_getOpaqueTypeConformance2();
  sub_E6D80();
  sub_E6690();
  sub_25790(&qword_1228C0, &qword_122898);
  sub_1D940((unint64_t *)&qword_1228C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v19 = v21[0];
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A0F0()
{
  return swift_getKeyPath();
}

id sub_1A114()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1A11C()
{
  return swift_bridgeObjectRetain();
}

double sub_1A124@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = v8;
  return result;
}

uint64_t sub_1A1A4()
{
  return sub_E6DF0();
}

uint64_t (*sub_1A20C(void *a1))()
{
  long long v3 = malloc(0xE8uLL);
  *a1 = v3;
  long long v4 = v1[2];
  long long v5 = v1[3];
  *long long v3 = v4;
  v3[1] = v5;
  long long v6 = v1[4];
  v3[2] = v6;
  long long v7 = *(_OWORD *)((char *)v1 + 75);
  *(_OWORD *)((char *)v3 + 43) = v7;
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  *(_OWORD *)((char *)v3 + 107) = v7;
  sub_1DB48((uint64_t)v3);
  *((void *)v3 + 28) = sub_10C7C(&qword_122880);
  sub_E6DE0();
  return sub_1A2B4;
}

double sub_1A2B8@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6E10();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 57) = v8;
  *(unsigned char *)(a1 + 58) = v9;
  return result;
}

uint64_t sub_1A340()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_1A390()
{
  return sub_E6DF0();
}

uint64_t (*sub_1A3E4(void *a1))()
{
  long long v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[14];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *long long v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_18B1C((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_1A498;
}

uint64_t sub_1A49C()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_1A4F0()
{
  return sub_E6890();
}

uint64_t sub_1A584@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v34 = sub_10C7C(&qword_122AC0);
  uint64_t v3 = *(void *)(v34 - 8);
  uint64_t v4 = __chkstk_darwin(v34);
  id v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v7 = (char *)&v28 - v6;
  uint64_t v8 = sub_10C7C(&qword_122AC8);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v9 = v32;
  uint64_t v10 = __chkstk_darwin(v8);
  char v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v28 - v13;
  uint64_t v37 = a1;
  sub_10C7C(&qword_122AD0);
  sub_25790(&qword_122AD8, &qword_122AD0);
  char v31 = v14;
  sub_E6EE0();
  uint64_t v36 = a1;
  sub_10C7C(&qword_122990);
  sub_25790(&qword_122988, &qword_122990);
  uint64_t v15 = v7;
  id v29 = v7;
  sub_E6EE0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v30 = v8;
  v16(v12, v14, v8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v18 = v33;
  uint64_t v19 = v15;
  uint64_t v20 = v34;
  v17(v33, v19, v34);
  uint64_t v21 = v35;
  v16(v35, v12, v8);
  uint64_t v22 = sub_10C7C(&qword_122AE0);
  uint64_t v23 = v18;
  v17(&v21[*(int *)(v22 + 48)], v18, v20);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v3 + 8);
  v24(v29, v20);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v26 = v30;
  v25(v31, v30);
  v24(v23, v20);
  return ((uint64_t (*)(char *, uint64_t))v25)(v12, v26);
}

uint64_t sub_1A8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_122AE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(_OWORD *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 112);
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t v8 = v22;
  uint64_t v9 = v23;
  uint64_t v10 = v24;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1FF10((uint64_t)v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v22 = v11;
  sub_1FEA4(&v22);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(void *)&long long v20 = v22;
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v12 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v12 + 96) = v13;
  *(_OWORD *)(v12 + 112) = *(_OWORD *)(a1 + 96);
  *(void *)(v12 + 128) = *(void *)(a1 + 112);
  long long v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 32) = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v12 + 64) = v15;
  sub_25860(a1);
  sub_10C7C(&qword_122A88);
  sub_10C7C(&qword_122B28);
  sub_25790(&qword_122A90, &qword_122A88);
  uint64_t v16 = (void *)sub_11B60(&qword_122AF8);
  unint64_t v17 = sub_256CC();
  uint64_t v22 = v16;
  unint64_t v23 = v17;
  swift_getOpaqueTypeConformance2();
  sub_2346C(&qword_122878, &qword_122880, (void (*)(void))sub_1922C);
  sub_E6EC0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1ABC4(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122B10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_122AF8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = a1[1];
  long long v20 = *a1;
  long long v21 = v10;
  v22[0] = a1[2];
  *(_OWORD *)((char *)v22 + 11) = *(long long *)((char *)a1 + 43);
  *(void *)uint64_t v6 = sub_E6560();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v11 = sub_10C7C(&qword_122B30);
  sub_1ADCC(a2, &v20, (uint64_t)&v6[*(int *)(v11 + 44)]);
  sub_25B4C((uint64_t)v6, (uint64_t)v9, &qword_122B10);
  v9[*(int *)(v7 + 36)] = 0;
  sub_25C28((uint64_t)v6, &qword_122B10);
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v12 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v12 + 96) = v13;
  *(_OWORD *)(v12 + 112) = *(_OWORD *)(a2 + 96);
  *(void *)(v12 + 128) = *(void *)(a2 + 112);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v12 + 32) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v12 + 64) = v15;
  long long v16 = v20;
  long long v17 = v21;
  long long v18 = v22[0];
  *(_OWORD *)(v12 + 179) = *(_OWORD *)((char *)v22 + 11);
  *(_OWORD *)(v12 + 168) = v18;
  *(_OWORD *)(v12 + 152) = v17;
  *(_OWORD *)(v12 + 136) = v16;
  sub_25860(a2);
  sub_1DB48((uint64_t)&v20);
  sub_256CC();
  sub_E69B0();
  swift_release();
  return sub_25C28((uint64_t)v9, &qword_122AF8);
}

uint64_t sub_1ADCC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a3;
  sub_10C7C(&qword_122B38);
  ((void (*)(void))__chkstk_darwin)();
  v78 = &v69[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_10C7C(&qword_122B40);
  uint64_t v76 = *(void *)(v77 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v75 = &v69[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = sub_10C7C(&qword_122B48);
  uint64_t v79 = *(void *)(v80 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v74 = &v69[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10C7C(&qword_122B50);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  v82 = &v69[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v81 = &v69[-v10];
  uint64_t v11 = *(void *)(a1 + 24);
  swift_getKeyPath();
  long long v12 = a2[1];
  long long v97 = *a2;
  long long v98 = v12;
  *(_OWORD *)v99 = a2[2];
  *(_OWORD *)&v99[11] = *(long long *)((char *)a2 + 43);
  sub_1DB48((uint64_t)a2);
  sub_10C7C(&qword_122880);
  sub_E6E00();
  swift_release();
  sub_1DBA0((uint64_t)a2);
  long long v97 = v84;
  long long v98 = v85;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (!*(void *)(v11 + 16) || (unint64_t v13 = sub_21CB8(v87, v88), (v14 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_10C7C(&qword_122B58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v83, 1, 1, v23);
  }
  id v73 = *(id *)(*(void *)(v11 + 56) + 8 * v13);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  long long v15 = a2[1];
  long long v97 = *a2;
  long long v98 = v15;
  *(_OWORD *)v99 = a2[2];
  *(_OWORD *)&v99[11] = *(long long *)((char *)a2 + 43);
  sub_1DB48((uint64_t)a2);
  sub_E6E00();
  swift_release();
  sub_1DBA0((uint64_t)a2);
  long long v97 = v95;
  long long v98 = v96;
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v97 = *(_OWORD *)(a1 + 32);
  long long v98 = v16;
  long long v18 = *(_OWORD *)(a1 + 32);
  long long v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)v99 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v99[11] = *(_OWORD *)(a1 + 75);
  uint64_t v20 = v93;
  uint64_t v19 = v94;
  long long v84 = v18;
  long long v85 = v17;
  v86[0] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v86 + 11) = *(_OWORD *)(a1 + 75);
  sub_E6DE0();
  uint64_t v22 = v87;
  uint64_t v21 = v88;
  swift_bridgeObjectRelease();
  if (v20 == v22 && v19 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      id v30 = v73;
      id v31 = [v73 sfSymbolsName];
      sub_E7110();

      uint64_t v32 = sub_E6C30();
      id v33 = [v30 localizedName];
      uint64_t v34 = sub_E7110();
      uint64_t v36 = v35;

      *(void *)&long long v84 = v34;
      *((void *)&v84 + 1) = v36;
      sub_187B0();
      uint64_t v37 = sub_E6920();
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      uint64_t v43 = v42 & 1;
      swift_retain();
      sub_18804(v37, v39, v43);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_18804(v37, v39, v43);
      swift_bridgeObjectRetain();
      sub_18814(v37, v39, v43);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v87 = v32;
      uint64_t v88 = v37;
      uint64_t v89 = v39;
      uint64_t v90 = v43;
      uint64_t v91 = v41;
      char v92 = 1;
      sub_10C7C(&qword_122AA0);
      sub_25790(&qword_122AA8, &qword_122AA0);
      sub_E6610();
      sub_18814(v37, v39, v43);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  *(void *)&long long v84 = sub_B7108(0xD000000000000011, (void *)0x80000000000F1700);
  *((void *)&v84 + 1) = v26;
  sub_187B0();
  uint64_t v87 = sub_E6920();
  uint64_t v88 = v27;
  uint64_t v89 = v28 & 1;
  uint64_t v90 = v29;
  uint64_t v91 = 0;
  char v92 = 0;
  sub_10C7C(&qword_122AA0);
  sub_25790(&qword_122AA8, &qword_122AA0);
  sub_E6610();
LABEL_10:
  long long v44 = v84;
  uint64_t v72 = *((void *)&v85 + 1);
  uint64_t v45 = v85;
  uint64_t v71 = *(void *)&v86[0];
  int v70 = BYTE8(v86[0]);
  swift_getKeyPath();
  long long v46 = a2[1];
  long long v84 = *a2;
  long long v85 = v46;
  v86[0] = a2[2];
  *(_OWORD *)((char *)v86 + 11) = *(long long *)((char *)a2 + 43);
  sub_1DB48((uint64_t)a2);
  sub_E6E00();
  swift_release();
  sub_1DBA0((uint64_t)a2);
  long long v84 = v95;
  long long v85 = v96;
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v48 = v93;
  uint64_t v47 = v94;
  long long v84 = v97;
  long long v85 = v98;
  v86[0] = *(_OWORD *)v99;
  *(_OWORD *)((char *)v86 + 11) = *(_OWORD *)&v99[11];
  sub_E6DE0();
  uint64_t v49 = v89;
  uint64_t v50 = v90;
  swift_bridgeObjectRelease();
  if (v48 == v49 && v47 == v50)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v51 = v80;
  }
  else
  {
    char v52 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v80;
    if ((v52 & 1) == 0)
    {
      uint64_t v61 = 1;
      v60 = v81;
      goto LABEL_16;
    }
  }
  *(void *)&long long v84 = sub_E6C30();
  sub_E67E0();
  v53 = v75;
  sub_E6960();
  swift_release();
  uint64_t v54 = sub_E6B10();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = v76;
  uint64_t v57 = (uint64_t)v74;
  uint64_t v58 = v77;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 16))(v74, v53, v77);
  v59 = (uint64_t *)(v57 + *(int *)(v51 + 36));
  uint64_t *v59 = KeyPath;
  v59[1] = v54;
  (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v53, v58);
  v60 = v81;
  sub_25CF8(v57, (uint64_t)v81, &qword_122B48);
  uint64_t v61 = 0;
LABEL_16:
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v60, v61, 1, v51);
  v62 = v82;
  sub_25B4C((uint64_t)v60, (uint64_t)v82, &qword_122B50);
  uint64_t v63 = (uint64_t)v78;
  _OWORD *v78 = v44;
  uint64_t v64 = v72;
  *(void *)(v63 + 16) = v45;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v71;
  *(void *)(v63 + 32) = v71;
  char v66 = v70;
  *(unsigned char *)(v63 + 40) = v70;
  *(void *)(v63 + 48) = 0;
  *(unsigned char *)(v63 + 56) = 1;
  uint64_t v67 = sub_10C7C(&qword_122B60);
  sub_25B4C((uint64_t)v62, v63 + *(int *)(v67 + 64), &qword_122B50);
  sub_25BB0(v44, *((uint64_t *)&v44 + 1), v45, v64, v65, v66);

  sub_25C28((uint64_t)v60, &qword_122B50);
  sub_25C28((uint64_t)v62, &qword_122B50);
  sub_25C84(v44, *((uint64_t *)&v44 + 1), v45, v64, v65, v66);
  uint64_t v68 = sub_10C7C(&qword_122B58);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v63, 0, 1, v68);
  return sub_25CF8(v63, v83, &qword_122B38);
}

uint64_t sub_1B8E8@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v60 = sub_10C7C(&qword_1228E0);
  uint64_t v58 = *(void *)(v60 - 8);
  uint64_t v3 = __chkstk_darwin(v60);
  v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v57 = (char *)&v52 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  char v66 = (char *)&v52 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v64 = (char *)&v52 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v52 - v12;
  __chkstk_darwin(v11);
  uint64_t v68 = a1;
  v69 = (char *)&v52 - v13;
  long long v14 = a1[3];
  long long v86 = a1[2];
  long long v87 = v14;
  long long v16 = a1[2];
  long long v15 = a1[3];
  v88[0] = a1[4];
  *(_OWORD *)((char *)v88 + 11) = *(_OWORD *)((char *)a1 + 75);
  long long v73 = v16;
  long long v74 = v15;
  v75[0] = a1[4];
  *(_OWORD *)((char *)v75 + 11) = *(_OWORD *)((char *)a1 + 75);
  uint64_t v67 = sub_10C7C(&qword_122880);
  sub_E6E10();
  uint64_t v17 = v76;
  unint64_t v18 = v77;
  uint64_t v19 = v79;
  unint64_t v62 = v78;
  uint64_t v63 = v76;
  unint64_t v20 = v80;
  uint64_t v21 = v81;
  uint64_t v56 = v82;
  char v22 = v83;
  char v23 = v84;
  char v24 = v85;
  swift_getKeyPath();
  uint64_t v76 = v17;
  unint64_t v77 = v18;
  unint64_t v78 = v62;
  uint64_t v79 = v19;
  unint64_t v80 = v20;
  uint64_t v81 = v21;
  uint64_t v82 = v56;
  char v83 = v22;
  char v84 = v23;
  char v85 = v24;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v72 = v68;
  uint64_t v63 = sub_10C7C(&qword_1228E8);
  unint64_t v62 = sub_1D9E0();
  sub_E6DD0();
  long long v73 = v86;
  long long v74 = v87;
  v75[0] = v88[0];
  *(_OWORD *)((char *)v75 + 11) = *(_OWORD *)((char *)v88 + 11);
  sub_E6E10();
  uint64_t v25 = v76;
  unint64_t v26 = v77;
  unint64_t v55 = v77;
  uint64_t v56 = v76;
  uint64_t v27 = v79;
  uint64_t v28 = v81;
  unint64_t v53 = v80;
  unint64_t v54 = v78;
  uint64_t v29 = v82;
  char v30 = v83;
  LOBYTE(v19) = v84;
  LOBYTE(v21) = v85;
  swift_getKeyPath();
  uint64_t v76 = v25;
  unint64_t v77 = v26;
  unint64_t v78 = v54;
  uint64_t v79 = v27;
  unint64_t v80 = v53;
  uint64_t v81 = v28;
  uint64_t v82 = v29;
  char v83 = v30;
  char v84 = v19;
  char v85 = v21;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v71 = v68;
  sub_E6DD0();
  long long v73 = v86;
  long long v74 = v87;
  v75[0] = v88[0];
  *(_OWORD *)((char *)v75 + 11) = *(_OWORD *)((char *)v88 + 11);
  sub_E6E10();
  uint64_t v31 = v76;
  unint64_t v32 = v77;
  uint64_t v33 = v79;
  unint64_t v55 = v78;
  uint64_t v56 = v76;
  uint64_t v34 = v81;
  unint64_t v54 = v80;
  uint64_t v35 = v82;
  char v36 = v83;
  LOBYTE(v28) = v84;
  char v37 = v85;
  swift_getKeyPath();
  uint64_t v76 = v31;
  unint64_t v77 = v32;
  unint64_t v78 = v55;
  uint64_t v79 = v33;
  unint64_t v80 = v54;
  uint64_t v81 = v34;
  uint64_t v82 = v35;
  char v83 = v36;
  char v84 = v28;
  char v85 = v37;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  int v70 = v68;
  uint64_t v38 = v64;
  sub_E6DD0();
  uint64_t v39 = v58;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v41 = v66;
  uint64_t v42 = v60;
  v40(v66, v69, v60);
  uint64_t v43 = v57;
  long long v44 = v65;
  v40(v57, v65, v42);
  uint64_t v45 = v59;
  v40(v59, v38, v42);
  long long v46 = v61;
  uint64_t v47 = v41;
  uint64_t v48 = v42;
  v40(v61, v47, v42);
  uint64_t v49 = sub_10C7C(&qword_122908);
  v40(&v46[*(int *)(v49 + 48)], v43, v48);
  v40(&v46[*(int *)(v49 + 64)], v45, v48);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v39 + 8);
  v50(v64, v48);
  v50(v44, v48);
  v50(v69, v48);
  v50(v45, v48);
  v50(v43, v48);
  return ((uint64_t (*)(char *, uint64_t))v50)(v66, v48);
}

uint64_t sub_1BEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = sub_10C7C(&qword_1228A8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C(&qword_1228E8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_B7108(a2, a3);
  uint64_t v25 = v14;
  sub_187B0();
  sub_E6CA0();
  uint64_t v15 = *(void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  sub_19100(v15, a1);
  char v16 = sub_1FB00(v15, a1);
  sub_19048(v15, a1);
  if (v16) {
    uint64_t v17 = sub_E6BF0();
  }
  else {
    uint64_t v17 = sub_E6C00();
  }
  uint64_t v18 = v17;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  unint64_t v20 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  uint64_t *v20 = KeyPath;
  v20[1] = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_25CF8((uint64_t)v13, v23, &qword_1228E8);
}

__n128 sub_1C0F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  long long v19 = a3[1];
  long long v20 = *a3;
  __n128 v18 = (__n128)a3[2];
  uint64_t v13 = *((void *)a3 + 6);
  char v14 = *((unsigned char *)a3 + 56) & 1;
  char v15 = *((unsigned char *)a3 + 57) & 1;
  char v16 = *((unsigned char *)a3 + 58) & 1;
  *(void *)a7 = swift_getKeyPath();
  *(unsigned char *)(a7 + 8) = 0;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(_OWORD *)(a7 + 32) = v20;
  *(_OWORD *)(a7 + 48) = v19;
  __n128 result = v18;
  *(__n128 *)(a7 + 64) = v18;
  *(void *)(a7 + 80) = v13;
  *(unsigned char *)(a7 + 88) = v14;
  *(unsigned char *)(a7 + 89) = v15;
  *(unsigned char *)(a7 + 90) = v16;
  *(void *)(a7 + 96) = a4;
  *(void *)(a7 + 104) = a5;
  *(void *)(a7 + 112) = a6;
  return result;
}

uint64_t sub_1C1C8()
{
  return sub_E6890();
}

double sub_1C288@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = v8;
  return result;
}

uint64_t sub_1C308()
{
  return sub_E6DF0();
}

uint64_t (*sub_1C370(void *a1))()
{
  long long v3 = malloc(0xE8uLL);
  *a1 = v3;
  long long v4 = v1[1];
  long long v5 = v1[2];
  *long long v3 = v4;
  v3[1] = v5;
  long long v6 = v1[3];
  v3[2] = v6;
  long long v7 = *(_OWORD *)((char *)v1 + 59);
  *(_OWORD *)((char *)v3 + 43) = v7;
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  *(_OWORD *)((char *)v3 + 107) = v7;
  sub_1DB48((uint64_t)v3);
  *((void *)v3 + 28) = sub_10C7C(&qword_122880);
  sub_E6DE0();
  return sub_1C418;
}

void sub_1C41C(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 22);
  uint64_t v4 = *((void *)*a1 + 23);
  uint64_t v5 = *((void *)v2 + 24);
  uint64_t v7 = *((void *)v2 + 25);
  uint64_t v6 = *((void *)v2 + 26);
  char v8 = v2[216];
  char v9 = v2[217];
  char v10 = v2[218];
  long long v11 = *((_OWORD *)v2 + 1);
  *((_OWORD *)v2 + 4) = *(_OWORD *)v2;
  *((_OWORD *)v2 + 5) = v11;
  *((_OWORD *)v2 + 6) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v2 + 107) = *(_OWORD *)(v2 + 43);
  *((void *)v2 + 16) = v3;
  *((void *)v2 + 17) = v4;
  *((void *)v2 + 18) = v5;
  *((void *)v2 + 19) = v7;
  *((void *)v2 + 20) = v6;
  v2[168] = v8;
  v2[169] = v9;
  v2[170] = v10;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_E6DF0();
    sub_1DBA0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    sub_1DBA0((uint64_t)v2);
  }

  free(v2);
}

double sub_1C508@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6E10();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 57) = v8;
  *(unsigned char *)(a1 + 58) = v9;
  return result;
}

uint64_t sub_1C590@<X0>(char *a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v59 = sub_10C7C(&qword_1228E0);
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v2 = __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v51 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v51 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v51 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v51 - v11;
  __chkstk_darwin(v10);
  uint64_t v67 = v1;
  uint64_t v68 = (char *)&v51 - v12;
  long long v13 = v1[2];
  long long v85 = v1[1];
  long long v86 = v13;
  long long v15 = v1[1];
  long long v14 = v1[2];
  v87[0] = v1[3];
  *(_OWORD *)((char *)v87 + 11) = *(_OWORD *)((char *)v1 + 59);
  long long v72 = v15;
  long long v73 = v14;
  v74[0] = v1[3];
  *(_OWORD *)((char *)v74 + 11) = *(_OWORD *)((char *)v1 + 59);
  uint64_t v66 = sub_10C7C(&qword_122880);
  sub_E6E10();
  uint64_t v16 = v75;
  unint64_t v17 = v76;
  uint64_t v18 = v78;
  unint64_t v61 = v77;
  uint64_t v62 = v75;
  unint64_t v19 = v79;
  uint64_t v20 = v80;
  uint64_t v55 = v81;
  char v21 = v82;
  char v22 = v83;
  char v23 = v84;
  swift_getKeyPath();
  uint64_t v75 = v16;
  unint64_t v76 = v17;
  unint64_t v77 = v61;
  uint64_t v78 = v18;
  unint64_t v79 = v19;
  uint64_t v80 = v20;
  uint64_t v81 = v55;
  char v82 = v21;
  char v83 = v22;
  char v84 = v23;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v71 = v67;
  uint64_t v62 = sub_10C7C(&qword_1228E8);
  unint64_t v61 = sub_1D9E0();
  sub_E6DD0();
  long long v72 = v85;
  long long v73 = v86;
  v74[0] = v87[0];
  *(_OWORD *)((char *)v74 + 11) = *(_OWORD *)((char *)v87 + 11);
  sub_E6E10();
  uint64_t v24 = v75;
  unint64_t v25 = v76;
  unint64_t v54 = v76;
  uint64_t v55 = v75;
  uint64_t v26 = v78;
  uint64_t v27 = v80;
  unint64_t v52 = v79;
  unint64_t v53 = v77;
  uint64_t v28 = v81;
  char v29 = v82;
  LOBYTE(v18) = v83;
  LOBYTE(v20) = v84;
  swift_getKeyPath();
  uint64_t v75 = v24;
  unint64_t v76 = v25;
  unint64_t v77 = v53;
  uint64_t v78 = v26;
  unint64_t v79 = v52;
  uint64_t v80 = v27;
  uint64_t v81 = v28;
  char v82 = v29;
  char v83 = v18;
  char v84 = v20;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  int v70 = v67;
  sub_E6DD0();
  long long v72 = v85;
  long long v73 = v86;
  v74[0] = v87[0];
  *(_OWORD *)((char *)v74 + 11) = *(_OWORD *)((char *)v87 + 11);
  sub_E6E10();
  uint64_t v30 = v75;
  unint64_t v31 = v76;
  uint64_t v32 = v78;
  unint64_t v54 = v77;
  uint64_t v55 = v75;
  uint64_t v33 = v80;
  unint64_t v53 = v79;
  uint64_t v34 = v81;
  char v35 = v82;
  LOBYTE(v27) = v83;
  char v36 = v84;
  swift_getKeyPath();
  uint64_t v75 = v30;
  unint64_t v76 = v31;
  unint64_t v77 = v54;
  uint64_t v78 = v32;
  unint64_t v79 = v53;
  uint64_t v80 = v33;
  uint64_t v81 = v34;
  char v82 = v35;
  char v83 = v27;
  char v84 = v36;
  sub_E6E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v69 = v67;
  char v37 = v63;
  sub_E6DD0();
  uint64_t v38 = v57;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v40 = v65;
  uint64_t v41 = v59;
  v39(v65, v68, v59);
  uint64_t v42 = v56;
  uint64_t v43 = v64;
  v39(v56, v64, v41);
  long long v44 = v58;
  v39(v58, v37, v41);
  uint64_t v45 = v60;
  long long v46 = v40;
  uint64_t v47 = v41;
  v39(v60, v46, v41);
  uint64_t v48 = sub_10C7C(&qword_122908);
  v39(&v45[*(int *)(v48 + 48)], v42, v47);
  v39(&v45[*(int *)(v48 + 64)], v44, v47);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  v49(v63, v47);
  v49(v43, v47);
  v49(v68, v47);
  v49(v44, v47);
  v49(v42, v47);
  return ((uint64_t (*)(char *, uint64_t))v49)(v65, v47);
}

uint64_t sub_1CB8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = sub_10C7C(&qword_1228A8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C(&qword_1228E8);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_B7108(a2, a3);
  uint64_t v25 = v14;
  sub_187B0();
  sub_E6CA0();
  uint64_t v15 = *(void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  sub_19100(v15, a1);
  char v16 = sub_1FB00(v15, a1);
  sub_19048(v15, a1);
  if (v16) {
    uint64_t v17 = sub_E6BF0();
  }
  else {
    uint64_t v17 = sub_E6C00();
  }
  uint64_t v18 = v17;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v20 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  uint64_t *v20 = KeyPath;
  v20[1] = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_25CF8((uint64_t)v13, v23, &qword_1228E8);
}

__n128 sub_1CD94@<Q0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  __n128 v8 = (__n128)a1[2];
  uint64_t v3 = *((void *)a1 + 6);
  char v4 = *((unsigned char *)a1 + 56) & 1;
  char v5 = *((unsigned char *)a1 + 57) & 1;
  char v6 = *((unsigned char *)a1 + 58) & 1;
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 32) = v9;
  __n128 result = v8;
  *(__n128 *)(a2 + 48) = v8;
  *(void *)(a2 + 64) = v3;
  *(unsigned char *)(a2 + 72) = v4;
  *(unsigned char *)(a2 + 73) = v5;
  *(unsigned char *)(a2 + 74) = v6;
  return result;
}

uint64_t sub_1CE3C@<X0>(char *a1@<X8>)
{
  return sub_1C590(a1);
}

double sub_1CE80@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = v8;
  return result;
}

uint64_t sub_1CF00()
{
  return sub_E6DF0();
}

void (*sub_1CF68(void *a1))(char **a1, char a2)
{
  long long v3 = (char *)malloc(0xF0uLL);
  *a1 = v3;
  *((void *)v3 + 28) = v1;
  long long v4 = *v1;
  long long v5 = v1[1];
  *(_OWORD *)long long v3 = *v1;
  *((_OWORD *)v3 + 1) = v5;
  long long v6 = v1[2];
  *((_OWORD *)v3 + 2) = v6;
  long long v7 = *(long long *)((char *)v1 + 43);
  *(_OWORD *)(v3 + 43) = v7;
  *((_OWORD *)v3 + 4) = v4;
  *((_OWORD *)v3 + 5) = v5;
  *((_OWORD *)v3 + 6) = v6;
  *(_OWORD *)(v3 + 107) = v7;
  sub_1DB48((uint64_t)v1);
  *((void *)v3 + 29) = sub_10C7C(&qword_122880);
  sub_E6DE0();
  return sub_1D018;
}

void sub_1D018(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 22);
  uint64_t v4 = *((void *)*a1 + 23);
  uint64_t v5 = *((void *)v2 + 24);
  uint64_t v7 = *((void *)v2 + 25);
  uint64_t v6 = *((void *)v2 + 26);
  char v8 = v2[216];
  char v9 = v2[217];
  char v10 = v2[218];
  uint64_t v11 = *((void *)v2 + 28);
  long long v12 = *((_OWORD *)v2 + 1);
  *((_OWORD *)v2 + 4) = *(_OWORD *)v2;
  *((_OWORD *)v2 + 5) = v12;
  *((_OWORD *)v2 + 6) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v2 + 107) = *(_OWORD *)(v2 + 43);
  *((void *)v2 + 16) = v3;
  *((void *)v2 + 17) = v4;
  *((void *)v2 + 18) = v5;
  *((void *)v2 + 19) = v7;
  *((void *)v2 + 20) = v6;
  v2[168] = v8;
  v2[169] = v9;
  v2[170] = v10;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_E6DF0();
    sub_1DBA0(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    sub_1DBA0(v11);
  }

  free(v2);
}

double sub_1D104@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6E10();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 57) = v8;
  *(unsigned char *)(a1 + 58) = v9;
  return result;
}

double sub_1D18C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_E65E0();
  sub_10C7C(&qword_122880);
  sub_E6E10();
  uint64_t KeyPath = swift_getKeyPath();
  char v4 = sub_E6770();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = KeyPath;
  *(unsigned char *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 72) = v8;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 97) = v11;
  *(unsigned char *)(a1 + 98) = v12;
  *(unsigned char *)(a1 + 104) = v4;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(unsigned char *)(a1 + 144) = 1;
  return result;
}

__n128 sub_1D298@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56) & 1;
  char v7 = *(unsigned char *)(a1 + 57) & 1;
  char v8 = *(unsigned char *)(a1 + 58) & 1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 56) = v6;
  *(unsigned char *)(a2 + 57) = v7;
  *(unsigned char *)(a2 + 58) = v8;
  return result;
}

uint64_t sub_1D2E0()
{
  return sub_E69D0();
}

double sub_1D2FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_E65E0();
  sub_10C7C(&qword_122880);
  sub_E6E10();
  uint64_t KeyPath = swift_getKeyPath();
  char v4 = sub_E6770();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = KeyPath;
  *(unsigned char *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 72) = v8;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 97) = v11;
  *(unsigned char *)(a1 + 98) = v12;
  *(unsigned char *)(a1 + 104) = v4;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(unsigned char *)(a1 + 144) = 1;
  return result;
}

double sub_1D43C@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = v8;
  return result;
}

uint64_t sub_1D4BC()
{
  return sub_E6DF0();
}

void (*sub_1D524(void *a1))(char **, char)
{
  long long v3 = malloc(0xE8uLL);
  *a1 = v3;
  long long v4 = v1[1];
  long long v5 = v1[2];
  *long long v3 = v4;
  v3[1] = v5;
  long long v6 = v1[3];
  v3[2] = v6;
  long long v7 = *(_OWORD *)((char *)v1 + 59);
  *(_OWORD *)((char *)v3 + 43) = v7;
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  *(_OWORD *)((char *)v3 + 107) = v7;
  sub_1DB48((uint64_t)v3);
  *((void *)v3 + 28) = sub_10C7C(&qword_122880);
  sub_E6DE0();
  return sub_1D5CC;
}

double sub_1D5D0@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6E10();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 57) = v8;
  *(unsigned char *)(a1 + 58) = v9;
  return result;
}

uint64_t sub_1D658()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D660()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_1D6B0()
{
  return sub_E6DF0();
}

uint64_t (*sub_1D704(void *a1))()
{
  long long v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[13];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *long long v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_18B1C((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_1D7B8;
}

void sub_1D7BC(char **a1, char a2)
{
  uint64_t v2 = *a1;
  *((void *)v2 + 5) = *((void *)*a1 + 3);
  *(void *)uint64_t v2 = *((void *)v2 + 7);
  *(_OWORD *)(v2 + 8) = *((_OWORD *)v2 + 4);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 48));
    swift_release();
    sub_18B74((uint64_t)(v2 + 32));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 48));
    swift_release();
    sub_18B74((uint64_t)(v2 + 32));
  }

  free(v2);
}

uint64_t sub_1D89C()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_1D8F4()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_1D938@<X0>(uint64_t a1@<X8>)
{
  return sub_19AD4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1D940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D988@<X0>(char *a1@<X8>)
{
  return sub_1A584(*(void *)(v1 + 16), a1);
}

uint64_t sub_1D990@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB8C(*(void *)(v1 + 16), 0xD000000000000019, (void *)0x80000000000F1780, a1);
}

unint64_t sub_1D9E0()
{
  unint64_t result = qword_1228F0;
  if (!qword_1228F0)
  {
    sub_11B60(&qword_1228E8);
    sub_25790(&qword_1228B0, &qword_1228A8);
    sub_25790(&qword_1228F8, &qword_122900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1228F0);
  }
  return result;
}

uint64_t sub_1DAA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB8C(*(void *)(v1 + 16), 0xD000000000000017, (void *)0x80000000000F1740, a1);
}

uint64_t sub_1DAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB8C(*(void *)(v1 + 16), 0x4958415F50415753, (void *)0xEF454C5449545F53, a1);
}

uint64_t sub_1DB48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DBA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DBF4()
{
  return 0;
}

BOOL sub_1DBFC()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  return v1 == 0;
}

uint64_t sub_1DC58@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_E65D0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = a1 + *(int *)(sub_10C7C(&qword_122910) + 44);
  *(void *)uint64_t v3 = sub_E6560();
  *(void *)(v3 + 8) = 0;
  *(unsigned char *)(v3 + 16) = 1;
  uint64_t v4 = sub_10C7C(&qword_122918);
  return sub_1DCCC(v1, v3 + *(int *)(v4 + 44));
}

uint64_t sub_1DCCC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v161 = a2;
  v162 = a1;
  uint64_t v134 = sub_10C7C(&qword_1229D8);
  __chkstk_darwin(v134);
  v133 = &v131[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10C7C(&qword_1229E0);
  uint64_t v136 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v135 = &v131[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v144 = sub_10C7C(&qword_1229E8);
  __chkstk_darwin(v144);
  v147 = &v131[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_E6730();
  uint64_t v139 = *(void *)(v6 - 8);
  uint64_t v140 = v6;
  __chkstk_darwin(v6);
  v138 = (uint64_t *)&v131[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v146 = sub_10C7C(&qword_1229F0);
  uint64_t v142 = *(void *)(v146 - 8);
  uint64_t v8 = __chkstk_darwin(v146);
  v137 = &v131[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v141 = (ValueMetadata *)&v131[-v10];
  uint64_t v11 = sub_10C7C(&qword_1229F8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v145 = &v131[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10C7C(&qword_122A00);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = &v131[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  unint64_t v19 = &v131[-v18];
  uint64_t v20 = sub_10C7C(&qword_122A08);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = &v131[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v25 = &v131[-v24];
  id v143 = self;
  id v26 = [v143 currentDevice];
  id v27 = [v26 userInterfaceIdiom];

  uint64_t v28 = v162;
  uint64_t v148 = v3;
  v159 = v23;
  uint64_t v160 = v12;
  v158 = v25;
  if (v27)
  {
    v155 = v19;
    uint64_t v156 = v11;
    v157 = v17;
    long long v29 = v162[2];
    long long v180 = v162[1];
    long long v181 = v29;
    v182[0] = v162[3];
    *(_OWORD *)((char *)v182 + 11) = *(_OWORD *)((char *)v162 + 59);
    uint64_t v153 = sub_10C7C(&qword_122880);
    sub_E6E10();
    long long v30 = v169;
    v154 = (unsigned char *)v169;
    uint64_t v31 = *((void *)&v170 + 1);
    long long v32 = v171[0];
    v151 = *(unsigned char **)&v171[1];
    v152 = (ValueMetadata **)v170;
    LODWORD(v150) = BYTE8(v171[1]);
    char v33 = BYTE9(v171[1]);
    LODWORD(v149) = BYTE10(v171[1]);
    swift_getKeyPath();
    long long v169 = v30;
    *(void *)&long long v170 = v152;
    *((void *)&v170 + 1) = v31;
    v171[0] = v32;
    *(void *)&v171[1] = v151;
    BYTE8(v171[1]) = (_BYTE)v150;
    BYTE9(v171[1]) = v33;
    BYTE10(v171[1]) = v149;
    sub_E6E00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v34 = swift_release();
    long long v35 = v166;
    uint64_t v36 = *((void *)&v167 + 1);
    __chkstk_darwin(v34);
    v152 = &v127;
    v129 = v28;
    long long v163 = v35;
    uint64_t v164 = v37;
    uint64_t v165 = v36;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v151 = (unsigned char *)sub_E6560();
    uint64_t v38 = *((void *)v28 + 10);
    long long v39 = v28[2];
    long long v169 = v28[1];
    long long v170 = v39;
    v171[0] = v28[3];
    *(_OWORD *)((char *)v171 + 11) = *(_OWORD *)((char *)v28 + 59);
    sub_10C7C(&qword_122880);
    sub_E6DE0();
    long long v40 = v180;
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v38 + 16);
    uint64_t v153 = v35;
    v154 = v131;
    if (v41 && (unint64_t v42 = sub_21CB8(v40, *((uint64_t *)&v40 + 1)), (v43 & 1) != 0))
    {
      id v44 = *(id *)(*(void *)(v38 + 56) + 8 * v42);
      swift_bridgeObjectRelease();
      id v45 = [v44 sfSymbolsName];
      sub_E7110();

      uint64_t v46 = sub_E6C30();
      id v47 = [v44 localizedName];
      uint64_t v48 = sub_E7110();
      uint64_t v50 = v49;

      *(void *)&long long v169 = v48;
      *((void *)&v169 + 1) = v50;
      sub_187B0();
      uint64_t v51 = sub_E6920();
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v57 = v56 & 1;
      swift_retain();
      sub_18804(v51, v53, v57);
      swift_bridgeObjectRetain();

      sub_18814(v51, v53, v57);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = 0;
      uint64_t v51 = 0;
      uint64_t v53 = 0;
      uint64_t v57 = 0;
      uint64_t v55 = 0;
    }
    long long v169 = (unint64_t)v151;
    LOBYTE(v170) = 1;
    *((void *)&v170 + 1) = v46;
    *(void *)&v171[0] = v51;
    *((void *)&v171[0] + 1) = v53;
    *(void *)&v171[1] = v57;
    *((void *)&v171[1] + 1) = v55;
    sub_10C7C(&qword_122A10);
    sub_10C7C(&qword_122A18);
    sub_25790(&qword_122A20, &qword_122A10);
    unint64_t v58 = sub_24000();
    v129 = &protocol witness table for String;
    v130 = (_OWORD *)v58;
    uint64_t v59 = (uint64_t)v158;
    sub_E6DB0();
    uint64_t v60 = v59;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v61 = sub_10C7C(&qword_122A40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v59, 0, 1, v61);
    uint64_t v11 = v156;
    uint64_t v17 = v157;
    unint64_t v19 = v155;
    uint64_t v62 = v162;
  }
  else
  {
    uint64_t v63 = sub_10C7C(&qword_122A40);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v25, 1, 1, v63);
    uint64_t v60 = (uint64_t)v25;
    uint64_t v62 = v28;
  }
  long long v64 = v62[2];
  long long v166 = v62[1];
  long long v167 = v64;
  long long v66 = v62[1];
  long long v65 = v62[2];
  v168[0] = v62[3];
  *(_OWORD *)((char *)v168 + 11) = *(_OWORD *)((char *)v62 + 59);
  uint64_t v67 = *((void *)v62 + 10);
  long long v169 = v66;
  long long v170 = v65;
  v171[0] = v62[3];
  *(_OWORD *)((char *)v171 + 11) = *(_OWORD *)((char *)v62 + 59);
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  long long v68 = v180;
  swift_bridgeObjectRelease();
  if (!*(void *)(v67 + 16) || (unint64_t v69 = sub_21CB8(v68, *((uint64_t *)&v68 + 1)), (v70 & 1) == 0))
  {
    uint64_t v99 = (uint64_t)v159;
    uint64_t v98 = v160;
LABEL_16:
    uint64_t v100 = v161;
    swift_bridgeObjectRelease();
    uint64_t v101 = 1;
    goto LABEL_17;
  }
  uint64_t v71 = (ValueMetadata *)*(id *)(*(void *)(v67 + 56) + 8 * v69);
  swift_bridgeObjectRelease();
  long long v169 = v166;
  long long v170 = v167;
  v171[0] = v168[0];
  *(_OWORD *)((char *)v171 + 11) = *(_OWORD *)((char *)v168 + 11);
  sub_E6DE0();
  long long v72 = v181;
  swift_bridgeObjectRelease();
  if (!*(void *)(v67 + 16) || (unint64_t v73 = sub_21CB8(v72, *((uint64_t *)&v72 + 1)), (v74 & 1) == 0))
  {

    uint64_t v99 = (uint64_t)v159;
    uint64_t v98 = v160;
    uint64_t v60 = (uint64_t)v158;
    goto LABEL_16;
  }
  v155 = v19;
  uint64_t v156 = v11;
  v157 = v17;
  uint64_t v75 = *(id *)(*(void *)(v67 + 56) + 8 * v73);
  swift_bridgeObjectRelease();
  id v76 = [v143 currentDevice];
  id v77 = [v76 userInterfaceIdiom];

  v154 = v75;
  if (v77)
  {
    unint64_t v79 = v162;
    long long v180 = v162[7];
    long long v163 = v162[7];
    uint64_t v80 = v71;
    id v143 = v80;
    sub_10C7C(&qword_122A50);
    sub_E6D40();
    uint64_t v136 = *((void *)&v169 + 1);
    uint64_t v81 = v169;
    uint64_t v149 = v169;
    LODWORD(v150) = v170;
    long long v163 = v180;
    sub_E6D40();
    v152 = (ValueMetadata **)*((void *)&v169 + 1);
    uint64_t v153 = v169;
    LODWORD(v151) = v170;
    char v82 = (_OWORD *)swift_allocObject();
    long long v83 = v79[5];
    v82[5] = v79[4];
    v82[6] = v83;
    long long v84 = v79[7];
    v82[7] = v79[6];
    v82[8] = v84;
    long long v85 = v79[1];
    v82[1] = *v79;
    v82[2] = v85;
    long long v86 = v79[3];
    v82[3] = v79[2];
    v82[4] = v86;
    sub_24124((uint64_t)v79);
    uint64_t v87 = sub_E6D60();
    uint64_t v89 = v138;
    uint64_t v88 = v139;
    uint64_t *v138 = v87;
    uint64_t v90 = v140;
    (*(void (**)(uint64_t *, void, uint64_t))(v88 + 104))(v89, enum case for PopoverAttachmentAnchor.rect(_:), v140);
    *(void *)&long long v169 = v80;
    *((void *)&v169 + 1) = v81;
    *(void *)&long long v170 = v136;
    BYTE8(v170) = (_BYTE)v150;
    sub_E67B0();
    unint64_t v91 = sub_1FDFC();
    v150 = (unsigned char *)v91;
    v162 = (_OWORD *)sub_1FE50();
    v129 = (void *)v91;
    v130 = v162;
    v127 = &type metadata for GCSDpadInfoButton;
    v128 = &type metadata for GCSDpadDetailView;
    char v92 = v137;
    sub_E69A0();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v88 + 8))(v89, v90);
    swift_release();
    id v93 = v143;

    swift_release();
    long long v95 = v141;
    uint64_t v94 = v142;
    uint64_t v96 = v146;
    (*(void (**)(ValueMetadata *, unsigned char *, uint64_t))(v142 + 32))(v141, v92, v146);
    (*(void (**)(unsigned char *, ValueMetadata *, uint64_t))(v94 + 16))(v147, v95, v96);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v169 = &type metadata for GCSDpadInfoButton;
    *((void *)&v169 + 1) = &type metadata for GCSDpadDetailView;
    *(void *)&long long v170 = v150;
    *((void *)&v170 + 1) = v162;
    swift_getOpaqueTypeConformance2();
    sub_25790(&qword_122A58, &qword_1229E0);
    uint64_t v97 = (uint64_t)v145;
    sub_E6610();

    (*(void (**)(ValueMetadata *, uint64_t))(v94 + 8))(v95, v96);
  }
  else
  {
    v151 = v131;
    v104 = v162;
    __chkstk_darwin(v78);
    v150 = &v131[-48];
    v127 = v71;
    v128 = (ValueMetadata *)v104;
    v129 = v75;
    uint64_t v153 = *((void *)v104 + 10);
    long long v106 = v105[1];
    long long v180 = *v105;
    long long v181 = v106;
    v182[0] = v105[2];
    *(_OWORD *)((char *)v182 + 11) = *(long long *)((char *)v105 + 43);
    v141 = v71;
    swift_bridgeObjectRetain();
    sub_10C7C(&qword_122880);
    sub_E6E10();
    unint64_t v107 = *((void *)&v169 + 1);
    uint64_t v142 = *((void *)&v169 + 1);
    unint64_t v108 = v169;
    uint64_t v149 = v169;
    v152 = (ValueMetadata **)*((void *)&v170 + 1);
    uint64_t v109 = *((void *)&v171[0] + 1);
    uint64_t v139 = *(void *)&v171[0];
    uint64_t v140 = v170;
    v138 = *(uint64_t **)&v171[1];
    LODWORD(v137) = BYTE8(v171[1]);
    int v132 = BYTE9(v171[1]);
    char v110 = BYTE10(v171[1]);
    long long v180 = *(_OWORD *)((char *)v104 + 88);
    *(void *)&long long v181 = *((void *)v104 + 13);
    sub_10C7C(&qword_122848);
    sub_E6E10();
    long long v111 = v169;
    v162 = (_OWORD *)v169;
    uint64_t v112 = v170;
    id v143 = (id)v170;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v169 = KeyPath;
    BYTE8(v169) = 0;
    *(void *)&long long v170 = v141;
    *((void *)&v170 + 1) = v153;
    v171[0] = __PAIR128__(v107, v108);
    *(void *)&v171[1] = v140;
    *((void *)&v171[1] + 1) = v152;
    uint64_t v172 = v139;
    uint64_t v173 = v109;
    v174 = v138;
    char v175 = (char)v137;
    char v176 = v132;
    char v177 = v110;
    long long v178 = v111;
    uint64_t v179 = v112;
    v114 = v141;
    id v115 = [(ValueMetadata *)v141 localizedName];
    uint64_t v116 = sub_E7110();
    uint64_t v118 = v117;

    *(void *)&long long v180 = v116;
    *((void *)&v180 + 1) = v118;
    unint64_t v119 = sub_248E8();
    unint64_t v120 = sub_187B0();
    sub_E69E0();
    swift_bridgeObjectRelease();
    sub_19048(KeyPath, 0);

    v121 = v114;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_10C7C(&qword_122A60);
    sub_25790(&qword_122A68, &qword_122A60);
    *(void *)&long long v169 = &type metadata for GCSDpadCustomPickerView;
    *((void *)&v169 + 1) = &type metadata for String;
    *(void *)&long long v170 = v119;
    *((void *)&v170 + 1) = v120;
    swift_getOpaqueTypeConformance2();
    v122 = v135;
    sub_E6300();
    uint64_t v123 = v136;
    uint64_t v124 = v148;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v136 + 16))(v147, v122, v148);
    swift_storeEnumTagMultiPayload();
    unint64_t v125 = sub_1FDFC();
    unint64_t v126 = sub_1FE50();
    *(void *)&long long v169 = &type metadata for GCSDpadInfoButton;
    *((void *)&v169 + 1) = &type metadata for GCSDpadDetailView;
    *(void *)&long long v170 = v125;
    *((void *)&v170 + 1) = v126;
    swift_getOpaqueTypeConformance2();
    sub_25790(&qword_122A58, &qword_1229E0);
    uint64_t v97 = (uint64_t)v145;
    sub_E6610();

    (*(void (**)(unsigned char *, uint64_t))(v123 + 8))(v122, v124);
  }
  unint64_t v19 = v155;
  sub_25CF8(v97, (uint64_t)v155, &qword_1229F8);
  uint64_t v101 = 0;
  uint64_t v98 = v160;
  uint64_t v100 = v161;
  uint64_t v11 = v156;
  uint64_t v17 = v157;
  uint64_t v60 = (uint64_t)v158;
  uint64_t v99 = (uint64_t)v159;
LABEL_17:
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v19, v101, 1, v11);
  sub_25B4C(v60, v99, &qword_122A08);
  sub_25B4C((uint64_t)v19, (uint64_t)v17, &qword_122A00);
  sub_25B4C(v99, v100, &qword_122A08);
  uint64_t v102 = sub_10C7C(&qword_122A48);
  sub_25B4C((uint64_t)v17, v100 + *(int *)(v102 + 48), &qword_122A00);
  sub_25C28((uint64_t)v19, &qword_122A00);
  sub_25C28(v60, &qword_122A08);
  sub_25C28((uint64_t)v17, &qword_122A00);
  return sub_25C28(v99, &qword_122A08);
}

uint64_t sub_1EE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_122A18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_OWORD *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 104);
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t v8 = v20[0];
  uint64_t v9 = v20[1];
  uint64_t v10 = v20[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1FF10((uint64_t)v8, (uint64_t)v9, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v20[0] = v11;
  sub_1FEA4(v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  long long v14 = *(_OWORD *)(a1 + 112);
  v12[7] = *(_OWORD *)(a1 + 96);
  v12[8] = v14;
  long long v15 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  v12[2] = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v16;
  sub_24124(a1);
  sub_10C7C(&qword_122A88);
  sub_10C7C(&qword_122A38);
  sub_25790(&qword_122A90, &qword_122A88);
  sub_25790(&qword_122A30, &qword_122A38);
  sub_2346C(&qword_122878, &qword_122880, (void (*)(void))sub_1922C);
  sub_E6EC0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1F0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 32);
  long long v85 = *(_OWORD *)(v1 + 16);
  long long v86 = v4;
  *(_OWORD *)uint64_t v87 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)&v87[11] = *(_OWORD *)(v1 + 59);
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    unint64_t v5 = sub_21CB8(v69, v70);
    if (v6)
    {
      uint64_t v7 = (long long *)(v1 + 16);
      id v8 = *(id *)(*(void *)(v3 + 56) + 8 * v5);
      swift_bridgeObjectRelease();
      long long v9 = *(_OWORD *)(v1 + 32);
      long long v85 = *(_OWORD *)(v1 + 16);
      long long v86 = v9;
      *(_OWORD *)uint64_t v87 = *(_OWORD *)(v1 + 48);
      *(_OWORD *)&v87[11] = *(_OWORD *)(v1 + 59);
      sub_E6DE0();
      swift_bridgeObjectRelease();
      if (*(void *)(v3 + 16))
      {
        unint64_t v10 = sub_21CB8(v71, v72);
        if (v11)
        {
          id v63 = *(id *)(*(void *)(v3 + 56) + 8 * v10);
          swift_bridgeObjectRelease();
          uint64_t v62 = sub_E6560();
          id v12 = [v8 sfSymbolsName];
          sub_E7110();

          uint64_t v65 = sub_E6C30();
          id v13 = [v8 localizedName];
          uint64_t v14 = sub_E7110();
          uint64_t v16 = v15;

          *(void *)&long long v85 = v14;
          *((void *)&v85 + 1) = v16;
          sub_187B0();
          uint64_t v17 = sub_E6920();
          uint64_t v59 = v18;
          uint64_t v60 = v17;
          char v58 = v19;
          uint64_t v64 = v20;
          long long v21 = v7[1];
          long long v85 = *v7;
          long long v86 = v21;
          *(_OWORD *)uint64_t v87 = v7[2];
          *(_OWORD *)&v87[11] = *(long long *)((char *)v7 + 43);
          sub_10C7C(&qword_122880);
          sub_E6DE0();
          swift_bridgeObjectRelease();
          long long v22 = v7[1];
          long long v85 = *v7;
          long long v86 = v22;
          *(_OWORD *)uint64_t v87 = v7[2];
          *(_OWORD *)&v87[11] = *(long long *)((char *)v7 + 43);
          sub_E6DE0();
          swift_bridgeObjectRelease();
          uint64_t v61 = v8;
          uint64_t v57 = a1;
          if (v71 == v69 && v72 == v70)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v24 = sub_E7620();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v24 & 1) == 0)
            {
              id v38 = [v63 sfSymbolsName];
              sub_E7110();

              uint64_t v39 = sub_E6C30();
              unsigned int v40 = sub_E6720();
              id v41 = [v63 localizedName];
              int v42 = (unint64_t)sub_E7110() >> 32;
              uint64_t v44 = v43;

              DWORD1(v85) = v42;
              *((void *)&v85 + 1) = v44;
              uint64_t v45 = sub_E6920();
              uint64_t v47 = v46;
              LOBYTE(v38) = v48 & 1;
              LODWORD(v85) = sub_E6720();
              uint64_t v49 = sub_E68F0();
              uint64_t v51 = v50;
              uint64_t v53 = v52;
              uint64_t v55 = v54 & 1;
              sub_18814(v45, v47, (char)v38);
              swift_bridgeObjectRelease();
              swift_retain();
              sub_18804(v49, v51, v55);
              swift_bridgeObjectRetain();
              swift_retain();
              sub_18804(v49, v51, v55);
              swift_bridgeObjectRetain();
              sub_18814(v49, v51, v55);
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v69 = v39;
              uint64_t v70 = v40;
              uint64_t v71 = v49;
              uint64_t v72 = v51;
              uint64_t v73 = v55;
              uint64_t v74 = v53;
              char v75 = 1;
              sub_10C7C(&qword_1229C8);
              sub_25790(&qword_1229D0, &qword_1229C8);
              sub_E6610();
              sub_18814(v49, v51, v55);
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_14;
            }
          }
          DWORD1(v85) = (unint64_t)sub_B7108(0xD000000000000011, (void *)0x80000000000F1700) >> 32;
          *((void *)&v85 + 1) = v25;
          uint64_t v26 = sub_E6920();
          uint64_t v28 = v27;
          char v30 = v29 & 1;
          LODWORD(v85) = sub_E6720();
          uint64_t v31 = sub_E68F0();
          uint64_t v33 = v32;
          uint64_t v35 = v34;
          uint64_t v37 = v36 & 1;
          sub_18814(v26, v28, v30);
          swift_bridgeObjectRelease();
          uint64_t v69 = v31;
          uint64_t v70 = v33;
          uint64_t v71 = v37;
          uint64_t v72 = v35;
          uint64_t v73 = 0;
          uint64_t v74 = 0;
          char v75 = 0;
          sub_10C7C(&qword_1229C8);
          sub_25790(&qword_1229D0, &qword_1229C8);
          sub_E6610();
LABEL_14:
          long long v56 = v85;
          LOBYTE(v85) = v58 & 1;
          v68[0] = v87[16];
          swift_retain();
          sub_18804(v60, v59, v58 & 1);
          swift_bridgeObjectRetain();
          sub_23F18(v56, *((uint64_t *)&v56 + 1), v86, *((uint64_t *)&v86 + 1), v87[0], *(uint64_t *)&v87[8], v87[16]);
          sub_23F88(v56, *((uint64_t *)&v56 + 1), v86, *((uint64_t *)&v86 + 1), v87[0], *(uint64_t *)&v87[8], v87[16]);
          sub_18814(v60, v59, v58 & 1);

          swift_bridgeObjectRelease();
          swift_release();
          *(_DWORD *)((char *)&v71 + 1) = *(_DWORD *)v68;
          HIDWORD(v71) = *(_DWORD *)&v68[3];
          *(_DWORD *)&v76[3] = *(_DWORD *)&v67[3];
          *(_DWORD *)id v76 = *(_DWORD *)v67;
          *(_DWORD *)&v80[3] = *(_DWORD *)&v66[3];
          *(_DWORD *)uint64_t v80 = *(_DWORD *)v66;
          uint64_t v69 = v62;
          uint64_t v70 = 0;
          LOBYTE(v71) = 1;
          uint64_t v72 = v65;
          uint64_t v73 = v60;
          uint64_t v74 = v59;
          char v75 = v58 & 1;
          uint64_t v77 = v64;
          uint64_t v78 = 0x402E000000000000;
          char v79 = 0;
          long long v81 = v56;
          long long v82 = v86;
          long long v83 = *(_OWORD *)v87;
          char v84 = v87[16];
          nullsub_8(&v69);
          sub_25CF8((uint64_t)&v69, (uint64_t)&v85, &qword_122930);
          a1 = v57;
          return sub_25CF8((uint64_t)&v85, a1, &qword_122930);
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_21D30((uint64_t)&v69);
  sub_25CF8((uint64_t)&v69, (uint64_t)&v85, &qword_122930);
  return sub_25CF8((uint64_t)&v85, a1, &qword_122930);
}

uint64_t sub_1F818()
{
  uint64_t v1 = sub_10C7C(&qword_122938);
  __chkstk_darwin(v1);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = sub_10C7C(&qword_122940);
  __chkstk_darwin(v4);
  char v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = *(void *)v0;
  char v8 = *(unsigned char *)(v0 + 8);
  sub_19100(*(void *)v0, v8);
  char v9 = sub_1FB00(v7, v8);
  sub_19048(v7, v8);
  if (v9)
  {
    *(void *)char v6 = sub_E65D0();
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    unint64_t v10 = &v6[*(int *)(sub_10C7C(&qword_122910) + 44)];
    *(void *)unint64_t v10 = sub_E6560();
    *((void *)v10 + 1) = 0;
    v10[16] = 1;
    uint64_t v11 = sub_10C7C(&qword_122918);
    sub_1DCCC((_OWORD *)v0, (uint64_t)&v10[*(int *)(v11 + 44)]);
    sub_25B4C((uint64_t)v6, (uint64_t)v3, &qword_122940);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_122930);
    sub_25790(&qword_122948, &qword_122940);
    sub_21D50();
    sub_E6610();
    return sub_25C28((uint64_t)v6, &qword_122940);
  }
  else
  {
    sub_1F0E4((uint64_t)v14);
    sub_25CF8((uint64_t)v14, (uint64_t)v15, &qword_122930);
    sub_25CF8((uint64_t)v15, (uint64_t)v3, &qword_122930);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_122930);
    sub_25790(&qword_122948, &qword_122940);
    sub_21D50();
    return sub_E6610();
  }
}

uint64_t sub_1FAB4()
{
  return sub_1F818();
}

uint64_t sub_1FB00(uint64_t a1, char a2)
{
  uint64_t v4 = sub_E6530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_E7310();
  char v9 = sub_E6740();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v10 + 4) = sub_23A0C(1819242306, 0xE400000000000000, &v12);
    _os_log_impl(&dword_0, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_E6520();
  swift_getAtKeyPath();
  sub_19048(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_1FCD8()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_1FD6C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1FDFC()
{
  unint64_t result = qword_122920;
  if (!qword_122920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122920);
  }
  return result;
}

unint64_t sub_1FE50()
{
  unint64_t result = qword_122928;
  if (!qword_122928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122928);
  }
  return result;
}

uint64_t sub_1FEA4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25374(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_2001C(v5);
  *a1 = v2;
  return result;
}

void *sub_1FF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25388();
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6;
  if (v6 <= 0)
  {
    os_log_type_t v8 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10C7C(&qword_122AB0);
    os_log_type_t v8 = (void *)swift_allocObject();
    int64_t v9 = j__malloc_size(v8);
    uint64_t v10 = v9 - 32;
    if (v9 < 32) {
      uint64_t v10 = v9 + 31;
    }
    v8[2] = v7;
    v8[3] = 2 * (v10 >> 6);
  }
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25168(&v13, (uint64_t)(v8 + 4), v7, a1, a2, a3);
  swift_release();
  swift_release();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v11 == v7) {
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2001C(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  uint64_t result = sub_E75F0(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_135;
    }
    if (v4) {
      return sub_20F9C(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_134;
  }
  uint64_t v107 = result;
  v104 = a1;
  if (v4 > 1)
  {
    uint64_t v7 = v6 >> 1;
    sub_10C7C(&qword_122880);
    uint64_t result = sub_E7250();
    *(void *)(result + 16) = v7;
    long long v106 = (void *)result;
    v113 = (char *)(result + 32);
LABEL_12:
    Swift::Int v9 = 0;
    uint64_t v105 = *a1 + 96;
    uint64_t v103 = *a1 + 58;
    os_log_type_t v8 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v110 = v4;
    uint64_t v114 = *a1;
    while (1)
    {
      Swift::Int v11 = v9;
      Swift::Int v12 = v9 + 1;
      Swift::Int v111 = v9;
      if (v9 + 1 < v4)
      {
        unint64_t v108 = v8;
        swift_getKeyPath();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_10C7C(&qword_122880);
        sub_E6E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        sub_10C7C(&qword_122AB8);
        sub_E6DE0();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_E6E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        sub_E6DE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        Swift::Int v11 = v111;
        swift_bridgeObjectRelease();
        Swift::Int v4 = v110;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        Swift::Int v12 = v111 + 2;
        if (v111 + 2 < v110)
        {
          uint64_t v13 = v105 + (v111 << 6);
          while (1)
          {
            Swift::Int v115 = v12;
            swift_getKeyPath();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_E6E00();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            sub_E6DE0();
            swift_release();
            swift_release();
            swift_getKeyPath();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_E6E00();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            sub_E6DE0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            uint64_t result = swift_release();
            if (v120 < v119 == v120 >= v119) {
              break;
            }
            ++v12;
            v13 += 64;
            Swift::Int v4 = v110;
            if (v110 == v115 + 1)
            {
              Swift::Int v12 = v110;
              goto LABEL_22;
            }
          }
          Swift::Int v4 = v110;
LABEL_22:
          Swift::Int v11 = v111;
        }
        os_log_type_t v8 = v108;
        if (v120 < v119)
        {
          if (v12 < v11) {
            goto LABEL_136;
          }
          if (v11 < v12)
          {
            uint64_t v14 = (v12 << 6) - 64;
            Swift::Int v15 = v11 << 6;
            Swift::Int v16 = v12;
            Swift::Int v17 = v11;
            do
            {
              if (v17 != --v16)
              {
                if (!v114) {
                  goto LABEL_141;
                }
                long long v22 = (long long *)(v114 + v15);
                uint64_t v23 = (long long *)(v114 + v14);
                uint64_t v24 = *(void *)(v114 + v15);
                uint64_t v25 = *(void *)(v114 + v15 + 8);
                uint64_t v26 = *(void *)(v114 + v15 + 16);
                uint64_t v27 = *(void *)(v114 + v15 + 24);
                uint64_t v28 = *(void *)(v114 + v15 + 32);
                uint64_t v29 = *(void *)(v114 + v15 + 40);
                uint64_t v30 = *(void *)(v114 + v15 + 48);
                uint64_t result = *(unsigned __int8 *)(v114 + v15 + 56);
                char v31 = *(unsigned char *)(v114 + v15 + 57);
                char v32 = *(unsigned char *)(v114 + v15 + 58);
                if (v15 != v14 || v22 >= v23 + 4)
                {
                  long long v18 = *v23;
                  long long v19 = v23[1];
                  long long v20 = v23[3];
                  _OWORD v22[2] = v23[2];
                  v22[3] = v20;
                  *long long v22 = v18;
                  v22[1] = v19;
                }
                uint64_t v21 = v114 + v14;
                *(void *)uint64_t v21 = v24;
                *(void *)(v21 + 8) = v25;
                *(void *)(v21 + 16) = v26;
                *(void *)(v21 + 24) = v27;
                *(void *)(v21 + 32) = v28;
                *(void *)(v21 + 4sub_E59A4(2, 18, 1, 0) = v29;
                *(void *)(v21 + 48) = v30;
                *(unsigned char *)(v21 + 56) = result;
                *(unsigned char *)(v21 + 57) = v31;
                *(unsigned char *)(v21 + 58) = v32;
              }
              ++v17;
              v14 -= 64;
              v15 += 64;
            }
            while (v17 < v16);
          }
        }
      }
      if (v12 < v4)
      {
        if (__OFSUB__(v12, v11)) {
          goto LABEL_133;
        }
        if (v12 - v11 < v107)
        {
          if (__OFADD__(v11, v107)) {
            goto LABEL_137;
          }
          if (v11 + v107 >= v4) {
            Swift::Int v33 = v4;
          }
          else {
            Swift::Int v33 = v11 + v107;
          }
          if (v33 < v11)
          {
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
            return result;
          }
          if (v12 != v33)
          {
            uint64_t v34 = (unsigned char *)(v103 + (v12 << 6));
            Swift::Int v109 = v33;
            do
            {
              Swift::Int v116 = v12;
              uint64_t v112 = v34;
              uint64_t v35 = v34;
              do
              {
                Swift::Int v118 = v11;
                swift_getKeyPath();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                sub_10C7C(&qword_122880);
                sub_E6E00();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_10C7C(&qword_122AB8);
                sub_E6DE0();
                swift_release();
                swift_release();
                swift_getKeyPath();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_E6E00();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_E6DE0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                uint64_t result = swift_release();
                if (v120 >= v119) {
                  break;
                }
                if (!v114) {
                  goto LABEL_139;
                }
                uint64_t v36 = *(void *)(v35 - 58);
                uint64_t v37 = *(void *)(v35 - 50);
                uint64_t v38 = *(void *)(v35 - 42);
                uint64_t v39 = *(void *)(v35 - 34);
                long long v40 = *(_OWORD *)(v35 - 26);
                uint64_t v41 = *(void *)(v35 - 10);
                char v42 = *(v35 - 2);
                char v43 = *(v35 - 1);
                char v44 = *v35;
                long long v45 = *(_OWORD *)(v35 - 106);
                *(_OWORD *)(v35 - 58) = *(_OWORD *)(v35 - 122);
                *(_OWORD *)(v35 - 42) = v45;
                long long v46 = *(_OWORD *)(v35 - 74);
                *(_OWORD *)(v35 - 26) = *(_OWORD *)(v35 - 90);
                *(_OWORD *)(v35 - 1sub_E59A4(2, 18, 1, 0) = v46;
                *(v35 - 64) = v44;
                v35 -= 64;
                *(void *)(v35 - 58) = v36;
                *(void *)(v35 - 5sub_E59A4(2, 18, 1, 0) = v37;
                *(void *)(v35 - 42) = v38;
                *(void *)(v35 - 34) = v39;
                *(_OWORD *)(v35 - 26) = v40;
                *(void *)(v35 - 1sub_E59A4(2, 18, 1, 0) = v41;
                *(v35 - 2) = v42;
                ++v11;
                *(v35 - 1) = v43;
              }
              while (v116 != v118 + 1);
              Swift::Int v12 = v116 + 1;
              Swift::Int v11 = v111;
              uint64_t v34 = v112 + 64;
            }
            while (v116 + 1 != v109);
            Swift::Int v12 = v109;
          }
        }
      }
      if (v12 < v11) {
        goto LABEL_128;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21BA8(0, *((void *)v8 + 2) + 1, 1, v8);
        os_log_type_t v8 = (char *)result;
      }
      unint64_t v48 = *((void *)v8 + 2);
      unint64_t v47 = *((void *)v8 + 3);
      unint64_t v10 = v48 + 1;
      uint64_t v49 = v114;
      if (v48 >= v47 >> 1)
      {
        uint64_t result = (uint64_t)sub_21BA8((char *)(v47 > 1), v48 + 1, 1, v8);
        uint64_t v49 = v114;
        os_log_type_t v8 = (char *)result;
      }
      *((void *)v8 + 2) = v10;
      uint64_t v50 = v8 + 32;
      uint64_t v51 = &v8[16 * v48 + 32];
      *(void *)uint64_t v51 = v11;
      *((void *)v51 + 1) = v12;
      Swift::Int v117 = v12;
      if (v48)
      {
        while (1)
        {
          unint64_t v52 = v10 - 1;
          if (v10 >= 4)
          {
            uint64_t v57 = &v50[2 * v10];
            uint64_t v58 = *(v57 - 8);
            uint64_t v59 = *(v57 - 7);
            BOOL v63 = __OFSUB__(v59, v58);
            uint64_t v60 = v59 - v58;
            if (v63) {
              goto LABEL_117;
            }
            uint64_t v62 = *(v57 - 6);
            uint64_t v61 = *(v57 - 5);
            BOOL v63 = __OFSUB__(v61, v62);
            uint64_t v55 = v61 - v62;
            char v56 = v63;
            if (v63) {
              goto LABEL_118;
            }
            unint64_t v64 = v10 - 2;
            uint64_t v65 = &v50[2 * v10 - 4];
            uint64_t v67 = *v65;
            uint64_t v66 = v65[1];
            BOOL v63 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v63) {
              goto LABEL_119;
            }
            BOOL v63 = __OFADD__(v55, v68);
            uint64_t v69 = v55 + v68;
            if (v63) {
              goto LABEL_121;
            }
            if (v69 >= v60)
            {
              uint64_t v87 = &v50[2 * v52];
              uint64_t v89 = *v87;
              uint64_t v88 = v87[1];
              BOOL v63 = __OFSUB__(v88, v89);
              uint64_t v90 = v88 - v89;
              if (v63) {
                goto LABEL_127;
              }
              BOOL v80 = v55 < v90;
              goto LABEL_89;
            }
          }
          else
          {
            if (v10 != 3)
            {
              uint64_t v81 = *((void *)v8 + 4);
              uint64_t v82 = *((void *)v8 + 5);
              BOOL v63 = __OFSUB__(v82, v81);
              uint64_t v74 = v82 - v81;
              char v75 = v63;
              goto LABEL_83;
            }
            uint64_t v54 = *((void *)v8 + 4);
            uint64_t v53 = *((void *)v8 + 5);
            BOOL v63 = __OFSUB__(v53, v54);
            uint64_t v55 = v53 - v54;
            char v56 = v63;
          }
          if (v56) {
            goto LABEL_120;
          }
          unint64_t v64 = v10 - 2;
          uint64_t v70 = &v50[2 * v10 - 4];
          uint64_t v72 = *v70;
          uint64_t v71 = v70[1];
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v74 = v71 - v72;
          char v75 = v73;
          if (v73) {
            goto LABEL_122;
          }
          id v76 = &v50[2 * v52];
          uint64_t v78 = *v76;
          uint64_t v77 = v76[1];
          BOOL v63 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v63) {
            goto LABEL_124;
          }
          if (__OFADD__(v74, v79)) {
            goto LABEL_126;
          }
          if (v74 + v79 >= v55)
          {
            BOOL v80 = v55 < v79;
LABEL_89:
            if (v80) {
              unint64_t v52 = v64;
            }
            goto LABEL_91;
          }
LABEL_83:
          if (v75) {
            goto LABEL_123;
          }
          long long v83 = &v50[2 * v52];
          uint64_t v85 = *v83;
          uint64_t v84 = v83[1];
          BOOL v63 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v63) {
            goto LABEL_125;
          }
          if (v86 < v74) {
            goto LABEL_14;
          }
LABEL_91:
          unint64_t v91 = v52 - 1;
          if (v52 - 1 >= v10)
          {
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
            goto LABEL_138;
          }
          if (!v49) {
            goto LABEL_140;
          }
          char v92 = &v50[2 * v91];
          uint64_t v93 = *v92;
          uint64_t v94 = &v50[2 * v52];
          uint64_t v95 = v94[1];
          uint64_t result = sub_213A0((char *)(v49 + (*v92 << 6)), (char *)(v49 + (*v94 << 6)), v49 + (v95 << 6), v113);
          if (v2) {
            goto LABEL_111;
          }
          if (v95 < v93) {
            goto LABEL_114;
          }
          if (v52 > *((void *)v8 + 2)) {
            goto LABEL_115;
          }
          *char v92 = v93;
          v50[2 * v91 + 1] = v95;
          unint64_t v96 = *((void *)v8 + 2);
          if (v52 >= v96) {
            goto LABEL_116;
          }
          unint64_t v10 = v96 - 1;
          uint64_t result = (uint64_t)memmove(&v50[2 * v52], v94 + 2, 16 * (v96 - 1 - v52));
          *((void *)v8 + 2) = v96 - 1;
          uint64_t v49 = v114;
          if (v96 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v10 = 1;
LABEL_14:
      Swift::Int v4 = v110;
      Swift::Int v9 = v117;
      if (v117 >= v110) {
        goto LABEL_100;
      }
    }
  }
  os_log_type_t v8 = (char *)_swiftEmptyArrayStorage;
  v113 = (char *)&_swiftEmptyArrayStorage[4];
  long long v106 = _swiftEmptyArrayStorage;
  if (v4 == 1) {
    goto LABEL_12;
  }
  unint64_t v10 = _swiftEmptyArrayStorage[2];
LABEL_100:
  if (v10 >= 2)
  {
    uint64_t v97 = *v104;
    do
    {
      unint64_t v98 = v10 - 2;
      if (v10 < 2) {
        goto LABEL_129;
      }
      if (!v97) {
        goto LABEL_142;
      }
      uint64_t v99 = *(void *)&v8[16 * v98 + 32];
      uint64_t v100 = *(void *)&v8[16 * v10 + 24];
      uint64_t result = sub_213A0((char *)(v97 + (v99 << 6)), (char *)(v97 + (*(void *)&v8[16 * v10 + 16] << 6)), v97 + (v100 << 6), v113);
      if (v2) {
        break;
      }
      if (v100 < v99) {
        goto LABEL_130;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21CA4((uint64_t)v8);
        os_log_type_t v8 = (char *)result;
      }
      if (v98 >= *((void *)v8 + 2)) {
        goto LABEL_131;
      }
      uint64_t v101 = &v8[16 * v98 + 32];
      *(void *)uint64_t v101 = v99;
      *((void *)v101 + 1) = v100;
      unint64_t v102 = *((void *)v8 + 2);
      if (v10 > v102) {
        goto LABEL_132;
      }
      uint64_t result = (uint64_t)memmove(&v8[16 * v10 + 16], &v8[16 * v10 + 32], 16 * (v102 - v10));
      *((void *)v8 + 2) = v102 - 1;
      unint64_t v10 = v102 - 1;
    }
    while (v102 > 2);
  }
LABEL_111:
  swift_bridgeObjectRelease();
  v106[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_20F9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  uint64_t v20 = a3;
  if (a3 != a2)
  {
    uint64_t v19 = *a4;
    Swift::Int v4 = (unsigned char *)(*a4 + (a3 << 6) + 58);
LABEL_5:
    uint64_t v21 = v17;
    long long v18 = v4;
    while (1)
    {
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_122880);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v23 >= v22)
      {
LABEL_4:
        Swift::Int v4 = v18 + 64;
        if (++v20 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v19) {
        break;
      }
      uint64_t v5 = *(void *)(v4 - 58);
      uint64_t v6 = *(void *)(v4 - 50);
      uint64_t v7 = *(void *)(v4 - 42);
      uint64_t v8 = *(void *)(v4 - 34);
      long long v9 = *(_OWORD *)(v4 - 26);
      uint64_t v10 = *(void *)(v4 - 10);
      char v11 = *(v4 - 2);
      char v12 = *(v4 - 1);
      char v13 = *v4;
      long long v14 = *(_OWORD *)(v4 - 106);
      *(_OWORD *)(v4 - 58) = *(_OWORD *)(v4 - 122);
      *(_OWORD *)(v4 - 42) = v14;
      long long v15 = *(_OWORD *)(v4 - 74);
      *(_OWORD *)(v4 - 26) = *(_OWORD *)(v4 - 90);
      *(_OWORD *)(v4 - 1sub_E59A4(2, 18, 1, 0) = v15;
      *(v4 - 64) = v13;
      v4 -= 64;
      *(void *)(v4 - 58) = v5;
      *(void *)(v4 - 5sub_E59A4(2, 18, 1, 0) = v6;
      *(void *)(v4 - 42) = v7;
      *(void *)(v4 - 34) = v8;
      *(_OWORD *)(v4 - 26) = v9;
      *(void *)(v4 - 1sub_E59A4(2, 18, 1, 0) = v10;
      *(v4 - 2) = v11;
      *(v4 - 1) = v12;
      if (v20 == ++v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_213A0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  Swift::Int v4 = __src;
  uint64_t v5 = __dst;
  int64_t v6 = __src - __dst;
  int64_t v7 = __src - __dst + 63;
  if (__src - __dst >= 0) {
    int64_t v7 = __src - __dst;
  }
  uint64_t v8 = v7 >> 6;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 63;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 6;
  uint64_t v34 = a4;
  if (v8 >= v11)
  {
    uint64_t v18 = v11 << 6;
    if (a4 != __src || &__src[v18] <= a4)
    {
      memmove(a4, __src, v11 << 6);
      a4 = v34;
    }
    char v13 = &a4[v18];
    if (v5 >= v4 || v9 < 64) {
      goto LABEL_39;
    }
    uint64_t v19 = (char *)(a3 - 64);
    Swift::Int v33 = v5;
    while (1)
    {
      uint64_t v37 = v4;
      char v32 = v13;
      v13 -= 64;
      uint64_t v29 = v19 + 64;
      uint64_t v30 = v19;
      uint64_t v20 = v4 - 64;
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_122880);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v39 >= v38)
      {
        unint64_t v21 = (unint64_t)v33;
        if (v29 == v32)
        {
          uint64_t v20 = v13;
          uint64_t v22 = v30;
          a4 = v34;
          if (v30 < v32) {
            goto LABEL_37;
          }
          goto LABEL_36;
        }
        uint64_t v20 = v13;
      }
      else
      {
        char v13 = v32;
        unint64_t v21 = (unint64_t)v33;
        if (v29 == v4)
        {
          uint64_t v22 = v30;
          v4 -= 64;
          a4 = v34;
          if (v30 < v37) {
            goto LABEL_37;
          }
          goto LABEL_36;
        }
        v4 -= 64;
      }
      a4 = v34;
      uint64_t v22 = v30;
LABEL_36:
      long long v23 = *(_OWORD *)v20;
      long long v24 = *((_OWORD *)v20 + 1);
      long long v25 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v22 + 3) = v25;
      *(_OWORD *)uint64_t v22 = v23;
      *((_OWORD *)v22 + 1) = v24;
LABEL_37:
      if ((unint64_t)v4 > v21)
      {
        uint64_t v19 = v22 - 64;
        if (v13 > a4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  size_t v12 = v8 << 6;
  if (a4 != __dst || &__dst[v12] <= a4)
  {
    memmove(a4, __dst, v12);
    a4 = v34;
  }
  char v13 = &a4[v12];
  if ((unint64_t)v4 < a3 && v6 >= 64)
  {
    char v31 = &a4[v12];
    while (1)
    {
      uint64_t v35 = a4;
      uint64_t v36 = v4;
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_122880);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v39 >= v38) {
        break;
      }
      a4 = v35;
      long long v14 = v4;
      v4 += 64;
      if (v5 != v36) {
        goto LABEL_16;
      }
LABEL_17:
      v5 += 64;
      char v13 = v31;
      if (a4 >= v31 || (unint64_t)v4 >= a3) {
        goto LABEL_19;
      }
    }
    long long v14 = v35;
    a4 = v35 + 64;
    if (v5 == v35) {
      goto LABEL_17;
    }
LABEL_16:
    long long v15 = *(_OWORD *)v14;
    long long v16 = *((_OWORD *)v14 + 1);
    long long v17 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v5 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v5 + 3) = v17;
    *(_OWORD *)uint64_t v5 = v15;
    *((_OWORD *)v5 + 1) = v16;
    goto LABEL_17;
  }
LABEL_19:
  Swift::Int v4 = v5;
LABEL_39:
  size_t v26 = (v13 - a4 + (v13 - a4 < 0 ? 0x3FuLL : 0)) & 0xFFFFFFFFFFFFFFC0;
  if (v4 != a4 || v4 >= &a4[v26]) {
    memmove(v4, a4, v26);
  }
  return 1;
}

char *sub_21BA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_125080);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  char v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21CA4(uint64_t a1)
{
  return sub_21BA8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_21CB8(uint64_t a1, uint64_t a2)
{
  sub_E7670();
  sub_E7170();
  Swift::Int v4 = sub_E76A0();

  return sub_23928(a1, a2, v4);
}

double sub_21D30(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_21D50()
{
  unint64_t result = qword_122950;
  if (!qword_122950)
  {
    sub_11B60(&qword_122930);
    sub_25790(&qword_122958, &qword_122960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122950);
  }
  return result;
}

uint64_t sub_21DE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21E04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21E20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21E3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21E58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21E74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for GCSProfileSheetDpadMappingsView(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for GCSProfileSheetDpadMappingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSProfileSheetDpadMappingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for GCSProfileSheetDpadMappingsView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for GCSProfileSheetDpadMappingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = a2[10];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileSheetDpadMappingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileSheetDpadMappingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileSheetDpadMappingsView()
{
  return &type metadata for GCSProfileSheetDpadMappingsView;
}

uint64_t destroy for GCSDpadInfoButton(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GCSDpadInfoButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSDpadInfoButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for GCSDpadInfoButton(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GCSDpadInfoButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDpadInfoButton(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDpadInfoButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDpadInfoButton()
{
  return &type metadata for GCSDpadInfoButton;
}

uint64_t destroy for GCSDpadCustomPickerView(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GCSDpadCustomPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  id v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  id v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GCSDpadCustomPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v8;
  id v10 = v8;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 9sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GCSDpadCustomPickerView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for GCSDpadCustomPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);

  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release();
  uint64_t v8 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
  *(unsigned char *)(a1 + 9sub_E59A4(2, 18, 1, 0) = *((unsigned char *)a2 + 90);
  swift_release();
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  swift_release();
  *(void *)(a1 + 112) = a2[14];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDpadCustomPickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDpadCustomPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12sub_E59A4(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12sub_E59A4(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDpadCustomPickerView()
{
  return &type metadata for GCSDpadCustomPickerView;
}

uint64_t destroy for GCSDpadDetailTogglesView(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GCSDpadDetailTogglesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GCSDpadDetailTogglesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

__n128 initializeWithTake for GCSDpadDetailTogglesView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 59) = *(_OWORD *)(a2 + 59);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for GCSDpadDetailTogglesView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  *(unsigned char *)(a1 + 74) = *((unsigned char *)a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDpadDetailTogglesView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 75)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDpadDetailTogglesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 74) = 0;
    *(_WORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 75) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 75) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDpadDetailTogglesView()
{
  return &type metadata for GCSDpadDetailTogglesView;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSDpadDetailView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSDpadDetailView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GCSDpadDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GCSDpadDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  return a1;
}

__n128 initializeWithTake for GCSDpadDetailView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GCSDpadDetailView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDpadDetailView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 59)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDpadDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 58) = 0;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 59) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 59) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDpadDetailView()
{
  return &type metadata for GCSDpadDetailView;
}

uint64_t destroy for GCSProfileSheetDpadMappingDetailView(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for GCSProfileSheetDpadMappingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSProfileSheetDpadMappingDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for GCSProfileSheetDpadMappingDetailView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v6;
  return result;
}

uint64_t assignWithTake for GCSProfileSheetDpadMappingDetailView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  *(unsigned char *)(a1 + 74) = *((unsigned char *)a2 + 74);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *((_OWORD *)a2 + 5);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = a2[15];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileSheetDpadMappingDetailView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileSheetDpadMappingDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 12sub_E59A4(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileSheetDpadMappingDetailView()
{
  return &type metadata for GCSProfileSheetDpadMappingDetailView;
}

uint64_t sub_2341C()
{
  return sub_2346C(&qword_122968, &qword_122970, (void (*)(void))sub_191D8);
}

uint64_t sub_2346C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_234D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_235A8()
{
  return sub_25790(&qword_122978, &qword_122980);
}

uint64_t sub_235E4()
{
  return sub_25790(&qword_122988, &qword_122990);
}

unint64_t sub_23624()
{
  unint64_t result = qword_122998;
  if (!qword_122998)
  {
    sub_11B60(&qword_1229A0);
    sub_25790(&qword_1229A8, &qword_1229B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122998);
  }
  return result;
}

uint64_t sub_236C4()
{
  return sub_25790(&qword_122948, &qword_122940);
}

unint64_t sub_23708()
{
  unint64_t result = qword_1229B8;
  if (!qword_1229B8)
  {
    sub_11B60(&qword_1229C0);
    sub_25790(&qword_122948, &qword_122940);
    sub_21D50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1229B8);
  }
  return result;
}

uint64_t sub_237AC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_237F8()
{
  return sub_E6DF0();
}

uint64_t sub_23854()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_238D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_E6460();
  *a1 = result;
  return result;
}

uint64_t sub_238FC()
{
  return sub_E6470();
}

unint64_t sub_23928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_E7620() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_E7620() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23A0C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v6 = sub_23AE0(v12, 0, 0, 1, a1, a2);
  unint64_t v7 = v12[0];
  if (v6)
  {
    unint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_23C30((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_23C30((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_23BE0((uint64_t)v12);
  return v7;
}

unint64_t sub_23AE0(unint64_t *a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          unint64_t result = 0;
          *((unsigned char *)__dst + v1sub_E59A4(2, 18, 1, 0) = 0;
          *a1 = (unint64_t)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    unint64_t result = (unint64_t)sub_23C8C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    unint64_t result = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    unint64_t result = sub_E7500();
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_23BE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_23C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

char *sub_23C8C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (char *)sub_23D24(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_23E28(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_23E28((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

void *sub_23D24(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_23DC0(v2, 0);
      unint64_t result = (void *)sub_E74C0();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_E71D0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_23DC0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10C7C((uint64_t *)&unk_125370);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_23E28(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C((uint64_t *)&unk_125370);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  if (a7)
  {
    char v9 = a5 & 1;
    swift_retain();
    sub_18804(a3, a4, v9);
  }
  else
  {
    sub_18804(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_23F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_release();
    sub_18814(a3, a4, a5 & 1);
  }
  else
  {
    sub_18814(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_23FF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1EE14(*(void *)(v1 + 16), a1);
}

unint64_t sub_24000()
{
  unint64_t result = qword_122A28;
  if (!qword_122A28)
  {
    sub_11B60(&qword_122A18);
    sub_25790(&qword_122A30, &qword_122A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122A28);
  }
  return result;
}

double sub_2409C@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122880);
  sub_E6E10();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 57) = v8;
  *(unsigned char *)(a1 + 58) = v9;
  return result;
}

uint64_t sub_24124(uint64_t a1)
{
  return a1;
}

uint64_t sub_241D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)v1[2];
  long long v3 = (_OWORD *)v1[3];
  long long v4 = (void *)v1[4];
  uint64_t v36 = sub_E6560();
  id v5 = [v2 sfSymbolsName];
  sub_E7110();

  uint64_t v41 = sub_E6C30();
  id v6 = [v2 localizedName];
  sub_E7110();

  sub_187B0();
  uint64_t v7 = sub_E6920();
  uint64_t v38 = v8;
  uint64_t v39 = v7;
  char v35 = v9;
  uint64_t v40 = v10;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10C7C(&qword_122880);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  long long v55 = v3[2];
  *(_OWORD *)char v56 = v3[3];
  *(_OWORD *)&v56[11] = *(_OWORD *)((char *)v3 + 59);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  if (v50 == v47 && v51 == v49)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      id v18 = [v4 sfSymbolsName];
      sub_E7110();

      sub_E6C30();
      sub_E6720();
      id v19 = [v4 localizedName];
      int v20 = (unint64_t)sub_E7110() >> 32;
      uint64_t v22 = v21;

      HIDWORD(v52) = v20;
      uint64_t v54 = v22;
      uint64_t v23 = sub_E6920();
      uint64_t v25 = v24;
      char v27 = v26 & 1;
      LODWORD(v52) = sub_E6720();
      uint64_t v28 = sub_E68F0();
      uint64_t v30 = v29;
      LOBYTE(v22) = v31 & 1;
      sub_18814(v23, v25, v27);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_retain();
      sub_18804(v28, v30, v22);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_18804(v28, v30, v22);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_18814(v28, v30, v22);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10C7C(&qword_122A78);
      sub_25790(&qword_122A80, &qword_122A78);
      sub_E6610();
      sub_18814(v28, v30, v22);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  HIDWORD(v52) = (unint64_t)sub_B7108(0xD000000000000011, (void *)0x80000000000F1700) >> 32;
  uint64_t v54 = v12;
  uint64_t v13 = sub_E6920();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  LODWORD(v52) = sub_E6720();
  sub_E68F0();
  sub_18814(v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_122A78);
  sub_25790(&qword_122A80, &qword_122A78);
  sub_E6610();
LABEL_7:
  uint64_t v42 = v52;
  v46[0] = 1;
  v43[0] = v59;
  swift_retain();
  sub_18804(v39, v38, v35 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  int v33 = v57 | (v58 << 16);
  sub_2493C(v52, v54, v55, *((uint64_t *)&v55 + 1), v56[0], *(uint64_t *)&v56[8], *(uint64_t *)&v56[16], *(uint64_t *)&v56[24], v33, v59);
  sub_249E4(v52, v54, v55, *((uint64_t *)&v55 + 1), v56[0], *(uint64_t *)&v56[8], *(uint64_t *)&v56[16], *(uint64_t *)&v56[24], v33, v59);
  sub_18814(v39, v38, v35 & 1);
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  int v53 = *(_DWORD *)v46;
  HIBYTE(v53) = v46[3];
  int v48 = *(_DWORD *)v43;
  HIBYTE(v48) = v43[3];
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v46;
  *(_DWORD *)(a1 + 2sub_E59A4(2, 18, 1, 0) = *(_DWORD *)&v46[3];
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) = v39;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v38;
  *(unsigned char *)(a1 + 48) = v35 & 1;
  *(_DWORD *)(a1 + 49) = v53;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v46[3];
  *(void *)(a1 + 56) = v40;
  *(void *)(a1 + 64) = KeyPath;
  *(void *)(a1 + 72) = 2;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = 0;
  *(_WORD *)(a1 + 81) = 256;
  *(unsigned char *)(a1 + 87) = v45;
  *(_DWORD *)(a1 + 83) = v44;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 1;
  *(_DWORD *)(a1 + 10sub_E59A4(2, 18, 1, 0) = *(_DWORD *)&v43[3];
  *(_DWORD *)(a1 + 97) = v48;
  *(void *)(a1 + 104) = v42;
  *(void *)(a1 + 112) = v54;
  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v55;
  *(void *)(a1 + 136) = *(void *)v56;
  *(void *)(a1 + 144) = *(void *)&v56[8];
  *(void *)(a1 + 152) = *(void *)&v56[16];
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)&v56[24];
  *(unsigned char *)(a1 + 17sub_E59A4(2, 18, 1, 0) = BYTE2(v33);
  *(_WORD *)(a1 + 168) = v57;
  *(unsigned char *)(a1 + 171) = v59;
  return result;
}

unint64_t sub_248E8()
{
  unint64_t result = qword_122A70;
  if (!qword_122A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122A70);
  }
  return result;
}

uint64_t sub_2493C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  if (a10)
  {
    char v12 = a5 & 1;
    swift_retain();
    sub_18804(a3, a4, v12);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else
  {
    sub_18804(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_249E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  if (a10)
  {
    swift_release();
    sub_18814(a3, a4, a5 & 1);
    swift_release();
  }
  else
  {
    sub_18814(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24A70()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_24AF4@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v6 = a1[1];
  long long v43 = *a1;
  long long v44 = v6;
  v45[0] = a1[2];
  *(_OWORD *)((char *)v45 + 11) = *(long long *)((char *)a1 + 43);
  uint64_t v42 = sub_E6560();
  uint64_t v7 = *(void *)(v3 + 96);
  swift_getKeyPath();
  long long v8 = a1[1];
  long long v54 = *a1;
  long long v55 = v8;
  v56[0] = a1[2];
  *(_OWORD *)((char *)v56 + 11) = *(long long *)((char *)a1 + 43);
  sub_1DB48((uint64_t)&v43);
  sub_10C7C(&qword_122880);
  sub_E6E00();
  swift_release();
  sub_1DBA0((uint64_t)&v43);
  long long v54 = v46;
  long long v55 = v47;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v7 + 16))
  {
    unint64_t v9 = sub_21CB8(v52, *((uint64_t *)&v52 + 1));
    if (v10)
    {
      id v11 = *(id *)(*(void *)(v7 + 56) + 8 * v9);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      long long v54 = v43;
      long long v55 = v44;
      v56[0] = v45[0];
      *(_OWORD *)((char *)v56 + 11) = *(_OWORD *)((char *)v45 + 11);
      sub_1DB48((uint64_t)&v43);
      sub_E6E00();
      swift_release();
      sub_1DBA0((uint64_t)&v43);
      long long v54 = v52;
      long long v55 = v53;
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      unint64_t v13 = v50;
      unint64_t v12 = v51;
      long long v14 = *(_OWORD *)(v3 + 48);
      long long v54 = *(_OWORD *)(v3 + 32);
      long long v55 = v14;
      v56[0] = *(_OWORD *)(v3 + 64);
      *(_OWORD *)((char *)v56 + 11) = *(_OWORD *)(v3 + 75);
      sub_E6DE0();
      long long v15 = v46;
      swift_bridgeObjectRelease();
      if (__PAIR128__(v12, v13) == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_E7620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
          id v29 = [v11 sfSymbolsName];
          sub_E7110();

          uint64_t v30 = sub_E6C30();
          id v31 = [v11 localizedName];
          uint64_t v32 = sub_E7110();
          uint64_t v34 = v33;

          *(void *)&long long v54 = v32;
          *((void *)&v54 + 1) = v34;
          sub_187B0();
          uint64_t v35 = sub_E6920();
          uint64_t v37 = v36;
          uint64_t v39 = v38;
          uint64_t v41 = v40 & 1;
          swift_retain();
          sub_18804(v35, v37, v41);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_18804(v35, v37, v41);
          swift_bridgeObjectRetain();
          sub_18814(v35, v37, v41);
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&long long v46 = v30;
          *((void *)&v46 + 1) = v35;
          *(void *)&long long v47 = v37;
          *((void *)&v47 + 1) = v41;
          uint64_t v48 = v39;
          char v49 = 1;
          swift_retain();
          sub_18804(v35, v37, v41);
          swift_bridgeObjectRetain();
          sub_10C7C(&qword_122AA0);
          sub_25790(&qword_122AA8, &qword_122AA0);
          sub_E6610();
          swift_release();

          sub_18814(v35, v37, v41);
          swift_bridgeObjectRelease();
          sub_18814(v35, v37, v41);
          swift_release();
          goto LABEL_9;
        }
      }
      *(void *)&long long v54 = sub_B7108(0xD000000000000011, (void *)0x80000000000F1700);
      *((void *)&v54 + 1) = v22;
      sub_187B0();
      uint64_t v23 = sub_E6920();
      uint64_t v25 = v24;
      *(void *)&long long v46 = v23;
      *((void *)&v46 + 1) = v24;
      char v27 = v26 & 1;
      *(void *)&long long v47 = v26 & 1;
      *((void *)&v47 + 1) = v28;
      uint64_t v48 = 0;
      char v49 = 0;
      sub_18804(v23, v24, v26 & 1);
      swift_bridgeObjectRetain();
      sub_10C7C(&qword_122AA0);
      sub_25790(&qword_122AA8, &qword_122AA0);
      sub_E6610();

      sub_18814(v23, v25, v27);
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      long long v18 = v54;
      long long v20 = v55;
      uint64_t v17 = *(void *)&v56[0];
      char v19 = BYTE8(v56[0]);
      goto LABEL_10;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = 0;
  long long v18 = 0uLL;
  char v19 = -1;
  long long v20 = 0uLL;
LABEL_10:
  *(void *)a2 = v42;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v18;
  *(_OWORD *)(a2 + 4sub_E59A4(2, 18, 1, 0) = v20;
  *(void *)(a2 + 56) = v17;
  *(unsigned char *)(a2 + 64) = v19;
  return result;
}

void *sub_25044(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_122AB0);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[8 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10C7C(&qword_122880);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_25168(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10C7C(&qword_122848);
  sub_25790(&qword_122858, &qword_122860);
  uint64_t result = sub_E6E40();
  uint64_t v13 = v14;
  if (!a2 || !a3) {
    goto LABEL_5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v14;
    sub_E6E50();
LABEL_5:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = v13;
    return 0;
  }
  __break(1u);
  return result;
}

void *sub_25374(void *a1)
{
  return sub_25044(0, a1[2], 0, a1);
}

uint64_t sub_25388()
{
  return 0;
}

uint64_t sub_254B4()
{
  return sub_E68B0();
}

uint64_t sub_25520@<X0>(char *a1@<X8>)
{
  return sub_1B8E8(*(_OWORD **)(v1 + 16), a1);
}

uint64_t sub_25528@<X0>(uint64_t a1@<X8>)
{
  return sub_1BEE8(*(void *)(v1 + 16), 0xD000000000000019, (void *)0x80000000000F1780, a1);
}

uint64_t sub_25578@<X0>(uint64_t a1@<X8>)
{
  return sub_1BEE8(*(void *)(v1 + 16), 0xD000000000000017, (void *)0x80000000000F1740, a1);
}

uint64_t sub_255C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BEE8(*(void *)(v1 + 16), 0x4958415F50415753, (void *)0xEF454C5449545F53, a1);
}

uint64_t sub_2561C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8DC(*(void *)(v1 + 16), a1);
}

unint64_t sub_25624()
{
  unint64_t result = qword_122AF0;
  if (!qword_122AF0)
  {
    sub_11B60(&qword_122AE8);
    sub_11B60(&qword_122AF8);
    sub_256CC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122AF0);
  }
  return result;
}

unint64_t sub_256CC()
{
  unint64_t result = qword_122B00;
  if (!qword_122B00)
  {
    sub_11B60(&qword_122AF8);
    sub_25790(&qword_122B08, &qword_122B10);
    sub_25790(&qword_122B18, &qword_122B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122B00);
  }
  return result;
}

uint64_t sub_25790(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_257D4()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_25858(long long *a1)
{
  return sub_1ABC4(a1, v1 + 16);
}

uint64_t sub_25860(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  sub_19100(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2590C()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 195, 7);
}

uint64_t sub_259B0()
{
  swift_getKeyPath();
  long long v1 = *(_OWORD *)((char *)v0 + 152);
  long long v6 = *(_OWORD *)((char *)v0 + 136);
  long long v7 = v1;
  v8[0] = *(_OWORD *)((char *)v0 + 168);
  *(_OWORD *)((char *)v8 + 11) = *(_OWORD *)((char *)v0 + 179);
  sub_1DB48((uint64_t)v0 + 136);
  sub_10C7C(&qword_122880);
  sub_E6E00();
  swift_release();
  sub_1DBA0((uint64_t)v0 + 136);
  long long v6 = v4;
  long long v7 = v5;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  long long v2 = v0[4];
  long long v6 = v0[3];
  long long v7 = v2;
  v8[0] = v0[5];
  *(_OWORD *)((char *)v8 + 11) = *(_OWORD *)((char *)v0 + 91);
  sub_1DB48((uint64_t)&v6);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  sub_E6DF0();
  return sub_1DBA0((uint64_t)&v6);
}

uint64_t sub_25B4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25BB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_retain();
    sub_18804(a2, a3, a4 & 1);
  }
  else
  {
    sub_18804(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_25C28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25C84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  if (a6)
  {
    swift_release();
    sub_18814(a2, a3, a4 & 1);
  }
  else
  {
    sub_18814(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_25CF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_25D9C()
{
  long long v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_25EB4()
{
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return v1;
}

uint64_t sub_25F04()
{
  return sub_E6DF0();
}

void (*sub_25F58(void *a1))(char **a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x60uLL);
  *a1 = v3;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v1 + 16);
  *((void *)v3 + 5) = *(void *)(v1 + 32);
  sub_2A818((uint64_t)(v3 + 40), (uint64_t)(v3 + 48), &qword_122B70);
  uint64_t v4 = *((void *)v3 + 3);
  *((void *)v3 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v3 + 4);
  *((void *)v3 + 9) = v4;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
  *((void *)v3 + 2) = *((void *)v3 + 5);
  sub_18AF0((uint64_t)(v3 + 72));
  swift_retain();
  sub_26100((id *)v3 + 6);
  *((void *)v3 + 11) = sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return sub_26034;
}

void sub_26034(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (id *)(*a1 + 48);
  uint64_t v4 = (void *)*((void *)*a1 + 7);
  *((void *)*a1 + 8) = v4;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v2 + 24);
  *((void *)v2 + 2) = *((void *)v2 + 5);
  if (a2)
  {
    id v5 = v4;
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 72));
    swift_release();
    sub_2612C(v3);
  }
  else
  {
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 72));
    swift_release();
    sub_2612C(v3);
  }

  free(v2);
}

id *sub_26100(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_2612C(id *a1)
{
  return a1;
}

uint64_t sub_26158()
{
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  return v1;
}

uint64_t sub_261AC()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_261FC()
{
  return sub_E6DF0();
}

void (*sub_26250(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[4] = v4;
  v3[5] = v5;
  char v6 = *(unsigned char *)(v1 + 56);
  *((unsigned char *)v3 + 19) = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_262F4;
}

void sub_262F4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)a1 + 24;
  char v3 = *(unsigned char *)(*(void *)a1 + 18);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  char v5 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 32);
  v1[1] = v4;
  *((unsigned char *)v1 + 16) = v5;
  *((unsigned char *)v1 + 17) = v3;
  sub_E6DF0();
  sub_18B48(v2);
  swift_release();

  free(v1);
}

uint64_t sub_26368()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_263BC()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_263F8()
{
  return 0;
}

uint64_t sub_26400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v55 = a1;
  uint64_t v3 = sub_10C7C(&qword_122B78);
  __chkstk_darwin(v3);
  char v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_122B80);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10C7C(&qword_122B88);
  uint64_t v54 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_122B90);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  long long v53 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v44 - v16;
  long long v58 = *(_OWORD *)(v1 + 16);
  uint64_t v59 = *(void *)(v1 + 32);
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  countAndFlagsBits = (void *)v57._countAndFlagsBits;
  if (v57._countAndFlagsBits)
  {
    sub_E61E0();
    uint64_t v19 = sub_E6200();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
    long long v20 = (_OWORD *)swift_allocObject();
    uint64_t v52 = v3;
    long long v21 = v2[3];
    v20[3] = v2[2];
    v20[4] = v21;
    v20[5] = v2[4];
    long long v22 = v2[1];
    v20[1] = *v2;
    v20[2] = v22;
    sub_26B5C((uint64_t)v2);
    unint64_t v51 = v11;
    sub_E6D70();
    sub_10C7C(&qword_122298);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_EBBE0;
    id v24 = [countAndFlagsBits name];
    id v49 = countAndFlagsBits;
    id v25 = v24;
    uint64_t v26 = sub_E7110();
    uint64_t v50 = v13;
    uint64_t v27 = v26;
    uint64_t v29 = v28;

    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = sub_17068();
    *(void *)(v23 + 32) = v27;
    *(void *)(v23 + 4sub_E59A4(2, 18, 1, 0) = v29;
    Swift::String v30 = String.localized(with:)((Swift::OpaquePointer)v23);
    swift_bridgeObjectRelease();
    Swift::String v57 = v30;
    long long v56 = v2[4];
    sub_10C7C(&qword_122A50);
    uint64_t v31 = sub_E6D40();
    long long v46 = &v44;
    uint64_t v48 = v5;
    __chkstk_darwin(v31);
    long long v47 = v17;
    uint64_t v45 = sub_10C7C(&qword_122B98);
    uint64_t v32 = sub_2CC88(&qword_122BA0, &qword_122B88);
    unint64_t v42 = sub_187B0();
    uint64_t v43 = sub_2CC88(&qword_122BA8, &qword_122B98);
    uint64_t v33 = v53;
    uint64_t v34 = v51;
    sub_E6A10();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v9);
    uint64_t v35 = v50;
    uint64_t v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v33, v12);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v48, v36, v12);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v58 = v9;
    *((void *)&v58 + 1) = &type metadata for String;
    uint64_t v59 = v45;
    uint64_t v60 = v32;
    unint64_t v61 = v42;
    uint64_t v62 = v43;
    swift_getOpaqueTypeConformance2();
    sub_E6610();

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v12);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = sub_11B60(&qword_122B98);
    uint64_t v39 = sub_2CC88(&qword_122BA0, &qword_122B88);
    unint64_t v40 = sub_187B0();
    uint64_t v41 = sub_2CC88(&qword_122BA8, &qword_122B98);
    *(void *)&long long v58 = v9;
    *((void *)&v58 + 1) = &type metadata for String;
    uint64_t v59 = v38;
    uint64_t v60 = v39;
    unint64_t v61 = v40;
    uint64_t v62 = v41;
    swift_getOpaqueTypeConformance2();
    return sub_E6610();
  }
}

uint64_t sub_26ADC()
{
  return sub_2D148();
}

uint64_t sub_26AE4@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0x5F454C49464F5250, (void *)0xEE004554454C4544);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_26B5C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 32);
  swift_retain();
  id v4 = v2;
  swift_retain();
  swift_retain();
  id v5 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_26BD8@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v5 = sub_10C7C(&qword_122B80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_122B88);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v37 = (char *)&v36 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v36 = (char *)&v36 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - v16;
  sub_E61E0();
  uint64_t v18 = sub_E6200();
  uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v7, 0, 1, v18);
  uint64_t v20 = swift_allocObject();
  long long v21 = a1[3];
  *(_OWORD *)(v20 + 48) = a1[2];
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 8sub_E59A4(2, 18, 1, 0) = a1[4];
  long long v22 = a1[1];
  *(_OWORD *)(v20 + 16) = *a1;
  *(_OWORD *)(v20 + 32) = v22;
  *(void *)(v20 + 96) = a2;
  sub_26B5C((uint64_t)a1);
  id v23 = a2;
  sub_E6D70();
  sub_E61F0();
  v19(v7, 0, 1, v18);
  id v24 = (_OWORD *)swift_allocObject();
  long long v25 = a1[3];
  v24[3] = a1[2];
  v24[4] = v25;
  v24[5] = a1[4];
  long long v26 = a1[1];
  v24[1] = *a1;
  v24[2] = v26;
  sub_26B5C((uint64_t)a1);
  uint64_t v27 = v36;
  sub_E6D70();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v29 = v37;
  v28(v37, v17, v8);
  Swift::String v30 = v38;
  uint64_t v31 = v27;
  v28(v38, v27, v8);
  uint64_t v32 = v39;
  v28(v39, v29, v8);
  uint64_t v33 = sub_10C7C(&qword_122D20);
  v28(&v32[*(int *)(v33 + 48)], v30, v8);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
  v34(v31, v8);
  v34(v17, v8);
  v34(v30, v8);
  return ((uint64_t (*)(char *, uint64_t))v34)(v29, v8);
}

uint64_t sub_26FB8@<X0>(char *a1@<X8>)
{
  return sub_26BD8(*(_OWORD **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_26FC0@<X0>(uint64_t a1@<X8>)
{
  return sub_26FE8((void *)0x80000000000F1850, a1);
}

uint64_t sub_26FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_26FE8((void *)0x80000000000F1820, a1);
}

uint64_t sub_26FE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_B7108(0xD000000000000022, a1);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_27050()
{
  type metadata accessor for GCSPreferencesStore();
  sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_270C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t result = sub_E6D10();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = v19;
  *(void *)(a9 + 72) = v20;
  return result;
}

uint64_t sub_27170@<X0>(uint64_t a1@<X8>)
{
  return sub_26400(a1);
}

id sub_271B4()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_27244()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_272CC()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_2731C()
{
  return sub_E6DF0();
}

uint64_t (*sub_27370(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 32);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_27410;
}

uint64_t sub_27414()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_27468()
{
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return v1;
}

uint64_t sub_274B8()
{
  return sub_E6DF0();
}

void (*sub_2750C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  v3[5] = v4;
  v3[6] = v5;
  char v6 = (void *)v1[7];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  id v7 = v6;
  swift_retain();
  swift_retain();
  v3[8] = sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return sub_275B4;
}

void sub_275B4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)uint64_t v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_2766C()
{
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  return v1;
}

uint64_t sub_276C0()
{
  return sub_27A28((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileSheetView()
{
  uint64_t result = qword_126570;
  if (!qword_126570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_27724(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileSheetView();
  sub_2CD70(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_2CE60(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void (*sub_277F8(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileSheetView();
  sub_279A8(v1 + *(int *)(v6 + 28), (uint64_t)v5);
  sub_E6DE0();
  return sub_278DC;
}

void sub_278DC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_2CD70(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_2CD14((uint64_t)v2, &qword_122BB0);
    sub_2CE60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  else
  {
    sub_E6DF0();
    sub_2CD14((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_279A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_27A10()
{
  return sub_27A28((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_27A28(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileSheetView();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

__n128 sub_27A7C@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileSheetView();
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_27B30()
{
  return sub_E6DF0();
}

void (*sub_27BE4(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  __n128 v4 = (long long *)(v1 + *(int *)(type metadata accessor for GCSProfileSheetView() + 32));
  long long v6 = v4[6];
  long long v5 = v4[7];
  long long v7 = v4[5];
  v3[6] = v6;
  v3[7] = v5;
  long long v8 = v4[7];
  v3[8] = v4[8];
  long long v10 = v4[2];
  long long v9 = v4[3];
  long long v11 = v4[1];
  v3[2] = v10;
  v3[3] = v9;
  long long v12 = v4[3];
  long long v14 = v4[4];
  long long v13 = v4[5];
  v3[4] = v14;
  v3[5] = v13;
  long long v15 = v4[1];
  long long v16 = *v4;
  *long long v3 = *v4;
  v3[1] = v15;
  *(_OWORD *)((char *)v3 + 248) = v6;
  long long v17 = v4[8];
  *(_OWORD *)((char *)v3 + 264) = v8;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v17;
  *(_OWORD *)((char *)v3 + 184) = v10;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(_OWORD *)((char *)v3 + 216) = v14;
  *(_OWORD *)((char *)v3 + 232) = v7;
  *(_OWORD *)((char *)v3 + 152) = v16;
  *((void *)v3 + 18) = *((void *)v4 + 18);
  *((void *)v3 + 37) = *((void *)v4 + 18);
  *(_OWORD *)((char *)v3 + 168) = v11;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_27CE8;
}

void sub_27CE8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

uint64_t sub_27E80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 136);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_27F58(void **a1)
{
  uint64_t v2 = *a1;
  id v3 = a1[15];
  swift_bridgeObjectRetain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_28014(uint64_t a1)
{
  id v4 = *(void **)(a1 + 16);
  id v3 = *(void **)(a1 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_280EC(uint64_t a1)
{
  id v4 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

double sub_281A8@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileSheetView();
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_28264()
{
  type metadata accessor for GCSProfileSheetView();
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_282C4()
{
  return sub_E6DF0();
}

uint64_t (*sub_2832C(void *a1))()
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  long long v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GCSProfileSheetView() + 36));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((unsigned char *)v4 + 16);
  *((unsigned char *)v3 + 19) = (_BYTE)v4;
  *long long v3 = v5;
  v3[1] = v6;
  *((unsigned char *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_283D4;
}

void sub_283D8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_28448()
{
  type metadata accessor for GCSProfileSheetView();
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_284AC()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_284E8()
{
  return 0;
}

void *sub_284F4()
{
  uint64_t v1 = v0;
  uint64_t v82 = type metadata accessor for GCSProfileParams();
  uint64_t v2 = __chkstk_darwin(v82);
  uint64_t v85 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v84 = (char *)&v76 - v5;
  __chkstk_darwin(v4);
  long long v7 = (char *)&v76 - v6;
  uint64_t v8 = type metadata accessor for GCSProfileSheetView();
  uint64_t v9 = v0 + *(int *)(v8 + 28);
  uint64_t v10 = sub_10C7C(&qword_122BB0);
  long long v83 = v7;
  uint64_t v79 = v10;
  uint64_t v81 = v9;
  sub_E6DE0();
  uint64_t v78 = v8;
  uint64_t v11 = *(int *)(v8 + 32);
  uint64_t v80 = v1;
  long long v12 = *(_OWORD *)(v1 + v11 + 112);
  long long v119 = *(_OWORD *)(v1 + v11 + 96);
  long long v120 = v12;
  long long v121 = *(_OWORD *)(v1 + v11 + 128);
  uint64_t v122 = *(void *)(v1 + v11 + 144);
  long long v13 = *(_OWORD *)(v1 + v11 + 48);
  long long v115 = *(_OWORD *)(v1 + v11 + 32);
  long long v116 = v13;
  long long v14 = *(_OWORD *)(v1 + v11 + 80);
  long long v117 = *(_OWORD *)(v1 + v11 + 64);
  long long v118 = v14;
  long long v15 = *(_OWORD *)(v1 + v11);
  long long v16 = *(_OWORD *)(v1 + v11 + 16);
  uint64_t v77 = v1 + v11;
  long long v113 = v15;
  long long v114 = v16;
  uint64_t v76 = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  uint64_t v17 = v124;
  swift_bridgeObjectRetain();
  double result = (void *)sub_280EC((uint64_t)v123);
  uint64_t v88 = *(void *)(v17 + 16);
  if (!v88)
  {
    swift_bridgeObjectRelease();
    long long v20 = _swiftEmptyArrayStorage;
LABEL_47:
    uint64_t v60 = sub_DC24C((uint64_t)v20);
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v84;
    sub_E6DE0();
    uint64_t v62 = sub_DF7D8(v60);
    swift_bridgeObjectRelease();
    sub_2CE60(v61, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    uint64_t v63 = v82;
    uint64_t v64 = (uint64_t)v83;
    uint64_t v65 = *(int *)(v82 + 44);
    swift_bridgeObjectRelease();
    *(void *)(v64 + v65) = v62;
    long long v66 = *(_OWORD *)(v77 + 112);
    long long v119 = *(_OWORD *)(v77 + 96);
    long long v120 = v66;
    long long v121 = *(_OWORD *)(v77 + 128);
    uint64_t v122 = *(void *)(v77 + 144);
    long long v67 = *(_OWORD *)(v77 + 48);
    long long v115 = *(_OWORD *)(v77 + 32);
    long long v116 = v67;
    long long v68 = *(_OWORD *)(v77 + 80);
    long long v117 = *(_OWORD *)(v77 + 64);
    long long v118 = v68;
    long long v69 = *(_OWORD *)(v77 + 16);
    long long v113 = *(_OWORD *)v77;
    long long v114 = v69;
    sub_E6DE0();
    long long v119 = v110;
    long long v120 = v111;
    *(void *)&long long v121 = v112;
    long long v115 = v106;
    long long v116 = v107;
    long long v117 = v108;
    long long v118 = v109;
    long long v113 = v104;
    long long v114 = v105;
    sub_280EC((uint64_t)&v113);
    *(void *)(v64 + *(int *)(v63 + 72)) = v114;
    uint64_t v70 = v80 + *(int *)(v78 + 40);
    long long v71 = *(_OWORD *)v70;
    uint64_t v72 = *(void *)(v70 + 16);
    long long v104 = v71;
    *(void *)&long long v105 = v72;
    sub_10C7C(&qword_122CB8);
    sub_E6D20();
    uint64_t v73 = v102;
    uint64_t v74 = v103;
    char v75 = (void *)(v64 + *(int *)(v63 + 20));
    swift_bridgeObjectRelease();
    void *v75 = v73;
    v75[1] = v74;
    sub_2CD70(v64, v61, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_2CD70(v61, v85, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_2CE60(v61, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    return (void *)sub_2CE60(v64, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  unint64_t v19 = 0;
  uint64_t v87 = v17 + 32;
  long long v20 = _swiftEmptyArrayStorage;
  uint64_t v86 = v17;
  while (v19 < *(void *)(v17 + 16))
  {
    unint64_t v92 = v19;
    long long v21 = (void *)(v87 + (v19 << 6));
    uint64_t v22 = v21[1];
    uint64_t v23 = v21[4];
    uint64_t v24 = v21[5];
    uint64_t v25 = v21[6];
    uint64_t v26 = v21[7];
    int64_t v27 = *(void *)(v25 + 16);
    uint64_t v90 = v21[3];
    uint64_t v91 = v22;
    uint64_t v89 = v23;
    uint64_t v93 = v25;
    uint64_t v94 = v24;
    uint64_t v96 = v26;
    if (v27)
    {
      uint64_t v95 = v20;
      *(void *)&long long v104 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2C690(0, v27, 0);
      long long v28 = (void *)v104;
      long long v29 = (uint64_t *)(v25 + 64);
      do
      {
        uint64_t v30 = *(v29 - 4);
        uint64_t v31 = *(v29 - 3);
        uint64_t v33 = *(v29 - 2);
        uint64_t v32 = *(v29 - 1);
        uint64_t v100 = *v29;
        uint64_t v101 = v30;
        *(void *)&long long v104 = v28;
        unint64_t v34 = v28[2];
        unint64_t v35 = v28[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34 >= v35 >> 1)
        {
          sub_2C690((void *)(v35 > 1), v34 + 1, 1);
          long long v28 = (void *)v104;
        }
        v29 += 5;
        *((void *)&v114 + 1) = &type metadata for GCSElementMappingView;
        *(void *)&long long v115 = &off_118338;
        uint64_t v36 = (void *)swift_allocObject();
        *(void *)&long long v113 = v36;
        v36[2] = v101;
        v36[3] = v31;
        v36[4] = v33;
        v36[5] = v32;
        v36[6] = v100;
        v28[2] = v34 + 1;
        double result = (void *)sub_2C6B8(&v113, (uint64_t)&v28[5 * v34 + 4]);
        --v27;
      }
      while (v27);
      long long v20 = v95;
      uint64_t v26 = v96;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double result = (void *)swift_bridgeObjectRetain();
      long long v28 = _swiftEmptyArrayStorage;
    }
    uint64_t v37 = v28[2];
    int64_t v38 = v20[2];
    int64_t v39 = v38 + v37;
    if (__OFADD__(v38, v37)) {
      goto LABEL_49;
    }
    double result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v39 <= v20[3] >> 1)
    {
      if (v28[2]) {
        goto LABEL_17;
      }
    }
    else
    {
      if (v38 <= v39) {
        int64_t v43 = v38 + v37;
      }
      else {
        int64_t v43 = v38;
      }
      double result = sub_2C558(result, v43, 1, v20);
      long long v20 = result;
      if (v28[2])
      {
LABEL_17:
        if ((v20[3] >> 1) - v20[2] < v37) {
          goto LABEL_53;
        }
        sub_10C7C(&qword_122CB0);
        double result = (void *)swift_arrayInitWithCopy();
        if (v37)
        {
          uint64_t v40 = v20[2];
          BOOL v41 = __OFADD__(v40, v37);
          uint64_t v42 = v40 + v37;
          if (v41) {
            goto LABEL_55;
          }
          v20[2] = v42;
        }
        goto LABEL_26;
      }
    }
    if (v37) {
      goto LABEL_52;
    }
LABEL_26:
    double result = (void *)swift_bridgeObjectRelease();
    int64_t v44 = *(void *)(v26 + 16);
    if (v44)
    {
      uint64_t v95 = v20;
      *(void *)&long long v104 = _swiftEmptyArrayStorage;
      sub_2C690(0, v44, 0);
      uint64_t v45 = (void *)v104;
      long long v46 = (unsigned __int8 *)(v26 + 74);
      do
      {
        uint64_t v47 = *(void *)(v46 - 42);
        uint64_t v48 = *(void *)(v46 - 34);
        uint64_t v49 = *(void *)(v46 - 26);
        uint64_t v50 = *(void *)(v46 - 18);
        uint64_t v100 = *(void *)(v46 - 10);
        uint64_t v101 = v49;
        LODWORD(v49) = *(v46 - 2);
        int v98 = *(v46 - 1);
        int v99 = v49;
        int v97 = *v46;
        unint64_t v51 = v45[2];
        unint64_t v52 = v45[3];
        *(void *)&long long v104 = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= v52 >> 1)
        {
          sub_2C690((void *)(v52 > 1), v51 + 1, 1);
          uint64_t v45 = (void *)v104;
        }
        v46 += 48;
        *((void *)&v114 + 1) = &type metadata for GCSDirectionPadElementMappingView;
        *(void *)&long long v115 = &off_1183F0;
        uint64_t v53 = swift_allocObject();
        *(void *)&long long v113 = v53;
        *(void *)(v53 + 16) = v47;
        *(void *)(v53 + 24) = v48;
        *(void *)(v53 + 32) = v101;
        *(void *)(v53 + 4sub_E59A4(2, 18, 1, 0) = v50;
        *(void *)(v53 + 48) = v100;
        *(unsigned char *)(v53 + 56) = v99;
        *(unsigned char *)(v53 + 57) = v98;
        *(unsigned char *)(v53 + 58) = v97;
        _OWORD v45[2] = v51 + 1;
        double result = (void *)sub_2C6B8(&v113, (uint64_t)&v45[5 * v51 + 4]);
        --v44;
      }
      while (v44);
      long long v20 = v95;
    }
    else
    {
      uint64_t v45 = _swiftEmptyArrayStorage;
    }
    uint64_t v54 = v45[2];
    uint64_t v55 = v20[2];
    uint64_t v56 = v55 + v54;
    if (__OFADD__(v55, v54)) {
      goto LABEL_50;
    }
    if (v56 > v20[3] >> 1)
    {
      if (v55 <= v56) {
        int64_t v59 = v55 + v54;
      }
      else {
        int64_t v59 = v20[2];
      }
      double result = sub_2C558((int *)((char *)&dword_0 + 1), v59, 1, v20);
      long long v20 = result;
      uint64_t v55 = result[2];
      if (v45[2])
      {
LABEL_36:
        if ((v20[3] >> 1) - v55 < v54) {
          goto LABEL_54;
        }
        sub_10C7C(&qword_122CB0);
        double result = (void *)swift_arrayInitWithCopy();
        if (v54)
        {
          uint64_t v57 = v20[2];
          BOOL v41 = __OFADD__(v57, v54);
          uint64_t v58 = v57 + v54;
          if (v41) {
            goto LABEL_56;
          }
          v20[2] = v58;
        }
        goto LABEL_4;
      }
    }
    else if (v54)
    {
      goto LABEL_36;
    }
    if (v54) {
      goto LABEL_51;
    }
LABEL_4:
    unint64_t v19 = v92 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double result = (void *)swift_bridgeObjectRelease();
    uint64_t v17 = v86;
    if (v19 == v88)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_28D54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = sub_E6540();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GCSProfileParams();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10C7C(&qword_122BC0);
  __chkstk_darwin(v27);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_122BC8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  long long v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = sub_E65D0();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v16 = (uint64_t)&v11[*(int *)(sub_10C7C(&qword_122BD0) + 44)];
  uint64_t v26 = v1;
  sub_29128(v1, v16);
  type metadata accessor for GCSProfileSheetView();
  sub_10C7C(&qword_122BB0);
  sub_E6DE0();
  uint64_t v17 = &v9[*(int *)(v7 + 28)];
  uint64_t v19 = *(void *)v17;
  long long v18 = (void *)*((void *)v17 + 1);
  swift_bridgeObjectRetain();
  sub_2CE60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  uint64_t v32 = v19;
  uint64_t v33 = v18;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v2);
  uint64_t v20 = sub_2CC88(&qword_122BD8, &qword_122BC0);
  unint64_t v21 = sub_187B0();
  uint64_t v22 = v27;
  sub_E6A20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  sub_2CD14((uint64_t)v11, &qword_122BC0);
  uint64_t v31 = v26;
  sub_10C7C(&qword_122BE0);
  uint64_t v32 = v22;
  uint64_t v33 = &type metadata for String;
  uint64_t v34 = v20;
  unint64_t v35 = v21;
  swift_getOpaqueTypeConformance2();
  sub_2CC88(&qword_122BE8, &qword_122BE0);
  uint64_t v23 = v28;
  sub_E6A70();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v23);
}

uint64_t sub_29128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_E66C0();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_122CC8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10C7C(&qword_122CD0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10C7C(&qword_122CD8);
  uint64_t v26 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  __chkstk_darwin(v13);
  long long v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  sub_10C7C(&qword_122CE0);
  sub_2CC88(&qword_122CE8, &qword_122CE0);
  sub_E6890();
  uint64_t v16 = *(void *)(a1 + 56);
  long long v32 = *(_OWORD *)(a1 + 40);
  uint64_t v33 = v16;
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  id v17 = v34;
  if (v34)
  {
    unsigned __int8 v18 = [v34 customizable];

    char v19 = v18 ^ 1;
  }
  else
  {
    char v19 = 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v19;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  uint64_t v22 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = (uint64_t)sub_2CBAC;
  _OWORD v22[2] = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_E66B0();
  sub_2CBC4();
  sub_2CCCC(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
  uint64_t v23 = v29;
  sub_E6A90();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v23);
  sub_2CD14((uint64_t)v12, &qword_122CD0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v30, v15, v27);
}

uint64_t sub_29518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v3 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v3);
  uint64_t v111 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GCSProfileContentView();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v112 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v113 = (uint64_t)&v90 - v8;
  uint64_t v9 = type metadata accessor for GCSProfileSheetView();
  uint64_t v10 = (long long *)(a1 + *(int *)(v9 + 32));
  long long v11 = v10[7];
  long long v176 = v10[6];
  long long v177 = v11;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v12 = v10[3];
  long long v172 = v10[2];
  long long v173 = v12;
  long long v13 = v10[5];
  long long v174 = v10[4];
  long long v175 = v13;
  long long v14 = v10[1];
  long long v170 = *v10;
  long long v171 = v14;
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v156[6];
  long long v177 = v156[7];
  long long v178 = v156[8];
  uint64_t v179 = v157;
  long long v172 = v156[2];
  long long v173 = v156[3];
  long long v174 = v156[4];
  long long v175 = v156[5];
  long long v170 = v156[0];
  long long v171 = v156[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v156);
  uint64_t v109 = v152;
  uint64_t v110 = v151;
  long long v108 = (void *)v153;
  long long v15 = v10[7];
  long long v176 = v10[6];
  long long v177 = v15;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v16 = v10[3];
  long long v172 = v10[2];
  long long v173 = v16;
  long long v17 = v10[5];
  long long v174 = v10[4];
  long long v175 = v17;
  long long v18 = v10[1];
  long long v170 = *v10;
  long long v171 = v18;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v158[6];
  long long v177 = v158[7];
  long long v178 = v158[8];
  uint64_t v179 = v159;
  long long v172 = v158[2];
  long long v173 = v158[3];
  long long v174 = v158[4];
  long long v175 = v158[5];
  long long v170 = v158[0];
  long long v171 = v158[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v158);
  uint64_t v107 = v148;
  uint64_t v104 = v150;
  uint64_t v105 = v149;
  long long v19 = v10[7];
  long long v176 = v10[6];
  long long v177 = v19;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v20 = v10[3];
  long long v172 = v10[2];
  long long v173 = v20;
  long long v21 = v10[5];
  long long v174 = v10[4];
  long long v175 = v21;
  long long v22 = v10[1];
  long long v170 = *v10;
  long long v171 = v22;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v160[6];
  long long v177 = v160[7];
  long long v178 = v160[8];
  uint64_t v179 = v161;
  long long v172 = v160[2];
  long long v173 = v160[3];
  long long v174 = v160[4];
  long long v175 = v160[5];
  long long v170 = v160[0];
  long long v171 = v160[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v160);
  uint64_t v102 = v146;
  uint64_t v103 = v145;
  uint64_t v101 = v147;
  long long v23 = v10[7];
  long long v176 = v10[6];
  long long v177 = v23;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v24 = v10[3];
  long long v172 = v10[2];
  long long v173 = v24;
  long long v25 = v10[5];
  long long v174 = v10[4];
  long long v175 = v25;
  long long v26 = v10[1];
  long long v170 = *v10;
  long long v171 = v26;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v162[6];
  long long v177 = v162[7];
  long long v178 = v162[8];
  uint64_t v179 = v163;
  long long v172 = v162[2];
  long long v173 = v162[3];
  long long v174 = v162[4];
  long long v175 = v162[5];
  long long v170 = v162[0];
  long long v171 = v162[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v162);
  uint64_t v99 = v143;
  uint64_t v100 = v142;
  int v98 = v144;
  long long v27 = v10[7];
  long long v176 = v10[6];
  long long v177 = v27;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v28 = v10[3];
  long long v172 = v10[2];
  long long v173 = v28;
  long long v29 = v10[5];
  long long v174 = v10[4];
  long long v175 = v29;
  long long v30 = v10[1];
  long long v170 = *v10;
  long long v171 = v30;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v164[6];
  long long v177 = v164[7];
  long long v178 = v164[8];
  uint64_t v179 = v165;
  long long v172 = v164[2];
  long long v173 = v164[3];
  long long v174 = v164[4];
  long long v175 = v164[5];
  long long v170 = v164[0];
  long long v171 = v164[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v164);
  uint64_t v96 = v140;
  uint64_t v97 = v139;
  int v95 = v141;
  long long v31 = v10[7];
  long long v176 = v10[6];
  long long v177 = v31;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v32 = v10[3];
  long long v172 = v10[2];
  long long v173 = v32;
  long long v33 = v10[5];
  long long v174 = v10[4];
  long long v175 = v33;
  long long v34 = v10[1];
  long long v170 = *v10;
  long long v171 = v34;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v166[6];
  long long v177 = v166[7];
  long long v178 = v166[8];
  uint64_t v179 = v167;
  long long v172 = v166[2];
  long long v173 = v166[3];
  long long v174 = v166[4];
  long long v175 = v166[5];
  long long v170 = v166[0];
  long long v171 = v166[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v166);
  uint64_t v93 = v137;
  uint64_t v94 = v136;
  uint64_t v92 = v138;
  long long v35 = v10[7];
  long long v176 = v10[6];
  long long v177 = v35;
  long long v178 = v10[8];
  uint64_t v179 = *((void *)v10 + 18);
  long long v36 = v10[3];
  long long v172 = v10[2];
  long long v173 = v36;
  long long v37 = v10[5];
  long long v174 = v10[4];
  long long v175 = v37;
  long long v38 = v10[1];
  long long v170 = *v10;
  long long v171 = v38;
  sub_E6E10();
  swift_getKeyPath();
  long long v176 = v168[6];
  long long v177 = v168[7];
  long long v178 = v168[8];
  uint64_t v179 = v169;
  long long v172 = v168[2];
  long long v173 = v168[3];
  long long v174 = v168[4];
  long long v175 = v168[5];
  long long v170 = v168[0];
  long long v171 = v168[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v168);
  v154[2] = v132;
  v154[3] = v133;
  v154[4] = v134;
  uint64_t v155 = v135;
  v154[0] = v130;
  v154[1] = v131;
  sub_E6E10();
  long long v39 = v10[7];
  long long v126 = v10[6];
  long long v127 = v39;
  long long v128 = v10[8];
  uint64_t v129 = *((void *)v10 + 18);
  long long v40 = v10[3];
  long long v122 = v10[2];
  long long v123 = v40;
  long long v41 = v10[5];
  long long v124 = v10[4];
  long long v125 = v41;
  long long v42 = v10[1];
  long long v120 = *v10;
  long long v121 = v42;
  sub_E6E10();
  swift_getKeyPath();
  long long v126 = v176;
  long long v127 = v177;
  long long v128 = v178;
  uint64_t v129 = v179;
  long long v122 = v172;
  long long v123 = v173;
  long long v124 = v174;
  long long v125 = v175;
  long long v120 = v170;
  long long v121 = v171;
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)&v170);
  uint64_t v43 = v117;
  uint64_t v44 = v118;
  uint64_t v45 = v119;
  uint64_t v91 = v9;
  long long v46 = (uint64_t *)(a1 + *(int *)(v9 + 40));
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  uint64_t v49 = v46[2];
  uint64_t v114 = v47;
  uint64_t v115 = v48;
  uint64_t v116 = v49;
  sub_10C7C(&qword_122CB8);
  uint64_t v50 = sub_E6D40();
  unint64_t v52 = *((void *)&v120 + 1);
  unint64_t v51 = v120;
  unint64_t v53 = *((void *)&v121 + 1);
  unint64_t v54 = v121;
  uint64_t v55 = sub_81F00(v50);
  *((void *)&v89 + 1) = v44;
  *(void *)&long long v89 = v43;
  LOBYTE(v88) = 0;
  *((void *)&v87 + 1) = v93;
  *(void *)&long long v87 = v94;
  *((void *)&v86 + 1) = v101;
  *(void *)&long long v86 = v102;
  *((void *)&v85 + 1) = v103;
  *(void *)&long long v85 = v104;
  sub_81F48(0, v55, v56, v110, v109, (uint64_t)v108, v107, v105, v113, v85, v86, v100, v99, v98, v97, v96, v95, v87, v92,
    v88,
    (uint64_t)v154,
    v111,
    v89,
    v45,
    (__n128)__PAIR128__(v52, v51),
    v54,
    v53);
  uint64_t v57 = *(void *)(a1 + 24);
  uint64_t v58 = a1;
  char v59 = *(unsigned char *)(a1 + 32);
  *(void *)&long long v120 = *(void *)(a1 + 16);
  *((void *)&v120 + 1) = v57;
  LOBYTE(v121) = v59;
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  long long v108 = 0;
  uint64_t v109 = 0;
  uint64_t v107 = 0;
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  if ((v130 & 1) == 0)
  {
    uint64_t v67 = *(void *)(v58 + 56);
    long long v130 = *(_OWORD *)(v58 + 40);
    *(void *)&long long v131 = v67;
    sub_10C7C(&qword_122B68);
    sub_E6E10();
    uint64_t v107 = *((void *)&v120 + 1);
    long long v108 = (void *)v121;
    uint64_t v109 = v120;
    long long v68 = (uint64_t *)(v58 + *(int *)(v91 + 36));
    uint64_t v69 = *v68;
    uint64_t v70 = v68[1];
    LOBYTE(v68) = *((unsigned char *)v68 + 16);
    *(void *)&long long v130 = v69;
    *((void *)&v130 + 1) = v70;
    LOBYTE(v131) = (_BYTE)v68;
    sub_E6E10();
    uint64_t v63 = *((void *)&v120 + 1);
    uint64_t v62 = v120;
    uint64_t v64 = v121;
    type metadata accessor for GCSPreferencesStore();
    sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t v60 = sub_E63F0();
    uint64_t v61 = v71;
    LOBYTE(v13sub_E59A4(2, 18, 1, 0) = 0;
    sub_E6D10();
    uint64_t v65 = v120;
    uint64_t v66 = *((void *)&v120 + 1);
  }
  uint64_t v110 = v63;
  uint64_t v111 = v64;
  uint64_t v72 = v112;
  uint64_t v73 = v65;
  sub_2CD70(v113, v112, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v74 = v72;
  uint64_t v75 = v61;
  uint64_t v76 = v106;
  sub_2CD70(v74, v106, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v77 = (uint64_t *)(v76 + *(int *)(sub_10C7C(&qword_122D18) + 48));
  *uint64_t v77 = v60;
  v77[1] = v75;
  uint64_t v79 = v109;
  uint64_t v78 = v110;
  uint64_t v80 = v107;
  v77[2] = v109;
  v77[3] = v80;
  uint64_t v81 = v60;
  uint64_t v82 = v108;
  v77[4] = (uint64_t)v108;
  v77[5] = v62;
  uint64_t v83 = v111;
  v77[6] = v78;
  v77[7] = v83;
  v77[8] = v73;
  v77[9] = v66;
  sub_2CDD8(v81, v75, v79, v80, v82);
  sub_2CE60(v113, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  sub_2CEC0(v81, v75, v79, v80, v82);
  return sub_2CE60(v112, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
}

uint64_t sub_29F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  uint64_t v3 = sub_10C7C(&qword_122CA0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_E6680();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10C7C(&qword_122CA8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)v18 - v12;
  sub_E6660();
  v18[8] = a1;
  sub_10C7C(&qword_122B88);
  sub_2CC88(&qword_122BA0, &qword_122B88);
  sub_E6290();
  sub_E6670();
  v18[4] = a1;
  sub_E6290();
  long long v14 = &v5[*(int *)(v3 + 48)];
  long long v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v5, v13, v7);
  v15(v14, v11, v7);
  sub_E65F0();
  long long v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_2A1D4@<X0>(uint64_t a1@<X8>)
{
  return sub_29F30(*(void *)(v1 + 16), a1);
}

uint64_t sub_2A1DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileSheetView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v9[0] = sub_B7108(0x4C45434E4143, (void *)0xE600000000000000);
  v9[1] = v5;
  sub_2CD70(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileSheetView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_2C454((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  sub_187B0();
  return sub_E6DA0();
}

uint64_t sub_2A324(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileSheetView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v9[0] = sub_B7108(1162760004, (void *)0xE400000000000000);
  v9[1] = v5;
  sub_2CD70(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileSheetView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_2C454((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  sub_187B0();
  return sub_E6DA0();
}

void sub_2A468(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for GCSProfileSheetView() + 36));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  LOBYTE(v5) = *((unsigned char *)v5 + 16);
  *(void *)&long long v15 = v6;
  *((void *)&v15 + 1) = v7;
  LOBYTE(v16) = (_BYTE)v5;
  LOBYTE(v17) = 0;
  sub_10C7C(&qword_122890);
  sub_E6DF0();
  sub_284F4();
  uint64_t v8 = *(void *)(a1 + 56);
  long long v15 = *(_OWORD *)(a1 + 40);
  uint64_t v16 = v8;
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  uint64_t v9 = v17;
  uint64_t v10 = *(void **)a1;
  if (v17)
  {
    if (v10)
    {
      sub_2C518();
      long long v11 = v10;
      sub_10C7C(&qword_122BB0);
      sub_E6DE0();
      id v12 = sub_E031C((uint64_t)v4);
      char v13 = sub_A1C98();
      (*(void (**)(void *, id, void))&stru_298.segname[(swift_isaMask & *v11) + 16])(v9, v12, v13 & 1);

LABEL_6:
      return;
    }
  }
  else if (v10)
  {
    sub_2C518();
    long long v11 = v10;
    sub_10C7C(&qword_122BB0);
    sub_E6DE0();
    id v12 = sub_E031C((uint64_t)v4);
    char v14 = sub_A22B8();
    (*(void (**)(id, void))((char *)&stru_298.reloff + (swift_isaMask & *v11)))(v12, v14 & 1);
    goto LABEL_6;
  }
  type metadata accessor for GCSPreferencesStore();
  sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  sub_E63E0();
  __break(1u);
}

double sub_2A718@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  long long v15 = (int *)type metadata accessor for GCSProfileSheetView();
  sub_2A818(a10, a9 + v15[7], &qword_122BB0);
  uint64_t v16 = a9 + v15[8];
  long long v17 = *(_OWORD *)(a11 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(a11 + 96);
  *(_OWORD *)(v16 + 112) = v17;
  *(_OWORD *)(v16 + 128) = *(_OWORD *)(a11 + 128);
  *(void *)(v16 + 144) = *(void *)(a11 + 144);
  long long v18 = *(_OWORD *)(a11 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(a11 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  long long v19 = *(_OWORD *)(a11 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a11 + 64);
  *(_OWORD *)(v16 + 8sub_E59A4(2, 18, 1, 0) = v19;
  long long v20 = *(_OWORD *)(a11 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)a11;
  *(_OWORD *)(v16 + 16) = v20;
  uint64_t v21 = a9 + v15[9];
  *(void *)uint64_t v21 = a12;
  *(void *)(v21 + 8) = a13;
  *(unsigned char *)(v21 + 16) = a14;
  uint64_t v22 = a9 + v15[10];
  sub_E6D10();
  double result = *(double *)&v24;
  *(_OWORD *)uint64_t v22 = v24;
  *(void *)(v22 + 16) = v25;
  return result;
}

uint64_t sub_2A818(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2A87C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2A898()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2A8BC()
{
  return sub_E69D0();
}

uint64_t initializeBufferWithCopyOfBuffer for GCSProfileDeleteButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSProfileDeleteButton(id *a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GCSProfileDeleteButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  id v8 = v3;
  swift_retain();
  swift_retain();
  id v9 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSProfileDeleteButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for GCSProfileDeleteButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for GCSProfileDeleteButton(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileDeleteButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileDeleteButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8sub_E59A4(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8sub_E59A4(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileDeleteButton()
{
  return &type metadata for GCSProfileDeleteButton;
}

char *sub_2AC68(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  long long v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v51 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    id v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    *((void *)a1 + 3) = a2[3];
    a1[32] = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v7;
    char v59 = a2[7];
    *((void *)a1 + 7) = v59;
    uint64_t v8 = a3[7];
    id v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(void *)id v9 = *(char **)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    id v12 = v4;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    char v13 = v59;
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    long long v15 = &v9[v14];
    uint64_t v16 = v10 + v14;
    uint64_t v17 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    long long v18 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v19 = v18[5];
    long long v20 = &v15[v19];
    uint64_t v21 = (void *)(v16 + v19);
    uint64_t v22 = v21[1];
    *(void *)long long v20 = *v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = v18[6];
    long long v24 = &v15[v23];
    uint64_t v25 = (void *)(v16 + v23);
    uint64_t v60 = v25[1];
    *(void *)long long v24 = *v25;
    *((void *)v24 + 1) = v60;
    uint64_t v26 = v18[7];
    long long v27 = &v15[v26];
    long long v28 = (void *)(v16 + v26);
    uint64_t v58 = v28[1];
    *(void *)long long v27 = *v28;
    *((void *)v27 + 1) = v58;
    v15[v18[8]] = *(unsigned char *)(v16 + v18[8]);
    v15[v18[9]] = *(unsigned char *)(v16 + v18[9]);
    uint64_t v29 = v18[10];
    long long v30 = &v15[v29];
    long long v31 = (void *)(v16 + v29);
    uint64_t v57 = v31[1];
    *(void *)long long v30 = *v31;
    *((void *)v30 + 1) = v57;
    *(void *)&v15[v18[11]] = *(void *)(v16 + v18[11]);
    v15[v18[12]] = *(unsigned char *)(v16 + v18[12]);
    *(void *)&v15[v18[13]] = *(void *)(v16 + v18[13]);
    *(void *)&v15[v18[14]] = *(void *)(v16 + v18[14]);
    *(void *)&v15[v18[15]] = *(void *)(v16 + v18[15]);
    v15[v18[16]] = *(unsigned char *)(v16 + v18[16]);
    v15[v18[17]] = *(unsigned char *)(v16 + v18[17]);
    *(void *)&v15[v18[18]] = *(void *)(v16 + v18[18]);
    uint64_t v32 = a3[8];
    uint64_t v33 = a3[9];
    long long v34 = &a1[v32];
    uint64_t v35 = (uint64_t)a2 + v32;
    uint64_t v36 = *(void *)(v35 + 8);
    *(void *)long long v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    long long v37 = *(void **)(v35 + 16);
    uint64_t v38 = *(void *)(v35 + 24);
    *((void *)v34 + 2) = v37;
    *((void *)v34 + 3) = v38;
    *((_OWORD *)v34 + 2) = *(_OWORD *)(v35 + 32);
    uint64_t v39 = *(void *)(v35 + 56);
    *((void *)v34 + 6) = *(void *)(v35 + 48);
    *((void *)v34 + 7) = v39;
    uint64_t v40 = *(void *)(v35 + 72);
    *((void *)v34 + 8) = *(void *)(v35 + 64);
    *((void *)v34 + 9) = v40;
    uint64_t v41 = *(void *)(v35 + 88);
    *((void *)v34 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v35 + 80);
    *((void *)v34 + 11) = v41;
    uint64_t v42 = *(void *)(v35 + 104);
    *((void *)v34 + 12) = *(void *)(v35 + 96);
    *((void *)v34 + 13) = v42;
    uint64_t v43 = *(void *)(v35 + 120);
    *((void *)v34 + 14) = *(void *)(v35 + 112);
    *((void *)v34 + 15) = v43;
    v34[128] = *(unsigned char *)(v35 + 128);
    v34[129] = *(unsigned char *)(v35 + 129);
    unint64_t v54 = *(void **)(v35 + 136);
    uint64_t v55 = *(void *)(v35 + 144);
    *((void *)v34 + 17) = v54;
    *((void *)v34 + 18) = v55;
    uint64_t v44 = &a1[v33];
    uint64_t v45 = (uint64_t)a2 + v33;
    uint64_t v56 = *(void *)(v45 + 8);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v56;
    v44[16] = *(unsigned char *)(v45 + 16);
    uint64_t v46 = a3[10];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = (char **)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    *(void *)uint64_t v47 = *v48;
    *((void *)v47 + 1) = v49;
    *((void *)v47 + 2) = v48[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v50 = v37;
    unint64_t v51 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v52 = v54;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v51;
}

uint64_t sub_2B02C(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  long long v4 = (char *)a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  uint64_t v5 = &v4[*(int *)(sub_10C7C(&qword_122BB0) + 32)];
  uint64_t v6 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (id *)((char *)a1 + *(int *)(a2 + 32));
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_2B1F0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  void *v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  id v13 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v14 = v8;
  swift_retain();
  swift_retain();
  uint64_t v15 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  uint64_t v18 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v20 = v19[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = (void *)(v17 + v20);
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = *v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = v19[6];
  uint64_t v25 = &v16[v24];
  uint64_t v26 = (void *)(v17 + v24);
  uint64_t v59 = v26[1];
  *(void *)uint64_t v25 = *v26;
  *((void *)v25 + 1) = v59;
  uint64_t v27 = v19[7];
  long long v28 = &v16[v27];
  uint64_t v29 = (void *)(v17 + v27);
  uint64_t v58 = v29[1];
  *(void *)long long v28 = *v29;
  *((void *)v28 + 1) = v58;
  v16[v19[8]] = *(unsigned char *)(v17 + v19[8]);
  v16[v19[9]] = *(unsigned char *)(v17 + v19[9]);
  uint64_t v30 = v19[10];
  long long v31 = &v16[v30];
  uint64_t v32 = (void *)(v17 + v30);
  uint64_t v57 = v32[1];
  *(void *)long long v31 = *v32;
  *((void *)v31 + 1) = v57;
  *(void *)&v16[v19[11]] = *(void *)(v17 + v19[11]);
  v16[v19[12]] = *(unsigned char *)(v17 + v19[12]);
  *(void *)&v16[v19[13]] = *(void *)(v17 + v19[13]);
  *(void *)&v16[v19[14]] = *(void *)(v17 + v19[14]);
  *(void *)&v16[v19[15]] = *(void *)(v17 + v19[15]);
  v16[v19[16]] = *(unsigned char *)(v17 + v19[16]);
  v16[v19[17]] = *(unsigned char *)(v17 + v19[17]);
  *(void *)&v16[v19[18]] = *(void *)(v17 + v19[18]);
  uint64_t v33 = a3[8];
  uint64_t v34 = a3[9];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  uint64_t v37 = *(void *)(v36 + 8);
  *(void *)uint64_t v35 = *(void *)v36;
  *(void *)(v35 + 8) = v37;
  uint64_t v38 = *(void **)(v36 + 16);
  uint64_t v39 = *(void *)(v36 + 24);
  *(void *)(v35 + 16) = v38;
  *(void *)(v35 + 24) = v39;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  uint64_t v40 = *(void *)(v36 + 56);
  *(void *)(v35 + 48) = *(void *)(v36 + 48);
  *(void *)(v35 + 56) = v40;
  uint64_t v41 = *(void *)(v36 + 72);
  *(void *)(v35 + 64) = *(void *)(v36 + 64);
  *(void *)(v35 + 72) = v41;
  uint64_t v42 = *(void *)(v36 + 88);
  *(void *)(v35 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v36 + 80);
  *(void *)(v35 + 88) = v42;
  uint64_t v43 = *(void *)(v36 + 104);
  *(void *)(v35 + 96) = *(void *)(v36 + 96);
  *(void *)(v35 + 104) = v43;
  uint64_t v53 = *(void *)(v36 + 120);
  *(void *)(v35 + 112) = *(void *)(v36 + 112);
  *(void *)(v35 + 12sub_E59A4(2, 18, 1, 0) = v53;
  *(unsigned char *)(v35 + 128) = *(unsigned char *)(v36 + 128);
  *(unsigned char *)(v35 + 129) = *(unsigned char *)(v36 + 129);
  unint64_t v54 = *(void **)(v36 + 136);
  uint64_t v55 = *(void *)(v36 + 144);
  *(void *)(v35 + 136) = v54;
  *(void *)(v35 + 144) = v55;
  uint64_t v44 = a1 + v34;
  uint64_t v45 = a2 + v34;
  uint64_t v56 = *(void *)(v45 + 8);
  *(void *)uint64_t v44 = *(void *)v45;
  *(void *)(v44 + 8) = v56;
  *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
  uint64_t v46 = a3[10];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  v47[2] = v48[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v50 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v51 = v54;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2B548(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t v10 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v10;
  id v11 = v10;

  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_retain();
  swift_release();
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v16 = v13 + v15;
  uint64_t v17 = v14 + v15;
  uint64_t v18 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v20 = v19[5];
  uint64_t v21 = (void *)(v16 + v20);
  uint64_t v22 = (void *)(v17 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[6];
  uint64_t v24 = (void *)(v16 + v23);
  uint64_t v25 = (void *)(v17 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v19[7];
  uint64_t v27 = (void *)(v16 + v26);
  long long v28 = (void *)(v17 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + v19[8]) = *(unsigned char *)(v17 + v19[8]);
  *(unsigned char *)(v16 + v19[9]) = *(unsigned char *)(v17 + v19[9]);
  uint64_t v29 = v19[10];
  uint64_t v30 = (void *)(v16 + v29);
  long long v31 = (void *)(v17 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + v19[11]) = *(void *)(v17 + v19[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + v19[12]) = *(unsigned char *)(v17 + v19[12]);
  *(void *)(v16 + v19[13]) = *(void *)(v17 + v19[13]);
  *(void *)(v16 + v19[14]) = *(void *)(v17 + v19[14]);
  *(void *)(v16 + v19[15]) = *(void *)(v17 + v19[15]);
  *(unsigned char *)(v16 + v19[16]) = *(unsigned char *)(v17 + v19[16]);
  *(unsigned char *)(v16 + v19[17]) = *(unsigned char *)(v17 + v19[17]);
  *(void *)(v16 + v19[18]) = *(void *)(v17 + v19[18]);
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  swift_retain();
  swift_release();
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  swift_retain();
  swift_release();
  uint64_t v35 = *(void **)(v33 + 16);
  uint64_t v36 = *(void **)(v34 + 16);
  *(void *)(v33 + 16) = v36;
  id v37 = v36;

  *(void *)(v33 + 24) = *(void *)(v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  *(void *)(v33 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v34 + 40);
  *(void *)(v33 + 48) = *(void *)(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 56) = *(void *)(v34 + 56);
  *(void *)(v33 + 64) = *(void *)(v34 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 72) = *(void *)(v34 + 72);
  *(void *)(v33 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v34 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 88) = *(void *)(v34 + 88);
  *(void *)(v33 + 96) = *(void *)(v34 + 96);
  swift_retain();
  swift_release();
  *(void *)(v33 + 104) = *(void *)(v34 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 112) = *(void *)(v34 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v34 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 128) = *(unsigned char *)(v34 + 128);
  *(unsigned char *)(v33 + 129) = *(unsigned char *)(v34 + 129);
  uint64_t v38 = *(void **)(v33 + 136);
  uint64_t v39 = *(void **)(v34 + 136);
  *(void *)(v33 + 136) = v39;
  id v40 = v39;

  *(void *)(v33 + 144) = *(void *)(v34 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[9];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(void *)(a1 + v41) = *(void *)(a2 + v41);
  swift_retain();
  swift_release();
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v42 + 16) = *(unsigned char *)(v43 + 16);
  uint64_t v44 = a3[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = a2 + v44;
  *uint64_t v45 = *(void *)(a2 + v44);
  v45[1] = *(void *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v45[2] = *(void *)(v46 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2B9F4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = a3[7];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)(v13 + v15[5]);
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)(v13 + v15[6]);
  *(_OWORD *)&v12[v15[7]] = *(_OWORD *)(v13 + v15[7]);
  v12[v15[8]] = *(unsigned char *)(v13 + v15[8]);
  v12[v15[9]] = *(unsigned char *)(v13 + v15[9]);
  *(_OWORD *)&v12[v15[10]] = *(_OWORD *)(v13 + v15[10]);
  *(void *)&v12[v15[11]] = *(void *)(v13 + v15[11]);
  v12[v15[12]] = *(unsigned char *)(v13 + v15[12]);
  *(void *)&v12[v15[13]] = *(void *)(v13 + v15[13]);
  *(void *)&v12[v15[14]] = *(void *)(v13 + v15[14]);
  *(void *)&v12[v15[15]] = *(void *)(v13 + v15[15]);
  v12[v15[16]] = *(unsigned char *)(v13 + v15[16]);
  v12[v15[17]] = *(unsigned char *)(v13 + v15[17]);
  *(void *)&v12[v15[18]] = *(void *)(v13 + v15[18]);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  long long v21 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  long long v22 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v22;
  *(void *)(v18 + 144) = *(void *)(v19 + 144);
  long long v23 = *(_OWORD *)(v19 + 128);
  long long v24 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 128) = v23;
  *(_OWORD *)(v18 + 96) = v24;
  uint64_t v25 = a1 + v17;
  uint64_t v26 = a2 + v17;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  return a1;
}

uint64_t sub_2BBD8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  id v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release();
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v12 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v13 = v10 + v12;
  uint64_t v14 = v11 + v12;
  uint64_t v15 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v17 = v16[5];
  uint64_t v18 = (void *)(v13 + v17);
  uint64_t v19 = (uint64_t *)(v14 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v16[6];
  long long v23 = (void *)(v13 + v22);
  long long v24 = (uint64_t *)(v14 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *long long v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v16[7];
  uint64_t v28 = (void *)(v13 + v27);
  uint64_t v29 = (uint64_t *)(v14 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v16[8]) = *(unsigned char *)(v14 + v16[8]);
  *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
  uint64_t v32 = v16[10];
  uint64_t v33 = (void *)(v13 + v32);
  uint64_t v34 = (uint64_t *)(v14 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)(v13 + v16[11]) = *(void *)(v14 + v16[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v16[12]) = *(unsigned char *)(v14 + v16[12]);
  *(void *)(v13 + v16[13]) = *(void *)(v14 + v16[13]);
  *(void *)(v13 + v16[14]) = *(void *)(v14 + v16[14]);
  *(void *)(v13 + v16[15]) = *(void *)(v14 + v16[15]);
  *(unsigned char *)(v13 + v16[16]) = *(unsigned char *)(v14 + v16[16]);
  *(unsigned char *)(v13 + v16[17]) = *(unsigned char *)(v14 + v16[17]);
  *(void *)(v13 + v16[18]) = *(void *)(v14 + v16[18]);
  uint64_t v37 = a3[8];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  swift_release();
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_release();
  id v40 = *(void **)(v38 + 16);
  *(void *)(v38 + 16) = *(void *)(v39 + 16);

  *(void *)(v38 + 24) = *(void *)(v39 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(void *)(v38 + 48) = *(void *)(v39 + 48);
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 64);
  *(void *)(v38 + 56) = *(void *)(v39 + 56);
  *(void *)(v38 + 64) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v39 + 80);
  *(void *)(v38 + 72) = *(void *)(v39 + 72);
  *(void *)(v38 + 8sub_E59A4(2, 18, 1, 0) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v39 + 96);
  *(void *)(v38 + 88) = *(void *)(v39 + 88);
  *(void *)(v38 + 96) = v43;
  swift_release();
  *(void *)(v38 + 104) = *(void *)(v39 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v38 + 112) = *(void *)(v39 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v38 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v39 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v38 + 128) = *(unsigned char *)(v39 + 128);
  *(unsigned char *)(v38 + 129) = *(unsigned char *)(v39 + 129);
  uint64_t v44 = *(void **)(v38 + 136);
  *(void *)(v38 + 136) = *(void *)(v39 + 136);

  *(void *)(v38 + 144) = *(void *)(v39 + 144);
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[9];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  swift_release();
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_release();
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  uint64_t v48 = a3[10];
  uint64_t v49 = (void *)(a1 + v48);
  id v50 = (void *)(a2 + v48);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v49[2] = v50[2];
  swift_release();
  return a1;
}

uint64_t sub_2BF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2BF60);
}

uint64_t sub_2BF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2C014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2C028);
}

uint64_t sub_2C028(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2C0D4()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2C194()
{
  if (!qword_122C48)
  {
    type metadata accessor for GCSProfileParams();
    unint64_t v0 = sub_E6E80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_122C48);
    }
  }
}

unint64_t sub_2C1F0()
{
  unint64_t result = qword_122C90;
  if (!qword_122C90)
  {
    sub_11B60(&qword_122C98);
    sub_11B60(&qword_122B88);
    sub_11B60(&qword_122B98);
    sub_2CC88(&qword_122BA0, &qword_122B88);
    sub_187B0();
    sub_2CC88(&qword_122BA8, &qword_122B98);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122C90);
  }
  return result;
}

uint64_t sub_2C328()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2C440()
{
  return sub_2A1DC(*(void *)(v0 + 16));
}

uint64_t sub_2C448()
{
  return sub_2A324(*(void *)(v0 + 16));
}

uint64_t sub_2C454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSProfileSheetView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2C4B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for GCSProfileSheetView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_2A468(v2);
}

unint64_t sub_2C518()
{
  unint64_t result = qword_124E50;
  if (!qword_124E50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_124E50);
  }
  return result;
}

void *sub_2C558(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_122CC0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10C7C(&qword_122CB0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_2C690(void *a1, int64_t a2, char a3)
{
  unint64_t result = sub_2C728(a1, a2, a3, *v3);
  *int v3 = result;
  return result;
}

uint64_t sub_2C6B0()
{
  return sub_2C6D8(56);
}

uint64_t sub_2C6B8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2C6D0()
{
  return sub_2C6D8(59);
}

uint64_t sub_2C6D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

void *sub_2C728(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_122CC0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10C7C(&qword_122CB0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_2C864()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSProfileSheetView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v7 = v6 + v1[9];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v9 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v6 + v1[10];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_2CAA4()
{
  return sub_E6DF0();
}

uint64_t sub_2CB3C@<X0>(uint64_t a1@<X8>)
{
  return sub_29518(*(void *)(v1 + 16), a1);
}

uint64_t sub_2CB44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_E64E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2CB74()
{
  return sub_E64F0();
}

uint64_t sub_2CB9C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_2CBAC(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_2CBC4()
{
  unint64_t result = qword_122CF0;
  if (!qword_122CF0)
  {
    sub_11B60(&qword_122CD0);
    sub_2CC88(&qword_122CF8, &qword_122CC8);
    sub_2CC88(&qword_122D00, &qword_122D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122CF0);
  }
  return result;
}

uint64_t sub_2CC88(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2CCCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2CD14(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2CD70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2CDD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a4)
  {
    uint64_t v6 = (void *)result;
    swift_retain();
    id v7 = v6;
    swift_retain();
    swift_retain();
    id v8 = a5;
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2CE60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2CEC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a4)
  {
    uint64_t v6 = (void *)result;
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2CF48()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

void sub_2CFB8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_10C7C(&qword_122890);
  sub_E6DF0();
  uint64_t v2 = *(void **)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = v2;
    char v4 = sub_A2358();
    (*(void (**)(uint64_t, void))((char *)&stru_298.flags + (swift_isaMask & *v3)))(v1, v4 & 1);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_2CCCC((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

uint64_t sub_2D0D8()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_2D140()
{
  return sub_2D148();
}

uint64_t sub_2D148()
{
  return sub_E6D30();
}

id sub_2D198()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_2E300((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_2D228()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_2E300((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

id sub_2D2B0()
{
  return *(id *)(v0 + 16);
}

id sub_2D2B8()
{
  return *(id *)(v0 + 24);
}

uint64_t sub_2D2C0()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_2D310()
{
  return sub_E6DF0();
}

void (*sub_2D364(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[4] = v4;
  v3[5] = v5;
  char v6 = *(unsigned char *)(v1 + 48);
  *((unsigned char *)v3 + 19) = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_2D408;
}

void sub_2D408(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)a1 + 24;
  char v3 = *(unsigned char *)(*(void *)a1 + 18);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  char v5 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 32);
  v1[1] = v4;
  *((unsigned char *)v1 + 16) = v5;
  *((unsigned char *)v1 + 17) = v3;
  sub_E6DF0();
  sub_18B48(v2);
  swift_release();

  free(v1);
}

uint64_t sub_2D47C()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_2D4D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v28 = sub_10C7C(&qword_122B88);
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10C7C(&qword_122D28);
  __chkstk_darwin(v27);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v30 = sub_B7108(0xD00000000000001ALL, (void *)0x80000000000F1880);
  *((void *)&v30 + 1) = v8;
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v1 + 32);
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v1 + 48);
  sub_2D91C(v1);
  sub_187B0();
  sub_E6DA0();
  size_t v11 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v12 = *(void *)(v1 + 16);
    uint64_t v13 = *(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v11) - 8];
    uint64_t v14 = v11;
    LOBYTE(v13) = v13(v12);

    if (v13)
    {
      uint64_t v15 = *(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v14) - 8];
      uint64_t v16 = v14;
      char v17 = v15(v12);

      if (v17)
      {
        long long v30 = *(_OWORD *)(v2 + 32);
        char v31 = *(unsigned char *)(v2 + 48);
        sub_10C7C(&qword_122890);
        sub_E6DE0();
        char v18 = v32;
      }
      else
      {
        char v18 = 0;
      }
    }
    else
    {
      char v18 = 1;
    }
    uint64_t v20 = v28;
    uint64_t v19 = v29;
    uint64_t v21 = v27;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = v18;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v20);
    long long v24 = (uint64_t *)&v7[*(int *)(v21 + 36)];
    *long long v24 = KeyPath;
    v24[1] = (uint64_t)sub_2DDA8;
    v24[2] = v23;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    return sub_2DDC0((uint64_t)v7, v19);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_2E300((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_2D854()
{
  sub_10C7C(&qword_122890);
  sub_E6DF0();
  uint64_t v1 = swift_allocObject();
  long long v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 48);
  *(unsigned char *)(v1 + 64) = *(unsigned char *)(v0 + 64);
  sub_2D91C(v0 + 16);
  sub_BC4BC((void (*)(uint64_t))sub_2E1F0, v1);
  return swift_release();
}

uint64_t sub_2D91C(uint64_t a1)
{
  long long v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  swift_retain();
  swift_retain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t sub_2D978(uint64_t a1)
{
  uint64_t v2 = sub_E6FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_E7000();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2E1F8();
  uint64_t v9 = (void *)sub_E7340();
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(a1 + 48);
  aBlock[4] = sub_2E294;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2DC60;
  aBlock[3] = &unk_112960;
  uint64_t v12 = _Block_copy(aBlock);
  sub_2D91C(a1);
  swift_release();
  sub_E6FF0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_2E300((unint64_t *)&qword_125380, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10C7C((uint64_t *)&unk_124E80);
  sub_2E348((unint64_t *)&qword_125390, (uint64_t *)&unk_124E80);
  sub_E7460();
  sub_E7350();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v15);
}

uint64_t sub_2DC60(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_2DCA8()
{
  type metadata accessor for GCSPreferencesStore();
  sub_2E300((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_2DD1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(unsigned char *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_2DD38()
{
  return sub_E69D0();
}

uint64_t sub_2DD54@<X0>(uint64_t a1@<X8>)
{
  return sub_2D4D0(a1);
}

uint64_t sub_2DD98()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_2DDA8(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_2DDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2DE28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for GCSControllerIdentifyView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSControllerIdentifyView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GCSControllerIdentifyView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  id v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v8 = v3;
  id v9 = v5;
  id v10 = v6;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSControllerIdentifyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 24);
  long long v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for GCSControllerIdentifyView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GCSControllerIdentifyView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerIdentifyView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerIdentifyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4sub_E59A4(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerIdentifyView()
{
  return &type metadata for GCSControllerIdentifyView;
}

unint64_t sub_2E128()
{
  unint64_t result = qword_122D30;
  if (!qword_122D30)
  {
    sub_11B60(&qword_122D28);
    sub_2E348(&qword_122BA0, &qword_122B88);
    sub_2E348(&qword_122D00, &qword_122D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122D30);
  }
  return result;
}

uint64_t sub_2E1F0()
{
  return sub_2D978(v0 + 16);
}

unint64_t sub_2E1F8()
{
  unint64_t result = qword_124E70;
  if (!qword_124E70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_124E70);
  }
  return result;
}

uint64_t sub_2E23C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_2E294()
{
  return sub_E6DF0();
}

uint64_t sub_2E2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t sub_2E2F8()
{
  return swift_release();
}

uint64_t sub_2E300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2E348(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2E38C()
{
  return swift_getKeyPath();
}

id sub_2E3B0()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_2E3B8()
{
  return sub_2E72C((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileShareGestureView()
{
  uint64_t result = qword_126700;
  if (!qword_126700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2E41C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileShareGestureView();
  sub_2E4C8(a1, (uint64_t)v4);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_2E52C(a1);
}

uint64_t sub_2E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSProfileParams();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2E52C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*sub_2E588(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  id v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileShareGestureView();
  sub_309FC(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_122BB0);
  sub_E6DE0();
  return sub_2E674;
}

void sub_2E674(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_2E4C8((uint64_t)v4, (uint64_t)v3);
    sub_E6DF0();
    sub_30A60((uint64_t)v2, &qword_122BB0);
    sub_2E52C((uint64_t)v4);
  }
  else
  {
    sub_E6DF0();
    sub_30A60((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_2E714()
{
  return sub_2E72C((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_2E72C(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileShareGestureView();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

uint64_t sub_2E780(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = 0xD000000000000019;
      size_t v3 = "SHARE_GESTURES_SCREENSHOT";
      goto LABEL_8;
    case 2:
      return sub_B7108(0xD000000000000014, (void *)0x80000000000F18C0);
    case 3:
      uint64_t v1 = 0xD00000000000001DLL;
      size_t v3 = "SHARE_GESTURES_REPLAY_CAPTURE";
LABEL_8:
      uint64_t v2 = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
      return sub_B7108(v1, v2);
    default:
      uint64_t v1 = 4605519;
      uint64_t v2 = (void *)0xE300000000000000;
      return sub_B7108(v1, v2);
  }
}

uint64_t sub_2E824@<X0>(char *a1@<X8>)
{
  char v31 = a1;
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10C7C(&qword_122D38);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  long long v30 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v29 = (char *)v27 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v28 = (char *)v27 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v27 - v13;
  uint64_t v36 = sub_B7108(0x505F454C42554F44, (void *)0xEC00000053534552);
  uint64_t v37 = v15;
  uint64_t v16 = v1 + *(int *)(type metadata accessor for GCSProfileShareGestureView() + 24);
  v27[2] = v2;
  v27[3] = v16;
  sub_E6E10();
  swift_getKeyPath();
  sub_E6E00();
  swift_release();
  sub_30A60((uint64_t)v4, &qword_122BB0);
  long long v32 = v34;
  uint64_t v33 = v35;
  type metadata accessor for ShareGesture();
  v27[1] = v17;
  v27[0] = sub_10C7C(&qword_122D40);
  sub_2ECB4();
  sub_2FB08(&qword_122D50, &qword_122D40);
  sub_187B0();
  sub_E6DC0();
  uint64_t v36 = sub_B7108(0x4552505F474E4F4CLL, (void *)0xEA00000000005353);
  uint64_t v37 = v18;
  sub_E6E10();
  swift_getKeyPath();
  sub_E6E00();
  swift_release();
  sub_30A60((uint64_t)v4, &qword_122BB0);
  long long v32 = v34;
  uint64_t v33 = v35;
  uint64_t v19 = v28;
  sub_E6DC0();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v21 = v29;
  v20(v29, v14, v5);
  uint64_t v22 = v30;
  v20(v30, v19, v5);
  uint64_t v23 = v31;
  v20(v31, v21, v5);
  uint64_t v24 = sub_10C7C(&qword_122D58);
  v20(&v23[*(int *)(v24 + 48)], v22, v5);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v19, v5);
  v25(v14, v5);
  v25(v22, v5);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, v5);
}

void type metadata accessor for ShareGesture()
{
  if (!qword_122E28)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_122E28);
    }
  }
}

unint64_t sub_2ECB4()
{
  unint64_t result = qword_122D48;
  if (!qword_122D48)
  {
    type metadata accessor for ShareGesture();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122D48);
  }
  return result;
}

uint64_t sub_2ED10@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(4605519, (void *)0xE300000000000000);
  sub_187B0();
  uint64_t v2 = sub_E6920();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_B7108(0xD000000000000019, (void *)0x80000000000F18E0);
  uint64_t v9 = sub_E6920();
  uint64_t v30 = v10;
  uint64_t v31 = v9;
  uint64_t v32 = v11;
  char v13 = v12 & 1;
  sub_B7108(0xD000000000000014, (void *)0x80000000000F18C0);
  uint64_t v14 = sub_E6920();
  uint64_t v27 = v15;
  uint64_t v28 = v14;
  uint64_t v29 = v16;
  char v18 = v17 & 1;
  sub_B7108(0xD00000000000001DLL, (void *)0x80000000000F18A0);
  uint64_t v19 = sub_E6920();
  uint64_t v25 = v20;
  uint64_t v26 = v19;
  char v22 = v21 & 1;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v31;
  *(void *)(a1 + 72) = v30;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v13;
  *(void *)(a1 + 88) = v32;
  *(void *)(a1 + 96) = 1;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 1;
  *(_WORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(a1 + 128) = v28;
  *(void *)(a1 + 136) = v27;
  *(unsigned char *)(a1 + 144) = v18;
  *(void *)(a1 + 152) = v29;
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = 2;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 2;
  *(_WORD *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = v19;
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v20;
  *(unsigned char *)(a1 + 208) = v21 & 1;
  *(void *)(a1 + 216) = v23;
  *(void *)(a1 + 224) = 3;
  *(unsigned char *)(a1 + 232) = 0;
  *(void *)(a1 + 24sub_E59A4(2, 18, 1, 0) = 3;
  *(_WORD *)(a1 + 248) = 0;
  sub_18804(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_18804(v31, v30, v13);
  swift_bridgeObjectRetain();
  sub_18804(v28, v27, v18);
  swift_bridgeObjectRetain();
  sub_18804(v26, v25, v22);
  swift_bridgeObjectRetain();
  sub_18814(v26, v25, v22);
  swift_bridgeObjectRelease();
  sub_18814(v28, v27, v18);
  swift_bridgeObjectRelease();
  sub_18814(v31, v30, v13);
  swift_bridgeObjectRelease();
  sub_18814(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2EFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_E6560();
  sub_2F208((uint64_t)&v31);
  uint64_t v28 = v32;
  uint64_t v29 = v31;
  char v3 = v33;
  uint64_t v30 = v34;
  char v4 = v36;
  uint64_t v6 = v37;
  uint64_t v5 = v38;
  char v7 = v39;
  uint64_t v24 = v40;
  uint64_t v25 = v35;
  uint64_t v23 = sub_E6560();
  sub_2F430((uint64_t)&v31);
  uint64_t v8 = v31;
  uint64_t v9 = v32;
  char v10 = v33;
  uint64_t v12 = v34;
  uint64_t v11 = v35;
  char v13 = v36;
  uint64_t v14 = v37;
  uint64_t v15 = v38;
  uint64_t v21 = v31;
  uint64_t v22 = v38;
  char v16 = v39;
  char v27 = v39;
  uint64_t v17 = v40;
  LOBYTE(v31) = 1;
  char v47 = v3;
  char v46 = v4;
  char v45 = v7;
  char v44 = 1;
  char v43 = v33;
  char v42 = v36;
  char v41 = v39;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v29;
  *(void *)(a1 + 32) = v28;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v3;
  char v18 = v3;
  char v26 = v3;
  *(void *)(a1 + 48) = v30;
  *(void *)(a1 + 56) = v25;
  *(unsigned char *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v5;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v23;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 12sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(a1 + 128) = v8;
  *(void *)(a1 + 136) = v9;
  *(unsigned char *)(a1 + 144) = v10;
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v11;
  *(unsigned char *)(a1 + 168) = v13;
  uint64_t v19 = v14;
  *(void *)(a1 + 176) = v14;
  *(void *)(a1 + 184) = v15;
  *(unsigned char *)(a1 + 192) = v16;
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v17;
  sub_18804(v29, v28, v18);
  swift_bridgeObjectRetain();
  sub_18804(v6, v5, v7);
  swift_bridgeObjectRetain();
  sub_18804(v21, v9, v10);
  swift_bridgeObjectRetain();
  sub_18804(v19, v22, v27);
  swift_bridgeObjectRetain();
  sub_18814(v21, v9, v10);
  swift_bridgeObjectRelease();
  sub_18814(v19, v22, v27);
  swift_bridgeObjectRelease();
  sub_18814(v29, v28, v26);
  swift_bridgeObjectRelease();
  sub_18814(v6, v5, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2F208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_B7108(0x505F454C42554F44, (void *)0xEC00000053534552);
  uint64_t v34 = v6;
  sub_187B0();
  uint64_t v7 = sub_E6920();
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  uint64_t v32 = v9;
  char v11 = v10 & 1;
  type metadata accessor for GCSProfileShareGestureView();
  sub_10C7C(&qword_122BB0);
  sub_E6DE0();
  uint64_t v12 = *(void *)&v5[*(int *)(v3 + 64)];
  sub_2E52C((uint64_t)v5);
  uint64_t v33 = sub_2E780(v12);
  uint64_t v34 = v13;
  uint64_t v14 = sub_E6920();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  LODWORD(v33) = sub_E6720();
  uint64_t v19 = sub_E68F0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_18814(v14, v16, v18);
  swift_bridgeObjectRelease();
  LOBYTE(v33) = v11;
  uint64_t v27 = v30;
  uint64_t v26 = v31;
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v27;
  *(unsigned char *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v32;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v21;
  *(unsigned char *)(a1 + 64) = v25;
  *(void *)(a1 + 72) = v23;
  uint64_t v28 = v26;
  sub_18804(v26, v27, v11);
  swift_bridgeObjectRetain();
  sub_18804(v19, v21, v25);
  swift_bridgeObjectRetain();
  sub_18814(v19, v21, v25);
  swift_bridgeObjectRelease();
  sub_18814(v28, v27, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2F430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_B7108(0x4552505F474E4F4CLL, (void *)0xEA00000000005353);
  uint64_t v34 = v6;
  sub_187B0();
  uint64_t v7 = sub_E6920();
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  uint64_t v32 = v9;
  char v11 = v10 & 1;
  type metadata accessor for GCSProfileShareGestureView();
  sub_10C7C(&qword_122BB0);
  sub_E6DE0();
  uint64_t v12 = *(void *)&v5[*(int *)(v3 + 68)];
  sub_2E52C((uint64_t)v5);
  uint64_t v33 = sub_2E780(v12);
  uint64_t v34 = v13;
  uint64_t v14 = sub_E6920();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  LODWORD(v33) = sub_E6720();
  uint64_t v19 = sub_E68F0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_18814(v14, v16, v18);
  swift_bridgeObjectRelease();
  LOBYTE(v33) = v11;
  uint64_t v27 = v30;
  uint64_t v26 = v31;
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v27;
  *(unsigned char *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v32;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v21;
  *(unsigned char *)(a1 + 64) = v25;
  *(void *)(a1 + 72) = v23;
  uint64_t v28 = v26;
  sub_18804(v26, v27, v11);
  swift_bridgeObjectRetain();
  sub_18804(v19, v21, v25);
  swift_bridgeObjectRetain();
  sub_18814(v19, v21, v25);
  swift_bridgeObjectRelease();
  sub_18814(v28, v27, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2F654()
{
  sub_B7108(0xD000000000000014, (void *)0x80000000000F1900);
  sub_187B0();
  sub_E6920();
  sub_10C7C(&qword_122298);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_EBBE0;
  id v2 = [*(id *)(v0 + 16) localizedName];
  uint64_t v3 = sub_E7110();
  uint64_t v5 = v4;

  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_17068();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 4sub_E59A4(2, 18, 1, 0) = v5;
  String.localized(with:)((Swift::OpaquePointer)v1);
  swift_bridgeObjectRelease();
  sub_E6920();
  sub_10C7C(&qword_122D60);
  sub_2FA6C();
  return sub_E6ED0();
}

uint64_t sub_2F7FC(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_122E30);
  __chkstk_darwin(v2);
  uint64_t v4 = (_OWORD *)((char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10C7C(&qword_122D78);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  sub_19100(*(void *)a1, v9);
  char v10 = sub_1FB00(v8, v9);
  sub_19048(v8, v9);
  if (v10)
  {
    sub_2E824(v7);
    sub_309FC((uint64_t)v7, (uint64_t)v4, &qword_122D78);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_122D88);
    sub_2FB08(&qword_122D70, &qword_122D78);
    sub_2FB08(&qword_122D80, &qword_122D88);
    sub_E6610();
    return sub_30A60((uint64_t)v7, &qword_122D78);
  }
  else
  {
    sub_2EFDC((uint64_t)v18);
    long long v12 = v18[11];
    v4[10] = v18[10];
    v4[11] = v12;
    v4[12] = v18[12];
    long long v13 = v18[7];
    v4[6] = v18[6];
    v4[7] = v13;
    long long v14 = v18[9];
    v4[8] = v18[8];
    v4[9] = v14;
    long long v15 = v18[3];
    v4[2] = v18[2];
    v4[3] = v15;
    long long v16 = v18[5];
    v4[4] = v18[4];
    v4[5] = v16;
    long long v17 = v18[1];
    *uint64_t v4 = v18[0];
    v4[1] = v17;
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_122D88);
    sub_2FB08(&qword_122D70, &qword_122D78);
    sub_2FB08(&qword_122D80, &qword_122D88);
    return sub_E6610();
  }
}

uint64_t sub_2FA64()
{
  return sub_2F7FC(*(void *)(v0 + 16));
}

unint64_t sub_2FA6C()
{
  unint64_t result = qword_122D68;
  if (!qword_122D68)
  {
    sub_11B60(&qword_122D60);
    sub_2FB08(&qword_122D70, &qword_122D78);
    sub_2FB08(&qword_122D80, &qword_122D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122D68);
  }
  return result;
}

uint64_t sub_2FB08(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2FB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = a1;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for GCSProfileShareGestureView() + 24);

  return sub_2FBC4(a2, v6);
}

uint64_t sub_2FBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2FC2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2FC50()
{
  return sub_E69D0();
}

unint64_t sub_2FC70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v37 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v37 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_19100(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    char v9 = *(void **)(a2 + 16);
    *(void *)(a1 + 16) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    char v11 = (void *)(a1 + v10);
    uint64_t v12 = a2 + v10;
    uint64_t v13 = *(void *)(a2 + v10 + 8);
    void *v11 = *(void *)(a2 + v10);
    v11[1] = v13;
    id v14 = v9;
    swift_retain();
    swift_retain();
    uint64_t v15 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    long long v16 = (char *)v11 + v15;
    uint64_t v17 = v12 + v15;
    uint64_t v18 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v20 = v19[5];
    uint64_t v21 = &v16[v20];
    uint64_t v22 = (uint64_t *)(v17 + v20);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = v24;
    *((void *)v21 + 1) = v23;
    uint64_t v25 = v19[6];
    uint64_t v26 = &v16[v25];
    uint64_t v27 = (void *)(v17 + v25);
    uint64_t v28 = v27[1];
    *(void *)uint64_t v26 = *v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v19[7];
    uint64_t v30 = &v16[v29];
    uint64_t v31 = (void *)(v17 + v29);
    uint64_t v32 = v31[1];
    *(void *)uint64_t v30 = *v31;
    *((void *)v30 + 1) = v32;
    v16[v19[8]] = *(unsigned char *)(v17 + v19[8]);
    v16[v19[9]] = *(unsigned char *)(v17 + v19[9]);
    uint64_t v33 = v19[10];
    uint64_t v34 = &v16[v33];
    uint64_t v35 = (void *)(v17 + v33);
    uint64_t v36 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v36;
    *(void *)&v16[v19[11]] = *(void *)(v17 + v19[11]);
    v16[v19[12]] = *(unsigned char *)(v17 + v19[12]);
    *(void *)&v16[v19[13]] = *(void *)(v17 + v19[13]);
    *(void *)&v16[v19[14]] = *(void *)(v17 + v19[14]);
    *(void *)&v16[v19[15]] = *(void *)(v17 + v19[15]);
    v16[v19[16]] = *(unsigned char *)(v17 + v19[16]);
    v16[v19[17]] = *(unsigned char *)(v17 + v19[17]);
    *(void *)&v16[v19[18]] = *(void *)(v17 + v19[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2FE9C(uint64_t a1, uint64_t a2)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2FF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  char v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9);
  uint64_t v13 = *(void *)(a2 + v9 + 8);
  void *v10 = v12;
  v10[1] = v13;
  id v14 = v8;
  swift_retain();
  swift_retain();
  uint64_t v15 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  long long v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  uint64_t v18 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v20 = v19[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = (uint64_t *)(v17 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  uint64_t v25 = v19[6];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = (void *)(v17 + v25);
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = *v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = v19[7];
  uint64_t v30 = &v16[v29];
  uint64_t v31 = (void *)(v17 + v29);
  uint64_t v32 = v31[1];
  *(void *)uint64_t v30 = *v31;
  *((void *)v30 + 1) = v32;
  v16[v19[8]] = *(unsigned char *)(v17 + v19[8]);
  v16[v19[9]] = *(unsigned char *)(v17 + v19[9]);
  uint64_t v33 = v19[10];
  uint64_t v34 = &v16[v33];
  uint64_t v35 = (void *)(v17 + v33);
  uint64_t v36 = v35[1];
  *(void *)uint64_t v34 = *v35;
  *((void *)v34 + 1) = v36;
  *(void *)&v16[v19[11]] = *(void *)(v17 + v19[11]);
  v16[v19[12]] = *(unsigned char *)(v17 + v19[12]);
  *(void *)&v16[v19[13]] = *(void *)(v17 + v19[13]);
  *(void *)&v16[v19[14]] = *(void *)(v17 + v19[14]);
  *(void *)&v16[v19[15]] = *(void *)(v17 + v19[15]);
  v16[v19[16]] = *(unsigned char *)(v17 + v19[16]);
  v16[v19[17]] = *(unsigned char *)(v17 + v19[17]);
  *(void *)&v16[v19[18]] = *(void *)(v17 + v19[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_30178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19048(v8, v9);
  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (void *)(a2 + v13);
  *(void *)(a1 + v13) = *v15;
  swift_retain();
  swift_release();
  *(void *)(v14 + 8) = v15[1];
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = (char *)v15 + v16;
  uint64_t v19 = sub_E6050();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v21 = v20[5];
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = &v18[v21];
  *uint64_t v22 = *(void *)v23;
  v22[1] = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v20[6];
  uint64_t v25 = (void *)(v17 + v24);
  uint64_t v26 = &v18[v24];
  void *v25 = *(void *)v26;
  v25[1] = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v20[7];
  uint64_t v28 = (void *)(v17 + v27);
  uint64_t v29 = &v18[v27];
  *uint64_t v28 = *(void *)v29;
  v28[1] = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[8]) = v18[v20[8]];
  *(unsigned char *)(v17 + v20[9]) = v18[v20[9]];
  uint64_t v30 = v20[10];
  uint64_t v31 = (void *)(v17 + v30);
  uint64_t v32 = &v18[v30];
  void *v31 = *(void *)v32;
  v31[1] = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + v20[11]) = *(void *)&v18[v20[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[12]) = v18[v20[12]];
  *(void *)(v17 + v20[13]) = *(void *)&v18[v20[13]];
  *(void *)(v17 + v20[14]) = *(void *)&v18[v20[14]];
  *(void *)(v17 + v20[15]) = *(void *)&v18[v20[15]];
  *(unsigned char *)(v17 + v20[16]) = v18[v20[16]];
  *(unsigned char *)(v17 + v20[17]) = v18[v20[17]];
  *(void *)(v17 + v20[18]) = *(void *)&v18[v20[18]];
  return a1;
}

uint64_t sub_303C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  void *v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  char v9 = (char *)v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  id v12 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v9[v12[5]] = *(_OWORD *)(v10 + v12[5]);
  *(_OWORD *)&v9[v12[6]] = *(_OWORD *)(v10 + v12[6]);
  *(_OWORD *)&v9[v12[7]] = *(_OWORD *)(v10 + v12[7]);
  v9[v12[8]] = *(unsigned char *)(v10 + v12[8]);
  v9[v12[9]] = *(unsigned char *)(v10 + v12[9]);
  *(_OWORD *)&v9[v12[10]] = *(_OWORD *)(v10 + v12[10]);
  *(void *)&v9[v12[11]] = *(void *)(v10 + v12[11]);
  v9[v12[12]] = *(unsigned char *)(v10 + v12[12]);
  *(void *)&v9[v12[13]] = *(void *)(v10 + v12[13]);
  *(void *)&v9[v12[14]] = *(void *)(v10 + v12[14]);
  *(void *)&v9[v12[15]] = *(void *)(v10 + v12[15]);
  v9[v12[16]] = *(unsigned char *)(v10 + v12[16]);
  v9[v12[17]] = *(unsigned char *)(v10 + v12[17]);
  *(void *)&v9[v12[18]] = *(void *)(v10 + v12[18]);
  return a1;
}

uint64_t sub_30520(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19048(v8, v9);
  uint64_t v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  *(void *)(a1 + v11) = *v13;
  swift_release();
  *(void *)(v12 + 8) = v13[1];
  swift_release();
  uint64_t v14 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v15 = v12 + v14;
  uint64_t v16 = (char *)v13 + v14;
  uint64_t v17 = sub_E6050();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v19 = v18[5];
  uint64_t v20 = (void *)(v15 + v19);
  uint64_t v21 = &v16[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  void *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v18[6];
  uint64_t v25 = (void *)(v15 + v24);
  uint64_t v26 = &v16[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  void *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v18[7];
  uint64_t v30 = (void *)(v15 + v29);
  uint64_t v31 = &v16[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + v18[8]) = v16[v18[8]];
  *(unsigned char *)(v15 + v18[9]) = v16[v18[9]];
  uint64_t v34 = v18[10];
  uint64_t v35 = (void *)(v15 + v34);
  uint64_t v36 = &v16[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  *(void *)(v15 + v18[11]) = *(void *)&v16[v18[11]];
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + v18[12]) = v16[v18[12]];
  *(void *)(v15 + v18[13]) = *(void *)&v16[v18[13]];
  *(void *)(v15 + v18[14]) = *(void *)&v16[v18[14]];
  *(void *)(v15 + v18[15]) = *(void *)&v16[v18[15]];
  *(unsigned char *)(v15 + v18[16]) = v16[v18[16]];
  *(unsigned char *)(v15 + v18[17]) = v16[v18[17]];
  *(void *)(v15 + v18[18]) = *(void *)&v16[v18[18]];
  return a1;
}

uint64_t sub_306FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_30710);
}

uint64_t sub_30710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_307C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_307D8);
}

uint64_t sub_307D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_30884()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_30928()
{
  return sub_2FB08(&qword_122D70, &qword_122D78);
}

uint64_t sub_30950()
{
  return sub_2FB08(&qword_122D80, &qword_122D88);
}

unint64_t sub_3097C()
{
  unint64_t result = qword_122E18;
  if (!qword_122E18)
  {
    sub_11B60(&qword_122E20);
    sub_2FA6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_122E18);
  }
  return result;
}

uint64_t sub_309FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_30A60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_30AC0()
{
  return sub_E6130();
}

uint64_t sub_30AF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_30B64@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_30BB4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 136))(*a1);
}

uint64_t sub_30BFC()
{
  return sub_E6180();
}

uint64_t (*sub_30C6C(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_30CF8;
}

uint64_t sub_30CFC()
{
  return 0;
}

uint64_t sub_30D04()
{
  return sub_314CC((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent, (uint64_t *)&unk_124E10);
}

uint64_t sub_30D18(uint64_t a1)
{
  return sub_31550(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_30D34(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_30E44;
}

uint64_t sub_30E48()
{
  return sub_E6130();
}

float sub_30E78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

void sub_30EEC(uint64_t a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))(**(void **)a1 + 176))();
}

uint64_t sub_30F38(float *a1, uint64_t a2)
{
  return (*(uint64_t (**)(float))(**(void **)a2 + 184))(*a1);
}

uint64_t sub_30F80()
{
  return sub_E6180();
}

uint64_t (*sub_30FF8(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_31084;
}

float sub_31088()
{
  return 1.0;
}

uint64_t sub_31090()
{
  return sub_314CC((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel, &qword_122E38);
}

uint64_t sub_310A4(uint64_t a1)
{
  return sub_31550(a1, &qword_122E40, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel, &qword_122E38);
}

uint64_t (*sub_310C0(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122E40);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122E38);
  sub_E6140();
  swift_endAccess();
  return sub_311D0;
}

uint64_t sub_311D4()
{
  return sub_E6130();
}

void type metadata accessor for State(uint64_t a1)
{
}

uint64_t sub_31240()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_312B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result;
  return result;
}

uint64_t sub_31300(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 232))(*a1);
}

uint64_t sub_31348()
{
  return sub_E6180();
}

uint64_t (*sub_313B8(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_31444;
}

void sub_31448(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_314B0()
{
  return -1;
}

uint64_t sub_314B8()
{
  return sub_314CC((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState, &qword_122E48);
}

uint64_t sub_314CC(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_31534(uint64_t a1)
{
  return sub_31550(a1, &qword_122E50, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState, &qword_122E48);
}

uint64_t sub_31550(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_10C7C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_10C7C(a4);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_31680(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122E50);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_122E48);
  sub_E6140();
  swift_endAccess();
  return sub_31790;
}

void sub_31794(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_31904()
{
  return 0;
}

uint64_t sub_3190C()
{
  return 0;
}

uint64_t sub_31914()
{
  return 0;
}

void *sub_3191C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_controller);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_3196C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_controller);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_319C0())()
{
  return j__swift_endAccess_0;
}

void sub_31A20(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_10C7C(&qword_122E58);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  __chkstk_darwin(v6);
  uint64_t v51 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_122E60);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  __chkstk_darwin(v8);
  unint64_t v54 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10C7C(&qword_122E68);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10C7C(&qword_122E70);
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10C7C(&qword_122E78);
  uint64_t v48 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(void *))(*(void *)v2 + 328);
  id v20 = a2;
  v19(a2);
  uint64_t v21 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryLevelCancellable;
  if (*(void *)&v2[OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryLevelCancellable])
  {
    swift_retain();
    sub_E60F0();
    swift_release();
  }
  uint64_t v22 = OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryStateCancellable;
  if (*(void *)&v2[OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryStateCancellable])
  {
    swift_retain();
    sub_E60F0();
    swift_release();
  }
  if (a2)
  {
    uint64_t v45 = v22;
    uint64_t v23 = *(uint64_t (**)(void))((char *)&stru_248.reloff + (swift_isaMask & *a1));
    id v50 = v20;
    uint64_t v24 = (void *)v23();
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = [v24 battery];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void (**)(uint64_t))(*(void *)v3 + 136);
        id v44 = v25;
        v28(1);
        (*(void (**)(id))(*(void *)v3 + 184))([v27 batteryLevel]);
        (*(void (**)(id))(*(void *)v3 + 232))([v27 batteryState]);
        swift_getKeyPath();
        sub_E5F30();
        swift_release();
        id v43 = self;
        id v57 = [v43 mainRunLoop];
        uint64_t v29 = sub_E73B0();
        uint64_t v30 = *(void *)(v29 - 8);
        char v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
        uint64_t v42 = v30 + 56;
        v41(v12, 1, 1, v29);
        v40[2] = sub_32208();
        v40[3] = &protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>;
        sub_33C94(&qword_122E88, &qword_122E70);
        v40[1] = sub_32A1C(&qword_122E90, (void (*)(uint64_t))sub_32208);
        uint64_t v31 = v47;
        sub_E61A0();
        sub_32248((uint64_t)v12);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v31);
        swift_getKeyPath();
        id v57 = v3;
        sub_33C94(&qword_122E98, &qword_122E78);
        uint64_t v32 = v49;
        uint64_t v33 = sub_E61B0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v32);
        *(void *)&v3[v21] = v33;
        swift_release();
        swift_getKeyPath();
        uint64_t v34 = v51;
        sub_E5F30();
        swift_release();
        id v57 = [v43 mainRunLoop];
        v41(v12, 1, 1, v29);
        sub_33C94(&qword_122EA0, &qword_122E58);
        uint64_t v35 = v53;
        uint64_t v36 = v54;
        sub_E61A0();
        sub_32248((uint64_t)v12);

        (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v35);
        swift_getKeyPath();
        id v57 = v3;
        sub_33C94(&qword_122EA8, &qword_122E60);
        uint64_t v37 = v56;
        uint64_t v38 = sub_E61B0();

        swift_release();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v37);
        *(void *)&v3[v45] = v38;
        swift_release();
        return;
      }
    }
    id v39 = v50;
  }
}

const char *sub_321C8()
{
  return "batteryLevel";
}

id sub_321D4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = [*a1 batteryLevel];
  *a2 = v4;
  return result;
}

unint64_t sub_32208()
{
  unint64_t result = qword_122E80;
  if (!qword_122E80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_122E80);
  }
  return result;
}

uint64_t sub_32248(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_122E68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

const char *sub_322A8()
{
  return "batteryState";
}

id sub_322B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 batteryState];
  *a2 = result;
  return result;
}

uint64_t sub_322E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent;
  uint64_t v2 = sub_10C7C((uint64_t *)&unk_124E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel;
  uint64_t v4 = sub_10C7C(&qword_122E38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState;
  uint64_t v6 = sub_10C7C(&qword_122E48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_32410()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent;
  uint64_t v2 = sub_10C7C((uint64_t *)&unk_124E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel;
  uint64_t v4 = sub_10C7C(&qword_122E38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState;
  uint64_t v6 = sub_10C7C(&qword_122E48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();

  uint64_t v7 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v7, v8);
}

uint64_t sub_32574()
{
  uint64_t v0 = swift_allocObject();
  sub_325AC();
  return v0;
}

uint64_t sub_325AC()
{
  uint64_t v17 = sub_10C7C(&qword_122E48);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10C7C(&qword_122E38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C((uint64_t *)&unk_124E10);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryPresent;
  char v20 = 0;
  sub_E6130();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v13 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryLevel;
  int v19 = 1065353216;
  sub_E6130();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  uint64_t v14 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo__batteryState;
  uint64_t v18 = -1;
  type metadata accessor for State(0);
  sub_E6130();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v14, v3, v17);
  *(void *)(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryLevelCancellable) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_batteryStateCancellable) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings24GCSControllerBatteryInfo_controller) = 0;
  return v0;
}

uint64_t sub_32858@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GCSControllerBatteryInfo();
  uint64_t result = sub_E6110();
  *a1 = result;
  return result;
}

id sub_32898()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_32A1C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_32928()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_32A1C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_329B8()
{
  return sub_32AD4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSControllerBatteryInfo()
{
  uint64_t result = qword_126880;
  if (!qword_126880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_32A1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t (*sub_32A64())()
{
  return sub_32A80;
}

uint64_t sub_32A80()
{
  type metadata accessor for GCSControllerBatteryInfo();
  uint64_t v0 = swift_allocObject();
  sub_325AC();
  return v0;
}

uint64_t sub_32ABC()
{
  return sub_32AD4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.projectedValue.getter);
}

uint64_t sub_32AD4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v5 = type metadata accessor for GCSControllerBatteryInfo();
  uint64_t v6 = sub_32A1C(&qword_122EB0, (void (*)(uint64_t))type metadata accessor for GCSControllerBatteryInfo);

  return a1(v2, v3, v4, v5, v6);
}

id sub_32B78()
{
  return *(id *)(v0 + 40);
}

uint64_t sub_32B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_E6550();
  uint64_t v59 = v1;
  uint64_t v58 = v1 + 1;
  type metadata accessor for GCSControllerBatteryInfo();
  sub_32A1C(&qword_122EB0, (void (*)(uint64_t))type metadata accessor for GCSControllerBatteryInfo);
  uint64_t v4 = sub_E6270();
  char v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 128))(v4);
  swift_release();
  uint64_t v60 = v3;
  if ((v5 & 1) == 0
    || (uint64_t v6 = sub_E6270(),
        uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 224))(v6),
        swift_release(),
        v7 == -1))
  {
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    char v69 = 1;
    sub_10C7C(&qword_1230A8);
    sub_33C94(&qword_1230B0, &qword_1230A8);
    sub_E6610();
    object = v70._object;
    uint64_t countAndFlagsBits = v70._countAndFlagsBits;
    uint64_t v26 = v73;
    uint64_t v50 = v72;
    uint64_t v52 = v71;
    uint64_t v27 = v74;
LABEL_11:
    uint64_t v40 = v75;
    uint64_t v39 = v76;
    uint64_t v41 = v77;
    char v42 = v78;
    long long v64 = *v59;
    Swift::String v70 = (Swift::String)*v58;
    LOBYTE(v71) = *((unsigned char *)v58 + 16);
    id v43 = (void *)*((void *)v59 + 5);
    id v44 = (_OWORD *)swift_allocObject();
    long long v45 = v59[1];
    v44[1] = *v59;
    v44[2] = v45;
    v44[3] = v59[2];
    char v62 = v42;
    sub_33518((id *)&v64);
    sub_33544((uint64_t)&v70);
    id v46 = v43;
    uint64_t v47 = sub_E6C00();
    uint64_t result = swift_getKeyPath();
    *(void *)a1 = v60;
    *(void *)(a1 + 8) = 0x4000000000000000;
    *(unsigned char *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 17) = *(_DWORD *)v63;
    *(_DWORD *)(a1 + 2sub_E59A4(2, 18, 1, 0) = *(_DWORD *)&v63[3];
    *(void *)(a1 + 24) = countAndFlagsBits;
    *(void *)(a1 + 32) = object;
    *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v52;
    *(void *)(a1 + 48) = v50;
    *(void *)(a1 + 56) = v26;
    *(void *)(a1 + 64) = v27;
    *(void *)(a1 + 72) = v40;
    *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v39;
    *(void *)(a1 + 88) = v41;
    *(unsigned char *)(a1 + 96) = v62;
    *(_DWORD *)(a1 + 97) = *(_DWORD *)v61;
    *(_DWORD *)(a1 + 10sub_E59A4(2, 18, 1, 0) = *(_DWORD *)&v61[3];
    *(void *)(a1 + 104) = sub_333CC;
    *(void *)(a1 + 112) = v44;
    *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = result;
    *(void *)(a1 + 144) = v47;
    return result;
  }
  uint64_t v8 = sub_E6270();
  float v9 = (*(float (**)(uint64_t))(*(void *)v8 + 176))(v8);
  swift_release();
  uint64_t v10 = sub_E6270();
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 224))(v10);
  swift_release();
  sub_E6590();
  uint64_t v11 = sub_E6910();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_E6850();
  uint64_t v16 = sub_E6900();
  uint64_t v49 = v17;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  sub_18814(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_122298);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_EBBE0;
  float v23 = roundf(v9 * 100.0);
  if ((~LODWORD(v23) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v23 < 9.2234e18)
  {
    uint64_t v56 = v21;
    int v24 = v19 & 1;
    *(void *)(result + 56) = &type metadata for Int;
    *(void *)(result + 64) = &protocol witness table for Int;
    *(void *)(result + 32) = (uint64_t)v23;
    Swift::String v25 = String.localized(with:)((Swift::OpaquePointer)result);
    swift_bridgeObjectRelease();
    uint64_t v54 = v16;
    if (v51 == 1) {
      uint64_t v48 = sub_E6C70();
    }
    else {
      uint64_t v48 = sub_56970();
    }
    Swift::String v70 = v25;
    sub_187B0();
    uint64_t v28 = sub_E6920();
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    sub_E6850();
    uint64_t v33 = sub_E6900();
    uint64_t v35 = v34;
    char v37 = v36;
    uint64_t v53 = v38;
    swift_release();
    sub_18814(v28, v30, v32);
    swift_bridgeObjectRelease();
    v63[0] = v24 != 0;
    sub_18804(v54, v49, v19 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_18804(v33, v35, v37 & 1);
    swift_bridgeObjectRetain();
    sub_18804(v54, v49, v19 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_18804(v33, v35, v37 & 1);
    swift_bridgeObjectRetain();
    sub_18814(v33, v35, v37 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_18814(v54, v49, v24 != 0);
    swift_bridgeObjectRelease();
    *(void *)&long long v64 = v54;
    *((void *)&v64 + 1) = v49;
    *(void *)&long long v65 = v19 & 1;
    *((void *)&v65 + 1) = v56;
    *(void *)&long long v66 = v48;
    *((void *)&v66 + 1) = v33;
    *(void *)&long long v67 = v35;
    *((void *)&v67 + 1) = v37 & 1;
    uint64_t v68 = v53;
    char v69 = 0;
    sub_10C7C(&qword_1230A8);
    sub_33C94(&qword_1230B0, &qword_1230A8);
    sub_E6610();
    sub_18814(v33, v35, v37 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_18814(v54, v49, v19 & 1);
    swift_bridgeObjectRelease();
    object = v25._object;
    uint64_t countAndFlagsBits = v25._countAndFlagsBits;
    uint64_t v26 = v73;
    uint64_t v50 = v72;
    uint64_t v52 = v71;
    uint64_t v27 = v74;
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_33320(char a1)
{
  if (a1) {
    return sub_E6C70();
  }
  else {
    return sub_56970();
  }
}

uint64_t sub_33378()
{
  sub_333C4();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_333C4()
{
  return swift_release();
}

uint64_t sub_333CC()
{
  type metadata accessor for GCSControllerBatteryInfo();
  sub_32A1C(&qword_122EB0, (void (*)(uint64_t))type metadata accessor for GCSControllerBatteryInfo);
  uint64_t v1 = sub_E6270();
  uint64_t v2 = *(void **)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = *(void (**)(void))(*(void *)v1 + 344);
    id v4 = v2;
    v3();

    return swift_release();
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_32A1C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

id *sub_33518(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_33544(uint64_t a1)
{
  return a1;
}

uint64_t sub_33578()
{
  return swift_retain();
}

uint64_t sub_33584()
{
  type metadata accessor for GCSPreferencesStore();
  sub_32A1C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t (*sub_335F8())()
{
  return sub_32A80;
}

uint64_t sub_33614@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = 0;
  *(void *)(a6 + 4sub_E59A4(2, 18, 1, 0) = a5;
  return result;
}

uint64_t sub_33630()
{
  return sub_E69D0();
}

BOOL sub_33650(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_33664@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_33674(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_33680()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_3368C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_336A8()
{
  return type metadata accessor for GCSControllerBatteryInfo();
}

void sub_336B0()
{
  sub_33808(319, &qword_124F50, (uint64_t)&type metadata for Bool, (uint64_t (*)(void, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    sub_33808(319, &qword_122EE0, (uint64_t)&type metadata for Float, (uint64_t (*)(void, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_33854();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_33808(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_33854()
{
  if (!qword_122EE8)
  {
    type metadata accessor for State(255);
    unint64_t v0 = sub_E6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_122EE8);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for GCSControllerBatteryView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for GCSControllerBatteryView(uint64_t a1)
{
  sub_333C4();
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for GCSControllerBatteryView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  sub_33578();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void **)(a2 + 40);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v10;
  id v11 = v10;
  return a1;
}

uint64_t assignWithCopy for GCSControllerBatteryView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_33578();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_333C4();
  uint64_t v10 = *(void **)(a2 + 40);
  id v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v10;
  id v12 = v10;

  return a1;
}

__n128 initializeWithTake for GCSControllerBatteryView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GCSControllerBatteryView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_333C4();
  uint64_t v7 = *(void **)(a1 + 40);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerBatteryView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerBatteryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4sub_E59A4(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 4sub_E59A4(2, 18, 1, 0) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerBatteryView()
{
  return &type metadata for GCSControllerBatteryView;
}

unint64_t sub_33B54()
{
  unint64_t result = qword_123070;
  if (!qword_123070)
  {
    sub_11B60(&qword_123078);
    sub_33BF4();
    sub_33C94(&qword_1228F8, &qword_122900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123070);
  }
  return result;
}

unint64_t sub_33BF4()
{
  unint64_t result = qword_123080;
  if (!qword_123080)
  {
    sub_11B60(&qword_123088);
    sub_33C94(&qword_123090, &qword_123098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123080);
  }
  return result;
}

uint64_t sub_33C94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_33CD8()
{
}

uint64_t sub_33CEC()
{
  uint64_t v0 = sub_E60E0();
  sub_33EA8(v0, qword_12B6A0);
  sub_33DC8(v0, (uint64_t)qword_12B6A0);
  return sub_E60D0();
}

uint64_t sub_33D64()
{
  if (qword_126990 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_E60E0();

  return sub_33DC8(v0, (uint64_t)qword_12B6A0);
}

uint64_t sub_33DC8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_33E00@<X0>(uint64_t a1@<X8>)
{
  if (qword_126990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_E60E0();
  uint64_t v3 = sub_33DC8(v2, (uint64_t)qword_12B6A0);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t *sub_33EA8(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_33F0C()
{
  uint64_t v0 = sub_E6080();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_E70C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v13[-v6];
  sub_E70B0();
  sub_E70B0();
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  v8(v7, v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v7, v5, v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  sub_E6070();
  uint64_t v9 = sub_E7130();
  uint64_t v11 = sub_B7108(v9, v10);
  swift_bridgeObjectRelease();
  v8(v7, v1);
  return v11;
}

CGColorRef sub_3424C(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      return CGColorCreateGenericRGB(0.882352941, 0.219607843, 0.239215686, 1.0);
    case 2:
      return CGColorCreateGenericRGB(0.9, 0.1, 0.1, 1.0);
    case 3:
      CGFloat v2 = 0.9;
      CGFloat v1 = 0.1;
      goto LABEL_10;
    case 4:
      return CGColorCreateGenericRGB(0.0, 0.0, 1.0, 1.0);
    case 5:
      CGFloat v1 = 0.501960784;
      CGFloat v2 = 0.0;
LABEL_10:
      CGFloat v4 = 1.0;
      CGFloat v3 = v1;
      return CGColorCreateGenericRGB(v1, v2, v3, v4);
    case 6:
      return CGColorCreateGenericRGB(0.862745098, 0.745098039, 0.0, 1.0);
    default:
      CGFloat v1 = 1.0;
      CGFloat v2 = 1.0;
      CGFloat v3 = 1.0;
      CGFloat v4 = 0.0;
      return CGColorCreateGenericRGB(v1, v2, v3, v4);
  }
}

uint64_t sub_3434C()
{
  return *(void *)v0;
}

uint64_t sub_34354()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_34384()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_343B4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_343E4()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_343EC()
{
  return swift_retain();
}

uint64_t sub_343F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_33F0C();
  uint64_t v6 = v5;
  swift_bridgeObjectRetain_n();
  sub_3424C(a1);
  uint64_t result = sub_E6AB0();
  *a2 = a1;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v4;
  a2[4] = v6;
  a2[5] = v4;
  a2[6] = v6;
  a2[7] = a1;
  a2[8] = result;
  return result;
}

uint64_t sub_34458()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_34464()
{
  sub_E7680(*v0);
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  sub_E7680(v0[7]);
  swift_retain();
  sub_E6B30();

  return swift_release();
}

Swift::Int sub_34538()
{
  sub_E7670();
  sub_E7680(*v0);
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  sub_E7680(v0[7]);
  swift_retain();
  sub_E6B30();
  swift_release();
  return sub_E76A0();
}

uint64_t sub_34620(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_37B34(v7, v9) & 1;
}

uint64_t sub_34680()
{
  Swift::UInt v1 = v0[7];
  sub_E7680(*v0);
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  sub_E7680(v1);
  swift_retain();
  sub_E6B30();

  return swift_release();
}

Swift::Int sub_3476C()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[7];
  sub_E7670();
  sub_E7680(v1);
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  sub_E7680(v2);
  swift_retain();
  sub_E6B30();
  swift_release();
  return sub_E76A0();
}

void sub_34868(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
}

uint64_t sub_3487C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_E6530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_1230B8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_39CC8(v2, (uint64_t)v10, &qword_1230B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_E6250();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_E7310();
    char v14 = sub_E6740();
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      *(void *)(v15 + 4) = sub_23A0C(0x686353726F6C6F43, 0xEB00000000656D65, &v17);
      _os_log_impl(&dword_0, v14, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_E6520();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_34B10()
{
  return sub_E6420();
}

uint64_t sub_34B34(uint64_t a1)
{
  uint64_t v2 = sub_E6250();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_E6430();
}

uint64_t sub_34BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LightbarSwatchButton() + 20);

  return sub_37C54(v3, a1);
}

__n128 sub_34C40@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for LightbarSwatchButton();
  sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  __n128 result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(__n128 *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v7;
  return result;
}

uint64_t sub_34CD0()
{
  return sub_E6DF0();
}

void (*sub_34D64(void *a1))(char **a1, char a2)
{
  long long v3 = malloc(0x148uLL);
  *a1 = v3;
  long long v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LightbarSwatchButton() + 24));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[29] = *v4;
  v3[30] = v6;
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  v3[31] = v7;
  v3[32] = v8;
  uint64_t v10 = v4[4];
  uint64_t v9 = v4[5];
  v3[33] = v10;
  v3[34] = v9;
  uint64_t v12 = v4[6];
  uint64_t v11 = v4[7];
  v3[35] = v12;
  v3[36] = v11;
  uint64_t v14 = v4[8];
  uint64_t v13 = v4[9];
  v3[37] = v14;
  v3[38] = v13;
  uint64_t v15 = v4[10];
  v3[39] = v15;
  *long long v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v10;
  v3[5] = v9;
  v3[6] = v12;
  v3[7] = v11;
  v3[8] = v14;
  v3[9] = v13;
  v3[10] = v15;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v3[40] = sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  return sub_34E6C;
}

void sub_34E6C(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 13);
  uint64_t v4 = *((void *)v2 + 14);
  uint64_t v6 = *((void *)v2 + 15);
  uint64_t v5 = *((void *)v2 + 16);
  uint64_t v8 = *((void *)v2 + 17);
  uint64_t v7 = *((void *)v2 + 18);
  uint64_t v9 = *((void *)v2 + 19);
  uint64_t v10 = *((void *)v2 + 39);
  uint64_t v12 = *((void *)v2 + 37);
  uint64_t v11 = *((void *)v2 + 38);
  uint64_t v14 = *((void *)v2 + 35);
  uint64_t v13 = *((void *)v2 + 36);
  uint64_t v16 = *((void *)v2 + 33);
  uint64_t v15 = *((void *)v2 + 34);
  uint64_t v18 = *((void *)v2 + 29);
  uint64_t v17 = *((void *)v2 + 30);
  *((_OWORD *)v2 + 1sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(v2 + 88);
  *(void *)uint64_t v2 = v18;
  *((void *)v2 + 1) = v17;
  *((_OWORD *)v2 + 1) = *(_OWORD *)(v2 + 248);
  *((void *)v2 + 4) = v16;
  *((void *)v2 + 5) = v15;
  *((void *)v2 + 6) = v14;
  *((void *)v2 + 7) = v13;
  *((void *)v2 + 8) = v12;
  *((void *)v2 + 9) = v11;
  *((void *)v2 + 1sub_E59A4(2, 18, 1, 0) = v10;
  *((void *)v2 + 22) = v3;
  *((void *)v2 + 23) = v4;
  *((void *)v2 + 24) = v6;
  *((void *)v2 + 25) = v5;
  *((void *)v2 + 26) = v8;
  *((void *)v2 + 27) = v7;
  *((void *)v2 + 28) = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_E6DF0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  free(v2);
}

__n128 sub_34FF8@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for LightbarSwatchButton();
  sub_10C7C(&qword_1230C0);
  sub_E6E10();
  __n128 result = v7;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(__n128 *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v9;
  return result;
}

double sub_35098()
{
  return 16.0;
}

double sub_350A0()
{
  return 16.0;
}

uint64_t sub_350A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = sub_E6380();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  uint64_t v45 = v4;
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LightbarSwatchButton();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v6);
  uint64_t v10 = sub_10C7C(&qword_1230C8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10C7C(&qword_1230D0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10C7C(&qword_1230D8);
  uint64_t v43 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v47 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10C7C(&qword_1230E0);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_39BA8(v2, (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LightbarSwatchButton);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  sub_37DD8((uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  uint64_t v48 = v2;
  sub_10C7C(&qword_1230E8);
  sub_37F40();
  sub_E6D80();
  sub_E6F30();
  sub_E62A0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  uint64_t v21 = &v16[*(int *)(v14 + 36)];
  long long v22 = v54;
  *(_OWORD *)uint64_t v21 = v53;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v55;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  float v23 = v40;
  sub_E6370();
  unint64_t v24 = sub_37FE0();
  uint64_t v25 = sub_39AC4(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v26 = v44;
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v26);
  sub_39C6C((uint64_t)v16, &qword_1230D0);
  uint64_t v27 = (void *)(v2 + *(int *)(v7 + 28));
  uint64_t v28 = v27[4];
  uint64_t v49 = v27[3];
  uint64_t v50 = v28;
  sub_187B0();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_E6920();
  uint64_t v31 = v30;
  uint64_t v49 = v14;
  uint64_t v50 = v26;
  LOBYTE(v14) = v32 & 1;
  unint64_t v51 = v24;
  uint64_t v52 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = (uint64_t)v39;
  uint64_t v34 = v41;
  uint64_t v35 = v47;
  sub_E69C0();
  sub_18814(v29, v31, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v34);
  uint64_t v36 = v27[6];
  uint64_t v49 = v27[5];
  uint64_t v50 = v36;
  sub_38080();
  sub_E6A50();
  return sub_39C6C(v33, &qword_1230E0);
}

uint64_t sub_35668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_E63B0();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (_OWORD *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10C7C(&qword_123100);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v13 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v14 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  __asm { FMOV            V0.2D, #5.0 }
  _OWORD *v7 = _Q0;
  uint64_t v20 = *(void *)(a1 + *(int *)(type metadata accessor for LightbarSwatchButton() + 20) + 64);
  sub_39BA8((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v11[*(int *)(v9 + 60)] = v20;
  *(_WORD *)&v11[*(int *)(v9 + 64)] = 256;
  swift_retain();
  sub_39C10((uint64_t)v7);
  sub_E6F30();
  sub_E62A0();
  sub_39CC8((uint64_t)v11, a2, &qword_123100);
  uint64_t v21 = (_OWORD *)(a2 + *(int *)(sub_10C7C(&qword_1230E8) + 36));
  long long v22 = v24[1];
  *uint64_t v21 = v24[0];
  v21[1] = v22;
  v21[2] = v24[2];
  return sub_39C6C((uint64_t)v11, &qword_123100);
}

uint64_t sub_35868@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_10C7C(&qword_1230B8);

  return swift_storeEnumTagMultiPayload();
}

__n128 sub_358C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_381B0(a1, a4);
  uint64_t v7 = (int *)type metadata accessor for LightbarSwatchButton();
  uint64_t v8 = a4 + v7[5];
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 48) = v9;
  *(void *)(v8 + 64) = *(void *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v10;
  uint64_t v11 = a4 + v7[6];
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(void *)(v11 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a3 + 80);
  long long v13 = *(_OWORD *)(a3 + 64);
  long long v15 = *(_OWORD *)(a3 + 32);
  __n128 result = *(__n128 *)(a3 + 48);
  *(__n128 *)(v11 + 48) = result;
  *(_OWORD *)(v11 + 64) = v13;
  *(_OWORD *)(v11 + 32) = v15;
  *(void *)(a4 + v7[7]) = 0x4030000000000000;
  *(void *)(a4 + v7[8]) = 0x4030000000000000;
  return result;
}

uint64_t sub_35964()
{
  return sub_E69D0();
}

uint64_t sub_35984()
{
  return swift_getKeyPath();
}

uint64_t sub_359A8()
{
  uint64_t v0 = sub_E6080();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_E70C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v15[-v6];
  sub_E70B0();
  sub_E70B0();
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  v8(v7, v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v7, v5, v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  sub_E6070();
  uint64_t v9 = sub_E7130();
  uint64_t v11 = sub_B7108(v9, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  v8(v7, v1);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(1.0, 1.0, 1.0, 0.0);
  uint64_t result = sub_E6AB0();
  *(void *)&xmmword_12B6C0 = 0;
  *((void *)&xmmword_12B6C0 + 1) = v11;
  qword_12B6D0 = v13;
  unk_12B6D8 = v11;
  qword_12B6E0 = v13;
  unk_12B6E8 = v11;
  qword_12B6F0 = v13;
  unk_12B6F8 = 0;
  qword_12B700 = result;
  return result;
}

long long *sub_35BE4()
{
  if (qword_1269A0 != -1) {
    swift_once();
  }
  return &xmmword_12B6C0;
}

uint64_t sub_35C30@<X0>(uint64_t a1@<X8>)
{
  if (qword_1269A0 != -1) {
    swift_once();
  }

  return sub_37C54((uint64_t)&xmmword_12B6C0, a1);
}

uint64_t sub_35C9C()
{
  uint64_t v0 = sub_E6080();
  __chkstk_darwin(v0 - 8);
  v60[2] = (char *)v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_E70C0();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v60 - v7;
  sub_10C7C(&qword_1232A0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_EC810;
  if (qword_1269A0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_12B6D0;
  uint64_t v11 = unk_12B6D8;
  uint64_t v13 = qword_12B6E0;
  uint64_t v12 = unk_12B6E8;
  uint64_t v15 = qword_12B6F0;
  uint64_t v14 = unk_12B6F8;
  uint64_t v16 = qword_12B700;
  *(_OWORD *)(v9 + 32) = xmmword_12B6C0;
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 56) = v11;
  *(void *)(v9 + 64) = v13;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 8sub_E59A4(2, 18, 1, 0) = v15;
  *(void *)(v9 + 88) = v14;
  *(void *)(v9 + 96) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_E70B0();
  sub_E70B0();
  uint64_t v17 = (void (*)(char *, uint64_t))v3[1];
  v17(v8, v2);
  char v62 = (void (*)(char *, char *, uint64_t))v3[4];
  v60[3] = v3 + 4;
  v62(v8, v6, v2);
  uint64_t v18 = (void (*)(char *, char *, uint64_t))v3[2];
  v60[4] = v3 + 2;
  uint64_t v61 = v18;
  v18(v6, v8, v2);
  sub_E6070();
  uint64_t v19 = sub_E7130();
  uint64_t v21 = sub_B7108(v19, v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  v60[0] = v17;
  v17(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.882352941, 0.219607843, 0.239215686, 1.0);
  uint64_t v24 = sub_E6AB0();
  *(void *)(v9 + 104) = 1;
  *(void *)(v9 + 112) = v21;
  *(void *)(v9 + 12sub_E59A4(2, 18, 1, 0) = v23;
  *(void *)(v9 + 128) = v21;
  *(void *)(v9 + 136) = v23;
  *(void *)(v9 + 144) = v21;
  *(void *)(v9 + 152) = v23;
  *(void *)(v9 + 16sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(v9 + 168) = v24;
  sub_E70B0();
  sub_E70B0();
  v17(v8, v2);
  uint64_t v25 = v3 + 1;
  uint64_t v26 = v62;
  v62(v8, v6, v2);
  uint64_t v27 = v61;
  v61(v6, v8, v2);
  sub_E6070();
  uint64_t v28 = sub_E7130();
  uint64_t v30 = sub_B7108(v28, v29);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = (void (*)(char *, uint64_t))v60[0];
  ((void (*)(char *, uint64_t))v60[0])(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.0, 0.0, 1.0, 1.0);
  uint64_t v34 = sub_E6AB0();
  *(void *)(v9 + 176) = 4;
  *(void *)(v9 + 184) = v30;
  *(void *)(v9 + 192) = v32;
  *(void *)(v9 + 20sub_E59A4(2, 18, 1, 0) = v30;
  *(void *)(v9 + 208) = v32;
  *(void *)(v9 + 216) = v30;
  *(void *)(v9 + 224) = v32;
  *(void *)(v9 + 232) = 4;
  *(void *)(v9 + 24sub_E59A4(2, 18, 1, 0) = v34;
  sub_E70B0();
  sub_E70B0();
  v33(v8, v2);
  v26(v8, v6, v2);
  v27(v6, v8, v2);
  sub_E6070();
  uint64_t v35 = sub_E7130();
  uint64_t v37 = sub_B7108(v35, v36);
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  v60[1] = v25;
  uint64_t v40 = (void (*)(char *, uint64_t))v60[0];
  ((void (*)(char *, uint64_t))v60[0])(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.9, 0.1, 0.1, 1.0);
  uint64_t v41 = sub_E6AB0();
  *(void *)(v9 + 248) = 2;
  *(void *)(v9 + 256) = v37;
  *(void *)(v9 + 264) = v39;
  *(void *)(v9 + 272) = v37;
  *(void *)(v9 + 28sub_E59A4(2, 18, 1, 0) = v39;
  *(void *)(v9 + 288) = v37;
  *(void *)(v9 + 296) = v39;
  *(void *)(v9 + 304) = 2;
  *(void *)(v9 + 312) = v41;
  sub_E70B0();
  sub_E70B0();
  v40(v8, v2);
  v62(v8, v6, v2);
  v61(v6, v8, v2);
  sub_E6070();
  uint64_t v42 = sub_E7130();
  uint64_t v44 = sub_B7108(v42, v43);
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  v40(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.501960784, 0.0, 0.501960784, 1.0);
  uint64_t v47 = sub_E6AB0();
  *(void *)(v9 + 32sub_E59A4(2, 18, 1, 0) = 5;
  *(void *)(v9 + 328) = v44;
  *(void *)(v9 + 336) = v46;
  *(void *)(v9 + 344) = v44;
  *(void *)(v9 + 352) = v46;
  *(void *)(v9 + 36sub_E59A4(2, 18, 1, 0) = v44;
  *(void *)(v9 + 368) = v46;
  *(void *)(v9 + 376) = 5;
  *(void *)(v9 + 384) = v47;
  sub_E70B0();
  sub_E70B0();
  v40(v8, v2);
  v62(v8, v6, v2);
  v61(v6, v8, v2);
  sub_E6070();
  uint64_t v48 = sub_E7130();
  uint64_t v50 = sub_B7108(v48, v49);
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  v40(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.1, 0.9, 0.1, 1.0);
  uint64_t v53 = sub_E6AB0();
  *(void *)(v9 + 392) = 3;
  *(void *)(v9 + 40sub_E59A4(2, 18, 1, 0) = v50;
  *(void *)(v9 + 408) = v52;
  *(void *)(v9 + 416) = v50;
  *(void *)(v9 + 424) = v52;
  *(void *)(v9 + 432) = v50;
  *(void *)(v9 + 44sub_E59A4(2, 18, 1, 0) = v52;
  *(void *)(v9 + 448) = 3;
  *(void *)(v9 + 456) = v53;
  sub_E70B0();
  sub_E70B0();
  v40(v8, v2);
  v62(v8, v6, v2);
  v61(v6, v8, v2);
  sub_E6070();
  uint64_t v54 = sub_E7130();
  uint64_t v56 = sub_B7108(v54, v55);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  v40(v8, v2);
  swift_bridgeObjectRetain_n();
  CGColorCreateGenericRGB(0.862745098, 0.745098039, 0.0, 1.0);
  uint64_t result = sub_E6AB0();
  *(void *)(v9 + 464) = 6;
  *(void *)(v9 + 472) = v56;
  *(void *)(v9 + 48sub_E59A4(2, 18, 1, 0) = v58;
  *(void *)(v9 + 488) = v56;
  *(void *)(v9 + 496) = v58;
  *(void *)(v9 + 504) = v56;
  *(void *)(v9 + 512) = v58;
  *(void *)(v9 + 52sub_E59A4(2, 18, 1, 0) = 6;
  *(void *)(v9 + 528) = result;
  qword_12B708 = v9;
  return result;
}

uint64_t *sub_36578()
{
  if (qword_1269A8 != -1) {
    swift_once();
  }
  return &qword_12B708;
}

uint64_t sub_365C4()
{
  if (qword_1269A8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_36620@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_E6080();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_E70C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v27[-v10];
  if (qword_1269A8 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(qword_12B708 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(qword_12B708 + 48);
    while (*(v13 - 2) != a1)
    {
      v13 += 9;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    uint64_t v17 = *(v13 - 1);
    uint64_t v19 = *v13;
    uint64_t v23 = v13[1];
    uint64_t v24 = v13[2];
    uint64_t v25 = v13[3];
    uint64_t v26 = v13[4];
    uint64_t v22 = v13[5];
    uint64_t v21 = v13[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
  }
  else
  {
LABEL_7:
    sub_E70B0();
    sub_E70B0();
    uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v14(v11, v5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v11, v9, v5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_E6070();
    uint64_t v15 = sub_E7130();
    uint64_t v17 = sub_B7108(v15, v16);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v14(v11, v5);
    swift_bridgeObjectRetain_n();
    CGColorCreateGenericRGB(1.0, 1.0, 1.0, 0.0);
    uint64_t result = sub_E6AB0();
    uint64_t v21 = result;
    a1 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = v17;
    uint64_t v24 = v19;
    uint64_t v25 = v17;
    uint64_t v26 = v19;
  }
  *a2 = a1;
  a2[1] = v17;
  a2[2] = v19;
  a2[3] = v23;
  a2[4] = v24;
  a2[5] = v25;
  a2[6] = v26;
  a2[7] = v22;
  a2[8] = v21;
  return result;
}

__n128 sub_36910@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  __n128 result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(__n128 *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v7;
  return result;
}

uint64_t sub_36988()
{
  return sub_E6DF0();
}

void (*sub_36A00(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x148uLL);
  *a1 = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  long long v5 = *(_OWORD *)(v1 + 64);
  v3[2] = v4;
  v3[3] = v5;
  long long v6 = *(_OWORD *)(v1 + 80);
  v3[4] = v6;
  uint64_t v7 = *(void *)(v1 + 96);
  *((void *)v3 + 1sub_E59A4(2, 18, 1, 0) = v7;
  long long v8 = *(_OWORD *)(v1 + 16);
  long long v9 = *(_OWORD *)(v1 + 32);
  *long long v3 = v8;
  v3[1] = v9;
  *(_OWORD *)((char *)v3 + 104) = v9;
  *(_OWORD *)((char *)v3 + 88) = v8;
  *(_OWORD *)((char *)v3 + 152) = v6;
  *(_OWORD *)((char *)v3 + 136) = v5;
  *(_OWORD *)((char *)v3 + 12sub_E59A4(2, 18, 1, 0) = v4;
  *((void *)v3 + 21) = v7;
  sub_38218((uint64_t)v3);
  *((void *)v3 + 4sub_E59A4(2, 18, 1, 0) = sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  return sub_36ABC;
}

void sub_36ABC(uint64_t a1, char a2)
{
  uint64_t v2 = *(_OWORD **)a1;
  long long v3 = *(_OWORD *)(*(void *)a1 + 48);
  *(_OWORD *)((char *)v2 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(*(void *)a1 + 32);
  *(_OWORD *)((char *)v2 + 136) = v3;
  *(_OWORD *)((char *)v2 + 152) = v2[4];
  long long v4 = v2[1];
  *(_OWORD *)((char *)v2 + 88) = *v2;
  uint64_t v5 = *((void *)v2 + 33);
  uint64_t v6 = *((void *)v2 + 34);
  uint64_t v8 = *((void *)v2 + 35);
  uint64_t v7 = *((void *)v2 + 36);
  uint64_t v10 = *((void *)v2 + 37);
  uint64_t v9 = *((void *)v2 + 38);
  uint64_t v11 = *((void *)v2 + 39);
  *((void *)v2 + 21) = *((void *)v2 + 10);
  *(_OWORD *)((char *)v2 + 104) = v4;
  v2[11] = *(_OWORD *)((char *)v2 + 248);
  *((void *)v2 + 24) = v5;
  *((void *)v2 + 25) = v6;
  *((void *)v2 + 26) = v8;
  *((void *)v2 + 27) = v7;
  *((void *)v2 + 28) = v10;
  *((void *)v2 + 29) = v9;
  *((void *)v2 + 3sub_E59A4(2, 18, 1, 0) = v11;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_E6DF0();
    sub_38290((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    sub_38290((uint64_t)v2);
  }

  free(v2);
}

__n128 sub_36BDC@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_1230C0);
  sub_E6E10();
  __n128 result = v7;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(__n128 *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v9;
  return result;
}

uint64_t sub_36C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v110 = a1;
  uint64_t v108 = sub_10C7C(&qword_123138);
  __chkstk_darwin(v108);
  uint64_t v107 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10C7C(&qword_123140);
  uint64_t v3 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  long long v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  char v7 = *(unsigned char *)(v1 + 8);
  sub_19100(*(void *)v1, v7);
  char v8 = sub_1FB00(v6, v7);
  sub_19048(v6, v7);
  if (v8)
  {
    long long v9 = *(_OWORD *)(v1 + 64);
    long long v113 = *(_OWORD *)(v1 + 48);
    long long v114 = v9;
    long long v115 = *(_OWORD *)(v1 + 80);
    uint64_t v116 = *(void *)(v1 + 96);
    long long v10 = *(_OWORD *)(v1 + 32);
    long long v111 = *(_OWORD *)(v1 + 16);
    long long v112 = v10;
    sub_10C7C(&qword_1230C0);
    sub_E6E10();
    uint64_t v105 = *((void *)&v124 + 1);
    uint64_t v106 = v124;
    uint64_t v103 = v127;
    uint64_t v104 = v126;
    unint64_t v102 = v128;
    uint64_t v100 = v129;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v98 = sub_E65E0();
    *(void *)&long long v111 = sub_B7108(0xD000000000000014, (void *)0x80000000000F1A70);
    *((void *)&v111 + 1) = v11;
    sub_187B0();
    uint64_t v101 = v3;
    uint64_t v99 = (uint64_t)v5;
    uint64_t v94 = sub_E6920();
    uint64_t v96 = v12;
    uint64_t v97 = v13;
    int v95 = v14 & 1;
    *(void *)&long long v111 = sub_B7108(0xD000000000000013, (void *)0x80000000000F1A90);
    *((void *)&v111 + 1) = v15;
    uint64_t v16 = sub_E6920();
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    sub_E6850();
    uint64_t v21 = sub_E6900();
    uint64_t v23 = v22;
    char v25 = v24;
    swift_release();
    char v26 = v25 & 1;
    sub_18814(v16, v18, v20);
    swift_bridgeObjectRelease();
    LODWORD(v111) = sub_E6720();
    uint64_t v27 = sub_E68F0();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    sub_18814(v21, v23, v26);
    swift_bridgeObjectRelease();
    LOBYTE(v111) = v95;
    v134[0] = v95;
    LOBYTE(v132[0]) = v33;
    uint64_t v34 = v94;
    uint64_t v35 = v96;
    sub_18804(v94, v96, v95);
    uint64_t v36 = v97;
    swift_bridgeObjectRetain();
    sub_18804(v27, v29, v33);
    swift_bridgeObjectRetain();
    sub_18814(v27, v29, v33);
    swift_bridgeObjectRelease();
    sub_18814(v34, v35, v111);
    swift_bridgeObjectRelease();
    long long v111 = (unint64_t)v98;
    LOBYTE(v112) = 1;
    *((void *)&v112 + 1) = v34;
    *(void *)&long long v113 = v35;
    BYTE8(v113) = v134[0];
    *(void *)&long long v114 = v36;
    *((void *)&v114 + 1) = v27;
    *(void *)&long long v115 = v29;
    BYTE8(v115) = v132[0];
    uint64_t v116 = v31;
    sub_10C7C(&qword_123160);
    sub_10C7C(&qword_123168);
    sub_39B0C(&qword_123170, &qword_123160);
    sub_38304();
    sub_38358();
    uint64_t v37 = v99;
    sub_E6DB0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v38 = v101;
    uint64_t v39 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v107, v37, v109);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_123148);
    sub_39B0C(&qword_123150, &qword_123140);
    sub_39B0C(&qword_123158, &qword_123148);
    sub_E6610();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  }
  else
  {
    uint64_t v100 = sub_E6560();
    uint64_t v99 = sub_E65E0();
    *(void *)&long long v124 = sub_B7108(0xD000000000000014, (void *)0x80000000000F1A70);
    *((void *)&v124 + 1) = v41;
    unint64_t v102 = sub_187B0();
    uint64_t v106 = sub_E6920();
    uint64_t v103 = v43;
    uint64_t v104 = v42;
    LODWORD(v101) = v44 & 1;
    *(void *)&long long v124 = sub_B7108(0xD000000000000013, (void *)0x80000000000F1A90);
    *((void *)&v124 + 1) = v45;
    uint64_t v46 = sub_E6920();
    uint64_t v48 = v47;
    char v50 = v49 & 1;
    sub_E6850();
    uint64_t v51 = sub_E6900();
    uint64_t v96 = v52;
    char v54 = v53;
    swift_release();
    sub_18814(v46, v48, v50);
    swift_bridgeObjectRelease();
    LODWORD(v124) = sub_E6720();
    uint64_t v55 = v96;
    uint64_t v56 = sub_E68F0();
    uint64_t v97 = v56;
    uint64_t v98 = v57;
    uint64_t v105 = v58;
    char v60 = v59 & 1;
    sub_18814(v51, v55, v54 & 1);
    swift_bridgeObjectRelease();
    LOBYTE(v124) = v101;
    LOBYTE(v111) = v101;
    v134[0] = v60;
    uint64_t v61 = v106;
    uint64_t v62 = v104;
    sub_18804(v106, v104, v101);
    swift_bridgeObjectRetain();
    uint64_t v63 = v105;
    sub_18804(v56, v105, v60);
    swift_bridgeObjectRetain();
    sub_18814(v56, v63, v60);
    swift_bridgeObjectRelease();
    sub_18814(v61, v62, v124);
    swift_bridgeObjectRelease();
    LODWORD(v63) = v111;
    LODWORD(v56) = v134[0];
    long long v64 = *(_OWORD *)(v1 + 64);
    long long v126 = *(_OWORD *)(v1 + 48);
    long long v127 = v64;
    long long v128 = *(_OWORD *)(v1 + 80);
    uint64_t v129 = *(void *)(v1 + 96);
    long long v65 = *(_OWORD *)(v1 + 32);
    long long v124 = *(_OWORD *)(v1 + 16);
    long long v125 = v65;
    sub_10C7C(&qword_1230C0);
    sub_E6DE0();
    uint64_t v66 = *((void *)&v111 + 1);
    uint64_t v67 = v112;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&long long v124 = v66;
    *((void *)&v124 + 1) = v67;
    uint64_t v68 = sub_E6920();
    uint64_t v70 = v69;
    char v72 = v71 & 1;
    LODWORD(v124) = sub_E6720();
    uint64_t v73 = sub_E68F0();
    uint64_t v101 = v74;
    unint64_t v102 = v75;
    int v77 = v76 & 1;
    sub_18814(v68, v70, v72);
    swift_bridgeObjectRelease();
    char v123 = v63;
    char v78 = v56;
    char v122 = v56;
    char v137 = 1;
    char v136 = v63;
    int v93 = v56;
    LODWORD(v94) = v63;
    char v135 = v56;
    char v133 = 0;
    char v131 = v77;
    LOBYTE(v66) = v77;
    int v92 = v77;
    v121[0] = v124;
    *(_DWORD *)((char *)v121 + 3) = *(_DWORD *)((char *)&v124 + 3);
    v120[0] = v111;
    *(_DWORD *)((char *)v120 + 3) = *(_DWORD *)((char *)&v111 + 3);
    *(_DWORD *)((char *)v119 + 3) = *(_DWORD *)&v134[3];
    v119[0] = *(_DWORD *)v134;
    int v95 = 0;
    *(_DWORD *)((char *)v118 + 3) = *(_DWORD *)((char *)v132 + 3);
    v118[0] = v132[0];
    LODWORD(v96) = v77;
    *(_DWORD *)((char *)v117 + 3) = *(_DWORD *)((char *)v130 + 3);
    v117[0] = v130[0];
    uint64_t v79 = v104;
    sub_18804(v106, v104, v63);
    uint64_t v80 = v103;
    swift_bridgeObjectRetain();
    uint64_t v81 = v97;
    uint64_t v82 = v105;
    sub_18804(v97, v105, v78);
    uint64_t v83 = v98;
    swift_bridgeObjectRetain();
    uint64_t v84 = v107;
    uint64_t v85 = v101;
    sub_18804(v73, v101, v66);
    swift_bridgeObjectRetain();
    sub_18814(v73, v85, v92);
    swift_bridgeObjectRelease();
    LOBYTE(v66) = v122;
    uint64_t v86 = v106;
    sub_18814(v106, v79, v123);
    swift_bridgeObjectRelease();
    sub_18814(v81, v82, v66);
    swift_bridgeObjectRelease();
    int v87 = v121[0];
    LODWORD(v124) = v121[0];
    *(_DWORD *)((char *)&v124 + 3) = *(_DWORD *)((char *)v121 + 3);
    *(_DWORD *)((char *)&v111 + 3) = *(_DWORD *)((char *)v120 + 3);
    LODWORD(v111) = v120[0];
    *(_DWORD *)&v134[3] = *(_DWORD *)((char *)v119 + 3);
    *(_DWORD *)long long v134 = v119[0];
    *(_DWORD *)((char *)v132 + 3) = *(_DWORD *)((char *)v118 + 3);
    v132[0] = v118[0];
    *(_DWORD *)((char *)v130 + 3) = *(_DWORD *)((char *)v117 + 3);
    v130[0] = v117[0];
    LOBYTE(v120[0]) = 0;
    *(void *)uint64_t v84 = v100;
    *((void *)v84 + 1) = 0;
    v84[16] = 0;
    *(_DWORD *)(v84 + 17) = v87;
    *((_DWORD *)v84 + 5) = *(_DWORD *)((char *)v121 + 3);
    *((void *)v84 + 3) = v99;
    *((void *)v84 + 4) = 0;
    v84[40] = 1;
    *(_DWORD *)(v84 + 41) = v124;
    *((_DWORD *)v84 + 11) = *(_DWORD *)((char *)&v124 + 3);
    *((void *)v84 + 6) = v86;
    *((void *)v84 + 7) = v79;
    v84[64] = v94;
    int v88 = v111;
    *((_DWORD *)v84 + 17) = *(_DWORD *)((char *)&v111 + 3);
    *(_DWORD *)(v84 + 65) = v88;
    *((void *)v84 + 9) = v80;
    *((void *)v84 + 1sub_E59A4(2, 18, 1, 0) = v81;
    *((void *)v84 + 11) = v82;
    v84[96] = v93;
    int v89 = *(_DWORD *)v134;
    *((_DWORD *)v84 + 25) = *(_DWORD *)&v134[3];
    *(_DWORD *)(v84 + 97) = v89;
    *((void *)v84 + 13) = v83;
    *((void *)v84 + 14) = 0x402E000000000000;
    v84[120] = v95;
    int v90 = v132[0];
    *((_DWORD *)v84 + 31) = *(_DWORD *)((char *)v132 + 3);
    *(_DWORD *)(v84 + 121) = v90;
    uint64_t v91 = v101;
    *((void *)v84 + 16) = v73;
    *((void *)v84 + 17) = v91;
    v84[144] = v96;
    LODWORD(v91) = v130[0];
    *((_DWORD *)v84 + 37) = *(_DWORD *)((char *)v130 + 3);
    *(_DWORD *)(v84 + 145) = v91;
    *((void *)v84 + 19) = v102;
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_123148);
    sub_39B0C(&qword_123150, &qword_123140);
    sub_39B0C(&qword_123158, &qword_123148);
    return sub_E6610();
  }
}

uint64_t sub_377B8()
{
  if (qword_1269A8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_10C7C(&qword_123288);
  sub_10C7C(&qword_123190);
  sub_39B0C(&qword_123290, &qword_123288);
  sub_383CC();
  sub_39B50();
  return sub_E6EC0();
}

uint64_t sub_378C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v15 = a1[7];
  uint64_t v10 = a1[8];
  sub_187B0();
  swift_bridgeObjectRetain();
  *(void *)a2 = sub_E6920();
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 4sub_E59A4(2, 18, 1, 0) = v4;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 8sub_E59A4(2, 18, 1, 0) = v9;
  *(void *)(a2 + 88) = v15;
  *(void *)(a2 + 96) = v10;
  *(void *)(a2 + 104) = v3;
  *(void *)(a2 + 112) = v4;
  *(void *)(a2 + 12sub_E59A4(2, 18, 1, 0) = v5;
  *(void *)(a2 + 128) = v6;
  *(void *)(a2 + 136) = v7;
  *(void *)(a2 + 144) = v8;
  *(void *)(a2 + 152) = v9;
  *(void *)(a2 + 16sub_E59A4(2, 18, 1, 0) = v15;
  *(void *)(a2 + 168) = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return swift_retain_n();
}

__n128 sub_379BC@<Q0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v8 = a1[1];
  __n128 v5 = (__n128)a1[4];
  long long v6 = a1[3];
  uint64_t v3 = *((void *)a1 + 10);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 64) = v6;
  __n128 result = v5;
  *(__n128 *)(a2 + 8sub_E59A4(2, 18, 1, 0) = v5;
  *(void *)(a2 + 96) = v3;
  return result;
}

void *sub_37A4C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_37A5C(void *a1@<X8>)
{
  *a1 = *v1;
}

Swift::Int sub_37A68()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

void sub_37AB0()
{
  sub_E7680(*v0);
}

Swift::Int sub_37ADC()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

BOOL sub_37B20(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_37B34(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  BOOL v4 = a1[1] == a2[1] && a1[2] == a2[2];
  if (!v4 && (sub_E7620() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[3] == a2[3] && a1[4] == a2[4];
  if (!v5 && (sub_E7620() & 1) == 0 || (a1[5] != a2[5] || a1[6] != a2[6]) && (sub_E7620() & 1) == 0) {
    return 0;
  }
  if (a1[7] != a2[7]) {
    return 0;
  }
  uint64_t v6 = a1[8];
  uint64_t v7 = a2[8];

  return static Color.== infix(_:_:)(v6, v7);
}

uint64_t type metadata accessor for LightbarSwatchButton()
{
  uint64_t result = qword_126C40;
  if (!qword_126C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_37C54(uint64_t a1, uint64_t a2)
{
  return initializeWithCopy for LightbarSwatch(a2, a1);
}

uint64_t sub_37C64()
{
  uint64_t v1 = *(void *)(type metadata accessor for LightbarSwatchButton() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_10C7C(&qword_1230B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_E6250();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_37DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightbarSwatchButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_37E3C()
{
  return sub_E6DF0();
}

uint64_t sub_37F38@<X0>(uint64_t a1@<X8>)
{
  return sub_35668(*(void *)(v1 + 16), a1);
}

unint64_t sub_37F40()
{
  unint64_t result = qword_1230F0;
  if (!qword_1230F0)
  {
    sub_11B60(&qword_1230E8);
    sub_39B0C(&qword_1230F8, &qword_123100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1230F0);
  }
  return result;
}

unint64_t sub_37FE0()
{
  unint64_t result = qword_123108;
  if (!qword_123108)
  {
    sub_11B60(&qword_1230D0);
    sub_39B0C(&qword_123110, &qword_1230C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123108);
  }
  return result;
}

unint64_t sub_38080()
{
  unint64_t result = qword_123120;
  if (!qword_123120)
  {
    sub_11B60(&qword_1230E0);
    sub_11B60(&qword_1230D0);
    sub_E6380();
    sub_37FE0();
    sub_39AC4(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_39AC4(&qword_123128, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123120);
  }
  return result;
}

uint64_t sub_381B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_123130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_38218(uint64_t a1)
{
  return a1;
}

uint64_t sub_38290(uint64_t a1)
{
  return a1;
}

unint64_t sub_38304()
{
  unint64_t result = qword_123178;
  if (!qword_123178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123178);
  }
  return result;
}

unint64_t sub_38358()
{
  unint64_t result = qword_123180;
  if (!qword_123180)
  {
    sub_11B60(&qword_123168);
    sub_383CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123180);
  }
  return result;
}

unint64_t sub_383CC()
{
  unint64_t result = qword_123188;
  if (!qword_123188)
  {
    sub_11B60(&qword_123190);
    sub_3846C();
    sub_39B0C(&qword_1231B8, &qword_1231C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123188);
  }
  return result;
}

unint64_t sub_3846C()
{
  unint64_t result = qword_123198;
  if (!qword_123198)
  {
    sub_11B60(&qword_1231A0);
    sub_39B0C(&qword_1231A8, &qword_1231B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123198);
  }
  return result;
}

unint64_t sub_38510()
{
  unint64_t result = qword_1231C8;
  if (!qword_1231C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1231C8);
  }
  return result;
}

void *sub_38564()
{
  return &protocol witness table for Int;
}

uint64_t sub_38570()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3858C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for LightbarSwatch(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for LightbarSwatch()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LightbarSwatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LightbarSwatch(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LightbarSwatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for LightbarSwatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LightbarSwatch(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LightbarSwatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightbarSwatch()
{
  return &type metadata for LightbarSwatch;
}

ValueMetadata *type metadata accessor for LightColorPickerUtilities()
{
  return &type metadata for LightColorPickerUtilities;
}

uint64_t *sub_3889C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10C7C(&qword_1230B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_E6250();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    char v11 = (char *)v4 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(_OWORD *)char v11 = *(_OWORD *)v12;
    uint64_t v13 = *((void *)v12 + 3);
    *((void *)v11 + 2) = *((void *)v12 + 2);
    *((void *)v11 + 3) = v13;
    uint64_t v14 = *((void *)v12 + 5);
    *((void *)v11 + 4) = *((void *)v12 + 4);
    *((void *)v11 + 5) = v14;
    uint64_t v15 = *((void *)v12 + 7);
    *((void *)v11 + 6) = *((void *)v12 + 6);
    *((void *)v11 + 7) = v15;
    *((void *)v11 + 8) = *((void *)v12 + 8);
    uint64_t v16 = (char *)v4 + v10;
    uint64_t v17 = (char *)a2 + v10;
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
    uint64_t v19 = *((void *)v17 + 5);
    *((void *)v16 + 4) = *((void *)v17 + 4);
    *((void *)v16 + 5) = v19;
    uint64_t v20 = *((void *)v17 + 7);
    *((void *)v16 + 6) = *((void *)v17 + 6);
    *((void *)v16 + 7) = v20;
    uint64_t v21 = *((void *)v17 + 9);
    *((void *)v16 + 8) = *((void *)v17 + 8);
    *((void *)v16 + 9) = v21;
    *((void *)v16 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v17 + 10);
    uint64_t v22 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_38A9C(uint64_t a1)
{
  sub_10C7C(&qword_1230B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_E6250();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_38B98(void *a1, void *a2, int *a3)
{
  sub_10C7C(&qword_1230B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_E6250();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v11 = *((void *)v10 + 3);
  *((void *)v9 + 2) = *((void *)v10 + 2);
  *((void *)v9 + 3) = v11;
  uint64_t v12 = *((void *)v10 + 5);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  *((void *)v9 + 5) = v12;
  uint64_t v13 = *((void *)v10 + 7);
  *((void *)v9 + 6) = *((void *)v10 + 6);
  *((void *)v9 + 7) = v13;
  *((void *)v9 + 8) = *((void *)v10 + 8);
  uint64_t v14 = (char *)a1 + v8;
  uint64_t v15 = (char *)a2 + v8;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
  uint64_t v17 = *((void *)v15 + 5);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *((void *)v14 + 5) = v17;
  uint64_t v18 = *((void *)v15 + 7);
  *((void *)v14 + 6) = *((void *)v15 + 6);
  *((void *)v14 + 7) = v18;
  uint64_t v19 = *((void *)v15 + 9);
  *((void *)v14 + 8) = *((void *)v15 + 8);
  *((void *)v14 + 9) = v19;
  *((void *)v14 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v15 + 10);
  uint64_t v20 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v2sub_E59A4(2, 18, 1, 0) = *(void *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_38D4C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_39C6C((uint64_t)a1, &qword_1230B8);
    sub_10C7C(&qword_1230B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_E6250();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  void *v8 = *(void *)((char *)a2 + v7);
  v8[1] = *(void *)((char *)a2 + v7 + 8);
  _OWORD v8[2] = *(void *)((char *)a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[3] = v9[3];
  v8[4] = v9[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[5] = v9[5];
  v8[6] = v9[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[7] = v9[7];
  v8[8] = v9[8];
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *(void *)((char *)a1 + v1sub_E59A4(2, 18, 1, 0) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  v11[1] = v12[1];
  swift_retain();
  swift_release();
  v11[2] = v12[2];
  v11[3] = v12[3];
  v11[4] = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[5] = v12[5];
  v11[6] = v12[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[7] = v12[7];
  v11[8] = v12[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[9] = v12[9];
  v11[10] = v12[10];
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

char *sub_38F9C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10C7C(&qword_1230B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_E6250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *((void *)v10 + 8) = *((void *)v11 + 8);
  long long v12 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v12;
  long long v13 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v13;
  uint64_t v14 = &a1[v9];
  uint64_t v15 = &a2[v9];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((void *)v14 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v15 + 10);
  long long v17 = *((_OWORD *)v15 + 4);
  long long v18 = *((_OWORD *)v15 + 2);
  *((_OWORD *)v14 + 3) = *((_OWORD *)v15 + 3);
  *((_OWORD *)v14 + 4) = v17;
  *((_OWORD *)v14 + 2) = v18;
  uint64_t v19 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  return a1;
}

char *sub_390C4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_39C6C((uint64_t)a1, &qword_1230B8);
    uint64_t v6 = sub_10C7C(&qword_1230B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_E6250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((void *)v9 + 2) = *(void *)&a2[v8 + 16];
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 4);
  *((void *)v9 + 3) = *((void *)v10 + 3);
  *((void *)v9 + 4) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 6);
  *((void *)v9 + 5) = *((void *)v10 + 5);
  *((void *)v9 + 6) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v10 + 8);
  *((void *)v9 + 7) = *((void *)v10 + 7);
  *((void *)v9 + 8) = v13;
  swift_release();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  long long v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v16 + 6);
  *((void *)v15 + 5) = *((void *)v16 + 5);
  *((void *)v15 + 6) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v16 + 8);
  *((void *)v15 + 7) = *((void *)v16 + 7);
  *((void *)v15 + 8) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v16 + 10);
  *((void *)v15 + 9) = *((void *)v16 + 9);
  *((void *)v15 + 1sub_E59A4(2, 18, 1, 0) = v19;
  swift_release();
  uint64_t v20 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  return a1;
}

uint64_t sub_39288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3929C);
}

uint64_t sub_3929C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10C7C(&qword_123130);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_E59A4(2, 18, 1, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_39364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_39378);
}

uint64_t sub_39378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10C7C(&qword_123130);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

void sub_3943C()
{
  sub_394EC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_394EC()
{
  if (!qword_123228)
  {
    sub_E6250();
    unint64_t v0 = sub_E6260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_123228);
    }
  }
}

uint64_t destroy for LightbarSwatchColorPicker(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LightbarSwatchColorPicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LightbarSwatchColorPicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LightbarSwatchColorPicker(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for LightbarSwatchColorPicker(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[10];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LightbarSwatchColorPicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LightbarSwatchColorPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightbarSwatchColorPicker()
{
  return &type metadata for LightbarSwatchColorPicker;
}

uint64_t sub_398EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_39960()
{
  unint64_t result = qword_123268;
  if (!qword_123268)
  {
    sub_11B60(&qword_123270);
    sub_39B0C(&qword_123150, &qword_123140);
    sub_39B0C(&qword_123158, &qword_123148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123268);
  }
  return result;
}

void type metadata accessor for GCSColorPreset()
{
  if (!qword_123278)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_123278);
    }
  }
}

uint64_t sub_39A7C()
{
  return sub_39AC4(&qword_123280, (void (*)(uint64_t))type metadata accessor for GCSColorPreset);
}

uint64_t sub_39AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_39B0C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_39B50()
{
  unint64_t result = qword_123298;
  if (!qword_123298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123298);
  }
  return result;
}

uint64_t sub_39BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_39C10(uint64_t a1)
{
  uint64_t v2 = sub_E63B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_39C6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_39CC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_39D34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_39D3C()
{
  sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return v1;
}

uint64_t sub_39D8C()
{
  return sub_E6DF0();
}

void (*sub_39DE0(void *a1))(char **a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[3];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_39EAC((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return sub_39E94;
}

void sub_39E94(char **a1, char a2)
{
}

uint64_t sub_39EAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_39ED8(uint64_t a1)
{
  return a1;
}

uint64_t sub_39F04()
{
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  return v1;
}

uint64_t sub_39F58()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_39FA8()
{
  return sub_E6DF0();
}

void (*sub_39FFC(void *a1))(char **a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[6];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_39EAC((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_3A0B0;
}

void sub_3A0B0(char **a1, char a2)
{
}

uint64_t sub_3A0C8()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_3A11C()
{
  sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  return v1;
}

uint64_t sub_3A16C()
{
  return sub_E6DF0();
}

void (*sub_3A1C0(void *a1))(char **a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[9];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_39EAC((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  return sub_3A274;
}

void sub_3A274(char **a1, char a2)
{
}

void sub_3A28C(char **a1, char a2, void (*a3)(char *))
{
  uint64_t v4 = *a1;
  *((void *)v4 + 5) = *((void *)*a1 + 3);
  *(void *)uint64_t v4 = *((void *)v4 + 7);
  *(_OWORD *)(v4 + 8) = *((_OWORD *)v4 + 4);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_E6DF0();
    sub_18B48((uint64_t)(v4 + 48));
    swift_release();
    a3(v4 + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    sub_18B48((uint64_t)(v4 + 48));
    swift_release();
    a3(v4 + 32);
  }

  free(v4);
}

uint64_t sub_3A378()
{
  sub_10C7C(&qword_1232B0);
  sub_E6E10();
  return v1;
}

uint64_t sub_3A3CC()
{
  sub_10C7C(&qword_1232B0);
  sub_E6E10();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = v0[3];
  v2[3] = v0[2];
  v2[4] = v3;
  v2[5] = v0[4];
  long long v4 = v0[1];
  v2[1] = *v0;
  v2[2] = v4;
  sub_3AE74((uint64_t)v0);
  return sub_3ABBC(v6, v7, v8, KeyPath, (uint64_t)sub_3AA8C, (uint64_t)v2);
}

uint64_t sub_3A4B8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = a1[3];
  long long v47 = a1[2];
  long long v48 = v6;
  long long v49 = a1[4];
  long long v7 = a1[1];
  long long v45 = *a1;
  long long v46 = v7;
  swift_getKeyPath();
  long long v8 = a1[3];
  long long v52 = a1[2];
  long long v53 = v8;
  long long v54 = a1[4];
  long long v9 = a1[1];
  long long v50 = *a1;
  long long v51 = v9;
  sub_3BF94((uint64_t)&v45);
  sub_10C7C(&qword_123350);
  sub_E6E00();
  swift_release();
  sub_3C024((uint64_t)&v45);
  uint64_t v10 = sub_3AA94(v55, v56, v57, &qword_1232A8, &qword_123358, &qword_123360);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = swift_release();
  if (v10 <= 0)
  {
    swift_getKeyPath();
    long long v52 = v47;
    long long v53 = v48;
    long long v54 = v49;
    long long v50 = v45;
    long long v51 = v46;
    sub_3BF94((uint64_t)&v45);
    sub_E6E00();
    swift_release();
    sub_3C024((uint64_t)&v45);
    uint64_t v12 = sub_3AA94(v55, v56, v57, &qword_122848, &qword_122858, &qword_122860);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v11 = swift_release();
    if (v12 < 1)
    {
      uint64_t v36 = sub_10C7C(&qword_1232E0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 1, 1, v36);
    }
  }
  v38[1] = v38;
  uint64_t v39 = a3;
  __chkstk_darwin(v11);
  uint64_t v40 = v37;
  v37[2] = a2;
  v37[3] = &v45;
  long long v52 = v47;
  long long v53 = v48;
  long long v54 = v49;
  long long v50 = v45;
  long long v51 = v46;
  sub_10C7C(&qword_123350);
  sub_E6DE0();
  uint64_t v14 = v55;
  uint64_t v13 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14 == 0x636972656E6547 && v13 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v23 = 0;
    uint64_t v21 = 0;
    goto LABEL_10;
  }
  char v15 = sub_E7620();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_9;
  }
  long long v50 = *(_OWORD *)(a2 + 56);
  *(void *)&long long v51 = *(void *)(a2 + 72);
  sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  unint64_t v16 = *(void *)(v55 + 16);
  swift_bridgeObjectRelease();
  if (v16 < 2) {
    goto LABEL_9;
  }
  long long v52 = v47;
  long long v53 = v48;
  long long v54 = v49;
  long long v50 = v45;
  long long v51 = v46;
  sub_E6DE0();
  uint64_t v17 = v55;
  uint64_t v18 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v50 = v17;
  *((void *)&v50 + 1) = v18;
  sub_187B0();
  uint64_t v19 = sub_E6920();
  uint64_t v23 = v22 & 1;
LABEL_10:
  uint64_t v24 = v39;
  uint64_t v41 = v19;
  uint64_t v42 = v20;
  uint64_t v43 = v23;
  uint64_t v44 = v21;
  long long v52 = v47;
  long long v53 = v48;
  long long v54 = v49;
  long long v50 = v45;
  long long v51 = v46;
  sub_10C7C(&qword_123350);
  sub_E6DE0();
  uint64_t v25 = v57;
  uint64_t v26 = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25 == 0xD00000000000001BLL && v26 == 0x80000000000F1AB0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = sub_E7620();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v33 = 0;
      uint64_t v31 = 0;
      goto LABEL_16;
    }
  }
  *(void *)&long long v50 = sub_B7108(0xD00000000000001FLL, (void *)0x80000000000F1AD0);
  *((void *)&v50 + 1) = v28;
  sub_187B0();
  uint64_t v29 = sub_E6920();
  uint64_t v33 = v32 & 1;
LABEL_16:
  *(void *)&long long v50 = v29;
  *((void *)&v50 + 1) = v30;
  *(void *)&long long v51 = v33;
  *((void *)&v51 + 1) = v31;
  sub_10C7C(&qword_1232F0);
  sub_10C7C(&qword_123300);
  sub_3B570();
  sub_3C450(&qword_1232F8, &qword_123300);
  sub_E6ED0();
  uint64_t v34 = sub_10C7C(&qword_1232E0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v24, 0, 1, v34);
}

uint64_t sub_3AA8C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3A4B8(a1, v2 + 16, a2);
}

uint64_t sub_3AA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6)
{
  return 0;
}

uint64_t sub_3ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  sub_10C7C(&qword_1232D0);
  sub_10C7C(&qword_123308);
  sub_3B490();
  sub_3C450(&qword_123310, &qword_123308);
  sub_3C450(&qword_123318, &qword_123308);
  swift_getKeyPath();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  unint64_t v12[3] = a2;
  v12[4] = a3;
  v12[5] = a5;
  v12[6] = a6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_3BAD8;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10C7C(&qword_123320);
  sub_3BB74(&qword_123328, &qword_123320, (void (*)(void))sub_3BBE0);
  sub_E6EB0();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3AE74(uint64_t a1)
{
  return a1;
}

uint64_t sub_3AF18@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t sub_3AF34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3AF58()
{
  return sub_E69D0();
}

uint64_t sub_3AF74()
{
  long long v1 = v0[4];
  long long v2 = v0[2];
  long long v15 = v0[3];
  long long v16 = v1;
  long long v3 = *v0;
  long long v13 = v0[1];
  long long v14 = v2;
  long long v12 = v3;
  sub_10C7C(&qword_1232B0);
  sub_E6E10();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v15;
  v5[3] = v14;
  v5[4] = v6;
  v5[5] = v16;
  long long v7 = v13;
  v5[1] = v12;
  uint64_t v5[2] = v7;
  sub_3AE74((uint64_t)&v12);
  return sub_3ABBC(v9, v10, v11, KeyPath, (uint64_t)sub_3C498, (uint64_t)v5);
}

uint64_t initializeBufferWithCopyOfBuffer for GCSProfileSheetCustomControlsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSProfileSheetCustomControlsView()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GCSProfileSheetCustomControlsView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GCSProfileSheetCustomControlsView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for GCSProfileSheetCustomControlsView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileSheetCustomControlsView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileSheetCustomControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8sub_E59A4(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8sub_E59A4(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileSheetCustomControlsView()
{
  return &type metadata for GCSProfileSheetCustomControlsView;
}

uint64_t sub_3B440()
{
  return sub_3BB74(&qword_1232B8, &qword_1232C0, (void (*)(void))sub_3B490);
}

uint64_t sub_3B490()
{
  return sub_3BB74(&qword_1232C8, &qword_1232D0, (void (*)(void))sub_3B4CC);
}

unint64_t sub_3B4CC()
{
  unint64_t result = qword_1232D8;
  if (!qword_1232D8)
  {
    sub_11B60(&qword_1232E0);
    sub_3B570();
    sub_3C450(&qword_1232F8, &qword_123300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1232D8);
  }
  return result;
}

unint64_t sub_3B570()
{
  unint64_t result = qword_1232E8;
  if (!qword_1232E8)
  {
    sub_11B60(&qword_1232F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1232E8);
  }
  return result;
}

uint64_t sub_3B5E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_3B660(unint64_t a1)
{
  sub_10C7C(&qword_1232B0);
  uint64_t result = sub_E6DE0();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v3 + 16) > a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_3B790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *))
{
  long long v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  unint64_t v12[3] = 0;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  long long v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = a6;
  v13[7] = a1;
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_E6E30();
  a7(&v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

char *sub_3B8FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_123348);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_3(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  long long v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_3BA00()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_3BA50@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_3B660(*a1);
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_3BA88()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_3BAD8(uint64_t *a1, uint64_t *a2)
{
  return sub_3B790(*a1, *a2, a2[1], *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(uint64_t *))(v2 + 40));
}

uint64_t sub_3BAF4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3BB2C(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *, void *))(v1 + 16);
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  v6[1] = a1[2];
  uint64_t v7 = v3;
  v6[0] = v4;
  return v2(&v7, v6);
}

uint64_t sub_3BB74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_3BBE0()
{
  unint64_t result = qword_123330;
  if (!qword_123330)
  {
    sub_11B60(&qword_123338);
    sub_3BC5C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123330);
  }
  return result;
}

unint64_t sub_3BC5C()
{
  unint64_t result = qword_123340;
  if (!qword_123340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123340);
  }
  return result;
}

uint64_t sub_3BCB0@<X0>(unint64_t *a1@<X3>, void *a2@<X8>)
{
  unint64_t v3 = *a1;
  sub_10C7C(&qword_1232B0);
  uint64_t result = sub_E6DE0();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(v14 + 16))
  {
    uint64_t v5 = (void *)(v14 + (v3 << 6));
    uint64_t v7 = v5[4];
    uint64_t v6 = v5[5];
    uint64_t v9 = v5[6];
    uint64_t v8 = v5[7];
    uint64_t v10 = v5[8];
    uint64_t v11 = v5[9];
    uint64_t v12 = v5[10];
    uint64_t v13 = v5[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v9;
    a2[3] = v8;
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = v12;
    a2[7] = v13;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_3BDA0@<X0>(void *a1@<X8>)
{
  return sub_3BCB0((unint64_t *)(v1 + 56), a1);
}

uint64_t sub_3BDB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[3];
  uint64_t v16 = a1[2];
  uint64_t v9 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  unint64_t v12 = *a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  uint64_t v13 = v17;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_3BF7C(v17);
  uint64_t v13 = result;
  if ((v12 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v12 < *(void *)(v13 + 16))
  {
    uint64_t v15 = (void *)(v13 + (v12 << 6));
    v15[4] = v6;
    v15[5] = v5;
    v15[6] = v16;
    v15[7] = v7;
    v15[8] = v9;
    v15[9] = v8;
    v15[10] = v10;
    v15[11] = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_E6DF0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_3BF1C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_3BF6C(uint64_t *a1)
{
  return sub_3BDB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32, (unint64_t *)(v1 + 56));
}

char *sub_3BF7C(uint64_t a1)
{
  return sub_3B8FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_3BF94(uint64_t a1)
{
  return a1;
}

uint64_t sub_3C024(uint64_t a1)
{
  return a1;
}

uint64_t sub_3C0B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(long long **)(v1 + 24);
  uint64_t v5 = *(void *)v4;
  long long v6 = *(_OWORD *)(v4 + 8);
  uint64_t v40 = *(void *)(v4 + 24);
  long long v39 = v6;
  swift_bridgeObjectRetain();
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  long long v7 = v47;
  uint64_t v8 = v48;
  swift_getKeyPath();
  long long v47 = *v3;
  long long v9 = v3[1];
  long long v10 = v3[2];
  long long v11 = v3[4];
  long long v50 = v3[3];
  long long v51 = v11;
  long long v48 = v9;
  long long v49 = v10;
  sub_3BF94((uint64_t)v3);
  sub_10C7C(&qword_123350);
  sub_E6E00();
  swift_release();
  sub_3C024((uint64_t)v3);
  sub_691C8(v5, v7, *((uint64_t *)&v7 + 1), v8, v34, v36, v37, (uint64_t)&v39);
  long long v35 = *(_OWORD *)(v4 + 32);
  uint64_t v38 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  sub_10C7C(&qword_122848);
  sub_E6E10();
  long long v12 = v47;
  uint64_t v13 = v48;
  swift_getKeyPath();
  long long v47 = *v3;
  long long v14 = v3[1];
  long long v15 = v3[2];
  long long v16 = v3[4];
  long long v50 = v3[3];
  long long v51 = v16;
  long long v48 = v14;
  long long v49 = v15;
  sub_3BF94((uint64_t)v3);
  sub_E6E00();
  swift_release();
  sub_3C024((uint64_t)v3);
  sub_19378(v5, v12, *((uint64_t *)&v12 + 1), v13, v35, *((uint64_t *)&v35 + 1), v38, (uint64_t)&v47);
  uint64_t v17 = v41;
  uint64_t v19 = v42;
  uint64_t v18 = v43;
  uint64_t v21 = v44;
  uint64_t v20 = v45;
  uint64_t v22 = v46;
  uint64_t v23 = v47;
  char v24 = BYTE8(v47);
  long long v25 = v48;
  long long v30 = v49;
  long long v26 = v50;
  uint64_t v31 = v51;
  char v27 = BYTE8(v51);
  uint64_t v28 = v52;
  LOBYTE(v4) = BYTE8(v39) & 1;
  LOBYTE(v5) = BYTE8(v47) & 1;
  char v53 = BYTE8(v47) & 1;
  uint64_t v32 = v40;
  uint64_t v33 = v39;
  *(void *)a1 = v39;
  *(unsigned char *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v32;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v19;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v18;
  *(void *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v20;
  *(void *)(a1 + 64) = v22;
  *(void *)(a1 + 72) = v23;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v24 & 1;
  *(_OWORD *)(a1 + 88) = v25;
  *(_OWORD *)(a1 + 104) = v30;
  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v26;
  *(void *)(a1 + 136) = v31;
  *(unsigned char *)(a1 + 144) = v27 & 1;
  *(void *)(a1 + 152) = v28;
  sub_19100(v33, v4);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19100(v23, v5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_19048(v23, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_19048(v33, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3C450(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_3C49C(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_3C518()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_3C560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_3C5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for BluetoothManager();
    sub_3F9C8(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_3C66C()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for BluetoothManager, &qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
}

uint64_t sub_3C6B4(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  a1(0);
  sub_3F9C8(a2, a3);

  return sub_E63F0();
}

uint64_t sub_3C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for BluetoothManager();
  uint64_t v7 = sub_3F9C8(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);

  return EnvironmentObject.projectedValue.getter(a3, a4, v6, v7);
}

uint64_t sub_3C7AC(void *a1, uint64_t a2, int64_t a3)
{
  uint64_t v37 = (char *)_swiftEmptyArrayStorage;
  if (a1)
  {
    id v4 = [a1 controllers];
    sub_3CBE0();
    unint64_t v5 = sub_E7210();

    if (v5 >> 62) {
      goto LABEL_50;
    }
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    if (v6)
    {
      while (1)
      {
        if (v6 < 1)
        {
          __break(1u);
          goto LABEL_54;
        }
        uint64_t v7 = 0;
        int64_t v36 = a3;
        uint64_t v8 = (char *)_swiftEmptyArrayStorage;
        while (1)
        {
          id v9 = (v5 & 0xC000000000000001) != 0 ? (id)sub_E74E0() : *(id *)(v5 + 8 * v7 + 32);
          long long v10 = v9;
          id v11 = [v9 uuidIdentifiers];
          if (v11) {
            break;
          }
LABEL_27:
          id v21 = [v10 macAddresses];
          if (!v21) {
            goto LABEL_8;
          }
          uint64_t v22 = v21;
          uint64_t v23 = sub_E7210();

          uint64_t v24 = *(void *)(v23 + 16);
          a3 = *((void *)v8 + 2);
          int64_t v25 = a3 + v24;
          if (__OFADD__(a3, v24)) {
            goto LABEL_44;
          }
          isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && (int64_t v27 = *((void *)v8 + 3) >> 1, v27 >= v25))
          {
            if (!*(void *)(v23 + 16)) {
              goto LABEL_6;
            }
          }
          else
          {
            if (a3 <= v25) {
              int64_t v28 = a3 + v24;
            }
            else {
              int64_t v28 = a3;
            }
            uint64_t v8 = sub_3F588(isUniquelyReferenced_nonNull_native, v28, 1, v8);
            int64_t v27 = *((void *)v8 + 3) >> 1;
            if (!*(void *)(v23 + 16))
            {
LABEL_6:
              if (v24) {
                goto LABEL_45;
              }
              goto LABEL_7;
            }
          }
          if (v27 - *((void *)v8 + 2) < v24) {
            goto LABEL_47;
          }
          swift_arrayInitWithCopy();
          if (v24)
          {
            uint64_t v29 = *((void *)v8 + 2);
            BOOL v18 = __OFADD__(v29, v24);
            uint64_t v30 = v29 + v24;
            if (v18) {
              goto LABEL_49;
            }
            *((void *)v8 + 2) = v30;
          }
LABEL_7:
          swift_bridgeObjectRelease();
LABEL_8:
          ++v7;

          if (v6 == v7)
          {
            uint64_t v37 = v8;
            a3 = v36;
            goto LABEL_51;
          }
        }
        long long v12 = v11;
        uint64_t v13 = sub_E7210();

        uint64_t v14 = *(void *)(v13 + 16);
        int64_t v15 = *((void *)v8 + 2);
        a3 = v15 + v14;
        if (!__OFADD__(v15, v14)) {
          break;
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_E7570();
        swift_bridgeObjectRelease();
        if (!v6) {
          goto LABEL_51;
        }
      }
      long long v16 = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (v16 && a3 <= *((void *)v8 + 3) >> 1)
      {
        if (*(void *)(v13 + 16))
        {
LABEL_17:
          if ((*((void *)v8 + 3) >> 1) - *((void *)v8 + 2) < v14) {
            goto LABEL_46;
          }
          swift_arrayInitWithCopy();
          if (v14)
          {
            uint64_t v17 = *((void *)v8 + 2);
            BOOL v18 = __OFADD__(v17, v14);
            uint64_t v19 = v17 + v14;
            if (v18) {
              goto LABEL_48;
            }
            *((void *)v8 + 2) = v19;
          }
LABEL_26:
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
      }
      else
      {
        if (v15 <= a3) {
          int64_t v20 = v15 + v14;
        }
        else {
          int64_t v20 = v15;
        }
        uint64_t v8 = sub_3F588(v16, v20, 1, v8);
        if (*(void *)(v13 + 16)) {
          goto LABEL_17;
        }
      }
      if (v14) {
        goto LABEL_43;
      }
      goto LABEL_26;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    if (a3)
    {
      uint64_t v31 = *(uint64_t (**)(uint64_t))(*(void *)a3 + 1160);
      uint64_t v32 = swift_retain();
      unint64_t v33 = v31(v32);
      swift_release();
      uint64_t v34 = sub_3F68C(v33, (uint64_t)&v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v34;
    }
  }
  else
  {
LABEL_54:
    type metadata accessor for GCSPreferencesStore();
    sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
  type metadata accessor for BluetoothManager();
  sub_3F9C8(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

unint64_t sub_3CBE0()
{
  unint64_t result = qword_124E30;
  if (!qword_124E30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_124E30);
  }
  return result;
}

unint64_t sub_3CC20(void *a1, uint64_t a2, int64_t a3)
{
  unint64_t result = sub_3C7AC(a1, a2, a3);
  unint64_t v4 = result;
  if (!(result >> 62))
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v5) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t result = sub_E7570();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = sub_E74E0();
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * i + 32);
        swift_retain();
      }
      if ((*(uint64_t (**)(void))(*(void *)v7 + 760))())
      {
        sub_E7510();
        sub_E7540();
        sub_E7550();
        sub_E7520();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_3CD7C(void *a1, uint64_t a2, int64_t a3)
{
  unint64_t result = sub_3C7AC(a1, a2, a3);
  unint64_t v4 = result;
  if (!(result >> 62))
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    if (v5) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t result = sub_E7570();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = sub_E74E0();
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * i + 32);
        swift_retain();
      }
      if ((*(uint64_t (**)(void))(*(void *)v7 + 760))())
      {
        swift_release();
      }
      else
      {
        sub_E7510();
        sub_E7540();
        sub_E7550();
        sub_E7520();
      }
    }
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_3CED8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = sub_10C7C(&qword_123370);
  __chkstk_darwin(v62);
  id v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10C7C(&qword_123378);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C(&qword_123380);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v60 = (char *)&v56 - v14;
  uint64_t v15 = sub_10C7C(&qword_123388);
  uint64_t v59 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v56 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v58 = (char *)&v56 - v18;
  unint64_t v19 = sub_3C7AC(a1, a2, a3);
  unint64_t v20 = v19;
  uint64_t v70 = _swiftEmptyArrayStorage;
  unint64_t v21 = v19 >> 62;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_E7570();
    uint64_t v64 = a4;
    long long v65 = v9;
    if (v22)
    {
LABEL_3:
      if (v22 < 1)
      {
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v23 = v15;
      uint64_t v24 = 0;
      unint64_t v25 = v20 & 0xC000000000000001;
      do
      {
        if (v25)
        {
          uint64_t v26 = sub_E74E0();
        }
        else
        {
          uint64_t v26 = *(void *)(v20 + 8 * v24 + 32);
          swift_retain();
        }
        if ((*(uint64_t (**)(void))(*(void *)v26 + 760))())
        {
          sub_E7510();
          sub_E7540();
          sub_E7550();
          sub_E7520();
        }
        else
        {
          swift_release();
        }
        ++v24;
      }
      while (v22 != v24);
      swift_bridgeObjectRelease();
      int64_t v27 = v70;
      uint64_t v70 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v22; ++i)
      {
        if (v25)
        {
          uint64_t v29 = sub_E74E0();
        }
        else
        {
          uint64_t v29 = *(void *)(v20 + 8 * i + 32);
          swift_retain();
        }
        if ((*(uint64_t (**)(void))(*(void *)v29 + 760))())
        {
          swift_release();
        }
        else
        {
          sub_E7510();
          sub_E7540();
          sub_E7550();
          sub_E7520();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v30 = (unint64_t)v70;
      uint64_t v15 = v23;
      uint64_t v31 = v20 & 0xFFFFFFFFFFFFFF8;
      if (!v21) {
        goto LABEL_21;
      }
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    uint64_t v64 = a4;
    long long v65 = v9;
    if (v22) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  int64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v31 = v20 & 0xFFFFFFFFFFFFFF8;
  if (!v21)
  {
LABEL_21:
    uint64_t v32 = *(void *)(v31 + 16);
    goto LABEL_25;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_E7570();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  if (v32 <= 0)
  {
    swift_release();
    swift_release();
    swift_storeEnumTagMultiPayload();
    sub_40B8C(&qword_123390, &qword_123378);
    return sub_E6610();
  }
  uint64_t v70 = v27;
  sub_10C7C(&qword_122250);
  sub_40B8C(&qword_123398, &qword_122250);
  sub_3F974();
  sub_3F9C8(&qword_1233A8, (void (*)(uint64_t))type metadata accessor for Device);
  a1 = v58;
  uint64_t v33 = sub_E6EC0();
  if ((v30 & 0x8000000000000000) != 0 || (v30 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_E7570();
    uint64_t v33 = swift_release();
    if (v45 >= 1) {
      goto LABEL_29;
    }
LABEL_33:
    swift_release();
    uint64_t v46 = sub_10C7C(&qword_1233B0);
    uint64_t v42 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v60, 1, 1, v46);
    goto LABEL_34;
  }
  if (*(uint64_t *)(v30 + 16) < 1) {
    goto LABEL_33;
  }
LABEL_29:
  __chkstk_darwin(v33);
  uint64_t v70 = (void *)sub_B7108(0xD000000000000017, (void *)0x80000000000F1AF0);
  uint64_t v71 = v34;
  sub_187B0();
  uint64_t v70 = (void *)sub_E6920();
  uint64_t v71 = v35;
  char v72 = v36 & 1;
  uint64_t v73 = v37;
  uint64_t v66 = sub_B7108(0xD000000000000016, (void *)0x80000000000F1B10);
  uint64_t v67 = v38;
  uint64_t v66 = sub_E6920();
  uint64_t v67 = v39;
  char v68 = v40 & 1;
  uint64_t v69 = v41;
  sub_3FB08();
  uint64_t v42 = (uint64_t)v60;
  sub_E6ED0();
  swift_release();
  uint64_t v43 = sub_10C7C(&qword_1233B0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
LABEL_34:
  uint64_t v47 = v59;
  long long v48 = *(void (**)(char *, void *, uint64_t))(v59 + 16);
  long long v49 = v56;
  v48(v56, a1, v15);
  long long v50 = a1;
  uint64_t v51 = v15;
  uint64_t v52 = v57;
  sub_3FBE0(v42, v57, &qword_123380);
  uint64_t v53 = (uint64_t)v61;
  v48(v61, v49, v51);
  uint64_t v54 = sub_10C7C(&qword_1233B8);
  sub_3FBE0(v52, v53 + *(int *)(v54 + 48), &qword_123380);
  sub_3FC44(v52, &qword_123380);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v47 + 8);
  v55(v49, v51);
  sub_3FBE0(v53, (uint64_t)v65, &qword_123378);
  swift_storeEnumTagMultiPayload();
  sub_40B8C(&qword_123390, &qword_123378);
  sub_E6610();
  sub_3FC44(v53, &qword_123378);
  sub_3FC44(v42, &qword_123380);
  return ((uint64_t (*)(void *, uint64_t))v55)(v50, v51);
}

uint64_t sub_3D78C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_3D798()
{
  type metadata accessor for GCSPreferencesStore();
  sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t v0 = sub_E63F0();
  type metadata accessor for BluetoothManager();
  sub_3F9C8(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
  sub_E63F0();
  return v0;
}

uint64_t sub_3D86C()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_3D8B4()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for BluetoothManager, &qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
}

uint64_t sub_3D908()
{
  return sub_E69D0();
}

uint64_t sub_3D924@<X0>(uint64_t a1@<X8>)
{
  return sub_3CED8(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

double sub_3D934@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_E65D0();
  uint64_t v5 = sub_E6560();
  sub_3DA7C(a1, (uint64_t)v14);
  *(_OWORD *)&v16[199] = v14[12];
  *(_OWORD *)&v16[215] = v14[13];
  *(_OWORD *)&v16[231] = v14[14];
  v16[247] = v15;
  *(_OWORD *)&v16[135] = v14[8];
  *(_OWORD *)&v16[151] = v14[9];
  *(_OWORD *)&v16[167] = v14[10];
  *(_OWORD *)&v16[183] = v14[11];
  *(_OWORD *)&v16[71] = v14[4];
  *(_OWORD *)&v16[87] = v14[5];
  *(_OWORD *)&v16[103] = v14[6];
  *(_OWORD *)&v16[119] = v14[7];
  *(_OWORD *)&v16[7] = v14[0];
  *(_OWORD *)&v16[23] = v14[1];
  *(_OWORD *)&v16[39] = v14[2];
  *(_OWORD *)&v16[55] = v14[3];
  long long v6 = *(_OWORD *)&v16[208];
  *(_OWORD *)(a2 + 233) = *(_OWORD *)&v16[192];
  *(_OWORD *)(a2 + 249) = v6;
  *(_OWORD *)(a2 + 265) = *(_OWORD *)&v16[224];
  long long v7 = *(_OWORD *)&v16[144];
  *(_OWORD *)(a2 + 169) = *(_OWORD *)&v16[128];
  *(_OWORD *)(a2 + 185) = v7;
  long long v8 = *(_OWORD *)&v16[176];
  *(_OWORD *)(a2 + 201) = *(_OWORD *)&v16[160];
  *(_OWORD *)(a2 + 217) = v8;
  long long v9 = *(_OWORD *)&v16[80];
  *(_OWORD *)(a2 + 105) = *(_OWORD *)&v16[64];
  *(_OWORD *)(a2 + 121) = v9;
  long long v10 = *(_OWORD *)&v16[112];
  *(_OWORD *)(a2 + 137) = *(_OWORD *)&v16[96];
  *(_OWORD *)(a2 + 153) = v10;
  long long v11 = *(_OWORD *)&v16[16];
  *(_OWORD *)(a2 + 41) = *(_OWORD *)v16;
  *(_OWORD *)(a2 + 57) = v11;
  double result = *(double *)&v16[32];
  long long v13 = *(_OWORD *)&v16[48];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)&v16[32];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 4sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(a2 + 281) = *(void *)&v16[240];
  *(_OWORD *)(a2 + 89) = v13;
  return result;
}

void sub_3DA7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for GCSPreferencesStore();
  sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  swift_retain();
  uint64_t v4 = sub_E63F0();
  uint64_t v75 = v5;
  char v76 = (void *)v4;
  uint64_t v74 = sub_E65E0();
  *(void *)&long long v101 = (*(uint64_t (**)(void))(*(void *)a1 + 360))();
  *((void *)&v101 + 1) = v6;
  sub_187B0();
  uint64_t v7 = sub_E6920();
  uint64_t v72 = v8;
  uint64_t v73 = v7;
  uint64_t v71 = v9;
  char v70 = v10;
  uint64_t v77 = a1;
  if ((*(uint64_t (**)(void))(*(void *)a1 + 760))())
  {
    uint64_t v67 = sub_E6550();
    uint64_t v68 = sub_E6B90();
    sub_E6F30();
    sub_E62A0();
    uint64_t v66 = v101;
    sub_B7108(0xD000000000000013, (void *)0x80000000000F1B80);
    uint64_t v11 = sub_E6920();
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    sub_E6850();
    uint64_t v16 = sub_E6900();
    uint64_t v60 = a2;
    uint64_t v18 = v17;
    char v20 = v19;
    uint64_t v22 = v21;
    swift_release();
    sub_18814(v11, v13, v15);
    swift_bridgeObjectRelease();
    LOBYTE(v153) = 1;
    LOBYTE(v132[0]) = BYTE8(v102);
    swift_retain();
    uint64_t v62 = v18;
    sub_18804(v16, v18, v20 & 1);
    uint64_t v61 = v22;
    swift_bridgeObjectRetain();
    uint64_t v23 = v18;
    a2 = v60;
    sub_18814(v16, v23, v20 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    char v64 = v20 & 1;
    int v63 = sub_E6720();
    char v123 = 0;
    char v119 = BYTE8(v101);
    char v117 = BYTE8(v102);
    char v115 = v20 & 1;
    DWORD1(v101) = (unint64_t)sub_B7108(0xD000000000000025, (void *)0x80000000000F1B50) >> 32;
    *((void *)&v101 + 1) = v24;
    uint64_t v25 = sub_E6920();
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    sub_E6850();
    uint64_t v30 = sub_E6900();
    uint64_t v32 = v31;
    LOBYTE(v13) = v33;
    swift_release();
    LOBYTE(v11) = v13 & 1;
    sub_18814(v25, v27, v29);
    swift_bridgeObjectRelease();
    LODWORD(v101) = sub_E6720();
    uint64_t v34 = sub_E68F0();
    uint64_t v36 = v35;
    uint64_t v59 = v37;
    LOBYTE(v13) = v38 & 1;
    sub_18814(v30, v32, v11);
    swift_bridgeObjectRelease();
    v113[0] = v122[0];
    *(_DWORD *)((char *)v113 + 3) = *(_DWORD *)((char *)v122 + 3);
    v111[2] = v120;
    __int16 v112 = v121;
    v111[0] = v118[0];
    *(_DWORD *)((char *)v111 + 3) = *(_DWORD *)((char *)v118 + 3);
    *(_DWORD *)((char *)v110 + 3) = *(_DWORD *)((char *)v116 + 3);
    v110[0] = v116[0];
    *(_DWORD *)((char *)v109 + 3) = *(_DWORD *)((char *)v114 + 3);
    v109[0] = v114[0];
    DWORD1(v125) = *(_DWORD *)((char *)v122 + 3);
    *(_DWORD *)((char *)&v125 + 1) = v122[0];
    WORD3(v126) = v121;
    *(_DWORD *)((char *)&v126 + 2) = v120;
    DWORD1(v127) = *(_DWORD *)((char *)v118 + 3);
    *(_DWORD *)((char *)&v127 + 1) = v118[0];
    *(_DWORD *)&v128[4] = *(_DWORD *)((char *)v116 + 3);
    *(void *)&long long v124 = v67;
    *((void *)&v124 + 1) = 0x4014000000000000;
    LOBYTE(v125) = 0;
    *((void *)&v125 + 1) = v68;
    LOWORD(v126) = 256;
    *((void *)&v126 + 1) = v66;
    LOBYTE(v127) = v119;
    *((void *)&v127 + 1) = v102;
    v128[0] = BYTE8(v102);
    *(_DWORD *)&v128[1] = v116[0];
    *(_OWORD *)&v128[8] = v103;
    *(void *)&v128[24] = v16;
    *(void *)uint64_t v129 = v62;
    v129[8] = v115;
    *(_DWORD *)&v129[12] = *(_DWORD *)((char *)v114 + 3);
    *(_DWORD *)&v129[9] = v114[0];
    *(void *)&v129[16] = v61;
    *(_DWORD *)&v129[24] = v63;
    long long v83 = v126;
    long long v85 = v127;
    long long v79 = v124;
    long long v81 = v125;
    *(_OWORD *)&v91[12] = *(_OWORD *)&v129[12];
    long long v89 = *(_OWORD *)&v128[16];
    *(_OWORD *)uint64_t v91 = *(_OWORD *)v129;
    long long v87 = *(_OWORD *)v128;
    char v131 = v13;
    *(_DWORD *)((char *)v164 + 3) = *(_DWORD *)&v130[3];
    v164[0] = *(_DWORD *)v130;
    sub_40C44((uint64_t)&v124);
    sub_18804(v34, v36, v13);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_18804(v16, v62, v64);
    swift_bridgeObjectRetain();
    sub_18804(v34, v36, v13);
    swift_bridgeObjectRetain();
    sub_18814(v34, v36, v13);
    swift_bridgeObjectRelease();
    v132[0] = v67;
    v132[1] = 0x4014000000000000;
    char v133 = 0;
    *(_DWORD *)long long v134 = v113[0];
    *(_DWORD *)&v134[3] = *(_DWORD *)((char *)v122 + 3);
    uint64_t v135 = v68;
    char v136 = 0;
    char v137 = 1;
    int v138 = v120;
    __int16 v139 = v121;
    uint64_t v140 = v66;
    char v141 = v119;
    *(_DWORD *)uint64_t v142 = v111[0];
    *(_DWORD *)&v142[3] = *(_DWORD *)((char *)v118 + 3);
    uint64_t v143 = v102;
    char v144 = BYTE8(v102);
    *(_DWORD *)&v145[3] = *(_DWORD *)((char *)v110 + 3);
    *(_DWORD *)uint64_t v145 = v116[0];
    long long v146 = v103;
    uint64_t v147 = v16;
    uint64_t v148 = v62;
    char v149 = v115;
    *(_DWORD *)&v150[3] = *(_DWORD *)((char *)v109 + 3);
    *(_DWORD *)uint64_t v150 = v114[0];
    uint64_t v151 = v61;
    int v152 = v63;
    sub_40CA4((uint64_t)v132);
    *(_OWORD *)&v100[16] = v87;
    *(_OWORD *)&v100[32] = v89;
    *(_OWORD *)&v100[48] = *(_OWORD *)v91;
    *(_OWORD *)&v100[64] = *(_OWORD *)&v91[16];
    long long v97 = v79;
    long long v98 = v81;
    long long v99 = v83;
    *(_OWORD *)uint64_t v100 = v85;
    *(void *)&v100[80] = v34;
    *(void *)&v100[88] = v36;
    v100[96] = v13;
    *(_DWORD *)&v100[100] = *(_DWORD *)((char *)v164 + 3);
    *(_DWORD *)&v100[97] = v164[0];
    *(void *)&v100[104] = v59;
    sub_40D04((uint64_t)&v97);
    sub_40A64((uint64_t)&v97, (uint64_t)&v101, &qword_123440);
    sub_10C7C(&qword_123448);
    sub_10C7C(&qword_123450);
    sub_40B8C(&qword_123458, &qword_123448);
    sub_40AC8();
    sub_E6610();
    sub_18814(v34, v36, v13);
    swift_bridgeObjectRelease();
    swift_release();
    sub_18814(v16, v62, v64);
    swift_bridgeObjectRelease();
    *(_OWORD *)&v104[80] = v161;
    *(_OWORD *)&v104[96] = v162;
    v104[112] = v163;
    *(_OWORD *)&v104[16] = v157;
    *(_OWORD *)&v104[32] = v158;
    *(_OWORD *)&v104[48] = v159;
    *(_OWORD *)&v104[64] = v160;
    long long v101 = v153;
    long long v102 = v154;
    long long v103 = v155;
    *(_OWORD *)uint64_t v104 = v156;
  }
  else
  {
    uint64_t v69 = sub_E6550();
    uint64_t v65 = sub_E6B00();
    sub_E6F30();
    sub_E62A0();
    sub_B7108(0xD000000000000016, (void *)0x80000000000F1BA0);
    uint64_t v39 = sub_E6920();
    uint64_t v41 = v40;
    char v43 = v42 & 1;
    sub_E6850();
    uint64_t v44 = sub_E6900();
    uint64_t v46 = v45;
    char v48 = v47;
    uint64_t v50 = v49;
    swift_release();
    sub_18814(v39, v41, v43);
    swift_bridgeObjectRelease();
    LOBYTE(v153) = 1;
    v78[0] = BYTE8(v101);
    LOBYTE(v132[0]) = BYTE8(v102);
    LOBYTE(v124) = v48 & 1;
    swift_retain();
    sub_18804(v44, v46, v48 & 1);
    swift_bridgeObjectRetain();
    sub_18814(v44, v46, v48 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    LOBYTE(v122[0]) = 0;
    LOBYTE(v118[0]) = BYTE8(v101);
    LOBYTE(v116[0]) = BYTE8(v102);
    LOBYTE(v114[0]) = v48 & 1;
    *(void *)&long long v97 = v69;
    *((void *)&v97 + 1) = 0x4014000000000000;
    LOBYTE(v98) = 0;
    *(_DWORD *)((char *)&v98 + 1) = *(_DWORD *)v78;
    DWORD1(v98) = *(_DWORD *)&v78[3];
    *((void *)&v98 + 1) = v65;
    LOWORD(v99) = 256;
    WORD3(v99) = *(_WORD *)&v130[4];
    *(_DWORD *)((char *)&v99 + 2) = *(_DWORD *)v130;
    *((void *)&v99 + 1) = v101;
    v100[0] = BYTE8(v101);
    *(_DWORD *)&v100[4] = *(_DWORD *)((char *)v132 + 3);
    *(_DWORD *)&v100[1] = v132[0];
    *(void *)&v100[8] = v102;
    v100[16] = BYTE8(v102);
    *(_DWORD *)&v100[20] = *(_DWORD *)((char *)&v124 + 3);
    *(_DWORD *)&v100[17] = v124;
    *(_OWORD *)&v100[24] = v103;
    *(void *)&v100[40] = v44;
    *(void *)&v100[48] = v46;
    v100[56] = v48 & 1;
    *(_DWORD *)&v100[60] = *(_DWORD *)((char *)v164 + 3);
    *(_DWORD *)&v100[57] = v164[0];
    *(void *)&v100[64] = v50;
    *(_DWORD *)&v100[72] = sub_E6720();
    sub_40A58((uint64_t)&v97);
    sub_40A64((uint64_t)&v97, (uint64_t)&v153, &qword_123440);
    sub_10C7C(&qword_123448);
    sub_10C7C(&qword_123450);
    sub_40B8C(&qword_123458, &qword_123448);
    sub_40AC8();
    sub_E6610();
  }
  *(_OWORD *)&v100[80] = *(_OWORD *)&v104[80];
  *(_OWORD *)&v100[96] = *(_OWORD *)&v104[96];
  *(_OWORD *)&v100[16] = *(_OWORD *)&v104[16];
  *(_OWORD *)&v100[32] = *(_OWORD *)&v104[32];
  *(_OWORD *)&v100[48] = *(_OWORD *)&v104[48];
  *(_OWORD *)&v100[64] = *(_OWORD *)&v104[64];
  long long v97 = v101;
  long long v98 = v102;
  long long v99 = v103;
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v104;
  long long v161 = *(_OWORD *)&v104[80];
  long long v162 = *(_OWORD *)&v104[96];
  long long v157 = *(_OWORD *)&v104[16];
  long long v158 = *(_OWORD *)&v104[32];
  long long v160 = *(_OWORD *)&v104[64];
  long long v159 = *(_OWORD *)&v104[48];
  long long v153 = v101;
  long long v154 = v102;
  long long v156 = *(_OWORD *)v104;
  long long v155 = v103;
  long long v94 = *(_OWORD *)&v104[80];
  long long v95 = *(_OWORD *)&v104[96];
  long long v88 = *(_OWORD *)&v104[16];
  long long v90 = *(_OWORD *)&v104[32];
  long long v92 = *(_OWORD *)&v104[48];
  long long v93 = *(_OWORD *)&v104[64];
  long long v80 = v101;
  long long v82 = v102;
  v100[112] = v104[112];
  char v163 = v104[112];
  LOBYTE(v132[0]) = v70 & 1;
  char v96 = v104[112];
  long long v84 = v103;
  long long v86 = *(_OWORD *)v104;
  sub_18804(v73, v71, v70 & 1);
  swift_bridgeObjectRetain();
  sub_40BD0((uint64_t)&v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_407FC);
  sub_40BD0((uint64_t)&v97, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_409A8);
  sub_18814(v73, v71, v70 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v132[0]) = v101;
  *(_DWORD *)((char *)v132 + 3) = *(_DWORD *)((char *)&v101 + 3);
  long long v161 = v94;
  long long v162 = v95;
  char v163 = v96;
  long long v157 = v88;
  long long v158 = v90;
  long long v160 = v93;
  long long v159 = v92;
  long long v153 = v80;
  long long v154 = v82;
  long long v156 = v86;
  long long v155 = v84;
  *(_DWORD *)((char *)&v98 + 1) = v80;
  DWORD1(v98) = *(_DWORD *)((char *)&v80 + 3);
  int v51 = v132[0];
  *(_DWORD *)((char *)&v99 + 9) = v132[0];
  HIDWORD(v99) = *(_DWORD *)((char *)&v101 + 3);
  v100[168] = v96;
  *(void *)&long long v97 = v74;
  *((void *)&v97 + 1) = 0x4010000000000000;
  LOBYTE(v98) = 0;
  *((void *)&v98 + 1) = v73;
  *(void *)&long long v99 = v71;
  BYTE8(v99) = v70 & 1;
  *(void *)uint64_t v100 = v72;
  *(_OWORD *)&v100[72] = v88;
  *(_OWORD *)&v100[56] = v86;
  *(_OWORD *)&v100[120] = v93;
  *(_OWORD *)&v100[136] = v94;
  *(_OWORD *)&v100[152] = v95;
  *(_OWORD *)&v100[88] = v90;
  *(_OWORD *)&v100[104] = v92;
  *(_OWORD *)&v100[8] = v80;
  *(_OWORD *)&v100[24] = v82;
  *(_OWORD *)&v100[40] = v84;
  long long v52 = *(_OWORD *)&v100[128];
  *(_OWORD *)(a2 + 184) = *(_OWORD *)&v100[112];
  *(_OWORD *)(a2 + 20sub_E59A4(2, 18, 1, 0) = v52;
  *(_OWORD *)(a2 + 216) = *(_OWORD *)&v100[144];
  *(_OWORD *)(a2 + 225) = *(_OWORD *)&v100[153];
  long long v53 = *(_OWORD *)&v100[64];
  *(_OWORD *)(a2 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)&v100[48];
  *(_OWORD *)(a2 + 136) = v53;
  long long v54 = *(_OWORD *)&v100[96];
  *(_OWORD *)(a2 + 152) = *(_OWORD *)&v100[80];
  *(_OWORD *)(a2 + 168) = v54;
  long long v55 = *(_OWORD *)v100;
  *(_OWORD *)(a2 + 56) = v99;
  *(_OWORD *)(a2 + 72) = v55;
  long long v56 = *(_OWORD *)&v100[32];
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v100[16];
  *(_OWORD *)(a2 + 104) = v56;
  long long v57 = v98;
  *(_OWORD *)(a2 + 24) = v97;
  *(_OWORD *)(a2 + 4sub_E59A4(2, 18, 1, 0) = v57;
  long long v105 = v93;
  long long v106 = v94;
  long long v107 = v95;
  *(_OWORD *)&v104[56] = v86;
  *(_OWORD *)&v104[72] = v88;
  *(_OWORD *)&v104[88] = v90;
  *(_OWORD *)&v104[104] = v92;
  *(_OWORD *)&v104[8] = v80;
  *(_OWORD *)&v104[24] = v82;
  *(void *)a2 = v76;
  *(void *)(a2 + 8) = v75;
  LOBYTE(v124) = 0;
  *(void *)(a2 + 16) = v77;
  *(void *)&long long v101 = v74;
  *((void *)&v101 + 1) = 0x4010000000000000;
  LOBYTE(v102) = 0;
  *(_DWORD *)((char *)&v102 + 1) = v80;
  DWORD1(v102) = *(_DWORD *)((char *)&v80 + 3);
  *((void *)&v102 + 1) = v73;
  *(void *)&long long v103 = v71;
  BYTE8(v103) = v70 & 1;
  *(_DWORD *)((char *)&v103 + 9) = v51;
  HIDWORD(v103) = *(_DWORD *)((char *)v132 + 3);
  *(void *)uint64_t v104 = v72;
  char v108 = v163;
  *(_OWORD *)&v104[40] = v84;
  id v58 = v76;
  swift_retain();
  sub_40708((uint64_t)&v97);
  sub_408B4((uint64_t)&v101);
  swift_release();
}

uint64_t sub_3E89C()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

id sub_3E8E8(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_3E964()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_3E9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_3EA38()
{
  return swift_retain();
}

uint64_t sub_3EA40@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  type metadata accessor for GCSPreferencesStore();
  sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  swift_retain();
  uint64_t result = sub_E63F0();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_3EAD4()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_3EB2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  type metadata accessor for GCSPreferencesStore();
  sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  swift_retain();
  uint64_t result = sub_E63F0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = 1;
  return result;
}

BOOL sub_3EBC0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_3EBD0(uint64_t a1, char a2)
{
}

Swift::Int sub_3EBF8(char a1)
{
  return sub_E76A0();
}

BOOL sub_3EC40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_3EC58()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

void sub_3ECA0()
{
  sub_E7680(*v0);
}

Swift::Int sub_3ECCC()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

id sub_3ED10(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_3ED8C()
{
  return sub_3C6B4((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_3EDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_3F9C8((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_3EE60()
{
  return swift_retain();
}

uint64_t sub_3EE68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t sub_3EE70@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_E6C40();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  long long v54 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_E6AD0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_E63B0();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (double *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10C7C(&qword_1233C8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10C7C(&qword_1233D0) - 8;
  __chkstk_darwin(v52);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10C7C(&qword_1233D8) - 8;
  __chkstk_darwin(v55);
  uint64_t v53 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = (char *)v12 + *(int *)(v10 + 28);
  uint64_t v21 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v22 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
  double v23 = 7.0;
  if ((a1 & 1) == 0) {
    double v23 = 5.5;
  }
  double *v12 = v23;
  v12[1] = v23;
  uint64_t v24 = 0x403E000000000000;
  if ((a1 & 1) == 0) {
    uint64_t v24 = 0x4038000000000000;
  }
  uint64_t v51 = v24;
  sub_10C7C(&qword_1233E0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_EB580;
  uint64_t v26 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v27(v8, enum case for Color.RGBColorSpace.sRGB(_:), v5);
  *(void *)(v25 + 32) = sub_E6C10();
  v27(v8, v26, v5);
  *(void *)(v25 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
  *(void *)&long long v62 = v25;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  sub_3FB7C((uint64_t)v12, (uint64_t)v16);
  char v28 = &v16[*(int *)(v14 + 60)];
  long long v29 = v60;
  *(_OWORD *)char v28 = v59;
  *((_OWORD *)v28 + 1) = v29;
  *((void *)v28 + 4) = v61;
  *(_WORD *)&v16[*(int *)(v14 + 64)] = 256;
  sub_39C10((uint64_t)v12);
  uint64_t v30 = sub_E6F30();
  uint64_t v32 = v31;
  sub_E6C30();
  uint64_t v34 = v56;
  uint64_t v33 = v57;
  uint64_t v35 = v54;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v54, enum case for Image.ResizingMode.stretch(_:), v57);
  uint64_t v36 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  uint64_t v37 = sub_E6BA0();
  LOBYTE(v35) = sub_E6770();
  sub_E6210();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_3FBE0((uint64_t)v16, (uint64_t)v18, &qword_1233C8);
  uint64_t v46 = &v18[*(int *)(v52 + 44)];
  *(void *)uint64_t v46 = v36;
  *((void *)v46 + 1) = 0;
  *((_WORD *)v46 + 8) = 1;
  *((void *)v46 + 3) = v37;
  v46[32] = (char)v35;
  *((void *)v46 + 5) = v39;
  *((void *)v46 + 6) = v41;
  *((void *)v46 + 7) = v43;
  *((void *)v46 + 8) = v45;
  v46[72] = 0;
  *((void *)v46 + 1sub_E59A4(2, 18, 1, 0) = v30;
  *((void *)v46 + 11) = v32;
  sub_3FC44((uint64_t)v16, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  uint64_t v47 = v53;
  sub_3FBE0((uint64_t)v18, v53, &qword_1233D0);
  char v48 = (_OWORD *)(v47 + *(int *)(v55 + 44));
  long long v49 = v63;
  *char v48 = v62;
  v48[1] = v49;
  v48[2] = v64;
  sub_3FC44((uint64_t)v18, &qword_1233D0);
  return sub_40A64(v47, v58, &qword_1233D8);
}

uint64_t sub_3F430@<X0>(uint64_t a1@<X8>)
{
  return sub_3EE70(*(unsigned char *)(v1 + 24), a1);
}

double sub_3F440@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_E65D0();
  uint64_t v5 = sub_E6560();
  sub_3DA7C(v3, (uint64_t)v14);
  *(_OWORD *)&v16[199] = v14[12];
  *(_OWORD *)&v16[215] = v14[13];
  *(_OWORD *)&v16[231] = v14[14];
  v16[247] = v15;
  *(_OWORD *)&v16[135] = v14[8];
  *(_OWORD *)&v16[151] = v14[9];
  *(_OWORD *)&v16[167] = v14[10];
  *(_OWORD *)&v16[183] = v14[11];
  *(_OWORD *)&v16[71] = v14[4];
  *(_OWORD *)&v16[87] = v14[5];
  *(_OWORD *)&v16[103] = v14[6];
  *(_OWORD *)&v16[119] = v14[7];
  *(_OWORD *)&v16[7] = v14[0];
  *(_OWORD *)&v16[23] = v14[1];
  *(_OWORD *)&v16[39] = v14[2];
  *(_OWORD *)&v16[55] = v14[3];
  long long v6 = *(_OWORD *)&v16[208];
  *(_OWORD *)(a1 + 233) = *(_OWORD *)&v16[192];
  *(_OWORD *)(a1 + 249) = v6;
  *(_OWORD *)(a1 + 265) = *(_OWORD *)&v16[224];
  long long v7 = *(_OWORD *)&v16[144];
  *(_OWORD *)(a1 + 169) = *(_OWORD *)&v16[128];
  *(_OWORD *)(a1 + 185) = v7;
  long long v8 = *(_OWORD *)&v16[176];
  *(_OWORD *)(a1 + 201) = *(_OWORD *)&v16[160];
  *(_OWORD *)(a1 + 217) = v8;
  long long v9 = *(_OWORD *)&v16[80];
  *(_OWORD *)(a1 + 105) = *(_OWORD *)&v16[64];
  *(_OWORD *)(a1 + 121) = v9;
  long long v10 = *(_OWORD *)&v16[112];
  *(_OWORD *)(a1 + 137) = *(_OWORD *)&v16[96];
  *(_OWORD *)(a1 + 153) = v10;
  long long v11 = *(_OWORD *)&v16[16];
  *(_OWORD *)(a1 + 41) = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 57) = v11;
  double result = *(double *)&v16[32];
  long long v13 = *(_OWORD *)&v16[48];
  *(_OWORD *)(a1 + 73) = *(_OWORD *)&v16[32];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 1;
  *(void *)(a1 + 281) = *(void *)&v16[240];
  *(_OWORD *)(a1 + 89) = v13;
  return result;
}

char *sub_3F588(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_123488);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_4(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    long long v10 = (char *)_swiftEmptyArrayStorage;
  }
  long long v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_3F68C(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_26:
    uint64_t v3 = sub_E7570();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    if (v3)
    {
LABEL_3:
      unint64_t v4 = 0;
      uint64_t v20 = v2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v21 = v2 & 0xC000000000000001;
      unint64_t v18 = v2;
      unint64_t v19 = v2 + 32;
      uint64_t v17 = v3;
      while (1)
      {
        if (v21)
        {
          uint64_t v5 = sub_E74E0();
          BOOL v6 = __OFADD__(v4++, 1);
          if (v6)
          {
LABEL_23:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (v4 >= *(void *)(v20 + 16))
          {
            __break(1u);
            goto LABEL_26;
          }
          uint64_t v5 = *(void *)(v19 + 8 * v4);
          swift_retain();
          BOOL v6 = __OFADD__(v4++, 1);
          if (v6) {
            goto LABEL_23;
          }
        }
        uint64_t v7 = *(void *)(*(void *)a2 + 16);
        if (v7)
        {
          double v23 = *(uint64_t (**)(uint64_t))(*(void *)v5 + 408);
          uint64_t v8 = swift_bridgeObjectRetain() + 40;
          while (1)
          {
            uint64_t v9 = swift_bridgeObjectRetain();
            uint64_t v10 = v23(v9);
            if (v11)
            {
              sub_187B0();
              uint64_t v12 = sub_E7400();
              uint64_t v10 = swift_bridgeObjectRelease();
              if (!v12) {
                break;
              }
            }
            long long v13 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 264))(v10);
            id v14 = [v13 identifier];

            if (v14)
            {
              sub_E7110();

              sub_187B0();
              uint64_t v15 = sub_E7400();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!v15)
              {
                swift_release();
                goto LABEL_20;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v8 += 16;
            if (!--v7)
            {
              swift_bridgeObjectRelease();
              uint64_t v3 = v17;
              unint64_t v2 = v18;
              goto LABEL_5;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          uint64_t v3 = v17;
          unint64_t v2 = v18;
        }
        else
        {
LABEL_5:
          sub_E7510();
          sub_E7540();
          sub_E7550();
          sub_E7520();
        }
        if (v4 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_3F974()
{
  unint64_t result = qword_1233A0;
  if (!qword_1233A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1233A0);
  }
  return result;
}

uint64_t sub_3F9C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3FA10()
{
  return sub_E6EC0();
}

unint64_t sub_3FB08()
{
  unint64_t result = qword_1233C0;
  if (!qword_1233C0)
  {
    sub_11B60(&qword_123388);
    sub_3F974();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1233C0);
  }
  return result;
}

uint64_t sub_3FB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_E63B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3FBE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3FC44(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_3FCA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3FCBC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_3FCDC()
{
  unint64_t result = qword_1233E8;
  if (!qword_1233E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1233E8);
  }
  return result;
}

uint64_t sub_3FD30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_3FD4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for GCSDeviceListView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSDeviceListView(id *a1)
{
  return swift_release();
}

void *initializeWithCopy for GCSDeviceListView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSDeviceListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GCSDeviceListView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_release();
  *(void *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDeviceListView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDeviceListView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDeviceListView()
{
  return &type metadata for GCSDeviceListView;
}

ValueMetadata *type metadata accessor for GCSDeviceListRowView()
{
  return &type metadata for GCSDeviceListRowView;
}

void *_s25GameControlleriOSSettings20GCSDeviceListRowViewV24GCSGamepadDeviceIconViewVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSDeviceListRowView.GCSGamepadDeviceIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GCSDeviceListRowView.GCSGamepadDeviceIconView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDeviceListRowView.GCSGamepadDeviceIconView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDeviceListRowView.GCSGamepadDeviceIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDeviceListRowView.GCSGamepadDeviceIconView()
{
  return &type metadata for GCSDeviceListRowView.GCSGamepadDeviceIconView;
}

uint64_t initializeWithCopy for GCSDeviceListRowView.GCSSingleDeviceIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSDeviceListRowView.GCSSingleDeviceIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GCSDeviceListRowView.GCSSingleDeviceIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSDeviceListRowView.GCSSingleDeviceIconView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSDeviceListRowView.GCSSingleDeviceIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSDeviceListRowView.GCSSingleDeviceIconView()
{
  return &type metadata for GCSDeviceListRowView.GCSSingleDeviceIconView;
}

unsigned char *initializeBufferWithCopyOfBuffer for GCSDeviceListRowView.GCSSingleDeviceIconView.Size(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GCSDeviceListRowView.GCSSingleDeviceIconView.Size(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GCSDeviceListRowView.GCSSingleDeviceIconView.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4043CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_40464(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_40470(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GCSDeviceListRowView.GCSSingleDeviceIconView.Size()
{
  return &type metadata for GCSDeviceListRowView.GCSSingleDeviceIconView.Size;
}

unint64_t sub_40490()
{
  unint64_t result = qword_1233F0;
  if (!qword_1233F0)
  {
    sub_11B60(&qword_1233F8);
    sub_40B8C(&qword_123390, &qword_123378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1233F0);
  }
  return result;
}

uint64_t sub_40530()
{
  return sub_40B8C(&qword_123400, &qword_123408);
}

unint64_t sub_40570()
{
  unint64_t result = qword_123410;
  if (!qword_123410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123410);
  }
  return result;
}

unint64_t sub_405C8()
{
  unint64_t result = qword_123418;
  if (!qword_123418)
  {
    sub_11B60(&qword_1233D8);
    sub_40644();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123418);
  }
  return result;
}

unint64_t sub_40644()
{
  unint64_t result = qword_123420;
  if (!qword_123420)
  {
    sub_11B60(&qword_1233D0);
    sub_40B8C(&qword_123428, &qword_1233C8);
    sub_40B8C(&qword_123430, &qword_123438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123420);
  }
  return result;
}

uint64_t sub_40708(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v14 = *(_OWORD *)(a1 + 136);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 168);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a1 + 208);
  char v9 = *(unsigned char *)(a1 + 216);
  sub_18804(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_407FC(v18, v17, v16, v2, v3, v4, v5, v6, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, SBYTE8(v13), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v7,
    v8,
    v9);
  return a1;
}

uint64_t sub_407FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21)
{
  swift_retain();
  sub_18804(a12, a13, a14 & 1);
  if ((a21 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_18804(a17, a18, a19 & 1);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_408B4(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v14 = *(_OWORD *)(a1 + 136);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 168);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a1 + 208);
  char v9 = *(unsigned char *)(a1 + 216);
  sub_18814(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_409A8(v18, v17, v16, v2, v3, v4, v5, v6, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, SBYTE8(v13), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v7,
    v8,
    v9);
  return a1;
}

uint64_t sub_409A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21)
{
  swift_release();
  sub_18814(a12, a13, a14 & 1);
  if ((a21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_18814(a17, a18, a19 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_40A58(uint64_t result)
{
  *(unsigned char *)(result + 16sub_E59A4(2, 18, 1, 0) = 1;
  return result;
}

uint64_t sub_40A64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_40AC8()
{
  unint64_t result = qword_123460;
  if (!qword_123460)
  {
    sub_11B60(&qword_123450);
    sub_40B8C(&qword_123468, &qword_123470);
    sub_40B8C(&qword_123478, &qword_123480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123460);
  }
  return result;
}

uint64_t sub_40B8C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_40BD0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 160);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    v4);
  return a1;
}

uint64_t sub_40C44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  swift_retain();
  sub_18804(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_40CA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  swift_release();
  sub_18814(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_40D04(uint64_t result)
{
  *(unsigned char *)(result + 16sub_E59A4(2, 18, 1, 0) = 0;
  return result;
}

uint64_t GCSCopilotFusedController.id.getter()
{
  id v1 = [v0 fusedControllerIdentifier];
  uint64_t v2 = sub_E7110();

  return v2;
}

void *sub_40D84()
{
  return &protocol witness table for String;
}

void sub_40D90(uint64_t *a1@<X8>)
{
  id v3 = [*v1 fusedControllerIdentifier];
  uint64_t v4 = sub_E7110();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void sub_40DE8()
{
  id v1 = (uint64_t (**)(void))(*(void *)v0 + 264);
  uint64_t v2 = *v1;
  id v3 = (void *)(*v1)();

  if (!v3) {
    uint64_t v4 = (*(uint64_t (**)(id))(*(void *)v0 + 272))([objc_allocWithZone((Class)CBController) init]);
  }
  uint64_t v5 = ((uint64_t (*)(uint64_t))v2)(v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v27 = sub_412A0;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = (uint64_t (*)())sub_2DC60;
    uint64_t v26 = &unk_1135C0;
    uint64_t v7 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v6 setBluetoothStateChangedHandler:v7];
    _Block_release(v7);
  }
  uint64_t v8 = v2();
  if (v8)
  {
    char v9 = (void *)v8;
    uint64_t v27 = sub_413EC;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = (uint64_t (*)())sub_2DC60;
    uint64_t v26 = &unk_1135E8;
    uint64_t v10 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v9 setDiscoverableStateChangedHandler:v10];
    _Block_release(v10);
  }
  uint64_t v11 = v2();
  if (v11)
  {
    long long v12 = (void *)v11;
    uint64_t v27 = sub_41580;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = (uint64_t (*)())sub_2DC60;
    uint64_t v26 = &unk_113610;
    long long v13 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v12 setInquiryStateChangedHandler:v13];
    _Block_release(v13);
  }
  uint64_t v14 = v2();
  if (v14)
  {
    long long v15 = (void *)v14;
    uint64_t v27 = sub_416C0;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_41788;
    uint64_t v26 = &unk_113638;
    uint64_t v16 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v15 getControllerInfoWithCompletion:v16];
    _Block_release(v16);
  }
  uint64_t v17 = v2();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v27 = sub_4178C;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_41854;
    uint64_t v26 = &unk_113660;
    unint64_t v19 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v18 getControllerSettingsWithCompletionHandler:v19];
    _Block_release(v19);
  }
  uint64_t v20 = v2();
  if (v20)
  {
    unint64_t v21 = (void *)v20;
    uint64_t v27 = sub_418E4;
    uint64_t v28 = v0;
    double v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = (uint64_t (*)())sub_419EC;
    uint64_t v26 = &unk_113688;
    uint64_t v22 = _Block_copy(&v23);
    swift_retain();
    swift_release();
    [v21 activateWithCompletion:v22];
    _Block_release(v22);
  }
}

uint64_t sub_412A0()
{
  id v1 = (uint64_t (**)(void))(*(void *)v0 + 264);
  uint64_t v2 = *v1;
  id v3 = (void *)(*v1)();
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = (char *)[v3 bluetoothState];

    LODWORD(v4) = v5 == (unsigned char *)&dword_4 + 1;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
  if (v4 != (result & 1))
  {
    uint64_t v7 = (void *)v2();
    if (v7)
    {
      uint64_t v8 = v7;
      [v7 bluetoothState];
    }
    char v9 = *(uint64_t (**)(void))(*(void *)v0 + 1024);
    return v9();
  }
  return result;
}

uint64_t sub_413D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t sub_413E4()
{
  return swift_release();
}

uint64_t sub_413EC()
{
  sub_10C7C(&qword_123490);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_EB580;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 32) = 0xD00000000000002BLL;
  *(void *)(v1 + 4sub_E59A4(2, 18, 1, 0) = 0x80000000000F1E30;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v0 + 264);
  id v3 = (void *)v2();
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = [v3 discoverableState];

    long long v13 = &type metadata for Int32;
    LODWORD(v12) = v5;
    sub_428D8(&v12, (_OWORD *)(v1 + 64));
  }
  else
  {
    *(void *)(v1 + 88) = &type metadata for String;
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0xE000000000000000;
  }
  sub_E7660();
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v7 = (void *)((uint64_t (*)(uint64_t))v2)(v6);
  if (v7 && (uint64_t v8 = v7, v9 = [v7 discoverableState], v8, v9 == 2)) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 592))(v10);
}

void *sub_41580()
{
  uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result inquiryState];

    (*(void (**)(id))(*(void *)v0 + 640))(v3);
    sub_10C7C(&qword_123490);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_EB580;
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 32) = 0xD000000000000026;
    *(void *)(v4 + 4sub_E59A4(2, 18, 1, 0) = 0x80000000000F1E00;
    *(void *)(v4 + 88) = &type metadata for Int32;
    *(_DWORD *)(v4 + 64) = v3;
    sub_E7660();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_416C0(void *a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(void *)v2 + 1176))(0xD000000000000020, 0x80000000000F1DD0, a2);
  if ((result & 1) == 0)
  {
    uint64_t v6 = *(uint64_t (**)(void *))(*(void *)v2 + 320);
    id v5 = a1;
    return v6(a1);
  }
  return result;
}

uint64_t sub_4178C(void *a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(void *)v2 + 1176))(0xD00000000000002BLL, 0x80000000000F1DA0, a2);
  if ((result & 1) == 0)
  {
    uint64_t v6 = *(uint64_t (**)(void *))(*(void *)v2 + 344);
    id v5 = a1;
    return v6(a1);
  }
  return result;
}

void sub_41858(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_418E4(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(void *)v1 + 1176))(0xD000000000000013, 0x80000000000F1D80, a1);
  if ((result & 1) == 0)
  {
    id v3 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 264))();
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 bluetoothState];
    }
    id v5 = *(uint64_t (**)(void))(*(void *)v1 + 1024);
    return v5();
  }
  return result;
}

void sub_419EC(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_41A58()
{
  id v6 = (id)(*(uint64_t (**)(void))(*(void *)v0 + 336))();
  if (v6)
  {
    if ((*(uint64_t (**)(void))(*(void *)v0 + 1064))()) {
      uint64_t v1 = 1;
    }
    else {
      uint64_t v1 = 2;
    }
    if ((*(uint64_t (**)(id))(*(void *)v0 + 1112))([v6 setSetupAssistantIfNoKeyboard:v1])) {
      uint64_t v2 = 1;
    }
    else {
      uint64_t v2 = 2;
    }
    uint64_t v3 = (*(uint64_t (**)(id))(*(void *)v0 + 264))([v6 setSetupAssistantIfNoPointingDevice:v2]);
    if (v3)
    {
      id v4 = (void *)v3;
      aBlock[4] = sub_41C5C;
      aBlock[5] = v0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_419EC;
      aBlock[3] = &unk_1136B0;
      id v5 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v4 modifyControllerSettings:v6 completionHandler:v5];

      _Block_release(v5);
    }
    else
    {
    }
  }
}

uint64_t sub_41C5C(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(void *)v1 + 1176))(0xD000000000000039, 0x80000000000F1D40, a1);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(*(void *)v1 + 440);
    return v3(0);
  }
  return result;
}

void sub_41D00(uint64_t a1)
{
  uint64_t v3 = (uint64_t (**)(void))(*(void *)v1 + 264);
  id v4 = *v3;
  id v5 = (void *)(*v3)();
  if (!v5 || (id v6 = v5, v7 = [v5 discoverableState], v6, v7 != a1))
  {
    uint64_t v8 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 336))();
    if (v8)
    {
      id v12 = v8;
      uint64_t v9 = ((uint64_t (*)(id))v4)([v8 setDiscoverableState:a1]);
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        aBlock[4] = sub_42588;
        aBlock[5] = v1;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_419EC;
        aBlock[3] = &unk_1136D8;
        uint64_t v11 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v10 modifyControllerSettings:v12 completionHandler:v11];

        _Block_release(v11);
      }
      else
      {
      }
    }
  }
}

void sub_41EB0(uint64_t a1)
{
  uint64_t v2 = v1;
  id v10 = [objc_allocWithZone((Class)CBDeviceSettings) init];
  NSString v4 = sub_E70D0();
  [v10 setName:v4];

  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 264))();
  if (v5)
  {
    id v6 = (void *)v5;
    unsigned int v7 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 264))();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = a1;
    aBlock[4] = sub_425A8;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_419EC;
    aBlock[3] = &unk_113738;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v6 modifyDevice:v7 settings:v10 completion:v9];

    _Block_release(v9);
  }
  else
  {
  }
}

void sub_420A8(uint64_t a1)
{
  uint64_t v2 = v1;
  id v10 = [objc_allocWithZone((Class)CBDeviceSettings) init];
  id v4 = [v10 setSmartRoutingMode:(*(char (**)(void))(*(void *)a1 + 568))()];
  uint64_t v5 = (*(uint64_t (**)(id))(*(void *)v1 + 264))(v4);
  if (v5)
  {
    id v6 = (void *)v5;
    unsigned int v7 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 264))();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = a1;
    aBlock[4] = sub_425C8;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_419EC;
    aBlock[3] = &unk_113788;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v6 modifyDevice:v7 settings:v10 completion:v9];

    _Block_release(v9);
  }
  else
  {
  }
}

void sub_422C0(int a1)
{
  if (a1) {
    uint64_t v3 = 5;
  }
  else {
    uint64_t v3 = 4;
  }
  id v4 = (uint64_t (**)(void))(*v1 + 264);
  uint64_t v5 = *v4;
  id v6 = (void *)(*v4)();
  if (v6)
  {
    unsigned int v7 = v6;
    uint64_t v8 = (char *)[v6 bluetoothState];

    if (((v8 != (unsigned char *)&dword_4 + 1) ^ a1)) {
      return;
    }
    if ((a1 & 1) == 0) {
      sub_DA30C();
    }
  }
  else if ((a1 & 1) == 0)
  {
    return;
  }
  uint64_t v9 = v5();
  if (v9)
  {
    id v10 = (void *)v9;
    v12[4] = sub_42764;
    v12[5] = v1;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_419EC;
    unint64_t v12[3] = &unk_1137B0;
    uint64_t v11 = _Block_copy(v12);
    swift_retain();
    swift_release();
    [v10 setPowerState:v3 completion:v11];
    _Block_release(v11);
  }
}

void sub_42424(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 264))();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 264))();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = a1;
    _OWORD v9[4] = sub_42800;
    v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    void v9[2] = sub_419EC;
    v9[3] = &unk_113800;
    uint64_t v8 = _Block_copy(v9);
    swift_retain();
    swift_retain();
    swift_release();
    [v5 deleteDevice:v6 completion:v8];
    _Block_release(v8);
  }
}

uint64_t sub_42588(uint64_t a1)
{
  return sub_42780(a1, 0xD000000000000038, 0x80000000000F1D00);
}

uint64_t sub_425A8(uint64_t a1)
{
  return sub_4281C(a1, 0xD00000000000001FLL, 0x80000000000F1CE0);
}

uint64_t sub_425C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(**(void **)(v1 + 16) + 1176))(0xD00000000000002DLL, 0x80000000000F1C90, a1);
  if ((result & 1) == 0)
  {
    sub_10C7C(&qword_123490);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_ECEF0;
    *(void *)(v4 + 32) = (*(uint64_t (**)(void))(*(void *)v2 + 360))();
    *(void *)(v4 + 4sub_E59A4(2, 18, 1, 0) = v5;
    *(void *)(v4 + 88) = &type metadata for String;
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = 0xD000000000000019;
    *(void *)(v4 + 72) = 0x80000000000F1CC0;
    char v6 = (*(uint64_t (**)(void))(*(void *)v2 + 568))();
    sub_428B4(v6);
    uint64_t v7 = sub_E71C0();
    *(void *)(v4 + 12sub_E59A4(2, 18, 1, 0) = &type metadata for String;
    *(void *)(v4 + 96) = v7;
    *(void *)(v4 + 104) = v8;
    sub_E7660();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_42764(uint64_t a1)
{
  return sub_42780(a1, 0xD000000000000018, 0x80000000000F1C70);
}

uint64_t sub_42780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 1176))(a2, a3, a1);
}

uint64_t sub_427C0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_42800(uint64_t a1)
{
  return sub_4281C(a1, 0xD000000000000012, 0x80000000000F1C50);
}

uint64_t sub_4281C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(void **)(v3 + 16) + 1176))(a2, a3, a1);
  if ((result & 1) == 0) {
    return (*(uint64_t (**)(void))(*(void *)v4 + 960))(0);
  }
  return result;
}

const char *sub_428B4(unsigned int a1)
{
  if (a1 > 2) {
    return "?";
  }
  else {
    return off_113830[a1];
  }
}

_OWORD *sub_428D8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_42940()
{
  sub_10C7C(&qword_122BB0);

  return sub_E6DE0();
}

uint64_t sub_42980(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  sub_2E4C8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_2E52C(a1);
}

void (*sub_42A1C(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  sub_279A8(v1, (uint64_t)v5);
  sub_E6DE0();
  return sub_42AF4;
}

void sub_42AF4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_2E4C8((uint64_t)v4, (uint64_t)v3);
    sub_E6DF0();
    sub_42B84((uint64_t)v2);
    sub_2E52C((uint64_t)v4);
  }
  else
  {
    sub_E6DF0();
    sub_42B84((uint64_t)v2);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_42B84(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_42BE4()
{
  sub_10C7C(&qword_122BB0);

  return sub_E6E10();
}

__n128 sub_42C24@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileLightView();
  sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  __n128 result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(__n128 *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v7;
  return result;
}

uint64_t type metadata accessor for GCSProfileLightView()
{
  uint64_t result = qword_127270;
  if (!qword_127270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_42D00()
{
  return sub_E6DF0();
}

void (*sub_42D94(void *a1))(char **a1, char a2)
{
  long long v3 = malloc(0x148uLL);
  *a1 = v3;
  long long v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GCSProfileLightView() + 20));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[29] = *v4;
  v3[30] = v6;
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  v3[31] = v7;
  v3[32] = v8;
  uint64_t v10 = v4[4];
  uint64_t v9 = v4[5];
  v3[33] = v10;
  v3[34] = v9;
  uint64_t v12 = v4[6];
  uint64_t v11 = v4[7];
  v3[35] = v12;
  v3[36] = v11;
  uint64_t v14 = v4[8];
  uint64_t v13 = v4[9];
  v3[37] = v14;
  v3[38] = v13;
  uint64_t v15 = v4[10];
  v3[39] = v15;
  *long long v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v10;
  v3[5] = v9;
  v3[6] = v12;
  v3[7] = v11;
  v3[8] = v14;
  v3[9] = v13;
  v3[10] = v15;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v3[40] = sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  return sub_42E9C;
}

void sub_42E9C(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 13);
  uint64_t v4 = *((void *)v2 + 14);
  uint64_t v6 = *((void *)v2 + 15);
  uint64_t v5 = *((void *)v2 + 16);
  uint64_t v8 = *((void *)v2 + 17);
  uint64_t v7 = *((void *)v2 + 18);
  uint64_t v9 = *((void *)v2 + 19);
  uint64_t v10 = *((void *)v2 + 39);
  uint64_t v12 = *((void *)v2 + 37);
  uint64_t v11 = *((void *)v2 + 38);
  uint64_t v14 = *((void *)v2 + 35);
  uint64_t v13 = *((void *)v2 + 36);
  uint64_t v16 = *((void *)v2 + 33);
  uint64_t v15 = *((void *)v2 + 34);
  uint64_t v18 = *((void *)v2 + 29);
  uint64_t v17 = *((void *)v2 + 30);
  *((_OWORD *)v2 + 1sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(v2 + 88);
  *(void *)uint64_t v2 = v18;
  *((void *)v2 + 1) = v17;
  *((_OWORD *)v2 + 1) = *(_OWORD *)(v2 + 248);
  *((void *)v2 + 4) = v16;
  *((void *)v2 + 5) = v15;
  *((void *)v2 + 6) = v14;
  *((void *)v2 + 7) = v13;
  *((void *)v2 + 8) = v12;
  *((void *)v2 + 9) = v11;
  *((void *)v2 + 1sub_E59A4(2, 18, 1, 0) = v10;
  *((void *)v2 + 22) = v3;
  *((void *)v2 + 23) = v4;
  *((void *)v2 + 24) = v6;
  *((void *)v2 + 25) = v5;
  *((void *)v2 + 26) = v8;
  *((void *)v2 + 27) = v7;
  *((void *)v2 + 28) = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_E6DF0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  free(v2);
}

__n128 sub_43028@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileLightView();
  sub_10C7C(&qword_1230C0);
  sub_E6E10();
  __n128 result = v7;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(__n128 *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v9;
  return result;
}

uint64_t sub_430C8()
{
  return sub_E6EE0();
}

__n128 sub_43124@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for GCSProfileLightView() + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  __n128 v5 = *(__n128 *)(v3 + 48);
  long long v6 = *(_OWORD *)(v3 + 64);
  uint64_t v7 = *(void *)(v3 + 80);
  *(void *)&long long v12 = *(void *)v3;
  *((void *)&v12 + 1) = v4;
  long long v8 = *(_OWORD *)(v3 + 32);
  long long v13 = *(_OWORD *)(v3 + 16);
  long long v14 = v8;
  __n128 v15 = v5;
  long long v16 = v6;
  *(void *)&long long v17 = v7;
  sub_10C7C(&qword_1230C0);
  sub_E6E10();
  sub_379BC(v19, (uint64_t)&v12);
  long long v9 = v17;
  *(_OWORD *)(a2 + 64) = v16;
  *(_OWORD *)(a2 + 8sub_E59A4(2, 18, 1, 0) = v9;
  *(void *)(a2 + 96) = v18;
  long long v10 = v13;
  *(_OWORD *)a2 = v12;
  *(_OWORD *)(a2 + 16) = v10;
  __n128 result = v15;
  *(_OWORD *)(a2 + 32) = v14;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

double sub_431CC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_43124(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_431D4()
{
  unint64_t result = qword_123498;
  if (!qword_123498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123498);
  }
  return result;
}

__n128 sub_43228@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2FBC4(a1, a3);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for GCSProfileLightView() + 20);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 48) = v6;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(v5 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v8;
  return result;
}

uint64_t sub_43284()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_432A8()
{
  return sub_E69D0();
}

uint64_t sub_432C4()
{
  return sub_E6EE0();
}

uint64_t *sub_43320(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    long long v9 = (char *)v7 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_E6050();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    long long v12 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v13 = v12[5];
    long long v14 = &v9[v13];
    __n128 v15 = &v10[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)long long v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[6];
    uint64_t v18 = &v9[v17];
    unint64_t v19 = &v10[v17];
    uint64_t v36 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v36;
    uint64_t v20 = v12[7];
    unint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)unint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v9[v12[8]] = v10[v12[8]];
    v9[v12[9]] = v10[v12[9]];
    uint64_t v24 = v12[10];
    uint64_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
    v9[v12[12]] = v10[v12[12]];
    *(void *)&v9[v12[13]] = *(void *)&v10[v12[13]];
    *(void *)&v9[v12[14]] = *(void *)&v10[v12[14]];
    *(void *)&v9[v12[15]] = *(void *)&v10[v12[15]];
    v9[v12[16]] = v10[v12[16]];
    v9[v12[17]] = v10[v12[17]];
    *(void *)&v9[v12[18]] = *(void *)&v10[v12[18]];
    uint64_t v28 = *(int *)(a3 + 20);
    long long v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)long long v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    *((_OWORD *)v29 + 1) = *((_OWORD *)v30 + 1);
    uint64_t v32 = *((void *)v30 + 5);
    *((void *)v29 + 4) = *((void *)v30 + 4);
    *((void *)v29 + 5) = v32;
    uint64_t v33 = *((void *)v30 + 7);
    *((void *)v29 + 6) = *((void *)v30 + 6);
    *((void *)v29 + 7) = v33;
    uint64_t v34 = *((void *)v30 + 9);
    *((void *)v29 + 8) = *((void *)v30 + 8);
    *((void *)v29 + 9) = v34;
    *((void *)v29 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v30 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_43594(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v3 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_436B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  long long v14 = &v9[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = v11[6];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v35 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v35;
  uint64_t v19 = v11[7];
  uint64_t v20 = &v8[v19];
  unint64_t v21 = &v9[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  uint64_t v23 = v11[10];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  v8[v11[12]] = v9[v11[12]];
  *(void *)&v8[v11[13]] = *(void *)&v9[v11[13]];
  *(void *)&v8[v11[14]] = *(void *)&v9[v11[14]];
  *(void *)&v8[v11[15]] = *(void *)&v9[v11[15]];
  v8[v11[16]] = v9[v11[16]];
  v8[v11[17]] = v9[v11[17]];
  *(void *)&v8[v11[18]] = *(void *)&v9[v11[18]];
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (char *)a1 + v27;
  long long v29 = (char *)a2 + v27;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
  uint64_t v31 = *((void *)v29 + 5);
  *((void *)v28 + 4) = *((void *)v29 + 4);
  *((void *)v28 + 5) = v31;
  uint64_t v32 = *((void *)v29 + 7);
  *((void *)v28 + 6) = *((void *)v29 + 6);
  *((void *)v28 + 7) = v32;
  uint64_t v33 = *((void *)v29 + 9);
  *((void *)v28 + 8) = *((void *)v29 + 8);
  *((void *)v28 + 9) = v33;
  *((void *)v28 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v29 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_438DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v10[7];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[8]] = v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  uint64_t v20 = v10[10];
  unint64_t v21 = &v7[v20];
  uint64_t v22 = &v8[v20];
  *(void *)unint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[12]] = v8[v10[12]];
  *(void *)&v7[v10[13]] = *(void *)&v8[v10[13]];
  *(void *)&v7[v10[14]] = *(void *)&v8[v10[14]];
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  v7[v10[16]] = v8[v10[16]];
  v7[v10[17]] = v8[v10[17]];
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  swift_retain();
  swift_release();
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  v24[2] = v25[2];
  _OWORD v24[3] = v25[3];
  v24[4] = v25[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[5] = v25[5];
  v24[6] = v25[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[7] = v25[7];
  v24[8] = v25[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[9] = v25[9];
  v24[10] = v25[10];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_43BAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
  *(_OWORD *)&v8[v11[7]] = *(_OWORD *)&v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  *(_OWORD *)&v8[v11[10]] = *(_OWORD *)&v9[v11[10]];
  *(void *)&v8[v11[11]] = *(void *)&v9[v11[11]];
  v8[v11[12]] = v9[v11[12]];
  *(void *)&v8[v11[13]] = *(void *)&v9[v11[13]];
  *(void *)&v8[v11[14]] = *(void *)&v9[v11[14]];
  *(void *)&v8[v11[15]] = *(void *)&v9[v11[15]];
  v8[v11[16]] = v9[v11[16]];
  v8[v11[17]] = v9[v11[17]];
  *(void *)&v8[v11[18]] = *(void *)&v9[v11[18]];
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((void *)v13 + 1sub_E59A4(2, 18, 1, 0) = *((void *)v14 + 10);
  long long v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  return a1;
}

void *sub_43D20(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v10[7];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v7[v10[8]] = v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  uint64_t v26 = v10[10];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  *(void *)&v7[v10[11]] = *(void *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  v7[v10[12]] = v8[v10[12]];
  *(void *)&v7[v10[13]] = *(void *)&v8[v10[13]];
  *(void *)&v7[v10[14]] = *(void *)&v8[v10[14]];
  *(void *)&v7[v10[15]] = *(void *)&v8[v10[15]];
  v7[v10[16]] = v8[v10[16]];
  v7[v10[17]] = v8[v10[17]];
  *(void *)&v7[v10[18]] = *(void *)&v8[v10[18]];
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *(void *)((char *)a1 + v31) = *(void *)v33;
  swift_release();
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_release();
  *((_OWORD *)v32 + 1) = *((_OWORD *)v33 + 1);
  *((void *)v32 + 4) = *((void *)v33 + 4);
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v33 + 6);
  *((void *)v32 + 5) = *((void *)v33 + 5);
  *((void *)v32 + 6) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v33 + 8);
  *((void *)v32 + 7) = *((void *)v33 + 7);
  *((void *)v32 + 8) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *((void *)v33 + 10);
  *((void *)v32 + 9) = *((void *)v33 + 9);
  *((void *)v32 + 1sub_E59A4(2, 18, 1, 0) = v36;
  swift_release();
  return a1;
}

uint64_t sub_43F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_43F54);
}

uint64_t sub_43F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10C7C(&qword_122BB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_E59A4(2, 18, 1, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_4401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_44030);
}

uint64_t sub_44030(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10C7C(&qword_122BB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_440F4()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_4418C()
{
  unint64_t result = qword_123520;
  if (!qword_123520)
  {
    sub_11B60(&qword_123528);
    sub_431D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123520);
  }
  return result;
}

uint64_t sub_44210()
{
  uint64_t v0 = type metadata accessor for GCSEntryView();
  __chkstk_darwin(v0 - 8);
  sub_523CC((uint64_t)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v2 = objc_allocWithZone((Class)sub_10C7C(&qword_123530));
  return sub_E6600();
}

id sub_44330()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id sub_44364()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUIViewFactory();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SwiftUIViewFactory()
{
  return self;
}

id sub_443FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUIViewFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_44430(void *a1, void *a2)
{
  uint64_t v28 = sub_E5FE0();
  uint64_t v4 = *(void *)(v28 - 8);
  uint64_t v5 = __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  id v10 = [a1 bundleIdentifier];
  uint64_t v11 = sub_E7110();
  uint64_t v13 = v12;

  id v14 = [a2 bundleIdentifier];
  uint64_t v15 = sub_E7110();
  uint64_t v17 = v16;

  if (v11 == v15 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v20 = 0;
    if ((v19 & 1) == 0) {
      return v20 & 1;
    }
  }
  id v21 = [a1 modifiedDate];
  sub_E5FC0();

  id v22 = [a2 modifiedDate];
  sub_E5FC0();

  char v20 = sub_E5FB0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v24 = v7;
  uint64_t v25 = v28;
  v23(v24, v28);
  v23(v9, v25);
  return v20 & 1;
}

uint64_t GCSGame.id.getter()
{
  id v1 = [v0 bundleIdentifier];
  uint64_t v2 = sub_E7110();

  return v2;
}

uint64_t sub_446A0(void *a1, void *a2)
{
  uint64_t v5 = sub_10C7C(&qword_123560);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_E6050();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = [v2 controllerToProfileMappings];
  uint64_t v13 = sub_E7050();

  id v14 = [a1 persistentIdentifier];
  uint64_t v15 = sub_E7110();
  uint64_t v17 = v16;

  if (*(void *)(v13 + 16) && (unint64_t v18 = sub_21CB8(v15, v17), (v19 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(v13 + 56) + *(void *)(v9 + 72) * v18, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v20 = sub_461B8((uint64_t)v7, &qword_123560);
    return (*(uint64_t (**)(uint64_t))((char *)&stru_1F8.reloff + (swift_isaMask & *a2)))(v20);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v22 = [a2 profiles];
  sub_2C518();
  unint64_t v23 = sub_E7210();

  __chkstk_darwin(v24);
  *(void *)&v30[-16] = v11;
  unint64_t v25 = (unint64_t)sub_44AA0(sub_46368, &v30[-32], v23);
  unint64_t v26 = v25;
  if (!(v25 >> 62))
  {
    uint64_t result = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
    if (result) {
      goto LABEL_9;
    }
LABEL_14:
    uint64_t v29 = swift_bridgeObjectRelease();
    uint64_t v21 = (*(uint64_t (**)(uint64_t))((char *)&stru_1F8.reloff + (swift_isaMask & *a2)))(v29);
    goto LABEL_15;
  }
  uint64_t result = sub_E7570();
  if (!result) {
    goto LABEL_14;
  }
LABEL_9:
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v28 = (id)sub_E74E0();
    goto LABEL_12;
  }
  if (*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
  {
    id v28 = *(id *)(v26 + 32);
LABEL_12:
    uint64_t v21 = (uint64_t)v28;
    swift_bridgeObjectRelease();
LABEL_15:
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    return v21;
  }
  __break(1u);
  return result;
}

void *sub_44AA0(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  char v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)sub_E74E0();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        id v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_E7510();
          sub_E7540();
          unint64_t v4 = v15;
          sub_E7550();
          sub_E7520();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          id v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_E7570();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  id v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

BOOL sub_44CC0(void *a1, void *a2)
{
  uint64_t v5 = sub_10C7C(&qword_123560);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_E6050();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = [v2 controllerToProfileMappings];
  uint64_t v13 = sub_E7050();

  id v14 = [a1 persistentIdentifier];
  uint64_t v15 = sub_E7110();
  uint64_t v17 = v16;

  if (*(void *)(v13 + 16) && (unint64_t v18 = sub_21CB8(v15, v17), (v19 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(v13 + 56) + *(void *)(v9 + 72) * v18, v8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_461B8((uint64_t)v7, &qword_123560);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
    id v21 = [a2 profiles];
    sub_2C518();
    unint64_t v22 = sub_E7210();

    __chkstk_darwin(v23);
    *(void *)&v29[-16] = v11;
    unint64_t v24 = (unint64_t)sub_44AA0(sub_460C8, &v29[-32], v22);
    unint64_t v25 = v24;
    if (v24 >> 62) {
      goto LABEL_13;
    }
    for (uint64_t i = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8)); ; uint64_t i = sub_E7570())
    {
      BOOL v20 = i != 0;
      if (!i) {
        break;
      }
      if ((v25 & 0xC000000000000001) != 0)
      {
        sub_E74E0();
        swift_unknownObjectRelease();
        break;
      }
      uint64_t v27 = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_16;
      }
      __break(1u);
LABEL_13:
      ;
    }
    swift_bridgeObjectRelease();
LABEL_16:
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v20;
}

uint64_t sub_45028(id *a1)
{
  uint64_t v2 = sub_E6050();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uuid];
  sub_E6030();

  char v7 = sub_E6020();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_45278()
{
  id v1 = [v0 bundleIdentifier];
  uint64_t v2 = sub_E7110();
  uint64_t v4 = v3;

  id v5 = [self defaultIdentifier];
  uint64_t v6 = sub_E7110();
  uint64_t v8 = v7;

  if (v2 == v6 && v4 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 0;
  }
  else
  {
    char v10 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_45358()
{
  sub_10C7C(&qword_124D90);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_ECFE0;
  *(void *)(v0 + 32) = [(id)swift_getObjCClassFromMetadata() defaultGame];
  sub_45500((uint64_t)_swiftEmptyArrayStorage);
  sub_456F8((uint64_t)_swiftEmptyArrayStorage);
  id v1 = objc_allocWithZone((Class)GCSGame);
  NSString v2 = sub_E70D0();
  NSString v3 = sub_E70D0();
  sub_E6050();
  Class isa = sub_E7040().super.isa;
  swift_bridgeObjectRelease();
  type metadata accessor for GCSCompatibilityMode();
  Class v5 = sub_E7040().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v1 initWithBundleIdentifier:v2 title:v3 controllerToProfileMappings:isa controllerToCompatibilityModeMappings:v5];

  *(void *)(v0 + 4sub_E59A4(2, 18, 1, 0) = v6;
  sub_E7230();
  return v0;
}

unint64_t sub_45500(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_123580);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Class v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_123588);
  uint64_t v6 = sub_E75A0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_46300(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_21CB8(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v19 = (uint64_t *)(v7[6] + 16 * result);
    *char v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_E6050();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_456F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_125040);
  uint64_t v2 = (void *)sub_E75A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_21CB8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_4587C()
{
  id v1 = v0;
  id v2 = [v0 bundleIdentifier];
  uint64_t v3 = sub_E7110();
  uint64_t v5 = v4;

  id v6 = [self defaultIdentifier];
  uint64_t v7 = sub_E7110();
  uint64_t v9 = v8;

  if (v3 == v7 && v5 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_beginAccess();
      id v12 = objc_getAssociatedObject(v1, &unk_127280);
      swift_endAccess();
      if (v12)
      {
        sub_E7440();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v26, 0, sizeof(v26));
      }
      sub_46150((uint64_t)v26, (uint64_t)v27);
      if (v28)
      {
        if (swift_dynamicCast()) {
          return v25;
        }
      }
      else
      {
        sub_461B8((uint64_t)v27, &qword_125300);
      }
      id v15 = [v1 title];
      sub_E7110();

      id v16 = [v1 bundleIdentifier];
      uint64_t v17 = sub_E7110();
      uint64_t v19 = v18;

      id v20 = objc_allocWithZone((Class)LSApplicationRecord);
      id v21 = sub_45BDC(v17, v19, 0);
      swift_bridgeObjectRelease();
      sub_E6060();
      Class isa = sub_E7200().super.isa;
      swift_bridgeObjectRelease();
      id v23 = [v21 localizedNameWithPreferredLocalizations:isa];

      uint64_t v13 = sub_E7110();
      NSString v24 = sub_E70D0();
      swift_beginAccess();
      objc_setAssociatedObject(v1, &unk_127280, v24, &stru_2E8.segname[9]);
      swift_endAccess();

      return v13;
    }
  }
  return sub_B7108(0xD000000000000010, (void *)0x80000000000F1EE0);
}

void sub_45B84(uint64_t *a1@<X8>)
{
  id v3 = [*v1 bundleIdentifier];
  uint64_t v4 = sub_E7110();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

id sub_45BDC(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_E70D0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_E5F00();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_45CB8(uint64_t a1, uint64_t a2)
{
  return sub_45F30(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_45CD0(uint64_t a1, id *a2)
{
  uint64_t result = sub_E70F0();
  *a2 = 0;
  return result;
}

uint64_t sub_45D48(uint64_t a1, id *a2)
{
  char v3 = sub_E7100();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_45DC8@<X0>(void *a1@<X8>)
{
  sub_E7110();
  NSString v2 = sub_E70D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_45E0C@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_E70D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_45E54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_E7110();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_45E80(uint64_t a1)
{
  uint64_t v2 = sub_462BC((unint64_t *)&unk_1250B0);
  uint64_t v3 = sub_462BC(&qword_123578);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_45F18(uint64_t a1, uint64_t a2)
{
  return sub_45F30(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_45F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_E7110();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_45F74()
{
  sub_E7110();
  sub_E7170();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_45FC8()
{
  sub_E7110();
  sub_E7670();
  sub_E7170();
  Swift::Int v0 = sub_E76A0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_4603C()
{
  uint64_t v0 = sub_E7110();
  uint64_t v2 = v1;
  if (v0 == sub_E7110() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_E7620();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_460C8(id *a1)
{
  return sub_45028(a1) & 1;
}

void type metadata accessor for GCSCompatibilityMode()
{
  if (!qword_125090)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_125090);
    }
  }
}

uint64_t sub_46150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_125300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_461B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_46214()
{
  return &protocol witness table for String;
}

uint64_t sub_46220()
{
  return sub_462BC(&qword_123568);
}

uint64_t sub_46254()
{
  return sub_462BC((unint64_t *)&unk_1250A0);
}

uint64_t sub_46288()
{
  return sub_462BC(&qword_123570);
}

uint64_t sub_462BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for GCSCompatibilityMode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_46300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_123580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_46368(id *a1)
{
  return sub_460C8(a1) & 1;
}

id sub_46384()
{
  return *v0;
}

id sub_4638C()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (v1)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_46418()
{
  return sub_47AD0((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_46460()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_464E8()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_46538()
{
  return sub_E6DF0();
}

void (*sub_4658C(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  v3[4] = v4;
  v3[5] = v5;
  char v6 = *(unsigned char *)(v1 + 40);
  *((unsigned char *)v3 + 19) = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_46630;
}

void sub_46630(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)a1 + 24;
  char v3 = *(unsigned char *)(*(void *)a1 + 18);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  char v5 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 32);
  v1[1] = v4;
  *((unsigned char *)v1 + 16) = v5;
  *((unsigned char *)v1 + 17) = v3;
  sub_E6DF0();
  sub_18B48(v2);
  swift_release();

  free(v1);
}

uint64_t sub_466A4()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_466F8()
{
  sub_10C7C(&qword_123590);
  sub_E6DE0();
  return v1;
}

uint64_t sub_46748()
{
  return sub_E6DF0();
}

void (*sub_4679C(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x50uLL);
  *a1 = v3;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  v3[6] = v4;
  v3[7] = v5;
  char v6 = (void *)v1[8];
  v3[8] = v6;
  v3[3] = v4;
  *char v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  id v7 = v6;
  v3[9] = sub_10C7C(&qword_123590);
  sub_E6DE0();
  return sub_46844;
}

void sub_46844(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a1 + 24;
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  *(void *)(*(void *)a1 + 32) = v4;
  uint64_t v5 = (void *)*((void *)v2 + 8);
  uint64_t v6 = *((void *)v2 + 7);
  *(void *)uint64_t v2 = *((void *)v2 + 6);
  *((void *)v2 + 1) = v6;
  *((void *)v2 + 2) = v5;
  if (a2)
  {
    id v7 = v4;
    sub_E6DF0();
    sub_18B48(v3);
    swift_release();
  }
  else
  {
    sub_E6DF0();
    sub_18B48(v3);
    swift_release();
  }

  free(v2);
}

uint64_t sub_46900()
{
  sub_10C7C(&qword_123590);
  sub_E6E10();
  return v1;
}

void *sub_46954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_E65D0();
  uint64_t v4 = sub_E6560();
  sub_469EC(v1, (uint64_t)v6);
  memcpy(&__src[7], v6, 0x109uLL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 1;
  return memcpy((void *)(a1 + 41), __src, 0x110uLL);
}

void sub_469EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = *(id *)a1;
  uint64_t v5 = sub_61950();
  uint64_t v6 = nullsub_44(v5);
  uint64_t v113 = v7;
  long long v114 = (void *)v6;
  char v115 = v8;
  uint64_t v112 = sub_E65E0();
  id v9 = [v4 localizedName];
  uint64_t v10 = sub_E7110();
  uint64_t v12 = v11;

  *(void *)&long long v140 = v10;
  *((void *)&v140 + 1) = v12;
  sub_187B0();
  uint64_t v13 = sub_E6920();
  uint64_t v110 = v14;
  uint64_t v111 = v13;
  uint64_t v109 = v15;
  char v108 = v16;
  uint64_t v17 = *(void **)(a1 + 8);
  if (v17)
  {
    uint64_t v18 = *(uint64_t (**)(id))&stru_248.segname[(swift_isaMask & *v17) - 8];
    uint64_t v19 = v17;
    LOBYTE(v18) = v18(v4);

    if (v18)
    {
      id v20 = *(uint64_t (**)(id))&stru_248.segname[swift_isaMask & *v19];
      id v21 = v19;
      char v22 = v20(v4);

      uint64_t v106 = sub_E6550();
      if (v22)
      {
        uint64_t v103 = sub_E6BC0();
        sub_E6F30();
        sub_E62A0();
        *(void *)&long long v140 = sub_B7108(0x5F544F4C49504F43, (void *)0xEE0044454B4E494CLL);
        *((void *)&v140 + 1) = v23;
        uint64_t v24 = sub_E6920();
        uint64_t v26 = v25;
        char v28 = v27 & 1;
        sub_E6850();
        uint64_t v29 = sub_E6900();
        uint64_t v92 = v30;
        uint64_t v94 = v29;
        char v32 = v31;
        uint64_t v99 = v33;
        swift_release();
        sub_18814(v24, v26, v28);
        swift_bridgeObjectRelease();
        id v34 = *(id *)a1;
        uint64_t v35 = sub_33580();
        uint64_t v37 = v36;
        uint64_t v38 = sub_335F8();
        sub_33614(v35, v37, (uint64_t)v38, v39, (uint64_t)v34, (uint64_t)&v140);
        uint64_t v40 = (void *)v140;
        long long v41 = v140;
        long long v42 = v141;
        char v96 = (void *)*((void *)&v142 + 1);
        LOBYTE(v152) = BYTE8(v136);
        char v169 = BYTE8(v137);
        char v168 = v32 & 1;
        char v166 = v142 & 1;
        int v149 = *(_DWORD *)v164;
        __int16 v150 = *(_WORD *)&v164[4];
        *(_DWORD *)uint64_t v151 = v154;
        *(_DWORD *)&v151[3] = *(_DWORD *)((char *)&v154 + 3);
        v148[0] = v116;
        *(_DWORD *)((char *)v148 + 3) = *(_DWORD *)((char *)&v116 + 3);
        v147[0] = v167[0];
        *(_DWORD *)((char *)v147 + 3) = *(_DWORD *)((char *)v167 + 3);
        char v101 = v142 & 1;
        v146[0] = v165[0];
        *(_DWORD *)((char *)v146 + 3) = *(_DWORD *)((char *)v165 + 3);
        swift_retain();
        sub_18804(v94, v92, v32 & 1);
        id v43 = v40;
        swift_bridgeObjectRetain();
        sub_33578();
        id v97 = v96;

        sub_333C4();
        sub_18814(v94, v92, v32 & 1);
        swift_release();
        swift_bridgeObjectRelease();
        int v152 = v149;
        __int16 v153 = v150;
        LODWORD(v154) = *(_DWORD *)v151;
        *(_DWORD *)((char *)&v154 + 3) = *(_DWORD *)&v151[3];
        *(_DWORD *)((char *)v167 + 3) = *(_DWORD *)((char *)v148 + 3);
        v167[0] = v148[0];
        *(_DWORD *)((char *)v165 + 3) = *(_DWORD *)((char *)v147 + 3);
        v165[0] = v147[0];
        *(_DWORD *)&v164[3] = *(_DWORD *)((char *)v146 + 3);
        *(_DWORD *)uint64_t v164 = v146[0];
        LOBYTE(v148[0]) = 0;
        int v44 = sub_E6720();
        *(void *)&long long v140 = v106;
        *((void *)&v140 + 1) = 0x4014000000000000;
        LOBYTE(v141) = 0;
        *(_DWORD *)((char *)&v141 + 1) = *(_DWORD *)v151;
        DWORD1(v141) = *(_DWORD *)&v151[3];
        *((void *)&v141 + 1) = v103;
        LOWORD(v142) = 256;
        *(_DWORD *)((char *)&v142 + 2) = v152;
        WORD3(v142) = v153;
        *((void *)&v142 + 1) = v136;
        v143[0] = BYTE8(v136);
        *(_DWORD *)&v143[4] = *(_DWORD *)((char *)&v154 + 3);
        *(_DWORD *)&v143[1] = v154;
        *(void *)&v143[8] = v137;
        v143[16] = BYTE8(v137);
        *(_DWORD *)&v143[20] = *(_DWORD *)((char *)v167 + 3);
        *(_DWORD *)&v143[17] = v167[0];
        *(_OWORD *)&v143[24] = v138;
        *(void *)&v143[40] = v94;
        *(void *)&v143[48] = v92;
        v143[56] = v32 & 1;
        *(_DWORD *)&v143[60] = *(_DWORD *)((char *)v165 + 3);
        *(_DWORD *)&v143[57] = v165[0];
        *(void *)&v143[64] = v99;
        *(_OWORD *)&v143[72] = v41;
        *(_OWORD *)&v143[88] = v42;
        v143[104] = v101;
        *(_DWORD *)&v143[105] = *(_DWORD *)v164;
        *(_DWORD *)&v143[108] = *(_DWORD *)&v164[3];
        *(void *)&v143[112] = v97;
        *(_DWORD *)&v143[120] = v44;
        sub_4D5A4((uint64_t)&v140);
      }
      else
      {
        uint64_t v104 = sub_E6B90();
        sub_E6F30();
        sub_E62A0();
        *(void *)&long long v140 = sub_B7108(0xD000000000000013, (void *)0x80000000000F1B80);
        *((void *)&v140 + 1) = v58;
        uint64_t v59 = sub_E6920();
        uint64_t v61 = v60;
        char v63 = v62 & 1;
        sub_E6850();
        uint64_t v64 = sub_E6900();
        uint64_t v95 = v65;
        uint64_t v98 = v64;
        char v67 = v66;
        uint64_t v100 = v68;
        swift_release();
        sub_18814(v59, v61, v63);
        swift_bridgeObjectRelease();
        id v69 = *(id *)a1;
        uint64_t v70 = sub_33580();
        uint64_t v72 = v71;
        uint64_t v73 = sub_335F8();
        sub_33614(v70, v72, (uint64_t)v73, v74, (uint64_t)v69, (uint64_t)&v140);
        uint64_t v75 = (void *)v140;
        long long v76 = v140;
        long long v77 = v141;
        long long v93 = (void *)*((void *)&v142 + 1);
        LOBYTE(v152) = BYTE8(v136);
        char v169 = BYTE8(v137);
        char v168 = v67 & 1;
        char v166 = v142 & 1;
        int v149 = *(_DWORD *)v164;
        __int16 v150 = *(_WORD *)&v164[4];
        *(_DWORD *)uint64_t v151 = v154;
        *(_DWORD *)&v151[3] = *(_DWORD *)((char *)&v154 + 3);
        v148[0] = v116;
        *(_DWORD *)((char *)v148 + 3) = *(_DWORD *)((char *)&v116 + 3);
        v147[0] = v167[0];
        *(_DWORD *)((char *)v147 + 3) = *(_DWORD *)((char *)v167 + 3);
        char v102 = v142 & 1;
        v146[0] = v165[0];
        *(_DWORD *)((char *)v146 + 3) = *(_DWORD *)((char *)v165 + 3);
        swift_retain();
        sub_18804(v98, v95, v67 & 1);
        id v78 = v75;
        swift_bridgeObjectRetain();
        sub_33578();
        id v79 = v93;

        sub_333C4();
        sub_18814(v98, v95, v67 & 1);
        swift_release();
        swift_bridgeObjectRelease();
        int v152 = v149;
        __int16 v153 = v150;
        LODWORD(v154) = *(_DWORD *)v151;
        *(_DWORD *)((char *)&v154 + 3) = *(_DWORD *)&v151[3];
        *(_DWORD *)((char *)v167 + 3) = *(_DWORD *)((char *)v148 + 3);
        v167[0] = v148[0];
        *(_DWORD *)((char *)v165 + 3) = *(_DWORD *)((char *)v147 + 3);
        v165[0] = v147[0];
        *(_DWORD *)&v164[3] = *(_DWORD *)((char *)v146 + 3);
        *(_DWORD *)uint64_t v164 = v146[0];
        LOBYTE(v148[0]) = 0;
        int v80 = sub_E6720();
        *(void *)&long long v140 = v106;
        *((void *)&v140 + 1) = 0x4014000000000000;
        LOBYTE(v141) = 0;
        *(_DWORD *)((char *)&v141 + 1) = *(_DWORD *)v151;
        DWORD1(v141) = *(_DWORD *)&v151[3];
        *((void *)&v141 + 1) = v104;
        LOWORD(v142) = 256;
        *(_DWORD *)((char *)&v142 + 2) = v152;
        WORD3(v142) = v153;
        *((void *)&v142 + 1) = v136;
        v143[0] = BYTE8(v136);
        *(_DWORD *)&v143[4] = *(_DWORD *)((char *)&v154 + 3);
        *(_DWORD *)&v143[1] = v154;
        *(void *)&v143[8] = v137;
        v143[16] = BYTE8(v137);
        *(_DWORD *)&v143[20] = *(_DWORD *)((char *)v167 + 3);
        *(_DWORD *)&v143[17] = v167[0];
        *(_OWORD *)&v143[24] = v138;
        *(void *)&v143[40] = v98;
        *(void *)&v143[48] = v95;
        v143[56] = v67 & 1;
        *(_DWORD *)&v143[60] = *(_DWORD *)((char *)v165 + 3);
        *(_DWORD *)&v143[57] = v165[0];
        *(void *)&v143[64] = v100;
        *(_OWORD *)&v143[72] = v76;
        *(_OWORD *)&v143[88] = v77;
        v143[104] = v102;
        *(_DWORD *)&v143[105] = *(_DWORD *)v164;
        *(_DWORD *)&v143[108] = *(_DWORD *)&v164[3];
        *(void *)&v143[112] = v79;
        *(_DWORD *)&v143[120] = v80;
        sub_4D52C((uint64_t)&v140);
      }
      sub_4D538((uint64_t)&v140, (uint64_t)&v136, &qword_123740);
      sub_10C7C(&qword_123728);
      sub_4D3A8(&qword_123720, &qword_123728, &qword_123730, &qword_123738);
      sub_E6610();
      *(_OWORD *)&v139[80] = v132;
      *(_OWORD *)&v139[96] = *(_OWORD *)v134;
      *(_OWORD *)&v139[109] = *(_OWORD *)&v134[13];
      *(_OWORD *)&v139[16] = v124;
      *(_OWORD *)&v139[32] = v126;
      *(_OWORD *)&v139[48] = v128;
      *(_OWORD *)&v139[64] = v130;
      long long v136 = v116;
      long long v137 = v118;
      long long v138 = v120;
      *(_OWORD *)__int16 v139 = v122;
      sub_4D59C((uint64_t)&v136);
      sub_4D538((uint64_t)&v136, (uint64_t)&v154, &qword_123708);
      sub_10C7C(&qword_123710);
      sub_10C7C(&qword_123450);
      sub_4D314();
      sub_4D3A8((unint64_t *)&qword_123460, &qword_123450, &qword_123468, &qword_123470);
      sub_E6610();
      uint64_t v57 = a2;
    }
    else
    {
      uint64_t v107 = sub_E6550();
      uint64_t v105 = sub_E6B00();
      sub_E6F30();
      sub_E62A0();
      sub_B7108(0xD000000000000016, (void *)0x80000000000F1BA0);
      uint64_t v45 = sub_E6920();
      uint64_t v47 = v46;
      char v49 = v48 & 1;
      sub_E6850();
      uint64_t v50 = sub_E6900();
      uint64_t v52 = v51;
      char v54 = v53;
      uint64_t v56 = v55;
      swift_release();
      sub_18814(v45, v47, v49);
      swift_bridgeObjectRelease();
      LOBYTE(v154) = 1;
      LOBYTE(v116) = BYTE8(v140);
      LOBYTE(v167[0]) = BYTE8(v141);
      LOBYTE(v165[0]) = v54 & 1;
      swift_retain();
      sub_18804(v50, v52, v54 & 1);
      swift_bridgeObjectRetain();
      sub_18814(v50, v52, v54 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v148[0]) = 0;
      LOBYTE(v147[0]) = BYTE8(v140);
      LOBYTE(v146[0]) = BYTE8(v141);
      LOBYTE(v152) = v54 & 1;
      uint64_t v57 = a2;
      *(void *)&long long v136 = v107;
      *((void *)&v136 + 1) = 0x4014000000000000;
      LOBYTE(v137) = 0;
      *(_DWORD *)((char *)&v137 + 1) = v116;
      DWORD1(v137) = *(_DWORD *)((char *)&v116 + 3);
      *((void *)&v137 + 1) = v105;
      LOWORD(v138) = 256;
      WORD3(v138) = *(_WORD *)&v151[4];
      *(_DWORD *)((char *)&v138 + 2) = *(_DWORD *)v151;
      *((void *)&v138 + 1) = v140;
      v139[0] = BYTE8(v140);
      *(_DWORD *)&v139[4] = *(_DWORD *)((char *)v167 + 3);
      *(_DWORD *)&v139[1] = v167[0];
      *(void *)&v139[8] = v141;
      v139[16] = BYTE8(v141);
      *(_DWORD *)&v139[20] = *(_DWORD *)((char *)v165 + 3);
      *(_DWORD *)&v139[17] = v165[0];
      *(_OWORD *)&v139[24] = v142;
      *(void *)&v139[40] = v50;
      *(void *)&v139[48] = v52;
      v139[56] = v54 & 1;
      *(_DWORD *)&v139[60] = *(_DWORD *)&v164[3];
      *(_DWORD *)&v139[57] = *(_DWORD *)v164;
      *(void *)&v139[64] = v56;
      *(_DWORD *)&v139[72] = sub_E6720();
      sub_4D308((uint64_t)&v136);
      sub_4D538((uint64_t)&v136, (uint64_t)&v154, &qword_123708);
      sub_10C7C(&qword_123710);
      sub_10C7C(&qword_123450);
      sub_4D314();
      sub_4D3A8((unint64_t *)&qword_123460, &qword_123450, &qword_123468, &qword_123470);
      sub_E6610();
    }
    *(_OWORD *)&v139[80] = *(_OWORD *)&v143[80];
    *(_OWORD *)&v139[96] = *(_OWORD *)&v143[96];
    *(_OWORD *)&v139[110] = *(_OWORD *)&v143[110];
    *(_OWORD *)&v139[16] = *(_OWORD *)&v143[16];
    *(_OWORD *)&v139[32] = *(_OWORD *)&v143[32];
    *(_OWORD *)&v139[48] = *(_OWORD *)&v143[48];
    *(_OWORD *)&v139[64] = *(_OWORD *)&v143[64];
    long long v136 = v140;
    long long v137 = v141;
    long long v138 = v142;
    *(_OWORD *)__int16 v139 = *(_OWORD *)v143;
    long long v162 = *(_OWORD *)&v143[80];
    v163[0] = *(_OWORD *)&v143[96];
    *(_OWORD *)((char *)v163 + 14) = *(_OWORD *)&v143[110];
    long long v158 = *(_OWORD *)&v143[16];
    long long v159 = *(_OWORD *)&v143[32];
    long long v160 = *(_OWORD *)&v143[48];
    long long v161 = *(_OWORD *)&v143[64];
    long long v154 = v140;
    long long v155 = v141;
    long long v156 = v142;
    long long v157 = *(_OWORD *)v143;
    long long v133 = *(_OWORD *)&v143[80];
    *(_OWORD *)uint64_t v135 = *(_OWORD *)&v143[96];
    *(_OWORD *)&v135[14] = *(_OWORD *)&v143[110];
    long long v125 = *(_OWORD *)&v143[16];
    long long v127 = *(_OWORD *)&v143[32];
    long long v129 = *(_OWORD *)&v143[48];
    long long v131 = *(_OWORD *)&v143[64];
    long long v117 = v140;
    long long v119 = v141;
    LOBYTE(v167[0]) = v108 & 1;
    long long v121 = v142;
    long long v123 = *(_OWORD *)v143;
    sub_18804(v111, v109, v108 & 1);
    swift_bridgeObjectRetain();
    sub_4D4AC((uint64_t)&v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t, char))sub_4CF10);
    sub_4D4AC((uint64_t)&v136, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t, char))sub_4D198);
    sub_18814(v111, v109, v108 & 1);
    swift_bridgeObjectRelease();
    v167[0] = v140;
    *(_DWORD *)((char *)v167 + 3) = *(_DWORD *)((char *)&v140 + 3);
    long long v162 = v133;
    v163[0] = *(_OWORD *)v135;
    *(_OWORD *)((char *)v163 + 14) = *(_OWORD *)&v135[14];
    long long v158 = v125;
    long long v159 = v127;
    long long v160 = v129;
    long long v161 = v131;
    long long v154 = v117;
    long long v155 = v119;
    long long v156 = v121;
    long long v157 = v123;
    *(_DWORD *)((char *)&v137 + 1) = v117;
    *((void *)&v137 + 1) = v111;
    *(void *)&long long v138 = v109;
    BYTE8(v138) = v108 & 1;
    int v81 = v167[0];
    *(_DWORD *)((char *)&v138 + 9) = v167[0];
    HIDWORD(v138) = *(_DWORD *)((char *)&v140 + 3);
    *(void *)__int16 v139 = v110;
    *(_OWORD *)&v139[72] = v125;
    *(_OWORD *)&v139[56] = v123;
    *(_OWORD *)&v139[120] = v131;
    *(_OWORD *)&v139[136] = v133;
    long long v82 = v163[0];
    *(_OWORD *)&v139[152] = v163[0];
    *(_OWORD *)&v139[166] = *(_OWORD *)&v135[14];
    *(_OWORD *)&v139[88] = v127;
    *(_OWORD *)&v139[104] = v129;
    *(_OWORD *)&v139[8] = v117;
    *(_OWORD *)&v139[24] = v119;
    *(_OWORD *)&v139[40] = v121;
    long long v83 = *(_OWORD *)&v139[112];
    *(_OWORD *)(v57 + 20sub_E59A4(2, 18, 1, 0) = *(_OWORD *)&v139[128];
    long long v84 = *(_OWORD *)&v139[160];
    *(_OWORD *)(v57 + 216) = *(_OWORD *)&v139[144];
    *(_OWORD *)(v57 + 232) = v84;
    long long v85 = *(_OWORD *)&v139[48];
    *(_OWORD *)(v57 + 136) = *(_OWORD *)&v139[64];
    long long v86 = *(_OWORD *)&v139[96];
    *(_OWORD *)(v57 + 152) = *(_OWORD *)&v139[80];
    *(_OWORD *)(v57 + 168) = v86;
    *(_OWORD *)(v57 + 184) = v83;
    long long v87 = v138;
    *(_OWORD *)(v57 + 72) = *(_OWORD *)v139;
    long long v88 = *(_OWORD *)&v139[32];
    *(_OWORD *)(v57 + 88) = *(_OWORD *)&v139[16];
    DWORD1(v137) = *(_DWORD *)((char *)&v117 + 3);
    *(void *)&long long v136 = v112;
    *((void *)&v136 + 1) = 0x4010000000000000;
    LOBYTE(v137) = 0;
    *(_OWORD *)(v57 + 104) = v88;
    *(_OWORD *)(v57 + 12sub_E59A4(2, 18, 1, 0) = v85;
    long long v89 = v137;
    *(_OWORD *)(v57 + 24) = v136;
    *(_OWORD *)(v57 + 4sub_E59A4(2, 18, 1, 0) = v89;
    *(_OWORD *)(v57 + 56) = v87;
    *(_OWORD *)&v143[8] = v117;
    *(_OWORD *)&v143[24] = v119;
    *(_OWORD *)&v143[104] = v129;
    *(_OWORD *)&v143[88] = v127;
    *(_OWORD *)&v143[72] = v125;
    *(_OWORD *)&v143[56] = v123;
    *(_OWORD *)((char *)v145 + 14) = *(_OWORD *)((char *)v163 + 14);
    v145[0] = v82;
    long long v144 = v133;
    *(_OWORD *)&v143[120] = v131;
    *(void *)(v57 + 246) = *(void *)&v139[174];
    v164[0] = 0;
    *(void *)uint64_t v57 = v114;
    *(void *)(v57 + 8) = v113;
    LOBYTE(v165[0]) = 1;
    *(void *)(v57 + 16) = v115;
    *(void *)(v57 + 256) = 0;
    *(unsigned char *)(v57 + 264) = 1;
    *(void *)&long long v140 = v112;
    *((void *)&v140 + 1) = 0x4010000000000000;
    LOBYTE(v141) = 0;
    *(_DWORD *)((char *)&v141 + 1) = v117;
    DWORD1(v141) = *(_DWORD *)((char *)&v117 + 3);
    *((void *)&v141 + 1) = v111;
    *(void *)&long long v142 = v109;
    BYTE8(v142) = v108 & 1;
    HIDWORD(v142) = *(_DWORD *)((char *)v167 + 3);
    *(_DWORD *)((char *)&v142 + 9) = v81;
    *(void *)uint64_t v143 = v110;
    *(_OWORD *)&v143[40] = v121;
    id v90 = v114;
    id v91 = v115;
    sub_4CE00((uint64_t)&v136);
    sub_4D088((uint64_t)&v140);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

uint64_t sub_47A88()
{
  return sub_47AD0((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_47AD0(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  a1(0);
  sub_4C728(a2, a3);

  return sub_E63F0();
}

uint64_t sub_47B3C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  return result;
}

void *sub_47B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_E65D0();
  uint64_t v4 = sub_E6560();
  sub_469EC(v1, (uint64_t)v6);
  memcpy(&__src[7], v6, 0x109uLL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 1;
  return memcpy((void *)(a1 + 41), __src, 0x110uLL);
}

id sub_47BFC()
{
  return *v0;
}

id sub_47C04()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (v1)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_47C90()
{
  return sub_47AD0((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_47CD8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_47D60()
{
  if (*(void *)(v0 + 24))
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for BluetoothManager();
    sub_4C728(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_47DEC()
{
  return sub_47AD0((void (*)(void))type metadata accessor for BluetoothManager, &qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
}

uint64_t sub_47E34()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = type metadata accessor for BluetoothManager();
  uint64_t v4 = sub_4C728(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_47EBC()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_47F0C()
{
  return sub_E6DF0();
}

void (*sub_47F60(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 56);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_48000;
}

void sub_48000(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_48070()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_480C4()
{
  sub_10C7C(&qword_123590);
  sub_E6DE0();
  return v1;
}

uint64_t sub_48114()
{
  return sub_E6DF0();
}

void (*sub_48164(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  v3[5] = v4;
  v3[6] = v5;
  char v6 = (void *)v1[10];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = sub_10C7C(&qword_123590);
  sub_E6DE0();
  return sub_48208;
}

void sub_48208(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)char v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_482C0()
{
  sub_10C7C(&qword_123590);
  sub_E6E10();
  return v1;
}

__n128 sub_48314@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_483C8()
{
  return sub_E6DF0();
}

void (*sub_48470(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  long long v4 = *(_OWORD *)(v1 + 200);
  v3[6] = *(_OWORD *)(v1 + 184);
  v3[7] = v4;
  v3[8] = *(_OWORD *)(v1 + 216);
  *((void *)v3 + 18) = *(void *)(v1 + 232);
  long long v5 = *(_OWORD *)(v1 + 136);
  v3[2] = *(_OWORD *)(v1 + 120);
  v3[3] = v5;
  long long v6 = *(_OWORD *)(v1 + 168);
  v3[4] = *(_OWORD *)(v1 + 152);
  v3[5] = v6;
  long long v7 = *(_OWORD *)(v1 + 104);
  *long long v3 = *(_OWORD *)(v1 + 88);
  v3[1] = v7;
  *(_OWORD *)((char *)v3 + 248) = *(_OWORD *)(v1 + 184);
  long long v8 = *(_OWORD *)(v1 + 216);
  *(_OWORD *)((char *)v3 + 264) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v8;
  *((void *)v3 + 37) = *(void *)(v1 + 232);
  *(_OWORD *)((char *)v3 + 184) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v3 + 216) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)((char *)v3 + 232) = *(_OWORD *)(v1 + 168);
  *(_OWORD *)((char *)v3 + 152) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)((char *)v3 + 168) = *(_OWORD *)(v1 + 104);
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_48580;
}

void sub_48580(void **a1, char a2)
{
  char v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_48718@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_487D4()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_48810()
{
  return 0;
}

uint64_t sub_48818(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2);
  sub_4CCDC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  return sub_4CD44(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void *sub_488E0()
{
  id v1 = *(id *)v0;
  id v2 = [*(id *)v0 macAddresses];
  if (!v2)
  {
LABEL_26:
    id v15 = [v1 uuidIdentifiers];
    if (v15)
    {
      long long v16 = v15;
      uint64_t v17 = sub_E7210();

      uint64_t v36 = *(void *)(v17 + 16);
      if (v36)
      {
        unint64_t v18 = 0;
        uint64_t v19 = *(void *)(v0 + 24);
        uint64_t v32 = v19;
        uint64_t v34 = v17;
        do
        {
          if (v18 >= *(void *)(v17 + 16)) {
            goto LABEL_52;
          }
          if (!v19) {
            goto LABEL_55;
          }
          long long v20 = *(uint64_t (**)(uint64_t))(*(void *)v19 + 536);
          swift_bridgeObjectRetain();
          uint64_t v21 = swift_retain();
          unint64_t v22 = v20(v21);
          swift_release();
          unint64_t v38 = v18;
          if (v22 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_E7570();
            swift_bridgeObjectRelease();
            if (!v23) {
              goto LABEL_29;
            }
          }
          else
          {
            uint64_t v23 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
            if (!v23) {
              goto LABEL_29;
            }
          }
          if (v23 < 1) {
            goto LABEL_54;
          }
          for (uint64_t i = 0; i != v23; ++i)
          {
            if ((v22 & 0xC000000000000001) != 0)
            {
              uint64_t v25 = sub_E74E0();
            }
            else
            {
              uint64_t v25 = *(void *)(v22 + 8 * i + 32);
              swift_retain();
            }
            long long v26 = (void *)(*(uint64_t (**)(void))(*(void *)v25 + 264))();
            id v27 = [v26 identifier];

            if (v27)
            {
              sub_E7110();

              if ((*(uint64_t (**)(void))(*(void *)v25 + 664))())
              {
                sub_187B0();
                uint64_t v28 = sub_E7400();
                swift_bridgeObjectRelease();
                if (!v28)
                {
                  swift_retain();
                  sub_E71F0();
                  if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
                    sub_E7240();
                  }
                  sub_E7260();
                  sub_E7230();
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            swift_release();
          }
LABEL_29:
          ++v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v19 = v32;
          uint64_t v17 = v34;
        }
        while (v38 + 1 != v36);
      }
      swift_bridgeObjectRelease();
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_E7210();

  uint64_t v37 = *(void *)(v4 + 16);
  if (!v37)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  id v30 = v1;
  uint64_t v31 = v0;
  unint64_t v5 = 0;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v35 = v4;
  uint64_t v33 = v6;
  while (v5 < *(void *)(v4 + 16))
  {
    if (!v6) {
      goto LABEL_55;
    }
    long long v7 = *(uint64_t (**)(uint64_t))(*(void *)v6 + 536);
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_retain();
    unint64_t v9 = v7(v8);
    swift_release();
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_E7570();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_9:
        if (v10 < 1) {
          goto LABEL_53;
        }
        for (uint64_t j = 0; j != v10; ++j)
        {
          if ((v9 & 0xC000000000000001) != 0)
          {
            uint64_t v12 = sub_E74E0();
          }
          else
          {
            uint64_t v12 = *(void *)(v9 + 8 * j + 32);
            swift_retain();
          }
          (*(void (**)(void))(*(void *)v12 + 408))();
          if (v13)
          {
            if ((*(uint64_t (**)(void))(*(void *)v12 + 664))())
            {
              sub_187B0();
              uint64_t v14 = sub_E7400();
              swift_bridgeObjectRelease();
              if (!v14)
              {
                swift_retain();
                sub_E71F0();
                if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
                  sub_E7240();
                }
                sub_E7260();
                sub_E7230();
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          swift_release();
        }
      }
    }
    else
    {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
      if (v10) {
        goto LABEL_9;
      }
    }
    ++v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v33;
    uint64_t v4 = v35;
    if (v5 == v37)
    {
      swift_bridgeObjectRelease();
      id v1 = v30;
      uint64_t v0 = v31;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  type metadata accessor for BluetoothManager();
  sub_4C728(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
  swift_bridgeObjectRetain();
  double result = (void *)sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_48F7C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      char v4 = 0;
      if ((a1 & 0xC000000000000001) != 0) {
        break;
      }
      while (1)
      {
        if (v3 >= *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_16;
        }
        uint64_t v5 = *(void *)(a1 + 8 * v3 + 32);
        swift_retain();
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          break;
        }
LABEL_9:
        if (v4)
        {
          swift_release();
          char v4 = 1;
          if (v6 == v2) {
            goto LABEL_19;
          }
        }
        else
        {
          char v7 = (*(uint64_t (**)(void))(*(void *)v5 + 520))();
          swift_release();
          char v4 = v7 ^ 1;
          if (v6 == v2) {
            goto LABEL_19;
          }
        }
        ++v3;
        if ((a1 & 0xC000000000000001) != 0) {
          goto LABEL_4;
        }
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_E7570();
      if (!v2) {
        goto LABEL_18;
      }
    }
LABEL_4:
    uint64_t v5 = sub_E74E0();
    unint64_t v6 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_18:
  char v4 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_490CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for GCSControllerView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_10C7C(&qword_123598);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v2;
  sub_10C7C(&qword_1235A0);
  sub_4D468(&qword_1235A8, &qword_1235A0);
  sub_E6ED0();
  sub_4CCDC(v2, (uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for GCSControllerView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_4AB48((uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a1, v10, v7);
  uint64_t v13 = (uint64_t (**)())(a1 + *(int *)(sub_10C7C(&qword_1235B8) + 36));
  *uint64_t v13 = sub_4ABAC;
  v13[1] = (uint64_t (*)())v12;
  v13[2] = 0;
  v13[3] = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_49334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v3 = sub_10C7C(&qword_122B80);
  __chkstk_darwin(v3 - 8);
  uint64_t v111 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10C7C(&qword_123680);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v113 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_123688);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v117 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v119 = (uint64_t)&v106 - v9;
  uint64_t v10 = type metadata accessor for GCSControllerView();
  uint64_t v108 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v110 = (uint64_t)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = v12;
  __chkstk_darwin(v11);
  uint64_t v112 = (void **)((char *)&v106 - v13);
  uint64_t v14 = sub_10C7C(&qword_123690);
  uint64_t v124 = *(void *)(v14 - 8);
  uint64_t v125 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  long long v114 = (uint64_t *)((char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v118 = (uint64_t)&v106 - v17;
  uint64_t v18 = sub_10C7C(&qword_123698);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  long long v126 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v123 = (char *)&v106 - v21;
  uint64_t v22 = sub_10C7C(&qword_1236A0);
  __chkstk_darwin(v22);
  long long v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10C7C(&qword_1236A8);
  uint64_t v25 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  id v27 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10C7C(&qword_1236B0);
  uint64_t v28 = __chkstk_darwin(v120);
  uint64_t v122 = (uint64_t)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v106 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v106 - v33;
  long long v128 = a1;
  sub_4A114((uint64_t)a1, (uint64_t)v24);
  sub_4C604();
  uint64_t v35 = sub_11B60(&qword_1236C0);
  unint64_t v36 = sub_4C658();
  unint64_t v37 = sub_187B0();
  long long v131 = (void *)v35;
  long long v132 = &type metadata for String;
  long long v133 = (void *)v36;
  long long v134 = (void *)v37;
  swift_getOpaqueTypeConformance2();
  sub_E6300();
  unint64_t v38 = (void *)a1[1];
  if (!v38) {
    goto LABEL_25;
  }
  uint64_t v39 = *a1;
  uint64_t v40 = *(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v38) + 8];
  long long v41 = v38;
  long long v42 = a1;
  LOBYTE(v39) = v40(v39);

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = swift_allocObject();
  *(unsigned char *)(v44 + 16) = v39 & 1;
  uint64_t v45 = v121;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v32, v27, v121);
  uint64_t v46 = (uint64_t *)&v32[*(int *)(v120 + 36)];
  *uint64_t v46 = KeyPath;
  v46[1] = (uint64_t)sub_4C780;
  v46[2] = v44;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v45);
  sub_4D538((uint64_t)v32, (uint64_t)v34, &qword_1236B0);
  uint64_t v47 = (void *)a1[1];
  if (!v47) {
    goto LABEL_25;
  }
  uint64_t v48 = *a1;
  char v49 = *(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v47) - 8];
  uint64_t v50 = v47;
  LOBYTE(v49) = v49(v48);

  if (v49)
  {
    uint64_t v51 = *(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v50) + 8];
    uint64_t v52 = v50;
    LOBYTE(v51) = v51(v48);

    if (v51)
    {
      uint64_t v53 = sub_10C7C(&qword_1236F8);
      uint64_t v54 = v118;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v118, 1, 1, v53);
      uint64_t v56 = (uint64_t)v126;
      uint64_t v55 = v127;
      uint64_t v57 = v125;
      uint64_t v58 = (uint64_t)v123;
LABEL_23:
      sub_4D538(v54, v58, &qword_123690);
      uint64_t v59 = 0;
      goto LABEL_24;
    }
    uint64_t v60 = *(uint64_t (**)(uint64_t))((char *)&stru_248.reloff + (swift_isaMask & *v52));
    uint64_t v61 = v52;
    char v62 = (void *)v60(v48);

    uint64_t v107 = v34;
    if (!v62)
    {
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      LODWORD(v12sub_E59A4(2, 18, 1, 0) = 0;
      long long v76 = &dword_0 + 1;
LABEL_16:
      uint64_t v86 = v119;
      long long v87 = sub_488E0();
      uint64_t v121 = v74;
      if (v87)
      {
        long long v88 = v87;
        if (sub_48F7C((unint64_t)v87))
        {
          long long v89 = v111;
          sub_E61E0();
          uint64_t v90 = sub_E6200();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
          uint64_t v91 = (uint64_t)v42;
          uint64_t v92 = v110;
          sub_4CCDC(v91, v110, (uint64_t (*)(void))type metadata accessor for GCSControllerView);
          unint64_t v93 = (*(unsigned __int8 *)(v108 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
          uint64_t v94 = swift_allocObject();
          *(void *)(v94 + 16) = v88;
          sub_4AB48(v92, v94 + v93);
          uint64_t v95 = (uint64_t)v113;
          uint64_t v86 = v119;
          sub_E6D70();
          uint64_t v96 = sub_10C7C(&qword_122B88);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v95, 0, 1, v96);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v98 = sub_10C7C(&qword_122B88);
          uint64_t v95 = (uint64_t)v113;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v113, 1, 1, v98);
        }
        sub_4D538(v95, v86, &qword_123680);
        uint64_t v97 = 0;
      }
      else
      {
        uint64_t v97 = 1;
      }
      uint64_t v57 = v125;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v86, v97, 1, v116);
      uint64_t v99 = v117;
      sub_4C798(v86, v117, &qword_123688);
      uint64_t v100 = (uint64_t)v114;
      void *v114 = v71;
      *(void *)(v100 + 8) = v72;
      *(void *)(v100 + 16) = v76;
      *(void *)(v100 + 24) = v73;
      *(void *)(v100 + 32) = v121;
      *(void *)(v100 + 4sub_E59A4(2, 18, 1, 0) = v75;
      *(unsigned char *)(v100 + 48) = v120;
      uint64_t v101 = sub_10C7C(&qword_1236F0);
      sub_4C798(v99, v100 + *(int *)(v101 + 48), &qword_123688);
      sub_4C7FC(v71, v72, v76, v73);
      sub_4CDA4(v119, &qword_123688);
      sub_4CDA4(v99, &qword_123688);
      sub_4C87C((uint64_t)v71, v72, v76, v73);
      uint64_t v102 = sub_10C7C(&qword_1236F8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v100, 0, 1, v102);
      uint64_t v54 = v118;
      sub_4D538(v100, v118, &qword_123690);
      uint64_t v34 = v107;
      uint64_t v58 = (uint64_t)v123;
      uint64_t v56 = (uint64_t)v126;
      uint64_t v55 = v127;
      goto LABEL_23;
    }
    char v63 = sub_BC5B8();
    uint64_t v64 = v112;
    sub_4CCDC((uint64_t)a1, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for GCSControllerView);
    if ((v63 & 1) == 0)
    {

      sub_4CD44((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for GCSControllerView);
LABEL_14:
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      long long v76 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      LODWORD(v12sub_E59A4(2, 18, 1, 0) = 0;
      goto LABEL_16;
    }
    uint64_t v65 = v64[1];
    if (v65)
    {
      char v66 = *v64;
      char v67 = *(uint64_t (**)(void))&stru_248.segname[swift_isaMask & *v65];
      uint64_t v68 = (uint64_t)v64;
      id v69 = v65;
      id v70 = v66;
      LOBYTE(v67) = v67();

      sub_4CD44(v68, (uint64_t (*)(void))type metadata accessor for GCSControllerView);
      if ((v67 & 1) == 0)
      {
        long long v77 = (void *)*v42;
        uint64_t v78 = v42[31];
        char v129 = *((unsigned char *)v42 + 240);
        uint64_t v130 = v78;
        id v79 = v77;
        sub_10C7C(&qword_122A50);
        uint64_t v80 = sub_E6D40();
        uint64_t v81 = (uint64_t)v131;
        uint64_t v82 = (uint64_t)v132;
        char v83 = (char)v133;
        uint64_t v84 = sub_2DCA4(v80);
        sub_2DD1C(v84, v85, (uint64_t)v79, (uint64_t)v62, v81, v82, v83, (uint64_t)&v131);
        uint64_t v71 = v131;
        uint64_t v72 = (uint64_t)v132;
        long long v76 = v133;
        uint64_t v73 = v134;
        uint64_t v74 = v135;
        uint64_t v75 = v136;
        LODWORD(v12sub_E59A4(2, 18, 1, 0) = v137;
        goto LABEL_16;
      }

      goto LABEL_14;
    }
    while (1)
    {
LABEL_25:
      type metadata accessor for GCSPreferencesStore();
      sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
      sub_E63E0();
      __break(1u);
    }
  }
  uint64_t v59 = 1;
  uint64_t v56 = (uint64_t)v126;
  uint64_t v55 = v127;
  uint64_t v57 = v125;
  uint64_t v58 = (uint64_t)v123;
LABEL_24:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v58, v59, 1, v57);
  uint64_t v103 = v122;
  sub_4C798((uint64_t)v34, v122, &qword_1236B0);
  sub_4C798(v58, v56, &qword_123698);
  sub_4C798(v103, v55, &qword_1236B0);
  uint64_t v104 = sub_10C7C(&qword_1236E8);
  sub_4C798(v56, v55 + *(int *)(v104 + 48), &qword_123698);
  sub_4CDA4(v58, &qword_123698);
  sub_4CDA4((uint64_t)v34, &qword_1236B0);
  sub_4CDA4(v56, &qword_123698);
  return sub_4CDA4(v103, &qword_1236B0);
}

uint64_t sub_4A114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_10C7C(&qword_123700);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GCSControllerCustomizeControlsView();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10C7C(&qword_1236C0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_1236A0);
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(id *)a1;
  long long v16 = *(_OWORD *)(a1 + 200);
  long long v46 = *(_OWORD *)(a1 + 184);
  long long v47 = v16;
  long long v48 = *(_OWORD *)(a1 + 216);
  uint64_t v49 = *(void *)(a1 + 232);
  long long v17 = *(_OWORD *)(a1 + 136);
  long long v42 = *(_OWORD *)(a1 + 120);
  long long v43 = v17;
  long long v18 = *(_OWORD *)(a1 + 168);
  long long v44 = *(_OWORD *)(a1 + 152);
  long long v45 = v18;
  long long v19 = *(_OWORD *)(a1 + 104);
  long long v40 = *(_OWORD *)(a1 + 88);
  long long v41 = v19;
  id v20 = v15;
  sub_10C7C(&qword_122BB8);
  uint64_t v21 = sub_E6E10();
  uint64_t v22 = sub_73704(v21);
  uint64_t v24 = v23;
  sub_7377C();
  uint64_t v25 = sub_737D8();
  sub_737FC(v22, v24, (uint64_t)v5, v25, v26 & 1, (uint64_t)v20, (uint64_t)&v50, v8);
  id v27 = *(void **)(a1 + 8);
  type metadata accessor for GCSPreferencesStore();
  sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = sub_E6100();
    sub_4CCDC((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    uint64_t v30 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    uint64_t *v30 = v29;
    v30[1] = (uint64_t)v27;
    sub_4CD44((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    id v31 = [*(id *)a1 localizedName];
    uint64_t v32 = sub_E7110();
    uint64_t v34 = v33;

    *(void *)&long long v40 = v32;
    *((void *)&v40 + 1) = v34;
    sub_4C658();
    sub_187B0();
    sub_E69E0();
    swift_bridgeObjectRelease();
    sub_4CDA4((uint64_t)v11, &qword_1236C0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v39, v14, v38);
  }
  else
  {
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_4A4E4@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0xD00000000000001FLL, (void *)0x80000000000F1F50);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_4A554(id *a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v10 - v6;
  id v8 = [*a1 baseProfile];
  sub_E0510((uint64_t)v7);

  type metadata accessor for GCSControllerView();
  sub_4CCDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_1235B0);
  sub_E6D30();
  return sub_4CD44((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

uint64_t sub_4A664()
{
  return sub_47AD0((void (*)(void))type metadata accessor for GCSPreferencesStore, (unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
}

uint64_t sub_4A6AC()
{
  return sub_47AD0((void (*)(void))type metadata accessor for BluetoothManager, &qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
}

uint64_t sub_4A6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12)
{
  int v34 = a8;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v31 = a5;
  long long v30 = a10;
  uint64_t v17 = type metadata accessor for GCSProfileParams();
  uint64_t v18 = __chkstk_darwin(v17);
  id v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v30 - v21;
  *(_OWORD *)(a9 + 64) = v30;
  long long v23 = *(_OWORD *)(a12 + 112);
  *(_OWORD *)(a9 + 184) = *(_OWORD *)(a12 + 96);
  *(_OWORD *)(a9 + 20sub_E59A4(2, 18, 1, 0) = v23;
  *(_OWORD *)(a9 + 216) = *(_OWORD *)(a12 + 128);
  long long v24 = *(_OWORD *)(a12 + 48);
  *(_OWORD *)(a9 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a12 + 32);
  *(_OWORD *)(a9 + 136) = v24;
  long long v25 = *(_OWORD *)(a12 + 80);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)(a12 + 64);
  *(_OWORD *)(a9 + 168) = v25;
  long long v26 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 88) = *(_OWORD *)a12;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v27 = v32;
  *(void *)(a9 + 32) = v31;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = v27;
  *(void *)(a9 + 48) = v33;
  *(unsigned char *)(a9 + 56) = v34;
  *(void *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a11;
  *(void *)(a9 + 232) = *(void *)(a12 + 144);
  *(_OWORD *)(a9 + 104) = v26;
  char v35 = 0;
  sub_E6D10();
  uint64_t v28 = v37;
  *(unsigned char *)(a9 + 24sub_E59A4(2, 18, 1, 0) = v36;
  *(void *)(a9 + 248) = v28;
  type metadata accessor for GCSControllerView();
  sub_DFD34((uint64_t)v22);
  sub_4CCDC((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  return sub_4CD44((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

uint64_t sub_4A8C8()
{
  return sub_E69D0();
}

uint64_t type metadata accessor for GCSControllerView()
{
  uint64_t result = qword_127710;
  if (!qword_127710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4A934@<X0>(uint64_t a1@<X8>)
{
  return sub_49334(*(void **)(v1 + 16), a1);
}

uint64_t sub_4A93C()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSControllerView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (id *)(v0 + v3);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = (char *)v6 + v1[13];
  uint64_t v8 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_4AB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSControllerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4ABAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for GCSControllerView() - 8);
  uint64_t v2 = (id *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_4A554(v2);
}

uint64_t sub_4AC0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_4AC28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for GCSControllerInfoRowView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for GCSControllerInfoRowView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for GCSControllerInfoRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v7;
  id v8 = v3;
  id v9 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v10 = v7;
  return a1;
}

uint64_t assignWithCopy for GCSControllerInfoRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  id v10 = *(void **)(a2 + 64);
  uint64_t v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for GCSControllerInfoRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerInfoRowView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerInfoRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerInfoRowView()
{
  return &type metadata for GCSControllerInfoRowView;
}

char *sub_4AF88(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v7 = a2[1];
    id v6 = a2[2];
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = v6;
    id v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    id v9 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v9;
    a1[56] = *((unsigned char *)a2 + 56);
    id v10 = a2[9];
    *((void *)a1 + 8) = a2[8];
    *((void *)a1 + 9) = v10;
    long long v42 = a2[10];
    long long v43 = a2[11];
    *((void *)a1 + 1sub_E59A4(2, 18, 1, 0) = v42;
    *((void *)a1 + 11) = v43;
    long long v44 = a2[13];
    *((void *)a1 + 12) = a2[12];
    *((void *)a1 + 13) = v44;
    *((void *)a1 + 14) = a2[14];
    *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 15);
    uint64_t v11 = a2[18];
    *((void *)a1 + 17) = a2[17];
    *((void *)a1 + 18) = v11;
    id v12 = a2[20];
    *((void *)a1 + 19) = a2[19];
    *((void *)a1 + 2sub_E59A4(2, 18, 1, 0) = v12;
    uint64_t v13 = a2[22];
    *((void *)a1 + 21) = a2[21];
    *((void *)a1 + 22) = v13;
    long long v45 = a2[24];
    *((void *)a1 + 23) = a2[23];
    *((void *)a1 + 24) = v45;
    uint64_t v49 = a2[26];
    *((void *)a1 + 25) = a2[25];
    *((void *)a1 + 26) = v49;
    *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
    long long v48 = a2[28];
    uint64_t v50 = a2[29];
    *((void *)a1 + 28) = v48;
    *((void *)a1 + 29) = v50;
    a1[240] = *((unsigned char *)a2 + 240);
    uint64_t v14 = *(int *)(a3 + 44);
    id v15 = &a1[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    *((void *)a1 + 31) = a2[31];
    uint64_t v47 = sub_E6050();
    long long v46 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
    uint64_t v17 = v4;
    uint64_t v18 = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v19 = v42;
    swift_retain();
    swift_retain();
    id v20 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = v48;
    swift_bridgeObjectRetain();
    swift_retain();
    v46(v15, v16, v47);
    uint64_t v22 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v23 = v22[5];
    long long v24 = &v15[v23];
    long long v25 = (uint64_t *)(v16 + v23);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *(void *)long long v24 = v27;
    *((void *)v24 + 1) = v26;
    uint64_t v28 = v22[6];
    uint64_t v29 = &v15[v28];
    long long v30 = (void *)(v16 + v28);
    uint64_t v31 = v30[1];
    *(void *)uint64_t v29 = *v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v22[7];
    uint64_t v33 = &v15[v32];
    int v34 = (void *)(v16 + v32);
    uint64_t v35 = v34[1];
    *(void *)uint64_t v33 = *v34;
    *((void *)v33 + 1) = v35;
    v15[v22[8]] = *(unsigned char *)(v16 + v22[8]);
    v15[v22[9]] = *(unsigned char *)(v16 + v22[9]);
    uint64_t v36 = v22[10];
    uint64_t v37 = &v15[v36];
    uint64_t v38 = (void *)(v16 + v36);
    uint64_t v39 = v38[1];
    *(void *)uint64_t v37 = *v38;
    *((void *)v37 + 1) = v39;
    *(void *)&v15[v22[11]] = *(void *)(v16 + v22[11]);
    v15[v22[12]] = *(unsigned char *)(v16 + v22[12]);
    *(void *)&v15[v22[13]] = *(void *)(v16 + v22[13]);
    *(void *)&v15[v22[14]] = *(void *)(v16 + v22[14]);
    *(void *)&v15[v22[15]] = *(void *)(v16 + v22[15]);
    v15[v22[16]] = *(unsigned char *)(v16 + v22[16]);
    v15[v22[17]] = *(unsigned char *)(v16 + v22[17]);
    *(void *)&v15[v22[18]] = *(void *)(v16 + v22[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10C7C(&qword_1235B0);
    *(void *)&v15[*(int *)(v40 + 28)] = *(void *)(v16 + *(int *)(v40 + 28));
  }
  swift_retain();
  return v5;
}

uint64_t sub_4B2F8(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);

  return swift_release();
}

uint64_t sub_4B488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v40 = *(void **)(a2 + 80);
  uint64_t v41 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v40;
  *(void *)(a1 + 88) = v41;
  long long v42 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v42;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v9;
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v10;
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  uint64_t v43 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v43;
  uint64_t v47 = *(void *)(a2 + 208);
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v47;
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  long long v46 = *(void **)(a2 + 224);
  uint64_t v48 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = v46;
  *(void *)(a1 + 232) = v48;
  *(unsigned char *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 240);
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  uint64_t v45 = sub_E6050();
  long long v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
  id v15 = v5;
  id v16 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v17 = v40;
  swift_retain();
  swift_retain();
  id v18 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = v46;
  swift_bridgeObjectRetain();
  swift_retain();
  v44(v13, v14, v45);
  id v20 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v21 = v20[5];
  uint64_t v22 = (void *)(v13 + v21);
  uint64_t v23 = (uint64_t *)(v14 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  uint64_t v26 = v20[6];
  uint64_t v27 = (void *)(v13 + v26);
  uint64_t v28 = (void *)(v14 + v26);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = v20[7];
  uint64_t v31 = (void *)(v13 + v30);
  uint64_t v32 = (void *)(v14 + v30);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  *(unsigned char *)(v13 + v20[8]) = *(unsigned char *)(v14 + v20[8]);
  *(unsigned char *)(v13 + v20[9]) = *(unsigned char *)(v14 + v20[9]);
  uint64_t v34 = v20[10];
  uint64_t v35 = (void *)(v13 + v34);
  uint64_t v36 = (void *)(v14 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  *(void *)(v13 + v20[11]) = *(void *)(v14 + v20[11]);
  *(unsigned char *)(v13 + v20[12]) = *(unsigned char *)(v14 + v20[12]);
  *(void *)(v13 + v20[13]) = *(void *)(v14 + v20[13]);
  *(void *)(v13 + v20[14]) = *(void *)(v14 + v20[14]);
  *(void *)(v13 + v20[15]) = *(void *)(v14 + v20[15]);
  *(unsigned char *)(v13 + v20[16]) = *(unsigned char *)(v14 + v20[16]);
  *(unsigned char *)(v13 + v20[17]) = *(unsigned char *)(v14 + v20[17]);
  *(void *)(v13 + v20[18]) = *(void *)(v14 + v20[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_10C7C(&qword_1235B0);
  *(void *)(v13 + *(int *)(v38 + 28)) = *(void *)(v14 + *(int *)(v38 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_4B7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v12 = *(void **)(a2 + 80);
  uint64_t v13 = *(void **)(a1 + 80);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v12;
  id v14 = v12;

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  id v15 = *(void **)(a1 + 104);
  id v16 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v16;
  id v17 = v16;

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  id v18 = *(void **)(a1 + 224);
  id v19 = *(void **)(a2 + 224);
  *(void *)(a1 + 224) = v19;
  id v20 = v19;

  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_retain();
  swift_release();
  uint64_t v21 = *(int *)(a3 + 44);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v26 = v25[5];
  uint64_t v27 = (void *)(v22 + v26);
  uint64_t v28 = (void *)(v23 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v25[6];
  uint64_t v30 = (void *)(v22 + v29);
  uint64_t v31 = (void *)(v23 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v25[7];
  uint64_t v33 = (void *)(v22 + v32);
  uint64_t v34 = (void *)(v23 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + v25[8]) = *(unsigned char *)(v23 + v25[8]);
  *(unsigned char *)(v22 + v25[9]) = *(unsigned char *)(v23 + v25[9]);
  uint64_t v35 = v25[10];
  uint64_t v36 = (void *)(v22 + v35);
  uint64_t v37 = (void *)(v23 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v22 + v25[11]) = *(void *)(v23 + v25[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + v25[12]) = *(unsigned char *)(v23 + v25[12]);
  *(void *)(v22 + v25[13]) = *(void *)(v23 + v25[13]);
  *(void *)(v22 + v25[14]) = *(void *)(v23 + v25[14]);
  *(void *)(v22 + v25[15]) = *(void *)(v23 + v25[15]);
  *(unsigned char *)(v22 + v25[16]) = *(unsigned char *)(v23 + v25[16]);
  *(unsigned char *)(v22 + v25[17]) = *(unsigned char *)(v23 + v25[17]);
  *(void *)(v22 + v25[18]) = *(void *)(v23 + v25[18]);
  uint64_t v38 = sub_10C7C(&qword_1235B0);
  *(void *)(v22 + *(int *)(v38 + 28)) = *(void *)(v23 + *(int *)(v38 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_4BBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v4 = *(_OWORD *)(a2 + 120);
  long long v5 = *(_OWORD *)(a2 + 136);
  long long v6 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v6;
  *(_OWORD *)(a1 + 136) = v5;
  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v4;
  long long v7 = *(_OWORD *)(a2 + 184);
  long long v8 = *(_OWORD *)(a2 + 200);
  long long v9 = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v9;
  *(_OWORD *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v8;
  *(_OWORD *)(a1 + 184) = v7;
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 240);
  uint64_t v13 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  id v14 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)(v11 + v14[5]) = *(_OWORD *)(v12 + v14[5]);
  *(_OWORD *)(v11 + v14[6]) = *(_OWORD *)(v12 + v14[6]);
  *(_OWORD *)(v11 + v14[7]) = *(_OWORD *)(v12 + v14[7]);
  *(unsigned char *)(v11 + v14[8]) = *(unsigned char *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(_OWORD *)(v11 + v14[10]) = *(_OWORD *)(v12 + v14[10]);
  *(void *)(v11 + v14[11]) = *(void *)(v12 + v14[11]);
  *(unsigned char *)(v11 + v14[12]) = *(unsigned char *)(v12 + v14[12]);
  *(void *)(v11 + v14[13]) = *(void *)(v12 + v14[13]);
  *(void *)(v11 + v14[14]) = *(void *)(v12 + v14[14]);
  *(void *)(v11 + v14[15]) = *(void *)(v12 + v14[15]);
  *(unsigned char *)(v11 + v14[16]) = *(unsigned char *)(v12 + v14[16]);
  *(unsigned char *)(v11 + v14[17]) = *(unsigned char *)(v12 + v14[17]);
  *(void *)(v11 + v14[18]) = *(void *)(v12 + v14[18]);
  uint64_t v15 = sub_10C7C(&qword_1235B0);
  *(void *)(v11 + *(int *)(v15 + 28)) = *(void *)(v12 + *(int *)(v15 + 28));
  return a1;
}

uint64_t sub_4BDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v9;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  uint64_t v10 = *(void **)(a1 + 80);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v11 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  uint64_t v15 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);

  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_release();
  uint64_t v16 = *(int *)(a3 + 44);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  id v20 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v21 = v20[5];
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = (uint64_t *)(v18 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v20[6];
  uint64_t v27 = (void *)(v17 + v26);
  uint64_t v28 = (uint64_t *)(v18 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v20[7];
  uint64_t v32 = (void *)(v17 + v31);
  uint64_t v33 = (uint64_t *)(v18 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[8]) = *(unsigned char *)(v18 + v20[8]);
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  uint64_t v36 = v20[10];
  uint64_t v37 = (void *)(v17 + v36);
  uint64_t v38 = (uint64_t *)(v18 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(void *)(v17 + v20[11]) = *(void *)(v18 + v20[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[12]) = *(unsigned char *)(v18 + v20[12]);
  *(void *)(v17 + v20[13]) = *(void *)(v18 + v20[13]);
  *(void *)(v17 + v20[14]) = *(void *)(v18 + v20[14]);
  *(void *)(v17 + v20[15]) = *(void *)(v18 + v20[15]);
  *(unsigned char *)(v17 + v20[16]) = *(unsigned char *)(v18 + v20[16]);
  *(unsigned char *)(v17 + v20[17]) = *(unsigned char *)(v18 + v20[17]);
  *(void *)(v17 + v20[18]) = *(void *)(v18 + v20[18]);
  uint64_t v41 = sub_10C7C(&qword_1235B0);
  *(void *)(v17 + *(int *)(v41 + 28)) = *(void *)(v18 + *(int *)(v41 + 28));
  swift_release();
  return a1;
}

uint64_t sub_4C0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4C0F4);
}

uint64_t sub_4C0F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_1235B0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_4C1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4C1BC);
}

void *sub_4C1BC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_1235B0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_4C268()
{
  sub_4C330();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_4C330()
{
  if (!qword_123618)
  {
    type metadata accessor for GCSProfileParams();
    unint64_t v0 = sub_E6D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_123618);
    }
  }
}

uint64_t sub_4C388()
{
  return sub_4D468(&qword_123660, &qword_123668);
}

unint64_t sub_4C3C8()
{
  unint64_t result = qword_123670;
  if (!qword_123670)
  {
    sub_11B60(&qword_1235B8);
    sub_4C444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123670);
  }
  return result;
}

unint64_t sub_4C444()
{
  unint64_t result = qword_123678;
  if (!qword_123678)
  {
    sub_11B60(&qword_123598);
    sub_4D468(&qword_1235A8, &qword_1235A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123678);
  }
  return result;
}

__n128 sub_4C4E8@<Q0>(uint64_t a1@<X8>)
{
  id v3 = **(id **)(v1 + 16);
  sub_10C7C(&qword_122890);
  sub_E6E10();
  sub_10C7C(&qword_123590);
  sub_E6E10();
  type metadata accessor for GCSPreferencesStore();
  sub_4C728((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t v4 = sub_E63F0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8.n128_u64[0];
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v8.n128_u8[8];
  *(void *)(a1 + 48) = v7;
  __n128 result = v8;
  *(__n128 *)(a1 + 56) = v8;
  return result;
}

unint64_t sub_4C604()
{
  unint64_t result = qword_1236B8;
  if (!qword_1236B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1236B8);
  }
  return result;
}

unint64_t sub_4C658()
{
  unint64_t result = qword_1236C8;
  if (!qword_1236C8)
  {
    sub_11B60(&qword_1236C0);
    sub_4C728(&qword_1236D0, (void (*)(uint64_t))type metadata accessor for GCSControllerCustomizeControlsView);
    sub_4D468(&qword_1236D8, &qword_1236E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1236C8);
  }
  return result;
}

uint64_t sub_4C728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4C770()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_4C780(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_4C798(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_4C7FC(id result, uint64_t a2, void *a3, void *a4)
{
  if (a3 != (char *)&dword_0 + 1) {
    return sub_4C80C(result, a2, a3, a4);
  }
  return result;
}

id sub_4C80C(id result, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = result;
    swift_retain();
    swift_retain();
    id v6 = v5;
    id v7 = a3;
    return a4;
  }
  return result;
}

uint64_t sub_4C87C(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  if (a3 != (char *)&dword_0 + 1) {
    return sub_4C88C(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_4C88C(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = (void *)result;

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_4C8F0()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSControllerView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_bridgeObjectRelease();
  id v6 = (id *)(v0 + v3);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  id v7 = (char *)v6 + v1[13];
  uint64_t v8 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_4CB04()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for GCSControllerView() - 8) + 80);
  unint64_t v2 = *(void *)(v0 + 16);
  if (v2 >> 62) {
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_E7570())
  {
    uint64_t v0 = *(void *)(v0 + ((v1 + 24) & ~v1) + 24);
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v1 = 0;
      while (1)
      {
        uint64_t v4 = sub_E74E0();
        uint64_t v5 = v1 + 1;
        if (__OFADD__(v1, 1)) {
          break;
        }
        if (!v0) {
          goto LABEL_21;
        }
        uint64_t v6 = v4;
        swift_retain();
        sub_C73E4(v6);
        swift_release();
        swift_unknownObjectRelease();
        ++v1;
        if (v5 == v3) {
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          break;
        }
        uint64_t v1 = *(void *)(v2 + 8 * v7 + 32);
        if (!v0)
        {
          swift_retain();
LABEL_21:
          type metadata accessor for BluetoothManager();
          sub_4C728(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
          uint64_t result = sub_E63E0();
          __break(1u);
          return result;
        }
        swift_retain();
        uint64_t v9 = swift_retain();
        sub_C73E4(v9);
        swift_release();
        swift_release();
        ++v7;
        if (v8 == v3) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_13:

  return swift_bridgeObjectRelease();
}

uint64_t sub_4CCDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_4CD44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_4CDA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_4CE00(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v11 = *(_OWORD *)(a1 + 200);
  uint64_t v7 = *(void **)(a1 + 216);
  unint64_t v8 = *(unsigned int *)(a1 + 224) | ((unint64_t)*(unsigned __int8 *)(a1 + 228) << 32);
  char v9 = *(unsigned char *)(a1 + 229);
  sub_18804(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_4CF10(v19, v18, v17, v2, v3, v4, v5, v6, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((void **)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v7,
    v8,
    v9);
  return a1;
}

id sub_4CF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_retain();
    sub_18804(a12, a13, a14 & 1);
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    return sub_4CFE0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  }
}

id sub_4CFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  swift_retain();
  sub_18804(a12, a13, a14 & 1);
  id v21 = a16;
  swift_bridgeObjectRetain();
  sub_33578();

  return a21;
}

uint64_t sub_4D088(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v11 = *(_OWORD *)(a1 + 200);
  uint64_t v7 = *(void **)(a1 + 216);
  unint64_t v8 = *(unsigned int *)(a1 + 224) | ((unint64_t)*(unsigned __int8 *)(a1 + 228) << 32);
  char v9 = *(unsigned char *)(a1 + 229);
  sub_18814(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_4D198(v19, v18, v17, v2, v3, v4, v5, v6, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((void **)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v7,
    v8,
    v9);
  return a1;
}

void sub_4D198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_release();
    sub_18814(a12, a13, a14 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_4D264(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  }
}

void sub_4D264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  swift_release();
  sub_18814(a12, a13, a14 & 1);
  swift_bridgeObjectRelease();

  sub_333C4();
}

uint64_t sub_4D308(uint64_t result)
{
  *(unsigned char *)(result + 173) = 1;
  return result;
}

unint64_t sub_4D314()
{
  unint64_t result = qword_123718;
  if (!qword_123718)
  {
    sub_11B60(&qword_123710);
    sub_4D3A8(&qword_123720, &qword_123728, &qword_123730, &qword_123738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123718);
  }
  return result;
}

uint64_t sub_4D3A8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    sub_4D468(a3, a4);
    sub_4D468(&qword_123478, &qword_123480);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4D468(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4D4AC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t, char))
{
  char v4 = *(unsigned char *)(a1 + 173);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(unsigned int *)(a1 + 168) | ((unint64_t)*(unsigned __int8 *)(a1 + 172) << 32),
    v4);
  return a1;
}

uint64_t sub_4D52C(uint64_t result)
{
  *(unsigned char *)(result + 172) = 1;
  return result;
}

uint64_t sub_4D538(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_4D59C(uint64_t result)
{
  *(unsigned char *)(result + 173) = 0;
  return result;
}

uint64_t sub_4D5A4(uint64_t result)
{
  *(unsigned char *)(result + 172) = 0;
  return result;
}

void *sub_4D5B0()
{
  return &unk_ED350;
}

uint64_t sub_4D5BC()
{
  return 10256610;
}

void *sub_4D5CC()
{
  return &unk_ED360;
}

uint64_t sub_4D5D8()
{
  return 10322146;
}

void *sub_4D5E8()
{
  return &unk_ED370;
}

uint64_t sub_4D5F4()
{
  return 39;
}

void *sub_4D600()
{
  return &unk_ED380;
}

uint64_t sub_4D60C()
{
  return 10060002;
}

const char *sub_4D61C()
{
  return "iPhone";
}

uint64_t sub_4D628()
{
  return 0x656E6F685069;
}

void *sub_4D63C()
{
  return &unk_113C40;
}

unint64_t sub_4D648()
{
  return 0xD00000000000004CLL;
}

const char *sub_4D664()
{
  return "&btAddress=";
}

uint64_t sub_4D670()
{
  return 0x6572646441746226;
}

void *sub_4D690()
{
  return &unk_113C50;
}

unint64_t sub_4D69C()
{
  return 0xD000000000000036;
}

void *sub_4D6B8()
{
  return &unk_113C60;
}

unint64_t sub_4D6C4()
{
  return 0xD00000000000003FLL;
}

void *sub_4D6E0()
{
  return &unk_113C70;
}

unint64_t sub_4D6EC()
{
  return 0xD00000000000003CLL;
}

void *sub_4D708()
{
  return &unk_113C80;
}

unint64_t sub_4D714()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_4D730()
{
  return v0;
}

uint64_t sub_4D738()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_4D748()
{
  return swift_allocObject();
}

uint64_t sub_4D758()
{
  return v0;
}

uint64_t type metadata accessor for Constants()
{
  return self;
}

uint64_t sub_4D784()
{
  return sub_E6130();
}

uint64_t sub_4D7CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_4D840@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  *a2 = result;
  return result;
}

uint64_t sub_4D88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 96);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_4D8E0()
{
  return sub_E6180();
}

void (*sub_4D950(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_4D9DC;
}

void sub_4D9DC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

void *sub_4DA44()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_4DA50()
{
  return swift_endAccess();
}

uint64_t sub_4DAB4(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_1237F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_10C7C(&qword_1237E8);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_4DBE0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_1237F0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings11GCSAppStore__supportedApps;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_1237E8);
  sub_E6140();
  swift_endAccess();
  return sub_4DCF0;
}

void sub_4DCF0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_4DE60()
{
  uint64_t v0 = swift_allocObject();
  sub_4DE98();
  return v0;
}

id sub_4DE98()
{
  uint64_t v1 = sub_E5F20();
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10C7C(&qword_1237E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings11GCSAppStore__supportedApps;
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10C7C(&qword_1237E0);
  sub_E6130();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  id v9 = [self enumeratorWithOptions:0];
  uint64_t v45 = sub_4E470;
  uint64_t v46 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v43 = sub_4E490;
  long long v44 = &unk_113CA0;
  uint64_t v10 = _Block_copy(&aBlock);
  [v9 setFilter:v10];
  _Block_release(v10);
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  id result = (id)SBSCopyDisplayIdentifiers();
  id v35 = result;
  if (result)
  {
    id v31 = v9;
    sub_E72D0();
    sub_E5F10();
    if (v44)
    {
      p_base_props = &ResourceBundleClass.base_props;
      uint64_t v36 = (char *)&type metadata for Any + 8;
      uint64_t v37 = v3;
      do
      {
        sub_428D8(&aBlock, v40);
        sub_4E740(0, &qword_1237F8);
        if (swift_dynamicCast())
        {
          id v13 = v39;
          id v14 = objc_msgSend(v39, (SEL)p_base_props[62]);
          if (v14)
          {
            long long v15 = v14;
            id v16 = [v13 supportedGameControllers];
            sub_4E740(0, &qword_123800);
            unint64_t v17 = sub_E7210();

            if (v17 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v18 = sub_E7570();
              swift_bridgeObjectRelease();
              if (v18)
              {
LABEL_10:
                id v38 = v15;
                sub_4E740(0, &qword_123808);
                uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                uint64_t v20 = 4;
                while (1)
                {
                  if ((v17 & 0xC000000000000001) != 0) {
                    id result = (id)sub_E74E0();
                  }
                  else {
                    id result = *(id *)(v17 + 8 * v20);
                  }
                  id v21 = result;
                  uint64_t v22 = v20 - 3;
                  if (__OFADD__(v20 - 4, 1))
                  {
                    __break(1u);
                    goto LABEL_28;
                  }
                  NSString v23 = sub_E70D0();
                  id v24 = [v21 objectForKey:v23 ofClass:ObjCClassFromMetadata];

                  if (v24) {
                    break;
                  }

                  memset(v40, 0, sizeof(v40));
                  sub_4EED8((uint64_t)v40, &qword_125300);
                  ++v20;
                  if (v22 == v18)
                  {

                    swift_bridgeObjectRelease();
LABEL_23:
                    uint64_t v3 = v37;
                    p_base_props = (__objc2_prop_list **)(&ResourceBundleClass + 64);
                    goto LABEL_5;
                  }
                }
                sub_E7440();
                swift_unknownObjectRelease();

                swift_bridgeObjectRelease();
                sub_4EED8((uint64_t)v40, &qword_125300);
                id v25 = v38;
                unsigned __int8 v26 = [v35 containsObject:v38];

                if ((v26 & 1) == 0)
                {

                  goto LABEL_23;
                }
                id v27 = v13;
                sub_E71F0();
                uint64_t v3 = v37;
                p_base_props = (__objc2_prop_list **)(&ResourceBundleClass + 64);
                if (*(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                               + (v41 & 0xFFFFFFFFFFFFFF8)) >> 1)
                  sub_E7240();
                sub_E7260();
                sub_E7230();

                goto LABEL_5;
              }
            }
            else
            {
              uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
              if (v18) {
                goto LABEL_10;
              }
            }

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
LABEL_5:
        sub_E5F10();
      }
      while (v44);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v33);
    unint64_t v28 = v41;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long aBlock = v28;
    uint64_t v29 = v34;
    swift_retain();
    sub_E6180();

    return (id)v29;
  }
  else
  {
LABEL_28:
    __break(1u);
  }
  return result;
}

id sub_4E470(void *a1)
{
  return [a1 supportsControllerUserInteraction];
}

uint64_t sub_4E490(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void *sub_4E4E8(void *a1, id a2)
{
  id v4 = [a2 games];
  sub_4E740(0, (unint64_t *)&qword_122828);
  unint64_t v5 = sub_E7210();

  id v6 = a1;
  uint64_t v7 = sub_4E77C(v5, v6);
  swift_bridgeObjectRelease();

  unint64_t v8 = (*(uint64_t (**)(void))(*(void *)v2 + 88))();
  id v9 = sub_4EB44(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_4E5DC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings11GCSAppStore__supportedApps;
  uint64_t v2 = sub_10C7C(&qword_1237E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_4E644()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings11GCSAppStore__supportedApps;
  uint64_t v2 = sub_10C7C(&qword_1237E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_4E6E8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GCSAppStore();
  uint64_t result = sub_E6110();
  *a1 = result;
  return result;
}

uint64_t sub_4E728(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t sub_4E738()
{
  return swift_release();
}

uint64_t sub_4E740(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

char *sub_4E77C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v38 = a2;
  uint64_t v5 = sub_10C7C(&qword_123560);
  __chkstk_darwin(v5 - 8);
  id v39 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_E7570())
  {
    v35[1] = v3;
    unint64_t v37 = a1 & 0xC000000000000001;
    unint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v9 = 4;
    uint64_t v36 = v7;
    while (1)
    {
      uint64_t v3 = v9 - 4;
      id v10 = v37 ? (id)sub_E74E0() : *(id *)(a1 + 8 * v9);
      long long v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      uint64_t v40 = v8;
      unint64_t v13 = a1;
      id v14 = [v10 controllerToProfileMappings];
      uint64_t v15 = sub_E6050();
      uint64_t v16 = sub_E7050();

      id v17 = [v38 persistentIdentifier];
      uint64_t v18 = sub_E7110();
      uint64_t v20 = v19;

      if (*(void *)(v16 + 16) && (unint64_t v21 = sub_21CB8(v18, v20), (v22 & 1) != 0))
      {
        uint64_t v23 = *(void *)(v15 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v39, *(void *)(v16 + 56) + *(void *)(v23 + 72) * v21, v15);
        uint64_t v24 = 0;
      }
      else
      {
        uint64_t v23 = *(void *)(v15 - 8);
        uint64_t v24 = 1;
      }
      a1 = v13;
      uint64_t v25 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v39, v24, 1, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v15);
      sub_4EED8(v25, &qword_123560);
      if (v26 == 1)
      {

        unint64_t v8 = v40;
      }
      else
      {
        id v27 = [v11 bundleIdentifier];
        uint64_t v28 = sub_E7110();
        uint64_t v30 = v29;

        unint64_t v8 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v8 = sub_3F588(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v32 = *((void *)v8 + 2);
        unint64_t v31 = *((void *)v8 + 3);
        if (v32 >= v31 >> 1) {
          unint64_t v8 = sub_3F588((char *)(v31 > 1), v32 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v32 + 1;
        uint64_t v33 = &v8[16 * v32];
        *((void *)v33 + 4) = v28;
        *((void *)v33 + 5) = v30;
      }
      ++v9;
      if (v12 == v36)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

void *sub_4EB44(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      uint64_t v22 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v23 = v3 & 0xC000000000000001;
      uint64_t v20 = a2 + 7;
      unint64_t v21 = (void **)(v3 + 32);
      while (1)
      {
        if (v23)
        {
          uint64_t v6 = (void *)sub_E74E0();
        }
        else
        {
          if (v5 >= *(void *)(v22 + 16))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          uint64_t v6 = v21[v5];
        }
        uint64_t v7 = v6;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_33;
        }
        id v9 = [v6 bundleIdentifier];
        if (v9) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return v25;
        }
      }
      id v10 = v9;
      uint64_t v11 = sub_E7110();
      unint64_t v3 = (unint64_t)v12;

      uint64_t v24 = a2[2];
      if (!v24) {
        goto LABEL_28;
      }
      BOOL v13 = a2[4] == v11 && a2[5] == v3;
      if (v13 || (sub_E7620() & 1) != 0) {
        break;
      }
      if (v24 == 1)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        sub_E7510();
        sub_E7540();
        sub_E7550();
        unint64_t v3 = (unint64_t)&v25;
        sub_E7520();
        goto LABEL_5;
      }
      id v14 = v20;
      uint64_t v15 = 1;
      while (1)
      {
        uint64_t v16 = a2;
        a2 = (void *)v4;
        uint64_t v17 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        BOOL v18 = *(v14 - 1) == v11 && *v14 == v3;
        if (v18 || (sub_E7620() & 1) != 0)
        {

          swift_bridgeObjectRelease();
          uint64_t v4 = (uint64_t)a2;
          a2 = v16;
          goto LABEL_5;
        }
        v14 += 2;
        ++v15;
        BOOL v13 = v17 == v24;
        uint64_t v4 = (uint64_t)a2;
        a2 = v16;
        if (v13) {
          goto LABEL_28;
        }
      }
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v4 = sub_E7570();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }

    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_4ED8C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_4ED98()
{
  return type metadata accessor for GCSAppStore();
}

uint64_t type metadata accessor for GCSAppStore()
{
  uint64_t result = qword_1277D0;
  if (!qword_1277D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_4EDEC()
{
  sub_4EE7C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_4EE7C()
{
  if (!qword_123838)
  {
    sub_11B60(&qword_1237E0);
    unint64_t v0 = sub_E6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_123838);
    }
  }
}

uint64_t sub_4EED8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_4EF40()
{
  return sub_4EFB8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.wrappedValue.getter);
}

id (*sub_4EF58())()
{
  return sub_4EF74;
}

id sub_4EF74()
{
  return sub_A588C();
}

uint64_t sub_4EFA0()
{
  return sub_4EFB8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.projectedValue.getter);
}

uint64_t sub_4EFB8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = *((unsigned __int8 *)v1 + 16);
  uint64_t v5 = type metadata accessor for GCSPreferencesStore();
  uint64_t v6 = sub_54840((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return a1(v2, v3, v4, v5, v6);
}

uint64_t sub_4F05C()
{
  return sub_4F0D4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.wrappedValue.getter);
}

uint64_t (*sub_4F074())()
{
  return sub_4F090;
}

uint64_t sub_4F090()
{
  sub_11C20();

  return swift_retain();
}

uint64_t sub_4F0BC()
{
  return sub_4F0D4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&StateObject.projectedValue.getter);
}

uint64_t sub_4F0D4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v5 = type metadata accessor for BluetoothManager();
  uint64_t v6 = sub_54840(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);

  return a1(v2, v3, v4, v5, v6);
}

uint64_t sub_4F17C()
{
  return 0;
}

uint64_t sub_4F184(uint64_t a1)
{
  return sub_4F1AC(a1, (unint64_t *)&qword_124E30);
}

uint64_t sub_4F198(uint64_t a1)
{
  return sub_4F1AC(a1, (unint64_t *)&qword_122828);
}

uint64_t sub_4F1AC(uint64_t a1, unint64_t *a2)
{
  sub_4F23C(0, a2);
  sub_E6D10();
  return v3;
}

id sub_4F1E8()
{
  id v0 = [self defaultGame];

  return v0;
}

uint64_t sub_4F228(uint64_t a1)
{
  return sub_4F1AC(a1, (unint64_t *)&qword_124E50);
}

uint64_t sub_4F23C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_4F278()
{
  id v0 = [self defaultProfile];

  return v0;
}

uint64_t sub_4F2BC()
{
  return 0;
}

uint64_t sub_4F2C8()
{
  return 0;
}

uint64_t sub_4F2D4()
{
  return 0;
}

uint64_t sub_4F2E0()
{
  sub_10C7C(&qword_122B70);
  sub_E6D10();
  return v1;
}

uint64_t sub_4F320()
{
  return 0;
}

uint64_t sub_4F328(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2);
  sub_4F988(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  return sub_4F9F0(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

__n128 sub_4F3F0@<Q0>(_OWORD *a1@<X8>)
{
  sub_E6D10();
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  __n128 result = v4;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

__n128 sub_4F47C@<Q0>(uint64_t a1@<X8>)
{
  sub_57E7C((uint64_t)v6);
  long long v2 = v6[7];
  *(_OWORD *)(a1 + 96) = v6[6];
  *(_OWORD *)(a1 + 112) = v2;
  *(void *)(a1 + 128) = v7;
  long long v3 = v6[3];
  *(_OWORD *)(a1 + 32) = v6[2];
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = v6[5];
  *(_OWORD *)(a1 + 64) = v6[4];
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v4;
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a1 = v6[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_4F4E8()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_4F524()
{
  return 0;
}

uint64_t sub_4F52C(uint64_t a1)
{
  return sub_4F1AC(a1, (unint64_t *)&qword_124E30);
}

id sub_4F540()
{
  id v0 = objc_allocWithZone((Class)GCSController);

  return [v0 initDummy];
}

uint64_t sub_4F578(uint64_t a1)
{
  return sub_4F1AC(a1, (unint64_t *)&qword_124E30);
}

uint64_t sub_4F58C()
{
  return 0;
}

uint64_t sub_4F598()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for GCSEntryView() + 76));
  sub_4F628(v1);
  return v1;
}

uint64_t type metadata accessor for GCSEntryView()
{
  uint64_t result = qword_127860;
  if (!qword_127860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4F628(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_4F638(uint64_t a1, uint64_t a2)
{
  long long v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for GCSEntryView() + 76));
  uint64_t result = sub_4F680(*v5);
  uint64_t *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_4F680(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t (*sub_4F690())()
{
  return nullsub_14;
}

BOOL sub_4F6DC()
{
  uint64_t v1 = type metadata accessor for GCSEntryView();
  __chkstk_darwin(v1 - 8);
  long long v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSPreferencesStore();
  sub_54840((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  long long v4 = (void *)sub_E6270();
  id v5 = [v4 controllers];

  sub_4F23C(0, (unint64_t *)&qword_124E30);
  unint64_t v6 = sub_E7210();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  sub_4F988(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
  if (v7 <= 0)
  {
    type metadata accessor for BluetoothManager();
    sub_54840(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
    uint64_t v9 = *(void *)sub_E6270();
    unint64_t v10 = (*(uint64_t (**)(void))(v9 + 1160))();
    swift_release();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_E7570();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    BOOL v8 = v11 < 1;
  }
  else
  {
    BOOL v8 = 0;
  }
  sub_4F9F0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
  return v8;
}

uint64_t sub_4F988(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_4F9F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_4FA50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10C7C(&qword_1238F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (_OWORD *)((char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_E66C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for GCSEntryView();
  uint64_t v83 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v84 = v10;
  uint64_t v91 = (uint64_t)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = (uint64_t (*)(void))sub_10C7C(&qword_1238F8);
  uint64_t v79 = *((void *)v80 - 1);
  __chkstk_darwin(v80);
  uint64_t v12 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = (void *)sub_10C7C(&qword_123900);
  uint64_t v81 = *(v82 - 1);
  __chkstk_darwin(v82);
  id v14 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10C7C(&qword_123908);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10C7C(&qword_123910);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v103 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10C7C(&qword_123918);
  uint64_t v93 = *(void *)(v17 - 8);
  uint64_t v94 = v17;
  __chkstk_darwin(v17);
  uint64_t v92 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10C7C(&qword_123920);
  uint64_t v97 = *(void *)(v19 - 8);
  uint64_t v98 = v19;
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10C7C(&qword_123928);
  __chkstk_darwin(v95);
  uint64_t v100 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10C7C(&qword_123930);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v99 = (uint64_t)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v101 = (uint64_t)v71 - v25;
  BOOL v26 = sub_4F6DC();
  if (v26)
  {
    sub_B65C4((uint64_t)&v106);
    long long v27 = v107;
    _OWORD *v5 = v106;
    v5[1] = v27;
    uint64_t v5[2] = v108;
    swift_storeEnumTagMultiPayload();
    sub_51FE4();
    sub_52378();
    return sub_E6610();
  }
  else
  {
    uint64_t v78 = a1;
    uint64_t v29 = __chkstk_darwin(v26);
    uint64_t v77 = v3;
    __chkstk_darwin(v29);
    uint64_t v72 = v9;
    long long v76 = v5;
    sub_10C7C(&qword_123938);
    uint64_t v102 = v1;
    uint64_t v73 = v6;
    uint64_t v75 = v22;
    sub_10C7C(&qword_123940);
    uint64_t v74 = v7;
    sub_52334(&qword_123948, &qword_123938);
    sub_52334(&qword_123950, &qword_123940);
    sub_E6880();
    *(void *)&long long v106 = sub_B7108(0x53474E4954544553, (void *)0xEE00454C5449545FLL);
    *((void *)&v106 + 1) = v30;
    uint64_t v31 = sub_52334(&qword_123958, &qword_1238F8);
    unint64_t v32 = sub_187B0();
    uint64_t v33 = v80;
    sub_E69E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t (*)(void)))(v79 + 8))(v12, v33);
    *(void *)&long long v106 = v33;
    *((void *)&v106 + 1) = &type metadata for String;
    *(void *)&long long v107 = v31;
    *((void *)&v107 + 1) = v32;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    id v35 = v85;
    uint64_t v36 = v82;
    sub_E6930();
    (*(void (**)(char *, void *))(v81 + 8))(v14, v36);
    uint64_t v37 = v102;
    uint64_t v38 = *(void *)(v102 + 136);
    char v104 = *(unsigned char *)(v102 + 128);
    uint64_t v105 = v38;
    uint64_t v81 = sub_10C7C(&qword_122A50);
    sub_E6D40();
    v71[1] = v107;
    uint64_t v80 = (uint64_t (*)(void))type metadata accessor for GCSEntryView;
    uint64_t v39 = v91;
    sub_4F988(v37, v91, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
    uint64_t v40 = *(unsigned __int8 *)(v83 + 80);
    uint64_t v41 = (v40 + 16) & ~v40;
    v84 += v41;
    uint64_t v83 = v40 | 7;
    uint64_t v42 = swift_allocObject();
    sub_519AC(v39, v42 + v41);
    uint64_t v43 = sub_10C7C(&qword_123960);
    *(void *)&long long v106 = v36;
    *((void *)&v106 + 1) = OpaqueTypeConformance2;
    uint64_t v79 = swift_getOpaqueTypeConformance2();
    uint64_t v82 = &protocol conformance descriptor for NavigationView<A>;
    uint64_t v44 = sub_52334(&qword_123968, &qword_123960);
    uint64_t v45 = v87;
    sub_E6A60();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v35, v45);
    uint64_t v46 = v102;
    uint64_t v47 = v102 + *(int *)(v88 + 64);
    char v48 = *(unsigned char *)v47;
    uint64_t v49 = *(void *)(v47 + 8);
    char v104 = v48;
    uint64_t v105 = v49;
    sub_E6D40();
    sub_4F988(v46, v39, v80);
    uint64_t v50 = swift_allocObject();
    sub_519AC(v39, v50 + v41);
    uint64_t v51 = sub_10C7C(&qword_123970);
    *(void *)&long long v106 = v45;
    *((void *)&v106 + 1) = v43;
    *(void *)&long long v107 = v79;
    *((void *)&v107 + 1) = v44;
    *(void *)&long long v70 = swift_getOpaqueTypeConformance2();
    *((void *)&v70 + 1) = sub_52334(&qword_123978, &qword_123970);
    uint64_t v52 = v92;
    uint64_t v53 = v90;
    uint64_t v54 = v103;
    sub_E6A60();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v54, v53);
    uint64_t v55 = v72;
    sub_E66B0();
    *(void *)&long long v106 = v53;
    *((void *)&v106 + 1) = v51;
    long long v107 = v70;
    swift_getOpaqueTypeConformance2();
    sub_54840(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
    uint64_t v56 = v96;
    uint64_t v57 = v94;
    uint64_t v58 = v73;
    sub_E6A90();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v55, v58);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v52, v57);
    type metadata accessor for GCSPreferencesStore();
    sub_54840((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t v59 = sub_E6270();
    uint64_t v60 = sub_E6100();
    uint64_t v62 = v97;
    uint64_t v61 = v98;
    uint64_t v63 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v100, v56, v98);
    uint64_t v64 = (uint64_t *)(v63 + *(int *)(v95 + 36));
    *uint64_t v64 = v60;
    v64[1] = v59;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v61);
    type metadata accessor for BluetoothManager();
    sub_54840(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
    uint64_t v65 = sub_E6270();
    uint64_t v66 = sub_E6100();
    uint64_t v67 = v99;
    sub_549A0(v63, v99, &qword_123928);
    uint64_t v68 = (uint64_t *)(v67 + *(int *)(v75 + 36));
    *uint64_t v68 = v66;
    v68[1] = v65;
    sub_54C80(v63, &qword_123928);
    uint64_t v69 = v101;
    sub_5493C(v67, v101, &qword_123930);
    sub_549A0(v69, (uint64_t)v76, &qword_123930);
    swift_storeEnumTagMultiPayload();
    sub_51FE4();
    sub_52378();
    sub_E6610();
    return sub_54C80(v69, &qword_123930);
  }
}

void *sub_508BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = type metadata accessor for GCSEntryView();
  __chkstk_darwin(v144);
  uint64_t v5 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v6 - 8);
  long long v134 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_123AC0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v149 = (uint64_t)&v127 - v12;
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  int v15 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v16 = type metadata accessor for GCSPreferencesStore();
  uint64_t v17 = sub_54840((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t v143 = v13;
  uint64_t v141 = v14;
  LODWORD(v14sub_E59A4(2, 18, 1, 0) = v15;
  __int16 v139 = (void *)v16;
  uint64_t v18 = (void *)sub_E6270();
  id v19 = [v18 controllers];

  uint64_t v20 = sub_4F23C(0, (unint64_t *)&qword_124E30);
  unint64_t v21 = sub_E7210();

  long long v142 = v11;
  uint64_t v135 = v5;
  uint64_t v136 = (void *)a2;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v137 = v20;
  uint64_t v138 = v17;
  swift_bridgeObjectRelease();
  if (v22 < 1)
  {
    sub_54910((uint64_t)&v152);
  }
  else
  {
    uint64_t v23 = *(void *)(a1 + 56);
    LOBYTE(v152) = *(unsigned char *)(a1 + 48);
    *((void *)&v152 + 1) = v23;
    sub_10C7C(&qword_122A50);
    sub_E6D40();
    uint64_t v24 = *((void *)&v161 + 1);
    uint64_t v148 = v161;
    char v25 = v162;
    uint64_t v26 = *(void *)(a1 + 72);
    *(void *)&long long v152 = *(void *)(a1 + 64);
    *((void *)&v152 + 1) = v26;
    sub_10C7C(&qword_123A78);
    sub_E6D40();
    long long v27 = v161;
    uint64_t v28 = v162;
    uint64_t v29 = v144;
    uint64_t v30 = (long long *)(a1 + *(int *)(v144 + 60));
    long long v31 = v30[7];
    long long v167 = v30[6];
    long long v168 = v31;
    long long v169 = v30[8];
    long long v32 = v30[3];
    long long v163 = v30[2];
    long long v164 = v32;
    long long v33 = v30[5];
    long long v165 = v30[4];
    long long v166 = v33;
    long long v34 = v30[1];
    long long v161 = *v30;
    long long v162 = v34;
    sub_10C7C(&qword_123A90);
    sub_E6D40();
    id v35 = (uint64_t *)(a1 + *(int *)(v29 + 76));
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    uint64_t v38 = sub_4F628(*v35);
    uint64_t v39 = sub_C3C18(v38);
    __n128 v41 = sub_C3C90(v39, v40, v148, v24, v25, v27, *((uint64_t *)&v27 + 1), v28, (uint64_t)&v152, (uint64_t)v175, v36, v37);
    nullsub_15(&v152, v41);
  }
  sub_5493C((uint64_t)&v152, (uint64_t)&v161, &qword_123AC8);
  type metadata accessor for BluetoothManager();
  sub_54840(&qword_123368, (void (*)(uint64_t))type metadata accessor for BluetoothManager);
  uint64_t v42 = *(void *)sub_E6270();
  unint64_t v43 = (*(uint64_t (**)(void))(v42 + 1160))();
  swift_release();
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v44 < 1)
  {
    uint64_t v147 = 0;
    uint64_t v148 = 0;
    uint64_t v145 = (unsigned char *)(&dword_0 + 1);
    uint64_t v146 = 0;
  }
  else
  {
    uint64_t v145 = (char *)sub_3D798();
    uint64_t v146 = v45;
    uint64_t v147 = v47;
    uint64_t v148 = v46;
  }
  char v48 = (void *)sub_E6270();
  id v49 = [v48 controllers];

  unint64_t v50 = sub_E7210();
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = *(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v51 < 1)
  {
    uint64_t v69 = type metadata accessor for GCSProfileListView();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v149, 1, 1, v69);
  }
  else
  {
    v151[0] = *(_OWORD *)(a1 + 112);
    sub_10C7C(&qword_123A88);
    sub_E6D40();
    long long v132 = (void *)*((void *)&v152 + 1);
    uint64_t v133 = v152;
    long long v131 = (void *)v153;
    uint64_t v52 = *(void *)(a1 + 136);
    LOBYTE(v151[0]) = *(unsigned char *)(a1 + 128);
    *((void *)&v151[0] + 1) = v52;
    sub_10C7C(&qword_122A50);
    sub_E6D40();
    uint64_t v129 = *((void *)&v152 + 1);
    uint64_t v130 = v152;
    int v128 = v153;
    uint64_t v53 = *(void *)(a1 + 152);
    LOBYTE(v151[0]) = *(unsigned char *)(a1 + 144);
    *((void *)&v151[0] + 1) = v53;
    sub_E6D40();
    long long v54 = v152;
    char v55 = v153;
    v151[0] = *(_OWORD *)(a1 + 160);
    sub_E6D40();
    long long v127 = v152;
    uint64_t v56 = v153;
    uint64_t v57 = v144;
    sub_10C7C(&qword_1235B0);
    uint64_t v58 = (uint64_t)v134;
    sub_E6D40();
    uint64_t v59 = (long long *)(a1 + *(int *)(v57 + 60));
    long long v60 = v59[7];
    long long v158 = v59[6];
    long long v159 = v60;
    long long v160 = v59[8];
    long long v61 = v59[3];
    long long v154 = v59[2];
    long long v155 = v61;
    long long v62 = v59[5];
    long long v156 = v59[4];
    long long v157 = v62;
    long long v63 = v59[1];
    long long v152 = *v59;
    long long v153 = v63;
    sub_10C7C(&qword_123A90);
    uint64_t v64 = sub_E6D40();
    uint64_t v65 = sub_65D40(v64);
    uint64_t v66 = v149;
    sub_65DB8(v65, v67, v133, (uint64_t)v132, (uint64_t)v131, v130, v129, v128, v149, v54, *((uint64_t *)&v54 + 1), v55, v127, v56, v58, (uint64_t)&v174);
    uint64_t v68 = type metadata accessor for GCSProfileListView();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v66, 0, 1, v68);
  }
  uint64_t v70 = (uint64_t)v135;
  uint64_t v71 = (void *)sub_E6270();
  id v72 = [v71 fusedControllers];

  unint64_t v73 = sub_E7210();
  if (v73 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v74 = *(void *)((char *)&dword_10 + (v73 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  sub_4F988(a1, v70, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
  if (v74 >= 1)
  {
    sub_4F9F0(v70, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
LABEL_24:
    uint64_t v83 = v144;
    uint64_t v84 = (uint64_t *)(a1 + *(int *)(v144 + 68));
    uint64_t v86 = *v84;
    uint64_t v85 = v84[1];
    *(void *)&v151[0] = v86;
    *((void *)&v151[0] + 1) = v85;
    sub_10C7C(&qword_123A78);
    sub_E6D40();
    uint64_t v88 = *((void *)&v152 + 1);
    uint64_t v87 = v152;
    uint64_t v89 = v153;
    uint64_t v90 = (uint64_t *)(a1 + *(int *)(v83 + 72));
    uint64_t v92 = *v90;
    uint64_t v91 = v90[1];
    *(void *)&v151[0] = v92;
    *((void *)&v151[0] + 1) = v91;
    sub_E6D40();
    uint64_t v94 = *((void *)&v152 + 1);
    uint64_t v93 = v152;
    uint64_t v95 = v153;
    uint64_t v96 = a1 + *(int *)(v83 + 64);
    char v97 = *(unsigned char *)v96;
    uint64_t v98 = *(void *)(v96 + 8);
    LOBYTE(v151[0]) = v97;
    *((void *)&v151[0] + 1) = v98;
    sub_10C7C(&qword_122A50);
    uint64_t v99 = sub_E6D40();
    long long v100 = v152;
    LOBYTE(v83) = v153;
    uint64_t v101 = sub_927B8(v99);
    sub_927BC(v101, v102, v87, v88, v89, v93, v94, v95, (uint64_t)v170, v100, *((uint64_t *)&v100 + 1), v83);
    uint64_t v141 = v170[1];
    uint64_t v79 = v170[3];
    uint64_t v80 = (void *)v170[4];
    __int16 v139 = (void *)v170[0];
    uint64_t v140 = v170[5];
    uint64_t v81 = v170[6];
    uint64_t v82 = (void *)v170[7];
    uint64_t v143 = v170[2];
    uint64_t v144 = v170[8];
    uint64_t v137 = v171;
    uint64_t v138 = v170[9];
    long long v134 = v173;
    uint64_t v135 = v172;
    goto LABEL_25;
  }
  uint64_t v75 = (void *)sub_E6270();
  id v76 = [v75 unfusedFusableControllers];

  unint64_t v77 = sub_E7210();
  if (v77 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v78 = *(void *)((char *)&dword_10 + (v77 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  sub_4F9F0(v70, (uint64_t (*)(void))type metadata accessor for GCSEntryView);
  if (v78 >= 2) {
    goto LABEL_24;
  }
  __int16 v139 = 0;
  uint64_t v140 = 0;
  uint64_t v141 = 0;
  uint64_t v143 = 0;
  uint64_t v144 = 0;
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  uint64_t v137 = 0;
  uint64_t v138 = 0;
  long long v134 = 0;
  uint64_t v135 = 0;
LABEL_25:
  sub_5493C((uint64_t)&v161, (uint64_t)v150, &qword_123AC8);
  uint64_t v103 = (uint64_t)v142;
  sub_549A0(v149, (uint64_t)v142, &qword_123AC0);
  sub_5493C((uint64_t)v150, (uint64_t)v151, &qword_123AC8);
  char v104 = v136;
  sub_5493C((uint64_t)v151, (uint64_t)v136, &qword_123AC8);
  uint64_t v105 = v148;
  v104[31] = v145;
  v104[32] = v105;
  uint64_t v106 = v146;
  v104[33] = v147;
  v104[34] = v106;
  uint64_t v107 = sub_10C7C(&qword_123AD0);
  sub_549A0(v103, (uint64_t)v104 + *(int *)(v107 + 64), &qword_123AC0);
  long long v108 = (void *)((char *)v104 + *(int *)(v107 + 80));
  uint64_t v109 = v138;
  uint64_t v110 = v139;
  uint64_t v111 = v141;
  *long long v108 = v139;
  v108[1] = v111;
  uint64_t v113 = v143;
  uint64_t v112 = v144;
  v108[2] = v143;
  v108[3] = v79;
  uint64_t v143 = v113;
  uint64_t v144 = v112;
  uint64_t v130 = v79;
  long long v131 = v80;
  uint64_t v114 = v140;
  v108[4] = v80;
  v108[5] = v114;
  long long v132 = v82;
  uint64_t v133 = v81;
  v108[6] = v81;
  v108[7] = v82;
  v108[8] = v112;
  v108[9] = v109;
  uint64_t v115 = v137;
  uint64_t v117 = v134;
  uint64_t v116 = v135;
  v108[10] = v137;
  v108[11] = v116;
  v108[12] = v117;
  sub_54DD8(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_54A04);
  sub_54B70(v145);
  uint64_t v126 = v112;
  uint64_t v118 = v141;
  uint64_t v119 = v113;
  uint64_t v120 = v79;
  uint64_t v121 = v80;
  uint64_t v122 = v140;
  uint64_t v124 = v132;
  uint64_t v123 = v133;
  sub_54BB8(v110, v141, v119, v120, v121, v140, v133, v132, v126, v109, v115, v116);
  sub_54C80(v149, &qword_123AC0);
  sub_54CDC((uint64_t)v110, v118, v143, v130, v131, v122, v123, v124, v144, v109, v115, v116);
  sub_54C80((uint64_t)v142, &qword_123AC0);
  sub_54D94(v145);
  sub_5493C((uint64_t)v150, (uint64_t)&v152, &qword_123AC8);
  return sub_54DD8(&v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_54E5C);
}

void *sub_514BC@<X0>(uint64_t a1@<X8>)
{
  return sub_508BC(*(void *)(v1 + 16), a1);
}

uint64_t sub_514C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = sub_E6560();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_10C7C(&qword_123A98);
  return sub_51514(v3, (uint64_t *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_51514@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_122B88);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = sub_10C7C(&qword_123AA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - v15;
  has_internal_uuint64_t i = os_variant_has_internal_ui();
  id v49 = v8;
  uint64_t v50 = v5;
  long long v54 = v16;
  char v48 = v10;
  if (has_internal_ui)
  {
    int v55 = sub_E6720();
    uint64_t v18 = sub_E68F0();
    uint64_t v20 = v19;
    char v22 = v21 & 1;
    sub_E6850();
    uint64_t v23 = sub_E6900();
    uint64_t v52 = v24;
    uint64_t v53 = v23;
    char v25 = a2;
    uint64_t v26 = v4;
    uint64_t v27 = a1;
    char v29 = v28;
    uint64_t v51 = v30;
    swift_release();
    uint64_t v31 = v29 & 1;
    a1 = v27;
    uint64_t v4 = v26;
    a2 = v25;
    sub_18814(v18, v20, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v31 = 0;
    uint64_t v51 = 0;
  }
  uint64_t v32 = *(void *)(a1 + *(int *)(type metadata accessor for GCSEntryView() + 76));
  if (v32)
  {
    swift_retain();
    sub_E6590();
    uint64_t v47 = v31;
    swift_retain();
    long long v33 = v48;
    sub_E6D90();
    id v35 = v49;
    uint64_t v34 = v50;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v36(v49, v33, v4);
    *(void *)uint64_t v14 = 0;
    v14[8] = 1;
    uint64_t v37 = sub_10C7C(&qword_123AB8);
    v36(&v14[*(int *)(v37 + 48)], v35, v4);
    sub_4F680(v32);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v33, v4);
    v38(v35, v4);
    uint64_t v31 = v47;
    uint64_t v39 = sub_10C7C(&qword_123AA8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v14, 0, 1, v39);
    uint64_t v40 = (uint64_t)v54;
    sub_5493C((uint64_t)v14, (uint64_t)v54, &qword_123AA0);
  }
  else
  {
    uint64_t v41 = sub_10C7C(&qword_123AA8);
    uint64_t v40 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v54, 1, 1, v41);
  }
  sub_549A0(v40, (uint64_t)v14, &qword_123AA0);
  uint64_t v43 = v52;
  uint64_t v42 = v53;
  *a2 = v53;
  a2[1] = v43;
  uint64_t v44 = v51;
  a2[2] = v31;
  a2[3] = v44;
  uint64_t v45 = sub_10C7C(&qword_123AB0);
  sub_549A0((uint64_t)v14, (uint64_t)a2 + *(int *)(v45 + 48), &qword_123AA0);
  sub_54888(v42, v43, v31, v44);
  sub_54C80(v40, &qword_123AA0);
  sub_54C80((uint64_t)v14, &qword_123AA0);
  return sub_548CC(v42, v43, v31, v44);
}

uint64_t sub_51994(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return _objc_release_x1(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_519A4()
{
  return swift_release();
}

uint64_t sub_519AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSEntryView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_51A10()
{
  return sub_E6310();
}

double sub_51AE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 152);
  LOBYTE(v28) = *(unsigned char *)(a1 + 144);
  *((void *)&v28 + 1) = v6;
  sub_10C7C(&qword_122A50);
  sub_E6D40();
  uint64_t v23 = v38;
  uint64_t v24 = v37;
  char v7 = v39;
  long long v28 = *(_OWORD *)(a1 + 160);
  sub_10C7C(&qword_123A88);
  sub_E6D40();
  uint64_t v9 = v37;
  uint64_t v8 = v38;
  uint64_t v10 = v39;
  uint64_t v11 = type metadata accessor for GCSEntryView();
  sub_10C7C(&qword_1235B0);
  sub_E6D40();
  uint64_t v12 = (long long *)(a1 + *(int *)(v11 + 60));
  long long v13 = v12[7];
  long long v34 = v12[6];
  long long v35 = v13;
  long long v36 = v12[8];
  long long v14 = v12[3];
  long long v30 = v12[2];
  long long v31 = v14;
  long long v15 = v12[5];
  long long v32 = v12[4];
  long long v33 = v15;
  long long v16 = v12[1];
  long long v28 = *v12;
  long long v29 = v16;
  sub_10C7C(&qword_123A90);
  sub_E6D40();
  uint64_t v17 = *(void *)(a1 + 136);
  char v26 = *(unsigned char *)(a1 + 128);
  uint64_t v27 = v17;
  sub_E6D40();
  long long v18 = v28;
  LOBYTE(v11) = v29;
  uint64_t v19 = sub_2A714();
  return sub_2A718(v19, v20, v24, v23, v7, v9, v8, v10, v25, (uint64_t)v5, (uint64_t)&v37, v18, *((uint64_t *)&v18 + 1), v11);
}

uint64_t sub_51CB0()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSEntryView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  sub_51994(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(unsigned char *)(v0 + v3 + 16));
  sub_519A4();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v5 = v0 + v3 + v1[16];
  uint64_t v6 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();
  char v7 = (id *)(v0 + v3 + v1[17]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  if (*(void *)(v0 + v3 + v1[21])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_51F4C()
{
  return sub_E6310();
}

unint64_t sub_51FE4()
{
  unint64_t result = qword_123980;
  if (!qword_123980)
  {
    sub_11B60(&qword_123930);
    sub_52084();
    sub_52334(&qword_123990, &qword_123998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123980);
  }
  return result;
}

unint64_t sub_52084()
{
  unint64_t result = qword_123988;
  if (!qword_123988)
  {
    sub_11B60(&qword_123928);
    sub_11B60(&qword_123918);
    sub_E66C0();
    sub_11B60(&qword_123910);
    sub_11B60(&qword_123970);
    sub_11B60(&qword_123908);
    sub_11B60(&qword_123960);
    sub_11B60(&qword_123900);
    sub_11B60(&qword_1238F8);
    sub_52334(&qword_123958, &qword_1238F8);
    sub_187B0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_52334(&qword_123968, &qword_123960);
    swift_getOpaqueTypeConformance2();
    sub_52334(&qword_123978, &qword_123970);
    swift_getOpaqueTypeConformance2();
    sub_54840(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
    swift_getOpaqueTypeConformance2();
    sub_52334(&qword_1236D8, &qword_1236E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123988);
  }
  return result;
}

uint64_t sub_52334(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_52378()
{
  unint64_t result = qword_1239A0;
  if (!qword_1239A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1239A0);
  }
  return result;
}

uint64_t sub_523CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v7 = (char *)&v28 - v6;
  *(void *)a1 = sub_4EF74;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = sub_4F090;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 0;
  LOBYTE(v29) = 0;
  sub_E6D10();
  uint64_t v8 = *((void *)&v31 + 1);
  *(unsigned char *)(a1 + 48) = v31;
  *(void *)(a1 + 56) = v8;
  id v29 = [objc_allocWithZone((Class)GCSController) initDummy];
  sub_4F23C(0, (unint64_t *)&qword_124E30);
  sub_E6D10();
  uint64_t v9 = *((void *)&v31 + 1);
  *(void *)(a1 + 64) = v31;
  *(void *)(a1 + 72) = v9;
  id v29 = [self defaultGame];
  sub_4F23C(0, (unint64_t *)&qword_122828);
  sub_E6D10();
  uint64_t v10 = *((void *)&v31 + 1);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v31;
  *(void *)(a1 + 88) = v10;
  id v29 = [self defaultProfile];
  sub_4F23C(0, (unint64_t *)&qword_124E50);
  sub_E6D10();
  uint64_t v11 = *((void *)&v31 + 1);
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v11;
  id v29 = 0;
  sub_10C7C(&qword_122B70);
  sub_E6D10();
  *(_OWORD *)(a1 + 112) = v31;
  LOBYTE(v29) = 0;
  sub_E6D10();
  uint64_t v12 = *((void *)&v31 + 1);
  *(unsigned char *)(a1 + 128) = v31;
  *(void *)(a1 + 136) = v12;
  LOBYTE(v29) = 0;
  sub_E6D10();
  uint64_t v13 = *((void *)&v31 + 1);
  *(unsigned char *)(a1 + 144) = v31;
  *(void *)(a1 + 152) = v13;
  id v29 = 0;
  sub_E6D10();
  *(_OWORD *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v31;
  long long v14 = (int *)type metadata accessor for GCSEntryView();
  sub_DFD34((uint64_t)v7);
  sub_4F988((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  sub_4F9F0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  long long v15 = (_OWORD *)(a1 + v14[15]);
  sub_57E7C((uint64_t)&v29);
  sub_E6D10();
  long long v16 = v38;
  v15[6] = v37;
  v15[7] = v16;
  v15[8] = v39;
  long long v17 = v34;
  v15[2] = v33;
  v15[3] = v17;
  long long v18 = v36;
  v15[4] = v35;
  v15[5] = v18;
  long long v19 = v32;
  _OWORD *v15 = v31;
  v15[1] = v19;
  uint64_t v20 = a1 + v14[16];
  LOBYTE(v28) = 0;
  sub_E6D10();
  uint64_t v21 = v30;
  *(unsigned char *)uint64_t v20 = (_BYTE)v29;
  *(void *)(v20 + 8) = v21;
  uint64_t v22 = (void *)(a1 + v14[17]);
  id v28 = [objc_allocWithZone((Class)GCSController) initDummy];
  sub_E6D10();
  uint64_t v23 = v30;
  *uint64_t v22 = v29;
  v22[1] = v23;
  uint64_t v24 = (void *)(a1 + v14[18]);
  id v28 = [objc_allocWithZone((Class)GCSController) initDummy];
  uint64_t result = sub_E6D10();
  uint64_t v26 = v30;
  *uint64_t v24 = v29;
  v24[1] = v26;
  uint64_t v27 = (void *)(a1 + v14[19]);
  void *v27 = 0;
  v27[1] = 0;
  return result;
}

id (*sub_527BC())()
{
  return sub_4EF74;
}

uint64_t (*sub_527D8())()
{
  return sub_4F090;
}

uint64_t sub_527F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v12 = type metadata accessor for GCSProfileParams();
  uint64_t v13 = __chkstk_darwin(v12);
  long long v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v39 - v16;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(unsigned char *)(a7 + 4sub_E59A4(2, 18, 1, 0) = 0;
  LOBYTE(v42) = 0;
  sub_E6D10();
  uint64_t v18 = *((void *)&v44 + 1);
  *(unsigned char *)(a7 + 48) = v44;
  *(void *)(a7 + 56) = v18;
  id v42 = [objc_allocWithZone((Class)GCSController) initDummy];
  sub_4F23C(0, (unint64_t *)&qword_124E30);
  sub_E6D10();
  uint64_t v19 = *((void *)&v44 + 1);
  *(void *)(a7 + 64) = v44;
  *(void *)(a7 + 72) = v19;
  id v42 = [self defaultGame];
  sub_4F23C(0, (unint64_t *)&qword_122828);
  sub_E6D10();
  uint64_t v20 = *((void *)&v44 + 1);
  *(void *)(a7 + 8sub_E59A4(2, 18, 1, 0) = v44;
  *(void *)(a7 + 88) = v20;
  id v42 = [self defaultProfile];
  sub_4F23C(0, (unint64_t *)&qword_124E50);
  sub_E6D10();
  uint64_t v21 = *((void *)&v44 + 1);
  *(void *)(a7 + 96) = v44;
  *(void *)(a7 + 104) = v21;
  id v42 = 0;
  sub_10C7C(&qword_122B70);
  sub_E6D10();
  *(_OWORD *)(a7 + 112) = v44;
  LOBYTE(v42) = 0;
  sub_E6D10();
  uint64_t v22 = *((void *)&v44 + 1);
  *(unsigned char *)(a7 + 128) = v44;
  *(void *)(a7 + 136) = v22;
  LOBYTE(v42) = 0;
  sub_E6D10();
  uint64_t v23 = *((void *)&v44 + 1);
  *(unsigned char *)(a7 + 144) = v44;
  *(void *)(a7 + 152) = v23;
  id v42 = 0;
  sub_E6D10();
  *(_OWORD *)(a7 + 16sub_E59A4(2, 18, 1, 0) = v44;
  uint64_t v24 = (int *)type metadata accessor for GCSEntryView();
  sub_DFD34((uint64_t)v17);
  sub_4F988((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  sub_4F9F0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  uint64_t v25 = (_OWORD *)(a7 + v24[15]);
  sub_57E7C((uint64_t)&v42);
  sub_E6D10();
  long long v26 = v51;
  v25[6] = v50;
  v25[7] = v26;
  v25[8] = v52;
  long long v27 = v47;
  void v25[2] = v46;
  v25[3] = v27;
  long long v28 = v49;
  v25[4] = v48;
  v25[5] = v28;
  long long v29 = v45;
  _OWORD *v25 = v44;
  v25[1] = v29;
  uint64_t v30 = a7 + v24[16];
  LOBYTE(v41) = 0;
  sub_E6D10();
  uint64_t v31 = v43;
  *(unsigned char *)uint64_t v30 = (_BYTE)v42;
  *(void *)(v30 + 8) = v31;
  long long v32 = (void *)(a7 + v24[17]);
  id v41 = [objc_allocWithZone((Class)GCSController) initDummy];
  sub_E6D10();
  uint64_t v33 = v43;
  *long long v32 = v42;
  v32[1] = v33;
  long long v34 = (void *)(a7 + v24[18]);
  id v41 = [objc_allocWithZone((Class)GCSController) initDummy];
  uint64_t result = sub_E6D10();
  uint64_t v36 = v43;
  *long long v34 = v42;
  v34[1] = v36;
  long long v37 = (void *)(a7 + v24[19]);
  uint64_t v38 = v40;
  *long long v37 = v39;
  v37[1] = v38;
  return result;
}

uint64_t sub_52BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_52C04()
{
  return sub_E69D0();
}

unint64_t sub_52C24(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v72 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v72 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    char v7 = *(void **)(a2 + 8);
    char v8 = *(unsigned char *)(a2 + 16);
    sub_530CC(*(void *)a2, v7, v8);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v8;
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    char v12 = *(unsigned char *)(a2 + 40);
    sub_530DC();
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v12;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v13 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v13;
    uint64_t v14 = *(void **)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v14;
    long long v15 = *(void **)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v15;
    uint64_t v74 = v15;
    uint64_t v79 = *(void **)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v79;
    *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    uint64_t v16 = *(void **)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v16;
    uint64_t v83 = v16;
    uint64_t v17 = a3[14];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    uint64_t v20 = sub_E6050();
    unint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_retain();
    id v21 = v13;
    swift_retain();
    id v22 = v14;
    swift_retain();
    id v23 = v74;
    swift_retain();
    id v24 = v79;
    swift_retain();
    swift_retain();
    swift_retain();
    id v25 = v83;
    swift_retain();
    v77(v18, v19, v20);
    long long v26 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v27 = v26[5];
    long long v28 = (void *)(v18 + v27);
    long long v29 = (uint64_t *)(v19 + v27);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    *long long v28 = v31;
    v28[1] = v30;
    uint64_t v32 = v26[6];
    uint64_t v33 = (void *)(v18 + v32);
    long long v34 = (void *)(v19 + v32);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = v26[7];
    long long v37 = (void *)(v18 + v36);
    uint64_t v38 = (void *)(v19 + v36);
    uint64_t v39 = v38[1];
    *long long v37 = *v38;
    v37[1] = v39;
    *(unsigned char *)(v18 + v26[8]) = *(unsigned char *)(v19 + v26[8]);
    *(unsigned char *)(v18 + v26[9]) = *(unsigned char *)(v19 + v26[9]);
    uint64_t v40 = v26[10];
    id v41 = (void *)(v18 + v40);
    id v42 = (void *)(v19 + v40);
    uint64_t v43 = v42[1];
    *id v41 = *v42;
    v41[1] = v43;
    *(void *)(v18 + v26[11]) = *(void *)(v19 + v26[11]);
    *(unsigned char *)(v18 + v26[12]) = *(unsigned char *)(v19 + v26[12]);
    *(void *)(v18 + v26[13]) = *(void *)(v19 + v26[13]);
    *(void *)(v18 + v26[14]) = *(void *)(v19 + v26[14]);
    *(void *)(v18 + v26[15]) = *(void *)(v19 + v26[15]);
    *(unsigned char *)(v18 + v26[16]) = *(unsigned char *)(v19 + v26[16]);
    *(unsigned char *)(v18 + v26[17]) = *(unsigned char *)(v19 + v26[17]);
    *(void *)(v18 + v26[18]) = *(void *)(v19 + v26[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_10C7C(&qword_1235B0);
    *(void *)(v18 + *(int *)(v44 + 28)) = *(void *)(v19 + *(int *)(v44 + 28));
    uint64_t v45 = a3[15];
    uint64_t v46 = a3[16];
    uint64_t v47 = a1 + v45;
    uint64_t v48 = a2 + v45;
    long long v50 = *(void **)v48;
    uint64_t v49 = *(void *)(v48 + 8);
    *(void *)uint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = v49;
    *(_OWORD *)(v47 + 16) = *(_OWORD *)(v48 + 16);
    uint64_t v51 = *(void *)(v48 + 40);
    *(void *)(v47 + 32) = *(void *)(v48 + 32);
    *(void *)(v47 + 4sub_E59A4(2, 18, 1, 0) = v51;
    uint64_t v52 = *(void *)(v48 + 56);
    *(void *)(v47 + 48) = *(void *)(v48 + 48);
    *(void *)(v47 + 56) = v52;
    uint64_t v53 = *(void *)(v48 + 72);
    *(void *)(v47 + 64) = *(void *)(v48 + 64);
    *(void *)(v47 + 72) = v53;
    uint64_t v54 = *(void *)(v48 + 88);
    *(void *)(v47 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v48 + 80);
    *(void *)(v47 + 88) = v54;
    uint64_t v55 = *(void *)(v48 + 104);
    *(void *)(v47 + 96) = *(void *)(v48 + 96);
    *(void *)(v47 + 104) = v55;
    *(unsigned char *)(v47 + 112) = *(unsigned char *)(v48 + 112);
    *(unsigned char *)(v47 + 113) = *(unsigned char *)(v48 + 113);
    uint64_t v75 = *(void **)(v48 + 120);
    uint64_t v76 = *(void *)(v48 + 128);
    *(void *)(v47 + 12sub_E59A4(2, 18, 1, 0) = v75;
    *(void *)(v47 + 128) = v76;
    *(void *)(v47 + 136) = *(void *)(v48 + 136);
    uint64_t v56 = a1 + v46;
    uint64_t v57 = a2 + v46;
    *(unsigned char *)uint64_t v56 = *(unsigned char *)v57;
    *(void *)(v56 + 8) = *(void *)(v57 + 8);
    uint64_t v58 = a3[17];
    uint64_t v59 = a3[18];
    long long v60 = (void *)(a1 + v58);
    uint64_t v61 = a2 + v58;
    uint64_t v78 = *(void **)v61;
    uint64_t v80 = *(void *)(v61 + 8);
    void *v60 = *(void *)v61;
    v60[1] = v80;
    long long v62 = (void **)(a1 + v59);
    long long v63 = (void **)(a2 + v59);
    uint64_t v64 = *v63;
    uint64_t v84 = v63[1];
    void *v62 = *v63;
    v62[1] = v84;
    uint64_t v65 = a3[19];
    uint64_t v86 = (void *)(a1 + v65);
    uint64_t v66 = (uint64_t *)(a2 + v65);
    uint64_t v81 = v64;
    uint64_t v82 = *v66;
    swift_retain();
    id v67 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v68 = v75;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v69 = v78;
    swift_retain();
    id v70 = v81;
    swift_retain();
    if (v82)
    {
      uint64_t v71 = v66[1];
      *uint64_t v86 = v82;
      v86[1] = v71;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v86 = *(_OWORD *)v66;
    }
  }
  return a1;
}

id sub_530CC(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_530DC()
{
  return swift_retain();
}

uint64_t sub_530E4(uint64_t a1, int *a2)
{
  sub_51994(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_519A4();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v4 = a1 + a2[14];
  uint64_t v5 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();
  uint64_t v6 = (id *)(a1 + a2[15]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + a2[19]))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_53320(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_530CC(*(void *)a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  sub_530DC();
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  char v12 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v12;
  uint64_t v13 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v74 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v74;
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v14 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v14;
  uint64_t v79 = v14;
  uint64_t v15 = a3[14];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v75 = sub_E6050();
  uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
  swift_retain();
  id v18 = v11;
  swift_retain();
  id v19 = v12;
  swift_retain();
  id v20 = v13;
  swift_retain();
  id v21 = v74;
  swift_retain();
  swift_retain();
  swift_retain();
  id v22 = v79;
  swift_retain();
  v71(v16, v17, v75);
  id v23 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v24 = v23[5];
  id v25 = (void *)(v16 + v24);
  long long v26 = (uint64_t *)(v17 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  void *v25 = v28;
  v25[1] = v27;
  uint64_t v29 = v23[6];
  uint64_t v30 = (void *)(v16 + v29);
  uint64_t v31 = (void *)(v17 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = v23[7];
  long long v34 = (void *)(v16 + v33);
  uint64_t v35 = (void *)(v17 + v33);
  uint64_t v36 = v35[1];
  *long long v34 = *v35;
  v34[1] = v36;
  *(unsigned char *)(v16 + v23[8]) = *(unsigned char *)(v17 + v23[8]);
  *(unsigned char *)(v16 + v23[9]) = *(unsigned char *)(v17 + v23[9]);
  uint64_t v37 = v23[10];
  uint64_t v38 = (void *)(v16 + v37);
  uint64_t v39 = (void *)(v17 + v37);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  *(void *)(v16 + v23[11]) = *(void *)(v17 + v23[11]);
  *(unsigned char *)(v16 + v23[12]) = *(unsigned char *)(v17 + v23[12]);
  *(void *)(v16 + v23[13]) = *(void *)(v17 + v23[13]);
  *(void *)(v16 + v23[14]) = *(void *)(v17 + v23[14]);
  *(void *)(v16 + v23[15]) = *(void *)(v17 + v23[15]);
  *(unsigned char *)(v16 + v23[16]) = *(unsigned char *)(v17 + v23[16]);
  *(unsigned char *)(v16 + v23[17]) = *(unsigned char *)(v17 + v23[17]);
  *(void *)(v16 + v23[18]) = *(void *)(v17 + v23[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_10C7C(&qword_1235B0);
  *(void *)(v16 + *(int *)(v41 + 28)) = *(void *)(v17 + *(int *)(v41 + 28));
  uint64_t v42 = a3[15];
  uint64_t v43 = a3[16];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  uint64_t v47 = *(void **)v45;
  uint64_t v46 = *(void *)(v45 + 8);
  *(void *)uint64_t v44 = *(void *)v45;
  *(void *)(v44 + 8) = v46;
  *(_OWORD *)(v44 + 16) = *(_OWORD *)(v45 + 16);
  uint64_t v48 = *(void *)(v45 + 40);
  *(void *)(v44 + 32) = *(void *)(v45 + 32);
  *(void *)(v44 + 4sub_E59A4(2, 18, 1, 0) = v48;
  uint64_t v49 = *(void *)(v45 + 56);
  *(void *)(v44 + 48) = *(void *)(v45 + 48);
  *(void *)(v44 + 56) = v49;
  uint64_t v50 = *(void *)(v45 + 72);
  *(void *)(v44 + 64) = *(void *)(v45 + 64);
  *(void *)(v44 + 72) = v50;
  uint64_t v51 = *(void *)(v45 + 88);
  *(void *)(v44 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v45 + 80);
  *(void *)(v44 + 88) = v51;
  uint64_t v52 = *(void *)(v45 + 104);
  *(void *)(v44 + 96) = *(void *)(v45 + 96);
  *(void *)(v44 + 104) = v52;
  *(unsigned char *)(v44 + 112) = *(unsigned char *)(v45 + 112);
  *(unsigned char *)(v44 + 113) = *(unsigned char *)(v45 + 113);
  id v70 = *(void **)(v45 + 120);
  uint64_t v72 = *(void *)(v45 + 128);
  *(void *)(v44 + 12sub_E59A4(2, 18, 1, 0) = v70;
  *(void *)(v44 + 128) = v72;
  *(void *)(v44 + 136) = *(void *)(v45 + 136);
  uint64_t v53 = a1 + v43;
  uint64_t v54 = a2 + v43;
  *(unsigned char *)uint64_t v53 = *(unsigned char *)v54;
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  uint64_t v55 = a3[17];
  uint64_t v56 = a3[18];
  uint64_t v57 = (void *)(a1 + v55);
  uint64_t v58 = a2 + v55;
  unint64_t v73 = *(void **)v58;
  uint64_t v76 = *(void *)(v58 + 8);
  *uint64_t v57 = *(void *)v58;
  v57[1] = v76;
  uint64_t v59 = (void **)(a1 + v56);
  long long v60 = (void **)(a2 + v56);
  uint64_t v61 = *v60;
  uint64_t v80 = v60[1];
  long long *v59 = *v60;
  v59[1] = v80;
  uint64_t v62 = a3[19];
  uint64_t v82 = (void *)(a1 + v62);
  long long v63 = (uint64_t *)(a2 + v62);
  unint64_t v77 = v61;
  uint64_t v78 = *v63;
  swift_retain();
  id v64 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v65 = v70;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v66 = v73;
  swift_retain();
  id v67 = v77;
  swift_retain();
  if (v78)
  {
    uint64_t v68 = v63[1];
    void *v82 = v78;
    v82[1] = v68;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v82 = *(_OWORD *)v63;
  }
  return a1;
}

uint64_t sub_53770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(void **)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_530CC(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_51994(v9, v10, v11);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  char v14 = *(unsigned char *)(a2 + 40);
  sub_530DC();
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v13;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v14;
  sub_519A4();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v15 = *(void **)(a2 + 64);
  uint64_t v16 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v15;
  id v17 = v15;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  id v18 = *(void **)(a2 + 80);
  id v19 = *(void **)(a1 + 80);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v18;
  id v20 = v18;

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  id v21 = *(void **)(a2 + 96);
  id v22 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v21;
  id v23 = v21;

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  uint64_t v24 = *(void **)(a1 + 112);
  id v25 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v25;
  id v26 = v25;

  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  uint64_t v27 = *(void **)(a1 + 160);
  uint64_t v28 = *(void **)(a2 + 160);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v28;
  id v29 = v28;

  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  long long v34 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v35 = v34[5];
  uint64_t v36 = (void *)(v31 + v35);
  uint64_t v37 = (void *)(v32 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v34[6];
  uint64_t v39 = (void *)(v31 + v38);
  uint64_t v40 = (void *)(v32 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v34[7];
  uint64_t v42 = (void *)(v31 + v41);
  uint64_t v43 = (void *)(v32 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v31 + v34[8]) = *(unsigned char *)(v32 + v34[8]);
  *(unsigned char *)(v31 + v34[9]) = *(unsigned char *)(v32 + v34[9]);
  uint64_t v44 = v34[10];
  uint64_t v45 = (void *)(v31 + v44);
  uint64_t v46 = (void *)(v32 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v31 + v34[11]) = *(void *)(v32 + v34[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v31 + v34[12]) = *(unsigned char *)(v32 + v34[12]);
  *(void *)(v31 + v34[13]) = *(void *)(v32 + v34[13]);
  *(void *)(v31 + v34[14]) = *(void *)(v32 + v34[14]);
  *(void *)(v31 + v34[15]) = *(void *)(v32 + v34[15]);
  *(unsigned char *)(v31 + v34[16]) = *(unsigned char *)(v32 + v34[16]);
  *(unsigned char *)(v31 + v34[17]) = *(unsigned char *)(v32 + v34[17]);
  *(void *)(v31 + v34[18]) = *(void *)(v32 + v34[18]);
  uint64_t v47 = sub_10C7C(&qword_1235B0);
  *(void *)(v31 + *(int *)(v47 + 28)) = *(void *)(v32 + *(int *)(v47 + 28));
  swift_retain();
  swift_release();
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void **)(a1 + v48);
  uint64_t v52 = *(void **)(a2 + v48);
  *(void *)uint64_t v49 = v52;
  id v53 = v52;

  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  *(void *)(v49 + 24) = *(void *)(v50 + 24);
  *(void *)(v49 + 32) = *(void *)(v50 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v50 + 40);
  *(void *)(v49 + 48) = *(void *)(v50 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 56) = *(void *)(v50 + 56);
  *(void *)(v49 + 64) = *(void *)(v50 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 72) = *(void *)(v50 + 72);
  *(void *)(v49 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v50 + 80);
  swift_retain();
  swift_release();
  *(void *)(v49 + 88) = *(void *)(v50 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 96) = *(void *)(v50 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 104) = *(void *)(v50 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 112) = *(unsigned char *)(v50 + 112);
  *(unsigned char *)(v49 + 113) = *(unsigned char *)(v50 + 113);
  uint64_t v54 = *(void **)(v49 + 120);
  uint64_t v55 = *(void **)(v50 + 120);
  *(void *)(v49 + 12sub_E59A4(2, 18, 1, 0) = v55;
  id v56 = v55;

  *(void *)(v49 + 128) = *(void *)(v50 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v49 + 136) = *(void *)(v50 + 136);
  swift_retain();
  swift_release();
  uint64_t v57 = a3[16];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(unsigned char *)uint64_t v58 = *(unsigned char *)v59;
  *(void *)(v58 + 8) = *(void *)(v59 + 8);
  swift_retain();
  swift_release();
  uint64_t v60 = a3[17];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  long long v63 = *(void **)(a2 + v60);
  id v64 = *(void **)v61;
  *(void *)uint64_t v61 = v63;
  id v65 = v63;

  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  swift_retain();
  swift_release();
  uint64_t v66 = a3[18];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  id v69 = *(void **)(a2 + v66);
  id v70 = *(void **)v67;
  *(void *)uint64_t v67 = v69;
  id v71 = v69;

  *(void *)(v67 + 8) = *(void *)(v68 + 8);
  swift_retain();
  swift_release();
  uint64_t v72 = a3[19];
  unint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (uint64_t *)(a2 + v72);
  uint64_t v75 = *(void *)(a1 + v72);
  uint64_t v76 = *v74;
  if (!v75)
  {
    if (v76)
    {
      uint64_t v78 = v74[1];
      *unint64_t v73 = v76;
      v73[1] = v78;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v73 = *(_OWORD *)v74;
    return a1;
  }
  if (!v76)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v77 = v74[1];
  *unint64_t v73 = v76;
  v73[1] = v77;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_53D50(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  long long v9 = *(_OWORD *)(a2 + 160);
  uint64_t v10 = a3[14];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v9;
  uint64_t v13 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  char v14 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)(v11 + v14[5]) = *(_OWORD *)(v12 + v14[5]);
  *(_OWORD *)(v11 + v14[6]) = *(_OWORD *)(v12 + v14[6]);
  *(_OWORD *)(v11 + v14[7]) = *(_OWORD *)(v12 + v14[7]);
  *(unsigned char *)(v11 + v14[8]) = *(unsigned char *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(_OWORD *)(v11 + v14[10]) = *(_OWORD *)(v12 + v14[10]);
  *(void *)(v11 + v14[11]) = *(void *)(v12 + v14[11]);
  *(unsigned char *)(v11 + v14[12]) = *(unsigned char *)(v12 + v14[12]);
  *(void *)(v11 + v14[13]) = *(void *)(v12 + v14[13]);
  *(void *)(v11 + v14[14]) = *(void *)(v12 + v14[14]);
  *(void *)(v11 + v14[15]) = *(void *)(v12 + v14[15]);
  *(unsigned char *)(v11 + v14[16]) = *(unsigned char *)(v12 + v14[16]);
  *(unsigned char *)(v11 + v14[17]) = *(unsigned char *)(v12 + v14[17]);
  *(void *)(v11 + v14[18]) = *(void *)(v12 + v14[18]);
  uint64_t v15 = sub_10C7C(&qword_1235B0);
  *(void *)(v11 + *(int *)(v15 + 28)) = *(void *)(v12 + *(int *)(v15 + 28));
  uint64_t v16 = a3[15];
  uint64_t v17 = a3[16];
  id v18 = (_OWORD *)(a1 + v16);
  id v19 = (_OWORD *)(a2 + v16);
  long long v20 = v19[3];
  _OWORD v18[2] = v19[2];
  v18[3] = v20;
  long long v21 = v19[1];
  *id v18 = *v19;
  v18[1] = v21;
  long long v22 = v19[8];
  long long v23 = v19[6];
  v18[7] = v19[7];
  v18[8] = v22;
  long long v24 = v19[5];
  v18[4] = v19[4];
  v18[5] = v24;
  v18[6] = v23;
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v25 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v26 = a3[19];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    void *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  return a1;
}

uint64_t sub_53F54(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_51994(v7, v8, v9);
  char v10 = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v10;
  sub_519A4();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  uint64_t v12 = *(void **)(a1 + 80);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);

  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  uint64_t v13 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  char v14 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  uint64_t v15 = *(void **)(a1 + 160);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);

  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  uint64_t v16 = a3[14];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  long long v20 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v21 = v20[5];
  long long v22 = (void *)(v17 + v21);
  long long v23 = (uint64_t *)(v18 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *long long v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v20[6];
  uint64_t v27 = (void *)(v17 + v26);
  uint64_t v28 = (uint64_t *)(v18 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v20[7];
  uint64_t v32 = (void *)(v17 + v31);
  uint64_t v33 = (uint64_t *)(v18 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[8]) = *(unsigned char *)(v18 + v20[8]);
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  uint64_t v36 = v20[10];
  uint64_t v37 = (void *)(v17 + v36);
  uint64_t v38 = (uint64_t *)(v18 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(void *)(v17 + v20[11]) = *(void *)(v18 + v20[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[12]) = *(unsigned char *)(v18 + v20[12]);
  *(void *)(v17 + v20[13]) = *(void *)(v18 + v20[13]);
  *(void *)(v17 + v20[14]) = *(void *)(v18 + v20[14]);
  *(void *)(v17 + v20[15]) = *(void *)(v18 + v20[15]);
  *(unsigned char *)(v17 + v20[16]) = *(unsigned char *)(v18 + v20[16]);
  *(unsigned char *)(v17 + v20[17]) = *(unsigned char *)(v18 + v20[17]);
  *(void *)(v17 + v20[18]) = *(void *)(v18 + v20[18]);
  uint64_t v41 = sub_10C7C(&qword_1235B0);
  *(void *)(v17 + *(int *)(v41 + 28)) = *(void *)(v18 + *(int *)(v41 + 28));
  swift_release();
  uint64_t v42 = a3[15];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void **)(a1 + v42);
  *(void *)uint64_t v43 = *(void *)v44;

  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v44 + 48);
  *(void *)(v43 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v44 + 40);
  *(void *)(v43 + 48) = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v44 + 64);
  *(void *)(v43 + 56) = *(void *)(v44 + 56);
  *(void *)(v43 + 64) = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v44 + 80);
  *(void *)(v43 + 72) = *(void *)(v44 + 72);
  *(void *)(v43 + 8sub_E59A4(2, 18, 1, 0) = v48;
  swift_release();
  *(void *)(v43 + 88) = *(void *)(v44 + 88);
  swift_bridgeObjectRelease();
  *(void *)(v43 + 96) = *(void *)(v44 + 96);
  swift_bridgeObjectRelease();
  *(void *)(v43 + 104) = *(void *)(v44 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v43 + 112) = *(unsigned char *)(v44 + 112);
  *(unsigned char *)(v43 + 113) = *(unsigned char *)(v44 + 113);
  uint64_t v49 = *(void **)(v43 + 120);
  *(void *)(v43 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v44 + 120);

  *(void *)(v43 + 128) = *(void *)(v44 + 128);
  swift_bridgeObjectRelease();
  *(void *)(v43 + 136) = *(void *)(v44 + 136);
  swift_release();
  uint64_t v50 = a3[16];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  *(unsigned char *)uint64_t v51 = *(unsigned char *)v52;
  *(void *)(v51 + 8) = *(void *)(v52 + 8);
  swift_release();
  uint64_t v53 = a3[17];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  id v56 = *(void **)(a1 + v53);
  *(void *)(a1 + v53) = *(void *)(a2 + v53);

  *(void *)(v54 + 8) = *(void *)(v55 + 8);
  swift_release();
  uint64_t v57 = a3[18];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void **)(a1 + v57);
  *(void *)(a1 + v57) = *(void *)(a2 + v57);

  *(void *)(v58 + 8) = *(void *)(v59 + 8);
  swift_release();
  uint64_t v61 = a3[19];
  uint64_t v62 = (void *)(a1 + v61);
  long long v63 = (uint64_t *)(a2 + v61);
  uint64_t v64 = *(void *)(a1 + v61);
  uint64_t v65 = *v63;
  if (!v64)
  {
    if (v65)
    {
      uint64_t v67 = v63[1];
      void *v62 = v65;
      v62[1] = v67;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    return a1;
  }
  if (!v65)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v66 = v63[1];
  void *v62 = v65;
  v62[1] = v66;
  swift_release();
  return a1;
}

uint64_t sub_543C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_543DC);
}

uint64_t sub_543DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_1235B0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_54490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_544A4);
}

uint64_t sub_544A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_1235B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_54550()
{
  sub_4C330();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_54624()
{
  unint64_t result = qword_123A60;
  if (!qword_123A60)
  {
    sub_11B60(&qword_123A68);
    sub_51FE4();
    sub_52378();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123A60);
  }
  return result;
}

__n128 sub_546A0@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSEntryView();
  sub_10C7C(&qword_123A78);
  sub_E6D40();
  sub_E6D40();
  sub_10C7C(&qword_122A50);
  uint64_t v2 = sub_E6D40();
  uint64_t v3 = sub_E4B9C(v2);
  sub_E4C14(v3, v4, v8, *((uint64_t *)&v8 + 1), v9, v8, *((uint64_t *)&v8 + 1), v9, (uint64_t)&v8, v8, *((uint64_t *)&v8 + 1), v9);
  long long v5 = v13;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v5;
  *(_OWORD *)(a1 + 96) = v14;
  long long v6 = v9;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v6;
  __n128 result = v11;
  *(_OWORD *)(a1 + 32) = v10;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

unint64_t sub_547E4()
{
  unint64_t result = qword_123A70;
  if (!qword_123A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123A70);
  }
  return result;
}

double sub_54838@<D0>(uint64_t a1@<X8>)
{
  return sub_51AE0(*(void *)(v1 + 16), a1);
}

uint64_t sub_54840(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_54888(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_18804(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_548CC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_18814(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_54910(uint64_t a1)
{
  *(void *)(a1 + 24sub_E59A4(2, 18, 1, 0) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16sub_E59A4(2, 18, 1, 0) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_5493C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_549A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_54A04(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30)
{
  if (a6)
  {
    id v31 = a28;
    swift_bridgeObjectRetain();
    swift_retain();
    id v32 = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v33 = a10;
    swift_retain();
    swift_retain();
    id v34 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4F628(a30);
  }
}

char *sub_54B70(char *result)
{
  if (result != (unsigned char *)&dword_0 + 1)
  {
    id v2 = result;
    swift_retain();
    return (char *)v2;
  }
  return result;
}

id sub_54BB8(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (a4)
  {
    long long v14 = result;
    swift_retain();
    id v15 = v14;
    swift_retain();
    swift_retain();
    id v16 = a5;
    swift_retain();
    swift_retain();
    id v17 = a8;
    swift_retain();
    swift_retain();
    return a12;
  }
  return result;
}

uint64_t sub_54C80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_54CDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (a4)
  {
    long long v14 = (void *)result;
    swift_release();

    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    return swift_release();
  }
  return result;
}

char *sub_54D94(char *result)
{
  if (result != (unsigned char *)&dword_0 + 1)
  {

    return (char *)swift_release();
  }
  return result;
}

void *sub_54DD8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

void sub_54E5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30)
{
  if (a6)
  {
    swift_release();
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    sub_4F680(a30);
  }
}

uint64_t sub_54FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_123AD8);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_123AE0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  long long v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v6 = sub_E6560();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v11 = sub_10C7C(&qword_123AE8);
  sub_55178(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  sub_E6F30();
  sub_E63C0();
  sub_559EC((uint64_t)v6, (uint64_t)v10, &qword_123AD8);
  long long v12 = &v10[*(int *)(v8 + 44)];
  long long v13 = v17[5];
  *((_OWORD *)v12 + 4) = v17[4];
  *((_OWORD *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = v17[6];
  long long v14 = v17[1];
  *(_OWORD *)long long v12 = v17[0];
  *((_OWORD *)v12 + 1) = v14;
  long long v15 = v17[3];
  *((_OWORD *)v12 + 2) = v17[2];
  *((_OWORD *)v12 + 3) = v15;
  sub_55A50((uint64_t)v6, &qword_123AD8);
  return sub_55988((uint64_t)v10, a2, &qword_123AE0);
}

uint64_t sub_55178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v73 = a1;
  uint64_t v79 = a2;
  uint64_t v2 = sub_E6C40();
  uint64_t v77 = *(void *)(v2 - 8);
  uint64_t v78 = v2;
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_E6AD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_E63B0();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (_OWORD *)((char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10C7C(&qword_1233C8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  long long v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10C7C(&qword_1233D0) - 8;
  __chkstk_darwin(v72);
  uint64_t v71 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10C7C(&qword_1233D8) - 8;
  uint64_t v17 = __chkstk_darwin(v76);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v75 = (uint64_t)&v70 - v20;
  uint64_t v21 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #7.0 }
  _OWORD *v11 = _Q0;
  sub_10C7C(&qword_1233E0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_EB580;
  uint64_t v30 = enum case for Color.RGBColorSpace.sRGB(_:);
  id v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v31(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
  *(void *)(v29 + 32) = sub_E6C10();
  v31(v7, v30, v4);
  *(void *)(v29 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
  *(void *)&long long v85 = v29;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  sub_3FB7C((uint64_t)v11, (uint64_t)v15);
  id v32 = &v15[*(int *)(v13 + 60)];
  long long v33 = v83;
  *(_OWORD *)id v32 = v82;
  *((_OWORD *)v32 + 1) = v33;
  *((void *)v32 + 4) = v84;
  *(_WORD *)&v15[*(int *)(v13 + 64)] = 256;
  sub_39C10((uint64_t)v11);
  uint64_t v34 = sub_E6F30();
  uint64_t v36 = v35;
  id v37 = v73;
  id v38 = [v73 sfSymbolsName];
  sub_E7110();

  sub_E6C30();
  uint64_t v40 = v77;
  uint64_t v39 = v78;
  uint64_t v41 = v74;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v74, enum case for Image.ResizingMode.stretch(_:), v78);
  uint64_t v42 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
  uint64_t v43 = sub_E6BA0();
  LOBYTE(v39) = sub_E6770();
  sub_E6210();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v71;
  sub_559EC((uint64_t)v15, v71, &qword_1233C8);
  uint64_t v53 = v52 + *(int *)(v72 + 44);
  *(void *)uint64_t v53 = v42;
  *(void *)(v53 + 8) = 0;
  *(_WORD *)(v53 + 16) = 1;
  *(void *)(v53 + 24) = v43;
  *(unsigned char *)(v53 + 32) = v39;
  *(void *)(v53 + 4sub_E59A4(2, 18, 1, 0) = v45;
  *(void *)(v53 + 48) = v47;
  *(void *)(v53 + 56) = v49;
  *(void *)(v53 + 64) = v51;
  *(unsigned char *)(v53 + 72) = 0;
  *(void *)(v53 + 8sub_E59A4(2, 18, 1, 0) = v34;
  *(void *)(v53 + 88) = v36;
  sub_55A50((uint64_t)v15, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  sub_559EC(v52, (uint64_t)v19, &qword_1233D0);
  uint64_t v54 = &v19[*(int *)(v76 + 44)];
  long long v55 = v86;
  *(_OWORD *)uint64_t v54 = v85;
  *((_OWORD *)v54 + 1) = v55;
  *((_OWORD *)v54 + 2) = v87;
  sub_55A50(v52, &qword_1233D0);
  uint64_t v56 = v75;
  sub_55988((uint64_t)v19, v75, &qword_1233D8);
  id v57 = [v37 name];
  uint64_t v58 = sub_E7110();
  uint64_t v60 = v59;

  uint64_t v80 = v58;
  uint64_t v81 = v60;
  sub_187B0();
  uint64_t v61 = sub_E6920();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  LOBYTE(v36) = v66 & 1;
  sub_559EC(v56, (uint64_t)v19, &qword_1233D8);
  uint64_t v67 = v79;
  sub_559EC((uint64_t)v19, v79, &qword_1233D8);
  uint64_t v68 = v67 + *(int *)(sub_10C7C(&qword_123B00) + 48);
  *(void *)uint64_t v68 = v61;
  *(void *)(v68 + 8) = v63;
  *(unsigned char *)(v68 + 16) = v36;
  *(void *)(v68 + 24) = v65;
  sub_18804(v61, v63, v36);
  swift_bridgeObjectRetain();
  sub_55A50(v56, &qword_1233D8);
  sub_18814(v61, v63, v36);
  swift_bridgeObjectRelease();
  return sub_55A50((uint64_t)v19, &qword_1233D8);
}

uint64_t sub_55854()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_55878()
{
  return sub_E69D0();
}

uint64_t sub_55894@<X0>(uint64_t a1@<X8>)
{
  return sub_54FD0(*v1, a1);
}

ValueMetadata *type metadata accessor for GCSControllerSheetProfilePickerRow()
{
  return &type metadata for GCSControllerSheetProfilePickerRow;
}

unint64_t sub_558B0()
{
  unint64_t result = qword_123AF0;
  if (!qword_123AF0)
  {
    sub_11B60(&qword_123AE0);
    sub_5592C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123AF0);
  }
  return result;
}

unint64_t sub_5592C()
{
  unint64_t result = qword_123AF8;
  if (!qword_123AF8)
  {
    sub_11B60(&qword_123AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123AF8);
  }
  return result;
}

uint64_t sub_55988(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_559EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_55A50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_55AB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_E6560();
  *(void *)(a2 + 8) = 0x4024000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10C7C(&qword_123B08);
  return sub_55B00(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_55B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_10C7C(&qword_123B20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - v6);
  uint64_t *v7 = sub_E6F30();
  v7[1] = v8;
  uint64_t v9 = sub_10C7C(&qword_123B28);
  sub_55D1C(a1, (uint64_t)v7 + *(int *)(v9 + 44));
  id v10 = [a1 localizedName];
  uint64_t v11 = sub_E7110();
  uint64_t v13 = v12;

  uint64_t v33 = v11;
  uint64_t v34 = v13;
  sub_187B0();
  uint64_t v14 = sub_E6920();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_E6BF0();
  uint64_t v19 = sub_E68E0();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  v23 &= 1u;
  sub_18814(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v26 = v31;
  sub_567C0((uint64_t)v7, v31, &qword_123B20);
  uint64_t v27 = v32;
  sub_567C0(v26, v32, &qword_123B20);
  uint64_t v28 = v27 + *(int *)(sub_10C7C(&qword_123B30) + 48);
  *(void *)uint64_t v28 = v19;
  *(void *)(v28 + 8) = v21;
  *(unsigned char *)(v28 + 16) = v23;
  *(void *)(v28 + 24) = v25;
  sub_18804(v19, v21, v23);
  swift_bridgeObjectRetain();
  sub_56914((uint64_t)v7, &qword_123B20);
  sub_18814(v19, v21, v23);
  swift_bridgeObjectRelease();
  return sub_56914(v26, &qword_123B20);
}

void sub_55D1C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v68 = sub_E6AD0();
  uint64_t v3 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_E63B0();
  __chkstk_darwin(v6);
  uint64_t v8 = (_OWORD *)((char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v69 = sub_10C7C(&qword_1233C8);
  __chkstk_darwin(v69);
  id v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10C7C(&qword_1233D0);
  __chkstk_darwin(v70);
  uint64_t v72 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10C7C(&qword_1233D8);
  uint64_t v12 = __chkstk_darwin(v77);
  uint64_t v71 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v73 = (uint64_t)&v67 - v14;
  uint64_t v76 = sub_10C7C(&qword_123B38);
  __chkstk_darwin(v76);
  uint64_t v74 = (uint64_t *)((char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_E6C40();
  uint64_t v16 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  char v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [a1 bundleIdentifier];
  if (!v19) {
    goto LABEL_5;
  }
  uint64_t v20 = v19;
  sub_E7110();

  NSString v21 = sub_E70D0();
  swift_bridgeObjectRelease();
  id v22 = [self appIconImageForBundleIdentifier:v21];

  if (!v22) {
    goto LABEL_5;
  }
  id v23 = [v22 UIImage];

  if (v23)
  {
    id v24 = v23;
    sub_E6C20();
    uint64_t v25 = v75;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Image.ResizingMode.stretch(_:), v75);
    uint64_t v26 = sub_E6C90();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v25);
    sub_E6F30();
    sub_E62A0();
    uint64_t v27 = v82;
    char v28 = BYTE8(v82);
    uint64_t v29 = v83;
    char v30 = BYTE8(v83);
    uint64_t v31 = v74;
    uint64_t *v74 = v26;
    v31[1] = 0;
    *((_WORD *)v31 + 8) = 257;
    v31[3] = 0x3FF0000000000000;
    *((_WORD *)v31 + 16) = 0;
    v31[5] = v27;
    *((unsigned char *)v31 + 48) = v28;
    v31[7] = v29;
    *((unsigned char *)v31 + 64) = v30;
    *(_OWORD *)(v31 + 9) = v84;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_10C7C(&qword_123B40);
    sub_56854(&qword_123B48, &qword_123B40, (void (*)(void))sub_56824);
    sub_56854((unint64_t *)&qword_123418, &qword_1233D8, (void (*)(void))sub_40644);
    sub_E6610();
    swift_release();
  }
  else
  {
LABEL_5:
    uint64_t v32 = (char *)v8 + *(int *)(v6 + 20);
    uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v34 = sub_E65A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
    __asm { FMOV            V0.2D, #7.0 }
    _OWORD *v8 = _Q0;
    sub_10C7C(&qword_1233E0);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_EB580;
    uint64_t v41 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    uint64_t v43 = v68;
    v42(v5, enum case for Color.RGBColorSpace.sRGB(_:), v68);
    *(void *)(v40 + 32) = sub_E6C10();
    v42(v5, v41, v43);
    *(void *)(v40 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
    *(void *)&long long v82 = v40;
    sub_E7230();
    sub_E6EF0();
    sub_E62E0();
    sub_3FB7C((uint64_t)v8, (uint64_t)v10);
    uint64_t v44 = v69;
    uint64_t v45 = &v10[*(int *)(v69 + 52)];
    long long v46 = v80;
    *(_OWORD *)uint64_t v45 = v79;
    *((_OWORD *)v45 + 1) = v46;
    *((void *)v45 + 4) = v81;
    *(_WORD *)&v10[*(int *)(v44 + 56)] = 256;
    sub_39C10((uint64_t)v8);
    uint64_t v47 = sub_E6F30();
    uint64_t v49 = v48;
    sub_E6C30();
    uint64_t v50 = v75;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Image.ResizingMode.stretch(_:), v75);
    uint64_t v51 = sub_E6C90();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v50);
    uint64_t v52 = sub_E6BA0();
    LOBYTE(v5sub_E59A4(2, 18, 1, 0) = sub_E6770();
    sub_E6210();
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v61 = v72;
    sub_567C0((uint64_t)v10, v72, &qword_1233C8);
    uint64_t v62 = v61 + *(int *)(v70 + 36);
    *(void *)uint64_t v62 = v51;
    *(void *)(v62 + 8) = 0;
    *(_WORD *)(v62 + 16) = 1;
    *(void *)(v62 + 24) = v52;
    *(unsigned char *)(v62 + 32) = v50;
    *(void *)(v62 + 4sub_E59A4(2, 18, 1, 0) = v54;
    *(void *)(v62 + 48) = v56;
    *(void *)(v62 + 56) = v58;
    *(void *)(v62 + 64) = v60;
    *(unsigned char *)(v62 + 72) = 0;
    *(void *)(v62 + 8sub_E59A4(2, 18, 1, 0) = v47;
    *(void *)(v62 + 88) = v49;
    sub_56914((uint64_t)v10, &qword_1233C8);
    sub_E6F30();
    sub_E62A0();
    uint64_t v63 = v71;
    sub_567C0(v61, v71, &qword_1233D0);
    uint64_t v64 = (_OWORD *)(v63 + *(int *)(v77 + 36));
    long long v65 = v83;
    *uint64_t v64 = v82;
    v64[1] = v65;
    v64[2] = v84;
    sub_56914(v61, &qword_1233D0);
    uint64_t v66 = v73;
    sub_56758(v63, v73);
    sub_567C0(v66, (uint64_t)v74, &qword_1233D8);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_123B40);
    sub_56854(&qword_123B48, &qword_123B40, (void (*)(void))sub_56824);
    sub_56854((unint64_t *)&qword_123418, &qword_1233D8, (void (*)(void))sub_40644);
    sub_E6610();
    sub_56914(v66, &qword_1233D8);
  }
}

uint64_t sub_5667C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_566A0()
{
  return sub_E69D0();
}

uint64_t sub_566BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = sub_E6560();
  *(void *)(a1 + 8) = 0x4024000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_10C7C(&qword_123B08);
  return sub_55B00(v3, a1 + *(int *)(v4 + 44));
}

ValueMetadata *type metadata accessor for GCSAppPickerRowView()
{
  return &type metadata for GCSAppPickerRowView;
}

uint64_t sub_5671C()
{
  return sub_568D0(&qword_123B10, &qword_123B18);
}

uint64_t sub_56758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_1233D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_567C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_56824()
{
  return sub_56854(&qword_123B50, &qword_123B58, (void (*)(void))sub_18864);
}

uint64_t sub_56854(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_568D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_56914(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_56970()
{
  return sub_E6C30();
}

unint64_t sub_56A30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_123BB8);
  uint64_t v2 = (void *)sub_E75A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    uint64_t v10 = v4[3];
    uint64_t v9 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21CB8(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    uint64_t v14 = (uint64_t *)(v2[7] + 32 * result);
    uint64_t *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_56B70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_123B80);
  uint64_t v2 = (void *)sub_E75A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_21CB8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_56C8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_123B78);
  uint64_t v2 = (void *)sub_E75A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    uint64_t v9 = v4[1];
    long long v18 = *((_OWORD *)v4 + 2);
    long long v19 = *((_OWORD *)v4 + 1);
    uint64_t v10 = v4[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21CB8(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v13 = v5;
    v13[1] = v6;
    unint64_t v14 = v2[7] + (result << 6);
    *(void *)unint64_t v14 = v7;
    *(void *)(v14 + 8) = v8;
    *(void *)(v14 + 16) = v9;
    *(_OWORD *)(v14 + 24) = v19;
    *(_OWORD *)(v14 + 4sub_E59A4(2, 18, 1, 0) = v18;
    *(void *)(v14 + 56) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 10;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_56E20(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5CA74();
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_21CB8(a1, a2);
    char v7 = v6;
    if (v6)
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v4 + 56) + 32 * v5);
      uint64_t v9 = *v8;
      uint64_t v10 = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  sub_5CF80(v9, v10);
  return v7 & 1;
}

uint64_t sub_56EFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5CA74();
  if (!*(void *)(v4 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_21CB8(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 32 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_56F98(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_5CA74();
  if (!*(void *)(v4 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_21CB8(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 32 * v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_57054()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_57084(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_570BC())()
{
  return nullsub_19;
}

uint64_t sub_570E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_57110(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_57148())()
{
  return nullsub_20;
}

void *sub_5716C()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57178()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57180(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_571AC())()
{
  return nullsub_21;
}

void *sub_571D0()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_571DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_571E4(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 4sub_E59A4(2, 18, 1, 0) = a1;
  return result;
}

uint64_t (*sub_57210())()
{
  return nullsub_22;
}

void *sub_57234()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57240()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57248(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_57274())()
{
  return nullsub_23;
}

void *sub_57298()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_572A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_572AC(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_572D8())()
{
  return nullsub_24;
}

uint64_t sub_572FC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_5732C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_E7170();
  swift_bridgeObjectRelease();
  unint64_t v4 = v1[4];
  swift_bridgeObjectRetain();
  sub_5C494(a1, v4);
  swift_bridgeObjectRelease();
  unint64_t v5 = v2[5];
  swift_bridgeObjectRetain();
  sub_5C494(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2[6];
  uint64_t v11 = v6;
  Swift::UInt v7 = *(void *)(v6 + 16);
  sub_E7680(v7);
  if (v7)
  {
    sub_5CFC4();
    swift_bridgeObjectRetain();
    uint64_t v8 = v6 + 64;
    do
    {
      v8 += 40;
      sub_E7080();
      --v7;
    }
    while (v7);
    sub_39ED8((uint64_t)&v11);
  }
  uint64_t v9 = v2[7];
  swift_bridgeObjectRetain();
  sub_5C3E8(a1, v9);
  return swift_bridgeObjectRelease();
}

id sub_5748C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_E7570();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)sub_E74E0())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)sub_E74E0();
LABEL_22:
    BOOL v13 = v12;
    sub_5D134();
    char v14 = sub_E7390();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)sub_E74E0();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        long long v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_E74E0();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        NSString v21 = v20;
        unint64_t v5 = sub_E7390();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        char v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_E7390();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_57768(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v8 = 1;
    }
    else
    {
      sub_5DB04();
      uint64_t v5 = v2 - 1;
      uint64_t v6 = a2 + 64;
      uint64_t v7 = a1 + 64;
      do
      {
        char v8 = sub_E70A0();
        BOOL v10 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v6 += 40;
        v7 += 40;
      }
      while (v10);
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_57840(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v5 = 1;
    }
    else
    {
      sub_5DAB0();
      uint64_t v3 = 0;
      uint64_t v4 = v2 - 1;
      do
      {
        char v5 = sub_E70A0();
        BOOL v7 = v4-- != 0;
        if ((v5 & 1) == 0) {
          break;
        }
        v3 += 48;
      }
      while (v7);
    }
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

Swift::Int sub_57944()
{
  sub_E7670();
  sub_5732C((uint64_t)v1);
  return sub_E76A0();
}

void *sub_57984()
{
  return &_swiftEmptyArrayStorage;
}

void *sub_57990()
{
  return &_swiftEmptyArrayStorage;
}

void *sub_5799C()
{
  return &_swiftEmptyArrayStorage;
}

void *sub_579A8()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_579B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

Swift::Int sub_579C8()
{
  sub_E7670();
  sub_5732C((uint64_t)v1);
  return sub_E76A0();
}

Swift::Int sub_57A0C()
{
  sub_E7670();
  sub_5732C((uint64_t)v1);
  return sub_E76A0();
}

uint64_t sub_57A48@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_57A54(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v8[2] = a2[2];
  v8[3] = v5;
  return sub_57488(v7, v8) & 1;
}

uint64_t sub_57AA0()
{
  return 0;
}

id sub_57AA8()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void sub_57AD0(void *a1)
{
  id *v1 = a1;
}

uint64_t (*sub_57AFC())()
{
  return nullsub_25;
}

void *sub_57B20()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57B2C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57B34(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_57B60())()
{
  return nullsub_26;
}

uint64_t sub_57B84@<X0>(uint64_t a1@<X8>)
{
  id v2 = sub_35BE4();

  return sub_37C54((uint64_t)v2, a1);
}

uint64_t sub_57BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_37C54(v1 + 16, a1);
}

uint64_t sub_57BC8(uint64_t a1)
{
  return sub_5D0D8(a1, v1 + 16);
}

uint64_t (*sub_57BD0())()
{
  return nullsub_27;
}

unint64_t sub_57BF4()
{
  return sub_56B70((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_57C00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57C08(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*sub_57C34())()
{
  return nullsub_28;
}

void *sub_57C58()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57C64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57C6C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_57C98())()
{
  return nullsub_29;
}

void *sub_57CBC()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57CC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57CD0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*sub_57CFC())()
{
  return nullsub_30;
}

uint64_t sub_57D20()
{
  return 0;
}

uint64_t sub_57D28()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_57D30(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t (*sub_57D38())()
{
  return nullsub_31;
}

uint64_t sub_57D5C()
{
  return 0;
}

uint64_t sub_57D64()
{
  return *(unsigned __int8 *)(v0 + 113);
}

uint64_t sub_57D6C(uint64_t result)
{
  *(unsigned char *)(v1 + 113) = result;
  return result;
}

uint64_t (*sub_57D74())()
{
  return nullsub_32;
}

uint64_t sub_57D98()
{
  return 0;
}

void *sub_57DA0()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = v1;
  return v1;
}

void sub_57DC8(uint64_t a1)
{
  *(void *)(v1 + 12sub_E59A4(2, 18, 1, 0) = a1;
}

uint64_t (*sub_57DF4())()
{
  return nullsub_33;
}

void *sub_57E18()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57E24()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_57E2C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_57E58())()
{
  return nullsub_34;
}

unint64_t sub_57E7C@<X0>(uint64_t a1@<X8>)
{
  id v2 = sub_35BE4();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *((void *)v2 + 1);
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v6 = *((void *)v2 + 3);
  uint64_t v7 = *((void *)v2 + 4);
  uint64_t v8 = *((void *)v2 + 5);
  uint64_t v9 = *((void *)v2 + 6);
  uint64_t v12 = *((void *)v2 + 7);
  uint64_t v10 = *((void *)v2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t result = sub_56B70((uint64_t)_swiftEmptyArrayStorage);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v10;
  *(void *)(a1 + 88) = result;
  *(void *)(a1 + 96) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 104) = _swiftEmptyArrayStorage;
  *(_WORD *)(a1 + 112) = 0;
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(a1 + 128) = _swiftEmptyArrayStorage;
  return result;
}

void *sub_57F38()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_57F44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v384 = 0;
  v385 = _swiftEmptyArrayStorage;
  uint64_t v7 = sub_35BE4();
  unint64_t p_base_props = *((void *)v7 + 2);
  uint64_t v9 = *((void *)v7 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v388 = sub_56B70((uint64_t)_swiftEmptyArrayStorage);
  v389 = _swiftEmptyArrayStorage;
  v390 = _swiftEmptyArrayStorage;
  __int16 v391 = 0;
  v392 = 0;
  v393 = (char *)_swiftEmptyArrayStorage;
  uint64_t v10 = type metadata accessor for GCSProfileParams();
  sub_36620(*(void *)(a1 + *(int *)(v10 + 72)), v386);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v341 = a1;
  if (a2)
  {
    id v11 = a2;
    swift_bridgeObjectRelease();
    id v12 = [v11 localizedProductCategory];
    uint64_t v377 = sub_E7110();
    uint64_t v14 = v13;

    id v15 = [v11 productCategoryKey];
    uint64_t v16 = sub_E7110();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    id v20 = [v11 allButtons];
    sub_5D134();
    sub_E7210();

    sub_DCC8C();
    id v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v23 = [v11 allDpads];
    sub_E7210();

    sub_DD6BC();
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unsigned __int8 v370 = [v11 supportsHaptics];
    unsigned __int8 v365 = [v11 supportsLight];
    id v363 = [v11 shareButton];
    sub_10C7C(&qword_123348);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_EBBE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 32) = v377;
    *(void *)(v26 + 4sub_E59A4(2, 18, 1, 0) = v14;
    *(void *)(v26 + 48) = v16;
    *(void *)(v26 + 56) = v19;
    *(void *)(v26 + 64) = _swiftEmptyArrayStorage;
    *(void *)(v26 + 72) = _swiftEmptyArrayStorage;
    *(void *)(v26 + 8sub_E59A4(2, 18, 1, 0) = v22;
    *(void *)(v26 + 88) = v25;
    id v27 = [v11 buttons];
    uint64_t v28 = sub_E7050();

    id v29 = [v11 dpads];
    uint64_t v30 = sub_E7050();

    uint64_t v9 = sub_5A694(v30, v28);
    sub_2E52C(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    id v32 = v363;
    unsigned __int8 v33 = v365;
    unsigned __int8 v34 = v370;
    goto LABEL_3;
  }
  unint64_t v383 = sub_56B70((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v382 = sub_56B70((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v40 = sub_56C8C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v381 = v40;
  if (a3 >> 62) {
    goto LABEL_301;
  }
  int64_t v41 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
LABEL_6:
  unint64_t v342 = a3;
  int64_t v344 = v41;
  if (!v41)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v252 = 0;
    char v253 = 0;
    v254 = 0;
    BOOL v255 = *(void *)(v40 + 16) > 1uLL;
    goto LABEL_201;
  }
  if (v41 < 1) {
    goto LABEL_303;
  }
  uint64_t v42 = 0;
  unint64_t v343 = a3 & 0xC000000000000001;
  v333 = (void *)(a3 + 32);
  int64x2_t v360 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
  do
  {
    if (v343) {
      id v44 = (id)sub_E74E0();
    }
    else {
      id v44 = *(id *)(a3 + 8 * v42 + 32);
    }
    uint64_t v45 = v44;
    unint64_t p_base_props = (unint64_t)&ResourceBundleClass.base_props;
    id v46 = [v44 productCategoryKey];
    a3 = sub_E7110();
    uint64_t v9 = v47;

    id v48 = [v45 localizedProductCategory];
    uint64_t v49 = sub_E7110();
    uint64_t v378 = v50;

    v371 = v45;
    id v51 = [v45 productCategoryKey];
    uint64_t v52 = sub_E7110();
    uint64_t v54 = v53;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v380[0] = v40;
    unint64_t v57 = sub_21CB8(a3, v9);
    uint64_t v58 = *(void *)(v40 + 16);
    BOOL v59 = (v56 & 1) == 0;
    uint64_t v60 = v58 + v59;
    if (__OFADD__(v58, v59)) {
      goto LABEL_297;
    }
    unint64_t p_base_props = v56;
    if (*(void *)(v40 + 24) >= v60)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v40 = v380[0];
        if (v56) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_5B7D4();
        unint64_t v40 = v380[0];
        if (p_base_props) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_5B00C(v60, isUniquelyReferenced_nonNull_native);
      unint64_t v61 = sub_21CB8(a3, v9);
      if ((p_base_props & 1) != (v62 & 1)) {
        goto LABEL_307;
      }
      unint64_t v57 = v61;
      unint64_t v40 = v380[0];
      if (p_base_props)
      {
LABEL_9:
        uint64_t v43 = (uint64_t *)(*(void *)(v40 + 56) + (v57 << 6));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t *v43 = v49;
        v43[1] = v378;
        v43[2] = v52;
        v43[3] = v54;
        v43[4] = (uint64_t)_swiftEmptyArrayStorage;
        v43[5] = (uint64_t)_swiftEmptyArrayStorage;
        v43[6] = (uint64_t)_swiftEmptyArrayStorage;
        unsigned char v43[7] = (uint64_t)_swiftEmptyArrayStorage;
        goto LABEL_10;
      }
    }
    *(void *)(v40 + 8 * (v57 >> 6) + 64) |= 1 << v57;
    uint64_t v63 = (unint64_t *)(*(void *)(v40 + 48) + 16 * v57);
    *uint64_t v63 = a3;
    v63[1] = v9;
    uint64_t v64 = (int64x2_t *)(*(void *)(v40 + 56) + (v57 << 6));
    v64->i64[0] = v49;
    v64->i64[1] = v378;
    v64[1].i64[0] = v52;
    v64[1].i64[1] = v54;
    v64[2] = v360;
    v64[3] = v360;
    uint64_t v65 = *(void *)(v40 + 16);
    BOOL v66 = __OFADD__(v65, 1);
    uint64_t v67 = v65 + 1;
    if (v66) {
      goto LABEL_298;
    }
    *(void *)(v40 + 16) = v67;
    swift_bridgeObjectRetain();
LABEL_10:
    ++v42;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v342;
  }
  while (v344 != v42);
  unint64_t v381 = v40;
  swift_bridgeObjectRelease();
  unint64_t v379 = *(void *)(v40 + 16);
  id v332 = (id)(v342 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  unsigned __int8 v68 = 0;
  unint64_t v69 = 0;
  id v335 = 0;
  unint64_t p_base_props = 0;
  do
  {
    if (v343)
    {
      unint64_t v40 = v69;
      id v364 = (id)sub_E74E0();
      if ((v40 & 1) == 0) {
        goto LABEL_33;
      }
    }
    else
    {
      if (p_base_props >= *(void *)((char *)&dword_10 + (v342 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_300;
      }
      unint64_t v40 = v69;
      id v364 = (id)v333[p_base_props];
      if ((v40 & 1) == 0)
      {
LABEL_33:
        unsigned int v339 = [v364 supportsHaptics];
        if (v68)
        {
          unsigned __int8 v70 = 1;
          goto LABEL_36;
        }
LABEL_35:
        unsigned __int8 v70 = [v364 supportsLight];
        goto LABEL_36;
      }
    }
    unsigned int v339 = 1;
    unsigned __int8 v70 = 1;
    if ((v68 & 1) == 0) {
      goto LABEL_35;
    }
LABEL_36:
    unsigned __int8 v337 = v70;
    id v71 = [v364 shareButton];
    unint64_t v366 = p_base_props;
    if (!v71) {
      goto LABEL_50;
    }
    uint64_t v72 = v71;
    if (v335)
    {

      goto LABEL_50;
    }
    id v335 = v71;
    if (v379 >= 2)
    {
      id v73 = [v71 name];
      uint64_t v74 = sub_E7110();
      uint64_t v76 = v75;

      unint64_t v40 = sub_5CA74();
      if (*(void *)(v40 + 16))
      {
        swift_bridgeObjectRetain();
        sub_21CB8(v74, v76);
        if (v77)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          id v78 = [v72 name];
          unint64_t v40 = sub_E7110();
          uint64_t v9 = v79;

          unint64_t v80 = sub_5CA74();
          if (*(void *)(v80 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v81 = v40;
            unint64_t v40 = v80;
            unint64_t v82 = sub_21CB8(v81, v9);
            if (v83)
            {
              unint64_t v40 = *(void *)(*(void *)(v80 + 56) + 32 * v82 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              id v84 = [v72 name];
              sub_E7110();
              a3 = v85;

              uint64_t v9 = (uint64_t)[v72 remappingKey];
              id v86 = objc_allocWithZone((Class)GCSElement);
              NSString v87 = sub_E70D0();
              swift_bridgeObjectRelease();
              NSString v88 = sub_E70D0();
              swift_bridgeObjectRelease();
              NSString v89 = sub_E70D0();
              swift_bridgeObjectRelease();
              id v335 = [v86 initWithName:v87 nameLocalizationKey:v88 sfSymbolsName:v89 remappingKey:v9 kind:1];

              goto LABEL_50;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_49:
      swift_bridgeObjectRelease();
      id v335 = v72;
    }
LABEL_50:
    id v90 = [v364 allButtons];
    unint64_t v336 = sub_5D134();
    unint64_t p_base_props = sub_E7210();

    if (p_base_props >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_E7570();
      swift_bridgeObjectRelease();
      if (!v91) {
        goto LABEL_124;
      }
LABEL_52:
      unint64_t v92 = 0;
      unint64_t v359 = p_base_props;
      unint64_t v361 = p_base_props & 0xC000000000000001;
      unint64_t v345 = p_base_props + 32;
      uint64_t v348 = p_base_props & 0xFFFFFFFFFFFFFF8;
      uint64_t v356 = v91;
      while (1)
      {
        if (v361)
        {
          id v93 = (id)sub_E74E0();
        }
        else
        {
          if (v92 >= *(void *)(v348 + 16)) {
            goto LABEL_291;
          }
          id v93 = *(id *)(v345 + 8 * v92);
        }
        uint64_t v94 = v93;
        BOOL v66 = __OFADD__(v92++, 1);
        if (v66) {
          goto LABEL_285;
        }
        id v95 = [v93 name];
        uint64_t v96 = sub_E7110();
        uint64_t v98 = v97;

        unint64_t v40 = v383;
        if (!*(void *)(v383 + 16)) {
          break;
        }
        sub_21CB8(v96, v98);
        if ((v99 & 1) == 0) {
          break;
        }

        swift_bridgeObjectRelease();
LABEL_54:
        if (v92 == v91) {
          goto LABEL_124;
        }
      }
      swift_bridgeObjectRelease();
      id v100 = [v94 name];
      unint64_t p_base_props = sub_E7110();
      uint64_t v9 = v101;

      if (v379 >= 2)
      {
        unint64_t v102 = sub_5CA74();
        if (*(void *)(v102 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v103 = sub_21CB8(p_base_props, v9);
          if (v104)
          {
            uint64_t v105 = (uint64_t *)(*(void *)(v102 + 56) + 32 * v103);
            uint64_t v106 = *v105;
            uint64_t v107 = v105[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_5CF80(v106, v107);
            swift_bridgeObjectRelease();
            id v108 = [v94 name];
            uint64_t v109 = sub_E7110();
            uint64_t v9 = v110;

            if (*(void *)(sub_5CA74() + 16))
            {
              swift_bridgeObjectRetain();
              sub_21CB8(v109, v9);
              if (v111)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                id v112 = [v94 name];
                uint64_t v113 = sub_E7110();
                uint64_t v9 = v114;

                unint64_t v115 = sub_5CA74();
                if (*(void *)(v115 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v116 = sub_21CB8(v113, v9);
                  if (v117)
                  {
                    a3 = *(void *)(*(void *)(v115 + 56) + 32 * v116 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();
                    id v118 = [v94 name];
                    uint64_t v372 = sub_E7110();
                    uint64_t v9 = v119;

                    id v120 = [v94 name];
                    sub_E7110();

                    id v121 = [v94 remappingKey];
                    id v122 = objc_allocWithZone((Class)GCSElement);
                    NSString v123 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    NSString v124 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    NSString v125 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    id v126 = [v122 initWithName:v123 nameLocalizationKey:v124 sfSymbolsName:v125 remappingKey:v121 kind:1];

                    if (v126)
                    {
                      unint64_t v127 = v383;
                      char v128 = swift_isUniquelyReferenced_nonNull_native();
                      v380[0] = v127;
                      unint64_t v383 = 0x8000000000000000;
                      unint64_t v40 = (unint64_t)v380;
                      sub_5BF6C((uint64_t)v126, v372, v9, v128);
                      unint64_t v383 = v380[0];

LABEL_119:
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_120;
                    }
                    unint64_t v40 = (unint64_t)&v383;
                    id v166 = (id)sub_5A9D4(v372, v9);

LABEL_107:
                    swift_bridgeObjectRelease();

LABEL_120:
                    uint64_t v91 = v356;
                    unint64_t p_base_props = v359;
                    goto LABEL_54;
                  }
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
LABEL_86:
            v373 = v94;
            swift_bridgeObjectRelease();
            id v139 = [v364 productCategoryKey];
            uint64_t v140 = sub_E7110();
            uint64_t v142 = v141;

            unint64_t v40 = v381;
            if (*(void *)(v381 + 16) && (unint64_t v143 = sub_21CB8(v140, v142), (v144 & 1) != 0))
            {
              uint64_t v145 = (uint64_t *)(*(void *)(v40 + 56) + (v143 << 6));
              uint64_t v146 = *v145;
              uint64_t v9 = v145[1];
              a3 = v145[2];
              unint64_t v40 = v145[4];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (v9)
              {
                swift_bridgeObjectRetain();
                sub_5D174(v146, v9);
                if (v40 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v147 = sub_E7570();
                  uint64_t v148 = v373;
                  if (v147)
                  {
LABEL_91:
                    unint64_t v350 = v40;
                    unint64_t v353 = v40 & 0xC000000000000001;
                    unint64_t p_base_props = 4;
                    while (1)
                    {
                      if (v353) {
                        id v149 = (id)sub_E74E0();
                      }
                      else {
                        id v149 = *(id *)(v40 + 8 * p_base_props);
                      }
                      __int16 v150 = v149;
                      unint64_t v40 = p_base_props - 3;
                      if (__OFADD__(p_base_props - 4, 1)) {
                        goto LABEL_289;
                      }
                      id v151 = [v149 name];
                      uint64_t v152 = sub_E7110();
                      uint64_t v9 = v153;

                      id v154 = [v148 name];
                      a3 = sub_E7110();
                      uint64_t v156 = v155;

                      BOOL v157 = v152 == a3 && v9 == v156;
                      if (v157)
                      {
                        swift_bridgeObjectRelease_n();

                        uint64_t v91 = v356;
                        uint64_t v148 = v373;
                        goto LABEL_113;
                      }
                      char v158 = sub_E7620();

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v148 = v373;
                      if (v158) {
                        break;
                      }
                      ++p_base_props;
                      BOOL v157 = v40 == v147;
                      unint64_t v40 = v350;
                      if (v157) {
                        goto LABEL_103;
                      }
                    }
                    uint64_t v9 = v350;
                    uint64_t v91 = v356;
LABEL_113:
                    swift_bridgeObjectRelease_n();

                    unint64_t p_base_props = v359;
                    goto LABEL_54;
                  }
                }
                else
                {
                  uint64_t v147 = *(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFFF8));
                  swift_bridgeObjectRetain();
                  uint64_t v148 = v373;
                  if (v147) {
                    goto LABEL_91;
                  }
                }
LABEL_103:
                swift_bridgeObjectRelease_n();
                id v159 = [v364 productCategoryKey];
                uint64_t v160 = sub_E7110();
                uint64_t v162 = v161;

                unint64_t v40 = (unint64_t)&v381;
                long long v164 = sub_5A720(v380, v160, v162);
                if (!*(void *)(v163 + 8))
                {
                  ((void (*)(void *, void))v164)(v380, 0);
                  swift_bridgeObjectRelease();

                  goto LABEL_120;
                }
                uint64_t v165 = v163;
                unint64_t v40 = v163 + 32;
                id v166 = v148;
                sub_E71F0();
                if (*(void *)((char *)&dword_10 + (*(void *)(v165 + 32) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*(void *)(v165 + 32) & 0xFFFFFFFFFFFFFF8)) >> 1) {
                  sub_E7240();
                }
                sub_E7260();
                sub_E7230();
                ((void (*)(void *, void))v164)(v380, 0);
                goto LABEL_107;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }

            goto LABEL_120;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_5CF80(0, 0);
        goto LABEL_86;
      }
      id v129 = v94;
      unint64_t v40 = v383;
      char v130 = swift_isUniquelyReferenced_nonNull_native();
      v380[0] = v40;
      unint64_t v383 = 0x8000000000000000;
      a3 = sub_21CB8(p_base_props, v9);
      uint64_t v132 = *(void *)(v40 + 16);
      BOOL v133 = (v131 & 1) == 0;
      uint64_t v134 = v132 + v133;
      if (__OFADD__(v132, v133)) {
        goto LABEL_293;
      }
      char v135 = v131;
      if (*(void *)(v40 + 24) < v134)
      {
        sub_5B38C(v134, v130);
        unint64_t v136 = sub_21CB8(p_base_props, v9);
        if ((v135 & 1) != (v137 & 1)) {
          goto LABEL_307;
        }
        a3 = v136;
        unint64_t v40 = v380[0];
        if ((v135 & 1) == 0) {
          goto LABEL_116;
        }
LABEL_78:
        uint64_t v138 = *(void *)(v40 + 56);

        *(void *)(v138 + 8 * a3) = v129;
LABEL_118:
        unint64_t v383 = v40;

        goto LABEL_119;
      }
      if (v130)
      {
        unint64_t v40 = v380[0];
        if (v131) {
          goto LABEL_78;
        }
      }
      else
      {
        sub_5BA00();
        unint64_t v40 = v380[0];
        if (v135) {
          goto LABEL_78;
        }
      }
LABEL_116:
      *(void *)(v40 + 8 * (a3 >> 6) + 64) |= 1 << a3;
      long long v167 = (unint64_t *)(*(void *)(v40 + 48) + 16 * a3);
      *long long v167 = p_base_props;
      v167[1] = v9;
      *(void *)(*(void *)(v40 + 56) + 8 * a3) = v129;
      uint64_t v168 = *(void *)(v40 + 16);
      BOOL v66 = __OFADD__(v168, 1);
      uint64_t v169 = v168 + 1;
      if (v66) {
        goto LABEL_295;
      }
      *(void *)(v40 + 16) = v169;
      swift_bridgeObjectRetain();
      goto LABEL_118;
    }
    uint64_t v91 = *(void *)((char *)&dword_10 + (p_base_props & 0xFFFFFFFFFFFFFF8));
    if (v91) {
      goto LABEL_52;
    }
LABEL_124:
    swift_bridgeObjectRelease();
    id v170 = [v364 allDpads];
    unint64_t v171 = sub_E7210();

    if (v171 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_E7570();
      swift_bridgeObjectRelease();
      unint64_t p_base_props = v366;
      if (!v9) {
        goto LABEL_26;
      }
LABEL_126:
      unint64_t v172 = 0;
      unint64_t v362 = v171 & 0xC000000000000001;
      unint64_t v346 = v171 + 32;
      uint64_t v349 = v171 & 0xFFFFFFFFFFFFFF8;
      uint64_t v357 = v9;
      while (1)
      {
        if (v362)
        {
          id v173 = (id)sub_E74E0();
        }
        else
        {
          if (v172 >= *(void *)(v349 + 16)) {
            goto LABEL_292;
          }
          id v173 = *(id *)(v346 + 8 * v172);
        }
        id v174 = v173;
        BOOL v66 = __OFADD__(v172++, 1);
        if (v66) {
          goto LABEL_286;
        }
        id v175 = [v173 name];
        unint64_t p_base_props = sub_E7110();
        uint64_t v177 = v176;

        unint64_t v40 = v382;
        if (!*(void *)(v382 + 16)) {
          break;
        }
        sub_21CB8(p_base_props, v177);
        if ((v178 & 1) == 0) {
          break;
        }

        swift_bridgeObjectRelease();
        unint64_t p_base_props = v366;
LABEL_128:
        if (v172 == v9) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
      id v179 = [v174 name];
      uint64_t v180 = sub_E7110();
      uint64_t v9 = v181;

      if (v379 >= 2)
      {
        unint64_t v182 = sub_5CA74();
        if (*(void *)(v182 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v183 = sub_21CB8(v180, v9);
          if (v184)
          {
            v185 = (uint64_t *)(*(void *)(v182 + 56) + 32 * v183);
            uint64_t v186 = *v185;
            uint64_t v187 = v185[1];
            a3 = v185[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_5CF80(v186, v187);
            swift_bridgeObjectRelease();
            id v188 = [v174 name];
            uint64_t v189 = sub_E7110();
            uint64_t v191 = v190;

            if (*(void *)(sub_5CA74() + 16))
            {
              swift_bridgeObjectRetain();
              sub_21CB8(v189, v191);
              if (v192)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                id v193 = [v174 name];
                uint64_t v194 = sub_E7110();
                uint64_t v196 = v195;

                unint64_t v197 = sub_5CA74();
                if (*(void *)(v197 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v198 = sub_21CB8(v194, v196);
                  if (v199)
                  {
                    a3 = *(void *)(*(void *)(v197 + 56) + 32 * v198 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();
                    id v200 = [v174 name];
                    uint64_t v374 = sub_E7110();
                    uint64_t v202 = v201;

                    id v203 = [v174 name];
                    sub_E7110();

                    id v204 = [v174 remappingKey];
                    id v205 = objc_allocWithZone((Class)GCSElement);
                    NSString v206 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    NSString v207 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    NSString v208 = sub_E70D0();
                    swift_bridgeObjectRelease();
                    id v209 = [v205 initWithName:v206 nameLocalizationKey:v207 sfSymbolsName:v208 remappingKey:v204 kind:2];

                    if (v209)
                    {
                      unint64_t v210 = v382;
                      char v211 = swift_isUniquelyReferenced_nonNull_native();
                      v380[0] = v210;
                      unint64_t v382 = 0x8000000000000000;
                      unint64_t v40 = (unint64_t)v380;
                      sub_5BF6C((uint64_t)v209, v374, v202, v211);
                      unint64_t v382 = v380[0];
LABEL_193:

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_194;
                    }
                    unint64_t v40 = (unint64_t)&v382;
                    id v248 = (id)sub_5A9D4(v374, v202);

LABEL_181:
                    swift_bridgeObjectRelease();

LABEL_194:
                    unint64_t p_base_props = v366;
                    uint64_t v9 = v357;
                    goto LABEL_128;
                  }
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
LABEL_160:
            v375 = v174;
            swift_bridgeObjectRelease();
            id v221 = [v364 productCategoryKey];
            uint64_t v222 = sub_E7110();
            uint64_t v224 = v223;

            unint64_t v40 = v381;
            if (*(void *)(v381 + 16) && (unint64_t v225 = sub_21CB8(v222, v224), (v226 & 1) != 0))
            {
              v227 = (uint64_t *)(*(void *)(v40 + 56) + (v225 << 6));
              uint64_t v228 = *v227;
              a3 = v227[1];
              unint64_t p_base_props = v227[4];
              unint64_t v40 = v227[5];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (a3)
              {
                swift_bridgeObjectRetain();
                sub_5D174(v228, a3);
                if (v40 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v229 = sub_E7570();
                  v230 = v375;
                  if (v229)
                  {
LABEL_165:
                    unint64_t v351 = v40;
                    unint64_t v354 = v40 & 0xC000000000000001;
                    uint64_t v231 = 4;
                    while (1)
                    {
                      if (v354) {
                        id v232 = (id)sub_E74E0();
                      }
                      else {
                        id v232 = *(id *)(v40 + 8 * v231);
                      }
                      uint64_t v9 = (uint64_t)v232;
                      unint64_t v40 = v231 - 3;
                      if (__OFADD__(v231 - 4, 1)) {
                        goto LABEL_290;
                      }
                      id v233 = [v232 name];
                      uint64_t v234 = sub_E7110();
                      a3 = v235;

                      id v236 = [v230 name];
                      uint64_t v237 = sub_E7110();
                      unint64_t p_base_props = v238;

                      if (v234 == v237 && a3 == p_base_props)
                      {
                        swift_bridgeObjectRelease_n();

                        uint64_t v9 = v357;
                        v230 = v375;
                        goto LABEL_187;
                      }
                      char v240 = sub_E7620();

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v230 = v375;
                      if (v240) {
                        break;
                      }
                      ++v231;
                      BOOL v157 = v40 == v229;
                      unint64_t v40 = v351;
                      if (v157) {
                        goto LABEL_177;
                      }
                    }
                    a3 = v351;
                    uint64_t v9 = v357;
LABEL_187:
                    swift_bridgeObjectRelease_n();

                    unint64_t p_base_props = v366;
                    goto LABEL_128;
                  }
                }
                else
                {
                  uint64_t v229 = *(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFFF8));
                  swift_bridgeObjectRetain();
                  v230 = v375;
                  if (v229) {
                    goto LABEL_165;
                  }
                }
LABEL_177:
                swift_bridgeObjectRelease_n();
                id v241 = [v364 productCategoryKey];
                uint64_t v242 = sub_E7110();
                uint64_t v244 = v243;

                unint64_t v40 = (unint64_t)&v381;
                v246 = sub_5A720(v380, v242, v244);
                if (!*(void *)(v245 + 8))
                {
                  ((void (*)(void *, void))v246)(v380, 0);
                  swift_bridgeObjectRelease();

                  goto LABEL_194;
                }
                uint64_t v247 = v245;
                unint64_t v40 = v245 + 40;
                id v248 = v230;
                sub_E71F0();
                if (*(void *)((char *)&dword_10 + (*(void *)(v247 + 40) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*(void *)(v247 + 40) & 0xFFFFFFFFFFFFFF8)) >> 1) {
                  sub_E7240();
                }
                sub_E7260();
                sub_E7230();
                ((void (*)(void *, void))v246)(v380, 0);
                goto LABEL_181;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }

            goto LABEL_194;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_5CF80(0, 0);
        goto LABEL_160;
      }
      id v174 = v174;
      unint64_t v40 = v382;
      char v212 = swift_isUniquelyReferenced_nonNull_native();
      v380[0] = v40;
      unint64_t v382 = 0x8000000000000000;
      a3 = sub_21CB8(v180, v9);
      uint64_t v214 = *(void *)(v40 + 16);
      BOOL v215 = (v213 & 1) == 0;
      uint64_t v216 = v214 + v215;
      if (__OFADD__(v214, v215)) {
        goto LABEL_294;
      }
      char v217 = v213;
      if (*(void *)(v40 + 24) < v216)
      {
        sub_5B38C(v216, v212);
        unint64_t v218 = sub_21CB8(v180, v9);
        if ((v217 & 1) != (v219 & 1)) {
          goto LABEL_307;
        }
        a3 = v218;
        unint64_t v40 = v380[0];
        if ((v217 & 1) == 0) {
          goto LABEL_190;
        }
LABEL_152:
        uint64_t v220 = *(void *)(v40 + 56);

        *(void *)(v220 + 8 * a3) = v174;
LABEL_192:
        unint64_t v382 = v40;
        goto LABEL_193;
      }
      if (v212)
      {
        unint64_t v40 = v380[0];
        if (v213) {
          goto LABEL_152;
        }
      }
      else
      {
        sub_5BA00();
        unint64_t v40 = v380[0];
        if (v217) {
          goto LABEL_152;
        }
      }
LABEL_190:
      *(void *)(v40 + 8 * (a3 >> 6) + 64) |= 1 << a3;
      v249 = (uint64_t *)(*(void *)(v40 + 48) + 16 * a3);
      uint64_t *v249 = v180;
      v249[1] = v9;
      *(void *)(*(void *)(v40 + 56) + 8 * a3) = v174;
      uint64_t v250 = *(void *)(v40 + 16);
      BOOL v66 = __OFADD__(v250, 1);
      uint64_t v251 = v250 + 1;
      if (v66) {
        goto LABEL_296;
      }
      *(void *)(v40 + 16) = v251;
      swift_bridgeObjectRetain();
      goto LABEL_192;
    }
    uint64_t v9 = *(void *)((char *)&dword_10 + (v171 & 0xFFFFFFFFFFFFFF8));
    unint64_t p_base_props = v366;
    if (v9) {
      goto LABEL_126;
    }
LABEL_26:
    ++p_base_props;

    swift_bridgeObjectRelease();
    unsigned __int8 v68 = v337;
    unint64_t v69 = v339;
  }
  while (p_base_props != v344);
  swift_bridgeObjectRelease();
  unsigned __int8 v252 = v337;
  char v253 = v339;
  int64_t v41 = (int64_t)v392;
  BOOL v255 = v379 > 1;
  v254 = v335;
LABEL_201:
  LOBYTE(v391) = v253;
  HIBYTE(v391) = v252;
  id v332 = v254;

  v392 = v254;
  if (v255)
  {
    int64_t v41 = 0xD000000000000014;
LABEL_209:
    swift_bridgeObjectRelease();
    unint64_t v261 = 0x80000000000F2210;
    goto LABEL_210;
  }
  if (!v344)
  {
    int64_t v41 = 0xD000000000000014;
    goto LABEL_209;
  }
  if ((v342 & 0xC000000000000001) != 0)
  {
    id v256 = (id)sub_E74E0();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v342 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
LABEL_307:
      uint64_t result = sub_E7640();
      __break(1u);
      return result;
    }
    id v256 = *(id *)(v342 + 32);
  }
  v257 = v256;
  swift_bridgeObjectRelease();
  id v258 = [v257 productCategoryKey];

  int64_t v41 = sub_E7110();
  unint64_t v260 = v259;

  unint64_t v261 = v260;
LABEL_210:
  uint64_t v262 = v383;
  unint64_t v336 = v261;
  swift_bridgeObjectRetain();
  uint64_t v263 = swift_bridgeObjectRetain();
  sub_5C5AC(v263);
  swift_bridgeObjectRelease();
  sub_DCC8C();
  a3 = v264;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v265 = swift_bridgeObjectRetain();
  sub_5C5AC(v265);
  swift_bridgeObjectRelease();
  sub_DD6BC();
  v267 = v266;
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v268 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_5A694(v268, v262);
  swift_bridgeObjectRetain();
  unint64_t v40 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain_n();
  id v335 = (id)a3;
  swift_bridgeObjectRetain();
  v333 = v267;
  swift_bridgeObjectRetain();
  unint64_t p_base_props = (unint64_t)v393;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_304;
  }
LABEL_211:
  unint64_t v270 = *(void *)(p_base_props + 16);
  unint64_t v269 = *(void *)(p_base_props + 24);
  if (v270 >= v269 >> 1) {
    unint64_t p_base_props = (unint64_t)sub_3B8FC((char *)(v269 > 1), v270 + 1, 1, (char *)p_base_props);
  }
  *(void *)(p_base_props + 16) = v270 + 1;
  v271 = (int64x2_t *)(p_base_props + (v270 << 6));
  v271[2].i64[0] = 0x636972656E6547;
  v271[2].i64[1] = 0xE700000000000000;
  v271[3].i64[0] = v41;
  v271[3].i64[1] = v336;
  v271[4] = vdupq_n_s64(v40);
  unint64_t v40 = (unint64_t)v333;
  v271[5].i64[0] = (uint64_t)v335;
  v271[5].i64[1] = (uint64_t)v333;
  v393 = (char *)p_base_props;
  swift_bridgeObjectRelease();
  v389 = v335;
  swift_bridgeObjectRelease();
  v390 = v333;
  unint64_t v338 = v381 + 64;
  uint64_t v272 = 1 << *(unsigned char *)(v381 + 32);
  uint64_t v273 = -1;
  if (v272 < 64) {
    uint64_t v273 = ~(-1 << v272);
  }
  int64_t v41 = v273 & *(void *)(v381 + 64);
  int64_t v340 = (unint64_t)(v272 + 63) >> 6;
  unint64_t v347 = v381;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v355)
  {
    if (v41)
    {
      uint64_t v352 = (v41 - 1) & v41;
      int64_t v355 = i;
      unint64_t v275 = __clz(__rbit64(v41)) | (i << 6);
      goto LABEL_233;
    }
    int64_t v276 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_299;
    }
    if (v276 >= v340) {
      break;
    }
    unint64_t v277 = *(void *)(v338 + 8 * v276);
    int64_t v278 = i + 1;
    if (!v277)
    {
      int64_t v278 = v276 + 1;
      if (v276 + 1 >= v340) {
        break;
      }
      unint64_t v277 = *(void *)(v338 + 8 * v278);
      if (!v277)
      {
        int64_t v278 = v276 + 2;
        if (v276 + 2 >= v340) {
          break;
        }
        unint64_t v277 = *(void *)(v338 + 8 * v278);
        if (!v277)
        {
          int64_t v279 = v276 + 3;
          if (v279 >= v340) {
            break;
          }
          unint64_t v277 = *(void *)(v338 + 8 * v279);
          if (!v277)
          {
            while (1)
            {
              int64_t v278 = v279 + 1;
              if (__OFADD__(v279, 1)) {
                break;
              }
              if (v278 >= v340) {
                goto LABEL_280;
              }
              unint64_t v277 = *(void *)(v338 + 8 * v278);
              ++v279;
              if (v277) {
                goto LABEL_232;
              }
            }
            __break(1u);
LABEL_303:
            __break(1u);
LABEL_304:
            unint64_t p_base_props = (unint64_t)sub_3B8FC(0, *(void *)(p_base_props + 16) + 1, 1, (char *)p_base_props);
            goto LABEL_211;
          }
          int64_t v278 = v279;
        }
      }
    }
LABEL_232:
    uint64_t v352 = (v277 - 1) & v277;
    int64_t v355 = v278;
    unint64_t v275 = __clz(__rbit64(v277)) + (v278 << 6);
LABEL_233:
    unint64_t v280 = *(void *)(v347 + 56) + (v275 << 6);
    uint64_t v281 = *(void *)(v280 + 8);
    uint64_t v358 = *(void *)v280;
    uint64_t v282 = *(void *)(v280 + 16);
    long long v367 = *(_OWORD *)(v280 + 24);
    a3 = *(void *)(v280 + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_DCC8C();
    unint64_t p_base_props = v283;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_DD6BC();
    uint64_t v285 = v284;
    unint64_t v376 = a3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v286 = v393;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v286 = sub_3B8FC(0, *((void *)v286 + 2) + 1, 1, v286);
    }
    unint64_t v288 = *((void *)v286 + 2);
    unint64_t v287 = *((void *)v286 + 3);
    if (v288 >= v287 >> 1) {
      v286 = sub_3B8FC((char *)(v287 > 1), v288 + 1, 1, v286);
    }
    *((void *)v286 + 2) = v288 + 1;
    v289 = &v286[64 * v288];
    *((void *)v289 + 4) = v358;
    *((void *)v289 + 5) = v281;
    *((void *)v289 + 6) = v282;
    *(_OWORD *)(v289 + 56) = v367;
    *((void *)v289 + 9) = a3;
    *((void *)v289 + 1sub_E59A4(2, 18, 1, 0) = p_base_props;
    *((void *)v289 + 11) = v285;
    v393 = v286;
    sub_5A7F4(p_base_props);
    unint64_t v40 = (unint64_t)&v390;
    sub_5A8E4(v285);
    uint64_t v290 = *((void *)&v367 + 1);
    if (*((void *)&v367 + 1) >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v291 = sub_E7570();
      swift_bridgeObjectRelease();
      uint64_t v290 = *((void *)&v367 + 1);
      if (!v291) {
        goto LABEL_258;
      }
LABEL_239:
      unint64_t v368 = v290 & 0xC000000000000001;
      unint64_t p_base_props = 4;
      while (1)
      {
        if (v368) {
          id v293 = (id)sub_E74E0();
        }
        else {
          id v293 = *(id *)(v290 + 8 * p_base_props);
        }
        unint64_t v40 = (unint64_t)v293;
        a3 = p_base_props - 3;
        if (__OFADD__(p_base_props - 4, 1))
        {
          __break(1u);
LABEL_282:
          __break(1u);
LABEL_283:
          __break(1u);
LABEL_284:
          __break(1u);
LABEL_285:
          __break(1u);
LABEL_286:
          __break(1u);
LABEL_287:
          __break(1u);
LABEL_288:
          __break(1u);
LABEL_289:
          __break(1u);
LABEL_290:
          __break(1u);
LABEL_291:
          __break(1u);
LABEL_292:
          __break(1u);
LABEL_293:
          __break(1u);
LABEL_294:
          __break(1u);
LABEL_295:
          __break(1u);
LABEL_296:
          __break(1u);
LABEL_297:
          __break(1u);
LABEL_298:
          __break(1u);
LABEL_299:
          __break(1u);
LABEL_300:
          __break(1u);
LABEL_301:
          swift_bridgeObjectRetain_n();
          int64_t v41 = sub_E7570();
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        id v294 = [v293 name];
        uint64_t v295 = sub_E7110();
        uint64_t v297 = v296;

        id v298 = (id)v40;
        unint64_t v40 = v9;
        char v299 = swift_isUniquelyReferenced_nonNull_native();
        v380[0] = v9;
        unint64_t v301 = sub_21CB8(v295, v297);
        uint64_t v302 = *(void *)(v9 + 16);
        BOOL v303 = (v300 & 1) == 0;
        uint64_t v304 = v302 + v303;
        if (__OFADD__(v302, v303)) {
          goto LABEL_282;
        }
        uint64_t v9 = v300;
        if (*(void *)(v40 + 24) >= v304)
        {
          if (v299)
          {
            v307 = (void *)v380[0];
            if (v300) {
              goto LABEL_240;
            }
          }
          else
          {
            unint64_t v40 = (unint64_t)v380;
            sub_5BA00();
            v307 = (void *)v380[0];
            if (v9) {
              goto LABEL_240;
            }
          }
        }
        else
        {
          sub_5B38C(v304, v299);
          unint64_t v40 = v380[0];
          unint64_t v305 = sub_21CB8(v295, v297);
          if ((v9 & 1) != (v306 & 1)) {
            goto LABEL_307;
          }
          unint64_t v301 = v305;
          v307 = (void *)v380[0];
          if (v9)
          {
LABEL_240:
            uint64_t v9 = (uint64_t)v307;
            uint64_t v292 = v307[7];
            unint64_t v40 = 8 * v301;

            *(void *)(v292 + 8 * v301) = v298;
            goto LABEL_241;
          }
        }
        v307[(v301 >> 6) + 8] |= 1 << v301;
        v308 = (uint64_t *)(v307[6] + 16 * v301);
        uint64_t *v308 = v295;
        v308[1] = v297;
        *(void *)(v307[7] + 8 * v301) = v298;
        uint64_t v309 = v307[2];
        BOOL v66 = __OFADD__(v309, 1);
        uint64_t v310 = v309 + 1;
        if (v66) {
          goto LABEL_287;
        }
        uint64_t v9 = (uint64_t)v307;
        v307[2] = v310;
        swift_bridgeObjectRetain();
LABEL_241:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++p_base_props;
        uint64_t v290 = *((void *)&v367 + 1);
        if (a3 == v291) {
          goto LABEL_258;
        }
      }
    }
    uint64_t v291 = *(void *)((char *)&dword_10 + (*((void *)&v367 + 1) & 0xFFFFFFFFFFFFFF8));
    if (v291) {
      goto LABEL_239;
    }
LABEL_258:
    swift_bridgeObjectRelease();
    unint64_t v311 = v376;
    if (v376 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v312 = sub_E7570();
      swift_bridgeObjectRelease();
      unint64_t v311 = v376;
      if (!v312) {
        goto LABEL_216;
      }
LABEL_260:
      unint64_t v369 = v311 & 0xC000000000000001;
      unint64_t p_base_props = 4;
      while (1)
      {
        if (v369) {
          id v314 = (id)sub_E74E0();
        }
        else {
          id v314 = *(id *)(v311 + 8 * p_base_props);
        }
        unint64_t v40 = (unint64_t)v314;
        a3 = p_base_props - 3;
        if (__OFADD__(p_base_props - 4, 1)) {
          goto LABEL_283;
        }
        id v315 = [v314 name];
        uint64_t v316 = sub_E7110();
        uint64_t v318 = v317;

        id v319 = (id)v40;
        unint64_t v40 = v9;
        char v320 = swift_isUniquelyReferenced_nonNull_native();
        v380[0] = v9;
        unint64_t v322 = sub_21CB8(v316, v318);
        uint64_t v323 = *(void *)(v9 + 16);
        BOOL v324 = (v321 & 1) == 0;
        uint64_t v325 = v323 + v324;
        if (__OFADD__(v323, v324)) {
          goto LABEL_284;
        }
        uint64_t v9 = v321;
        if (*(void *)(v40 + 24) >= v325)
        {
          if (v320)
          {
            v328 = (void *)v380[0];
            if (v321) {
              goto LABEL_261;
            }
          }
          else
          {
            unint64_t v40 = (unint64_t)v380;
            sub_5BA00();
            v328 = (void *)v380[0];
            if (v9) {
              goto LABEL_261;
            }
          }
        }
        else
        {
          sub_5B38C(v325, v320);
          unint64_t v40 = v380[0];
          unint64_t v326 = sub_21CB8(v316, v318);
          if ((v9 & 1) != (v327 & 1)) {
            goto LABEL_307;
          }
          unint64_t v322 = v326;
          v328 = (void *)v380[0];
          if (v9)
          {
LABEL_261:
            uint64_t v9 = (uint64_t)v328;
            uint64_t v313 = v328[7];
            unint64_t v40 = 8 * v322;

            *(void *)(v313 + 8 * v322) = v319;
            goto LABEL_262;
          }
        }
        v328[(v322 >> 6) + 8] |= 1 << v322;
        v329 = (uint64_t *)(v328[6] + 16 * v322);
        uint64_t *v329 = v316;
        v329[1] = v318;
        *(void *)(v328[7] + 8 * v322) = v319;
        uint64_t v330 = v328[2];
        BOOL v66 = __OFADD__(v330, 1);
        uint64_t v331 = v330 + 1;
        if (v66) {
          goto LABEL_288;
        }
        uint64_t v9 = (uint64_t)v328;
        v328[2] = v331;
        swift_bridgeObjectRetain();
LABEL_262:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++p_base_props;
        unint64_t v311 = v376;
        if (a3 == v312) {
          goto LABEL_216;
        }
      }
    }
    uint64_t v312 = *(void *)((char *)&dword_10 + (v376 & 0xFFFFFFFFFFFFFF8));
    if (v312) {
      goto LABEL_260;
    }
LABEL_216:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v41 = v352;
  }
LABEL_280:

  swift_release();
  sub_2E52C(v341);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  id v22 = v389;
  uint64_t v25 = v390;
  unsigned __int8 v34 = v391;
  unsigned __int8 v33 = HIBYTE(v391);
  id v32 = v392;
  uint64_t v26 = (uint64_t)v393;
LABEL_3:
  uint64_t v35 = v385;
  long long v36 = v386[2];
  long long v37 = v386[3];
  uint64_t v38 = v387;
  *(void *)a4 = v384;
  *(void *)(a4 + 8) = v35;
  long long v39 = v386[1];
  *(_OWORD *)(a4 + 16) = v386[0];
  *(_OWORD *)(a4 + 32) = v39;
  *(_OWORD *)(a4 + 48) = v36;
  *(_OWORD *)(a4 + 64) = v37;
  *(void *)(a4 + 8sub_E59A4(2, 18, 1, 0) = v38;
  *(void *)(a4 + 88) = v9;
  *(void *)(a4 + 96) = v22;
  *(void *)(a4 + 104) = v25;
  *(unsigned char *)(a4 + 112) = v34;
  *(unsigned char *)(a4 + 113) = v33;
  *(void *)(a4 + 12sub_E59A4(2, 18, 1, 0) = v32;
  *(void *)(a4 + 128) = v26;
  return result;
}

uint64_t sub_5A694(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_5C0DC(a1, (uint64_t)sub_5C894, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

void (*sub_5A720(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_5AAA4(v6, a2, a3);
  return sub_5A7A0;
}

void sub_5A7A0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_5A7F4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_5ACDC((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_5A8E4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_5ABC4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_5A9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21CB8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_5BA00();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_5BD94(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

void (*sub_5AAA4(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  _OWORD v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_5AFD0(v6);
  v6[10] = sub_5ADF4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_5AB50;
}

void sub_5AB50(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

char *sub_5ABC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_123B88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_6(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_5ACDC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_123B90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_6(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void (*sub_5ADF4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  char v5 = v4;
  uint64_t v10 = (char *)malloc(0x68uLL);
  *a1 = v10;
  *((void *)v10 + 9) = a3;
  *((void *)v10 + 1sub_E59A4(2, 18, 1, 0) = v4;
  *((void *)v10 + 8) = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_21CB8(a2, a3);
  v10[96] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 11) = v13;
      if (v17)
      {
LABEL_8:
        unint64_t v19 = *(void *)(*v5 + 56) + (v13 << 6);
        uint64_t v20 = *(void *)v19;
        uint64_t v21 = *(void *)(v19 + 8);
        uint64_t v22 = *(void *)(v19 + 16);
        long long v23 = *(_OWORD *)(v19 + 24);
        long long v24 = *(_OWORD *)(v19 + 40);
        uint64_t v25 = *(void *)(v19 + 56);
LABEL_12:
        *(void *)uint64_t v10 = v20;
        *((void *)v10 + 1) = v21;
        *((void *)v10 + 2) = v22;
        *(_OWORD *)(v10 + 24) = v23;
        *(_OWORD *)(v10 + 4sub_E59A4(2, 18, 1, 0) = v24;
        *((void *)v10 + 7) = v25;
        return sub_5AF74;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v25 = 0;
      long long v23 = 0uLL;
      long long v24 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_5B7D4();
      goto LABEL_7;
    }
    sub_5B00C(v16, a4 & 1);
    unint64_t v26 = sub_21CB8(a2, a3);
    if ((v17 & 1) == (v27 & 1))
    {
      unint64_t v13 = v26;
      *((void *)v10 + 11) = v26;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_E7640();
  __break(1u);
  return result;
}

void sub_5AF74(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_5B69C(*a1, *((unsigned char *)*a1 + 96), (uint64_t *)(*a1)[10], (*a1)[11], (*a1)[8], (*a1)[9]);
  sub_5D174(*v1, v1[1]);

  free(v1);
}

uint64_t (*sub_5AFD0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_5B000;
}

uint64_t sub_5B000(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_5B00C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10C7C(&qword_123B78);
  char v40 = a2;
  uint64_t v6 = sub_E7590();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      unint64_t v32 = *(void *)(v5 + 56) + (v21 << 6);
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v41 = *(void *)(v32 + 16);
      long long v42 = *(_OWORD *)(v32 + 40);
      long long v43 = *(_OWORD *)(v32 + 24);
      uint64_t v35 = *(void *)(v32 + 56);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_E7670();
      sub_E7170();
      uint64_t result = sub_E76A0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
      *(void *)unint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(void *)(v19 + 16) = v41;
      *(_OWORD *)(v19 + 24) = v43;
      *(_OWORD *)(v19 + 4sub_E59A4(2, 18, 1, 0) = v42;
      *(void *)(v19 + 56) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_5B38C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10C7C(&qword_123B80);
  char v38 = a2;
  uint64_t v6 = sub_E7590();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_E7670();
    sub_E7170();
    uint64_t result = sub_E76A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t *sub_5B69C(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *result;
  uint64_t v8 = result[1];
  uint64_t v10 = result[2];
  uint64_t v11 = result[3];
  uint64_t v12 = result[4];
  uint64_t v13 = result[5];
  uint64_t v14 = result[6];
  uint64_t v15 = result[7];
  if (v8)
  {
    unint64_t v16 = (void *)*a3;
    if (a2)
    {
      unint64_t v17 = (uint64_t *)(v16[7] + (a4 << 6));
      *unint64_t v17 = v9;
      v17[1] = v8;
      void v17[2] = v10;
      v17[3] = v11;
      v17[4] = v12;
      v17[5] = v13;
      v17[6] = v14;
      _OWORD v17[7] = v15;
    }
    else
    {
      v16[(a4 >> 6) + 8] |= 1 << a4;
      uint64_t v18 = (void *)(v16[6] + 16 * a4);
      *uint64_t v18 = a5;
      v18[1] = a6;
      unint64_t v19 = (uint64_t *)(v16[7] + (a4 << 6));
      *unint64_t v19 = v9;
      v19[1] = v8;
      v19[2] = v10;
      v19[3] = v11;
      v19[4] = v12;
      long long v19[5] = v13;
      v19[6] = v14;
      v19[7] = v15;
      uint64_t v20 = v16[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21)
      {
        __break(1u);
        return result;
      }
      v16[2] = v22;
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_5BBB4(a4, *a3);
  }

  return (uint64_t *)sub_5DA28(v9, v8);
}

void *sub_5B7D4()
{
  uint64_t v1 = v0;
  sub_10C7C(&qword_123B78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_E7580();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = v15 << 6;
    unint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 56);
    unint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 24);
    long long v32 = *(_OWORD *)(v21 + 40);
    void *v26 = v19;
    v26[1] = v18;
    unint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)unint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(void *)(v28 + 16) = v24;
    *(_OWORD *)(v28 + 24) = v27;
    *(_OWORD *)(v28 + 4sub_E59A4(2, 18, 1, 0) = v32;
    *(void *)(v28 + 56) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_5BA00()
{
  uint64_t v1 = v0;
  sub_10C7C(&qword_123B80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_E7580();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_5BBB4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    id result = sub_E7470();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_E7670();
        swift_bridgeObjectRetain();
        sub_E7170();
        Swift::Int v12 = sub_E76A0();
        id result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            _OWORD *v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (long long *)(v17 + (v3 << 6));
          uint64_t v19 = (long long *)(v17 + (v6 << 6));
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 4))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            long long v11 = v19[3];
            _OWORD v18[2] = v19[2];
            v18[3] = v11;
            *uint64_t v18 = v9;
            v18[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_5BD94(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    id result = sub_E7470();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_E7670();
        swift_bridgeObjectRetain();
        sub_E7170();
        Swift::Int v9 = sub_E76A0();
        id result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_5BF6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21CB8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_5BA00();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_5B38C(v15, a4 & 1);
  unint64_t v20 = sub_21CB8(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_E7640();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_5C0DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_5C8E0();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v54 = v9;
  unint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_21CB8(v7, v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      char v21 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_5BA00();
      char v21 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v21[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v25 = (uint64_t *)(v21[6] + 16 * v14);
    uint64_t *v25 = v10;
    v25[1] = v11;
    *(void *)(v21[7] + 8 * v14) = v54;
    uint64_t v26 = v21[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v28;
LABEL_13:
    sub_5C8E0();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      uint64_t v34 = v31;
      do
      {
        uint64_t v41 = (void *)*a5;
        unint64_t v42 = sub_21CB8(v32, v33);
        uint64_t v44 = v41[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v27 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v27) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v41[3] < v46)
        {
          sub_5B38C(v46, 1);
          unint64_t v42 = sub_21CB8(v32, v33);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v49 = (void *)*a5;
        if (v47)
        {
          uint64_t v35 = 8 * v42;
          id v36 = *(id *)(v49[7] + 8 * v42);
          swift_bridgeObjectRelease();

          uint64_t v37 = v49[7];
          *(void *)(v37 + v35) = v36;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          uint64_t v50 = (uint64_t *)(v49[6] + 16 * v42);
          *uint64_t v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_25;
          }
          v49[2] = v52;
        }
        sub_5C8E0();
        uint64_t v32 = v38;
        uint64_t v33 = v39;
        uint64_t v34 = v40;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_5DA20();
    return swift_release();
  }
  sub_5B38C(v17, a4 & 1);
  unint64_t v19 = sub_21CB8(v10, v11);
  if ((v18 & 1) == (v20 & 1))
  {
    unint64_t v14 = v19;
    char v21 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v22 = 8 * v14;
    id v23 = *(id *)(v21[7] + 8 * v14);
    swift_bridgeObjectRelease();

    uint64_t v24 = v21[7];
    *(void *)(v24 + v22) = v23;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_E7640();
  __break(1u);
  return result;
}

void sub_5C3E8(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_E7680(v3);
  if (v3)
  {
    sub_5DB58();
    uint64_t v4 = a2 + 74;
    do
    {
      v4 += 48;
      sub_E7080();
      --v3;
    }
    while (v3);
  }
}

void sub_5C494(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v8 = sub_E7570();
    swift_bridgeObjectRelease();
    sub_E7680(v8);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_E7570();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_E7680(*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)));
    uint64_t v3 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      sub_E74E0();
      sub_E73A0();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      unint64_t v6 = *v5++;
      id v7 = v6;
      sub_E73A0();

      --v3;
    }
    while (v3);
  }
}

void *sub_5C5AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10C7C(&qword_124D90);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size_6(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  unint64_t v6 = sub_5C698(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_5DA20();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_5C698(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_5C894@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

void sub_5C8E0()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    int64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      unint64_t v15 = v0[1];
      unint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      int64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          int64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            unint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              unint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              unint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                unint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

unint64_t sub_5CA74()
{
  sub_10C7C(&qword_123BB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_ED6A0;
  *(void *)(inited + 32) = sub_E7110();
  *(void *)(inited + 4sub_E59A4(2, 18, 1, 0) = v1;
  *(void *)(inited + 48) = 0xD000000000000013;
  *(void *)(inited + 56) = 0x80000000000F2230;
  strcpy((char *)(inited + 64), "house.circle");
  *(unsigned char *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(void *)(inited + 8sub_E59A4(2, 18, 1, 0) = sub_E7110();
  *(void *)(inited + 88) = v2;
  *(void *)(inited + 96) = 0xD000000000000013;
  *(void *)(inited + 104) = 0x80000000000F2250;
  *(void *)(inited + 112) = 0xD000000000000018;
  *(void *)(inited + 12sub_E59A4(2, 18, 1, 0) = 0x80000000000F2270;
  *(void *)(inited + 128) = sub_E7110();
  *(void *)(inited + 136) = v3;
  *(void *)(inited + 144) = 0xD000000000000016;
  *(void *)(inited + 152) = 0x80000000000F2290;
  *(void *)(inited + 16sub_E59A4(2, 18, 1, 0) = 0x73697370696C6C65;
  *(void *)(inited + 168) = 0xEF656C637269632ELL;
  *(void *)(inited + 176) = sub_E7110();
  *(void *)(inited + 184) = v4;
  *(void *)(inited + 192) = 0xD000000000000014;
  *(void *)(inited + 20sub_E59A4(2, 18, 1, 0) = 0x80000000000F22B0;
  *(void *)(inited + 208) = 0xD00000000000001ALL;
  *(void *)(inited + 216) = 0x80000000000F22D0;
  *(void *)(inited + 224) = sub_E7110();
  *(void *)(inited + 232) = v5;
  *(void *)(inited + 24sub_E59A4(2, 18, 1, 0) = 0xD000000000000010;
  *(void *)(inited + 248) = 0x80000000000F22F0;
  *(void *)(inited + 256) = 0xD00000000000001DLL;
  *(void *)(inited + 264) = 0x80000000000F2310;
  *(void *)(inited + 272) = sub_E7110();
  *(void *)(inited + 28sub_E59A4(2, 18, 1, 0) = v6;
  *(void *)(inited + 288) = 0xD000000000000010;
  *(void *)(inited + 296) = 0x80000000000F2330;
  *(void *)(inited + 304) = 0xD00000000000001ELL;
  *(void *)(inited + 312) = 0x80000000000F2350;
  *(void *)(inited + 32sub_E59A4(2, 18, 1, 0) = sub_E7110();
  *(void *)(inited + 328) = v7;
  *(void *)(inited + 336) = 0xD000000000000010;
  *(void *)(inited + 344) = 0x80000000000F2370;
  *(void *)(inited + 352) = 0xD00000000000001DLL;
  *(void *)(inited + 36sub_E59A4(2, 18, 1, 0) = 0x80000000000F2390;
  *(void *)(inited + 368) = sub_E7110();
  *(void *)(inited + 376) = v8;
  *(void *)(inited + 384) = 0xD000000000000010;
  *(void *)(inited + 392) = 0x80000000000F23B0;
  *(void *)(inited + 40sub_E59A4(2, 18, 1, 0) = 0xD00000000000001BLL;
  *(void *)(inited + 408) = 0x80000000000F23D0;
  *(void *)(inited + 416) = sub_E7110();
  *(void *)(inited + 424) = v9;
  *(void *)(inited + 432) = 0xD00000000000001ELL;
  *(void *)(inited + 44sub_E59A4(2, 18, 1, 0) = 0x80000000000F23F0;
  *(void *)(inited + 448) = 0xD000000000000015;
  *(void *)(inited + 456) = 0x80000000000F2410;
  *(void *)(inited + 464) = sub_E7110();
  *(void *)(inited + 472) = v10;
  *(void *)(inited + 48sub_E59A4(2, 18, 1, 0) = 0xD00000000000001FLL;
  *(void *)(inited + 488) = 0x80000000000F2430;
  *(void *)(inited + 496) = 0xD000000000000015;
  *(void *)(inited + 504) = 0x80000000000F2450;
  *(void *)(inited + 512) = sub_E7110();
  *(void *)(inited + 52sub_E59A4(2, 18, 1, 0) = v11;
  *(void *)(inited + 528) = 0xD000000000000017;
  *(void *)(inited + 536) = 0x80000000000F2470;
  *(void *)(inited + 544) = 0x697473796F6A2E6CLL;
  *(void *)(inited + 552) = 0xEA00000000006B63;
  *(void *)(inited + 56sub_E59A4(2, 18, 1, 0) = sub_E7110();
  *(void *)(inited + 568) = v12;
  *(void *)(inited + 576) = 0xD000000000000018;
  *(void *)(inited + 584) = 0x80000000000F2490;
  *(void *)(inited + 592) = 0x697473796F6A2E72;
  *(void *)(inited + 60sub_E59A4(2, 18, 1, 0) = 0xEA00000000006B63;
  *(void *)(inited + 608) = sub_E7110();
  *(void *)(inited + 616) = v13;
  *(void *)(inited + 624) = 0xD000000000000015;
  *(void *)(inited + 632) = 0x80000000000F24B0;
  *(void *)(inited + 64sub_E59A4(2, 18, 1, 0) = 1684107364;
  *(void *)(inited + 648) = 0xE400000000000000;
  *(void *)(inited + 656) = sub_E7110();
  *(void *)(inited + 664) = v14;
  *(void *)(inited + 672) = 0xD000000000000015;
  *(void *)(inited + 68sub_E59A4(2, 18, 1, 0) = 0x80000000000F24D0;
  *(void *)(inited + 688) = 0xD00000000000001ALL;
  *(void *)(inited + 696) = 0x80000000000F24F0;
  *(void *)(inited + 704) = sub_E7110();
  *(void *)(inited + 712) = v15;
  *(void *)(inited + 72sub_E59A4(2, 18, 1, 0) = 0xD000000000000016;
  *(void *)(inited + 728) = 0x80000000000F2510;
  *(void *)(inited + 736) = 0xD00000000000001ALL;
  *(void *)(inited + 744) = 0x80000000000F2530;
  *(void *)(inited + 752) = sub_E7110();
  *(void *)(inited + 76sub_E59A4(2, 18, 1, 0) = v16;
  *(void *)(inited + 768) = 0xD000000000000014;
  *(void *)(inited + 776) = 0x80000000000F2550;
  *(void *)(inited + 784) = 0xD000000000000017;
  *(void *)(inited + 792) = 0x80000000000F2570;
  *(void *)(inited + 80sub_E59A4(2, 18, 1, 0) = sub_E7110();
  *(void *)(inited + 808) = v17;
  *(void *)(inited + 816) = 0xD000000000000015;
  *(void *)(inited + 824) = 0x80000000000F2590;
  *(void *)(inited + 832) = 0xD000000000000017;
  *(void *)(inited + 84sub_E59A4(2, 18, 1, 0) = 0x80000000000F25B0;
  return sub_56A30(inited);
}

uint64_t sub_5CF80(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_5CFC4()
{
  unint64_t result = qword_123B60;
  if (!qword_123B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123B60);
  }
  return result;
}

uint64_t sub_5D018(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_E7620() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_E7620() & 1) == 0
    || (sub_5748C(a1[4], a2[4]) & 1) == 0
    || (sub_5748C(a1[5], a2[5]) & 1) == 0
    || (sub_57768(a1[6], a2[6]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = a1[7];
  uint64_t v7 = a2[7];

  return sub_57840(v6, v7);
}

uint64_t sub_5D0D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_5D134()
{
  unint64_t result = qword_123B68;
  if (!qword_123B68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_123B68);
  }
  return result;
}

uint64_t sub_5D174(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_5D1FC()
{
  unint64_t result = qword_123B70;
  if (!qword_123B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123B70);
  }
  return result;
}

void *sub_5D250()
{
  return &protocol witness table for String;
}

ValueMetadata *type metadata accessor for GCSProfileGenericElements()
{
  return &type metadata for GCSProfileGenericElements;
}

uint64_t destroy for GCSProfileElementCustomizationData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GCSProfileElementCustomizationData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GCSProfileElementCustomizationData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GCSProfileElementCustomizationData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GCSProfileElementCustomizationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileElementCustomizationData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileElementCustomizationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileElementCustomizationData()
{
  return &type metadata for GCSProfileElementCustomizationData;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSProfileViewData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSProfileViewData(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GCSProfileViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  uint64_t v11 = *(void **)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v11;
  *(void *)(a1 + 128) = v10;
  id v12 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GCSProfileViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  uint64_t v7 = *(void **)(a1 + 120);
  uint64_t v8 = *(void **)(a2 + 120);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v8;
  id v9 = v8;

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GCSProfileViewData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 8sub_E59A4(2, 18, 1, 0) = result;
  return result;
}

uint64_t assignWithTake for GCSProfileViewData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);

  *(_OWORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 12sub_E59A4(2, 18, 1, 0) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileViewData()
{
  return &type metadata for GCSProfileViewData;
}

uint64_t sub_5DA20()
{
  return swift_release();
}

uint64_t sub_5DA28(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_5DAB0()
{
  unint64_t result = qword_123B98;
  if (!qword_123B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123B98);
  }
  return result;
}

unint64_t sub_5DB04()
{
  unint64_t result = qword_123BA0;
  if (!qword_123BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123BA0);
  }
  return result;
}

unint64_t sub_5DB58()
{
  unint64_t result = qword_123BA8;
  if (!qword_123BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123BA8);
  }
  return result;
}

uint64_t sub_5DBB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_5DBE4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_5DC1C())()
{
  return nullsub_35;
}

uint64_t sub_5DC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_5DC74(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_5DCAC())()
{
  return nullsub_36;
}

uint64_t sub_5DCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v22[1] = a5;
  uint64_t v9 = sub_E66A0();
  v22[0] = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_123BC0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  v22[4] = a1;
  v22[5] = a2;
  v22[6] = a3;
  v22[7] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10C7C(&qword_123BC8);
  uint64_t v17 = sub_11B60(&qword_123BD0);
  uint64_t v18 = sub_E6580();
  unint64_t v19 = sub_5E3C0();
  uint64_t v20 = sub_5E4C8(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  v22[8] = v17;
  v22[9] = v18;
  v22[10] = v19;
  v22[11] = v20;
  swift_getOpaqueTypeConformance2();
  sub_E6D80();
  sub_E6690();
  sub_5E484(&qword_123BF0, &qword_123BC0);
  sub_5E4C8((unint64_t *)&qword_1228C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_5DFE8()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_5E010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v5 = sub_E6580();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  __chkstk_darwin(v5);
  uint64_t v25 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_E6C80();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_1228A8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10C7C(&qword_123BD0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_187B0();
  swift_bridgeObjectRetain();
  sub_E6CA0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.Scale.large(_:), v8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  uint64_t v21 = sub_10C7C(&qword_123BE8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v20 + *(int *)(v21 + 28), v11, v8);
  uint64_t *v20 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v22 = v25;
  sub_E6570();
  sub_5E3C0();
  sub_5E4C8(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v23 = v26;
  sub_E6970();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v23);
  return sub_5EC64((uint64_t)v18);
}

uint64_t sub_5E3B8@<X0>(uint64_t a1@<X8>)
{
  return sub_5E010(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_5E3C0()
{
  unint64_t result = qword_123BD8;
  if (!qword_123BD8)
  {
    sub_11B60(&qword_123BD0);
    sub_5E484(&qword_1228B0, &qword_1228A8);
    sub_5E484(&qword_123BE0, &qword_123BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123BD8);
  }
  return result;
}

uint64_t sub_5E484(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5E4C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5E514()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_5E538()
{
  return sub_E69D0();
}

uint64_t sub_5E554@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  v20[0] = sub_E66A0();
  uint64_t v2 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10C7C(&qword_123BC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v10;
  v13[4] = v12;
  v13[5] = v11;
  v20[4] = v9;
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10C7C(&qword_123BC8);
  uint64_t v14 = sub_11B60(&qword_123BD0);
  uint64_t v15 = sub_E6580();
  unint64_t v16 = sub_5E3C0();
  uint64_t v17 = sub_5E4C8(&qword_1228B8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  v20[8] = v14;
  v20[9] = v15;
  v20[10] = v16;
  v20[11] = v17;
  swift_getOpaqueTypeConformance2();
  sub_E6D80();
  sub_E6690();
  sub_5E484(&qword_123BF0, &qword_123BC0);
  sub_5E4C8((unint64_t *)&qword_1228C8, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v18 = v20[0];
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t initializeBufferWithCopyOfBuffer for FormInfoButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for FormInfoButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for FormInfoButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormInfoButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormInfoButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormInfoButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormInfoButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormInfoButton()
{
  return &type metadata for FormInfoButton;
}

uint64_t sub_5EA64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_5EB38()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_5EB78()
{
  return sub_E6400();
}

uint64_t sub_5EB9C(uint64_t a1)
{
  uint64_t v2 = sub_E6C80();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_E6410();
}

uint64_t sub_5EC64(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_123BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5ECD0(char a1)
{
  uint64_t result = 44;
  switch(a1)
  {
    case 1:
      uint64_t result = 0;
      break;
    case 2:
      uint64_t result = 10;
      break;
    case 3:
      uint64_t result = 32;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_5ED2C(char *a1, char *a2)
{
  return sub_5ED38(*a1, *a2);
}

uint64_t sub_5ED38(char a1, char a2)
{
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 44;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0;
      unint64_t v3 = 0xE000000000000000;
      break;
    case 2:
      uint64_t v4 = 10;
      break;
    case 3:
      uint64_t v4 = 32;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE100000000000000;
  uint64_t v6 = 44;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xE000000000000000;
      if (!v4) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v6 = 10;
      goto LABEL_9;
    case 3:
      if (v4 == 32) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_5EE5C()
{
  return sub_E76A0();
}

uint64_t sub_5EF00()
{
  sub_E7170();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_5EF8C()
{
  return sub_E76A0();
}

uint64_t sub_5F02C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_5F3F8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_5F05C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE100000000000000;
  uint64_t v3 = 44;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0;
      unint64_t v2 = 0xE000000000000000;
      goto LABEL_3;
    case 2:
      *a1 = 10;
      a1[1] = 0xE100000000000000;
      break;
    case 3:
      *a1 = 32;
      a1[1] = 0xE100000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_5F0C0()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_4D5E8();
  sub_187B0();
  char v2 = sub_E7430();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_4D600();
    uint64_t v4 = sub_E73F0();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v4;
    v1[1] = v6;
  }
  return result;
}

uint64_t sub_5F1C8(uint64_t a1, void *a2)
{
  uint64_t v8 = *(void *)sub_4D5B0();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  sub_E71A0(v9);
  uint64_t v4 = (uint64_t *)sub_4D5CC();
  uint64_t v5 = *v4;
  uint64_t v6 = (void *)v4[1];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v5;
  v10._object = v6;
  sub_E71A0(v10);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_5F250()
{
  sub_187B0();
  sub_E73F0();
  uint64_t v0 = sub_E73F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_5F3F8(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1143C8;
  v6._object = a2;
  unint64_t v4 = sub_E75D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

unint64_t sub_5F448()
{
  unint64_t result = qword_123BF8;
  if (!qword_123BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123BF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SplitDelimiter(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SplitDelimiter(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5F5F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_5F620(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_5F62C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SplitDelimiter()
{
  return &type metadata for SplitDelimiter;
}

double sub_5F64C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  id v8 = objc_msgSend(self, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", a1, a3, a4, a5, a6, a7, a7);
  id v9 = [v8 CGPath];
  sub_E68C0();

  double result = *(double *)&v11;
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  return result;
}

double sub_5F71C@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  id v7 = objc_msgSend(self, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", *(void *)v5, a2, a3, a4, a5, *(double *)(v5 + 8), *(double *)(v5 + 8));
  id v8 = [v7 CGPath];
  sub_E68C0();

  double result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_5F7F8()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_5F818(void *a1))(void *a1)
{
  int v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_E61C0();
  return sub_5F888;
}

void sub_5F888(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_5F8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_62D18();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_5F938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_62D18();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_5F99C(uint64_t a1)
{
  unint64_t v2 = sub_62D18();

  return Shape.body.getter(a1, v2);
}

BOOL sub_5F9E8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_5F9F8(uint64_t a1, char a2)
{
}

Swift::Int sub_5FA20(char a1)
{
  return sub_E76A0();
}

BOOL sub_5FA68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_5FA80()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

void sub_5FAC8()
{
  sub_E7680(*v0);
}

Swift::Int sub_5FAF4()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

id sub_5FB38(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_5FBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_5FC48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t sub_5FC50@<X0>(void *a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v69 = a3;
  int v4 = a2 & 1;
  uint64_t v5 = sub_E63B0();
  __chkstk_darwin(v5);
  id v7 = (double *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10C7C(&qword_1233C8);
  __chkstk_darwin(v8);
  uint64_t v63 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10C7C(&qword_1233D0);
  __chkstk_darwin(v62);
  uint64_t v65 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10C7C(&qword_1233D8);
  uint64_t v11 = __chkstk_darwin(v68);
  uint64_t v64 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  BOOL v66 = (char *)&v54 - v13;
  uint64_t v14 = sub_10C7C(&qword_123C00);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  id v18 = [a1 leftJoyConColor];
  uint64_t v67 = v14;
  if (v18)
  {
    unint64_t v19 = v18;
    id v20 = [v17 rightJoyConColor];
    if (v20)
    {
      BOOL v66 = &v86[272];
      uint64_t v21 = v20;
      uint64_t v65 = sub_E6F30();
      uint64_t v23 = v22;
      uint64_t v24 = sub_E6560();
      sub_603CC(v4, v19, v21, (uint64_t)v87);
      *(_OWORD *)&v89[167] = v87[10];
      *(_OWORD *)&v89[183] = v87[11];
      *(_OWORD *)&v89[199] = v87[12];
      *(_OWORD *)&v89[215] = v88;
      *(_OWORD *)&v89[103] = v87[6];
      *(_OWORD *)&v89[119] = v87[7];
      *(_OWORD *)&v89[135] = v87[8];
      *(_OWORD *)&v89[151] = v87[9];
      *(_OWORD *)&v89[39] = v87[2];
      *(_OWORD *)&v89[55] = v87[3];
      *(_OWORD *)&v89[71] = v87[4];
      *(_OWORD *)&v89[87] = v87[5];
      *(_OWORD *)&v89[7] = v87[0];
      *(_OWORD *)&v89[23] = v87[1];
      *(_OWORD *)&v92[177] = *(_OWORD *)&v89[176];
      *(_OWORD *)&v92[193] = *(_OWORD *)&v89[192];
      *(_OWORD *)&v92[209] = *(_OWORD *)&v89[208];
      *(_OWORD *)&v92[113] = *(_OWORD *)&v89[112];
      *(_OWORD *)&v92[129] = *(_OWORD *)&v89[128];
      *(_OWORD *)&v92[145] = *(_OWORD *)&v89[144];
      *(_OWORD *)&v92[161] = *(_OWORD *)&v89[160];
      *(_OWORD *)&v92[49] = *(_OWORD *)&v89[48];
      *(_OWORD *)&v92[65] = *(_OWORD *)&v89[64];
      *(_OWORD *)&v92[81] = *(_OWORD *)&v89[80];
      *(_OWORD *)&v92[97] = *(_OWORD *)&v89[96];
      *(_OWORD *)&v92[1] = *(_OWORD *)v89;
      char v90 = 0;
      long long v91 = (unint64_t)v24;
      v92[0] = 0;
      *(void *)&v92[224] = *((void *)&v88 + 1);
      *(_OWORD *)&v92[17] = *(_OWORD *)&v89[16];
      *(_OWORD *)&v92[33] = *(_OWORD *)&v89[32];
      long long v82 = *(_OWORD *)&v92[176];
      long long v83 = *(_OWORD *)&v92[192];
      long long v84 = *(_OWORD *)&v92[208];
      uint64_t v85 = *((void *)&v88 + 1);
      long long v78 = *(_OWORD *)&v92[112];
      long long v79 = *(_OWORD *)&v92[128];
      long long v80 = *(_OWORD *)&v92[144];
      long long v81 = *(_OWORD *)&v92[160];
      long long v74 = *(_OWORD *)&v92[48];
      long long v75 = *(_OWORD *)&v92[64];
      long long v76 = *(_OWORD *)&v92[80];
      long long v77 = *(_OWORD *)&v92[96];
      long long v70 = (unint64_t)v24;
      long long v71 = *(_OWORD *)v92;
      long long v72 = *(_OWORD *)&v92[16];
      long long v73 = *(_OWORD *)&v92[32];
      sub_E6F30();
      sub_E62A0();
      uint64_t v25 = v95;
      char v26 = v96;
      *(void *)id v86 = v65;
      *(void *)&v86[8] = v23;
      *(_OWORD *)&v86[208] = v82;
      *(_OWORD *)&v86[224] = v83;
      *(_OWORD *)&v86[240] = v84;
      *(_OWORD *)&v86[144] = v78;
      *(_OWORD *)&v86[160] = v79;
      *(_OWORD *)&v86[176] = v80;
      *(_OWORD *)&v86[192] = v81;
      *(_OWORD *)&v86[80] = v74;
      *(_OWORD *)&v86[96] = v75;
      *(_OWORD *)&v86[112] = v76;
      *(_OWORD *)&v86[128] = v77;
      *(_OWORD *)&v86[16] = v70;
      *(_OWORD *)&v86[32] = v71;
      *(_OWORD *)&v86[48] = v72;
      *(_OWORD *)&v86[64] = v73;
      *(void *)&v86[256] = v85;
      *(void *)&v86[264] = v93;
      uint64_t v27 = v66;
      *BOOL v66 = v94;
      *(void *)&v86[280] = v25;
      unsigned char v27[16] = v26;
      *(_OWORD *)(v27 + 24) = v97;
      memcpy(v16, v86, 0x138uLL);
      swift_storeEnumTagMultiPayload();
      sub_61FC8((uint64_t)&v91);
      sub_62020((uint64_t)v86);
      sub_10C7C(&qword_123C08);
      sub_62A04(&qword_123C10, &qword_123C08, &qword_123C18, &qword_123C20);
      sub_405C8();
      sub_E6610();

      sub_62078((uint64_t)v87);
      return sub_62078((uint64_t)v87);
    }
  }
  uint64_t v29 = (char *)v7 + *(int *)(v5 + 20);
  uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v31 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
  double v32 = 7.0;
  if (!v4) {
    double v32 = 5.5;
  }
  double *v7 = v32;
  v7[1] = v32;
  uint64_t v33 = 0x403E000000000000;
  if (!v4) {
    uint64_t v33 = 0x4038000000000000;
  }
  uint64_t v61 = v33;
  uint64_t v34 = v17;
  sub_61B90(v17, (uint64_t)&v91);
  uint64_t v35 = v63;
  sub_3FB7C((uint64_t)v7, v63);
  uint64_t v36 = v35 + *(int *)(v8 + 52);
  long long v37 = *(_OWORD *)v92;
  *(_OWORD *)uint64_t v36 = v91;
  *(_OWORD *)(v36 + 16) = v37;
  *(void *)(v36 + 32) = *(void *)&v92[16];
  *(_WORD *)(v35 + *(int *)(v8 + 56)) = 256;
  sub_39C10((uint64_t)v7);
  uint64_t v38 = sub_E6F30();
  uint64_t v58 = v39;
  uint64_t v59 = v38;
  sub_607F4(v34, (uint64_t)v86);
  uint64_t v40 = *(void *)v86;
  uint64_t v41 = *(void *)&v86[8];
  uint64_t v60 = v16;
  int v57 = v86[16];
  LOBYTE(v34) = v86[17];
  uint64_t v42 = *(void *)&v86[24];
  char v43 = v86[32];
  long long v56 = *(_OWORD *)&v86[40];
  uint64_t v44 = *(void *)&v86[56];
  uint64_t v55 = *(void *)&v86[64];
  char v45 = v86[72];
  uint64_t v46 = v65;
  sub_61F08(v35, v65, &qword_1233C8);
  uint64_t v47 = v46 + *(int *)(v62 + 36);
  *(void *)uint64_t v47 = v40;
  *(void *)(v47 + 8) = v41;
  *(unsigned char *)(v47 + 16) = v57;
  *(unsigned char *)(v47 + 17) = (_BYTE)v34;
  *(void *)(v47 + 24) = v42;
  *(unsigned char *)(v47 + 32) = v43;
  *(_OWORD *)(v47 + 4sub_E59A4(2, 18, 1, 0) = v56;
  uint64_t v48 = v55;
  *(void *)(v47 + 56) = v44;
  *(void *)(v47 + 64) = v48;
  *(unsigned char *)(v47 + 72) = v45;
  uint64_t v49 = v58;
  *(void *)(v47 + 8sub_E59A4(2, 18, 1, 0) = v59;
  *(void *)(v47 + 88) = v49;
  sub_61F6C(v35, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  uint64_t v50 = v64;
  sub_61F08(v46, v64, &qword_1233D0);
  uint64_t v51 = (_OWORD *)(v50 + *(int *)(v68 + 36));
  long long v52 = *(_OWORD *)&v86[16];
  *uint64_t v51 = *(_OWORD *)v86;
  v51[1] = v52;
  v51[2] = *(_OWORD *)&v86[32];
  sub_61F6C(v46, &qword_1233D0);
  uint64_t v53 = v66;
  sub_56758(v50, (uint64_t)v66);
  sub_61F08((uint64_t)v53, (uint64_t)v60, &qword_1233D8);
  swift_storeEnumTagMultiPayload();
  sub_10C7C(&qword_123C08);
  sub_62A04(&qword_123C10, &qword_123C08, &qword_123C18, &qword_123C20);
  sub_405C8();
  sub_E6610();
  return sub_61F6C((uint64_t)v53, &qword_1233D8);
}

uint64_t sub_603CC@<X0>(char a1@<W0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_E6AD0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    double v12 = 7.0;
  }
  else {
    double v12 = 5.5;
  }
  [a2 red];
  [a2 green];
  [a2 blue];
  uint64_t v13 = enum case for Color.RGBColorSpace.sRGB(_:);
  *(void *)&long long v34 = *(void *)(v9 + 104);
  ((void (*)(char *, void, uint64_t))v34)(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
  uint64_t v37 = sub_E6C10();
  sub_10C7C(&qword_1233E0);
  uint64_t v14 = swift_allocObject();
  long long v33 = xmmword_EB580;
  *(_OWORD *)(v14 + 16) = xmmword_EB580;
  sub_E6BA0();
  uint64_t v15 = sub_E6BE0();
  swift_release();
  *(void *)(v14 + 32) = v15;
  sub_E6B60();
  uint64_t v16 = sub_E6BE0();
  swift_release();
  *(void *)(v14 + 4sub_E59A4(2, 18, 1, 0) = v16;
  uint64_t v43 = v14;
  sub_E7230();
  sub_E6EF0();
  sub_E6FA0();
  sub_E6F90();
  sub_E62E0();
  uint64_t v36 = v39;
  long long v35 = v40;
  uint64_t v17 = v41;
  uint64_t v18 = v42;
  uint64_t v19 = sub_E6F30();
  uint64_t v21 = v20;
  [a3 red];
  [a3 green];
  [a3 blue];
  ((void (*)(char *, uint64_t, uint64_t))v34)(v11, v13, v8);
  uint64_t v22 = sub_E6C10();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v33;
  sub_E6BA0();
  uint64_t v24 = sub_E6BE0();
  swift_release();
  *(void *)(v23 + 32) = v24;
  sub_E6B60();
  uint64_t v25 = sub_E6BE0();
  swift_release();
  *(void *)(v23 + 4sub_E59A4(2, 18, 1, 0) = v25;
  uint64_t v43 = v23;
  sub_E7230();
  sub_E6EF0();
  sub_E6FA0();
  sub_E6F90();
  sub_E62E0();
  uint64_t v26 = v43;
  long long v34 = v44;
  uint64_t v27 = v45;
  uint64_t v28 = v46;
  uint64_t v29 = sub_E6F30();
  char v38 = 0;
  *(void *)a4 = 5;
  *(double *)(a4 + 8) = v12;
  uint64_t v30 = v36;
  *(void *)(a4 + 16) = v37;
  *(_WORD *)(a4 + 24) = 256;
  *(void *)(a4 + 32) = v30;
  *(_OWORD *)(a4 + 4sub_E59A4(2, 18, 1, 0) = v35;
  *(void *)(a4 + 56) = v17;
  *(void *)(a4 + 64) = v18;
  *(void *)(a4 + 72) = 5;
  *(double *)(a4 + 8sub_E59A4(2, 18, 1, 0) = v12;
  *(void *)(a4 + 88) = v19;
  *(void *)(a4 + 96) = v21;
  *(void *)(a4 + 104) = 0x4010000000000000;
  *(unsigned char *)(a4 + 112) = 0;
  *(void *)(a4 + 12sub_E59A4(2, 18, 1, 0) = 10;
  *(double *)(a4 + 128) = v12;
  *(void *)(a4 + 136) = v22;
  *(_WORD *)(a4 + 144) = 256;
  *(void *)(a4 + 152) = v26;
  *(_OWORD *)(a4 + 16sub_E59A4(2, 18, 1, 0) = v34;
  *(void *)(a4 + 176) = v27;
  *(void *)(a4 + 184) = v28;
  *(void *)(a4 + 192) = 10;
  *(double *)(a4 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(void *)(a4 + 208) = v29;
  *(void *)(a4 + 216) = v31;
  swift_retain();
  return swift_release();
}

uint64_t sub_607F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_E6C40();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 logoSfSymbolsName];
  sub_E7110();

  sub_E6C30();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  uint64_t v9 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v10 = [a1 logoSfSymbolsName];
  uint64_t v11 = sub_E7110();
  uint64_t v13 = v12;

  if ((v11 != 0xD000000000000010 || v13 != 0x80000000000F25D0)
    && (sub_E7620() & 1) == 0
    && (v11 != 0x6F62782E6F676F6CLL || v13 != 0xE900000000000078))
  {
    sub_E7620();
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_E6BA0();
  char v15 = sub_E6770();
  uint64_t result = sub_E6210();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v15;
  *(void *)(a2 + 4sub_E59A4(2, 18, 1, 0) = v17;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v19;
  *(void *)(a2 + 64) = v20;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t sub_60A88()
{
  type metadata accessor for GCSPreferencesStore();
  sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_60B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_5FC50(*(void **)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_60B28(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t))((char *)&stru_248.offset + (swift_isaMask & *a1));
    uint64_t v5 = a1;
    uint64_t v6 = (void *)v4(a3);

    if (v6)
    {
      id v7 = v5;
      id v8 = [v6 pilotIdentifier];
      uint64_t v9 = sub_E7110();
      uint64_t v11 = v10;

      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v7];
      uint64_t v13 = (void *)v12(v9, v11);

      swift_bridgeObjectRelease();
      BOOL v14 = v13 != 0;
      if (!v13)
      {
LABEL_6:

        return v14;
      }

      char v15 = v7;
      id v16 = [v6 copilotIdentifier];
      uint64_t v17 = sub_E7110();
      uint64_t v19 = v18;

      uint64_t v20 = v12(v17, v19);
      swift_bridgeObjectRelease();

      if (v20)
      {
        uint64_t v6 = (void *)v20;
        goto LABEL_6;
      }
    }
    return 0;
  }
  type metadata accessor for GCSPreferencesStore();
  sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

void sub_60D34(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t))((char *)&stru_248.offset + (swift_isaMask & *a1));
    uint64_t v5 = a1;
    uint64_t v6 = (void *)v4(a3);

    if (v6)
    {
      id v7 = v5;
      id v8 = [v6 pilotIdentifier];
      uint64_t v9 = sub_E7110();
      uint64_t v11 = v10;

      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v7];
      uint64_t v13 = (void *)v12(v9, v11);

      swift_bridgeObjectRelease();
      if (!v13)
      {
LABEL_7:

        return;
      }

      BOOL v14 = v7;
      id v15 = [v6 copilotIdentifier];
      uint64_t v16 = sub_E7110();
      uint64_t v18 = v17;

      uint64_t v19 = v12(v16, v18);
      swift_bridgeObjectRelease();

      if (v19)
      {
        uint64_t v6 = (void *)v19;
        goto LABEL_7;
      }
    }
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

double sub_60F48@<D0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_E6F30();
  uint64_t v10 = v9;
  sub_61094(a1, a3, (uint64_t)&v24);
  long long v22 = v25;
  long long v23 = v24;
  long long v20 = v27;
  long long v21 = v26;
  long long v19 = v28;
  uint64_t v11 = v29;
  uint64_t v12 = v30;
  char v13 = v31;
  sub_60D34(a1, a2, (uint64_t)a3);
  sub_60D34(a1, a2, (uint64_t)a3);
  sub_E6F30();
  sub_E62A0();
  uint64_t v14 = v24;
  char v15 = BYTE8(v24);
  uint64_t v16 = v25;
  char v17 = BYTE8(v25);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v10;
  *(_OWORD *)(a4 + 16) = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 8sub_E59A4(2, 18, 1, 0) = v19;
  *(void *)(a4 + 96) = v11;
  *(void *)(a4 + 104) = v12;
  *(unsigned char *)(a4 + 112) = v13;
  *(void *)(a4 + 12sub_E59A4(2, 18, 1, 0) = v14;
  *(unsigned char *)(a4 + 128) = v15;
  *(void *)(a4 + 136) = v16;
  *(unsigned char *)(a4 + 144) = v17;
  double result = *(double *)&v26;
  *(_OWORD *)(a4 + 152) = v26;
  return result;
}

void sub_61094(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  if (a1)
  {
    uint64_t v5 = *(uint64_t (**)(void *))((char *)&stru_248.offset + (swift_isaMask & *a1));
    uint64_t v6 = a1;
    id v7 = (void *)v5(a2);

    if (v7)
    {
      uint64_t v8 = v6;
      id v9 = [v7 pilotIdentifier];
      uint64_t v10 = sub_E7110();
      uint64_t v12 = v11;

      char v13 = *(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v8];
      uint64_t v14 = (void *)v13(v10, v12);

      swift_bridgeObjectRelease();
      if (v14)
      {
        char v15 = v8;
        id v16 = [v7 copilotIdentifier];
        uint64_t v17 = sub_E7110();
        uint64_t v19 = v18;

        long long v20 = (void *)v13(v17, v19);
        swift_bridgeObjectRelease();
        if (v20)
        {
          type metadata accessor for GCSPreferencesStore();
          sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
          id v21 = v14;
          long long v22 = (void *)sub_E63F0();
          id v23 = v20;
          id v37 = (id)sub_E63F0();
          id v36 = v23;
          id v24 = v22;
          id v25 = v21;
          id v26 = v24;
          id v27 = v25;
          id v28 = v37;
          id v29 = v36;
          sub_10C7C(&qword_123CD8);
          sub_62D6C(&qword_123CE0, &qword_123CD8);
          sub_62124();
          sub_E6610();

          long long v30 = v38;
          long long v31 = v39;
          long long v32 = v40;
          long long v33 = v41;
          long long v34 = v42;
          long long v35 = v43;
LABEL_9:
          *(_OWORD *)a3 = v30;
          *(_OWORD *)(a3 + 16) = v31;
          *(_OWORD *)(a3 + 32) = v32;
          *(_OWORD *)(a3 + 48) = v33;
          *(_OWORD *)(a3 + 64) = v34;
          *(_OWORD *)(a3 + 8sub_E59A4(2, 18, 1, 0) = v35;
          *(unsigned char *)(a3 + 96) = v44;
          return;
        }

        id v7 = v14;
      }
    }
    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    a2;
    sub_E63F0();
    sub_10C7C(&qword_123CD8);
    sub_62D6C(&qword_123CE0, &qword_123CD8);
    sub_62124();
    sub_E6610();
    long long v30 = v38;
    long long v31 = v39;
    long long v32 = v40;
    long long v33 = v41;
    long long v34 = v42;
    long long v35 = v43;
    goto LABEL_9;
  }
  type metadata accessor for GCSPreferencesStore();
  sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  sub_E63E0();
  __break(1u);
}

double sub_6153C@<D0>(uint64_t a1@<X8>)
{
  int v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = sub_E6F30();
  uint64_t v8 = v7;
  sub_61094(v3, v5, (uint64_t)&v22);
  long long v20 = v23;
  long long v21 = v22;
  long long v18 = v25;
  long long v19 = v24;
  long long v17 = v26;
  uint64_t v9 = v27;
  uint64_t v10 = v28;
  char v11 = v29;
  sub_60D34(v3, v4, (uint64_t)v5);
  sub_60D34(v3, v4, (uint64_t)v5);
  sub_E6F30();
  sub_E62A0();
  uint64_t v12 = v22;
  char v13 = BYTE8(v22);
  uint64_t v14 = v23;
  char v15 = BYTE8(v23);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(_OWORD *)(a1 + 16) = v21;
  *(_OWORD *)(a1 + 32) = v20;
  *(_OWORD *)(a1 + 48) = v19;
  *(_OWORD *)(a1 + 64) = v18;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v17;
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v10;
  *(unsigned char *)(a1 + 112) = v11;
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v12;
  *(unsigned char *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = v14;
  *(unsigned char *)(a1 + 144) = v15;
  double result = *(double *)&v24;
  *(_OWORD *)(a1 + 152) = v24;
  return result;
}

id sub_61688(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_6170C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_6179C@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  if (a1)
  {
    uint64_t v5 = *(void (**)(void *))&stru_248.segname[(swift_isaMask & *a1) + 8];
    uint64_t v6 = a1;
    v5(a2);

    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    a2;
    sub_E63F0();
    sub_620D0();
    sub_62124();
    uint64_t result = sub_E6610();
    *(_OWORD *)a3 = v8;
    *(void *)(a3 + 16) = v9;
    *(unsigned char *)(a3 + 24) = v10;
    *(unsigned char *)(a3 + 25) = v11;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_62C98((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_61960()
{
  return sub_E69D0();
}

uint64_t sub_6197C@<X0>(uint64_t a1@<X8>)
{
  return sub_6179C(*(void **)v1, *(void **)(v1 + 16), a1);
}

void sub_61988(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_61990@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_619A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_619B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_619CC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_619FC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_61A28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_61A4C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_61A60(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_61A74(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_61A88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_61A9C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_61AB0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_61AC4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_61AD8()
{
  return *v0 == 0;
}

uint64_t sub_61AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_61B00(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_61B14(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_61B28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_62CE0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_61B68@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_61B74@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_61B84(void *a1@<X8>)
{
  *a1 = *v1;
}

__n128 sub_61B90@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_E6AD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 logoSfSymbolsName];
  uint64_t v9 = sub_E7110();
  uint64_t v11 = v10;

  if (v9 == 0xD000000000000010 && v11 == 0x80000000000F25D0 || (sub_E7620() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_10C7C(&qword_1233E0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_EBBE0;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
  }
  else
  {
    if (v9 == 0x6F62782E6F676F6CLL && v11 == 0xE900000000000078)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = sub_E7620();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        sub_10C7C(&qword_1233E0);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_EB580;
        uint64_t v17 = enum case for Color.RGBColorSpace.sRGB(_:);
        long long v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
        v18(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
        *(void *)(v12 + 32) = sub_E6C10();
        v18(v7, v17, v4);
        *(void *)(v12 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
        goto LABEL_6;
      }
    }
    sub_10C7C(&qword_1233E0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_EBBE0;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
  }
  *(void *)(v12 + 32) = sub_E6C10();
LABEL_6:
  uint64_t v20 = v12;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  __n128 result = v21;
  long long v14 = v22;
  *(void *)a2 = v20;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v14;
  return result;
}

uint64_t sub_61F08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_61F6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_61FC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_62020(uint64_t a1)
{
  return a1;
}

uint64_t sub_62078(uint64_t a1)
{
  return a1;
}

unint64_t sub_620D0()
{
  unint64_t result = qword_123C28;
  if (!qword_123C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C28);
  }
  return result;
}

unint64_t sub_62124()
{
  unint64_t result = qword_123C30;
  if (!qword_123C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C30);
  }
  return result;
}

unint64_t sub_6217C()
{
  unint64_t result = qword_123C38;
  if (!qword_123C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C38);
  }
  return result;
}

unint64_t sub_621D4()
{
  unint64_t result = qword_123C40;
  if (!qword_123C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C40);
  }
  return result;
}

unint64_t sub_6222C()
{
  unint64_t result = qword_123C48;
  if (!qword_123C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C48);
  }
  return result;
}

uint64_t sub_62280()
{
  return sub_62D6C(&qword_123C50, &qword_123C58);
}

unint64_t sub_622C0()
{
  unint64_t result = qword_123C60;
  if (!qword_123C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C60);
  }
  return result;
}

uint64_t sub_62314()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_62330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6234C()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 initializeBufferWithCopyOfBuffer for GCSRoundedCornersShape(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GCSRoundedCornersShape(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GCSRoundedCornersShape(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GCSRoundedCornersShape()
{
  return &type metadata for GCSRoundedCornersShape;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSSingleControllerIconView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for GCSSingleControllerIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v6 = v3;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for GCSSingleControllerIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GCSSingleControllerIconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSSingleControllerIconView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSSingleControllerIconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSSingleControllerIconView()
{
  return &type metadata for GCSSingleControllerIconView;
}

uint64_t getEnumTagSinglePayload for GCSSingleControllerIconView.Size(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GCSSingleControllerIconView.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x626F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_6271C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_62728(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GCSSingleControllerIconView.Size()
{
  return &type metadata for GCSSingleControllerIconView.Size;
}

ValueMetadata *type metadata accessor for GCSCopilotFusedControllerIconView()
{
  return &type metadata for GCSCopilotFusedControllerIconView;
}

void *initializeBufferWithCopyOfBuffer for GCSControllerIconView(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for GCSControllerIconView(uint64_t a1)
{
  int v2 = *(void **)(a1 + 16);
}

uint64_t _s25GameControlleriOSSettings33GCSCopilotFusedControllerIconViewVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  int v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s25GameControlleriOSSettings33GCSCopilotFusedControllerIconViewVwta_0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;

  return a1;
}

uint64_t _s25GameControlleriOSSettings33GCSCopilotFusedControllerIconViewVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_628DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerIconView()
{
  return &type metadata for GCSControllerIconView;
}

unint64_t sub_62930()
{
  unint64_t result = qword_123C68;
  if (!qword_123C68)
  {
    sub_11B60(&qword_123C70);
    sub_62A04(&qword_123C10, &qword_123C08, &qword_123C18, &qword_123C20);
    sub_405C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C68);
  }
  return result;
}

uint64_t sub_629CC()
{
  return sub_62A04(&qword_123C78, &qword_123C80, &qword_123C88, &qword_123C90);
}

uint64_t sub_62A04(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    sub_62D6C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_62AA4()
{
  unint64_t result = qword_123C98;
  if (!qword_123C98)
  {
    sub_11B60(&qword_123CA0);
    sub_620D0();
    sub_62124();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123C98);
  }
  return result;
}

void type metadata accessor for UIRectCorner()
{
  if (!qword_123CA8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_123CA8);
    }
  }
}

uint64_t sub_62B78()
{
  return sub_62C98(&qword_123CB0, (void (*)(uint64_t))type metadata accessor for UIRectCorner);
}

uint64_t sub_62BC0()
{
  return sub_62C98(&qword_123CB8, (void (*)(uint64_t))type metadata accessor for UIRectCorner);
}

uint64_t sub_62C08()
{
  return sub_62C98(&qword_123CC0, (void (*)(uint64_t))type metadata accessor for UIRectCorner);
}

uint64_t sub_62C50()
{
  return sub_62C98(&qword_123CC8, (void (*)(uint64_t))type metadata accessor for UIRectCorner);
}

uint64_t sub_62C98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_62CE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_62D18()
{
  unint64_t result = qword_123CD0;
  if (!qword_123CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123CD0);
  }
  return result;
}

uint64_t sub_62D6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_62DD8()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_62E68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_62EF0()
{
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return v1;
}

uint64_t sub_62F40()
{
  return sub_E6DF0();
}

uint64_t (*sub_62F94(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  v3[5] = v4;
  v3[6] = v5;
  uint64_t v6 = (void *)v1[4];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  id v7 = v6;
  swift_retain();
  swift_retain();
  v3[8] = sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return sub_6303C;
}

uint64_t sub_63040()
{
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  return v1;
}

uint64_t sub_63094()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_630E4()
{
  return sub_E6DF0();
}

uint64_t (*sub_63138(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 56);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_631D8;
}

uint64_t sub_631DC()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_63230()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_63280()
{
  return sub_E6DF0();
}

uint64_t (*sub_632D4(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 80);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_63374;
}

void sub_63378(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_633E8()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_6343C()
{
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return v1;
}

uint64_t sub_6348C()
{
  return sub_E6DF0();
}

uint64_t (*sub_634E0(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  v3[5] = v4;
  v3[6] = v5;
  char v6 = (void *)v1[13];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  id v7 = v6;
  swift_retain();
  swift_retain();
  v3[8] = sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return sub_63588;
}

void sub_6358C(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)char v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_63644()
{
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  return v1;
}

uint64_t sub_63698()
{
  return sub_63998((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileListView()
{
  uint64_t result = qword_128400;
  if (!qword_128400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_636FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileListView();
  sub_68214(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_6827C(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void (*sub_637D0(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileListView();
  sub_279A8(v1 + *(int *)(v6 + 36), (uint64_t)v5);
  sub_E6DE0();
  return sub_638B4;
}

void sub_638B4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_68214(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_68120((uint64_t)v2, &qword_122BB0);
    sub_6827C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  else
  {
    sub_E6DF0();
    sub_68120((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_63980()
{
  return sub_63998((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_63998(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileListView();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

__n128 sub_639EC@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileListView();
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_63AA0()
{
  return sub_E6DF0();
}

void (*sub_63B54(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  __n128 v4 = (long long *)(v1 + *(int *)(type metadata accessor for GCSProfileListView() + 40));
  long long v6 = v4[6];
  long long v5 = v4[7];
  long long v7 = v4[5];
  v3[6] = v6;
  v3[7] = v5;
  long long v8 = v4[7];
  v3[8] = v4[8];
  long long v10 = v4[2];
  long long v9 = v4[3];
  long long v11 = v4[1];
  v3[2] = v10;
  v3[3] = v9;
  long long v12 = v4[3];
  long long v14 = v4[4];
  long long v13 = v4[5];
  v3[4] = v14;
  v3[5] = v13;
  long long v15 = v4[1];
  long long v16 = *v4;
  *long long v3 = *v4;
  v3[1] = v15;
  *(_OWORD *)((char *)v3 + 248) = v6;
  long long v17 = v4[8];
  *(_OWORD *)((char *)v3 + 264) = v8;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v17;
  *(_OWORD *)((char *)v3 + 184) = v10;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(_OWORD *)((char *)v3 + 216) = v14;
  *(_OWORD *)((char *)v3 + 232) = v7;
  *(_OWORD *)((char *)v3 + 152) = v16;
  *((void *)v3 + 18) = *((void *)v4 + 18);
  *((void *)v3 + 37) = *((void *)v4 + 18);
  *(_OWORD *)((char *)v3 + 168) = v11;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_63C58;
}

void sub_63C58(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_63DF0@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileListView();
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_63EAC()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_63EE8()
{
  return 0;
}

uint64_t sub_63EF0()
{
  return sub_E6ED0();
}

uint64_t sub_64034@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v38 = a2;
  uint64_t v3 = type metadata accessor for GCSProfileListView();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v34 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = sub_10C7C(&qword_122B88);
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v5 = __chkstk_darwin(v37);
  id v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v39 = (char *)&v30 - v7;
  uint64_t v8 = sub_10C7C(&qword_123DA0);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = v33;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a1 + 32);
  long long v41 = *(_OWORD *)(a1 + 16);
  uint64_t v42 = v15;
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  uint64_t v40 = a1;
  sub_67974(0, (unint64_t *)&qword_124E50);
  sub_10C7C(&qword_123DA8);
  sub_6752C();
  sub_67594();
  long long v32 = v14;
  sub_E68A0();
  sub_68214(a1, (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileListView);
  unint64_t v16 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v17 = swift_allocObject();
  sub_678B0((uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  long long v18 = v39;
  sub_E6D80();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  long long v31 = v12;
  uint64_t v20 = v8;
  v19(v12, v14, v8);
  uint64_t v22 = v35;
  long long v21 = v36;
  long long v23 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v24 = v37;
  v23(v36, v18, v37);
  long long v25 = v38;
  v19(v38, v12, v20);
  uint64_t v26 = sub_10C7C(&qword_123E20);
  v23(&v25[*(int *)(v26 + 48)], v21, v24);
  long long v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  v27(v39, v24);
  long long v28 = *(void (**)(char *, uint64_t))(v33 + 8);
  v28(v32, v20);
  v27(v21, v24);
  return ((uint64_t (*)(char *, uint64_t))v28)(v31, v20);
}

uint64_t sub_6446C@<X0>(char *a1@<X8>)
{
  return sub_64034(*(void *)(v1 + 16), a1);
}

uint64_t sub_64474@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for GCSProfileListView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_123DD8);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10C7C(&qword_123DC8);
  uint64_t v46 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v41 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)a1;
  uint64_t v12 = *a1;
  if (v12)
  {
    id v13 = [v12 sortedProfiles];
    sub_67974(0, (unint64_t *)&qword_124E50);
    unint64_t v14 = sub_E7210();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_E7570();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    if (v15)
    {
      id v16 = [v12 sortedProfiles];
      uint64_t v17 = sub_E7210();

      uint64_t v51 = v17;
      v37[3] = swift_getKeyPath();
      uint64_t v38 = v11;
      long long v39 = type metadata accessor for GCSProfileListView;
      sub_68214(v11, (uint64_t)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileListView);
      uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
      uint64_t v40 = v9;
      uint64_t v19 = (v18 + 16) & ~v18;
      uint64_t v20 = swift_allocObject();
      sub_678B0((uint64_t)v6, v20 + v19);
      v37[2] = sub_10C7C(&qword_123E28);
      v37[1] = sub_10C7C(&qword_123E30);
      sub_680DC(&qword_123E38, &qword_123E28);
      sub_6752C();
      uint64_t v21 = sub_11B60(&qword_123DE0);
      uint64_t v22 = sub_E6380();
      unint64_t v23 = sub_677A0();
      uint64_t v24 = sub_67864(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
      uint64_t v47 = v21;
      uint64_t v48 = v22;
      unint64_t v49 = v23;
      uint64_t v50 = v24;
      swift_getOpaqueTypeConformance2();
      long long v25 = v42;
      sub_E6EB0();
      sub_68214(v38, (uint64_t)v6, (uint64_t (*)(void))v39);
      uint64_t v26 = swift_allocObject();
      sub_678B0((uint64_t)v6, v26 + v19);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_67C80;
      *(void *)(v27 + 24) = v26;
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      uint64_t v30 = (uint64_t)v41;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v41, v25, v44);
      uint64_t v31 = v40;
      long long v32 = (uint64_t (**)())(v30 + *(int *)(v40 + 36));
      *long long v32 = sub_67D28;
      v32[1] = (uint64_t (*)())v27;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v28);
      uint64_t v33 = v45;
      sub_682DC(v30, v45, &qword_123DC8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v33, 0, 1, v31);
    }
    else
    {
      uint64_t v35 = v45;
      id v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
      return v36(v35, 1, 1, v9);
    }
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_64A1C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v5 = sub_E6380();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GCSProfileListView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = sub_10C7C(&qword_123DF8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10C7C(&qword_123DE0);
  __chkstk_darwin(v27);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v18 = a2;
  sub_68214(a2, (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileListView);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  sub_678B0((uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  long long v32 = v17;
  uint64_t v33 = v18;
  id v21 = v17;
  sub_10C7C(&qword_123E40);
  sub_6800C();
  sub_E6D80();
  char v22 = [v21 customizable] ^ 1;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v16[*(int *)(v27 + 36)] = v22;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  unint64_t v23 = v28;
  sub_E6370();
  sub_677A0();
  sub_67864(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v24 = v29;
  sub_E6990();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v24);
  return sub_68120((uint64_t)v16, &qword_123DE0);
}

id sub_64DCC(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSProfileParams();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v28 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v28 - v11;
  id result = [a1 customizable];
  if (result)
  {
    uint64_t v14 = *(void *)(a2 + 104);
    long long v30 = *(_OWORD *)(a2 + 88);
    *(void *)&long long v31 = v14;
    *(void *)&v40[0] = a1;
    id v15 = a1;
    sub_10C7C(&qword_122B68);
    sub_E6DF0();
    sub_E0510((uint64_t)v12);
    uint64_t v16 = type metadata accessor for GCSProfileListView();
    sub_68214((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_10C7C(&qword_122BB0);
    sub_E6DF0();
    sub_6827C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DE0();
    if (*(void *)a2)
    {
      id v17 = [*(id *)a2 controllers];
      sub_67974(0, (unint64_t *)&qword_124E30);
      unint64_t v18 = sub_E7210();

      sub_57F44((uint64_t)v7, 0, v18, (uint64_t)v40);
      unint64_t v19 = (long long *)(a2 + *(int *)(v16 + 40));
      long long v20 = v19[7];
      long long v36 = v19[6];
      long long v37 = v20;
      long long v38 = v19[8];
      uint64_t v39 = *((void *)v19 + 18);
      long long v21 = v19[3];
      long long v32 = v19[2];
      long long v33 = v21;
      long long v22 = v19[5];
      long long v34 = v19[4];
      long long v35 = v22;
      long long v23 = v19[1];
      long long v30 = *v19;
      long long v31 = v23;
      v28[6] = v40[6];
      v28[7] = v40[7];
      uint64_t v29 = v41;
      v28[2] = v40[2];
      v28[3] = v40[3];
      v28[4] = v40[4];
      v28[5] = v40[5];
      v28[0] = v40[0];
      v28[1] = v40[1];
      sub_10C7C(&qword_122BB8);
      sub_E6DF0();
      uint64_t v24 = *(void *)(a2 + 72);
      char v25 = *(unsigned char *)(a2 + 80);
      *(void *)&long long v30 = *(void *)(a2 + 64);
      *((void *)&v30 + 1) = v24;
      LOBYTE(v31) = v25;
      LOBYTE(v28[0]) = 0;
      sub_10C7C(&qword_122890);
      sub_E6DF0();
      uint64_t v26 = *(void *)(a2 + 48);
      char v27 = *(unsigned char *)(a2 + 56);
      *(void *)&long long v30 = *(void *)(a2 + 40);
      *((void *)&v30 + 1) = v26;
      LOBYTE(v31) = v27;
      LOBYTE(v28[0]) = 1;
      return (id)sub_E6DF0();
    }
    else
    {
      type metadata accessor for GCSPreferencesStore();
      sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
      id result = (id)sub_E63E0();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_65104@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v52 = a1;
  uint64_t v55 = a3;
  uint64_t v4 = sub_E6050();
  uint64_t v53 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GCSProfileListSectionViewRow();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10C7C(&qword_123E40);
  __chkstk_darwin(v54);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a2 + 48);
  char v16 = *(unsigned char *)(a2 + 56);
  *(void *)&long long v56 = *(void *)(a2 + 40);
  *((void *)&v56 + 1) = v15;
  LOBYTE(v57) = v16;
  sub_10C7C(&qword_122890);
  sub_E6E10();
  uint64_t v50 = v67;
  uint64_t v51 = v66;
  int v49 = v68;
  uint64_t v17 = *(void *)(a2 + 72);
  char v18 = *(unsigned char *)(a2 + 80);
  *(void *)&long long v56 = *(void *)(a2 + 64);
  *((void *)&v56 + 1) = v17;
  LOBYTE(v57) = v18;
  sub_E6E10();
  uint64_t v47 = v67;
  uint64_t v48 = v66;
  int v46 = v68;
  uint64_t v19 = *(void *)(a2 + 104);
  long long v56 = *(_OWORD *)(a2 + 88);
  *(void *)&long long v57 = v19;
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  uint64_t v44 = v67;
  uint64_t v45 = v66;
  uint64_t v43 = v68;
  uint64_t v20 = type metadata accessor for GCSProfileListView();
  sub_E6E10();
  long long v21 = (long long *)(a2 + *(int *)(v20 + 40));
  long long v22 = v21[7];
  long long v62 = v21[6];
  long long v63 = v22;
  long long v64 = v21[8];
  uint64_t v65 = *((void *)v21 + 18);
  long long v23 = v21[3];
  long long v58 = v21[2];
  long long v59 = v23;
  long long v24 = v21[5];
  long long v60 = v21[4];
  long long v61 = v24;
  long long v25 = v21[1];
  long long v56 = *v21;
  long long v57 = v25;
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  if (*(void *)a2)
  {
    id v26 = *(id *)a2;
    id v27 = v52;
    id v28 = [v52 uuid];
    sub_E6030();

    id v29 = [v26 profileUsageStats];
    type metadata accessor for GCSProfileUsageStats();
    sub_67864(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = sub_E7050();

    if (*(void *)(v30 + 16) && (unint64_t v31 = sub_6817C((uint64_t)v6), (v32 & 1) != 0))
    {
      id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
      swift_bridgeObjectRelease();
      id v34 = (id)(*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v6, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v4);
      id v34 = sub_B4230();
      id v33 = v34;
    }
    uint64_t v35 = v55;
    uint64_t v36 = sub_8658C(v34);
    uint64_t v38 = v37;
    id v39 = v27;
    *((void *)&v41 + 1) = v44;
    *(void *)&long long v41 = v45;
    sub_86604(v36, v38, 0, (uint64_t)v39, v51, v50, v49, v48, (uint64_t)v12, v47, v46, v41, v43, (uint64_t)v9, (uint64_t)&v66, (uint64_t)v33);
    sub_68214((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
    v14[*(int *)(v54 + 36)] = 0;
    sub_6827C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
    return sub_682DC((uint64_t)v14, v35, &qword_123E40);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

void sub_65634(uint64_t a1, id *a2)
{
  uint64_t v3 = sub_E60E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_E6090();
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v7;
    if (!*a2) {
      goto LABEL_16;
    }
    id v10 = [*a2 sortedProfiles];
    sub_67974(0, (unint64_t *)&qword_124E50);
    uint64_t v11 = sub_E7210();

    if ((v11 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8)))
      {
        id v12 = *(id *)(v11 + 8 * v9 + 32);
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_16;
    }
    id v12 = (id)sub_E74E0();
LABEL_7:
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_33D64();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v14, v3);
    uint64_t v15 = v13;
    char v16 = sub_E60C0();
    os_log_type_t v17 = sub_E7320();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v26 = v3;
      char v18 = (uint8_t *)swift_slowAlloc();
      long long v24 = (void *)swift_slowAlloc();
      *(_DWORD *)char v18 = 138412290;
      id v27 = v15;
      uint64_t v19 = v15;
      uint64_t v25 = v4;
      uint64_t v20 = a2;
      long long v21 = v19;
      uint64_t v3 = v26;
      sub_E73D0();
      *long long v24 = v15;

      a2 = v20;
      uint64_t v4 = v25;
      _os_log_impl(&dword_0, v16, v17, "Remove selected profile: %@", v18, 0xCu);
      sub_10C7C(&qword_125050);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      char v16 = v15;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (*a2)
    {
      long long v22 = *a2;
      char v23 = sub_A2358();
      (*(void (**)(NSObject *, void))((char *)&stru_298.flags + (swift_isaMask & *v22)))(v15, v23 & 1);

      return;
    }
LABEL_16:
    type metadata accessor for GCSPreferencesStore();
    sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

uint64_t sub_659C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  char v8 = (char *)v25 - v7;
  __chkstk_darwin(v6);
  id v10 = (char *)v25 - v9;
  uint64_t v11 = *(void *)(a1 + 104);
  long long v27 = *(_OWORD *)(a1 + 88);
  *(void *)&long long v28 = v11;
  *(void *)&v37[0] = 0;
  sub_10C7C(&qword_122B68);
  sub_E6DF0();
  sub_DFD34((uint64_t)v10);
  uint64_t v12 = type metadata accessor for GCSProfileListView();
  sub_68214((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  sub_6827C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_DFD34((uint64_t)v5);
  if (*(void *)a1)
  {
    id v13 = [*(id *)a1 controllers];
    sub_67974(0, (unint64_t *)&qword_124E30);
    unint64_t v14 = sub_E7210();

    sub_57F44((uint64_t)v5, 0, v14, (uint64_t)v37);
    uint64_t v15 = (long long *)(a1 + *(int *)(v12 + 40));
    long long v16 = v15[7];
    long long v33 = v15[6];
    long long v34 = v16;
    long long v35 = v15[8];
    uint64_t v36 = *((void *)v15 + 18);
    long long v17 = v15[3];
    long long v29 = v15[2];
    long long v30 = v17;
    long long v18 = v15[5];
    long long v31 = v15[4];
    long long v32 = v18;
    long long v19 = v15[1];
    long long v27 = *v15;
    long long v28 = v19;
    v25[6] = v37[6];
    v25[7] = v37[7];
    uint64_t v26 = v38;
    void v25[2] = v37[2];
    v25[3] = v37[3];
    v25[4] = v37[4];
    v25[5] = v37[5];
    v25[0] = v37[0];
    v25[1] = v37[1];
    sub_10C7C(&qword_122BB8);
    sub_E6DF0();
    uint64_t v20 = *(void *)(a1 + 72);
    char v21 = *(unsigned char *)(a1 + 80);
    *(void *)&long long v27 = *(void *)(a1 + 64);
    *((void *)&v27 + 1) = v20;
    LOBYTE(v28) = v21;
    LOBYTE(v25[0]) = 1;
    sub_10C7C(&qword_122890);
    sub_E6DF0();
    uint64_t v22 = *(void *)(a1 + 48);
    char v23 = *(unsigned char *)(a1 + 56);
    *(void *)&long long v27 = *(void *)(a1 + 40);
    *((void *)&v27 + 1) = v22;
    LOBYTE(v28) = v23;
    LOBYTE(v25[0]) = 1;
    return sub_E6DF0();
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_65CCC@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0x5F454C49464F5250, (void *)0xEB00000000444441);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_65D44()
{
  type metadata accessor for GCSPreferencesStore();
  sub_67864((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_65DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a12;
  *(_OWORD *)(a9 + 88) = a13;
  *(void *)(a9 + 104) = a14;
  long long v17 = (int *)type metadata accessor for GCSProfileListView();
  sub_682DC(a15, a9 + v17[9], &qword_122BB0);
  uint64_t v18 = a9 + v17[10];
  long long v19 = *(_OWORD *)(a16 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(a16 + 96);
  *(_OWORD *)(v18 + 112) = v19;
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(a16 + 128);
  *(void *)(v18 + 144) = *(void *)(a16 + 144);
  long long v20 = *(_OWORD *)(a16 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a16 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  long long v21 = *(_OWORD *)(a16 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a16 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  long long v22 = *(_OWORD *)(a16 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)a16;
  *(_OWORD *)(v18 + 16) = v22;
  uint64_t v23 = a9 + v17[11];
  uint64_t result = sub_E6D10();
  *(unsigned char *)uint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  return result;
}

uint64_t sub_65EAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_65ED0()
{
  return sub_E69D0();
}

char *sub_65EF0(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  char v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v7;
    char v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    uint64_t v9 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v9;
    a1[56] = *((unsigned char *)a2 + 56);
    id v10 = a2[9];
    *((void *)a1 + 8) = a2[8];
    *((void *)a1 + 9) = v10;
    a1[80] = *((unsigned char *)a2 + 80);
    uint64_t v53 = a2[12];
    *((void *)a1 + 11) = a2[11];
    *((void *)a1 + 12) = v53;
    long long v57 = a2[13];
    *((void *)a1 + 13) = v57;
    uint64_t v11 = a3[9];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v55 = *(uint64_t *)((char *)a2 + v11 + 8);
    *(void *)uint64_t v12 = *(char **)((char *)a2 + v11);
    *((void *)v12 + 1) = v55;
    unint64_t v14 = v4;
    swift_retain();
    swift_retain();
    uint64_t v15 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    long long v16 = v57;
    swift_retain();
    swift_retain();
    uint64_t v17 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    uint64_t v18 = &v12[v17];
    uint64_t v19 = v13 + v17;
    uint64_t v20 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    long long v21 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v22 = v21[5];
    uint64_t v23 = &v18[v22];
    long long v24 = (void *)(v19 + v22);
    uint64_t v25 = v24[1];
    *(void *)uint64_t v23 = *v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v21[6];
    long long v27 = &v18[v26];
    long long v28 = (void *)(v19 + v26);
    uint64_t v58 = v28[1];
    *(void *)long long v27 = *v28;
    *((void *)v27 + 1) = v58;
    uint64_t v29 = v21[7];
    long long v30 = &v18[v29];
    long long v31 = (void *)(v19 + v29);
    uint64_t v56 = v31[1];
    *(void *)long long v30 = *v31;
    *((void *)v30 + 1) = v56;
    v18[v21[8]] = *(unsigned char *)(v19 + v21[8]);
    v18[v21[9]] = *(unsigned char *)(v19 + v21[9]);
    uint64_t v32 = v21[10];
    long long v33 = &v18[v32];
    long long v34 = (void *)(v19 + v32);
    uint64_t v54 = v34[1];
    *(void *)long long v33 = *v34;
    *((void *)v33 + 1) = v54;
    *(void *)&v18[v21[11]] = *(void *)(v19 + v21[11]);
    v18[v21[12]] = *(unsigned char *)(v19 + v21[12]);
    *(void *)&v18[v21[13]] = *(void *)(v19 + v21[13]);
    *(void *)&v18[v21[14]] = *(void *)(v19 + v21[14]);
    *(void *)&v18[v21[15]] = *(void *)(v19 + v21[15]);
    v18[v21[16]] = *(unsigned char *)(v19 + v21[16]);
    v18[v21[17]] = *(unsigned char *)(v19 + v21[17]);
    *(void *)&v18[v21[18]] = *(void *)(v19 + v21[18]);
    uint64_t v35 = a3[10];
    uint64_t v36 = a3[11];
    uint64_t v37 = &v6[v35];
    uint64_t v38 = (uint64_t)a2 + v35;
    uint64_t v39 = *(void *)(v38 + 8);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = *(void **)(v38 + 16);
    uint64_t v41 = *(void *)(v38 + 24);
    *((void *)v37 + 2) = v40;
    *((void *)v37 + 3) = v41;
    *((_OWORD *)v37 + 2) = *(_OWORD *)(v38 + 32);
    uint64_t v42 = *(void *)(v38 + 56);
    *((void *)v37 + 6) = *(void *)(v38 + 48);
    *((void *)v37 + 7) = v42;
    uint64_t v43 = *(void *)(v38 + 72);
    *((void *)v37 + 8) = *(void *)(v38 + 64);
    *((void *)v37 + 9) = v43;
    uint64_t v44 = *(void *)(v38 + 88);
    *((void *)v37 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v38 + 80);
    *((void *)v37 + 11) = v44;
    uint64_t v50 = *(void *)(v38 + 104);
    *((void *)v37 + 12) = *(void *)(v38 + 96);
    *((void *)v37 + 13) = v50;
    uint64_t v51 = *(void *)(v38 + 120);
    *((void *)v37 + 14) = *(void *)(v38 + 112);
    *((void *)v37 + 15) = v51;
    v37[128] = *(unsigned char *)(v38 + 128);
    v37[129] = *(unsigned char *)(v38 + 129);
    id v52 = *(void **)(v38 + 136);
    uint64_t v60 = *(void *)(v38 + 144);
    *((void *)v37 + 17) = v52;
    *((void *)v37 + 18) = v60;
    uint64_t v45 = &v6[v36];
    uint64_t v46 = (uint64_t)a2 + v36;
    *uint64_t v45 = *(unsigned char *)v46;
    *((void *)v45 + 1) = *(void *)(v46 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v47 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v48 = v52;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v6;
}

uint64_t sub_662B4(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  char v4 = (char *)a1 + *(int *)(a2 + 36);
  swift_release();
  swift_release();
  uint64_t v5 = &v4[*(int *)(sub_10C7C(&qword_122BB0) + 32)];
  uint64_t v6 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (id *)((char *)a1 + *(int *)(a2 + 40));
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_66480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v9 = *(void **)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  uint64_t v53 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v53;
  long long v57 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v57;
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v55 = *(void *)(a2 + v11 + 8);
  void *v12 = *(void *)(a2 + v11);
  v12[1] = v55;
  id v14 = v5;
  swift_retain();
  swift_retain();
  id v15 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v16 = v57;
  swift_retain();
  swift_retain();
  uint64_t v17 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v18 = (char *)v12 + v17;
  uint64_t v19 = v13 + v17;
  uint64_t v20 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  long long v21 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v22 = v21[5];
  uint64_t v23 = &v18[v22];
  long long v24 = (void *)(v19 + v22);
  uint64_t v25 = v24[1];
  *(void *)uint64_t v23 = *v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v21[6];
  long long v27 = &v18[v26];
  long long v28 = (void *)(v19 + v26);
  uint64_t v58 = v28[1];
  *(void *)long long v27 = *v28;
  *((void *)v27 + 1) = v58;
  uint64_t v29 = v21[7];
  long long v30 = &v18[v29];
  long long v31 = (void *)(v19 + v29);
  uint64_t v56 = v31[1];
  *(void *)long long v30 = *v31;
  *((void *)v30 + 1) = v56;
  v18[v21[8]] = *(unsigned char *)(v19 + v21[8]);
  v18[v21[9]] = *(unsigned char *)(v19 + v21[9]);
  uint64_t v32 = v21[10];
  long long v33 = &v18[v32];
  long long v34 = (void *)(v19 + v32);
  uint64_t v54 = v34[1];
  *(void *)long long v33 = *v34;
  *((void *)v33 + 1) = v54;
  *(void *)&v18[v21[11]] = *(void *)(v19 + v21[11]);
  v18[v21[12]] = *(unsigned char *)(v19 + v21[12]);
  *(void *)&v18[v21[13]] = *(void *)(v19 + v21[13]);
  *(void *)&v18[v21[14]] = *(void *)(v19 + v21[14]);
  *(void *)&v18[v21[15]] = *(void *)(v19 + v21[15]);
  v18[v21[16]] = *(unsigned char *)(v19 + v21[16]);
  v18[v21[17]] = *(unsigned char *)(v19 + v21[17]);
  *(void *)&v18[v21[18]] = *(void *)(v19 + v21[18]);
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  uint64_t v39 = *(void *)(v38 + 8);
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v39;
  uint64_t v40 = *(void **)(v38 + 16);
  uint64_t v41 = *(void *)(v38 + 24);
  *(void *)(v37 + 16) = v40;
  *(void *)(v37 + 24) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  uint64_t v42 = *(void *)(v38 + 56);
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
  *(void *)(v37 + 56) = v42;
  uint64_t v43 = *(void *)(v38 + 72);
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = v43;
  uint64_t v44 = *(void *)(v38 + 88);
  *(void *)(v37 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v38 + 80);
  *(void *)(v37 + 88) = v44;
  uint64_t v45 = *(void *)(v38 + 104);
  *(void *)(v37 + 96) = *(void *)(v38 + 96);
  *(void *)(v37 + 104) = v45;
  uint64_t v46 = *(void *)(v38 + 120);
  *(void *)(v37 + 112) = *(void *)(v38 + 112);
  *(void *)(v37 + 12sub_E59A4(2, 18, 1, 0) = v46;
  *(unsigned char *)(v37 + 128) = *(unsigned char *)(v38 + 128);
  *(unsigned char *)(v37 + 129) = *(unsigned char *)(v38 + 129);
  id v52 = *(void **)(v38 + 136);
  uint64_t v60 = *(void *)(v38 + 144);
  *(void *)(v37 + 136) = v52;
  *(void *)(v37 + 144) = v60;
  uint64_t v47 = a1 + v36;
  uint64_t v48 = a2 + v36;
  *(unsigned char *)uint64_t v47 = *(unsigned char *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v49 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v50 = v52;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_66804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v10;
  id v11 = v10;

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  uint64_t v12 = *(void **)(a1 + 104);
  uint64_t v13 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v13;
  id v14 = v13;

  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  uint64_t v18 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = v17 + v18;
  uint64_t v21 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v23 = v22[5];
  long long v24 = (void *)(v19 + v23);
  uint64_t v25 = (void *)(v20 + v23);
  *long long v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v22[6];
  long long v27 = (void *)(v19 + v26);
  long long v28 = (void *)(v20 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v22[7];
  long long v30 = (void *)(v19 + v29);
  long long v31 = (void *)(v20 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v22[8]) = *(unsigned char *)(v20 + v22[8]);
  *(unsigned char *)(v19 + v22[9]) = *(unsigned char *)(v20 + v22[9]);
  uint64_t v32 = v22[10];
  long long v33 = (void *)(v19 + v32);
  long long v34 = (void *)(v20 + v32);
  *long long v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + v22[11]) = *(void *)(v20 + v22[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v22[12]) = *(unsigned char *)(v20 + v22[12]);
  *(void *)(v19 + v22[13]) = *(void *)(v20 + v22[13]);
  *(void *)(v19 + v22[14]) = *(void *)(v20 + v22[14]);
  *(void *)(v19 + v22[15]) = *(void *)(v20 + v22[15]);
  *(unsigned char *)(v19 + v22[16]) = *(unsigned char *)(v20 + v22[16]);
  *(unsigned char *)(v19 + v22[17]) = *(unsigned char *)(v20 + v22[17]);
  *(void *)(v19 + v22[18]) = *(void *)(v20 + v22[18]);
  uint64_t v35 = a3[10];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)(a1 + v35) = *(void *)(a2 + v35);
  swift_retain();
  swift_release();
  *(void *)(v36 + 8) = *(void *)(v37 + 8);
  swift_retain();
  swift_release();
  uint64_t v38 = *(void **)(v36 + 16);
  uint64_t v39 = *(void **)(v37 + 16);
  *(void *)(v36 + 16) = v39;
  id v40 = v39;

  *(void *)(v36 + 24) = *(void *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  *(void *)(v36 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 40);
  *(void *)(v36 + 48) = *(void *)(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 56) = *(void *)(v37 + 56);
  *(void *)(v36 + 64) = *(void *)(v37 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 72) = *(void *)(v37 + 72);
  *(void *)(v36 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 88) = *(void *)(v37 + 88);
  *(void *)(v36 + 96) = *(void *)(v37 + 96);
  swift_retain();
  swift_release();
  *(void *)(v36 + 104) = *(void *)(v37 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 112) = *(void *)(v37 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 128) = *(unsigned char *)(v37 + 128);
  *(unsigned char *)(v36 + 129) = *(unsigned char *)(v37 + 129);
  uint64_t v41 = *(void **)(v36 + 136);
  uint64_t v42 = *(void **)(v37 + 136);
  *(void *)(v36 + 136) = v42;
  id v43 = v42;

  *(void *)(v36 + 144) = *(void *)(v37 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
  *(void *)(v45 + 8) = *(void *)(v46 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_66CD0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = a3[9];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)(v13 + v15[5]);
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)(v13 + v15[6]);
  *(_OWORD *)&v12[v15[7]] = *(_OWORD *)(v13 + v15[7]);
  v12[v15[8]] = *(unsigned char *)(v13 + v15[8]);
  v12[v15[9]] = *(unsigned char *)(v13 + v15[9]);
  *(_OWORD *)&v12[v15[10]] = *(_OWORD *)(v13 + v15[10]);
  *(void *)&v12[v15[11]] = *(void *)(v13 + v15[11]);
  v12[v15[12]] = *(unsigned char *)(v13 + v15[12]);
  *(void *)&v12[v15[13]] = *(void *)(v13 + v15[13]);
  *(void *)&v12[v15[14]] = *(void *)(v13 + v15[14]);
  *(void *)&v12[v15[15]] = *(void *)(v13 + v15[15]);
  v12[v15[16]] = *(unsigned char *)(v13 + v15[16]);
  v12[v15[17]] = *(unsigned char *)(v13 + v15[17]);
  *(void *)&v12[v15[18]] = *(void *)(v13 + v15[18]);
  uint64_t v16 = a3[10];
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  long long v21 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  long long v22 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v22;
  *(void *)(v18 + 144) = *(void *)(v19 + 144);
  long long v23 = *(_OWORD *)(v19 + 128);
  long long v24 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 128) = v23;
  *(_OWORD *)(v18 + 96) = v24;
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_66EA8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  id v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v9 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v1sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + v10);
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_release();
  uint64_t v13 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = v12 + v13;
  uint64_t v16 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v14 + v18);
  long long v20 = (uint64_t *)(v15 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v17[6];
  long long v24 = (void *)(v14 + v23);
  uint64_t v25 = (uint64_t *)(v15 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *long long v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v17[7];
  uint64_t v29 = (void *)(v14 + v28);
  long long v30 = (uint64_t *)(v15 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[8]) = *(unsigned char *)(v15 + v17[8]);
  *(unsigned char *)(v14 + v17[9]) = *(unsigned char *)(v15 + v17[9]);
  uint64_t v33 = v17[10];
  long long v34 = (void *)(v14 + v33);
  uint64_t v35 = (uint64_t *)(v15 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *long long v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  *(void *)(v14 + v17[11]) = *(void *)(v15 + v17[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[12]) = *(unsigned char *)(v15 + v17[12]);
  *(void *)(v14 + v17[13]) = *(void *)(v15 + v17[13]);
  *(void *)(v14 + v17[14]) = *(void *)(v15 + v17[14]);
  *(void *)(v14 + v17[15]) = *(void *)(v15 + v17[15]);
  *(unsigned char *)(v14 + v17[16]) = *(unsigned char *)(v15 + v17[16]);
  *(unsigned char *)(v14 + v17[17]) = *(unsigned char *)(v15 + v17[17]);
  *(void *)(v14 + v17[18]) = *(void *)(v15 + v17[18]);
  uint64_t v38 = a3[10];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  swift_release();
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  swift_release();
  uint64_t v41 = *(void **)(v39 + 16);
  *(void *)(v39 + 16) = *(void *)(v40 + 16);

  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v39 + 32) = *(_OWORD *)(v40 + 32);
  *(void *)(v39 + 48) = *(void *)(v40 + 48);
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v40 + 64);
  *(void *)(v39 + 56) = *(void *)(v40 + 56);
  *(void *)(v39 + 64) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v40 + 80);
  *(void *)(v39 + 72) = *(void *)(v40 + 72);
  *(void *)(v39 + 8sub_E59A4(2, 18, 1, 0) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v40 + 96);
  *(void *)(v39 + 88) = *(void *)(v40 + 88);
  *(void *)(v39 + 96) = v44;
  swift_release();
  *(void *)(v39 + 104) = *(void *)(v40 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v39 + 112) = *(void *)(v40 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v39 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v40 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 128) = *(unsigned char *)(v40 + 128);
  *(unsigned char *)(v39 + 129) = *(unsigned char *)(v40 + 129);
  uint64_t v45 = *(void **)(v39 + 136);
  *(void *)(v39 + 136) = *(void *)(v40 + 136);

  *(void *)(v39 + 144) = *(void *)(v40 + 144);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[11];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(unsigned char *)uint64_t v47 = *(unsigned char *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_release();
  return a1;
}

uint64_t sub_67238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6724C);
}

uint64_t sub_6724C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_67300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_67314);
}

uint64_t sub_67314(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_673C0()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_67480()
{
  unint64_t result = qword_123D90;
  if (!qword_123D90)
  {
    sub_11B60(&qword_123D98);
    sub_680DC(&qword_123CF0, &qword_123CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123D90);
  }
  return result;
}

uint64_t sub_67524@<X0>(uint64_t a1@<X8>)
{
  return sub_64474(*(void ***)(v1 + 16), a1);
}

unint64_t sub_6752C()
{
  unint64_t result = qword_123DB0;
  if (!qword_123DB0)
  {
    sub_67974(255, (unint64_t *)&qword_124E50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123DB0);
  }
  return result;
}

unint64_t sub_67594()
{
  unint64_t result = qword_123DB8;
  if (!qword_123DB8)
  {
    sub_11B60(&qword_123DA8);
    sub_67608();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123DB8);
  }
  return result;
}

unint64_t sub_67608()
{
  unint64_t result = qword_123DC0;
  if (!qword_123DC0)
  {
    sub_11B60(&qword_123DC8);
    sub_676A8();
    sub_680DC(&qword_123E10, &qword_123E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123DC0);
  }
  return result;
}

unint64_t sub_676A8()
{
  unint64_t result = qword_123DD0;
  if (!qword_123DD0)
  {
    sub_11B60(&qword_123DD8);
    sub_11B60(&qword_123DE0);
    sub_E6380();
    sub_677A0();
    sub_67864(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123DD0);
  }
  return result;
}

unint64_t sub_677A0()
{
  unint64_t result = qword_123DE8;
  if (!qword_123DE8)
  {
    sub_11B60(&qword_123DE0);
    sub_680DC(&qword_123DF0, &qword_123DF8);
    sub_680DC(&qword_123E00, &qword_123E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123DE8);
  }
  return result;
}

uint64_t sub_67864(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_678B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSProfileListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_67914()
{
  uint64_t v1 = *(void *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_659C8(v2);
}

uint64_t sub_67974(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_679B4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_64A1C(a1, v6, a2);
}

uint64_t sub_67A38()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v7 = v6 + v1[11];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v9 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v6 + v1[12];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_67C80(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v4 = (id *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  sub_65634(a1, v4);
}

uint64_t sub_67CF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_67D28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_67D50()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v7 = v0 + v3 + v1[11];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v9 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v6 + v1[12];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

id sub_67FA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for GCSProfileListView() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_64DCC(v2, v3);
}

uint64_t sub_68004@<X0>(uint64_t a1@<X8>)
{
  return sub_65104(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_6800C()
{
  unint64_t result = qword_123E48;
  if (!qword_123E48)
  {
    sub_11B60(&qword_123E40);
    sub_67864(&qword_123E50, (void (*)(uint64_t))type metadata accessor for GCSProfileListSectionViewRow);
    sub_680DC(&qword_122B18, &qword_122B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123E48);
  }
  return result;
}

uint64_t sub_680DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_68120(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_6817C(uint64_t a1)
{
  sub_E6050();
  sub_67864(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_E7070();

  return sub_68340(a1, v2);
}

uint64_t sub_68214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_6827C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_682DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_68340(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_E6050();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_67864(&qword_125070, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = sub_E70A0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_68500()
{
  return swift_getKeyPath();
}

uint64_t sub_68524()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_6852C()
{
  sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return v1;
}

uint64_t sub_6857C()
{
  return sub_E6DF0();
}

uint64_t (*sub_685D0(void *a1))()
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[5];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_39EAC((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return sub_68684;
}

uint64_t sub_68688()
{
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  return v1;
}

uint64_t sub_686DC()
{
  sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return v1;
}

uint64_t sub_6872C()
{
  return sub_E6DF0();
}

uint64_t (*sub_68780(void *a1))()
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  v3[7] = v4;
  v3[8] = v5;
  uint64_t v6 = v1[8];
  v3[9] = v6;
  v3[4] = v6;
  v3[6] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 6));
  swift_retain();
  sub_39EAC((uint64_t)(v3 + 4));
  v3[10] = sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return sub_68834;
}

void sub_68838(char **a1, char a2)
{
  uint64_t v2 = *a1;
  *((void *)v2 + 5) = *((void *)*a1 + 3);
  *(void *)uint64_t v2 = *((void *)v2 + 7);
  *(_OWORD *)(v2 + 8) = *((_OWORD *)v2 + 4);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 48));
    swift_release();
    sub_39ED8((uint64_t)(v2 + 32));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    sub_18B48((uint64_t)(v2 + 48));
    swift_release();
    sub_39ED8((uint64_t)(v2 + 32));
  }

  free(v2);
}

uint64_t sub_68918()
{
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  return v1;
}

uint64_t sub_6896C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v22 = a1;
  uint64_t v23 = sub_10C7C(&qword_123E60);
  uint64_t v3 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10C7C(&qword_123E68);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_123E70);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  char v13 = *(unsigned char *)(v2 + 8);
  sub_19100(v12, v13);
  char v14 = sub_1FB00(v12, v13);
  sub_19048(v12, v13);
  long long v24 = *(_OWORD *)(v2 + 48);
  uint64_t v25 = *(void *)(v2 + 64);
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v15 + 64) = v16;
  *(void *)(v15 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v2 + 64);
  long long v17 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v17;
  sub_69BCC(v2);
  if (v14)
  {
    sub_10C7C(&qword_123EB0);
    sub_69C5C();
    sub_6CE18(&qword_123EA8, &qword_123EB0);
    sub_69D28(&qword_123E88, &qword_123E90, (void (*)(void))sub_69D94);
    sub_E6EC0();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_69DE8();
    sub_69D28(&qword_123EB8, &qword_123E60, (void (*)(void))sub_21D50);
    sub_E6610();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    sub_10C7C(&qword_122930);
    sub_69C5C();
    sub_21D50();
    sub_69D28(&qword_123E88, &qword_123E90, (void (*)(void))sub_69D94);
    sub_E6EC0();
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v23);
    swift_storeEnumTagMultiPayload();
    sub_69DE8();
    sub_69D28(&qword_123EB8, &qword_123E60, (void (*)(void))sub_21D50);
    sub_E6610();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  }
}

uint64_t sub_68ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10C7C(&qword_123ED8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_OWORD *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 40);
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  uint64_t v10 = v21[0];
  uint64_t v11 = v21[1];
  uint64_t v12 = v21[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  char v13 = sub_6A8C8((uint64_t)v10, (uint64_t)v11, (uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v21[0] = v13;
  sub_6A85C(v21);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 64) = v15;
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v16;
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 88) = *(_OWORD *)a2;
  *(void *)(v14 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a1 + 64);
  *(_OWORD *)(v14 + 104) = v17;
  *(_OWORD *)(v14 + 12sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 32);
  *(void *)(v14 + 136) = *(void *)(a2 + 48);
  sub_69BCC(a1);
  sub_6A710(a2);
  sub_10C7C(&qword_123EF0);
  sub_10C7C(&qword_122A38);
  sub_6CE18(&qword_123EF8, &qword_123EF0);
  sub_6CE18(&qword_122A30, &qword_122A38);
  sub_69D28(&qword_123E88, &qword_123E90, (void (*)(void))sub_69D94);
  sub_E6EC0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
}

uint64_t sub_691C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a8 = result;
  *(unsigned char *)(a8 + 8) = 0;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 4sub_E59A4(2, 18, 1, 0) = a4;
  *(void *)(a8 + 48) = a5;
  *(void *)(a8 + 56) = a6;
  *(void *)(a8 + 64) = a7;
  return result;
}

uint64_t sub_69248()
{
  return sub_E69D0();
}

uint64_t sub_69264@<X0>(uint64_t a1@<X8>)
{
  return sub_6896C(a1);
}

uint64_t sub_692AC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = a1[1];
  long long v91 = *a1;
  long long v92 = v5;
  long long v93 = a1[2];
  uint64_t v94 = *((void *)a1 + 6);
  uint64_t v6 = *(void *)(v2 + 32);
  swift_getKeyPath();
  long long v7 = a1[1];
  long long v95 = *a1;
  long long v96 = v7;
  long long v97 = a1[2];
  uint64_t v98 = *((void *)a1 + 6);
  sub_6A710((uint64_t)&v91);
  sub_10C7C(&qword_123E90);
  sub_E6E00();
  swift_release();
  sub_6A768((uint64_t)&v91);
  long long v95 = v75;
  long long v96 = v76;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_21CB8(v101, *((uint64_t *)&v101 + 1)), (v9 & 1) != 0))
  {
    id v10 = *(id *)(*(void *)(v6 + 56) + 8 * v8);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    long long v95 = v91;
    long long v96 = v92;
    long long v97 = v93;
    uint64_t v98 = v94;
    sub_6A710((uint64_t)&v91);
    sub_E6E00();
    swift_release();
    sub_6A768((uint64_t)&v91);
    long long v95 = v73;
    long long v96 = v74;
    sub_E6DE0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v6 + 16))
    {
      unint64_t v11 = sub_21CB8(v71, v72);
      if (v12)
      {
        uint64_t v66 = a2;
        id v67 = *(id *)(*(void *)(v6 + 56) + 8 * v11);
        swift_bridgeObjectRelease();
        uint64_t v65 = sub_E6560();
        id v13 = [v10 sfSymbolsName];
        sub_E7110();

        uint64_t v69 = sub_E6C30();
        id v14 = [v10 localizedName];
        uint64_t v15 = sub_E7110();
        uint64_t v17 = v16;

        *(void *)&long long v95 = v15;
        *((void *)&v95 + 1) = v17;
        sub_187B0();
        uint64_t v70 = sub_E6920();
        uint64_t v63 = v18;
        char v62 = v19;
        uint64_t v68 = v20;
        swift_getKeyPath();
        long long v95 = v91;
        long long v96 = v92;
        long long v97 = v93;
        uint64_t v98 = v94;
        sub_6A710((uint64_t)&v91);
        sub_10C7C(&qword_123E90);
        sub_E6E00();
        swift_release();
        sub_6A768((uint64_t)&v91);
        long long v95 = v75;
        long long v96 = v76;
        sub_10C7C(&qword_122A98);
        sub_E6DE0();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v22 = v103;
        uint64_t v21 = v104;
        swift_getKeyPath();
        long long v95 = v91;
        long long v96 = v92;
        long long v97 = v93;
        uint64_t v98 = v94;
        sub_6A710((uint64_t)&v91);
        sub_E6E00();
        swift_release();
        sub_6A768((uint64_t)&v91);
        long long v95 = v101;
        long long v96 = v102;
        sub_E6DE0();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        long long v64 = v10;
        if (v22 == v99 && v21 == v100)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v24 = sub_E7620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            id v38 = [v67 sfSymbolsName];
            sub_E7110();

            uint64_t v39 = sub_E6C30();
            unsigned int v60 = sub_E6720();
            id v40 = [v67 localizedName];
            uint64_t v41 = sub_E7110();
            uint64_t v43 = v42;

            *(void *)&long long v95 = v41;
            *((void *)&v95 + 1) = v43;
            uint64_t v44 = sub_E6920();
            uint64_t v46 = v45;
            LOBYTE(v38) = v47 & 1;
            LODWORD(v95) = sub_E6720();
            uint64_t v48 = sub_E68F0();
            uint64_t v50 = v49;
            uint64_t v52 = v51;
            uint64_t v54 = v53 & 1;
            sub_18814(v44, v46, (char)v38);
            swift_bridgeObjectRelease();
            swift_retain();
            sub_18804(v48, v50, v54);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_18804(v48, v50, v54);
            swift_bridgeObjectRetain();
            sub_18814(v48, v50, v54);
            swift_release();
            swift_bridgeObjectRelease();
            *(void *)&long long v75 = v39;
            *((void *)&v75 + 1) = v60;
            *(void *)&long long v76 = v48;
            *((void *)&v76 + 1) = v50;
            uint64_t v77 = v54;
            uint64_t v78 = v52;
            char v79 = 1;
            sub_10C7C(&qword_1229C8);
            sub_6CE18(&qword_1229D0, &qword_1229C8);
            sub_E6610();
            sub_18814(v48, v50, v54);
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        *(void *)&long long v95 = sub_B7108(0xD000000000000011, (void *)0x80000000000F1700);
        *((void *)&v95 + 1) = v25;
        uint64_t v26 = sub_E6920();
        uint64_t v28 = v27;
        char v30 = v29 & 1;
        LODWORD(v95) = sub_E6720();
        uint64_t v31 = sub_E68F0();
        uint64_t v33 = v32;
        uint64_t v35 = v34;
        uint64_t v37 = v36 & 1;
        sub_18814(v26, v28, v30);
        swift_bridgeObjectRelease();
        *(void *)&long long v75 = v31;
        *((void *)&v75 + 1) = v33;
        *(void *)&long long v76 = v37;
        *((void *)&v76 + 1) = v35;
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        char v79 = 0;
        sub_10C7C(&qword_1229C8);
        sub_6CE18(&qword_1229D0, &qword_1229C8);
        sub_E6610();
LABEL_15:
        long long v55 = v95;
        uint64_t v56 = v96;
        uint64_t v59 = v97;
        uint64_t v61 = *((void *)&v96 + 1);
        uint64_t v58 = *((void *)&v97 + 1);
        char v57 = v98;
        LOBYTE(v95) = v62 & 1;
        LOBYTE(v101) = v98;
        swift_retain();
        sub_18804(v70, v63, v62 & 1);
        swift_bridgeObjectRetain();
        sub_23F18(v55, *((uint64_t *)&v55 + 1), v56, v61, v59, v58, v57);
        sub_23F88(v55, *((uint64_t *)&v55 + 1), v56, v61, v59, v58, v57);
        sub_18814(v70, v63, v62 & 1);
        swift_release();
        swift_bridgeObjectRelease();

        *(_DWORD *)((char *)&v76 + 1) = v101;
        DWORD1(v76) = *(_DWORD *)((char *)&v101 + 3);
        *(_DWORD *)&v80[3] = *(_DWORD *)((char *)&v103 + 3);
        *(_DWORD *)long long v80 = v103;
        *(_DWORD *)&v84[3] = *(_DWORD *)((char *)&v99 + 3);
        *(_DWORD *)long long v84 = v99;
        long long v75 = (unint64_t)v65;
        LOBYTE(v76) = 1;
        *((void *)&v76 + 1) = v69;
        uint64_t v77 = v70;
        uint64_t v78 = v63;
        char v79 = v95;
        uint64_t v81 = v68;
        uint64_t v82 = 0x402E000000000000;
        char v83 = 0;
        long long v85 = v55;
        uint64_t v86 = v56;
        uint64_t v87 = v61;
        uint64_t v88 = v59;
        uint64_t v89 = v58;
        char v90 = v101;
        nullsub_8(&v75);
        sub_6CDB0((uint64_t)&v75, (uint64_t)&v95);
        a2 = v66;
        return sub_6CDB0((uint64_t)&v95, a2);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_21D30((uint64_t)&v75);
  sub_6CDB0((uint64_t)&v75, (uint64_t)&v95);
  return sub_6CDB0((uint64_t)&v95, a2);
}

uint64_t sub_69BCC(uint64_t a1)
{
  return a1;
}

unint64_t sub_69C5C()
{
  unint64_t result = qword_123E78;
  if (!qword_123E78)
  {
    sub_11B60(&qword_1232A8);
    sub_6CE18(&qword_123358, &qword_123360);
    sub_6CE18(&qword_123E80, &qword_123360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123E78);
  }
  return result;
}

uint64_t sub_69D28(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_69D94()
{
  unint64_t result = qword_123E98;
  if (!qword_123E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123E98);
  }
  return result;
}

unint64_t sub_69DE8()
{
  unint64_t result = qword_123EA0;
  if (!qword_123EA0)
  {
    sub_11B60(&qword_123E70);
    sub_6CE18(&qword_123EA8, &qword_123EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123EA0);
  }
  return result;
}

uint64_t sub_69E84()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_69EF8(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v2;
  v14[2] = *(_OWORD *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 48);
  swift_getKeyPath();
  sub_6A710((uint64_t)v14);
  sub_10C7C(&qword_123E90);
  sub_E6E00();
  swift_release();
  sub_6A768((uint64_t)v14);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_E6560();
  uint64_t v3 = *(void *)(v1 + 32);
  swift_getKeyPath();
  sub_6A710((uint64_t)v14);
  sub_10C7C(&qword_123E90);
  sub_E6E00();
  swift_release();
  sub_6A768((uint64_t)v14);
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_21CB8(v16, v17), (v5 & 1) != 0))
  {
    id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRelease();
    id v7 = [v6 sfSymbolsName];
    sub_E7110();

    sub_E6C30();
    id v8 = [v6 localizedName];
    sub_E7110();

    sub_187B0();
    uint64_t v9 = sub_E6920();
    uint64_t v11 = v10;
    LOBYTE(v8) = v12 & 1;
    swift_retain();
    sub_18804(v9, v11, (char)v8);
    swift_bridgeObjectRetain();

    sub_18814(v9, v11, (char)v8);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10C7C(&qword_123ED0);
  sub_10C7C(&qword_123ED8);
  sub_6CE18(&qword_123EE0, &qword_123ED0);
  sub_6A7C4();
  sub_E6DB0();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_6A2A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for GCSProfileSheetButtonMappingsView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSProfileSheetButtonMappingsView(uint64_t a1)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GCSProfileSheetButtonMappingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GCSProfileSheetButtonMappingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GCSProfileSheetButtonMappingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_19048(v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSProfileSheetButtonMappingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSProfileSheetButtonMappingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileSheetButtonMappingsView()
{
  return &type metadata for GCSProfileSheetButtonMappingsView;
}

unint64_t sub_6A65C()
{
  unint64_t result = qword_123EC0;
  if (!qword_123EC0)
  {
    sub_11B60(&qword_123EC8);
    sub_69DE8();
    sub_69D28(&qword_123EB8, &qword_123E60, (void (*)(void))sub_21D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123EC0);
  }
  return result;
}

uint64_t sub_6A710(uint64_t a1)
{
  return a1;
}

uint64_t sub_6A768(uint64_t a1)
{
  return a1;
}

uint64_t sub_6A7BC@<X0>(uint64_t a1@<X8>)
{
  return sub_68ED8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_6A7C4()
{
  unint64_t result = qword_123EE8;
  if (!qword_123EE8)
  {
    sub_11B60(&qword_123ED8);
    sub_6CE18(&qword_122A30, &qword_122A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123EE8);
  }
  return result;
}

uint64_t sub_6A85C(void **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_6CC6C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_6A9E8(v5);
  *a1 = v2;
  return result;
}

void *sub_6A8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6CC80();
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6;
  if (v6 <= 0)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10C7C(&qword_123F00);
    uint64_t v8 = (void *)swift_allocObject();
    size_t v9 = j__malloc_size_7(v8);
    _OWORD v8[2] = v7;
    v8[3] = 2 * ((uint64_t)(v9 - 32) / 56);
  }
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_6CA90(&v12, (uint64_t)(v8 + 4), v7, a1, a2, a3);
  swift_release();
  swift_release();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v10 == v7) {
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_6A9E8(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  uint64_t result = sub_E75F0(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_131;
    }
    if (v4) {
      return sub_6B7FC(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_130;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v4 > 1)
  {
    uint64_t v7 = v6 >> 1;
    sub_10C7C(&qword_123E90);
    uint64_t result = sub_E7250();
    *(void *)(result + 16) = v7;
    uint64_t v100 = (void *)result;
    id v108 = (char *)(result + 32);
LABEL_12:
    Swift::Int v9 = 0;
    uint64_t v99 = *a1 + 80;
    uint64_t v97 = *a1 + 48;
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v105 = v4;
    uint64_t v109 = *a1;
    while (1)
    {
      Swift::Int v11 = v9;
      Swift::Int v12 = v9 + 1;
      Swift::Int v106 = v9;
      if (v9 + 1 < v4)
      {
        swift_getKeyPath();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_10C7C(&qword_123E90);
        sub_E6E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        sub_10C7C(&qword_122AB8);
        sub_E6DE0();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_E6E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        sub_E6DE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        Swift::Int v11 = v106;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        Swift::Int v4 = v105;
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        Swift::Int v12 = v106 + 2;
        if (v106 + 2 < v105)
        {
          uint64_t v13 = v99 + 56 * v106;
          while (1)
          {
            Swift::Int v110 = v12;
            uint64_t v115 = v13 + 56;
            swift_getKeyPath();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_E6E00();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            sub_E6DE0();
            swift_release();
            swift_release();
            swift_getKeyPath();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_E6E00();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            sub_E6DE0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            uint64_t result = swift_release();
            if (v117 < v116 == v117 >= v116) {
              break;
            }
            ++v12;
            uint64_t v13 = v115;
            Swift::Int v4 = v105;
            if (v105 == v110 + 1)
            {
              Swift::Int v12 = v105;
              goto LABEL_22;
            }
          }
          Swift::Int v4 = v105;
LABEL_22:
          Swift::Int v11 = v106;
        }
        if (v117 < v116)
        {
          if (v12 < v11) {
            goto LABEL_132;
          }
          if (v11 < v12)
          {
            uint64_t v14 = 56 * v12;
            Swift::Int v15 = v12;
            Swift::Int v16 = v11;
            uint64_t v17 = 56 * v11;
            do
            {
              if (v16 != --v15)
              {
                if (!v109) {
                  goto LABEL_137;
                }
                uint64_t v18 = v109 + v17;
                uint64_t v19 = v109 + v14;
                long long v20 = *(_OWORD *)(v109 + v17);
                long long v21 = *(_OWORD *)(v109 + v17 + 16);
                long long v22 = *(_OWORD *)(v109 + v17 + 32);
                uint64_t v23 = *(void *)(v109 + v17 + 48);
                long long v24 = *(_OWORD *)(v109 + v14 - 40);
                long long v25 = *(_OWORD *)(v109 + v14 - 24);
                long long v26 = *(_OWORD *)(v109 + v14 - 56);
                *(void *)(v18 + 48) = *(void *)(v109 + v14 - 8);
                *(_OWORD *)(v18 + 16) = v24;
                *(_OWORD *)(v18 + 32) = v25;
                *(_OWORD *)uint64_t v18 = v26;
                *(_OWORD *)(v19 - 56) = v20;
                *(_OWORD *)(v19 - 4sub_E59A4(2, 18, 1, 0) = v21;
                *(_OWORD *)(v19 - 24) = v22;
                *(void *)(v19 - 8) = v23;
              }
              ++v16;
              v14 -= 56;
              v17 += 56;
            }
            while (v16 < v15);
          }
        }
      }
      if (v12 < v4)
      {
        if (__OFSUB__(v12, v11)) {
          goto LABEL_129;
        }
        if (v12 - v11 < v101)
        {
          if (__OFADD__(v11, v101)) {
            goto LABEL_133;
          }
          if (v11 + v101 >= v4) {
            Swift::Int v27 = v4;
          }
          else {
            Swift::Int v27 = v11 + v101;
          }
          if (v27 < v11)
          {
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
            return result;
          }
          if (v12 != v27)
          {
            long long v102 = v8;
            uint64_t v103 = v2;
            uint64_t v28 = (void *)(v97 + 56 * v12);
            Swift::Int v104 = v27;
            do
            {
              Swift::Int v111 = v12;
              uint64_t v107 = v28;
              do
              {
                Swift::Int v114 = v11;
                uint64_t v113 = v28;
                char v29 = v28 - 13;
                swift_getKeyPath();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                sub_10C7C(&qword_123E90);
                sub_E6E00();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_10C7C(&qword_122AB8);
                sub_E6DE0();
                swift_release();
                swift_release();
                swift_getKeyPath();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_E6E00();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_E6DE0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                uint64_t result = swift_release();
                if (v117 >= v116) {
                  break;
                }
                if (!v109) {
                  goto LABEL_135;
                }
                uint64_t v30 = *(v28 - 7);
                *(v28 - 7) = *v28;
                v28 -= 7;
                uint64_t v32 = *(v113 - 6);
                uint64_t v31 = *(v113 - 5);
                uint64_t v34 = *(v113 - 4);
                uint64_t v33 = *(v113 - 3);
                uint64_t v36 = *(v113 - 2);
                uint64_t v35 = *(v113 - 1);
                long long v37 = *((_OWORD *)v29 + 1);
                *(_OWORD *)(v29 + 7) = *(_OWORD *)v29;
                *(_OWORD *)(v29 + 9) = v37;
                *(_OWORD *)(v29 + 11) = *((_OWORD *)v29 + 2);
                v29[13] = v30;
                *(v113 - 13) = v32;
                *(v113 - 12) = v31;
                *(v113 - 11) = v34;
                *(v113 - 1sub_E59A4(2, 18, 1, 0) = v33;
                ++v11;
                *(v113 - 9) = v36;
                *(v113 - 8) = v35;
              }
              while (v111 != v114 + 1);
              Swift::Int v12 = v111 + 1;
              Swift::Int v11 = v106;
              uint64_t v28 = v107 + 7;
            }
            while (v111 + 1 != v104);
            Swift::Int v12 = v104;
            uint64_t v8 = v102;
            uint64_t v2 = v103;
          }
        }
      }
      if (v12 < v11) {
        goto LABEL_124;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21BA8(0, *((void *)v8 + 2) + 1, 1, v8);
        uint64_t v8 = (char *)result;
      }
      unint64_t v39 = *((void *)v8 + 2);
      unint64_t v38 = *((void *)v8 + 3);
      unint64_t v10 = v39 + 1;
      uint64_t v40 = v109;
      if (v39 >= v38 >> 1)
      {
        uint64_t result = (uint64_t)sub_21BA8((char *)(v38 > 1), v39 + 1, 1, v8);
        uint64_t v40 = v109;
        uint64_t v8 = (char *)result;
      }
      *((void *)v8 + 2) = v10;
      uint64_t v41 = v8 + 32;
      uint64_t v42 = &v8[16 * v39 + 32];
      *(void *)uint64_t v42 = v11;
      *((void *)v42 + 1) = v12;
      Swift::Int v112 = v12;
      if (v39)
      {
        while (1)
        {
          unint64_t v43 = v10 - 1;
          if (v10 >= 4)
          {
            uint64_t v48 = &v41[2 * v10];
            uint64_t v49 = *(v48 - 8);
            uint64_t v50 = *(v48 - 7);
            BOOL v54 = __OFSUB__(v50, v49);
            uint64_t v51 = v50 - v49;
            if (v54) {
              goto LABEL_113;
            }
            uint64_t v53 = *(v48 - 6);
            uint64_t v52 = *(v48 - 5);
            BOOL v54 = __OFSUB__(v52, v53);
            uint64_t v46 = v52 - v53;
            char v47 = v54;
            if (v54) {
              goto LABEL_114;
            }
            unint64_t v55 = v10 - 2;
            uint64_t v56 = &v41[2 * v10 - 4];
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v54 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v54) {
              goto LABEL_115;
            }
            BOOL v54 = __OFADD__(v46, v59);
            uint64_t v60 = v46 + v59;
            if (v54) {
              goto LABEL_117;
            }
            if (v60 >= v51)
            {
              uint64_t v78 = &v41[2 * v43];
              uint64_t v80 = *v78;
              uint64_t v79 = v78[1];
              BOOL v54 = __OFSUB__(v79, v80);
              uint64_t v81 = v79 - v80;
              if (v54) {
                goto LABEL_123;
              }
              BOOL v71 = v46 < v81;
              goto LABEL_85;
            }
          }
          else
          {
            if (v10 != 3)
            {
              uint64_t v72 = *((void *)v8 + 4);
              uint64_t v73 = *((void *)v8 + 5);
              BOOL v54 = __OFSUB__(v73, v72);
              uint64_t v65 = v73 - v72;
              char v66 = v54;
              goto LABEL_79;
            }
            uint64_t v45 = *((void *)v8 + 4);
            uint64_t v44 = *((void *)v8 + 5);
            BOOL v54 = __OFSUB__(v44, v45);
            uint64_t v46 = v44 - v45;
            char v47 = v54;
          }
          if (v47) {
            goto LABEL_116;
          }
          unint64_t v55 = v10 - 2;
          uint64_t v61 = &v41[2 * v10 - 4];
          uint64_t v63 = *v61;
          uint64_t v62 = v61[1];
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v65 = v62 - v63;
          char v66 = v64;
          if (v64) {
            goto LABEL_118;
          }
          id v67 = &v41[2 * v43];
          uint64_t v69 = *v67;
          uint64_t v68 = v67[1];
          BOOL v54 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v54) {
            goto LABEL_120;
          }
          if (__OFADD__(v65, v70)) {
            goto LABEL_122;
          }
          if (v65 + v70 >= v46)
          {
            BOOL v71 = v46 < v70;
LABEL_85:
            if (v71) {
              unint64_t v43 = v55;
            }
            goto LABEL_87;
          }
LABEL_79:
          if (v66) {
            goto LABEL_119;
          }
          long long v74 = &v41[2 * v43];
          uint64_t v76 = *v74;
          uint64_t v75 = v74[1];
          BOOL v54 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          if (v54) {
            goto LABEL_121;
          }
          if (v77 < v65) {
            goto LABEL_14;
          }
LABEL_87:
          unint64_t v82 = v43 - 1;
          if (v43 - 1 >= v10)
          {
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
          if (!v40) {
            goto LABEL_136;
          }
          char v83 = v8;
          long long v84 = &v41[2 * v82];
          uint64_t v85 = *v84;
          uint64_t v86 = &v41[2 * v43];
          uint64_t v87 = v86[1];
          uint64_t result = sub_6BB7C((char *)(v40 + 56 * *v84), (char *)(v40 + 56 * *v86), v40 + 56 * v87, v108);
          if (v2) {
            goto LABEL_107;
          }
          if (v87 < v85) {
            goto LABEL_110;
          }
          if (v43 > *((void *)v83 + 2)) {
            goto LABEL_111;
          }
          *long long v84 = v85;
          v41[2 * v82 + 1] = v87;
          unint64_t v88 = *((void *)v83 + 2);
          if (v43 >= v88) {
            goto LABEL_112;
          }
          uint64_t v8 = v83;
          unint64_t v10 = v88 - 1;
          uint64_t result = (uint64_t)memmove(&v41[2 * v43], v86 + 2, 16 * (v88 - 1 - v43));
          *((void *)v83 + 2) = v88 - 1;
          uint64_t v40 = v109;
          if (v88 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v10 = 1;
LABEL_14:
      Swift::Int v4 = v105;
      Swift::Int v9 = v112;
      if (v112 >= v105) {
        goto LABEL_96;
      }
    }
  }
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  id v108 = (char *)&_swiftEmptyArrayStorage[4];
  uint64_t v100 = _swiftEmptyArrayStorage;
  if (v4 == 1) {
    goto LABEL_12;
  }
  unint64_t v10 = _swiftEmptyArrayStorage[2];
LABEL_96:
  if (v10 >= 2)
  {
    uint64_t v89 = *v98;
    do
    {
      unint64_t v90 = v10 - 2;
      if (v10 < 2) {
        goto LABEL_125;
      }
      if (!v89) {
        goto LABEL_138;
      }
      uint64_t v91 = (uint64_t)v8;
      long long v92 = v8 + 32;
      uint64_t v93 = *(void *)&v8[16 * v90 + 32];
      uint64_t v94 = *(void *)&v8[16 * v10 + 24];
      uint64_t result = sub_6BB7C((char *)(v89 + 56 * v93), (char *)(v89 + 56 * v92[2 * v10 - 2]), v89 + 56 * v94, v108);
      if (v2) {
        break;
      }
      if (v94 < v93) {
        goto LABEL_126;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21CA4(v91);
        uint64_t v91 = result;
      }
      if (v90 >= *(void *)(v91 + 16)) {
        goto LABEL_127;
      }
      long long v95 = (void *)(v91 + 32 + 16 * v90);
      *long long v95 = v93;
      v95[1] = v94;
      unint64_t v96 = *(void *)(v91 + 16);
      if (v10 > v96) {
        goto LABEL_128;
      }
      uint64_t v8 = (char *)v91;
      uint64_t result = (uint64_t)memmove((void *)(v91 + 32 + 16 * (v10 - 1)), (const void *)(v91 + 32 + 16 * v10), 16 * (v96 - v10));
      *(void *)(v91 + 16) = v96 - 1;
      unint64_t v10 = v96 - 1;
    }
    while (v96 > 2);
  }
LABEL_107:
  swift_bridgeObjectRelease();
  v100[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_6B7FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v17 = *a4;
    Swift::Int v4 = (void *)(*a4 + 56 * a3 + 48);
LABEL_5:
    uint64_t v18 = a3;
    uint64_t v19 = v15;
    Swift::Int v16 = v4;
    while (1)
    {
      char v5 = v4 - 13;
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_123E90);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v21 >= v20)
      {
LABEL_4:
        a3 = v18 + 1;
        Swift::Int v4 = v16 + 7;
        if (v18 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v17) {
        break;
      }
      uint64_t v6 = *(v4 - 7);
      *(v4 - 7) = *v4;
      v4 -= 7;
      uint64_t v8 = v4[1];
      uint64_t v7 = v4[2];
      uint64_t v10 = v4[3];
      uint64_t v9 = v4[4];
      uint64_t v11 = v4[5];
      uint64_t v12 = v4[6];
      long long v13 = *((_OWORD *)v5 + 1);
      *(_OWORD *)(v5 + 7) = *(_OWORD *)v5;
      *(_OWORD *)(v5 + 9) = v13;
      *(_OWORD *)(v5 + 11) = *((_OWORD *)v5 + 2);
      v5[13] = v6;
      *(v4 - 6) = v8;
      *(v4 - 5) = v7;
      *(v4 - 4) = v10;
      *(v4 - 3) = v9;
      *(v4 - 2) = v11;
      *(v4 - 1) = v12;
      if (v18 == ++v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_6BB7C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  Swift::Int v4 = a4;
  char v5 = __src;
  uint64_t v6 = __dst;
  int64_t v7 = __src - __dst;
  int64_t v8 = (__src - __dst) / 56;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = (uint64_t)(a3 - (void)__src) / 56;
  if (v8 >= v10)
  {
    if (a4 != __src || &__src[56 * v10] <= a4) {
      memmove(a4, __src, 56 * v10);
    }
    uint64_t v11 = &v4[56 * v10];
    if (v6 >= v5 || v9 < 56) {
      goto LABEL_35;
    }
    unint64_t v16 = a3 - 56;
    uint64_t v31 = v6;
    uint64_t v33 = v4;
    while (1)
    {
      uint64_t v30 = v11;
      uint64_t v35 = v5;
      unint64_t v27 = v16;
      uint64_t v28 = (char *)(v16 + 56);
      long long v25 = v11 - 56;
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_123E90);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v37 >= v36)
      {
        if (v28 == v30)
        {
          uint64_t v11 = v25;
          uint64_t v19 = v25;
          unint64_t v18 = v27;
          unint64_t v17 = (unint64_t)v31;
          Swift::Int v4 = v33;
          if (v27 < (unint64_t)v30) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
        uint64_t v11 = v25;
        uint64_t v19 = v25;
        unint64_t v17 = (unint64_t)v31;
        Swift::Int v4 = v33;
      }
      else
      {
        uint64_t v11 = v30;
        unint64_t v17 = (unint64_t)v31;
        if (v28 == v5)
        {
          unint64_t v18 = v27;
          uint64_t v19 = v5 - 56;
          v5 -= 56;
          Swift::Int v4 = v33;
          if (v27 < (unint64_t)v35) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
        uint64_t v19 = v5 - 56;
        v5 -= 56;
        Swift::Int v4 = v33;
      }
      unint64_t v18 = v27;
LABEL_32:
      long long v20 = *(_OWORD *)v19;
      long long v21 = *((_OWORD *)v19 + 1);
      long long v22 = *((_OWORD *)v19 + 2);
      *(void *)(v18 + 48) = *((void *)v19 + 6);
      *(_OWORD *)(v18 + 16) = v21;
      *(_OWORD *)(v18 + 32) = v22;
      *(_OWORD *)unint64_t v18 = v20;
LABEL_33:
      if ((unint64_t)v5 > v17)
      {
        unint64_t v16 = v18 - 56;
        if (v11 > v4) {
          continue;
        }
      }
      goto LABEL_35;
    }
  }
  if (a4 != __dst || &__dst[56 * v8] <= a4) {
    memmove(a4, __dst, 56 * v8);
  }
  uint64_t v11 = &v4[56 * v8];
  if ((unint64_t)v5 < a3 && v7 >= 56)
  {
    char v29 = &v4[56 * v8];
    while (1)
    {
      uint64_t v32 = v4;
      uint64_t v34 = v5;
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_10C7C(&qword_123E90);
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10C7C(&qword_122AB8);
      sub_E6DE0();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_E6E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v37 >= v36) {
        break;
      }
      uint64_t v12 = v5;
      v5 += 56;
      if (v6 != v34) {
        goto LABEL_12;
      }
LABEL_13:
      v6 += 56;
      uint64_t v11 = v29;
      if (v4 >= v29 || (unint64_t)v5 >= a3) {
        goto LABEL_15;
      }
    }
    uint64_t v12 = v4;
    v4 += 56;
    if (v6 == v32) {
      goto LABEL_13;
    }
LABEL_12:
    long long v13 = *(_OWORD *)v12;
    long long v14 = *((_OWORD *)v12 + 1);
    long long v15 = *((_OWORD *)v12 + 2);
    *((void *)v6 + 6) = *((void *)v12 + 6);
    *((_OWORD *)v6 + 1) = v14;
    *((_OWORD *)v6 + 2) = v15;
    *(_OWORD *)uint64_t v6 = v13;
    goto LABEL_13;
  }
LABEL_15:
  char v5 = v6;
LABEL_35:
  uint64_t v23 = (v11 - v4) / 56;
  if (v5 != v4 || v5 >= &v4[56 * v23]) {
    memmove(v5, v4, 56 * v23);
  }
  return 1;
}

uint64_t sub_6C314()
{
  sub_19048(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_6C3A8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v6 = a1[1];
  long long v42 = *a1;
  long long v43 = v6;
  long long v44 = a1[2];
  uint64_t v45 = *((void *)a1 + 6);
  uint64_t v7 = sub_E6560();
  uint64_t v8 = *(void *)(v3 + 32);
  swift_getKeyPath();
  long long v9 = a1[1];
  long long v56 = *a1;
  long long v57 = v9;
  long long v58 = a1[2];
  uint64_t v59 = *((void *)a1 + 6);
  sub_6A710((uint64_t)&v42);
  sub_10C7C(&qword_123E90);
  sub_E6E00();
  swift_release();
  sub_6A768((uint64_t)&v42);
  long long v56 = v46;
  long long v57 = v47;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v8 + 16))
  {
    unint64_t v10 = sub_21CB8(v52, *((uint64_t *)&v52 + 1));
    if (v11)
    {
      id v41 = *(id *)(*(void *)(v8 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      long long v56 = v42;
      long long v57 = v43;
      long long v58 = v44;
      uint64_t v59 = v45;
      sub_6A710((uint64_t)&v42);
      sub_E6E00();
      swift_release();
      sub_6A768((uint64_t)&v42);
      long long v56 = v46;
      long long v57 = v47;
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v13 = v54;
      uint64_t v12 = v55;
      swift_getKeyPath();
      long long v14 = *(_OWORD *)(v3 + 104);
      long long v56 = *(_OWORD *)(v3 + 88);
      long long v57 = v14;
      long long v58 = *(_OWORD *)(v3 + 120);
      uint64_t v59 = *(void *)(v3 + 136);
      sub_6A710(v3 + 88);
      sub_E6E00();
      swift_release();
      sub_6A768(v3 + 88);
      long long v56 = v52;
      long long v57 = v53;
      sub_E6DE0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (v13 == v50 && v12 == v51)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v20 = sub_E7620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          id v28 = [v41 sfSymbolsName];
          sub_E7110();

          uint64_t v29 = sub_E6C30();
          id v30 = [v41 localizedName];
          uint64_t v31 = sub_E7110();
          uint64_t v33 = v32;

          *(void *)&long long v56 = v31;
          *((void *)&v56 + 1) = v33;
          sub_187B0();
          uint64_t v34 = sub_E6920();
          uint64_t v36 = v35;
          uint64_t v38 = v37;
          uint64_t v40 = v39 & 1;
          swift_retain();
          sub_18804(v34, v36, v40);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_18804(v34, v36, v40);
          swift_bridgeObjectRetain();
          sub_18814(v34, v36, v40);
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&long long v46 = v29;
          *((void *)&v46 + 1) = v34;
          *(void *)&long long v47 = v36;
          *((void *)&v47 + 1) = v40;
          uint64_t v48 = v38;
          char v49 = 1;
          swift_retain();
          sub_18804(v34, v36, v40);
          swift_bridgeObjectRetain();
          sub_10C7C(&qword_122AA0);
          sub_6CE18(&qword_122AA8, &qword_122AA0);
          sub_E6610();
          swift_release();

          sub_18814(v34, v36, v40);
          swift_bridgeObjectRelease();
          sub_18814(v34, v36, v40);
          swift_release();
          goto LABEL_10;
        }
      }
      *(void *)&long long v56 = sub_B7108(0xD000000000000011, (void *)0x80000000000F1700);
      *((void *)&v56 + 1) = v21;
      sub_187B0();
      uint64_t v22 = sub_E6920();
      uint64_t v24 = v23;
      *(void *)&long long v46 = v22;
      *((void *)&v46 + 1) = v23;
      char v26 = v25 & 1;
      *(void *)&long long v47 = v25 & 1;
      *((void *)&v47 + 1) = v27;
      uint64_t v48 = 0;
      char v49 = 0;
      sub_18804(v22, v23, v25 & 1);
      swift_bridgeObjectRetain();
      sub_10C7C(&qword_122AA0);
      sub_6CE18(&qword_122AA8, &qword_122AA0);
      sub_E6610();

      sub_18814(v22, v24, v26);
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      long long v17 = v56;
      long long v19 = v57;
      uint64_t v16 = v58;
      char v18 = BYTE8(v58);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = 0;
  long long v17 = 0uLL;
  char v18 = -1;
  long long v19 = 0uLL;
LABEL_11:
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 24) = v17;
  *(_OWORD *)(a2 + 4sub_E59A4(2, 18, 1, 0) = v19;
  *(void *)(a2 + 56) = v16;
  *(unsigned char *)(a2 + 64) = v18;
  return result;
}

void *sub_6C950(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10C7C(&qword_123F00);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_7(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[7 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10C7C(&qword_123E90);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_6CA90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10C7C(&qword_1232A8);
  sub_6CE18(&qword_123358, &qword_123360);
  uint64_t result = sub_E6E40();
  uint64_t v13 = v14;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = v13;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v14;
    sub_E6E50();
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void *sub_6CC6C(void *a1)
{
  return sub_6C950(0, a1[2], 0, a1);
}

uint64_t sub_6CC80()
{
  return 0;
}

uint64_t sub_6CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_6CE18(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6CE64@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_E6560();
  *(void *)(a3 + 8) = 0x401C000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = sub_10C7C(&qword_123F08);
  return sub_6CEC4(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_6CEC4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v108 = a2;
  uint64_t v115 = a3;
  uint64_t v114 = sub_E6C40();
  uint64_t v111 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v109 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_E6AD0();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_E63B0();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  unint64_t v10 = (_OWORD *)((char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10C7C(&qword_1233C8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v104 = (uint64_t)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10C7C(&qword_1233D0) - 8;
  __chkstk_darwin(v107);
  uint64_t v106 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10C7C(&qword_1233D8) - 8;
  uint64_t v15 = __chkstk_darwin(v110);
  uint64_t v120 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v121 = (uint64_t)&v102 - v17;
  uint64_t v18 = sub_10C7C(&qword_123B20);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v118 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v102 - v21);
  *uint64_t v22 = sub_E6F30();
  v22[1] = v23;
  uint64_t v119 = v22;
  uint64_t v24 = sub_10C7C(&qword_123B28);
  sub_6D934(a1, (uint64_t)v22 + *(int *)(v24 + 44));
  id v25 = [a1 localizedName];
  uint64_t v26 = sub_E7110();
  uint64_t v28 = v27;

  *(void *)&long long v127 = v26;
  *((void *)&v127 + 1) = v28;
  unint64_t v105 = sub_187B0();
  uint64_t v29 = sub_E6920();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_E6BF0();
  uint64_t v117 = sub_E68E0();
  uint64_t v112 = v34;
  char v36 = v35;
  uint64_t v113 = v37;
  swift_release();
  int v116 = v36 & 1;
  sub_18814(v29, v31, v33);
  swift_bridgeObjectRelease();
  uint64_t v38 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v39 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v40 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #7.0 }
  _OWORD *v10 = _Q0;
  sub_10C7C(&qword_1233E0);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_EB580;
  uint64_t v47 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 104);
  uint64_t v49 = v103;
  v48(v6, enum case for Color.RGBColorSpace.sRGB(_:), v103);
  *(void *)(v46 + 32) = sub_E6C10();
  v48(v6, v47, v49);
  *(void *)(v46 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
  *(void *)&long long v127 = v46;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  uint64_t v50 = v104;
  sub_771EC((uint64_t)v10, v104, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v51 = v50 + *(int *)(v12 + 60);
  long long v52 = v125;
  *(_OWORD *)uint64_t v51 = v124;
  *(_OWORD *)(v51 + 16) = v52;
  *(void *)(v51 + 32) = v126;
  *(_WORD *)(v50 + *(int *)(v12 + 64)) = 256;
  sub_77254((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v53 = sub_E6F30();
  uint64_t v55 = v54;
  id v56 = v108;
  id v57 = [v108 sfSymbolsName];
  sub_E7110();

  sub_E6C30();
  uint64_t v58 = v111;
  uint64_t v59 = v109;
  uint64_t v60 = v114;
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v109, enum case for Image.ResizingMode.stretch(_:), v114);
  uint64_t v61 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  uint64_t v62 = sub_E6BA0();
  LOBYTE(v6sub_E59A4(2, 18, 1, 0) = sub_E6770();
  sub_E6210();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v106;
  sub_77318(v50, v106, &qword_1233C8);
  uint64_t v72 = v71 + *(int *)(v107 + 44);
  *(void *)uint64_t v72 = v61;
  *(void *)(v72 + 8) = 0;
  *(_WORD *)(v72 + 16) = 1;
  *(void *)(v72 + 24) = v62;
  *(unsigned char *)(v72 + 32) = v60;
  *(void *)(v72 + 4sub_E59A4(2, 18, 1, 0) = v64;
  *(void *)(v72 + 48) = v66;
  *(void *)(v72 + 56) = v68;
  *(void *)(v72 + 64) = v70;
  *(unsigned char *)(v72 + 72) = 0;
  *(void *)(v72 + 8sub_E59A4(2, 18, 1, 0) = v53;
  *(void *)(v72 + 88) = v55;
  sub_77388(v50, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  uint64_t v73 = v120;
  sub_77318(v71, v120, &qword_1233D0);
  long long v74 = (_OWORD *)(v73 + *(int *)(v110 + 44));
  long long v75 = v128;
  _OWORD *v74 = v127;
  v74[1] = v75;
  _OWORD v74[2] = v129;
  sub_77388(v71, &qword_1233D0);
  sub_772B4(v73, v121, &qword_1233D8);
  id v76 = [v56 name];
  uint64_t v77 = sub_E7110();
  uint64_t v79 = v78;

  uint64_t v122 = v77;
  uint64_t v123 = v79;
  uint64_t v80 = sub_E6920();
  uint64_t v82 = v81;
  LOBYTE(v59) = v83 & 1;
  sub_E6C00();
  uint64_t v111 = sub_E68E0();
  uint64_t v110 = v84;
  LOBYTE(v5sub_E59A4(2, 18, 1, 0) = v85;
  uint64_t v114 = v86;
  swift_release();
  LODWORD(v109) = v50 & 1;
  sub_18814(v80, v82, (char)v59);
  swift_bridgeObjectRelease();
  id v108 = (id)sub_CC534();
  LOBYTE(v82) = v87 & 1;
  uint64_t v88 = v118;
  sub_77318((uint64_t)v119, v118, &qword_123B20);
  LOBYTE(v61) = v116;
  LOBYTE(v122) = v116;
  uint64_t v89 = v120;
  sub_77318(v121, v120, &qword_1233D8);
  uint64_t v90 = v115;
  sub_77318(v88, v115, &qword_123B20);
  uint64_t v91 = (int *)sub_10C7C(&qword_124148);
  uint64_t v92 = v90 + v91[12];
  uint64_t v93 = v117;
  uint64_t v94 = v112;
  *(void *)uint64_t v92 = v117;
  *(void *)(v92 + 8) = v94;
  *(unsigned char *)(v92 + 16) = v61;
  *(void *)(v92 + 24) = v113;
  uint64_t v95 = v90 + v91[16];
  *(void *)uint64_t v95 = 0;
  *(unsigned char *)(v95 + 8) = 1;
  sub_77318(v89, v90 + v91[20], &qword_1233D8);
  uint64_t v96 = v90 + v91[24];
  uint64_t v97 = v111;
  uint64_t v98 = v110;
  *(void *)uint64_t v96 = v111;
  *(void *)(v96 + 8) = v98;
  LOBYTE(v71) = (_BYTE)v109;
  *(unsigned char *)(v96 + 16) = (_BYTE)v109;
  *(void *)(v96 + 24) = v114;
  uint64_t v99 = v90 + v91[28];
  uint64_t v100 = (uint64_t)v108;
  *(void *)uint64_t v99 = v108;
  *(unsigned char *)(v99 + 8) = v82;
  sub_18804(v93, v94, v116);
  swift_bridgeObjectRetain();
  sub_18804(v97, v98, v71);
  swift_bridgeObjectRetain();
  sub_7737C(v100, v82);
  sub_77388(v121, &qword_1233D8);
  sub_77388((uint64_t)v119, &qword_123B20);
  sub_773E4(v100, v82);
  sub_18814(v97, v98, v71);
  swift_bridgeObjectRelease();
  sub_77388(v120, &qword_1233D8);
  sub_18814(v117, v94, v122);
  swift_bridgeObjectRelease();
  return sub_77388(v118, &qword_123B20);
}

void sub_6D934(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = a2;
  uint64_t v78 = sub_E6AD0();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_E63B0();
  __chkstk_darwin(v76);
  uint64_t v6 = (_OWORD *)((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = sub_10C7C(&qword_1233C8);
  __chkstk_darwin(v79);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10C7C(&qword_1233D0);
  __chkstk_darwin(v80);
  uint64_t v82 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10C7C(&qword_1233D8);
  uint64_t v10 = __chkstk_darwin(v88);
  uint64_t v81 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v76 - v12;
  uint64_t v86 = sub_10C7C(&qword_123B38);
  __chkstk_darwin(v86);
  char v87 = (uint64_t *)((char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_E6C40();
  uint64_t v84 = *(void *)(v14 - 8);
  uint64_t v85 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  id v18 = [a1 bundleIdentifier];
  uint64_t v19 = sub_E7110();
  uint64_t v21 = v20;

  id v22 = [self defaultIdentifier];
  uint64_t v23 = sub_E7110();
  uint64_t v25 = v24;

  if (v19 == v23 && v21 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      id v27 = [v17 bundleIdentifier];
      sub_E7110();

      NSString v28 = sub_E70D0();
      swift_bridgeObjectRelease();
      id v29 = [self appIconImageForBundleIdentifier:v28];

      if (v29)
      {
        id v30 = [v29 UIImage];

        if (v30)
        {
          id v31 = v30;
          sub_E6C20();
          uint64_t v33 = v84;
          uint64_t v32 = v85;
          (*(void (**)(char *, void, uint64_t))(v84 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v85);
          uint64_t v34 = sub_E6C90();
          swift_release();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v32);
          sub_E6F30();
          sub_E62A0();
          uint64_t v35 = v93;
          char v36 = BYTE8(v93);
          uint64_t v37 = v94;
          char v38 = BYTE8(v94);
          uint64_t v39 = v87;
          *char v87 = v34;
          v39[1] = 0;
          *((_WORD *)v39 + 8) = 257;
          v39[3] = 0x3FF0000000000000;
          *((_WORD *)v39 + 16) = 0;
          v39[5] = v35;
          *((unsigned char *)v39 + 48) = v36;
          v39[7] = v37;
          *((unsigned char *)v39 + 64) = v38;
          *(_OWORD *)(v39 + 9) = v95;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          sub_10C7C(&qword_123B40);
          sub_773F0(&qword_123B48, &qword_123B40, (void (*)(void))sub_56824);
          sub_773F0((unint64_t *)&qword_123418, &qword_1233D8, (void (*)(void))sub_40644);
          sub_E6610();
          swift_release();

          return;
        }
      }
    }
  }
  uint64_t v40 = (char *)v6 + *(int *)(v76 + 20);
  uint64_t v41 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v42 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
  __asm { FMOV            V0.2D, #7.0 }
  *uint64_t v6 = _Q0;
  sub_10C7C(&qword_1233E0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_EB580;
  uint64_t v49 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 104);
  uint64_t v51 = v78;
  v50(v4, enum case for Color.RGBColorSpace.sRGB(_:), v78);
  *(void *)(v48 + 32) = sub_E6C10();
  v50(v4, v49, v51);
  *(void *)(v48 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
  *(void *)&long long v93 = v48;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  sub_771EC((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v52 = v79;
  uint64_t v53 = &v8[*(int *)(v79 + 52)];
  long long v54 = v91;
  *(_OWORD *)uint64_t v53 = v90;
  *((_OWORD *)v53 + 1) = v54;
  *((void *)v53 + 4) = v92;
  *(_WORD *)&v8[*(int *)(v52 + 56)] = 256;
  sub_77254((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v55 = sub_E6F30();
  uint64_t v57 = v56;
  sub_E6C30();
  uint64_t v59 = v84;
  uint64_t v58 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v85);
  uint64_t v60 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v58);
  uint64_t v61 = sub_E6BA0();
  LOBYTE(v58) = sub_E6770();
  sub_E6210();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v70 = v82;
  sub_77318((uint64_t)v8, v82, &qword_1233C8);
  uint64_t v71 = v70 + *(int *)(v80 + 36);
  *(void *)uint64_t v71 = v60;
  *(void *)(v71 + 8) = 0;
  *(_WORD *)(v71 + 16) = 1;
  *(void *)(v71 + 24) = v61;
  *(unsigned char *)(v71 + 32) = v58;
  *(void *)(v71 + 4sub_E59A4(2, 18, 1, 0) = v63;
  *(void *)(v71 + 48) = v65;
  *(void *)(v71 + 56) = v67;
  *(void *)(v71 + 64) = v69;
  *(unsigned char *)(v71 + 72) = 0;
  *(void *)(v71 + 8sub_E59A4(2, 18, 1, 0) = v55;
  *(void *)(v71 + 88) = v57;
  sub_77388((uint64_t)v8, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  uint64_t v72 = v81;
  sub_77318(v70, v81, &qword_1233D0);
  uint64_t v73 = (_OWORD *)(v72 + *(int *)(v88 + 36));
  long long v74 = v94;
  *uint64_t v73 = v93;
  v73[1] = v74;
  v73[2] = v95;
  sub_77388(v70, &qword_1233D0);
  uint64_t v75 = v83;
  sub_772B4(v72, v83, &qword_1233D8);
  sub_77318(v75, (uint64_t)v87, &qword_1233D8);
  swift_storeEnumTagMultiPayload();
  sub_10C7C(&qword_123B40);
  sub_773F0(&qword_123B48, &qword_123B40, (void (*)(void))sub_56824);
  sub_773F0((unint64_t *)&qword_123418, &qword_1233D8, (void (*)(void))sub_40644);
  sub_E6610();
  sub_77388(v75, &qword_1233D8);
}

uint64_t sub_6E360()
{
  return sub_E69D0();
}

uint64_t sub_6E37C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)v1;
  uint64_t v3 = *(void **)(v1 + 8);
  *(void *)a1 = sub_E6560();
  *(void *)(a1 + 8) = 0x401C000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = sub_10C7C(&qword_123F08);
  return sub_6CEC4(v4, v3, a1 + *(int *)(v5 + 44));
}

id sub_6E3D8()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_6E468()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_6E4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_6E574(a1);
}

uint64_t type metadata accessor for GCSControllerCustomizeControlsView()
{
  uint64_t result = qword_1285F0;
  if (!qword_1285F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6E574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_E6530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_123F10);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_77318(v2, (uint64_t)v10, &qword_123F10);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_772B4((uint64_t)v10, a1, &qword_123F58);
  }
  os_log_type_t v12 = sub_E7310();
  uint64_t v13 = sub_E6740();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[1] = a1;
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    void v17[2] = sub_23A0C(0xD000000000000019, 0x80000000000F2690, &v18);
    sub_E73D0();
    _os_log_impl(&dword_0, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_E6520();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_6E808()
{
  return sub_E6480();
}

uint64_t sub_6E82C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for GCSControllerCustomizeControlsView() + 24);
  uint64_t v2 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_7737C(*(void *)v1, v3);
  char v4 = sub_1FB00(v2, v3);
  sub_773E4(v2, v3);
  return v4 & 1;
}

uint64_t sub_6E894@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_E6440();
  *a1 = result & 1;
  return result;
}

id sub_6E8C4()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for GCSControllerCustomizeControlsView() + 28));

  return v1;
}

__n128 sub_6E8F8@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSControllerCustomizeControlsView();
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_6E9AC()
{
  return sub_E6DF0();
}

void (*sub_6EA60(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  __n128 v4 = (long long *)(v1 + *(int *)(type metadata accessor for GCSControllerCustomizeControlsView() + 32));
  long long v6 = v4[6];
  long long v5 = v4[7];
  long long v7 = v4[5];
  v3[6] = v6;
  v3[7] = v5;
  long long v8 = v4[7];
  v3[8] = v4[8];
  long long v10 = v4[2];
  long long v9 = v4[3];
  long long v11 = v4[1];
  v3[2] = v10;
  v3[3] = v9;
  long long v12 = v4[3];
  long long v14 = v4[4];
  long long v13 = v4[5];
  v3[4] = v14;
  v3[5] = v13;
  long long v15 = v4[1];
  long long v16 = *v4;
  *long long v3 = *v4;
  v3[1] = v15;
  *(_OWORD *)((char *)v3 + 248) = v6;
  long long v17 = v4[8];
  *(_OWORD *)((char *)v3 + 264) = v8;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v17;
  *(_OWORD *)((char *)v3 + 184) = v10;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(_OWORD *)((char *)v3 + 216) = v14;
  *(_OWORD *)((char *)v3 + 232) = v7;
  *(_OWORD *)((char *)v3 + 152) = v16;
  *((void *)v3 + 18) = *((void *)v4 + 18);
  *((void *)v3 + 37) = *((void *)v4 + 18);
  *(_OWORD *)((char *)v3 + 168) = v11;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_6EB64;
}

void sub_6EB64(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_6ECFC@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSControllerCustomizeControlsView();
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_6EDB8(uint64_t a1)
{
  return sub_6EE20(a1, (unint64_t *)&qword_122828);
}

id sub_6EDCC()
{
  id v0 = [self defaultGame];

  return v0;
}

uint64_t sub_6EE0C(uint64_t a1)
{
  return sub_6EE20(a1, (unint64_t *)&qword_124E50);
}

uint64_t sub_6EE20(uint64_t a1, unint64_t *a2)
{
  sub_6EFD4(0, a2);
  sub_E6D10();
  return v3;
}

id sub_6EE5C()
{
  id v0 = [self defaultProfile];

  return v0;
}

uint64_t sub_6EEA0()
{
  return 0;
}

uint64_t sub_6EEA8()
{
  sub_10C7C(&qword_124DC0);
  sub_E6D10();
  return v1;
}

void *sub_6EEE8()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_6EEF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2);
  sub_771EC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  return sub_77254(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

uint64_t sub_6EFC0(uint64_t a1)
{
  return sub_6EE20(a1, (unint64_t *)&qword_124E30);
}

uint64_t sub_6EFD4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_6F010()
{
  id v0 = objc_allocWithZone((Class)GCSController);

  return [v0 initDummy];
}

uint64_t sub_6F048()
{
  sub_10C7C(&qword_123F18);
  sub_E6D10();
  return v1;
}

uint64_t sub_6F08C()
{
  return 0;
}

uint64_t sub_6F09C()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_6F0D8()
{
  return 0;
}

uint64_t sub_6F0E0()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  long long v7 = (char *)&v39 - v6;
  __chkstk_darwin(v5);
  long long v9 = (char *)&v39 - v8;
  long long v10 = (int *)type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v39 = v10[7];
  long long v11 = *(void **)((char *)v0 + v39);
  uint64_t v12 = (void **)((char *)v0 + v10[14]);
  uint64_t v14 = v12[1];
  *(void *)&long long v50 = *v12;
  uint64_t v13 = v50;
  *((void *)&v50 + 1) = v14;
  *(void *)&v60[0] = v11;
  id v15 = v11;
  sub_10C7C(&qword_123A78);
  sub_E6D30();
  long long v16 = (uint64_t *)((char *)v0 + v10[9]);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)&long long v50 = v18;
  *((void *)&v50 + 1) = v17;
  sub_10C7C(&qword_124110);
  sub_E6D20();
  long long v19 = *(void **)&v60[0];
  *(void *)&long long v50 = v13;
  *((void *)&v50 + 1) = v14;
  sub_E6D20();
  if (*v0)
  {
    long long v20 = *(void **)&v60[0];
    id v21 = objc_msgSend(v19, "profileFor:with:", *(void *)&v60[0]);

    long long v22 = (void **)((char *)v1 + v10[10]);
    uint64_t v24 = v22[1];
    *(void *)&long long v50 = *v22;
    uint64_t v23 = v50;
    *((void *)&v50 + 1) = v24;
    *(void *)&v60[0] = v21;
    sub_10C7C(&qword_124120);
    sub_E6D30();
    *(void *)&long long v50 = v23;
    *((void *)&v50 + 1) = v24;
    sub_E6D20();
    long long v25 = *(void **)&v60[0];
    sub_E0510((uint64_t)v9);

    sub_771EC((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_10C7C(&qword_1235B0);
    sub_E6D30();
    sub_77254((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    uint64_t v26 = (uint64_t)v40;
    sub_E6D20();
    long long v27 = *(void **)((char *)v1 + v39);
    long long v28 = *v1;
    if (*v1)
    {
      id v29 = v27;
      id v30 = [v28 controllers];
      sub_6EFD4(0, (unint64_t *)&qword_124E30);
      unint64_t v31 = sub_E7210();

      sub_57F44(v26, v27, v31, (uint64_t)v60);
      long long v32 = (char *)v1 + v10[8];
      long long v33 = *((_OWORD *)v32 + 7);
      long long v56 = *((_OWORD *)v32 + 6);
      long long v57 = v33;
      long long v58 = *((_OWORD *)v32 + 8);
      uint64_t v59 = *((void *)v32 + 18);
      long long v34 = *((_OWORD *)v32 + 3);
      long long v52 = *((_OWORD *)v32 + 2);
      long long v53 = v34;
      long long v35 = *((_OWORD *)v32 + 5);
      long long v54 = *((_OWORD *)v32 + 4);
      long long v55 = v35;
      long long v36 = *((_OWORD *)v32 + 1);
      long long v50 = *(_OWORD *)v32;
      long long v51 = v36;
      long long v47 = v60[6];
      long long v48 = v60[7];
      uint64_t v49 = v61;
      long long v43 = v60[2];
      long long v44 = v60[3];
      long long v45 = v60[4];
      long long v46 = v60[5];
      long long v41 = v60[0];
      long long v42 = v60[1];
      sub_10C7C(&qword_122BB8);
      return sub_E6DF0();
    }
  }
  else
  {
    long long v27 = v0[1];
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
  type metadata accessor for GCSPreferencesStore();
  sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  id v38 = v27;
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_6F4F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = sub_E66E0();
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v78 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10C7C(&qword_123F20);
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10C7C(&qword_123F28);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v98 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_123F30);
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10C7C(&qword_123F38);
  __chkstk_darwin(v81);
  uint64_t v92 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10C7C(&qword_123F40);
  uint64_t v10 = __chkstk_darwin(v89);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v72 - v14;
  __chkstk_darwin(v13);
  long long v16 = (char *)&v72 - v15;
  uint64_t v17 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v20 = sub_10C7C(&qword_123F48);
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  long long v90 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v99 = (char *)&v72 - v23;
  uint64_t v75 = v17;
  uint64_t v24 = (char **)(v2 + *(int *)(v17 + 48));
  uint64_t v26 = *v24;
  uint64_t v25 = (uint64_t)v24[1];
  uint64_t v101 = v26;
  uint64_t v102 = v25;
  sub_10C7C(&qword_123F50);
  sub_E6D20();
  long long v95 = v12;
  uint64_t v96 = a1;
  uint64_t v93 = v20;
  long long v94 = v16;
  if (v105 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_E7570();
    swift_bridgeObjectRelease_n();
    if (v27 < 0)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v27 = *(void *)((char *)&dword_10 + (v105 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRelease();
  }
  uint64_t v101 = 0;
  uint64_t v102 = v27;
  swift_getKeyPath();
  long long v28 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for GCSControllerCustomizeControlsView;
  sub_771EC(v2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v74 = v30;
  uint64_t v97 = v29 | 7;
  uint64_t v31 = swift_allocObject();
  sub_707E0((uint64_t)v28, v31 + v30);
  sub_10C7C(&qword_123338);
  sub_10C7C(&qword_123F60);
  uint64_t v100 = (id *)v2;
  sub_3BBE0();
  sub_7746C(&qword_123F68, &qword_123F60);
  uint64_t v32 = sub_E6EB0();
  __chkstk_darwin(v32);
  sub_10C7C(&qword_123F70);
  sub_7746C(&qword_123F78, &qword_123F70);
  long long v33 = v76;
  sub_E68B0();
  long long v34 = v78;
  sub_E66D0();
  uint64_t v35 = sub_7746C(&qword_123F80, &qword_123F20);
  uint64_t v36 = v80;
  uint64_t v37 = v82;
  sub_E6AA0();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v36);
  id v38 = (char *)v100 + *(int *)(v75 + 44);
  char v39 = *v38;
  uint64_t v40 = *((void *)v38 + 1);
  LOBYTE(v105) = v39;
  uint64_t v106 = v40;
  sub_10C7C(&qword_122A50);
  sub_E6D40();
  uint64_t v78 = v101;
  LODWORD(v79) = v103;
  uint64_t v72 = v28;
  sub_771EC((uint64_t)v100, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v74;
  sub_707E0((uint64_t)v28, v41 + v74);
  sub_10C7C(&qword_123F88);
  uint64_t v101 = (char *)v36;
  uint64_t v102 = v37;
  uint64_t v103 = v35;
  uint64_t v104 = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2();
  sub_72EF0();
  long long v43 = v85;
  uint64_t v44 = v84;
  long long v45 = v98;
  sub_E6A60();
  long long v46 = v100;
  swift_release();
  swift_release();
  uint64_t v47 = (uint64_t)v72;
  swift_release();
  long long v48 = v45;
  uint64_t v49 = v42;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v44);
  sub_771EC((uint64_t)v46, v47, (uint64_t (*)(void))v73);
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v49;
  sub_707E0(v47, v50 + v49);
  uint64_t v53 = v86;
  uint64_t v52 = v87;
  uint64_t v54 = (uint64_t)v92;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v92, v43, v87);
  long long v55 = (uint64_t (**)())(v54 + *(int *)(v81 + 36));
  *long long v55 = sub_73144;
  v55[1] = (uint64_t (*)())v50;
  v55[2] = 0;
  v55[3] = 0;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v52);
  if (*v46)
  {
    id v56 = [*v46 games];
    sub_6EFD4(0, (unint64_t *)&qword_122828);
    uint64_t v57 = sub_E7210();

    sub_771EC((uint64_t)v46, v47, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    uint64_t v58 = swift_allocObject();
    sub_707E0(v47, v58 + v51);
    uint64_t v59 = v88;
    sub_77318(v54, v88, &qword_123F38);
    uint64_t v60 = (uint64_t *)(v59 + *(int *)(v89 + 36));
    uint64_t *v60 = v57;
    v60[1] = (uint64_t)sub_7330C;
    v60[2] = v58;
    sub_77388(v54, &qword_123F38);
    uint64_t v61 = (uint64_t)v94;
    sub_772B4(v59, (uint64_t)v94, &qword_123F40);
    uint64_t v63 = v90;
    uint64_t v62 = v91;
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    uint64_t v65 = v99;
    uint64_t v66 = v93;
    v64(v90, v99, v93);
    uint64_t v67 = (uint64_t)v95;
    sub_77318(v61, (uint64_t)v95, &qword_123F40);
    uint64_t v68 = v96;
    v64(v96, v63, v66);
    uint64_t v69 = sub_10C7C(&qword_123FA0);
    sub_77318(v67, (uint64_t)&v68[*(int *)(v69 + 48)], &qword_123F40);
    sub_77388(v61, &qword_123F40);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v62 + 8);
    v70(v65, v66);
    sub_77388(v67, &qword_123F40);
    return ((uint64_t (*)(char *, uint64_t))v70)(v63, v66);
  }
LABEL_7:
  type metadata accessor for GCSPreferencesStore();
  sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_700A0@<X0>(unint64_t *a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v85 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GCSControllerCustomizeGameView();
  __chkstk_darwin(v8 - 8);
  uint64_t v86 = (int *)((char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_10C7C(&qword_124128);
  __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C(&qword_124130);
  __chkstk_darwin(v11);
  long long v90 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10C7C(&qword_123F60);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v88 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *a1;
  uint64_t v17 = (int *)type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v18 = (uint64_t *)((char *)a2 + v17[12]);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *(void *)&long long v107 = v20;
  *((void *)&v107 + 1) = v19;
  sub_10C7C(&qword_123F50);
  sub_E6D20();
  uint64_t v91 = v14;
  if ((v97 & 0xC000000000000001) == 0)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)((char *)&dword_10 + (v97 & 0xFFFFFFFFFFFFFF8)))
    {
      id v21 = *(id *)(v97 + 8 * v16 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_10;
  }
  id v21 = (id)sub_E74E0();
LABEL_5:
  id v75 = v21;
  uint64_t v82 = v13;
  uint64_t v83 = v11;
  uint64_t v84 = a3;
  swift_bridgeObjectRelease();
  uint64_t v22 = a2;
  uint64_t v23 = *(void **)((char *)a2 + v17[7]);
  uint64_t v24 = (uint64_t *)((char *)a2 + v17[9]);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *(void *)&long long v97 = v26;
  *((void *)&v97 + 1) = v25;
  id v27 = v23;
  sub_10C7C(&qword_124110);
  sub_E6D40();
  long long v28 = *a2;
  if (*a2)
  {
    uint64_t v80 = *((void *)&v107 + 1);
    uint64_t v81 = v107;
    uint64_t v79 = v108;
    id v29 = [v28 profiles];
    sub_6EFD4(0, (unint64_t *)&qword_124E50);
    uint64_t v30 = sub_E7210();

    uint64_t v31 = (uint64_t *)((char *)a2 + v17[10]);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    *(void *)&long long v97 = v33;
    *((void *)&v97 + 1) = v32;
    sub_10C7C(&qword_124120);
    sub_E6D40();
    long long v77 = v107;
    uint64_t v34 = v108;
    sub_10C7C(&qword_1235B0);
    uint64_t v35 = (uint64_t)v85;
    sub_E6D40();
    uint64_t v36 = (char *)v22 + v17[8];
    long long v37 = *((_OWORD *)v36 + 7);
    long long v103 = *((_OWORD *)v36 + 6);
    long long v104 = v37;
    long long v105 = *((_OWORD *)v36 + 8);
    uint64_t v106 = *((void *)v36 + 18);
    long long v38 = *((_OWORD *)v36 + 3);
    long long v99 = *((_OWORD *)v36 + 2);
    long long v100 = v38;
    long long v39 = *((_OWORD *)v36 + 5);
    long long v101 = *((_OWORD *)v36 + 4);
    long long v102 = v39;
    long long v40 = *((_OWORD *)v36 + 1);
    long long v97 = *(_OWORD *)v36;
    long long v98 = v40;
    sub_10C7C(&qword_122BB8);
    sub_E6E10();
    uint64_t v41 = (uint64_t *)((char *)v22 + v17[14]);
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    *(void *)&long long v92 = v43;
    *((void *)&v92 + 1) = v42;
    sub_10C7C(&qword_123A78);
    uint64_t v44 = sub_E6D40();
    long long v76 = v97;
    uint64_t v45 = v98;
    uint64_t v46 = sub_96F54(v44);
    uint64_t v78 = v22;
    uint64_t v48 = v47;
    uint64_t v49 = sub_96FCC();
    uint64_t v73 = v45;
    *((void *)&v72 + 1) = v77;
    *(void *)&long long v72 = v30;
    uint64_t v51 = (uint64_t)v86;
    sub_96FF0(v46, v48, v49, v50 & 1, (uint64_t)v27, v81, v80, v79, (uint64_t)v86, v72, *((uint64_t *)&v77 + 1), v34, v35, (uint64_t)&v107, v76, v73);
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v52 = v28;
    uint64_t v53 = sub_E6100();
    uint64_t v54 = v87;
    sub_771EC(v51, v87, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);
    uint64_t v55 = v89;
    id v56 = (uint64_t *)(v54 + *(int *)(v89 + 36));
    *id v56 = v53;
    v56[1] = (uint64_t)v28;
    sub_77254(v51, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);
    uint64_t v86 = v17;
    id v57 = v75;
    id v58 = [v75 localizedName];
    uint64_t v59 = sub_E7110();
    uint64_t v61 = v60;

    *(void *)&long long v97 = v59;
    *((void *)&v97 + 1) = v61;
    unint64_t v62 = sub_77118();
    unint64_t v63 = sub_187B0();
    sub_E69E0();
    swift_bridgeObjectRelease();
    sub_77388(v54, &qword_124128);
    id v64 = [v57 bundleIdentifier];
    uint64_t v65 = sub_E7110();
    uint64_t v67 = v66;

    uint64_t v95 = v65;
    uint64_t v96 = v67;
    uint64_t v68 = (long long *)((char *)v78 + v86[15]);
    unint64_t v69 = *((void *)v68 + 2);
    long long v92 = *v68;
    unint64_t v93 = v69;
    sub_10C7C(&qword_124118);
    sub_E6D40();
    *(void *)&long long v92 = v55;
    *((void *)&v92 + 1) = &type metadata for String;
    unint64_t v93 = v62;
    unint64_t v94 = v63;
    swift_getOpaqueTypeConformance2();
    uint64_t v70 = v88;
    sub_E62F0();

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v91 + 32))(v84, v70, v82);
  }
LABEL_10:
  type metadata accessor for GCSPreferencesStore();
  sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_707E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSControllerCustomizeControlsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_70844(uint64_t a1)
{
  return sub_762EC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_700A0);
}

uint64_t sub_70860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_124080);
  uint64_t v68 = *(void *)(v4 - 8);
  unint64_t v69 = (void (*)(void, void, void))v4;
  __chkstk_darwin(v4);
  uint64_t v67 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_124088);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = sub_10C7C(&qword_124090);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v76 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v79 = (char *)&v65 - v17;
  uint64_t v18 = sub_10C7C(&qword_124098);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v75 = (uint64_t)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v78 = (uint64_t)&v65 - v21;
  uint64_t v66 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v22 = (uint64_t *)(a1 + *(int *)(v66 + 48));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v84 = v24;
  uint64_t v85 = v23;
  sub_10C7C(&qword_123F50);
  uint64_t result = sub_E6D20();
  unint64_t v26 = v82;
  if (v82 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_E7570();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v72 = a2;
  uint64_t v73 = v6;
  uint64_t v77 = v13;
  uint64_t v70 = v12;
  uint64_t v71 = v14;
  uint64_t v74 = v10;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_10C7C(&qword_1240B8);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v78, 1, 1, v38);
    goto LABEL_9;
  }
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v28 = (id)sub_E74E0();
    goto LABEL_7;
  }
  if (*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
  {
    id v28 = *(id *)(v26 + 32);
LABEL_7:
    id v29 = v28;
    uint64_t v30 = swift_bridgeObjectRelease();
    __chkstk_darwin(v30);
    sub_10C7C(&qword_1240A0);
    uint64_t v31 = sub_11B60(&qword_1240A8);
    uint64_t v32 = sub_E6380();
    uint64_t v33 = sub_7746C(&qword_1240B0, &qword_1240A8);
    uint64_t v34 = sub_77588(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    uint64_t v84 = v31;
    uint64_t v85 = v32;
    uint64_t v86 = v33;
    uint64_t v87 = v34;
    swift_getOpaqueTypeConformance2();
    uint64_t v35 = v78;
    sub_E6EE0();

    uint64_t v36 = sub_10C7C(&qword_1240B8);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
LABEL_9:
    __chkstk_darwin(v37);
    sub_10C7C(&qword_1240C0);
    sub_7746C(&qword_1240C8, &qword_1240C0);
    uint64_t v39 = sub_E6EE0();
    __chkstk_darwin(v39);
    sub_10C7C(&qword_122B88);
    sub_7746C(&qword_122BA0, &qword_122B88);
    long long v40 = v67;
    sub_E6EE0();
    unint64_t v82 = sub_B7108(0xD00000000000002ALL, (void *)0x80000000000F2630);
    uint64_t v83 = v41;
    uint64_t v42 = (char *)(a1 + *(int *)(v66 + 64));
    char v43 = *v42;
    uint64_t v44 = *((void *)v42 + 1);
    char v80 = v43;
    uint64_t v81 = v44;
    sub_10C7C(&qword_122A50);
    uint64_t v45 = sub_E6D40();
    __chkstk_darwin(v45);
    sub_760FC();
    sub_187B0();
    uint64_t v46 = v74;
    uint64_t v47 = v69;
    sub_E6A10();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void (*)(void, void, void)))(v68 + 8))(v40, v47);
    uint64_t v48 = v70;
    uint64_t v49 = v46;
    char v50 = v46;
    uint64_t v51 = v73;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v70, v50, v73);
    uint64_t v52 = v75;
    sub_77318(v78, v75, &qword_124098);
    uint64_t v53 = v71;
    unint64_t v69 = *(void (**)(void, void, void))(v71 + 16);
    uint64_t v54 = v76;
    v69(v76, v79, v77);
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v55(v49, v48, v51);
    uint64_t v56 = v52;
    uint64_t v57 = v72;
    sub_77318(v56, v72, &qword_124098);
    uint64_t v58 = sub_10C7C(&qword_1240D8);
    uint64_t v59 = v54;
    uint64_t v60 = v77;
    v69(v57 + *(int *)(v58 + 48), v59, v77);
    uint64_t v61 = v57 + *(int *)(v58 + 64);
    unint64_t v62 = v74;
    v55((char *)v61, v74, v51);
    unint64_t v63 = *(void (**)(char *, uint64_t))(v7 + 8);
    v63(v48, v51);
    id v64 = *(void (**)(char *, uint64_t))(v53 + 8);
    v64(v79, v60);
    sub_77388(v78, &qword_124098);
    v63(v62, v51);
    v64(v76, v60);
    return sub_77388(v75, &qword_124098);
  }
  __break(1u);
  return result;
}

uint64_t sub_710F4@<X0>(uint64_t a1@<X8>)
{
  return sub_70860(*(void *)(v1 + 16), a1);
}

uint64_t sub_710FC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v22[1] = a3;
  uint64_t v5 = sub_E6380();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  v22[0] = sub_10C7C(&qword_1240A8);
  uint64_t v11 = *(void *)(v22[0] - 8);
  __chkstk_darwin(v22[0]);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2)
  {
    id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(a1, "profileFor:with:", *(void *)((char *)a2
                                                                                            + *(int *)(v8 + 28))));
    sub_771EC((uint64_t)a2, (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = sub_707E0((uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    *(void *)(v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
    __chkstk_darwin(v17);
    v22[-2] = a1;
    v22[-1] = v14;
    sub_76C00();
    id v18 = a1;
    sub_E6D80();
    sub_E6370();
    sub_7746C(&qword_1240B0, &qword_1240A8);
    sub_77588(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    uint64_t v19 = v22[0];
    uint64_t v20 = v24;
    sub_E6990();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_714DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10C7C(&qword_122B88);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&KeyPath - v9;
  uint64_t v11 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v12 = v11 - 8;
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v52 + 64);
  __chkstk_darwin(v11);
  id v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10C7C(&qword_1240E0);
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  __chkstk_darwin(v15);
  uint64_t v55 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10C7C(&qword_1240E8);
  uint64_t v17 = __chkstk_darwin(v54);
  uint64_t v59 = (uint64_t)&KeyPath - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v53 = (char *)&KeyPath - v20;
  __chkstk_darwin(v19);
  uint64_t v58 = (uint64_t)&KeyPath - v21;
  uint64_t v22 = (uint64_t *)(a1 + *(int *)(v12 + 56));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v65 = v24;
  uint64_t v66 = v23;
  sub_10C7C(&qword_123F50);
  sub_E6D20();
  uint64_t v63 = v5;
  uint64_t v64 = v4;
  uint64_t v61 = a2;
  unint64_t v62 = v8;
  uint64_t v60 = v10;
  if (!(v67 >> 62))
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRelease();
LABEL_3:
    uint64_t v65 = 0;
    uint64_t v66 = v25;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = type metadata accessor for GCSControllerCustomizeControlsView;
    sub_771EC(a1, (uint64_t)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    uint64_t v26 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v27 = (v26 + 16) & ~v26;
    uint64_t v52 = v26 | 7;
    uint64_t v28 = swift_allocObject();
    sub_707E0((uint64_t)v14, v28 + v27);
    sub_10C7C(&qword_123338);
    uint64_t v50 = a1;
    sub_10C7C(&qword_1240F0);
    sub_3BBE0();
    sub_76380();
    id v29 = v55;
    sub_E6EB0();
    sub_771EC(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    uint64_t v30 = swift_allocObject();
    sub_707E0((uint64_t)v14, v30 + v27);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_764A0;
    *(void *)(v31 + 24) = v30;
    uint64_t v33 = v56;
    uint64_t v32 = v57;
    uint64_t v34 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v29, v57);
    uint64_t v35 = (uint64_t (**)())(v34 + *(int *)(v54 + 36));
    *uint64_t v35 = sub_76548;
    v35[1] = (uint64_t (*)())v31;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
    uint64_t v36 = v58;
    sub_772B4(v34, v58, &qword_1240E8);
    uint64_t v65 = sub_B7108(0x5F5050415F444441, (void *)0xED0000454C544954);
    uint64_t v66 = v37;
    sub_771EC(v50, (uint64_t)v14, (uint64_t (*)(void))v51);
    uint64_t v38 = swift_allocObject();
    sub_707E0((uint64_t)v14, v38 + v27);
    sub_187B0();
    uint64_t v39 = v60;
    sub_E6DA0();
    uint64_t v40 = v59;
    sub_77318(v36, v59, &qword_1240E8);
    uint64_t v42 = v62;
    uint64_t v41 = v63;
    char v43 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    uint64_t v44 = v64;
    v43(v62, v39, v64);
    uint64_t v45 = v61;
    sub_77318(v40, v61, &qword_1240E8);
    uint64_t v46 = sub_10C7C(&qword_124100);
    v43((char *)(v45 + *(int *)(v46 + 48)), v42, v44);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
    v47(v39, v44);
    sub_77388(v36, &qword_1240E8);
    v47(v42, v44);
    return sub_77388(v40, &qword_1240E8);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_E7570();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v25 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_71AF0@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_E6380();
  uint64_t v46 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v40 + 64);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_10C7C(&qword_1240A8);
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_1240A0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a1;
  uint64_t v16 = (void *)((char *)a2 + *(int *)(v8 + 48));
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v49 = v18;
  uint64_t v50 = v17;
  sub_10C7C(&qword_123F50);
  sub_E6D20();
  uint64_t v47 = v6;
  if ((v51 & 0xC000000000000001) == 0)
  {
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFFF8)))
    {
      id v19 = *(id *)(v51 + 8 * v15 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_14;
  }
  id v19 = (id)sub_E74E0();
LABEL_5:
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_9;
  }
  uint64_t v48 = a3;
  id v21 = [v20 bundleIdentifier];
  uint64_t v22 = sub_E7110();
  uint64_t v24 = v23;

  id v25 = objc_allocWithZone((Class)LSApplicationRecord);
  id v26 = sub_45BDC(v22, v24, 0);
  a3 = v48;
  if (!v26)
  {
LABEL_9:

    uint64_t v37 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, v37, 1, v12);
  }

  if (*a2)
  {
    id v27 = objc_retainAutoreleasedReturnValue(objc_msgSend(v20, "profileFor:with:", *(void *)((char *)a2
                                                                                             + *(int *)(v8 + 28))));
    id v39 = v27;
    sub_771EC((uint64_t)a2, (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
    unint64_t v28 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = sub_707E0((uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
    *(void *)(v29 + ((v9 + v28 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
    __chkstk_darwin(v30);
    *(&v39 - 2) = v20;
    *(&v39 - 1) = v27;
    sub_76C00();
    id v31 = v20;
    uint64_t v32 = v42;
    sub_E6D80();
    uint64_t v33 = v45;
    sub_E6370();
    sub_7746C(&qword_1240B0, &qword_1240A8);
    sub_77588(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    uint64_t v34 = v41;
    uint64_t v35 = v44;
    uint64_t v36 = v47;
    sub_E6990();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v36);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v35);
    a3 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v48, v34, v12);
    uint64_t v37 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, v37, 1, v12);
  }
LABEL_14:
  type metadata accessor for GCSPreferencesStore();
  sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_720D0(uint64_t a1, void **a2)
{
  uint64_t v3 = sub_E60E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = sub_10C7C(&qword_123560);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_E6090();
  if ((v14 & 1) == 0)
  {
    unint64_t v15 = result;
    uint64_t v16 = type metadata accessor for GCSControllerCustomizeControlsView();
    uint64_t v17 = (uint64_t *)((char *)a2 + *(int *)(v16 + 48));
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v66 = v19;
    uint64_t v67 = v18;
    sub_10C7C(&qword_123F50);
    sub_E6D20();
    uint64_t v64 = v3;
    if (((unint64_t)v68 & 0xC000000000000001) == 0)
    {
      if ((v15 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v15 < *(void *)((char *)&dword_10 + ((unint64_t)v68 & 0xFFFFFFFFFFFFFF8)))
      {
        uint64_t v20 = v68[v15 + 4].isa;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v20 = (objc_class *)sub_E74E0();
LABEL_6:
    id v21 = v20;
    swift_bridgeObjectRelease();
    id v22 = [v21 controllerToProfileMappings];
    uint64_t v23 = sub_E6050();
    uint64_t v24 = sub_E7050();

    uint64_t v66 = v24;
    id v25 = [*(void **)((char *)a2 + *(int *)(v16 + 28)) persistentIdentifier];
    uint64_t v26 = sub_E7110();
    uint64_t v28 = v27;

    sub_75C9C(v26, v28, (uint64_t)v12);
    swift_bridgeObjectRelease();
    sub_77388((uint64_t)v12, &qword_123560);
    if (*(void *)(v66 + 16))
    {
      uint64_t v63 = v7;
      uint64_t v65 = v4;
      id v29 = [v21 bundleIdentifier];
      uint64_t v61 = v23;
      id v30 = v29;
      sub_E7110();

      id v31 = [v21 localizedName];
      sub_E7110();

      id v32 = [v21 controllerToCompatibilityModeMappings];
      type metadata accessor for GCSCompatibilityMode();
      unint64_t v62 = v21;
      sub_E7050();

      id v33 = objc_allocWithZone((Class)GCSGame);
      NSString v34 = sub_E70D0();
      swift_bridgeObjectRelease();
      NSString v35 = sub_E70D0();
      swift_bridgeObjectRelease();
      Class isa = sub_E7040().super.isa;
      swift_bridgeObjectRelease();
      Class v37 = sub_E7040().super.isa;
      swift_bridgeObjectRelease();
      id v38 = [v33 initWithBundleIdentifier:v34 title:v35 controllerToProfileMappings:isa controllerToCompatibilityModeMappings:v37];

      id v39 = *a2;
      if (*a2)
      {
        uint64_t v40 = *(void (**)(NSObject *, id, uint64_t))&stru_298.segname[(swift_isaMask & *v39) - 8];
        uint64_t v41 = v39;
        uint64_t v42 = v62;
        v40(v62, v38, 1);

        uint64_t v43 = sub_33D64();
        uint64_t v44 = v64;
        uint64_t v45 = v63;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v63, v43, v64);
        uint64_t v46 = v38;
        uint64_t v47 = sub_E60C0();
        os_log_type_t v48 = sub_E7320();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v50 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 138412290;
          uint64_t v68 = v46;
          uint64_t v51 = v46;
          uint64_t v45 = v63;
          sub_E73D0();
          *uint64_t v50 = v46;

          _os_log_impl(&dword_0, v47, v48, "Updating %@", v49, 0xCu);
          sub_10C7C(&qword_125050);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          uint64_t v52 = v62;
        }
        else
        {

          uint64_t v52 = v46;
          uint64_t v47 = v42;
        }

        uint64_t v4 = v65;
LABEL_17:

        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v45, v44);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v53 = *a2;
      if (*a2)
      {
        uint64_t v54 = *(void (**)(NSObject *, uint64_t))&stru_298.segname[(swift_isaMask & *v53) + 8];
        uint64_t v55 = v53;
        v54(v21, 1);

        uint64_t v56 = sub_33D64();
        uint64_t v44 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v56, v64);
        uint64_t v52 = v21;
        uint64_t v47 = sub_E60C0();
        os_log_type_t v57 = sub_E7320();
        if (os_log_type_enabled(v47, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v58 = 138412290;
          uint64_t v68 = v52;
          uint64_t v59 = v52;
          uint64_t v65 = v4;
          uint64_t v60 = v59;
          sub_E73D0();
          *(void *)uint64_t v63 = v52;

          _os_log_impl(&dword_0, v47, v57, "Removing %@", v58, 0xCu);
          sub_10C7C(&qword_125050);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          uint64_t v52 = v60;
          uint64_t v4 = v65;
        }
        else
        {

          uint64_t v47 = v52;
        }
        uint64_t v45 = v9;
        goto LABEL_17;
      }
    }
LABEL_22:
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_728A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_10C7C(&qword_122B80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E61E0();
  uint64_t v8 = sub_E6200();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_771EC(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeControlsView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_707E0((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  return sub_E6D70();
}

void sub_72A70(void **a1)
{
  uint64_t v2 = sub_E63A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10C7C(&qword_123F58);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GCSControllerCustomizeControlsView();
  sub_6E574((uint64_t)v5);
  sub_E6DE0();
  sub_E6390();
  sub_E6DF0();
  sub_77388((uint64_t)v5, &qword_123F58);
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = *(uint64_t *)((char *)a1 + *(int *)(v6 + 28));
    unint64_t v9 = v7;
    char v10 = sub_A4160();
    (*(void (**)(uint64_t, void))((char *)&stru_2E8.size + (swift_isaMask & *v9)))(v8, v10 & 1);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

uint64_t sub_72C64@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0xD000000000000025, (void *)0x80000000000F2660);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_72CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v4 = *(void *)(v3 - 8);
  v3 -= 8;
  uint64_t v5 = (void **)(v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v21[0] = *((unsigned char *)v5 + *(int *)(v3 + 52));
  id v6 = *(void **)((char *)v5 + *(int *)(v3 + 36));
  sub_10C7C(&qword_122A50);
  sub_E6D40();
  sub_B94A8((uint64_t)v6, v22, *((uint64_t *)&v22 + 1), v23, (uint64_t)&v22);
  uint64_t v7 = *v5;
  if (*v5)
  {
    uint64_t v8 = v31;
    long long v18 = v29;
    long long v19 = v30;
    char v9 = v28;
    uint64_t v10 = v27;
    char v11 = v25;
    uint64_t v13 = v23;
    uint64_t v12 = v24;
    long long v16 = v22;
    long long v17 = v26;
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v14 = v7;
    uint64_t result = sub_E6100();
    *(_OWORD *)a1 = v16;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v12;
    *(unsigned char *)(a1 + 32) = v11;
    *(_DWORD *)(a1 + 33) = *(_DWORD *)v21;
    *(_DWORD *)(a1 + 36) = *(_DWORD *)&v21[3];
    *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v17;
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 68) = *(_DWORD *)&v20[3];
    *(_DWORD *)(a1 + 65) = *(_DWORD *)v20;
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 88) = v19;
    *(void *)(a1 + 104) = v8;
    *(void *)(a1 + 112) = result;
    *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = v7;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

unint64_t sub_72EF0()
{
  unint64_t result = qword_123F90;
  if (!qword_123F90)
  {
    sub_11B60(&qword_123F88);
    sub_72F90();
    sub_7746C(&qword_1236D8, &qword_1236E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123F90);
  }
  return result;
}

unint64_t sub_72F90()
{
  unint64_t result = qword_123F98;
  if (!qword_123F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_123F98);
  }
  return result;
}

uint64_t sub_72FE4(void **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    id v3 = [v2 games];
    sub_6EFD4(0, (unint64_t *)&qword_122828);
    unint64_t v4 = sub_E7210();

    __chkstk_darwin(v5);
    v11[2] = a1;
    id v6 = sub_7315C(sub_775D0, v11, v4);
    uint64_t v7 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for GCSControllerCustomizeControlsView() + 48));
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    v11[5] = v9;
    v11[6] = v8;
    v11[4] = v6;
    sub_10C7C(&qword_123F50);
    return sub_E6D30();
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_73144()
{
  return sub_761BC((uint64_t (*)(uint64_t))sub_72FE4);
}

void *sub_7315C(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  long long v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)sub_E74E0();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_E7510();
          sub_E7540();
          unint64_t v4 = v15;
          sub_E7550();
          sub_E7520();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_E7570();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_7330C(unint64_t *a1)
{
  uint64_t v3 = (int *)(type metadata accessor for GCSControllerCustomizeControlsView() - 8);
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80));
  unint64_t v5 = *a1;
  v11[2] = v4;
  swift_bridgeObjectRetain();
  id v6 = sub_7315C(sub_75C28, v11, v5);
  uint64_t v7 = (uint64_t *)(v4 + v3[14]);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  v11[5] = v9;
  v11[6] = v8;
  v11[4] = v6;
  sub_10C7C(&qword_123F50);
  return sub_E6D30();
}

uint64_t sub_733E0(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_123560);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  id v8 = [v7 controllerToProfileMappings];
  uint64_t v9 = sub_E6050();
  uint64_t v10 = sub_E7050();

  id v11 = [*(id *)(a2 + *(int *)(type metadata accessor for GCSControllerCustomizeControlsView() + 28)) persistentIdentifier];
  uint64_t v12 = sub_E7110();
  uint64_t v14 = v13;

  if (*(void *)(v10 + 16) && (unint64_t v15 = sub_21CB8(v12, v14), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void *)(v9 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v6, *(void *)(v10 + 56) + *(void *)(v17 + 72) * v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v9);
  }
  else
  {
    uint64_t v17 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v6, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = 1;
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v9);
  sub_77388((uint64_t)v6, &qword_123560);
  if (v19 == 1)
  {
    id v20 = [v7 bundleIdentifier];
    uint64_t v21 = sub_E7110();
    uint64_t v23 = v22;

    id v24 = [self defaultIdentifier];
    uint64_t v25 = sub_E7110();
    uint64_t v27 = v26;

    if (v21 == v25 && v23 == v27) {
      char v18 = 1;
    }
    else {
      char v18 = sub_E7620();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v18 & 1;
}

uint64_t sub_73708()
{
  type metadata accessor for GCSPreferencesStore();
  sub_77588((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_73780@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_10C7C(&qword_123F10);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_737D8()
{
  return swift_getKeyPath();
}

uint64_t sub_737FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v45 = type metadata accessor for GCSProfileParams();
  uint64_t v16 = __chkstk_darwin(v45);
  char v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v44 - v19;
  *a8 = a1;
  a8[1] = a2;
  uint64_t v21 = (int *)type metadata accessor for GCSControllerCustomizeControlsView();
  sub_772B4(a3, (uint64_t)a8 + v21[5], &qword_123700);
  uint64_t v22 = (char *)a8 + v21[6];
  *(void *)uint64_t v22 = a4;
  v22[8] = a5 & 1;
  *(void *)((char *)a8 + v21[7]) = a6;
  uint64_t v23 = (char *)a8 + v21[8];
  long long v24 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)a7;
  *((_OWORD *)v23 + 1) = v24;
  long long v25 = *(_OWORD *)(a7 + 80);
  *((_OWORD *)v23 + 4) = *(_OWORD *)(a7 + 64);
  *((_OWORD *)v23 + 5) = v25;
  long long v26 = *(_OWORD *)(a7 + 48);
  *((_OWORD *)v23 + 2) = *(_OWORD *)(a7 + 32);
  *((_OWORD *)v23 + 3) = v26;
  *((void *)v23 + 18) = *(void *)(a7 + 144);
  long long v27 = *(_OWORD *)(a7 + 128);
  long long v28 = *(_OWORD *)(a7 + 96);
  *((_OWORD *)v23 + 7) = *(_OWORD *)(a7 + 112);
  *((_OWORD *)v23 + 8) = v27;
  *((_OWORD *)v23 + 6) = v28;
  uint64_t v29 = (void *)((char *)a8 + v21[9]);
  uint64_t v46 = [self defaultGame];
  sub_6EFD4(0, (unint64_t *)&qword_122828);
  sub_E6D10();
  uint64_t v30 = *((void *)&v48 + 1);
  *uint64_t v29 = v48;
  v29[1] = v30;
  uint64_t v31 = (void *)((char *)a8 + v21[10]);
  uint64_t v46 = [self defaultProfile];
  sub_6EFD4(0, (unint64_t *)&qword_124E50);
  sub_E6D10();
  uint64_t v32 = *((void *)&v48 + 1);
  void *v31 = v48;
  v31[1] = v32;
  id v33 = (char *)a8 + v21[11];
  LOBYTE(v46) = 0;
  sub_E6D10();
  uint64_t v34 = *((void *)&v48 + 1);
  *id v33 = v48;
  *((void *)v33 + 1) = v34;
  NSString v35 = (void *)((char *)a8 + v21[12]);
  uint64_t v46 = _swiftEmptyArrayStorage;
  sub_10C7C(&qword_124DC0);
  sub_E6D10();
  uint64_t v36 = *((void *)&v48 + 1);
  *NSString v35 = v48;
  v35[1] = v36;
  sub_DFD34((uint64_t)v20);
  sub_771EC((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  sub_77254((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  Class v37 = (void *)((char *)a8 + v21[14]);
  uint64_t v46 = [objc_allocWithZone((Class)GCSController) initDummy];
  sub_6EFD4(0, (unint64_t *)&qword_124E30);
  sub_E6D10();
  uint64_t v38 = *((void *)&v48 + 1);
  *Class v37 = v48;
  v37[1] = v38;
  id v39 = (char *)a8 + v21[15];
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  sub_10C7C(&qword_123F18);
  sub_E6D10();
  uint64_t v40 = v49;
  *(_OWORD *)id v39 = v48;
  *((void *)v39 + 2) = v40;
  uint64_t v41 = (char *)a8 + v21[16];
  LOBYTE(v46) = 0;
  uint64_t result = sub_E6D10();
  uint64_t v43 = *((void *)&v48 + 1);
  *uint64_t v41 = v48;
  *((void *)v41 + 1) = v43;
  return result;
}

uint64_t sub_73B80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_73B9C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for GCSControllerCustomizeControllersGameRowView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for GCSControllerCustomizeControllersGameRowView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for GCSControllerCustomizeControllersGameRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for GCSControllerCustomizeControllersGameRowView(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerCustomizeControllersGameRowView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerCustomizeControllersGameRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerCustomizeControllersGameRowView()
{
  return &type metadata for GCSControllerCustomizeControllersGameRowView;
}

char *sub_73D60(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    id v9 = &a1[v8];
    uint64_t v10 = (char **)((char *)a2 + v8);
    id v11 = v4;
    sub_10C7C(&qword_123F10);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)id v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)v9 + 1) = v10[1];
      swift_retain();
      swift_retain();
      uint64_t v13 = *(int *)(sub_10C7C(&qword_123F58) + 32);
      uint64_t v14 = &v9[v13];
      unint64_t v15 = (char *)v10 + v13;
      uint64_t v16 = sub_E63A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    char v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_7737C(*(void *)v19, v21);
    *(void *)char v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    long long v24 = *(char **)((char *)a2 + v22);
    *(void *)&v7[v22] = v24;
    long long v25 = &v7[v23];
    uint64_t v26 = (uint64_t)a2 + v23;
    uint64_t v27 = *(void *)(v26 + 8);
    *(void *)long long v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = *(void *)(v26 + 24);
    uint64_t v86 = *(void **)(v26 + 16);
    *((void *)v25 + 2) = v86;
    *((void *)v25 + 3) = v28;
    *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
    uint64_t v29 = *(void *)(v26 + 56);
    *((void *)v25 + 6) = *(void *)(v26 + 48);
    *((void *)v25 + 7) = v29;
    uint64_t v30 = *(void *)(v26 + 72);
    *((void *)v25 + 8) = *(void *)(v26 + 64);
    *((void *)v25 + 9) = v30;
    uint64_t v31 = *(void *)(v26 + 88);
    *((void *)v25 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v26 + 80);
    *((void *)v25 + 11) = v31;
    uint64_t v32 = *(void *)(v26 + 104);
    *((void *)v25 + 12) = *(void *)(v26 + 96);
    *((void *)v25 + 13) = v32;
    uint64_t v95 = *(void *)(v26 + 120);
    *((void *)v25 + 14) = *(void *)(v26 + 112);
    *((void *)v25 + 15) = v95;
    v25[128] = *(unsigned char *)(v26 + 128);
    v25[129] = *(unsigned char *)(v26 + 129);
    uint64_t v91 = *(void **)(v26 + 136);
    uint64_t v94 = *(void *)(v26 + 144);
    *((void *)v25 + 17) = v91;
    *((void *)v25 + 18) = v94;
    uint64_t v33 = a3[9];
    uint64_t v34 = a3[10];
    NSString v35 = &v7[v33];
    uint64_t v36 = (uint64_t)a2 + v33;
    uint64_t v88 = *(void **)v36;
    uint64_t v90 = *(void *)(v36 + 8);
    *(void *)NSString v35 = *(void *)v36;
    *((void *)v35 + 1) = v90;
    Class v37 = &v7[v34];
    uint64_t v38 = (uint64_t)a2 + v34;
    long long v92 = *(void **)v38;
    uint64_t v96 = *(void *)(v38 + 8);
    *(void *)Class v37 = *(void *)v38;
    *((void *)v37 + 1) = v96;
    uint64_t v39 = a3[11];
    uint64_t v40 = a3[12];
    uint64_t v41 = &v7[v39];
    uint64_t v42 = (uint64_t)a2 + v39;
    *uint64_t v41 = *(unsigned char *)v42;
    *((void *)v41 + 1) = *(void *)(v42 + 8);
    uint64_t v43 = &v7[v40];
    uint64_t v44 = (char **)((char *)a2 + v40);
    uint64_t v93 = v44[1];
    *(void *)uint64_t v43 = *v44;
    *((void *)v43 + 1) = v93;
    uint64_t v45 = a3[13];
    uint64_t v46 = &v7[v45];
    uint64_t v47 = (uint64_t)a2 + v45;
    uint64_t v89 = sub_E6050();
    uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
    id v48 = v24;
    swift_retain();
    swift_retain();
    id v49 = v86;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = v91;
    swift_bridgeObjectRetain();
    id v51 = v88;
    swift_retain();
    id v52 = v92;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v87(v46, v47, v89);
    uint64_t v53 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v54 = v53[5];
    uint64_t v55 = &v46[v54];
    uint64_t v56 = (uint64_t *)(v47 + v54);
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    *(void *)uint64_t v55 = v58;
    *((void *)v55 + 1) = v57;
    uint64_t v59 = v53[6];
    uint64_t v60 = &v46[v59];
    uint64_t v61 = (void *)(v47 + v59);
    uint64_t v62 = v61[1];
    *(void *)uint64_t v60 = *v61;
    *((void *)v60 + 1) = v62;
    uint64_t v63 = v53[7];
    uint64_t v64 = &v46[v63];
    uint64_t v65 = (void *)(v47 + v63);
    uint64_t v66 = v65[1];
    *(void *)uint64_t v64 = *v65;
    *((void *)v64 + 1) = v66;
    v46[v53[8]] = *(unsigned char *)(v47 + v53[8]);
    v46[v53[9]] = *(unsigned char *)(v47 + v53[9]);
    uint64_t v67 = v53[10];
    uint64_t v68 = &v46[v67];
    unint64_t v69 = (void *)(v47 + v67);
    uint64_t v70 = v69[1];
    *(void *)uint64_t v68 = *v69;
    *((void *)v68 + 1) = v70;
    *(void *)&v46[v53[11]] = *(void *)(v47 + v53[11]);
    v46[v53[12]] = *(unsigned char *)(v47 + v53[12]);
    *(void *)&v46[v53[13]] = *(void *)(v47 + v53[13]);
    *(void *)&v46[v53[14]] = *(void *)(v47 + v53[14]);
    *(void *)&v46[v53[15]] = *(void *)(v47 + v53[15]);
    v46[v53[16]] = *(unsigned char *)(v47 + v53[16]);
    v46[v53[17]] = *(unsigned char *)(v47 + v53[17]);
    *(void *)&v46[v53[18]] = *(void *)(v47 + v53[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_10C7C(&qword_1235B0);
    *(void *)&v46[*(int *)(v71 + 28)] = *(void *)(v47 + *(int *)(v71 + 28));
    uint64_t v72 = a3[14];
    uint64_t v73 = a3[15];
    uint64_t v74 = &v7[v72];
    uint64_t v75 = (uint64_t)a2 + v72;
    uint64_t v77 = *(void **)v75;
    uint64_t v76 = *(void *)(v75 + 8);
    *(void *)uint64_t v74 = *(void *)v75;
    *((void *)v74 + 1) = v76;
    uint64_t v78 = &v7[v73];
    uint64_t v79 = (char **)((char *)a2 + v73);
    uint64_t v80 = v79[1];
    *(void *)uint64_t v78 = *v79;
    *((void *)v78 + 1) = v80;
    *((void *)v78 + 2) = v79[2];
    uint64_t v81 = a3[16];
    unint64_t v82 = &v7[v81];
    uint64_t v83 = (uint64_t)a2 + v81;
    char *v82 = *(unsigned char *)v83;
    *((void *)v82 + 1) = *(void *)(v83 + 8);
    swift_retain();
    id v84 = v77;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_74264(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  sub_10C7C(&qword_123F10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    id v6 = &v4[*(int *)(sub_10C7C(&qword_123F58) + 32)];
    uint64_t v7 = sub_E63A0();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  sub_773E4(*(uint64_t *)((char *)a1 + a2[6]), *((unsigned char *)a1 + a2[6] + 8));

  uint64_t v8 = (id *)((char *)a1 + a2[8]);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v9 = (char *)a1 + a2[13];
  uint64_t v10 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_74504(void *a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  id v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  id v11 = v6;
  sub_10C7C(&qword_123F10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  void *v9 = *v10;
  if (EnumCaseMultiPayload == 1)
  {
    v9[1] = v10[1];
    swift_retain();
    swift_retain();
    uint64_t v13 = *(int *)(sub_10C7C(&qword_123F58) + 32);
    uint64_t v14 = (char *)v9 + v13;
    unint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = sub_E63A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[6];
  char v18 = (char *)a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_7737C(*(void *)v19, v21);
  *(void *)char v18 = v20;
  v18[8] = v21;
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  long long v24 = *(void **)(a2 + v22);
  *(void *)((char *)a1 + v22) = v24;
  long long v25 = (char *)a1 + v23;
  uint64_t v26 = a2 + v23;
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)long long v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  uint64_t v28 = *(void *)(v26 + 24);
  uint64_t v86 = *(void **)(v26 + 16);
  *((void *)v25 + 2) = v86;
  *((void *)v25 + 3) = v28;
  *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
  uint64_t v29 = *(void *)(v26 + 56);
  *((void *)v25 + 6) = *(void *)(v26 + 48);
  *((void *)v25 + 7) = v29;
  uint64_t v30 = *(void *)(v26 + 72);
  *((void *)v25 + 8) = *(void *)(v26 + 64);
  *((void *)v25 + 9) = v30;
  uint64_t v31 = *(void *)(v26 + 88);
  *((void *)v25 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v26 + 80);
  *((void *)v25 + 11) = v31;
  uint64_t v32 = *(void *)(v26 + 104);
  *((void *)v25 + 12) = *(void *)(v26 + 96);
  *((void *)v25 + 13) = v32;
  uint64_t v95 = *(void *)(v26 + 120);
  *((void *)v25 + 14) = *(void *)(v26 + 112);
  *((void *)v25 + 15) = v95;
  v25[128] = *(unsigned char *)(v26 + 128);
  v25[129] = *(unsigned char *)(v26 + 129);
  uint64_t v91 = *(void **)(v26 + 136);
  uint64_t v94 = *(void *)(v26 + 144);
  *((void *)v25 + 17) = v91;
  *((void *)v25 + 18) = v94;
  uint64_t v33 = a3[9];
  uint64_t v34 = a3[10];
  NSString v35 = (void *)((char *)a1 + v33);
  uint64_t v36 = a2 + v33;
  uint64_t v88 = *(void **)v36;
  uint64_t v90 = *(void *)(v36 + 8);
  *NSString v35 = *(void *)v36;
  v35[1] = v90;
  Class v37 = (void *)((char *)a1 + v34);
  uint64_t v38 = a2 + v34;
  long long v92 = *(void **)v38;
  uint64_t v96 = *(void *)(v38 + 8);
  *Class v37 = *(void *)v38;
  v37[1] = v96;
  uint64_t v39 = a3[11];
  uint64_t v40 = a3[12];
  uint64_t v41 = (char *)a1 + v39;
  uint64_t v42 = (char *)(a2 + v39);
  *uint64_t v41 = *v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  uint64_t v43 = (void *)((char *)a1 + v40);
  uint64_t v44 = (void *)(a2 + v40);
  uint64_t v93 = v44[1];
  void *v43 = *v44;
  v43[1] = v93;
  uint64_t v45 = a3[13];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v89 = sub_E6050();
  uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
  id v48 = v24;
  swift_retain();
  swift_retain();
  id v49 = v86;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v50 = v91;
  swift_bridgeObjectRetain();
  id v51 = v88;
  swift_retain();
  id v52 = v92;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v87(v46, v47, v89);
  uint64_t v53 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v54 = v53[5];
  uint64_t v55 = &v46[v54];
  uint64_t v56 = (uint64_t *)(v47 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *(void *)uint64_t v55 = v58;
  *((void *)v55 + 1) = v57;
  uint64_t v59 = v53[6];
  uint64_t v60 = &v46[v59];
  uint64_t v61 = (void *)(v47 + v59);
  uint64_t v62 = v61[1];
  *(void *)uint64_t v60 = *v61;
  *((void *)v60 + 1) = v62;
  uint64_t v63 = v53[7];
  uint64_t v64 = &v46[v63];
  uint64_t v65 = (void *)(v47 + v63);
  uint64_t v66 = v65[1];
  *(void *)uint64_t v64 = *v65;
  *((void *)v64 + 1) = v66;
  v46[v53[8]] = *(unsigned char *)(v47 + v53[8]);
  v46[v53[9]] = *(unsigned char *)(v47 + v53[9]);
  uint64_t v67 = v53[10];
  uint64_t v68 = &v46[v67];
  unint64_t v69 = (void *)(v47 + v67);
  uint64_t v70 = v69[1];
  *(void *)uint64_t v68 = *v69;
  *((void *)v68 + 1) = v70;
  *(void *)&v46[v53[11]] = *(void *)(v47 + v53[11]);
  v46[v53[12]] = *(unsigned char *)(v47 + v53[12]);
  *(void *)&v46[v53[13]] = *(void *)(v47 + v53[13]);
  *(void *)&v46[v53[14]] = *(void *)(v47 + v53[14]);
  *(void *)&v46[v53[15]] = *(void *)(v47 + v53[15]);
  v46[v53[16]] = *(unsigned char *)(v47 + v53[16]);
  v46[v53[17]] = *(unsigned char *)(v47 + v53[17]);
  *(void *)&v46[v53[18]] = *(void *)(v47 + v53[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_10C7C(&qword_1235B0);
  *(void *)&v46[*(int *)(v71 + 28)] = *(void *)(v47 + *(int *)(v71 + 28));
  uint64_t v72 = a3[14];
  uint64_t v73 = a3[15];
  uint64_t v74 = (void *)((char *)a1 + v72);
  uint64_t v75 = a2 + v72;
  uint64_t v77 = *(void **)v75;
  uint64_t v76 = *(void *)(v75 + 8);
  void *v74 = *(void *)v75;
  v74[1] = v76;
  uint64_t v78 = (void *)((char *)a1 + v73);
  uint64_t v79 = (void *)(a2 + v73);
  uint64_t v80 = v79[1];
  void *v78 = *v79;
  v78[1] = v80;
  v78[2] = v79[2];
  uint64_t v81 = a3[16];
  unint64_t v82 = (char *)a1 + v81;
  uint64_t v83 = (char *)(a2 + v81);
  char *v82 = *v83;
  *((void *)v82 + 1) = *((void *)v83 + 1);
  swift_retain();
  id v84 = v77;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_749BC(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (void *)(a2 + v9);
    sub_77388(a1 + v9, &qword_123F10);
    sub_10C7C(&qword_123F10);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v10 = *v11;
    if (EnumCaseMultiPayload == 1)
    {
      v10[1] = v11[1];
      swift_retain();
      swift_retain();
      uint64_t v13 = *(int *)(sub_10C7C(&qword_123F58) + 32);
      uint64_t v14 = (char *)v10 + v13;
      unint64_t v15 = (char *)v11 + v13;
      uint64_t v16 = sub_E63A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_7737C(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  sub_773E4(v22, v23);
  uint64_t v24 = a3[7];
  long long v25 = *(void **)(a2 + v24);
  uint64_t v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = a3[8];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_retain();
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  swift_retain();
  swift_release();
  uint64_t v31 = *(void **)(v29 + 16);
  uint64_t v32 = *(void **)(v30 + 16);
  *(void *)(v29 + 16) = v32;
  id v33 = v32;

  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v30 + 40);
  *(void *)(v29 + 48) = *(void *)(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 56) = *(void *)(v30 + 56);
  *(void *)(v29 + 64) = *(void *)(v30 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 72) = *(void *)(v30 + 72);
  *(void *)(v29 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v30 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 88) = *(void *)(v30 + 88);
  *(void *)(v29 + 96) = *(void *)(v30 + 96);
  swift_retain();
  swift_release();
  *(void *)(v29 + 104) = *(void *)(v30 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 112) = *(void *)(v30 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v29 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v30 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 128) = *(unsigned char *)(v30 + 128);
  *(unsigned char *)(v29 + 129) = *(unsigned char *)(v30 + 129);
  uint64_t v34 = *(void **)(v29 + 136);
  NSString v35 = *(void **)(v30 + 136);
  *(void *)(v29 + 136) = v35;
  id v36 = v35;

  *(void *)(v29 + 144) = *(void *)(v30 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void **)(a2 + v37);
  uint64_t v41 = *(void **)v38;
  *(void *)uint64_t v38 = v40;
  id v42 = v40;

  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_retain();
  swift_release();
  uint64_t v43 = a3[10];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void **)(a2 + v43);
  uint64_t v47 = *(void **)v44;
  *(void *)uint64_t v44 = v46;
  id v48 = v46;

  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  swift_retain();
  swift_release();
  uint64_t v49 = a3[11];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(unsigned char *)uint64_t v50 = *(unsigned char *)v51;
  *(void *)(v50 + 8) = *(void *)(v51 + 8);
  swift_retain();
  swift_release();
  uint64_t v52 = a3[12];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(void *)(a1 + v52) = *(void *)(a2 + v52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  swift_retain();
  swift_release();
  uint64_t v55 = a3[13];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v60 = v59[5];
  uint64_t v61 = (void *)(v56 + v60);
  uint64_t v62 = (void *)(v57 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v59[6];
  uint64_t v64 = (void *)(v56 + v63);
  uint64_t v65 = (void *)(v57 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v59[7];
  uint64_t v67 = (void *)(v56 + v66);
  uint64_t v68 = (void *)(v57 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v56 + v59[8]) = *(unsigned char *)(v57 + v59[8]);
  *(unsigned char *)(v56 + v59[9]) = *(unsigned char *)(v57 + v59[9]);
  uint64_t v69 = v59[10];
  uint64_t v70 = (void *)(v56 + v69);
  uint64_t v71 = (void *)(v57 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v56 + v59[11]) = *(void *)(v57 + v59[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v56 + v59[12]) = *(unsigned char *)(v57 + v59[12]);
  *(void *)(v56 + v59[13]) = *(void *)(v57 + v59[13]);
  *(void *)(v56 + v59[14]) = *(void *)(v57 + v59[14]);
  *(void *)(v56 + v59[15]) = *(void *)(v57 + v59[15]);
  *(unsigned char *)(v56 + v59[16]) = *(unsigned char *)(v57 + v59[16]);
  *(unsigned char *)(v56 + v59[17]) = *(unsigned char *)(v57 + v59[17]);
  *(void *)(v56 + v59[18]) = *(void *)(v57 + v59[18]);
  uint64_t v72 = sub_10C7C(&qword_1235B0);
  *(void *)(v56 + *(int *)(v72 + 28)) = *(void *)(v57 + *(int *)(v72 + 28));
  swift_retain();
  swift_release();
  uint64_t v73 = a3[14];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  uint64_t v76 = *(void **)(a2 + v73);
  uint64_t v77 = *(void **)v74;
  *(void *)uint64_t v74 = v76;
  id v78 = v76;

  *(void *)(v74 + 8) = *(void *)(v75 + 8);
  swift_retain();
  swift_release();
  uint64_t v79 = a3[15];
  uint64_t v80 = (void *)(a1 + v79);
  uint64_t v81 = a2 + v79;
  *uint64_t v80 = *(void *)(a2 + v79);
  v80[1] = *(void *)(a2 + v79 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80[2] = *(void *)(v81 + 16);
  swift_retain();
  swift_release();
  uint64_t v82 = a3[16];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  *(unsigned char *)uint64_t v83 = *(unsigned char *)v84;
  *(void *)(v83 + 8) = *(void *)(v84 + 8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_74FE8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  id v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = sub_10C7C(&qword_123F10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v8[1];
    void *v7 = *v8;
    v7[1] = v10;
    uint64_t v11 = *(int *)(sub_10C7C(&qword_123F58) + 32);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_E63A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  char v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *((void *)v21 + 18) = *((void *)v22 + 18);
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)char v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  long long v24 = *((_OWORD *)v22 + 5);
  *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
  *((_OWORD *)v21 + 5) = v24;
  long long v25 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v25;
  long long v26 = *((_OWORD *)v22 + 8);
  long long v27 = *((_OWORD *)v22 + 6);
  *((_OWORD *)v21 + 7) = *((_OWORD *)v22 + 7);
  *((_OWORD *)v21 + 8) = v26;
  *((_OWORD *)v21 + 6) = v27;
  *(_OWORD *)((char *)a1 + v2sub_E59A4(2, 18, 1, 0) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v28 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
  uint64_t v29 = a3[13];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  uint64_t v32 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  id v33 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v30[v33[5]] = *(_OWORD *)&v31[v33[5]];
  *(_OWORD *)&v30[v33[6]] = *(_OWORD *)&v31[v33[6]];
  *(_OWORD *)&v30[v33[7]] = *(_OWORD *)&v31[v33[7]];
  v30[v33[8]] = v31[v33[8]];
  v30[v33[9]] = v31[v33[9]];
  *(_OWORD *)&v30[v33[10]] = *(_OWORD *)&v31[v33[10]];
  *(void *)&v30[v33[11]] = *(void *)&v31[v33[11]];
  v30[v33[12]] = v31[v33[12]];
  *(void *)&v30[v33[13]] = *(void *)&v31[v33[13]];
  *(void *)&v30[v33[14]] = *(void *)&v31[v33[14]];
  *(void *)&v30[v33[15]] = *(void *)&v31[v33[15]];
  v30[v33[16]] = v31[v33[16]];
  v30[v33[17]] = v31[v33[17]];
  *(void *)&v30[v33[18]] = *(void *)&v31[v33[18]];
  uint64_t v34 = sub_10C7C(&qword_1235B0);
  *(void *)&v30[*(int *)(v34 + 28)] = *(void *)&v31[*(int *)(v34 + 28)];
  uint64_t v35 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  id v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  *((void *)v36 + 2) = *((void *)v37 + 2);
  *(_OWORD *)id v36 = *(_OWORD *)v37;
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  return a1;
}

void **sub_752B8(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    id v8 = (void **)((char *)a1 + v7);
    uint64_t v9 = (void **)((char *)a2 + v7);
    sub_77388((uint64_t)a1 + v7, &qword_123F10);
    uint64_t v10 = sub_10C7C(&qword_123F10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = v9[1];
      void *v8 = *v9;
      v8[1] = v11;
      uint64_t v12 = *(int *)(sub_10C7C(&qword_123F58) + 32);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_E63A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = v18[8];
  uint64_t v20 = *(void *)v17;
  char v21 = v17[8];
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)v18;
  sub_773E4(v20, v21);
  uint64_t v22 = a3[7];
  long long v23 = *(void **)((char *)a1 + v22);
  *(void **)((char *)a1 + v22) = *(void **)((char *)a2 + v22);

  uint64_t v24 = a3[8];
  long long v25 = (char *)a1 + v24;
  long long v26 = (char *)a2 + v24;
  *(void **)((char *)a1 + v24) = *(void **)((char *)a2 + v24);
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_release();
  long long v27 = (void *)*((void *)v25 + 2);
  *((void *)v25 + 2) = *((void *)v26 + 2);

  *((void *)v25 + 3) = *((void *)v26 + 3);
  swift_bridgeObjectRelease();
  *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  *((void *)v25 + 6) = *((void *)v26 + 6);
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v26 + 8);
  *((void *)v25 + 7) = *((void *)v26 + 7);
  *((void *)v25 + 8) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)v26 + 10);
  *((void *)v25 + 9) = *((void *)v26 + 9);
  *((void *)v25 + 1sub_E59A4(2, 18, 1, 0) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v26 + 12);
  *((void *)v25 + 11) = *((void *)v26 + 11);
  *((void *)v25 + 12) = v30;
  swift_release();
  *((void *)v25 + 13) = *((void *)v26 + 13);
  swift_bridgeObjectRelease();
  *((void *)v25 + 14) = *((void *)v26 + 14);
  swift_bridgeObjectRelease();
  *((void *)v25 + 15) = *((void *)v26 + 15);
  swift_bridgeObjectRelease();
  v25[128] = v26[128];
  v25[129] = v26[129];
  uint64_t v31 = (void *)*((void *)v25 + 17);
  *((void *)v25 + 17) = *((void *)v26 + 17);

  *((void *)v25 + 18) = *((void *)v26 + 18);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[9];
  id v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void **)((char *)a1 + v32);
  *(void **)((char *)a1 + v32) = *(void **)((char *)a2 + v32);

  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_release();
  uint64_t v36 = a3[10];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void **)((char *)a1 + v36);
  *(void **)((char *)a1 + v36) = *(void **)((char *)a2 + v36);

  *((void *)v37 + 1) = *((void *)v38 + 1);
  swift_release();
  uint64_t v40 = a3[11];
  uint64_t v41 = (char *)a1 + v40;
  id v42 = (char *)a2 + v40;
  *uint64_t v41 = *v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  swift_release();
  uint64_t v43 = a3[12];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void **)((char *)a1 + v43) = *(void **)((char *)a2 + v43);
  swift_bridgeObjectRelease();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_release();
  uint64_t v46 = a3[13];
  uint64_t v47 = (char *)a1 + v46;
  id v48 = (char *)a2 + v46;
  uint64_t v49 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
  uint64_t v50 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v51 = v50[5];
  uint64_t v52 = &v47[v51];
  uint64_t v53 = &v48[v51];
  uint64_t v55 = *(void *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v50[6];
  uint64_t v57 = &v47[v56];
  uint64_t v58 = &v48[v56];
  uint64_t v60 = *(void *)v58;
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = v50[7];
  uint64_t v62 = &v47[v61];
  uint64_t v63 = &v48[v61];
  uint64_t v65 = *(void *)v63;
  uint64_t v64 = *((void *)v63 + 1);
  *(void *)uint64_t v62 = v65;
  *((void *)v62 + 1) = v64;
  swift_bridgeObjectRelease();
  v47[v50[8]] = v48[v50[8]];
  v47[v50[9]] = v48[v50[9]];
  uint64_t v66 = v50[10];
  uint64_t v67 = &v47[v66];
  uint64_t v68 = &v48[v66];
  uint64_t v70 = *(void *)v68;
  uint64_t v69 = *((void *)v68 + 1);
  *(void *)uint64_t v67 = v70;
  *((void *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  *(void *)&v47[v50[11]] = *(void *)&v48[v50[11]];
  swift_bridgeObjectRelease();
  v47[v50[12]] = v48[v50[12]];
  *(void *)&v47[v50[13]] = *(void *)&v48[v50[13]];
  *(void *)&v47[v50[14]] = *(void *)&v48[v50[14]];
  *(void *)&v47[v50[15]] = *(void *)&v48[v50[15]];
  v47[v50[16]] = v48[v50[16]];
  v47[v50[17]] = v48[v50[17]];
  *(void *)&v47[v50[18]] = *(void *)&v48[v50[18]];
  uint64_t v71 = sub_10C7C(&qword_1235B0);
  *(void *)&v47[*(int *)(v71 + 28)] = *(void *)&v48[*(int *)(v71 + 28)];
  swift_release();
  uint64_t v72 = a3[14];
  uint64_t v73 = (char *)a1 + v72;
  uint64_t v74 = (char *)a2 + v72;
  uint64_t v75 = *(void **)((char *)a1 + v72);
  *(void **)((char *)a1 + v72) = *(void **)((char *)a2 + v72);

  *((void *)v73 + 1) = *((void *)v74 + 1);
  swift_release();
  uint64_t v76 = a3[15];
  uint64_t v77 = (void **)((char *)a1 + v76);
  id v78 = (char *)a2 + v76;
  uint64_t v79 = *(uint64_t *)((char *)a2 + v76 + 8);
  *uint64_t v77 = *(void **)((char *)a2 + v76);
  v77[1] = v79;
  swift_bridgeObjectRelease();
  v77[2] = *((void *)v78 + 2);
  swift_release();
  uint64_t v80 = a3[16];
  uint64_t v81 = (char *)a1 + v80;
  uint64_t v82 = (char *)a2 + v80;
  char *v81 = *v82;
  *((void *)v81 + 1) = *((void *)v82 + 1);
  swift_release();
  return a1;
}

uint64_t sub_757A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_757B8);
}

uint64_t sub_757B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10C7C(&qword_123700);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_10C7C(&qword_1235B0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[13];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_758F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_75904);
}

uint64_t sub_75904(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_10C7C(&qword_123700);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_10C7C(&qword_1235B0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[13];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_75A3C()
{
  sub_75B54();
  if (v0 <= 0x3F)
  {
    sub_4C330();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_75B54()
{
  if (!qword_124000)
  {
    sub_11B60(&qword_123F58);
    unint64_t v0 = sub_E6260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_124000);
    }
  }
}

uint64_t sub_75BB0()
{
  return sub_7746C(&qword_124060, &qword_124068);
}

uint64_t sub_75BEC()
{
  return sub_7746C(&qword_124070, &qword_124078);
}

uint64_t sub_75C28(void **a1)
{
  return sub_733E0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_75C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_E7110();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_75C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_21CB8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_76930();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_E6050();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_75E44(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_E6050();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_75E44(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_E7470();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_E7670();
        swift_bridgeObjectRetain();
        sub_E7170();
        Swift::Int v9 = sub_E76A0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          _OWORD *v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_E6050() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_76054@<X0>(uint64_t a1@<X8>)
{
  return sub_710FC(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_7605C@<X0>(uint64_t a1@<X8>)
{
  return sub_714DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_76064()
{
  return sub_728A4(*(void *)(v0 + 16));
}

uint64_t sub_760B0()
{
  return sub_728A4(*(void *)(v0 + 16));
}

unint64_t sub_760FC()
{
  unint64_t result = qword_1240D0;
  if (!qword_1240D0)
  {
    sub_11B60(&qword_124080);
    sub_7746C(&qword_122BA0, &qword_122B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1240D0);
  }
  return result;
}

uint64_t sub_761A4()
{
  return sub_761BC((uint64_t (*)(uint64_t))sub_72A70);
}

uint64_t sub_761BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for GCSControllerCustomizeControlsView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_76234()
{
  return sub_E6D30();
}

uint64_t sub_762D4(uint64_t a1)
{
  return sub_762EC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_71AF0);
}

uint64_t sub_762EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for GCSControllerCustomizeControlsView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_76380()
{
  unint64_t result = qword_1240F8;
  if (!qword_1240F8)
  {
    sub_11B60(&qword_1240F0);
    sub_11B60(&qword_1240A8);
    sub_E6380();
    sub_7746C(&qword_1240B0, &qword_1240A8);
    sub_77588(&qword_123118, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1240F8);
  }
  return result;
}

uint64_t sub_764A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GCSControllerCustomizeControlsView() - 8);
  uint64_t v4 = (void **)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_720D0(a1, v4);
}

uint64_t sub_76510()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_76548()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_76574()
{
  uint64_t v1 = (int *)type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  uint64_t v6 = v0 + v3 + v1[5];
  sub_10C7C(&qword_123F10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v8 = v6 + *(int *)(sub_10C7C(&qword_123F58) + 32);
    uint64_t v9 = sub_E63A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v2 | 7;
  sub_773E4(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));

  uint64_t v11 = v5 + v1[8];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v5 + v1[13];
  uint64_t v13 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v10);
}

uint64_t sub_76894()
{
  return sub_E6D30();
}

void *sub_76930()
{
  uint64_t v35 = sub_E6050();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10C7C(&qword_123588);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_E7580();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    long long v27 = v30;
LABEL_25:
    uint64_t *v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  unint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    unint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    uint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *uint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    long long v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_76C00()
{
  unint64_t result = qword_124108;
  if (!qword_124108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124108);
  }
  return result;
}

uint64_t sub_76C58()
{
  uint64_t v1 = (int *)type metadata accessor for GCSControllerCustomizeControlsView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  uint64_t v6 = v0 + v3 + v1[5];
  sub_10C7C(&qword_123F10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v8 = v6 + *(int *)(sub_10C7C(&qword_123F58) + 32);
    uint64_t v9 = sub_E63A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  unint64_t v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v2 | 7;
  sub_773E4(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));

  uint64_t v12 = v5 + v1[8];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = v5 + v1[13];
  uint64_t v14 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v10 + 8, v11);
}

uint64_t sub_76F90()
{
  uint64_t v1 = type metadata accessor for GCSControllerCustomizeControlsView() - 8;
  uint64_t v5 = *(void **)(v0
                + ((*(void *)(*(void *)v1 + 64)
                  + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  id v2 = v5;
  sub_10C7C(&qword_124110);
  sub_E6D30();
  sub_6F0E0();
  id v3 = objc_msgSend(v2, "bundleIdentifier", v5);
  sub_E7110();

  sub_10C7C(&qword_124118);
  return sub_E6D30();
}

id sub_770D8@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(v1 + 16);
  id v5 = *(id *)(v1 + 24);
  *a1 = v2;
  a1[1] = v5;
  id v3 = v2;

  return v5;
}

unint64_t sub_77118()
{
  unint64_t result = qword_124138;
  if (!qword_124138)
  {
    sub_11B60(&qword_124128);
    sub_77588(&qword_124140, (void (*)(uint64_t))type metadata accessor for GCSControllerCustomizeGameView);
    sub_7746C(&qword_1236D8, &qword_1236E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124138);
  }
  return result;
}

uint64_t sub_771EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_77254(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_772B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_77318(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_7737C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_77388(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_773E4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_773F0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7746C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_774B0()
{
  return sub_77588(&qword_123568, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_774F8()
{
  return sub_77588((unint64_t *)&unk_1250A0, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_77540()
{
  return sub_77588(&qword_123570, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_77588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_775D0(void **a1)
{
  return sub_75C28(a1) & 1;
}

uint64_t sub_775F8()
{
  return 1;
}

Swift::Int sub_77600()
{
  return sub_E76A0();
}

void sub_77644()
{
}

Swift::Int sub_7766C()
{
  return sub_E76A0();
}

const char *sub_776AC()
{
  return "GameController";
}

const char *sub_776C0()
{
  return "synthetic_game_controllers";
}

id sub_776D4(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_77754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

void *sub_777E4@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_E6560();
  sub_7787C(a1, a2, (uint64_t)__src);
  memcpy(&v9[7], __src, 0x109uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return memcpy((void *)(a3 + 17), v9, 0x110uLL);
}

void sub_7787C(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  id v5 = a2;
  uint64_t v6 = sub_61950();
  uint64_t v7 = nullsub_44(v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v88 = sub_E65E0();
  id v12 = [v5 localizedName];
  uint64_t v13 = sub_E7110();
  uint64_t v15 = v14;

  *(void *)&long long v107 = v13;
  *((void *)&v107 + 1) = v15;
  sub_187B0();
  uint64_t v16 = sub_E6920();
  uint64_t v86 = v17;
  uint64_t v87 = v16;
  uint64_t v85 = v18;
  char v84 = v19;
  if (a1)
  {
    uint64_t v89 = (void *)v7;
    uint64_t v90 = v11;
    uint64_t v20 = *(uint64_t (**)(id))&stru_248.segname[(swift_isaMask & *a1) - 8];
    unint64_t v21 = a1;
    LOBYTE(v2sub_E59A4(2, 18, 1, 0) = v20(v5);

    if (v20)
    {
      uint64_t v78 = sub_E6550();
      uint64_t v80 = sub_E6B90();
      sub_E6F30();
      sub_E62A0();
      char v82 = BYTE8(v103);
      uint64_t v73 = v103;
      uint64_t v74 = v104;
      char v79 = BYTE8(v104);
      uint64_t v76 = *((void *)&v105 + 1);
      uint64_t v77 = v105;
      *(void *)&long long v107 = sub_B7108(0xD000000000000013, (void *)0x80000000000F1B80);
      *((void *)&v107 + 1) = v22;
      uint64_t v23 = sub_E6920();
      uint64_t v25 = v24;
      char v27 = v26 & 1;
      sub_E6850();
      uint64_t v28 = sub_E6900();
      uint64_t v68 = v29;
      uint64_t v69 = v28;
      char v31 = v30;
      *(void *)&long long v70 = v32;
      swift_release();
      char v33 = v31 & 1;
      sub_18814(v23, v25, v27);
      swift_bridgeObjectRelease();
      id v34 = v5;
      uint64_t v35 = sub_33580();
      uint64_t v37 = v36;
      uint64_t v38 = sub_335F8();
      sub_33614(v35, v37, (uint64_t)v38, v39, (uint64_t)v34, (uint64_t)&v107);
      uint64_t v72 = *((void *)&v107 + 1);
      uint64_t v40 = (void *)v107;
      *((void *)&v70 + 1) = v107;
      long long v41 = v108;
      id v42 = (void *)*((void *)&v109 + 1);
      LOBYTE(v118) = BYTE8(v103);
      char v135 = BYTE8(v104);
      char v134 = v33;
      char v132 = v109 & 1;
      int v115 = *(_DWORD *)v130;
      __int16 v116 = *(_WORD *)&v130[4];
      *(_DWORD *)uint64_t v117 = v120;
      *(_DWORD *)&v117[3] = *(_DWORD *)((char *)&v120 + 3);
      v114[0] = *(_DWORD *)v91;
      *(_DWORD *)((char *)v114 + 3) = *(_DWORD *)&v91[3];
      v113[0] = v133[0];
      *(_DWORD *)((char *)v113 + 3) = *(_DWORD *)((char *)v133 + 3);
      char v71 = v109 & 1;
      v112[0] = v131[0];
      *(_DWORD *)((char *)v112 + 3) = *(_DWORD *)((char *)v131 + 3);
      swift_retain();
      sub_18804(v69, v68, v33);
      id v43 = v40;
      swift_bridgeObjectRetain();
      sub_33578();
      id v44 = v42;

      sub_333C4();
      sub_18814(v69, v68, v33);
      swift_release();
      swift_bridgeObjectRelease();
      int v118 = v115;
      __int16 v119 = v116;
      LODWORD(v92) = *(_DWORD *)v117;
      *(_DWORD *)((char *)&v92 + 3) = *(_DWORD *)&v117[3];
      *(_DWORD *)((char *)v133 + 3) = *(_DWORD *)((char *)v114 + 3);
      v133[0] = v114[0];
      *(_DWORD *)((char *)v131 + 3) = *(_DWORD *)((char *)v113 + 3);
      v131[0] = v113[0];
      *(_DWORD *)&v130[3] = *(_DWORD *)((char *)v112 + 3);
      *(_DWORD *)char v130 = v112[0];
      LOBYTE(v114[0]) = 0;
      int v45 = sub_E6720();
      *(void *)&long long v103 = v78;
      *((void *)&v103 + 1) = 0x4014000000000000;
      LOBYTE(v104) = 0;
      *(_DWORD *)((char *)&v104 + 1) = *(_DWORD *)v117;
      DWORD1(v104) = *(_DWORD *)&v117[3];
      *((void *)&v104 + 1) = v80;
      LOWORD(v105) = 256;
      *(_DWORD *)((char *)&v105 + 2) = v118;
      WORD3(v105) = v119;
      *((void *)&v105 + 1) = v73;
      v106[0] = v82;
      *(_DWORD *)&v106[4] = *(_DWORD *)((char *)&v92 + 3);
      *(_DWORD *)&v106[1] = v92;
      *(void *)&v106[8] = v74;
      v106[16] = v79;
      *(_DWORD *)&v106[20] = *(_DWORD *)((char *)v133 + 3);
      *(_DWORD *)&v106[17] = v133[0];
      *(void *)&v106[24] = v77;
      *(void *)&v106[32] = v76;
      *(void *)&v106[40] = v69;
      *(void *)&v106[48] = v68;
      v106[56] = v33;
      *(_DWORD *)&v106[60] = *(_DWORD *)((char *)v131 + 3);
      *(_DWORD *)&v106[57] = v131[0];
      *(_OWORD *)&v106[64] = v70;
      *(void *)&v106[80] = v72;
      *(_OWORD *)&v106[88] = v41;
      v106[104] = v71;
      *(_DWORD *)&v106[105] = *(_DWORD *)v130;
      *(_DWORD *)&v106[108] = *(_DWORD *)&v130[3];
      *(void *)&v106[112] = v44;
      *(_DWORD *)&v106[120] = v45;
      sub_7EFF8((uint64_t)&v103);
    }
    else
    {
      uint64_t v81 = sub_E6550();
      uint64_t v75 = sub_E6B00();
      sub_E6F30();
      sub_E62A0();
      sub_B7108(0xD000000000000016, (void *)0x80000000000F1BA0);
      uint64_t v46 = sub_E6920();
      uint64_t v48 = v47;
      char v50 = v49 & 1;
      sub_E6850();
      uint64_t v51 = sub_E6900();
      uint64_t v53 = v52;
      char v55 = v54;
      uint64_t v83 = v56;
      swift_release();
      sub_18814(v46, v48, v50);
      swift_bridgeObjectRelease();
      LOBYTE(v12sub_E59A4(2, 18, 1, 0) = 1;
      v91[0] = BYTE8(v107);
      LOBYTE(v133[0]) = BYTE8(v108);
      LOBYTE(v131[0]) = v55 & 1;
      swift_retain();
      sub_18804(v51, v53, v55 & 1);
      swift_bridgeObjectRetain();
      sub_18814(v51, v53, v55 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      LOBYTE(v114[0]) = 0;
      LOBYTE(v113[0]) = BYTE8(v107);
      LOBYTE(v112[0]) = BYTE8(v108);
      LOBYTE(v118) = v55 & 1;
      *(void *)&long long v103 = v81;
      *((void *)&v103 + 1) = 0x4014000000000000;
      LOBYTE(v104) = 0;
      *(_DWORD *)((char *)&v104 + 1) = *(_DWORD *)v91;
      DWORD1(v104) = *(_DWORD *)&v91[3];
      *((void *)&v104 + 1) = v75;
      LOWORD(v105) = 256;
      WORD3(v105) = *(_WORD *)&v117[4];
      *(_DWORD *)((char *)&v105 + 2) = *(_DWORD *)v117;
      *((void *)&v105 + 1) = v107;
      v106[0] = BYTE8(v107);
      *(_DWORD *)&v106[4] = *(_DWORD *)((char *)v133 + 3);
      *(_DWORD *)&v106[1] = v133[0];
      *(void *)&v106[8] = v108;
      v106[16] = BYTE8(v108);
      *(_DWORD *)&v106[20] = *(_DWORD *)((char *)v131 + 3);
      *(_DWORD *)&v106[17] = v131[0];
      *(_OWORD *)&v106[24] = v109;
      *(void *)&v106[40] = v51;
      *(void *)&v106[48] = v53;
      v106[56] = v55 & 1;
      *(_DWORD *)&v106[60] = *(_DWORD *)&v130[3];
      *(_DWORD *)&v106[57] = *(_DWORD *)v130;
      *(void *)&v106[64] = v83;
      *(_DWORD *)&v106[72] = sub_E6720();
      sub_7EE08((uint64_t)&v103);
    }
    sub_7EE14((uint64_t)&v103, (uint64_t)&v120, &qword_124368);
    sub_10C7C(&qword_123728);
    sub_10C7C(&qword_123450);
    sub_7EE78(&qword_123720, &qword_123728, &qword_123730, &qword_123738);
    sub_7EE78((unint64_t *)&qword_123460, &qword_123450, &qword_123468, &qword_123470);
    sub_E6610();
    *(_OWORD *)&v106[80] = *(_OWORD *)&v110[10];
    *(_OWORD *)&v106[96] = *(_OWORD *)&v110[12];
    *(_OWORD *)&v106[109] = *(_OWORD *)((char *)&v110[13] + 5);
    *(_OWORD *)&v106[16] = *(_OWORD *)&v110[2];
    *(_OWORD *)&v106[32] = *(_OWORD *)&v110[4];
    *(_OWORD *)&v106[48] = *(_OWORD *)&v110[6];
    *(_OWORD *)&v106[64] = *(_OWORD *)&v110[8];
    long long v103 = v107;
    long long v104 = v108;
    long long v105 = v109;
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v110;
    long long v128 = *(_OWORD *)&v110[10];
    v129[0] = *(_OWORD *)&v110[12];
    *(_OWORD *)((char *)v129 + 13) = *(_OWORD *)((char *)&v110[13] + 5);
    long long v124 = *(_OWORD *)&v110[2];
    long long v125 = *(_OWORD *)&v110[4];
    long long v126 = *(_OWORD *)&v110[6];
    long long v127 = *(_OWORD *)&v110[8];
    long long v120 = v107;
    long long v121 = v108;
    long long v122 = v109;
    long long v123 = *(_OWORD *)v110;
    long long v101 = *(_OWORD *)&v110[10];
    *(_OWORD *)long long v102 = *(_OWORD *)&v110[12];
    *(_OWORD *)&v102[13] = *(_OWORD *)((char *)&v110[13] + 5);
    long long v97 = *(_OWORD *)&v110[2];
    long long v98 = *(_OWORD *)&v110[4];
    long long v99 = *(_OWORD *)&v110[6];
    long long v100 = *(_OWORD *)&v110[8];
    long long v93 = v107;
    long long v94 = v108;
    LOBYTE(v133[0]) = v84 & 1;
    long long v95 = v109;
    long long v96 = *(_OWORD *)v110;
    sub_18804(v87, v85, v84 & 1);
    swift_bridgeObjectRetain();
    sub_7EF7C((uint64_t)&v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_7EB18);
    sub_7EF7C((uint64_t)&v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_7ED14);
    sub_18814(v87, v85, v84 & 1);
    swift_bridgeObjectRelease();
    v133[0] = v107;
    *(_DWORD *)((char *)v133 + 3) = *(_DWORD *)((char *)&v107 + 3);
    long long v128 = v101;
    v129[0] = *(_OWORD *)v102;
    *(_OWORD *)((char *)v129 + 13) = *(_OWORD *)&v102[13];
    long long v124 = v97;
    long long v125 = v98;
    long long v126 = v99;
    long long v127 = v100;
    long long v120 = v93;
    long long v121 = v94;
    long long v122 = v95;
    long long v123 = v96;
    *(_DWORD *)((char *)&v104 + 1) = v93;
    *((void *)&v104 + 1) = v87;
    *(void *)&long long v105 = v85;
    BYTE8(v105) = v84 & 1;
    int v57 = v133[0];
    *(_DWORD *)((char *)&v105 + 9) = v133[0];
    HIDWORD(v105) = *(_DWORD *)((char *)&v107 + 3);
    *(void *)uint64_t v106 = v86;
    *(_OWORD *)&v106[72] = v97;
    *(_OWORD *)&v106[56] = v96;
    *(_OWORD *)&v106[120] = v100;
    *(_OWORD *)&v106[136] = v101;
    long long v58 = v129[0];
    *(_OWORD *)&v106[152] = v129[0];
    *(_OWORD *)&v106[165] = *(_OWORD *)&v102[13];
    *(_OWORD *)&v106[88] = v98;
    *(_OWORD *)&v106[104] = v99;
    *(_OWORD *)&v106[8] = v93;
    *(_OWORD *)&v106[24] = v94;
    *(_OWORD *)&v106[40] = v95;
    long long v59 = *(_OWORD *)&v106[112];
    *(_OWORD *)(a3 + 20sub_E59A4(2, 18, 1, 0) = *(_OWORD *)&v106[128];
    long long v60 = *(_OWORD *)&v106[160];
    *(_OWORD *)(a3 + 216) = *(_OWORD *)&v106[144];
    *(_OWORD *)(a3 + 232) = v60;
    long long v61 = *(_OWORD *)&v106[48];
    *(_OWORD *)(a3 + 136) = *(_OWORD *)&v106[64];
    long long v62 = *(_OWORD *)&v106[96];
    *(_OWORD *)(a3 + 152) = *(_OWORD *)&v106[80];
    *(_OWORD *)(a3 + 168) = v62;
    *(_OWORD *)(a3 + 184) = v59;
    long long v63 = v105;
    *(_OWORD *)(a3 + 72) = *(_OWORD *)v106;
    long long v64 = *(_OWORD *)&v106[32];
    *(_OWORD *)(a3 + 88) = *(_OWORD *)&v106[16];
    DWORD1(v104) = *(_DWORD *)((char *)&v93 + 3);
    *(void *)&long long v103 = v88;
    *((void *)&v103 + 1) = 0x4010000000000000;
    LOBYTE(v104) = 0;
    *(_OWORD *)(a3 + 104) = v64;
    *(_OWORD *)(a3 + 12sub_E59A4(2, 18, 1, 0) = v61;
    long long v65 = v104;
    *(_OWORD *)(a3 + 24) = v103;
    *(_OWORD *)(a3 + 4sub_E59A4(2, 18, 1, 0) = v65;
    *(_OWORD *)(a3 + 56) = v63;
    *(_OWORD *)&v110[1] = v93;
    *(_OWORD *)&v110[3] = v94;
    *(_OWORD *)&v110[13] = v99;
    *(_OWORD *)&v110[11] = v98;
    *(_OWORD *)&v110[9] = v97;
    *(_OWORD *)&v110[7] = v96;
    *(_OWORD *)((char *)v111 + 13) = *(_OWORD *)((char *)v129 + 13);
    v111[0] = v58;
    *(_OWORD *)&v110[17] = v101;
    *(_OWORD *)&v110[15] = v100;
    *(void *)(a3 + 245) = *(void *)&v106[173];
    *(_WORD *)(a3 + 253) = v131[0];
    *(unsigned char *)(a3 + 255) = BYTE2(v131[0]);
    v117[0] = 0;
    *(void *)a3 = v89;
    *(void *)(a3 + 8) = v9;
    v130[0] = 1;
    *(void *)(a3 + 16) = v90;
    *(void *)(a3 + 256) = 0;
    *(unsigned char *)(a3 + 264) = 1;
    *(void *)&long long v107 = v88;
    *((void *)&v107 + 1) = 0x4010000000000000;
    LOBYTE(v108) = 0;
    *(_DWORD *)((char *)&v108 + 1) = v93;
    DWORD1(v108) = *(_DWORD *)((char *)&v93 + 3);
    *((void *)&v108 + 1) = v87;
    *(void *)&long long v109 = v85;
    BYTE8(v109) = v84 & 1;
    HIDWORD(v109) = *(_DWORD *)((char *)v133 + 3);
    *(_DWORD *)((char *)&v109 + 9) = v57;
    v110[0] = v86;
    *(_OWORD *)&v110[5] = v95;
    id v66 = v89;
    id v67 = v90;
    sub_7EA14((uint64_t)&v103);
    sub_7EC10((uint64_t)&v107);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    sub_E63E0();
    __break(1u);
  }
}

void *sub_783CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = sub_E6560();
  sub_7787C(v3, v4, (uint64_t)__src);
  memcpy(&v8[7], __src, 0x109uLL);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return memcpy((void *)(a1 + 17), v8, 0x110uLL);
}

id sub_78460(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_784E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  uint64_t v5 = sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

double sub_78574@<D0>(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_E6560();
  sub_78698(a1, a2, (uint64_t)v13);
  *(_OWORD *)&v15[119] = v13[7];
  *(_OWORD *)&v15[103] = v13[6];
  *(_OWORD *)&v15[55] = v13[3];
  *(_OWORD *)&v15[39] = v13[2];
  *(_OWORD *)&v15[135] = v14[0];
  *(_OWORD *)&unsigned char v15[144] = *(_OWORD *)((char *)v14 + 9);
  *(_OWORD *)&v15[71] = v13[4];
  *(_OWORD *)&v15[87] = v13[5];
  *(_OWORD *)&v15[7] = v13[0];
  *(_OWORD *)&v15[23] = v13[1];
  long long v7 = *(_OWORD *)&v15[112];
  *(_OWORD *)(a3 + 113) = *(_OWORD *)&v15[96];
  *(_OWORD *)(a3 + 129) = v7;
  long long v8 = *(_OWORD *)&v15[144];
  *(_OWORD *)(a3 + 145) = *(_OWORD *)&v15[128];
  *(_OWORD *)(a3 + 161) = v8;
  long long v9 = *(_OWORD *)&v15[48];
  *(_OWORD *)(a3 + 49) = *(_OWORD *)&v15[32];
  *(_OWORD *)(a3 + 65) = v9;
  long long v10 = *(_OWORD *)&v15[80];
  *(_OWORD *)(a3 + 81) = *(_OWORD *)&v15[64];
  *(_OWORD *)(a3 + 97) = v10;
  double result = *(double *)v15;
  long long v12 = *(_OWORD *)&v15[16];
  *(_OWORD *)(a3 + 17) = *(_OWORD *)v15;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(_OWORD *)(a3 + 33) = v12;
  return result;
}

uint64_t sub_78698@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = nullsub_5(v5, v6, 30.0);
  char v49 = v8;
  char v50 = (void *)v7;
  uint64_t v10 = v9;
  sub_E6FB0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v48 = sub_E65E0();
  id v15 = [v5 localizedName];
  sub_E7110();

  sub_187B0();
  uint64_t v16 = sub_E6920();
  uint64_t v45 = v17;
  uint64_t v46 = v16;
  uint64_t v47 = v18;
  char v44 = v19 & 1;
  sub_10C7C(&qword_122298);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_EBBE0;
  id v21 = [v6 localizedName];
  uint64_t v22 = sub_E7110();
  uint64_t v24 = v23;

  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_17068();
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 4sub_E59A4(2, 18, 1, 0) = v24;
  HIDWORD(v22) = HIDWORD(String.localized(with:)((Swift::OpaquePointer)v20)._countAndFlagsBits);
  swift_bridgeObjectRelease();
  DWORD1(v53) = HIDWORD(v22);
  uint64_t v25 = sub_E6920();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_E6850();
  uint64_t v30 = sub_E6900();
  uint64_t v32 = v31;
  char v34 = v33;
  swift_release();
  sub_18814(v25, v27, v29);
  swift_bridgeObjectRelease();
  LODWORD(v53) = sub_E6720();
  uint64_t v35 = sub_E68F0();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  LOBYTE(v25) = v40 & 1;
  sub_18814(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v53) = v44;
  v52[0] = v44;
  v51[0] = v25;
  sub_18804(v46, v45, v44);
  swift_bridgeObjectRetain();
  sub_18804(v35, v37, v25);
  swift_bridgeObjectRetain();
  sub_18814(v35, v37, v25);
  swift_bridgeObjectRelease();
  sub_18814(v46, v45, v44);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a3 + 73) = v53;
  *(_DWORD *)(a3 + 76) = *(_DWORD *)((char *)&v53 + 3);
  *(_DWORD *)(a3 + 97) = *(_DWORD *)v52;
  *(_DWORD *)(a3 + 10sub_E59A4(2, 18, 1, 0) = *(_DWORD *)&v52[3];
  *(_DWORD *)(a3 + 129) = *(_DWORD *)v51;
  *(_DWORD *)(a3 + 132) = *(_DWORD *)&v51[3];
  *(void *)(a3 + 16) = v10;
  *(void *)a3 = v50;
  *(void *)(a3 + 8) = v49;
  *(int64x2_t *)(a3 + 24) = vdupq_n_s64(0x3FF3333333333333uLL);
  *(void *)(a3 + 4sub_E59A4(2, 18, 1, 0) = v12;
  *(void *)(a3 + 48) = v14;
  *(void *)(a3 + 56) = v48;
  *(void *)(a3 + 64) = 0x4010000000000000;
  *(unsigned char *)(a3 + 72) = 0;
  *(void *)(a3 + 8sub_E59A4(2, 18, 1, 0) = v46;
  *(void *)(a3 + 88) = v45;
  *(unsigned char *)(a3 + 96) = v44;
  *(void *)(a3 + 104) = v47;
  *(void *)(a3 + 112) = v35;
  *(void *)(a3 + 12sub_E59A4(2, 18, 1, 0) = v37;
  *(unsigned char *)(a3 + 128) = v25;
  *(void *)(a3 + 136) = v39;
  *(void *)(a3 + 144) = 0;
  *(unsigned char *)(a3 + 152) = 1;
  id v41 = v50;
  id v42 = v49;
  sub_18804(v46, v45, v44);
  swift_bridgeObjectRetain();
  sub_18804(v35, v37, v25);
  swift_bridgeObjectRetain();
  sub_18814(v46, v45, v44);
  swift_bridgeObjectRelease();
  sub_18814(v35, v37, v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_78A8C()
{
  return sub_E69D0();
}

double sub_78AA8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v5 = sub_E6560();
  sub_78698(v4, v3, (uint64_t)v12);
  *(_OWORD *)&v14[119] = v12[7];
  *(_OWORD *)&v14[103] = v12[6];
  *(_OWORD *)&v14[55] = v12[3];
  *(_OWORD *)&v14[39] = v12[2];
  *(_OWORD *)&v14[135] = v13[0];
  *(_OWORD *)&v14[144] = *(_OWORD *)((char *)v13 + 9);
  *(_OWORD *)&v14[71] = v12[4];
  *(_OWORD *)&v14[87] = v12[5];
  *(_OWORD *)&v14[7] = v12[0];
  *(_OWORD *)&v14[23] = v12[1];
  long long v6 = *(_OWORD *)&v14[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v14[96];
  *(_OWORD *)(a1 + 129) = v6;
  long long v7 = *(_OWORD *)&v14[144];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v14[128];
  *(_OWORD *)(a1 + 161) = v7;
  long long v8 = *(_OWORD *)&v14[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v14[32];
  *(_OWORD *)(a1 + 65) = v8;
  long long v9 = *(_OWORD *)&v14[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v14[64];
  *(_OWORD *)(a1 + 97) = v9;
  double result = *(double *)v14;
  long long v11 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v14;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 33) = v11;
  return result;
}

id sub_78BC8()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_78C58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

id sub_78CE0()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_78CE8()
{
  sub_10C7C(&qword_124150);
  sub_E6DE0();
  return v1;
}

uint64_t sub_78D38()
{
  return sub_E6DF0();
}

uint64_t (*sub_78D88(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  v3[5] = v4;
  v3[6] = v5;
  long long v6 = (void *)v1[5];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = sub_10C7C(&qword_124150);
  sub_E6DE0();
  return sub_78E2C;
}

uint64_t sub_78E30()
{
  sub_10C7C(&qword_124150);
  sub_E6E10();
  return v1;
}

id sub_78E84()
{
  return *(id *)(v0 + 48);
}

uint64_t sub_78E8C()
{
  sub_10C7C(&qword_124158);
  sub_E6DE0();
  return v1;
}

uint64_t sub_78EDC()
{
  return sub_E6DF0();
}

uint64_t (*sub_78F2C(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  v3[5] = v4;
  v3[6] = v5;
  long long v6 = (void *)v1[9];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = sub_10C7C(&qword_124158);
  sub_E6DE0();
  return sub_78FD0;
}

void sub_78FD4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)uint64_t v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_7908C()
{
  sub_10C7C(&qword_124158);
  sub_E6E10();
  return v1;
}

__n128 sub_790E0@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_79184()
{
  return sub_E6DF0();
}

void (*sub_7921C(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  long long v5 = *(_OWORD *)(v1 + 176);
  long long v4 = *(_OWORD *)(v1 + 192);
  long long v6 = *(_OWORD *)(v1 + 160);
  v3[6] = v5;
  v3[7] = v4;
  long long v7 = *(_OWORD *)(v1 + 192);
  v3[8] = *(_OWORD *)(v1 + 208);
  long long v9 = *(_OWORD *)(v1 + 112);
  long long v8 = *(_OWORD *)(v1 + 128);
  long long v10 = *(_OWORD *)(v1 + 96);
  v3[2] = v9;
  v3[3] = v8;
  long long v11 = *(_OWORD *)(v1 + 128);
  long long v13 = *(_OWORD *)(v1 + 144);
  long long v12 = *(_OWORD *)(v1 + 160);
  v3[4] = v13;
  v3[5] = v12;
  long long v14 = *(_OWORD *)(v1 + 96);
  long long v15 = *(_OWORD *)(v1 + 80);
  *long long v3 = v15;
  v3[1] = v14;
  *(_OWORD *)((char *)v3 + 248) = v5;
  long long v16 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)((char *)v3 + 264) = v7;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v16;
  *(_OWORD *)((char *)v3 + 184) = v9;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v11;
  *(_OWORD *)((char *)v3 + 216) = v13;
  *(_OWORD *)((char *)v3 + 232) = v6;
  *(_OWORD *)((char *)v3 + 152) = v15;
  *a1 = v3;
  *((void *)v3 + 18) = *(void *)(v1 + 224);
  *((void *)v3 + 37) = *(void *)(v1 + 224);
  *(_OWORD *)((char *)v3 + 168) = v10;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_7930C;
}

void sub_7930C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_794A4@<D0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_79550()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_79558(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2);
  sub_7DF4C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  return sub_7E9A4(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

uint64_t sub_79624()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_79660()
{
  return 0;
}

uint64_t sub_7966C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = type metadata accessor for GCSControllerSheetDetailView();
  uint64_t v48 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v49 = v3;
  uint64_t v50 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_E66C0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  long long v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_124160);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  long long v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10C7C(&qword_124168);
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10C7C(&qword_124170);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [*(id *)(v1 + 16) bundleIdentifier];
  uint64_t v14 = sub_E7110();
  uint64_t v16 = v15;

  id v17 = [self defaultIdentifier];
  uint64_t v18 = sub_E7110();
  uint64_t v20 = v19;

  if (v14 == v18 && v16 == v20) {
    char v21 = 1;
  }
  else {
    char v21 = sub_E7620();
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRelease();
  __chkstk_darwin(v22);
  *((unsigned char *)&v38 - 16) = v21 & 1;
  *(&v38 - 1) = v1;
  sub_10C7C(&qword_124178);
  sub_7EF38(&qword_124180, &qword_124178);
  sub_E6890();
  sub_E66B0();
  sub_7EF38(&qword_124188, &qword_124160);
  sub_7A77C(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
  long long v23 = v11;
  uint64_t v24 = v41;
  uint64_t v25 = v44;
  sub_E6A90();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v24);
  uint64_t v52 = *(void *)(v1 + 24);
  long long v26 = *(_OWORD *)(v1 + 32);
  uint64_t v39 = v1;
  long long v53 = v26;
  sub_10C7C(&qword_124150);
  sub_E6DE0();
  uint64_t v44 = v54;
  uint64_t v27 = v50;
  sub_7DF4C(v1, v50, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
  unint64_t v28 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v29 = swift_allocObject();
  sub_7BA90(v27, v29 + v28);
  uint64_t v30 = v45;
  uint64_t v31 = (uint64_t)v46;
  uint64_t v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v46, v23, v47);
  long long v33 = (uint64_t *)(v31 + *(int *)(v42 + 36));
  *long long v33 = v44;
  v33[1] = (uint64_t)sub_7BAF4;
  v33[2] = v29;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v32);
  sub_7DF4C(v39, v27, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
  uint64_t v34 = swift_allocObject();
  sub_7BA90(v27, v34 + v28);
  uint64_t v35 = v51;
  sub_7E434(v31, v51, &qword_124170);
  uint64_t v36 = (uint64_t (**)())(v35 + *(int *)(sub_10C7C(&qword_124190) + 36));
  *uint64_t v36 = sub_7C038;
  v36[1] = (uint64_t (*)())v34;
  v36[2] = 0;
  v36[3] = 0;
  return sub_7E4EC(v31, &qword_124170);
}

uint64_t type metadata accessor for GCSControllerSheetDetailView()
{
  uint64_t result = qword_128A80;
  if (!qword_128A80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_79CD0@<X0>(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  long long v107 = a3;
  uint64_t v5 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GCSProfileContentView();
  __chkstk_darwin(v8 - 8);
  uint64_t v100 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10C7C(&qword_124278) - 8;
  uint64_t v10 = __chkstk_darwin(v104);
  uint64_t v101 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v82 - v12;
  uint64_t v106 = sub_10C7C(&qword_124280);
  uint64_t v103 = *(void *)(v106 - 8);
  uint64_t v13 = __chkstk_darwin(v106);
  long long v102 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v99 = (char *)&v82 - v15;
  char v108 = a1;
  uint64_t v109 = a2;
  sub_10C7C(&qword_124288);
  sub_7EF38(&qword_124290, &qword_124288);
  sub_E6EE0();
  long long v16 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v16;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v17 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v17;
  long long v18 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v18;
  long long v19 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v19;
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v152[6];
  long long v173 = v152[7];
  long long v174 = v152[8];
  uint64_t v175 = v153;
  long long v168 = v152[2];
  long long v169 = v152[3];
  long long v170 = v152[4];
  long long v171 = v152[5];
  __n128 v166 = (__n128)v152[0];
  long long v167 = v152[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v152);
  uint64_t v97 = v148;
  uint64_t v98 = v147;
  uint64_t v96 = v149;
  long long v20 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v20;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v21 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v21;
  long long v22 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v22;
  long long v23 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v23;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v154[6];
  long long v173 = v154[7];
  long long v174 = v154[8];
  uint64_t v175 = v155;
  long long v168 = v154[2];
  long long v169 = v154[3];
  long long v170 = v154[4];
  long long v171 = v154[5];
  __n128 v166 = (__n128)v154[0];
  long long v167 = v154[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v154);
  uint64_t v94 = v145;
  uint64_t v95 = v144;
  uint64_t v93 = v146;
  long long v24 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v24;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v25 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v25;
  long long v26 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v26;
  long long v27 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v27;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v156[6];
  long long v173 = v156[7];
  long long v174 = v156[8];
  uint64_t v175 = v157;
  long long v168 = v156[2];
  long long v169 = v156[3];
  long long v170 = v156[4];
  long long v171 = v156[5];
  __n128 v166 = (__n128)v156[0];
  long long v167 = v156[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v156);
  uint64_t v91 = v142;
  uint64_t v92 = v141;
  uint64_t v90 = v143;
  long long v28 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v28;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v29 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v29;
  long long v30 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v30;
  long long v31 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v31;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v158[6];
  long long v173 = v158[7];
  long long v174 = v158[8];
  uint64_t v175 = v159;
  long long v168 = v158[2];
  long long v169 = v158[3];
  long long v170 = v158[4];
  long long v171 = v158[5];
  __n128 v166 = (__n128)v158[0];
  long long v167 = v158[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v158);
  uint64_t v88 = v139;
  uint64_t v89 = v138;
  int v87 = v140;
  long long v32 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v32;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v33 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v33;
  long long v34 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v34;
  long long v35 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v35;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v160[6];
  long long v173 = v160[7];
  long long v174 = v160[8];
  uint64_t v175 = v161;
  long long v168 = v160[2];
  long long v169 = v160[3];
  long long v170 = v160[4];
  long long v171 = v160[5];
  __n128 v166 = (__n128)v160[0];
  long long v167 = v160[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v160);
  uint64_t v85 = v136;
  uint64_t v86 = v135;
  int v84 = v137;
  long long v36 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v36;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v37 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v37;
  long long v38 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v38;
  long long v39 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v39;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v162[6];
  long long v173 = v162[7];
  long long v174 = v162[8];
  uint64_t v175 = v163;
  long long v168 = v162[2];
  long long v169 = v162[3];
  long long v170 = v162[4];
  long long v171 = v162[5];
  __n128 v166 = (__n128)v162[0];
  long long v167 = v162[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v162);
  uint64_t v82 = v133;
  uint64_t v83 = v132;
  uint64_t v40 = v134;
  long long v41 = *(_OWORD *)(a2 + 192);
  long long v172 = *(_OWORD *)(a2 + 176);
  long long v173 = v41;
  long long v174 = *(_OWORD *)(a2 + 208);
  uint64_t v175 = *(void *)(a2 + 224);
  long long v42 = *(_OWORD *)(a2 + 128);
  long long v168 = *(_OWORD *)(a2 + 112);
  long long v169 = v42;
  long long v43 = *(_OWORD *)(a2 + 160);
  long long v170 = *(_OWORD *)(a2 + 144);
  long long v171 = v43;
  long long v44 = *(_OWORD *)(a2 + 96);
  __n128 v166 = *(__n128 *)(a2 + 80);
  long long v167 = v44;
  sub_E6E10();
  swift_getKeyPath();
  long long v172 = v164[6];
  long long v173 = v164[7];
  long long v174 = v164[8];
  uint64_t v175 = v165;
  long long v168 = v164[2];
  long long v169 = v164[3];
  long long v170 = v164[4];
  long long v171 = v164[5];
  __n128 v166 = (__n128)v164[0];
  long long v167 = v164[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v164);
  v150[2] = v128;
  v150[3] = v129;
  v150[4] = v130;
  uint64_t v151 = v131;
  v150[0] = v126;
  v150[1] = v127;
  uint64_t v45 = type metadata accessor for GCSControllerSheetDetailView();
  sub_10C7C(&qword_1235B0);
  sub_E6D40();
  long long v46 = *(_OWORD *)(a2 + 192);
  long long v122 = *(_OWORD *)(a2 + 176);
  long long v123 = v46;
  long long v124 = *(_OWORD *)(a2 + 208);
  uint64_t v125 = *(void *)(a2 + 224);
  long long v47 = *(_OWORD *)(a2 + 128);
  long long v118 = *(_OWORD *)(a2 + 112);
  long long v119 = v47;
  long long v48 = *(_OWORD *)(a2 + 160);
  long long v120 = *(_OWORD *)(a2 + 144);
  long long v121 = v48;
  long long v49 = *(_OWORD *)(a2 + 96);
  __n128 v116 = *(__n128 *)(a2 + 80);
  long long v117 = v49;
  sub_E6E10();
  swift_getKeyPath();
  long long v122 = v172;
  long long v123 = v173;
  long long v124 = v174;
  uint64_t v125 = v175;
  long long v118 = v168;
  long long v119 = v169;
  long long v120 = v170;
  long long v121 = v171;
  __n128 v116 = v166;
  long long v117 = v167;
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)&v166);
  uint64_t v50 = v113;
  uint64_t v51 = v114;
  uint64_t v52 = v115;
  long long v53 = (uint64_t *)(a2 + *(int *)(v45 + 48));
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v53[2];
  uint64_t v110 = v54;
  uint64_t v111 = v55;
  uint64_t v112 = v56;
  sub_10C7C(&qword_122CB8);
  uint64_t v57 = sub_E6D40();
  __n128 v58 = v116;
  long long v59 = v117;
  uint64_t v60 = sub_81F00(v57);
  *((void *)&v81 + 1) = v51;
  *(void *)&long long v81 = v50;
  LOBYTE(v8sub_E59A4(2, 18, 1, 0) = 1;
  *((void *)&v79 + 1) = v82;
  *(void *)&long long v79 = v83;
  *((void *)&v78 + 1) = v90;
  *(void *)&long long v78 = v91;
  *((void *)&v77 + 1) = v92;
  *(void *)&long long v77 = v93;
  uint64_t v61 = v100;
  sub_81F48(0, v60, v62, v98, v97, v96, v95, v94, v100, v77, v78, v89, v88, v87, v86, v85, v84, v79, v40,
    v80,
    (uint64_t)v150,
    (uint64_t)v7,
    v81,
    v52,
    v58,
    v59,
    *((unint64_t *)&v59 + 1));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 1;
  uint64_t v65 = v101;
  sub_7DF4C(v61, v101, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  id v66 = (uint64_t *)(v65 + *(int *)(v104 + 44));
  *id v66 = KeyPath;
  v66[1] = (uint64_t)sub_7DF34;
  v66[2] = v64;
  sub_7E9A4(v61, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v67 = v105;
  sub_7EE14(v65, v105, &qword_124278);
  uint64_t v68 = v102;
  uint64_t v69 = v103;
  long long v70 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  char v71 = v99;
  uint64_t v72 = v106;
  v70(v102, v99, v106);
  sub_7E434(v67, v65, &qword_124278);
  uint64_t v73 = v107;
  v70(v107, v68, v72);
  uint64_t v74 = sub_10C7C(&qword_124298);
  sub_7E434(v65, (uint64_t)&v73[*(int *)(v74 + 48)], &qword_124278);
  sub_7E4EC(v67, &qword_124278);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v69 + 8);
  v75(v71, v72);
  sub_7E4EC(v65, &qword_124278);
  return ((uint64_t (*)(char *, uint64_t))v75)(v68, v72);
}

uint64_t sub_7A770@<X0>(char *a1@<X8>)
{
  return sub_79CD0(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_7A77C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_7A7C4(int a1@<W0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v125 = a2;
  long long v130 = a3;
  uint64_t v4 = type metadata accessor for GCSControllerSheetDetailView();
  uint64_t v109 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v117 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = v6;
  __chkstk_darwin(v5);
  uint64_t v111 = (uint64_t)&v108 - v7;
  uint64_t v8 = sub_10C7C(&qword_1242A0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v114 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10C7C(&qword_1242A8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v113 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v112 = (uint64_t)&v108 - v15;
  uint64_t v16 = sub_10C7C(&qword_1242B0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v19 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10C7C(&qword_1242B8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  long long v23 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  long long v25 = (char *)&v108 - v24;
  uint64_t v26 = sub_10C7C(&qword_1242C0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v29 = __chkstk_darwin(v28);
  unsigned __int8 v137 = (char *)&v108 - v30;
  int v121 = a1;
  long long v129 = v23;
  uint64_t v132 = v29;
  uint64_t v131 = v31;
  uint64_t v138 = v25;
  uint64_t v120 = v11;
  uint64_t v136 = v32;
  uint64_t v119 = v12;
  uint64_t v128 = v16;
  uint64_t v127 = v17;
  uint64_t v116 = v8;
  uint64_t v115 = v9;
  long long v118 = v19;
  uint64_t v126 = v33;
  long long v34 = v125;
  if (a1)
  {
    long long v35 = (void *)v125[6];
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v36 = v35;
    uint64_t v148 = sub_E63F0();
    *(void *)&unsigned long long v149 = v37;
    *((void *)&v149 + 1) = v36;
    id v150 = 0;
    char v151 = 0;
  }
  else
  {
    long long v38 = (void *)v125[2];
    long long v39 = (void *)v125[6];
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v40 = v38;
    id v41 = v39;
    uint64_t v148 = sub_E63F0();
    *(void *)&unsigned long long v149 = v42;
    *((void *)&v149 + 1) = v40;
    id v150 = v41;
    char v151 = 1;
  }
  sub_7DFB4();
  sub_7E008();
  sub_E6610();
  long long v123 = (void *)v139;
  uint64_t v134 = (void *)*((void *)&v140 + 1);
  uint64_t v135 = v140;
  uint64_t v133 = v141;
  int v122 = v142;
  uint64_t v43 = (uint64_t)v34;
  uint64_t v148 = v34[3];
  unsigned long long v149 = *((_OWORD *)v34 + 2);
  sub_10C7C(&qword_124150);
  uint64_t v44 = sub_E6E10();
  uint64_t v125 = &v108;
  uint64_t v45 = v139;
  long long v46 = (void *)*((void *)&v140 + 1);
  unint64_t v47 = v140;
  __chkstk_darwin(v44);
  uint64_t v148 = v45;
  unsigned long long v149 = __PAIR128__((unint64_t)v46, v47);
  swift_retain();
  swift_retain();
  id v124 = v46;
  uint64_t v48 = sub_E65E0();
  uint64_t v139 = sub_B7108(0xD000000000000010, (void *)0x80000000000F26B0);
  *(void *)&long long v140 = v49;
  sub_187B0();
  uint64_t v50 = sub_E6920();
  unint64_t v52 = v51;
  LOBYTE(v46) = v53;
  uint64_t v55 = v54;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v139 = v48;
  *(void *)&long long v140 = 0;
  uint64_t v57 = 1;
  BYTE8(v14sub_E59A4(2, 18, 1, 0) = 1;
  uint64_t v141 = (ValueMetadata *)v50;
  unint64_t v142 = v52;
  char v143 = v46 & 1;
  uint64_t v144 = v55;
  uint64_t v145 = KeyPath;
  uint64_t v146 = 1;
  char v147 = 0;
  sub_10C7C(&qword_1242D8);
  sub_7E14C(0, (unint64_t *)&qword_124E50);
  sub_10C7C(&qword_1242E0);
  sub_7EF38(&qword_1242E8, &qword_1242D8);
  sub_6752C();
  sub_7E188();
  uint64_t v58 = v126;
  sub_E6DB0();

  swift_release();
  swift_release();
  uint64_t v59 = v131;
  uint64_t v60 = v137;
  uint64_t v61 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v137, v58, v132);
  uint64_t v141 = &type metadata for GameControllerFeatures;
  unint64_t v142 = sub_7E390();
  LOBYTE(v46) = sub_E60A0();
  sub_7E3E4((uint64_t)&v139);
  uint64_t v62 = (uint64_t)v138;
  if (v46)
  {
    if (v121)
    {
      uint64_t v63 = 1;
      uint64_t v64 = v120;
      uint64_t v65 = v119;
      uint64_t v66 = (uint64_t)v118;
    }
    else
    {
      uint64_t v67 = v111;
      sub_7DF4C(v43, v111, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
      sub_E7290();
      uint64_t v68 = sub_E7280();
      unint64_t v69 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
      uint64_t v70 = swift_allocObject();
      *(void *)(v70 + 16) = v68;
      *(void *)(v70 + 24) = &protocol witness table for MainActor;
      sub_7BA90(v67, v70 + v69);
      sub_7DF4C(v43, v67, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
      uint64_t v71 = sub_E7280();
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v71;
      *(void *)(v72 + 24) = &protocol witness table for MainActor;
      uint64_t v73 = v43;
      sub_7BA90(v67, v72 + v69);
      sub_E6E20();
      sub_10C7C(&qword_124348);
      sub_7EF38(&qword_124350, &qword_124348);
      uint64_t v74 = v114;
      sub_E6DD0();
      uint64_t v139 = *(void *)(v43 + 56);
      long long v140 = *(_OWORD *)(v43 + 64);
      sub_10C7C(&qword_124158);
      sub_E6DE0();
      uint64_t v75 = (void *)v148;
      uint64_t v76 = sub_E7110();
      uint64_t v78 = v77;
      if (v76 == sub_E7110() && v78 == v79)
      {

        swift_bridgeObjectRelease_n();
        uint64_t v80 = v117;
        sub_7DF4C(v73, v117, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
        char v81 = 0;
        uint64_t v59 = v131;
        uint64_t v62 = (uint64_t)v138;
        uint64_t v66 = (uint64_t)v118;
      }
      else
      {
        char v82 = sub_E7620();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v117;
        sub_7DF4C(v73, v117, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
        char v81 = 0;
        uint64_t v59 = v131;
        uint64_t v62 = (uint64_t)v138;
        uint64_t v66 = (uint64_t)v118;
        if ((v82 & 1) == 0)
        {
          uint64_t v139 = *(void *)(v80 + 56);
          long long v140 = *(_OWORD *)(v80 + 64);
          sub_E6DE0();
          uint64_t v83 = (void *)v148;
          uint64_t v84 = sub_E7110();
          uint64_t v86 = v85;
          if (v84 == sub_E7110() && v86 == v87) {
            char v81 = 0;
          }
          else {
            char v81 = sub_E7620() ^ 1;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = v117;
        }
      }
      sub_7E9A4(v80, (uint64_t (*)(void))type metadata accessor for GCSControllerSheetDetailView);
      uint64_t v88 = swift_getKeyPath();
      uint64_t v89 = swift_allocObject();
      *(unsigned char *)(v89 + 16) = v81 & 1;
      uint64_t v90 = v115;
      uint64_t v91 = (uint64_t)v113;
      uint64_t v92 = v116;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v74, v116);
      uint64_t v64 = v120;
      uint64_t v93 = (uint64_t *)(v91 + *(int *)(v120 + 36));
      *uint64_t v93 = v88;
      v93[1] = (uint64_t)sub_7F19C;
      v93[2] = v89;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v74, v92);
      uint64_t v94 = v112;
      sub_7EE14(v91, v112, &qword_1242A8);
      sub_7EE14(v94, v66, &qword_1242A8);
      uint64_t v63 = 0;
      uint64_t v65 = v119;
      uint64_t v60 = v137;
      uint64_t v61 = v132;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v66, v63, 1, v64);
    sub_7EE14(v66, v62, &qword_1242B0);
    uint64_t v57 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56))(v62, v57, 1, v128);
  uint64_t v95 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 16);
  uint64_t v96 = v136;
  v95((uint64_t)v136, v60, v61);
  uint64_t v97 = (uint64_t)v129;
  sub_7E434(v62, (uint64_t)v129, &qword_1242B8);
  uint64_t v98 = v130;
  long long v99 = v123;
  uint64_t v100 = v135;
  void *v130 = v123;
  v98[1] = v100;
  uint64_t v101 = v133;
  v98[2] = v134;
  v98[3] = v101;
  char v102 = v122;
  *((unsigned char *)v98 + 32) = v122;
  uint64_t v103 = sub_10C7C(&qword_124340);
  v95((uint64_t)v98 + *(int *)(v103 + 48), v96, v61);
  sub_7E434(v97, (uint64_t)v98 + *(int *)(v103 + 64), &qword_1242B8);
  uint64_t v105 = v134;
  uint64_t v104 = v135;
  uint64_t v106 = v133;
  sub_7E498(v99, v135, v134, v133, v102);
  sub_7E4EC((uint64_t)v138, &qword_1242B8);
  long long v107 = *(void (**)(char *, uint64_t))(v59 + 8);
  v107(v137, v61);
  sub_7E4EC(v97, &qword_1242B8);
  v107(v136, v61);
  sub_7E548(v99, v104, v105, v106, v102);
}

id sub_7B5D4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  *a2 = nullsub_16();
  a2[1] = v3;
  a2[2] = v3;
  id v4 = v3;

  return v4;
}

uint64_t sub_7B620()
{
  uint64_t v0 = sub_10C7C(&qword_124358);
  uint64_t v1 = sub_7EF38(&qword_124360, &qword_124358);

  return LabelGroup.init(content:)(sub_7B6B4, 0, v0, v1);
}

uint64_t sub_7B6B4@<X0>(uint64_t a1@<X8>)
{
  sub_E6590();
  uint64_t v2 = sub_E6910();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_E6590();
  uint64_t v9 = sub_E6910();
  uint64_t v11 = v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  char v13 = v12 & 1;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v10;
  *(unsigned char *)(a1 + 48) = v12 & 1;
  *(void *)(a1 + 56) = v14;
  sub_18804(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_18804(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_18814(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_18814(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_7B820(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GCSProfileParams();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = &v24[-v8 - 8];
  __chkstk_darwin(v7);
  uint64_t v11 = &v24[-v10 - 8];
  sub_E0510((uint64_t)&v24[-v10 - 8]);
  type metadata accessor for GCSControllerSheetDetailView();
  sub_7DF4C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_1235B0);
  sub_E6D30();
  sub_7E9A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D20();
  char v12 = *(void **)(a2 + 48);
  char v13 = *(void **)a2;
  if (*(void *)a2)
  {
    id v14 = v12;
    id v15 = [v13 controllers];
    sub_7E14C(0, (unint64_t *)&qword_124E30);
    unint64_t v16 = sub_E7210();

    sub_57F44((uint64_t)v6, v12, v16, (uint64_t)v24);
    long long v17 = *(_OWORD *)(a2 + 192);
    long long v30 = *(_OWORD *)(a2 + 176);
    long long v31 = v17;
    long long v32 = *(_OWORD *)(a2 + 208);
    uint64_t v33 = *(void *)(a2 + 224);
    long long v18 = *(_OWORD *)(a2 + 128);
    long long v26 = *(_OWORD *)(a2 + 112);
    long long v27 = v18;
    long long v19 = *(_OWORD *)(a2 + 160);
    long long v28 = *(_OWORD *)(a2 + 144);
    long long v29 = v19;
    long long v20 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)&v24[136] = *(_OWORD *)(a2 + 80);
    long long v25 = v20;
    sub_10C7C(&qword_122BB8);
    return sub_E6DF0();
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v22 = v12;
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_7BA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSControllerSheetDetailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7BAF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GCSControllerSheetDetailView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_7B820(a1, v4);
}

uint64_t sub_7BB64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  *(void *)&v25[0] = *(void *)(a1 + 24);
  *(_OWORD *)((char *)v25 + 8) = *(_OWORD *)(a1 + 32);
  sub_10C7C(&qword_124150);
  sub_E6DE0();
  uint64_t v11 = v24;
  sub_E0510((uint64_t)v10);

  type metadata accessor for GCSControllerSheetDetailView();
  sub_7DF4C((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_1235B0);
  sub_E6D30();
  sub_7E9A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D20();
  char v12 = *(void **)(a1 + 48);
  char v13 = *(void **)a1;
  if (*(void *)a1)
  {
    id v14 = v12;
    id v15 = [v13 controllers];
    sub_7E14C(0, (unint64_t *)&qword_124E30);
    unint64_t v16 = sub_E7210();

    sub_57F44((uint64_t)v5, v12, v16, (uint64_t)&v24);
    long long v17 = *(_OWORD *)(a1 + 192);
    v25[6] = *(_OWORD *)(a1 + 176);
    v25[7] = v17;
    _OWORD v25[8] = *(_OWORD *)(a1 + 208);
    uint64_t v26 = *(void *)(a1 + 224);
    long long v18 = *(_OWORD *)(a1 + 128);
    void v25[2] = *(_OWORD *)(a1 + 112);
    v25[3] = v18;
    long long v19 = *(_OWORD *)(a1 + 160);
    v25[4] = *(_OWORD *)(a1 + 144);
    v25[5] = v19;
    long long v20 = *(_OWORD *)(a1 + 96);
    v25[0] = *(_OWORD *)(a1 + 80);
    v25[1] = v20;
    sub_10C7C(&qword_122BB8);
    return sub_E6DF0();
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v22 = v12;
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_7BE04()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSControllerSheetDetailView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (id *)(v0 + v3);

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (char *)v6 + v1[13];
  uint64_t v8 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_7C038()
{
  uint64_t v1 = *(void *)(type metadata accessor for GCSControllerSheetDetailView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_7BB64(v2);
}

uint64_t sub_7C09C()
{
  type metadata accessor for GCSPreferencesStore();
  sub_7A77C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

double sub_7C110@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v40 = a13;
  uint64_t v41 = type metadata accessor for GCSProfileParams();
  uint64_t v18 = __chkstk_darwin(v41);
  long long v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v35 - v21;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v23 = v37;
  *(void *)(a9 + 32) = v36;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = v23;
  uint64_t v24 = v39;
  *(void *)(a9 + 48) = v38;
  *(void *)(a9 + 56) = v24;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  long long v25 = *(_OWORD *)(a12 + 112);
  *(_OWORD *)(a9 + 176) = *(_OWORD *)(a12 + 96);
  *(_OWORD *)(a9 + 192) = v25;
  *(_OWORD *)(a9 + 208) = *(_OWORD *)(a12 + 128);
  uint64_t v26 = *(void *)(a12 + 144);
  long long v27 = *(_OWORD *)(a12 + 48);
  *(_OWORD *)(a9 + 112) = *(_OWORD *)(a12 + 32);
  *(_OWORD *)(a9 + 128) = v27;
  long long v28 = *(_OWORD *)(a12 + 80);
  *(_OWORD *)(a9 + 144) = *(_OWORD *)(a12 + 64);
  *(_OWORD *)(a9 + 16sub_E59A4(2, 18, 1, 0) = v28;
  long long v29 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 96) = v29;
  uint64_t v30 = v40;
  *(void *)(a9 + 224) = v26;
  *(void *)(a9 + 232) = v30;
  uint64_t v31 = type metadata accessor for GCSControllerSheetDetailView();
  sub_DFD34((uint64_t)v22);
  sub_7DF4C((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6D10();
  sub_7E9A4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  uint64_t v32 = a9 + *(int *)(v31 + 48);
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_E6D10();
  double result = *(double *)&v44;
  uint64_t v34 = v45;
  *(_OWORD *)uint64_t v32 = v44;
  *(void *)(v32 + 16) = v34;
  return result;
}

uint64_t sub_7C2DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7C2F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_7C314()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for GCSControllerSheetControllerInfoView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for GCSControllerSheetControllerInfoView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for GCSControllerSheetControllerInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for GCSControllerSheetControllerInfoView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerSheetControllerInfoView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerSheetControllerInfoView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerSheetControllerInfoView()
{
  return &type metadata for GCSControllerSheetControllerInfoView;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSControllerSheetGameInfoView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for GCSControllerSheetGameInfoView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for GCSControllerSheetGameInfoView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v5;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for GCSControllerSheetGameInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for GCSControllerSheetGameInfoView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSControllerSheetGameInfoView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSControllerSheetGameInfoView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSControllerSheetGameInfoView()
{
  return &type metadata for GCSControllerSheetGameInfoView;
}

char *sub_7C718(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    id v6 = a1;
    id v7 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v7;
    id v8 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v8;
    id v9 = a2[5];
    unint64_t v51 = a2[6];
    *((void *)a1 + 5) = v9;
    *((void *)a1 + 6) = v51;
    uint64_t v10 = a2[8];
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v10;
    unint64_t v52 = a2[9];
    uint64_t v11 = a2[10];
    *((void *)a1 + 9) = v52;
    *((void *)a1 + 1sub_E59A4(2, 18, 1, 0) = v11;
    char v53 = a2[12];
    *((void *)a1 + 11) = a2[11];
    *((void *)a1 + 12) = v53;
    *((void *)a1 + 13) = a2[13];
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    id v12 = a2[17];
    *((void *)a1 + 16) = a2[16];
    *((void *)a1 + 17) = v12;
    char v13 = a2[19];
    *((void *)a1 + 18) = a2[18];
    *((void *)a1 + 19) = v13;
    id v14 = a2[21];
    *((void *)a1 + 2sub_E59A4(2, 18, 1, 0) = a2[20];
    *((void *)a1 + 21) = v14;
    id v15 = a2[23];
    *((void *)a1 + 22) = a2[22];
    *((void *)a1 + 23) = v15;
    uint64_t v57 = a2[25];
    *((void *)a1 + 24) = a2[24];
    *((void *)a1 + 25) = v57;
    *((_WORD *)a1 + 104) = *((_WORD *)a2 + 104);
    unint64_t v16 = a2[28];
    uint64_t v55 = a2[27];
    *((void *)a1 + 27) = v55;
    *((void *)a1 + 28) = v16;
    uint64_t v17 = *(int *)(a3 + 44);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    *((void *)a1 + 29) = a2[29];
    uint64_t v56 = sub_E6050();
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
    long long v20 = v4;
    uint64_t v21 = v7;
    swift_retain();
    swift_retain();
    id v22 = v9;
    uint64_t v23 = v51;
    swift_retain();
    swift_retain();
    uint64_t v24 = v52;
    swift_retain();
    swift_retain();
    long long v25 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54(v18, v19, v56);
    long long v27 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v28 = v27[5];
    long long v29 = &v18[v28];
    uint64_t v30 = (uint64_t *)(v19 + v28);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    *(void *)long long v29 = v32;
    *((void *)v29 + 1) = v31;
    uint64_t v33 = v27[6];
    uint64_t v34 = &v18[v33];
    uint64_t v35 = (void *)(v19 + v33);
    uint64_t v36 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v27[7];
    uint64_t v38 = &v18[v37];
    uint64_t v39 = (void *)(v19 + v37);
    uint64_t v40 = v39[1];
    *(void *)uint64_t v38 = *v39;
    *((void *)v38 + 1) = v40;
    v18[v27[8]] = *(unsigned char *)(v19 + v27[8]);
    v18[v27[9]] = *(unsigned char *)(v19 + v27[9]);
    uint64_t v41 = v27[10];
    uint64_t v42 = &v18[v41];
    unint64_t v43 = (void *)(v19 + v41);
    uint64_t v44 = v43[1];
    *(void *)uint64_t v42 = *v43;
    *((void *)v42 + 1) = v44;
    *(void *)&v18[v27[11]] = *(void *)(v19 + v27[11]);
    v18[v27[12]] = *(unsigned char *)(v19 + v27[12]);
    *(void *)&v18[v27[13]] = *(void *)(v19 + v27[13]);
    *(void *)&v18[v27[14]] = *(void *)(v19 + v27[14]);
    *(void *)&v18[v27[15]] = *(void *)(v19 + v27[15]);
    v18[v27[16]] = *(unsigned char *)(v19 + v27[16]);
    v18[v27[17]] = *(unsigned char *)(v19 + v27[17]);
    *(void *)&v18[v27[18]] = *(void *)(v19 + v27[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_10C7C(&qword_1235B0);
    *(void *)&v18[*(int *)(v45 + 28)] = *(void *)(v19 + *(int *)(v45 + 28));
    uint64_t v46 = *(int *)(a3 + 48);
    unint64_t v47 = &v6[v46];
    uint64_t v48 = (char **)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    *(void *)unint64_t v47 = *v48;
    *((void *)v47 + 1) = v49;
    *((void *)v47 + 2) = v48[2];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v6;
}

uint64_t sub_7CAB8(id *a1, uint64_t a2)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_7CC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  id v9 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v9;
  uint64_t v10 = *(void **)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  uint64_t v55 = v10;
  id v12 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  uint64_t v56 = v12;
  uint64_t v13 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  uint64_t v57 = *(void **)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v57;
  *(void *)(a1 + 104) = v14;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v17;
  uint64_t v18 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v18;
  uint64_t v19 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v19;
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  uint64_t v20 = *(void *)(a2 + 224);
  uint64_t v59 = *(void **)(a2 + 216);
  *(void *)(a1 + 216) = v59;
  *(void *)(a1 + 224) = v20;
  uint64_t v21 = *(int *)(a3 + 44);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  uint64_t v60 = sub_E6050();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
  id v24 = v6;
  id v25 = v7;
  swift_retain();
  swift_retain();
  id v26 = v9;
  id v27 = v55;
  swift_retain();
  swift_retain();
  id v28 = v56;
  swift_retain();
  swift_retain();
  id v29 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v30 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v22, v23, v60);
  uint64_t v31 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v32 = v31[5];
  uint64_t v33 = (void *)(v22 + v32);
  uint64_t v34 = (uint64_t *)(v23 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  uint64_t v37 = v31[6];
  uint64_t v38 = (void *)(v22 + v37);
  uint64_t v39 = (void *)(v23 + v37);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = v31[7];
  uint64_t v42 = (void *)(v22 + v41);
  unint64_t v43 = (void *)(v23 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  *(unsigned char *)(v22 + v31[8]) = *(unsigned char *)(v23 + v31[8]);
  *(unsigned char *)(v22 + v31[9]) = *(unsigned char *)(v23 + v31[9]);
  uint64_t v45 = v31[10];
  uint64_t v46 = (void *)(v22 + v45);
  unint64_t v47 = (void *)(v23 + v45);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  *(void *)(v22 + v31[11]) = *(void *)(v23 + v31[11]);
  *(unsigned char *)(v22 + v31[12]) = *(unsigned char *)(v23 + v31[12]);
  *(void *)(v22 + v31[13]) = *(void *)(v23 + v31[13]);
  *(void *)(v22 + v31[14]) = *(void *)(v23 + v31[14]);
  *(void *)(v22 + v31[15]) = *(void *)(v23 + v31[15]);
  *(unsigned char *)(v22 + v31[16]) = *(unsigned char *)(v23 + v31[16]);
  *(unsigned char *)(v22 + v31[17]) = *(unsigned char *)(v23 + v31[17]);
  *(void *)(v22 + v31[18]) = *(void *)(v23 + v31[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_10C7C(&qword_1235B0);
  *(void *)(v22 + *(int *)(v49 + 28)) = *(void *)(v23 + *(int *)(v49 + 28));
  uint64_t v50 = *(int *)(a3 + 48);
  unint64_t v51 = (void *)(a1 + v50);
  unint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  *unint64_t v51 = *v52;
  v51[1] = v53;
  v51[2] = v52[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_7CFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)a1;
  id v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v9 = *(void **)(a2 + 16);
  uint64_t v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v9;
  id v11 = v9;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  id v12 = *(void **)(a2 + 40);
  uint64_t v13 = *(void **)(a1 + 40);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v12;
  id v14 = v12;

  uint64_t v15 = *(void **)(a2 + 48);
  uint64_t v16 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v15;
  id v17 = v15;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v18 = *(void **)(a2 + 72);
  uint64_t v19 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v18;
  id v20 = v18;

  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  uint64_t v21 = *(void **)(a1 + 96);
  uint64_t v22 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v22;
  id v23 = v22;

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  id v24 = *(void **)(a1 + 216);
  id v25 = *(void **)(a2 + 216);
  *(void *)(a1 + 216) = v25;
  id v26 = v25;

  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(a3 + 44);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v32 = v31[5];
  uint64_t v33 = (void *)(v28 + v32);
  uint64_t v34 = (void *)(v29 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v31[6];
  uint64_t v36 = (void *)(v28 + v35);
  uint64_t v37 = (void *)(v29 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v31[7];
  uint64_t v39 = (void *)(v28 + v38);
  uint64_t v40 = (void *)(v29 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + v31[8]) = *(unsigned char *)(v29 + v31[8]);
  *(unsigned char *)(v28 + v31[9]) = *(unsigned char *)(v29 + v31[9]);
  uint64_t v41 = v31[10];
  uint64_t v42 = (void *)(v28 + v41);
  unint64_t v43 = (void *)(v29 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v28 + v31[11]) = *(void *)(v29 + v31[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + v31[12]) = *(unsigned char *)(v29 + v31[12]);
  *(void *)(v28 + v31[13]) = *(void *)(v29 + v31[13]);
  *(void *)(v28 + v31[14]) = *(void *)(v29 + v31[14]);
  *(void *)(v28 + v31[15]) = *(void *)(v29 + v31[15]);
  *(unsigned char *)(v28 + v31[16]) = *(unsigned char *)(v29 + v31[16]);
  *(unsigned char *)(v28 + v31[17]) = *(unsigned char *)(v29 + v31[17]);
  *(void *)(v28 + v31[18]) = *(void *)(v29 + v31[18]);
  uint64_t v44 = sub_10C7C(&qword_1235B0);
  *(void *)(v28 + *(int *)(v44 + 28)) = *(void *)(v29 + *(int *)(v44 + 28));
  swift_retain();
  swift_release();
  uint64_t v45 = *(int *)(a3 + 48);
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = a2 + v45;
  *uint64_t v46 = *(void *)(a2 + v45);
  v46[1] = *(void *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46[2] = *(void *)(v47 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_7D44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  long long v9 = *(_OWORD *)(a2 + 128);
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v10;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = v9;
  long long v11 = *(_OWORD *)(a2 + 176);
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  uint64_t v13 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v13;
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)(a1 + 176) = v11;
  uint64_t v17 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)(v15 + v18[5]) = *(_OWORD *)(v16 + v18[5]);
  *(_OWORD *)(v15 + v18[6]) = *(_OWORD *)(v16 + v18[6]);
  *(_OWORD *)(v15 + v18[7]) = *(_OWORD *)(v16 + v18[7]);
  *(unsigned char *)(v15 + v18[8]) = *(unsigned char *)(v16 + v18[8]);
  *(unsigned char *)(v15 + v18[9]) = *(unsigned char *)(v16 + v18[9]);
  *(_OWORD *)(v15 + v18[10]) = *(_OWORD *)(v16 + v18[10]);
  *(void *)(v15 + v18[11]) = *(void *)(v16 + v18[11]);
  *(unsigned char *)(v15 + v18[12]) = *(unsigned char *)(v16 + v18[12]);
  *(void *)(v15 + v18[13]) = *(void *)(v16 + v18[13]);
  *(void *)(v15 + v18[14]) = *(void *)(v16 + v18[14]);
  *(void *)(v15 + v18[15]) = *(void *)(v16 + v18[15]);
  *(unsigned char *)(v15 + v18[16]) = *(unsigned char *)(v16 + v18[16]);
  *(unsigned char *)(v15 + v18[17]) = *(unsigned char *)(v16 + v18[17]);
  *(void *)(v15 + v18[18]) = *(void *)(v16 + v18[18]);
  uint64_t v19 = sub_10C7C(&qword_1235B0);
  *(void *)(v15 + *(int *)(v19 + 28)) = *(void *)(v16 + *(int *)(v19 + 28));
  uint64_t v20 = *(int *)(a3 + 48);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  return a1;
}

uint64_t sub_7D614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  long long v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);

  long long v10 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  long long v11 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  long long v12 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  uint64_t v16 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);

  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 44);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v22 = v21[5];
  id v23 = (void *)(v18 + v22);
  id v24 = (uint64_t *)(v19 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *id v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v21[6];
  uint64_t v28 = (void *)(v18 + v27);
  uint64_t v29 = (uint64_t *)(v19 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v21[7];
  uint64_t v33 = (void *)(v18 + v32);
  uint64_t v34 = (uint64_t *)(v19 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + v21[8]) = *(unsigned char *)(v19 + v21[8]);
  *(unsigned char *)(v18 + v21[9]) = *(unsigned char *)(v19 + v21[9]);
  uint64_t v37 = v21[10];
  uint64_t v38 = (void *)(v18 + v37);
  uint64_t v39 = (uint64_t *)(v19 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  *(void *)(v18 + v21[11]) = *(void *)(v19 + v21[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + v21[12]) = *(unsigned char *)(v19 + v21[12]);
  *(void *)(v18 + v21[13]) = *(void *)(v19 + v21[13]);
  *(void *)(v18 + v21[14]) = *(void *)(v19 + v21[14]);
  *(void *)(v18 + v21[15]) = *(void *)(v19 + v21[15]);
  *(unsigned char *)(v18 + v21[16]) = *(unsigned char *)(v19 + v21[16]);
  *(unsigned char *)(v18 + v21[17]) = *(unsigned char *)(v19 + v21[17]);
  *(void *)(v18 + v21[18]) = *(void *)(v19 + v21[18]);
  uint64_t v42 = sub_10C7C(&qword_1235B0);
  *(void *)(v18 + *(int *)(v42 + 28)) = *(void *)(v19 + *(int *)(v42 + 28));
  swift_release();
  uint64_t v43 = *(int *)(a3 + 48);
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v44[2] = v45[2];
  swift_release();
  return a1;
}

uint64_t sub_7D968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7D97C);
}

uint64_t sub_7D97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_1235B0);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_7DA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7DA44);
}

uint64_t sub_7DA44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_1235B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_7DAF0()
{
  sub_4C330();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_7DBBC()
{
  return sub_7EF38(&qword_124238, &qword_124240);
}

uint64_t sub_7DBF8()
{
  return sub_7EF38(&qword_124248, &qword_124250);
}

unint64_t sub_7DC38()
{
  unint64_t result = qword_124258;
  if (!qword_124258)
  {
    sub_11B60(&qword_124190);
    sub_7DCB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124258);
  }
  return result;
}

unint64_t sub_7DCB4()
{
  unint64_t result = qword_124260;
  if (!qword_124260)
  {
    sub_11B60(&qword_124170);
    sub_11B60(&qword_124160);
    sub_E66C0();
    sub_7EF38(&qword_124188, &qword_124160);
    sub_7A77C(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
    swift_getOpaqueTypeConformance2();
    sub_7EF38(&qword_124268, &qword_124270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124260);
  }
  return result;
}

uint64_t sub_7DDFC()
{
  return sub_7A77C(&qword_123568, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_7DE44()
{
  return sub_7A77C((unint64_t *)&unk_1250A0, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_7DE8C()
{
  return sub_7A77C(&qword_123570, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_7DED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_E7110();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_7DF18(void *a1@<X8>)
{
  sub_7A7C4(*(unsigned __int8 *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_7DF24()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_7DF34(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_7DF4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_7DFB4()
{
  unint64_t result = qword_1242C8;
  if (!qword_1242C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1242C8);
  }
  return result;
}

unint64_t sub_7E008()
{
  unint64_t result = qword_1242D0;
  if (!qword_1242D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1242D0);
  }
  return result;
}

uint64_t sub_7E05C()
{
  return sub_E6EB0();
}

uint64_t sub_7E14C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_7E188()
{
  unint64_t result = qword_1242F0;
  if (!qword_1242F0)
  {
    sub_11B60(&qword_1242E0);
    sub_7E1FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1242F0);
  }
  return result;
}

unint64_t sub_7E1FC()
{
  unint64_t result = qword_1242F8;
  if (!qword_1242F8)
  {
    sub_11B60(&qword_124300);
    sub_7E29C();
    sub_7EF38(&qword_124330, &qword_124338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1242F8);
  }
  return result;
}

unint64_t sub_7E29C()
{
  unint64_t result = qword_124308;
  if (!qword_124308)
  {
    sub_11B60(&qword_124310);
    sub_7E33C();
    sub_7EF38(&qword_124320, &qword_124328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124308);
  }
  return result;
}

unint64_t sub_7E33C()
{
  unint64_t result = qword_124318;
  if (!qword_124318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124318);
  }
  return result;
}

unint64_t sub_7E390()
{
  unint64_t result = qword_128DE0;
  if (!qword_128DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_128DE0);
  }
  return result;
}

uint64_t sub_7E3E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_7E434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_7E498(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  if (a5)
  {
    id v6 = a1;
    a1 = a3;
    a3 = a4;
  }
  id v7 = a1;

  return a3;
}

uint64_t sub_7E4EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_7E548(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  if (a5) {
}
  }

void sub_7E59C(unsigned char *a1@<X8>)
{
  type metadata accessor for GCSControllerSheetDetailView();
  sub_10C7C(&qword_124158);
  sub_E6DE0();
  uint64_t v2 = sub_E7110();
  uint64_t v4 = v3;
  if (v2 == sub_E7110() && v4 == v5) {
    char v7 = 0;
  }
  else {
    char v7 = sub_E7620() ^ 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *a1 = v7 & 1;
}

uint64_t sub_7E6B4()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSControllerSheetDetailView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[13];
  uint64_t v7 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10C7C(&qword_1235B0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_7E8F0(unsigned char *a1)
{
  type metadata accessor for GCSControllerSheetDetailView();
  if (*a1) {
    uint64_t v2 = (id *)&GCSCompatibilityModeXbox360;
  }
  else {
    uint64_t v2 = (id *)&GCSCompatibilityModeDisabled;
  }
  *v2;
  sub_10C7C(&qword_124158);
  return sub_E6DF0();
}

uint64_t sub_7E9A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_7EA04()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_7EA14(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 200);
  long long v12 = *(_OWORD *)(a1 + 184);
  uint64_t v7 = *(void **)(a1 + 216);
  int v8 = *(_DWORD *)(a1 + 224);
  char v9 = *(unsigned char *)(a1 + 228);
  sub_18804(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_7EB18(v19, v18, v17, v2, v3, v4, v5, v6, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((void **)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v7,
    v8,
    v9);
  return a1;
}

id sub_7EB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,int a22,char a23)
{
  if (a23)
  {
    swift_retain();
    sub_18804(a12, a13, a14 & 1);
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    sub_18804(a12, a13, a14 & 1);
    id v24 = a16;
    swift_bridgeObjectRetain();
    sub_33578();
    return a21;
  }
}

uint64_t sub_7EC10(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v13 = *(_OWORD *)(a1 + 168);
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 200);
  long long v12 = *(_OWORD *)(a1 + 184);
  uint64_t v7 = *(void **)(a1 + 216);
  int v8 = *(_DWORD *)(a1 + 224);
  char v9 = *(unsigned char *)(a1 + 228);
  sub_18814(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_7ED14(v19, v18, v17, v2, v3, v4, v5, v6, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, SBYTE8(v14), v13, *((void **)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v7,
    v8,
    v9);
  return a1;
}

void sub_7ED14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,int a22,char a23)
{
  swift_release();
  char v23 = a14 & 1;
  if (a23)
  {
    sub_18814(a12, a13, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18814(a12, a13, v23);
    swift_bridgeObjectRelease();

    sub_333C4();
  }
}

uint64_t sub_7EE08(uint64_t result)
{
  *(unsigned char *)(result + 172) = 1;
  return result;
}

uint64_t sub_7EE14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_7EE78(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    sub_7EF38(a3, a4);
    sub_7EF38(&qword_123478, &qword_123480);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7EF38(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7EF7C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))
{
  BYTE4(v4) = *(unsigned char *)(a1 + 172);
  LODWORD(v4) = *(_DWORD *)(a1 + 168);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    v4);
  return a1;
}

uint64_t sub_7EFF8(uint64_t result)
{
  *(unsigned char *)(result + 172) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for GameControllerFeatures(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for GameControllerFeatures(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x7F0F0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_7F118()
{
  return 0;
}

ValueMetadata *type metadata accessor for GameControllerFeatures()
{
  return &type metadata for GameControllerFeatures;
}

unint64_t sub_7F13C()
{
  unint64_t result = qword_128DF0[0];
  if (!qword_128DF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_128DF0);
  }
  return result;
}

uint64_t sub_7F1A0()
{
  return *v0;
}

id sub_7F1A8()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (v1)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_7F208()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  unint64_t v4 = sub_17B60();

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_7F260()
{
  return swift_getKeyPath();
}

uint64_t sub_7F284()
{
  sub_10C7C(&qword_124370);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7F2D4()
{
  return sub_E6DF0();
}

uint64_t (*sub_7F324(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  v3[5] = v4;
  v3[6] = v5;
  uint64_t v6 = v1[7];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v3[8] = sub_10C7C(&qword_124370);
  sub_E6DE0();
  return sub_7F3CC;
}

uint64_t sub_7F3D0()
{
  sub_10C7C(&qword_124370);
  sub_E6E10();
  return v1;
}

uint64_t sub_7F424()
{
  sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7F474()
{
  return sub_E6DF0();
}

uint64_t (*sub_7F4C4(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  v3[5] = v4;
  v3[6] = v5;
  uint64_t v6 = v1[10];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v3[8] = sub_10C7C(&qword_1232A8);
  sub_E6DE0();
  return sub_7F56C;
}

uint64_t sub_7F570()
{
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  return v1;
}

uint64_t sub_7F5C4()
{
  sub_10C7C(&qword_122848);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7F614()
{
  return sub_E6DF0();
}

uint64_t (*sub_7F664(void *a1))()
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  v3[5] = v4;
  v3[6] = v5;
  uint64_t v6 = v1[13];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v3[8] = sub_10C7C(&qword_122848);
  sub_E6DE0();
  return sub_7F70C;
}

uint64_t sub_7F710()
{
  sub_10C7C(&qword_122848);
  sub_E6E10();
  return v1;
}

uint64_t sub_7F764()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7F7B4()
{
  return sub_E6DF0();
}

uint64_t (*sub_7F808(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 128);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_7F8A8;
}

uint64_t sub_7F8AC()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_7F900()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7F950()
{
  return sub_E6DF0();
}

uint64_t (*sub_7F9A4(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 152);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_7FA44;
}

void sub_7FA48(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_7FAB8()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_7FB0C()
{
  sub_10C7C(&qword_124378);
  sub_E6DE0();
  return v1;
}

uint64_t sub_7FB5C()
{
  return sub_E6DF0();
}

void (*sub_7FBB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[20];
  uint64_t v5 = v1[21];
  v3[5] = v4;
  v3[6] = v5;
  char v6 = (void *)v1[22];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  id v7 = v6;
  swift_retain();
  swift_retain();
  v3[8] = sub_10C7C(&qword_124378);
  sub_E6DE0();
  return sub_7FC58;
}

void sub_7FC58(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)char v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_7FD10()
{
  sub_10C7C(&qword_124378);
  sub_E6E10();
  return v1;
}

uint64_t sub_7FD64()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_7FDA0()
{
  sub_10C7C(&qword_122A50);
  sub_E6D20();
  return v1;
}

uint64_t sub_7FDF0()
{
  return sub_E6D30();
}

void (*sub_7FE44(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  char v4 = *(unsigned char *)(v1 + 184);
  v3[34] = v4;
  uint64_t v5 = *(void *)(v1 + 192);
  *uint64_t v3 = v4;
  *((void *)v3 + 1) = v5;
  *((void *)v3 + 2) = v5;
  swift_retain();
  *((void *)v3 + 3) = sub_10C7C(&qword_122A50);
  sub_E6D20();
  return sub_7FED0;
}

void sub_7FED0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(*(void *)a1 + 34);
  v1[1] = v3;
  *((unsigned char *)v1 + 33) = v2;
  sub_E6D30();
  swift_release();

  free(v1);
}

uint64_t sub_7FF2C()
{
  sub_10C7C(&qword_122A50);
  sub_E6D40();
  return v1;
}

__n128 sub_7FF80@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  __n128 result = v5;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(__n128 *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v7;
  return result;
}

uint64_t sub_80000()
{
  return sub_E6DF0();
}

void (*sub_80080(void *a1))(char **a1, char a2)
{
  long long v3 = malloc(0x148uLL);
  *a1 = v3;
  uint64_t v4 = v1[25];
  uint64_t v5 = v1[26];
  v3[29] = v4;
  v3[30] = v5;
  uint64_t v6 = v1[27];
  uint64_t v7 = v1[28];
  v3[31] = v6;
  v3[32] = v7;
  uint64_t v9 = v1[29];
  uint64_t v8 = v1[30];
  v3[33] = v9;
  v3[34] = v8;
  uint64_t v11 = v1[31];
  uint64_t v10 = v1[32];
  v3[35] = v11;
  v3[36] = v10;
  uint64_t v13 = v1[33];
  uint64_t v12 = v1[34];
  v3[37] = v13;
  v3[38] = v12;
  uint64_t v14 = v1[35];
  v3[39] = v14;
  *long long v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v9;
  v3[5] = v8;
  v3[6] = v11;
  v3[7] = v10;
  v3[8] = v13;
  v3[9] = v12;
  v3[10] = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v3[40] = sub_10C7C(&qword_1230C0);
  sub_E6DE0();
  return sub_80178;
}

void sub_80178(char **a1, char a2)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 13);
  uint64_t v4 = *((void *)v2 + 14);
  uint64_t v6 = *((void *)v2 + 15);
  uint64_t v5 = *((void *)v2 + 16);
  uint64_t v8 = *((void *)v2 + 17);
  uint64_t v7 = *((void *)v2 + 18);
  uint64_t v9 = *((void *)v2 + 19);
  uint64_t v10 = *((void *)v2 + 39);
  uint64_t v12 = *((void *)v2 + 37);
  uint64_t v11 = *((void *)v2 + 38);
  uint64_t v14 = *((void *)v2 + 35);
  uint64_t v13 = *((void *)v2 + 36);
  uint64_t v16 = *((void *)v2 + 33);
  uint64_t v15 = *((void *)v2 + 34);
  uint64_t v18 = *((void *)v2 + 29);
  uint64_t v17 = *((void *)v2 + 30);
  *((_OWORD *)v2 + 1sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(v2 + 88);
  *(void *)char v2 = v18;
  *((void *)v2 + 1) = v17;
  *((_OWORD *)v2 + 1) = *(_OWORD *)(v2 + 248);
  *((void *)v2 + 4) = v16;
  *((void *)v2 + 5) = v15;
  *((void *)v2 + 6) = v14;
  *((void *)v2 + 7) = v13;
  *((void *)v2 + 8) = v12;
  *((void *)v2 + 9) = v11;
  *((void *)v2 + 1sub_E59A4(2, 18, 1, 0) = v10;
  *((void *)v2 + 22) = v3;
  *((void *)v2 + 23) = v4;
  *((void *)v2 + 24) = v6;
  *((void *)v2 + 25) = v5;
  *((void *)v2 + 26) = v8;
  *((void *)v2 + 27) = v7;
  *((void *)v2 + 28) = v9;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_E6DF0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  free(v2);
}

__n128 sub_80304@<Q0>(uint64_t a1@<X8>)
{
  sub_10C7C(&qword_1230C0);
  sub_E6E10();
  __n128 result = v7;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(__n128 *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v9;
  return result;
}

uint64_t sub_80394()
{
  return sub_8068C((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileContentView()
{
  uint64_t result = qword_129010;
  if (!qword_129010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_803F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileContentView();
  sub_83A3C(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_83AA4(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void (*sub_804C0(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  long long v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileContentView();
  sub_83B04(v1 + *(int *)(v6 + 60), (uint64_t)v5, &qword_122BB0);
  sub_E6DE0();
  return sub_805AC;
}

void sub_805AC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_83A3C(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_83B68((uint64_t)v2, &qword_122BB0);
    sub_83AA4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  else
  {
    sub_E6DF0();
    sub_83B68((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_80674()
{
  return sub_8068C((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_8068C(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileContentView();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

uint64_t sub_806E0()
{
  type metadata accessor for GCSProfileContentView();
  sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  return v1;
}

uint64_t sub_80740()
{
  return sub_E6DF0();
}

uint64_t (*sub_807A4(void *a1))()
{
  size_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GCSProfileContentView() + 64));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[5] = *v4;
  v3[6] = v6;
  uint64_t v7 = v4[2];
  v3[7] = v7;
  *size_t v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v3[8] = sub_10C7C(&qword_1232B0);
  sub_E6DE0();
  return sub_8085C;
}

void sub_80860(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  v2[4] = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = v2[7];
  uint64_t v4 = v2[6];
  void *v2 = v2[5];
  v2[1] = v4;
  v2[2] = v3;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_E6DF0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t sub_8091C()
{
  type metadata accessor for GCSProfileContentView();
  sub_10C7C(&qword_1232B0);
  sub_E6E10();
  return v1;
}

uint64_t sub_80980()
{
  type metadata accessor for GCSProfileContentView();
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  return v1;
}

uint64_t sub_809E0()
{
  return sub_E6DF0();
}

void (*sub_80A54(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GCSProfileContentView() + 68));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[8] = *v4;
  v3[9] = v6;
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  v3[10] = v7;
  v3[11] = v8;
  *uint64_t v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v3[12] = sub_10C7C(&qword_122A98);
  sub_E6DE0();
  return sub_80B0C;
}

void sub_80B0C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)(*(void *)a1 + 48) = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[11];
  uint64_t v6 = v2[9];
  uint64_t v5 = v2[10];
  void *v2 = v2[8];
  v2[1] = v6;
  v2[2] = v5;
  v2[3] = v4;
  v2[7] = v3;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_E6DF0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t sub_80BD4()
{
  type metadata accessor for GCSProfileContentView();
  sub_10C7C(&qword_122A98);
  sub_E6E10();
  return v1;
}

uint64_t sub_80C38@<X0>(uint64_t a1@<X8>)
{
  return sub_80C40(v1, a1);
}

uint64_t sub_80C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = sub_10C7C(&qword_124450);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v93 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v83 - v6;
  uint64_t v8 = sub_10C7C(&qword_124458);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v94 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v97 = (uint64_t)&v83 - v11;
  uint64_t v12 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10C7C(&qword_124460);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v92 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v96 = (uint64_t)&v83 - v18;
  uint64_t v19 = type metadata accessor for GCSProfileContentView();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10C7C(&qword_124468);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v90 = (uint64_t)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v95 = (uint64_t)&v83 - v25;
  uint64_t v26 = *(void *)(a1 + 192);
  LOBYTE(v106) = *(unsigned char *)(a1 + 184);
  uint64_t v107 = v26;
  sub_10C7C(&qword_122A50);
  sub_E6D20();
  char v27 = v98;
  sub_83A3C(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  if (v27)
  {
    sub_83AA4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  }
  else
  {
    uint64_t v28 = *((void *)v21 + 3);
    char v29 = v21[32];
    sub_19100(v28, v29);
    char v30 = sub_1FB00(v28, v29);
    sub_19048(v28, v29);
    uint64_t v31 = sub_83AA4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
    if (v30)
    {
      __chkstk_darwin(v31);
      sub_10C7C(&qword_124480);
      sub_83BCC();
      uint64_t v32 = v95;
      sub_E6EE0();
      uint64_t v33 = sub_10C7C(&qword_124470);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      goto LABEL_6;
    }
  }
  uint64_t v34 = sub_10C7C(&qword_124470);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v95, 1, 1, v34);
LABEL_6:
  uint64_t v35 = *(void *)(a1 + 120);
  char v36 = *(unsigned char *)(a1 + 128);
  uint64_t v106 = *(void *)(a1 + 112);
  uint64_t v107 = v35;
  char v108 = v36;
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  if (v98 == 1)
  {
    sub_E6E10();
    uint64_t v37 = v96;
    sub_89148((uint64_t)v14, v96);
    uint64_t v38 = type metadata accessor for GCSProfileHapticsView(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  }
  else
  {
    uint64_t v39 = type metadata accessor for GCSProfileHapticsView(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v96, 1, 1, v39);
  }
  uint64_t v40 = *(void *)(a1 + 144);
  char v41 = *(unsigned char *)(a1 + 152);
  uint64_t v106 = *(void *)(a1 + 136);
  uint64_t v107 = v40;
  char v108 = v41;
  sub_E6DE0();
  uint64_t v91 = v7;
  uint64_t v89 = v12;
  uint64_t v88 = v14;
  if (v98 == 1)
  {
    sub_E6E10();
    uint64_t v42 = *(void *)(a1 + 208);
    long long v43 = *(_OWORD *)(a1 + 248);
    long long v44 = *(_OWORD *)(a1 + 264);
    uint64_t v45 = *(void *)(a1 + 280);
    uint64_t v98 = *(void *)(a1 + 200);
    *(void *)long long v99 = v42;
    long long v46 = *(_OWORD *)(a1 + 232);
    *(_OWORD *)&v99[8] = *(_OWORD *)(a1 + 216);
    long long v100 = v46;
    long long v101 = v43;
    long long v102 = v44;
    uint64_t v103 = v45;
    sub_10C7C(&qword_1230C0);
    sub_E6E10();
    uint64_t v47 = v97;
    sub_43228((uint64_t)v14, (uint64_t)&v106, v97);
    uint64_t v48 = type metadata accessor for GCSProfileLightView();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  }
  else
  {
    uint64_t v49 = type metadata accessor for GCSProfileLightView();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v97, 1, 1, v49);
  }
  uint64_t v50 = v19;
  uint64_t v98 = *(void *)(a1 + 40);
  *(_OWORD *)long long v99 = *(_OWORD *)(a1 + 48);
  sub_10C7C(&qword_124370);
  sub_E6DE0();
  uint64_t v51 = *(void *)v105;
  *(void *)uint64_t v105 = *(void *)(a1 + 64);
  *(_OWORD *)&v105[8] = *(_OWORD *)(a1 + 72);
  sub_10C7C(&qword_1232A8);
  sub_E6E10();
  uint64_t v52 = v98;
  uint64_t v53 = *(void *)v99;
  uint64_t v54 = *(void *)&v99[8];
  *(void *)uint64_t v105 = *(void *)(a1 + 88);
  *(_OWORD *)&v105[8] = *(_OWORD *)(a1 + 96);
  sub_10C7C(&qword_122848);
  sub_E6E10();
  uint64_t v55 = v98;
  uint64_t v56 = *(void *)v99;
  uint64_t v57 = *(void *)&v99[8];
  uint64_t v58 = a1 + *(int *)(v50 + 64);
  *(void *)uint64_t v105 = *(void *)v58;
  *(_OWORD *)&v105[8] = *(_OWORD *)(v58 + 8);
  sub_10C7C(&qword_1232B0);
  sub_E6E10();
  sub_3AF18(v51, v52, v53, v54, v55, v56, v57, v98, &v98, *(uint64_t *)v99, *(uint64_t *)&v99[8]);
  uint64_t v59 = *(void *)(a1 + 176);
  *(_OWORD *)uint64_t v105 = *(_OWORD *)(a1 + 160);
  *(void *)&v105[16] = v59;
  sub_10C7C(&qword_124378);
  sub_E6DE0();
  uint64_t v60 = v104;
  if (v104)
  {
    uint64_t v61 = (uint64_t)v88;
    sub_E6E10();
    uint64_t v62 = (uint64_t)v91;
    sub_2FB58(v60, v61, (uint64_t)v91);
    uint64_t v63 = type metadata accessor for GCSProfileShareGestureView();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    uint64_t v64 = type metadata accessor for GCSProfileShareGestureView();
    uint64_t v62 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v91, 1, 1, v64);
  }
  uint64_t v65 = v90;
  sub_83B04(v95, v90, &qword_124468);
  uint64_t v66 = v92;
  sub_83B04(v96, v92, &qword_124460);
  uint64_t v67 = v94;
  sub_83B04(v97, v94, &qword_124458);
  uint64_t v68 = v98;
  uint64_t v69 = *(void *)v99;
  uint64_t v70 = *(void *)&v99[8];
  uint64_t v71 = *(void *)&v99[16];
  uint64_t v88 = (char *)*((void *)&v100 + 1);
  uint64_t v72 = v100;
  uint64_t v73 = *((void *)&v101 + 1);
  uint64_t v89 = v101;
  uint64_t v83 = *((void *)&v102 + 1);
  uint64_t v84 = v102;
  sub_83B04(v62, v93, &qword_124450);
  uint64_t v74 = v65;
  uint64_t v75 = v87;
  sub_83B04(v74, v87, &qword_124468);
  uint64_t v76 = (int *)sub_10C7C(&qword_124478);
  sub_83B04(v66, v75 + v76[12], &qword_124460);
  sub_83B04(v67, v75 + v76[16], &qword_124458);
  uint64_t v77 = (uint64_t *)(v75 + v76[20]);
  uint64_t v86 = v68;
  *uint64_t v77 = v68;
  v77[1] = v69;
  v77[2] = v70;
  v77[3] = v71;
  uint64_t v78 = v88;
  v77[4] = v72;
  v77[5] = (uint64_t)v78;
  v77[6] = v89;
  v77[7] = v73;
  uint64_t v85 = v73;
  uint64_t v79 = v83;
  v77[8] = v84;
  v77[9] = v79;
  uint64_t v80 = v75 + v76[24];
  uint64_t v81 = v93;
  sub_83B04(v93, v80, &qword_124450);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_83B68((uint64_t)v91, &qword_124450);
  sub_83B68(v97, &qword_124458);
  sub_83B68(v96, &qword_124460);
  sub_83B68(v95, &qword_124468);
  sub_83B68(v81, &qword_124450);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_83B68(v94, &qword_124458);
  sub_83B68(v92, &qword_124460);
  return sub_83B68(v90, &qword_124468);
}

uint64_t sub_817E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_E6330();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GCSProfileContentView();
  uint64_t v6 = v5 - 8;
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v38 + 64);
  __chkstk_darwin(v5);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10C7C(&qword_124490);
  uint64_t v41 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  char v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10C7C(&qword_1244A0);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_B7108(0xD000000000000012, (void *)0x80000000000F2760);
  uint64_t v13 = v12;
  uint64_t v14 = a1 + *(int *)(v6 + 76);
  long long v15 = *(_OWORD *)v14;
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v14 + 24);
  long long v47 = v15;
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  sub_10C7C(&qword_122A98);
  sub_E6E10();
  uint64_t v50 = v11;
  uint64_t v51 = v13;
  sub_187B0();
  sub_E6F80();
  uint64_t v18 = a1;
  uint64_t v19 = a1;
  uint64_t v20 = v37;
  sub_83A3C(v19, v37, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  unint64_t v21 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v22 = swift_allocObject();
  sub_83CF8(v20, v22 + v21);
  uint64_t v23 = v40;
  sub_E6320();
  sub_83CA8(&qword_124498, &qword_124490);
  uint64_t v24 = v23;
  uint64_t v25 = v39;
  uint64_t v26 = v36;
  sub_E6A80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v25);
  sub_83A3C(v18, v20, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v27 = swift_allocObject();
  sub_83CF8(v20, v27 + v21);
  uint64_t v29 = v42;
  uint64_t v28 = v43;
  uint64_t v30 = v46;
  uint64_t v31 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v46, v35, v43);
  uint64_t v32 = (uint64_t (**)())(v30 + *(int *)(sub_10C7C(&qword_124480) + 36));
  *uint64_t v32 = sub_83FF4;
  v32[1] = (uint64_t (*)())v27;
  v32[2] = 0;
  v32[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v31, v28);
}

uint64_t sub_81C9C(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for GCSProfileContentView() + 68));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  uint64_t v18 = *v4;
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  sub_10C7C(&qword_122A98);
  sub_E6DE0();
  uint64_t v9 = v22;
  unint64_t v10 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    uint64_t v18 = v5;
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    sub_E6DE0();
    uint64_t v13 = v22;
    unint64_t v14 = v23;
    sub_10C7C(&qword_122BB0);
    sub_E6DE0();
    long long v15 = &v3[*(int *)(v17 + 20)];
    swift_bridgeObjectRelease();
    *(void *)long long v15 = v13;
    *((void *)v15 + 1) = v14;
    return sub_E6DF0();
  }
  return result;
}

uint64_t sub_81DF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GCSProfileContentView();
  sub_10C7C(&qword_122BB0);
  sub_E6DE0();
  uint64_t v7 = &v5[*(int *)(v3 + 28)];
  uint64_t v9 = *(void *)v7;
  uint64_t v8 = *((void *)v7 + 1);
  swift_bridgeObjectRetain();
  sub_83AA4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  unint64_t v10 = (long long *)(a1 + *(int *)(v6 + 68));
  long long v11 = *v10;
  uint64_t v13 = *((void *)v10 + 2);
  uint64_t v12 = *((void *)v10 + 3);
  long long v16 = v11;
  uint64_t v17 = v13;
  uint64_t v18 = v12;
  v15[0] = v9;
  v15[1] = v8;
  sub_10C7C(&qword_122A98);
  return sub_E6DF0();
}

uint64_t sub_81F04()
{
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();

  return sub_E63F0();
}

__n128 sub_81F48@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, long long a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,uint64_t a24,__n128 a25,unint64_t a26,unint64_t a27)
{
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = swift_getKeyPath();
  *(unsigned char *)(a9 + 32) = 0;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(void *)(a9 + 112) = a12;
  *(void *)(a9 + 12sub_E59A4(2, 18, 1, 0) = a13;
  *(unsigned char *)(a9 + 128) = a14;
  *(void *)(a9 + 136) = a15;
  *(void *)(a9 + 144) = a16;
  *(unsigned char *)(a9 + 152) = a17;
  *(_OWORD *)(a9 + 16sub_E59A4(2, 18, 1, 0) = a18;
  *(void *)(a9 + 176) = a19;
  sub_E6D10();
  long long v29 = *(_OWORD *)(a21 + 48);
  *(_OWORD *)(a9 + 232) = *(_OWORD *)(a21 + 32);
  *(_OWORD *)(a9 + 248) = v29;
  *(_OWORD *)(a9 + 264) = *(_OWORD *)(a21 + 64);
  long long v30 = *(_OWORD *)(a21 + 16);
  *(_OWORD *)(a9 + 20sub_E59A4(2, 18, 1, 0) = *(_OWORD *)a21;
  *(unsigned char *)(a9 + 184) = v39;
  *(void *)(a9 + 192) = v40;
  *(void *)(a9 + 28sub_E59A4(2, 18, 1, 0) = *(void *)(a21 + 80);
  *(_OWORD *)(a9 + 216) = v30;
  uint64_t v31 = (int *)type metadata accessor for GCSProfileContentView();
  sub_2FBC4(a22, a9 + v31[15]);
  uint64_t v32 = a9 + v31[16];
  *(_OWORD *)uint64_t v32 = a23;
  *(void *)(v32 + 16) = a24;
  uint64_t v33 = (__n128 *)(a9 + v31[17]);
  __n128 result = a25;
  *uint64_t v33 = a25;
  v33[1].n128_u64[0] = a26;
  v33[1].n128_u64[1] = a27;
  return result;
}

uint64_t sub_8210C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_82130()
{
  return sub_E69D0();
}

uint64_t sub_8214C@<X0>(uint64_t a1@<X8>)
{
  return sub_80C40(v1, a1);
}

uint64_t sub_82154(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v52 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = (void *)a2[1];
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[3];
    char v9 = *((unsigned char *)a2 + 32);
    id v11 = v6;
    sub_19100(v8, v9);
    *(void *)(v4 + 24) = v8;
    *(unsigned char *)(v4 + 32) = v9;
    uint64_t v12 = a2[6];
    *(void *)(v4 + 4sub_E59A4(2, 18, 1, 0) = a2[5];
    *(void *)(v4 + 48) = v12;
    uint64_t v13 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v13;
    uint64_t v14 = a2[10];
    *(void *)(v4 + 72) = a2[9];
    *(void *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v14;
    uint64_t v54 = a2[12];
    *(void *)(v4 + 88) = a2[11];
    *(void *)(v4 + 96) = v54;
    uint64_t v55 = a2[14];
    *(void *)(v4 + 104) = a2[13];
    *(void *)(v4 + 112) = v55;
    *(void *)(v4 + 12sub_E59A4(2, 18, 1, 0) = a2[15];
    *(unsigned char *)(v4 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v56 = a2[18];
    *(void *)(v4 + 136) = a2[17];
    *(void *)(v4 + 144) = v56;
    *(unsigned char *)(v4 + 152) = *((unsigned char *)a2 + 152);
    uint64_t v57 = a2[21];
    *(void *)(v4 + 16sub_E59A4(2, 18, 1, 0) = a2[20];
    *(void *)(v4 + 168) = v57;
    uint64_t v58 = (void *)a2[22];
    *(void *)(v4 + 176) = v58;
    *(unsigned char *)(v4 + 184) = *((unsigned char *)a2 + 184);
    uint64_t v59 = a2[25];
    *(void *)(v4 + 192) = a2[24];
    *(void *)(v4 + 20sub_E59A4(2, 18, 1, 0) = v59;
    *(void *)(v4 + 208) = a2[26];
    *(_OWORD *)(v4 + 216) = *(_OWORD *)(a2 + 27);
    uint64_t v15 = a2[30];
    *(void *)(v4 + 232) = a2[29];
    *(void *)(v4 + 24sub_E59A4(2, 18, 1, 0) = v15;
    uint64_t v16 = a2[32];
    *(void *)(v4 + 248) = a2[31];
    *(void *)(v4 + 256) = v16;
    uint64_t v17 = a2[34];
    *(void *)(v4 + 264) = a2[33];
    *(void *)(v4 + 272) = v17;
    *(void *)(v4 + 28sub_E59A4(2, 18, 1, 0) = a2[35];
    uint64_t v18 = a3[15];
    uint64_t v19 = (void *)(v4 + v18);
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v22 = v58;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v23 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    uint64_t v24 = (char *)v19 + v23;
    uint64_t v25 = v20 + v23;
    uint64_t v26 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v28 = v27[5];
    long long v29 = &v24[v28];
    long long v30 = (void *)(v25 + v28);
    uint64_t v31 = v30[1];
    *(void *)long long v29 = *v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v27[6];
    uint64_t v33 = &v24[v32];
    uint64_t v34 = (void *)(v25 + v32);
    uint64_t v60 = v34[1];
    *(void *)uint64_t v33 = *v34;
    *((void *)v33 + 1) = v60;
    uint64_t v35 = v27[7];
    char v36 = &v24[v35];
    uint64_t v37 = (void *)(v25 + v35);
    uint64_t v38 = v37[1];
    *(void *)char v36 = *v37;
    *((void *)v36 + 1) = v38;
    v24[v27[8]] = *(unsigned char *)(v25 + v27[8]);
    v24[v27[9]] = *(unsigned char *)(v25 + v27[9]);
    uint64_t v39 = v27[10];
    uint64_t v40 = &v24[v39];
    uint64_t v41 = (void *)(v25 + v39);
    uint64_t v42 = v41[1];
    *(void *)uint64_t v40 = *v41;
    *((void *)v40 + 1) = v42;
    *(void *)&v24[v27[11]] = *(void *)(v25 + v27[11]);
    v24[v27[12]] = *(unsigned char *)(v25 + v27[12]);
    *(void *)&v24[v27[13]] = *(void *)(v25 + v27[13]);
    *(void *)&v24[v27[14]] = *(void *)(v25 + v27[14]);
    *(void *)&v24[v27[15]] = *(void *)(v25 + v27[15]);
    v24[v27[16]] = *(unsigned char *)(v25 + v27[16]);
    v24[v27[17]] = *(unsigned char *)(v25 + v27[17]);
    *(void *)&v24[v27[18]] = *(void *)(v25 + v27[18]);
    uint64_t v43 = a3[16];
    uint64_t v44 = a3[17];
    uint64_t v45 = (void *)(v4 + v43);
    uint64_t v46 = (uint64_t *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    _OWORD v45[2] = v46[2];
    uint64_t v48 = (void *)(v4 + v44);
    uint64_t v49 = (uint64_t *)((char *)a2 + v44);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_82594(uint64_t a1, uint64_t a2)
{
  sub_19048(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_82794(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v5;
  sub_19100(v7, v8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v52 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v52;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v53 = *(void *)(a2 + 168);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v53;
  uint64_t v54 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v54;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v55 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v55;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v15 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 24sub_E59A4(2, 18, 1, 0) = v15;
  uint64_t v16 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v16;
  uint64_t v17 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v17;
  *(void *)(a1 + 28sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 280);
  uint64_t v18 = a3[15];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v56 = *(void *)(a2 + v18 + 8);
  *uint64_t v19 = *(void *)(a2 + v18);
  v19[1] = v56;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v21 = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v23 = (char *)v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v27 = v26[5];
  uint64_t v28 = &v23[v27];
  long long v29 = (void *)(v24 + v27);
  uint64_t v30 = v29[1];
  *(void *)uint64_t v28 = *v29;
  *((void *)v28 + 1) = v30;
  uint64_t v31 = v26[6];
  uint64_t v32 = &v23[v31];
  uint64_t v33 = (void *)(v24 + v31);
  uint64_t v57 = v33[1];
  *(void *)uint64_t v32 = *v33;
  *((void *)v32 + 1) = v57;
  uint64_t v34 = v26[7];
  uint64_t v35 = &v23[v34];
  char v36 = (void *)(v24 + v34);
  uint64_t v37 = v36[1];
  *(void *)uint64_t v35 = *v36;
  *((void *)v35 + 1) = v37;
  v23[v26[8]] = *(unsigned char *)(v24 + v26[8]);
  v23[v26[9]] = *(unsigned char *)(v24 + v26[9]);
  uint64_t v38 = v26[10];
  uint64_t v39 = &v23[v38];
  uint64_t v40 = (void *)(v24 + v38);
  uint64_t v41 = v40[1];
  *(void *)uint64_t v39 = *v40;
  *((void *)v39 + 1) = v41;
  *(void *)&v23[v26[11]] = *(void *)(v24 + v26[11]);
  v23[v26[12]] = *(unsigned char *)(v24 + v26[12]);
  *(void *)&v23[v26[13]] = *(void *)(v24 + v26[13]);
  *(void *)&v23[v26[14]] = *(void *)(v24 + v26[14]);
  *(void *)&v23[v26[15]] = *(void *)(v24 + v26[15]);
  v23[v26[16]] = *(unsigned char *)(v24 + v26[16]);
  v23[v26[17]] = *(unsigned char *)(v24 + v26[17]);
  *(void *)&v23[v26[18]] = *(void *)(v24 + v26[18]);
  uint64_t v42 = a3[16];
  uint64_t v43 = a3[17];
  uint64_t v44 = (void *)(a1 + v42);
  uint64_t v45 = (void *)(a2 + v42);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  v44[2] = v45[2];
  uint64_t v47 = (void *)(a1 + v43);
  uint64_t v48 = (void *)(a2 + v43);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = v48[3];
  v47[2] = v48[2];
  v47[3] = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_82B8C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_19100(v9, v10);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_19048(v11, v12);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  uint64_t v13 = *(void **)(a1 + 176);
  uint64_t v14 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v14;
  id v15 = v14;

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_release();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 28sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 280);
  swift_retain();
  swift_release();
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_retain();
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  uint64_t v19 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v20 = v17 + v19;
  uint64_t v21 = v18 + v19;
  uint64_t v22 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v24 = v23[5];
  uint64_t v25 = (void *)(v20 + v24);
  uint64_t v26 = (void *)(v21 + v24);
  void *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v23[6];
  uint64_t v28 = (void *)(v20 + v27);
  long long v29 = (void *)(v21 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v23[7];
  uint64_t v31 = (void *)(v20 + v30);
  uint64_t v32 = (void *)(v21 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + v23[8]) = *(unsigned char *)(v21 + v23[8]);
  *(unsigned char *)(v20 + v23[9]) = *(unsigned char *)(v21 + v23[9]);
  uint64_t v33 = v23[10];
  uint64_t v34 = (void *)(v20 + v33);
  uint64_t v35 = (void *)(v21 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v20 + v23[11]) = *(void *)(v21 + v23[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + v23[12]) = *(unsigned char *)(v21 + v23[12]);
  *(void *)(v20 + v23[13]) = *(void *)(v21 + v23[13]);
  *(void *)(v20 + v23[14]) = *(void *)(v21 + v23[14]);
  *(void *)(v20 + v23[15]) = *(void *)(v21 + v23[15]);
  *(unsigned char *)(v20 + v23[16]) = *(unsigned char *)(v21 + v23[16]);
  *(unsigned char *)(v20 + v23[17]) = *(unsigned char *)(v21 + v23[17]);
  *(void *)(v20 + v23[18]) = *(void *)(v21 + v23[18]);
  uint64_t v36 = a3[16];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)(a1 + v36) = *(void *)(a2 + v36);
  swift_retain();
  swift_release();
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_retain();
  swift_release();
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[17];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  *(void *)(a1 + v39) = *(void *)(a2 + v39);
  swift_retain();
  swift_release();
  v40[1] = v41[1];
  swift_retain();
  swift_release();
  _OWORD v40[2] = v41[2];
  v40[3] = v41[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_83104(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_OWORD *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v7 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 20sub_E59A4(2, 18, 1, 0) = v7;
  long long v8 = *(_OWORD *)(a2 + 232);
  long long v9 = *(_OWORD *)(a2 + 248);
  long long v10 = *(_OWORD *)(a2 + 264);
  *(void *)(a1 + 28sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = v10;
  *(_OWORD *)(a1 + 248) = v9;
  *(_OWORD *)(a1 + 232) = v8;
  uint64_t v11 = a3[15];
  char v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  void *v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  uint64_t v15 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v16 = (char *)v12 + v15;
  uint64_t v17 = v13 + v15;
  uint64_t v18 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v16[v19[5]] = *(_OWORD *)(v17 + v19[5]);
  *(_OWORD *)&v16[v19[6]] = *(_OWORD *)(v17 + v19[6]);
  *(_OWORD *)&v16[v19[7]] = *(_OWORD *)(v17 + v19[7]);
  v16[v19[8]] = *(unsigned char *)(v17 + v19[8]);
  v16[v19[9]] = *(unsigned char *)(v17 + v19[9]);
  *(_OWORD *)&v16[v19[10]] = *(_OWORD *)(v17 + v19[10]);
  *(void *)&v16[v19[11]] = *(void *)(v17 + v19[11]);
  v16[v19[12]] = *(unsigned char *)(v17 + v19[12]);
  *(void *)&v16[v19[13]] = *(void *)(v17 + v19[13]);
  *(void *)&v16[v19[14]] = *(void *)(v17 + v19[14]);
  *(void *)&v16[v19[15]] = *(void *)(v17 + v19[15]);
  v16[v19[16]] = *(unsigned char *)(v17 + v19[16]);
  v16[v19[17]] = *(unsigned char *)(v17 + v19[17]);
  *(void *)&v16[v19[18]] = *(void *)(v17 + v19[18]);
  uint64_t v20 = a3[16];
  uint64_t v21 = a3[17];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  uint64_t v24 = (_OWORD *)(a1 + v21);
  uint64_t v25 = (_OWORD *)(a2 + v21);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  return a1;
}

uint64_t sub_83344(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v7;
  sub_19048(v8, v9);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 160);
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  long long v10 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  *(void *)(a1 + 20sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 200);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 248);
  *(void *)(a1 + 24sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 28sub_E59A4(2, 18, 1, 0) = v13;
  swift_release();
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_release();
  uint64_t v17 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v18 = v15 + v17;
  uint64_t v19 = v16 + v17;
  uint64_t v20 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v22 = v21[5];
  uint64_t v23 = (void *)(v18 + v22);
  uint64_t v24 = (uint64_t *)(v19 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v21[6];
  uint64_t v28 = (void *)(v18 + v27);
  long long v29 = (uint64_t *)(v19 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v21[7];
  uint64_t v33 = (void *)(v18 + v32);
  uint64_t v34 = (uint64_t *)(v19 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + v21[8]) = *(unsigned char *)(v19 + v21[8]);
  *(unsigned char *)(v18 + v21[9]) = *(unsigned char *)(v19 + v21[9]);
  uint64_t v37 = v21[10];
  uint64_t v38 = (void *)(v18 + v37);
  uint64_t v39 = (uint64_t *)(v19 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  *(void *)(v18 + v21[11]) = *(void *)(v19 + v21[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + v21[12]) = *(unsigned char *)(v19 + v21[12]);
  *(void *)(v18 + v21[13]) = *(void *)(v19 + v21[13]);
  *(void *)(v18 + v21[14]) = *(void *)(v19 + v21[14]);
  *(void *)(v18 + v21[15]) = *(void *)(v19 + v21[15]);
  *(unsigned char *)(v18 + v21[16]) = *(unsigned char *)(v19 + v21[16]);
  *(unsigned char *)(v18 + v21[17]) = *(unsigned char *)(v19 + v21[17]);
  *(void *)(v18 + v21[18]) = *(void *)(v19 + v21[18]);
  uint64_t v42 = a3[16];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(void *)(a1 + v42) = *(void *)(a2 + v42);
  swift_release();
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  swift_release();
  *(void *)(v43 + 16) = *(void *)(v44 + 16);
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[17];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  *(void *)(a1 + v45) = *v47;
  swift_release();
  v46[1] = v47[1];
  swift_release();
  uint64_t v48 = v47[3];
  v46[2] = v47[2];
  v46[3] = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_83738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8374C);
}

uint64_t sub_8374C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_83800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_83814);
}

uint64_t sub_83814(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_838C0()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_839A4()
{
  unint64_t result = qword_124430;
  if (!qword_124430)
  {
    sub_11B60(&qword_124438);
    sub_83CA8(&qword_124440, &qword_124448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124430);
  }
  return result;
}

uint64_t sub_83A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_83AA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_83B04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_83B68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_83BC4@<X0>(uint64_t a1@<X8>)
{
  return sub_817E8(*(void *)(v1 + 16), a1);
}

unint64_t sub_83BCC()
{
  unint64_t result = qword_124488;
  if (!qword_124488)
  {
    sub_11B60(&qword_124480);
    sub_11B60(&qword_124490);
    sub_83CA8(&qword_124498, &qword_124490);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124488);
  }
  return result;
}

uint64_t sub_83CA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_83CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSProfileContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_83D5C()
{
  return sub_8400C(sub_81C9C);
}

uint64_t sub_83D78()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSProfileContentView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  sub_19048(*(void *)(v6 + 24), *(unsigned char *)(v6 + 32));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v6 + v1[17];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v9 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_83FF4()
{
  return sub_8400C(sub_81DF0);
}

uint64_t sub_8400C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for GCSProfileContentView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t GCSElement.id.getter()
{
  id v1 = [v0 localizedName];
  uint64_t v2 = sub_E7110();

  return v2;
}

void *sub_840DC()
{
  return &protocol witness table for String;
}

void sub_840E8(uint64_t *a1@<X8>)
{
  id v3 = [*v1 localizedName];
  uint64_t v4 = sub_E7110();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

BOOL sub_84140(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_84154()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

void sub_8419C()
{
  sub_E7680(*v0);
}

Swift::Int sub_841C8()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

id sub_8420C()
{
  Swift::UInt v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_8671C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_8429C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_8671C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

BOOL sub_84324(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_84334(uint64_t a1, char a2)
{
}

Swift::Int sub_8435C(char a1)
{
  return sub_E76A0();
}

BOOL sub_843A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_843BC()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

void sub_84404()
{
  sub_E7680(*v0);
}

Swift::Int sub_84430()
{
  Swift::UInt v1 = *v0;
  sub_E7670();
  sub_E7680(v1);
  return sub_E76A0();
}

uint64_t sub_84474()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_8447C(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result & 1;
  return result;
}

uint64_t (*sub_84488())()
{
  return nullsub_54;
}

id sub_844AC()
{
  return *(id *)(v0 + 24);
}

uint64_t sub_844B4()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_84504()
{
  return sub_E6DF0();
}

uint64_t (*sub_84558(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 48);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_845F8;
}

uint64_t sub_845FC()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_84650()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_846A0()
{
  return sub_E6DF0();
}

uint64_t (*sub_846F4(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  v3[3] = v4;
  v3[4] = v5;
  char v6 = *(unsigned char *)(v1 + 72);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  swift_retain();
  swift_retain();
  v3[5] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_84794;
}

void sub_84798(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_E6DF0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_84808()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_8485C()
{
  sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return v1;
}

uint64_t sub_848AC()
{
  return sub_E6DF0();
}

void (*sub_84900(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  v3[5] = v4;
  v3[6] = v5;
  char v6 = (void *)v1[12];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  id v7 = v6;
  swift_retain();
  swift_retain();
  v3[8] = sub_10C7C(&qword_122B68);
  sub_E6DE0();
  return sub_849A8;
}

void sub_849A8(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)char v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_84A60()
{
  sub_10C7C(&qword_122B68);
  sub_E6E10();
  return v1;
}

uint64_t sub_84AB4()
{
  return sub_84DAC((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileListSectionViewRow()
{
  uint64_t result = qword_129320;
  if (!qword_129320) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_84B18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileListSectionViewRow();
  sub_87F90(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_87FF8(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void (*sub_84BE0(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileListSectionViewRow();
  sub_880BC(v1 + *(int *)(v6 + 40), (uint64_t)v5, &qword_122BB0);
  sub_E6DE0();
  return sub_84CCC;
}

void sub_84CCC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_87F90(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_88138((uint64_t)v2, &qword_122BB0);
    sub_87FF8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  else
  {
    sub_E6DF0();
    sub_88138((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_84D94()
{
  return sub_84DAC((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_84DAC(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileListSectionViewRow();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

__n128 sub_84E00@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileListSectionViewRow();
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_84EB4()
{
  return sub_E6DF0();
}

void (*sub_84F68(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  __n128 v4 = (long long *)(v1 + *(int *)(type metadata accessor for GCSProfileListSectionViewRow() + 44));
  long long v6 = v4[6];
  long long v5 = v4[7];
  long long v7 = v4[5];
  v3[6] = v6;
  v3[7] = v5;
  long long v8 = v4[7];
  v3[8] = v4[8];
  long long v10 = v4[2];
  long long v9 = v4[3];
  long long v11 = v4[1];
  v3[2] = v10;
  v3[3] = v9;
  long long v12 = v4[3];
  long long v14 = v4[4];
  long long v13 = v4[5];
  v3[4] = v14;
  v3[5] = v13;
  long long v15 = v4[1];
  long long v16 = *v4;
  *long long v3 = *v4;
  v3[1] = v15;
  *(_OWORD *)((char *)v3 + 248) = v6;
  long long v17 = v4[8];
  *(_OWORD *)((char *)v3 + 264) = v8;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v17;
  *(_OWORD *)((char *)v3 + 184) = v10;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(_OWORD *)((char *)v3 + 216) = v14;
  *(_OWORD *)((char *)v3 + 232) = v7;
  *(_OWORD *)((char *)v3 + 152) = v16;
  *((void *)v3 + 18) = *((void *)v4 + 18);
  *((void *)v3 + 37) = *((void *)v4 + 18);
  *(_OWORD *)((char *)v3 + 168) = v11;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_8506C;
}

void sub_8506C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_85204@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSProfileListSectionViewRow();
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

id sub_852C0()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for GCSProfileListSectionViewRow() + 48));

  return v1;
}

uint64_t sub_852F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GCSProfileListSectionViewRow();
  uint64_t v3 = __chkstk_darwin(v2);
  long long v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  long long v8 = (char *)&v39 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  long long v11 = (char *)&v39 - v10;
  uint64_t v12 = *(int *)(v9 + 48);
  uint64_t v13 = (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & **(void **)(v0 + v12))))();
  uint64_t v14 = sub_87F90(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  if (v13)
  {
    uint64_t v15 = sub_87FF8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  }
  else
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.offset
                                             + (swift_isaMask & **(void **)&v11[*(int *)(v2 + 48)])))(v14);
    uint64_t v15 = sub_87FF8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
    if (!v16) {
      return sub_B7108(0xD000000000000018, (void *)0x80000000000F2800);
    }
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.size + (swift_isaMask & **(void **)(v1 + v12))))(v15);
  uint64_t v18 = sub_87F90(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  if (v17 < 1)
  {
    uint64_t v20 = sub_87FF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  }
  else
  {
    uint64_t v19 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.offset
                                             + (swift_isaMask & **(void **)&v8[*(int *)(v2 + 48)])))(v18);
    uint64_t v20 = sub_87FF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
    if (!v19)
    {
      sub_10C7C(&qword_122298);
      uint64_t v21 = swift_allocObject();
      long long v39 = xmmword_EBBE0;
      *(_OWORD *)(v21 + 16) = xmmword_EBBE0;
      uint64_t v22 = (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & **(void **)(v1 + v12))))();
      *(void *)(v21 + 56) = &type metadata for Int;
      *(void *)(v21 + 64) = &protocol witness table for Int;
      *(void *)(v21 + 32) = v22;
LABEL_13:
      Swift::String v36 = String.localized(with:)((Swift::OpaquePointer)v21);
      swift_bridgeObjectRelease();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v39;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_17068();
      *(Swift::String *)(v32 + 32) = v36;
      goto LABEL_14;
    }
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.size + (swift_isaMask & **(void **)(v1 + v12))))(v20);
  uint64_t v24 = sub_87F90(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  if (v23)
  {
    sub_87FF8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
  }
  else
  {
    uint64_t v34 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.offset
                                             + (swift_isaMask & **(void **)&v5[*(int *)(v2 + 48)])))(v24);
    sub_87FF8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GCSProfileListSectionViewRow);
    if (v34 > 0)
    {
      sub_10C7C(&qword_122298);
      uint64_t v21 = swift_allocObject();
      long long v39 = xmmword_EBBE0;
      *(_OWORD *)(v21 + 16) = xmmword_EBBE0;
      uint64_t v35 = (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & **(void **)(v1 + v12))))();
      *(void *)(v21 + 56) = &type metadata for Int;
      *(void *)(v21 + 64) = &protocol witness table for Int;
      *(void *)(v21 + 32) = v35;
      goto LABEL_13;
    }
  }
  sub_B7108(0xD000000000000018, (void *)0x80000000000F27A0);
  sub_10C7C(&qword_122298);
  uint64_t v25 = swift_allocObject();
  long long v39 = xmmword_EBBE0;
  *(_OWORD *)(v25 + 16) = xmmword_EBBE0;
  long long v26 = *(void **)(v1 + v12);
  uint64_t v27 = (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v26)))();
  *(void *)(v25 + 56) = &type metadata for Int;
  *(void *)(v25 + 64) = &protocol witness table for Int;
  *(void *)(v25 + 32) = v27;
  Swift::String v28 = String.localized(with:)((Swift::OpaquePointer)v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_B7108(0xD000000000000012, (void *)0x80000000000F27C0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v39;
  uint64_t v30 = (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v26)))();
  *(void *)(v29 + 56) = &type metadata for Int;
  *(void *)(v29 + 64) = &protocol witness table for Int;
  *(void *)(v29 + 32) = v30;
  Swift::String v31 = String.localized(with:)((Swift::OpaquePointer)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_EB580;
  *(void *)(v32 + 56) = &type metadata for String;
  unint64_t v33 = sub_17068();
  *(Swift::String *)(v32 + 32) = v28;
  *(void *)(v32 + 96) = &type metadata for String;
  *(void *)(v32 + 104) = v33;
  *(void *)(v32 + 64) = v33;
  *(Swift::String *)(v32 + 72) = v31;
LABEL_14:
  uint64_t countAndFlagsBits = String.localized(with:)((Swift::OpaquePointer)v32)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_859CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10C7C(&qword_1244A8);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10C7C(&qword_1244B0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v5 = sub_E6560();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v10 = sub_10C7C(&qword_1244B8);
  sub_85B74(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  sub_E6F30();
  sub_E63C0();
  sub_880BC((uint64_t)v5, (uint64_t)v9, &qword_1244A8);
  long long v11 = &v9[*(int *)(v7 + 44)];
  long long v12 = v16[5];
  *((_OWORD *)v11 + 4) = v16[4];
  *((_OWORD *)v11 + 5) = v12;
  *((_OWORD *)v11 + 6) = v16[6];
  long long v13 = v16[1];
  *(_OWORD *)long long v11 = v16[0];
  *((_OWORD *)v11 + 1) = v13;
  long long v14 = v16[3];
  *((_OWORD *)v11 + 2) = v16[2];
  *((_OWORD *)v11 + 3) = v14;
  sub_88138((uint64_t)v5, &qword_1244A8);
  return sub_88058((uint64_t)v9, a1, &qword_1244B0);
}

uint64_t sub_85B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v114 = a2;
  uint64_t v116 = sub_E6C40();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v112 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_E6AD0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_E63B0();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (_OWORD *)((char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10C7C(&qword_1233C8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  long long v14 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10C7C(&qword_1233D0) - 8;
  __chkstk_darwin(v110);
  uint64_t v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10C7C(&qword_1233D8) - 8;
  uint64_t v17 = __chkstk_darwin(v113);
  uint64_t v117 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v111 = (uint64_t)&v109 - v20;
  __chkstk_darwin(v19);
  uint64_t v119 = (uint64_t)&v109 - v21;
  uint64_t v22 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = sub_E65A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  __asm { FMOV            V0.2D, #7.0 }
  _OWORD *v10 = _Q0;
  sub_10C7C(&qword_1233E0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_EB580;
  uint64_t v31 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v32(v6, enum case for Color.RGBColorSpace.sRGB(_:), v3);
  *(void *)(v30 + 32) = sub_E6C10();
  v32(v6, v31, v3);
  *(void *)(v30 + 4sub_E59A4(2, 18, 1, 0) = sub_E6C10();
  *(void *)&long long v123 = v30;
  sub_E7230();
  sub_E6EF0();
  sub_E62E0();
  sub_87F90((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  unint64_t v33 = &v14[*(int *)(v12 + 60)];
  long long v34 = v121;
  *(_OWORD *)unint64_t v33 = v120;
  *((_OWORD *)v33 + 1) = v34;
  *((void *)v33 + 4) = v122;
  *(_WORD *)&v14[*(int *)(v12 + 64)] = 256;
  sub_87FF8((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v35 = sub_E6F30();
  uint64_t v37 = v36;
  uint64_t v38 = v118;
  id v39 = [*(id *)(v118 + 24) sfSymbolsName];
  sub_E7110();

  sub_E6C30();
  uint64_t v40 = v115;
  uint64_t v41 = v112;
  uint64_t v42 = v116;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v112, enum case for Image.ResizingMode.stretch(_:), v116);
  uint64_t v67 = sub_E6C90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  uint64_t v43 = sub_E6BA0();
  LOBYTE(v4sub_E59A4(2, 18, 1, 0) = sub_E6770();
  sub_E6210();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  sub_880BC((uint64_t)v14, (uint64_t)v16, &qword_1233C8);
  uint64_t v52 = &v16[*(int *)(v110 + 44)];
  *(void *)uint64_t v52 = v67;
  *((void *)v52 + 1) = 0;
  *((_WORD *)v52 + 8) = 1;
  *((void *)v52 + 3) = v43;
  v52[32] = v40;
  *((void *)v52 + 5) = v45;
  *((void *)v52 + 6) = v47;
  *((void *)v52 + 7) = v49;
  *((void *)v52 + 8) = v51;
  v52[72] = 0;
  *((void *)v52 + 1sub_E59A4(2, 18, 1, 0) = v35;
  *((void *)v52 + 11) = v37;
  sub_88138((uint64_t)v14, &qword_1233C8);
  sub_E6F30();
  sub_E62A0();
  uint64_t v53 = v111;
  sub_880BC((uint64_t)v16, v111, &qword_1233D0);
  uint64_t v54 = (_OWORD *)(v53 + *(int *)(v113 + 44));
  long long v55 = v124;
  *uint64_t v54 = v123;
  v54[1] = v55;
  v54[2] = v125;
  sub_88138((uint64_t)v16, &qword_1233D0);
  sub_88058(v53, v119, &qword_1233D8);
  uint64_t v113 = sub_E65E0();
  id v56 = [*(id *)(v38 + 24) name];
  uint64_t v57 = sub_E7110();
  uint64_t v59 = v58;

  uint64_t v126 = v57;
  uint64_t v127 = v59;
  sub_187B0();
  uint64_t v60 = sub_E6920();
  uint64_t v62 = v61;
  LOBYTE(v14) = v63 & 1;
  sub_E6BF0();
  uint64_t v115 = sub_E68E0();
  uint64_t v65 = v64;
  LODWORD(v67) = v66;
  uint64_t v116 = v68;
  swift_release();
  sub_18814(v60, v62, (char)v14);
  swift_bridgeObjectRelease();
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  if ((*(unsigned char *)(v38 + 16) & 1) == 0)
  {
    uint64_t v126 = sub_852F4();
    uint64_t v127 = v73;
    uint64_t v74 = sub_E6920();
    uint64_t v76 = v75;
    char v78 = v77 & 1;
    sub_E6850();
    uint64_t v79 = sub_E6900();
    LODWORD(v112) = v67;
    uint64_t v67 = v79;
    uint64_t v81 = v80;
    char v83 = v82;
    swift_release();
    char v84 = v83 & 1;
    sub_18814(v74, v76, v78);
    swift_bridgeObjectRelease();
    sub_E6C00();
    uint64_t v69 = sub_E68E0();
    uint64_t v70 = v85;
    char v87 = v86;
    uint64_t v89 = v88;
    swift_release();
    uint64_t v71 = (char *)(v87 & 1);
    uint64_t v90 = v67;
    LOBYTE(v67) = (_BYTE)v112;
    char v91 = v84;
    uint64_t v72 = v89;
    sub_18814(v90, v81, v91);
    swift_bridgeObjectRelease();
  }
  LOBYTE(v126) = v67 & 1;
  uint64_t v92 = v115;
  sub_18804(v115, v65, v67 & 1);
  swift_bridgeObjectRetain();
  sub_54888(v69, v70, (char)v71, v72);
  uint64_t v112 = v71;
  uint64_t v93 = v72;
  sub_548CC(v69, v70, (char)v71, v72);
  sub_18814(v92, v65, v67 & 1);
  swift_bridgeObjectRelease();
  char v94 = v126;
  uint64_t v95 = v70;
  uint64_t v96 = v69;
  if ([*(id *)(v118 + 24) customizable])
  {
    uint64_t v118 = sub_CC534();
    unsigned __int8 v98 = v97 & 1;
  }
  else
  {
    uint64_t v118 = 0;
    unsigned __int8 v98 = -1;
  }
  uint64_t v99 = v117;
  sub_880BC(v119, v117, &qword_1233D8);
  uint64_t v100 = v114;
  sub_880BC(v99, v114, &qword_1233D8);
  long long v101 = (int *)sub_10C7C(&qword_124580);
  uint64_t v102 = v100 + v101[12];
  *(void *)uint64_t v102 = v113;
  *(void *)(v102 + 8) = 0;
  *(unsigned char *)(v102 + 16) = 1;
  uint64_t v103 = v115;
  *(void *)(v102 + 24) = v115;
  *(void *)(v102 + 32) = v65;
  *(unsigned char *)(v102 + 4sub_E59A4(2, 18, 1, 0) = v94;
  *(void *)(v102 + 48) = v116;
  *(void *)(v102 + 56) = v96;
  uint64_t v104 = v112;
  *(void *)(v102 + 64) = v95;
  *(void *)(v102 + 72) = v104;
  *(void *)(v102 + 8sub_E59A4(2, 18, 1, 0) = v93;
  uint64_t v105 = v100 + v101[16];
  *(void *)uint64_t v105 = 0;
  *(unsigned char *)(v105 + 8) = 1;
  uint64_t v106 = v100 + v101[20];
  uint64_t v107 = v118;
  *(void *)uint64_t v106 = v118;
  *(unsigned char *)(v106 + 8) = v98;
  sub_18804(v103, v65, v94);
  swift_bridgeObjectRetain();
  sub_54888(v96, v95, (char)v104, v93);
  sub_88120(v107, v98);
  sub_88138(v119, &qword_1233D8);
  sub_88194(v107, v98);
  sub_18814(v103, v65, v94);
  swift_bridgeObjectRelease();
  sub_548CC(v96, v95, (char)v104, v93);
  return sub_88138(v117, &qword_1233D8);
}

uint64_t sub_86590()
{
  type metadata accessor for GCSPreferencesStore();
  sub_8671C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

__n128 sub_86604@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11;
  *(_OWORD *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a12;
  *(void *)(a9 + 96) = a13;
  uint64_t v17 = (int *)type metadata accessor for GCSProfileListSectionViewRow();
  sub_88058(a14, a9 + v17[10], &qword_122BB0);
  uint64_t v18 = a9 + v17[11];
  long long v19 = *(_OWORD *)(a15 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(a15 + 96);
  *(_OWORD *)(v18 + 112) = v19;
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(a15 + 128);
  *(void *)(v18 + 144) = *(void *)(a15 + 144);
  long long v20 = *(_OWORD *)(a15 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a15 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  long long v21 = *(_OWORD *)(a15 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a15 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  __n128 result = *(__n128 *)a15;
  long long v23 = *(_OWORD *)(a15 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)a15;
  *(_OWORD *)(v18 + 16) = v23;
  *(void *)(a9 + v17[12]) = a16;
  return result;
}

uint64_t sub_866D4()
{
  return sub_8671C(&qword_1244C0, (void (*)(uint64_t))type metadata accessor for ShareGesture);
}

uint64_t sub_8671C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_86768()
{
  unint64_t result = qword_1244C8;
  if (!qword_1244C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1244C8);
  }
  return result;
}

uint64_t sub_867BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_867E0()
{
  return sub_E69D0();
}

char *sub_86800(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    a1[16] = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    *((void *)a1 + 3) = v7;
    *((void *)a1 + 4) = v8;
    *((void *)a1 + 5) = a2[5];
    a1[48] = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v9;
    a1[72] = *((unsigned char *)a2 + 72);
    uint64_t v10 = a2[11];
    *((void *)a1 + 1sub_E59A4(2, 18, 1, 0) = a2[10];
    *((void *)a1 + 11) = v10;
    id v56 = a2[12];
    *((void *)a1 + 12) = v56;
    uint64_t v11 = a3[10];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v54 = *(uint64_t *)((char *)a2 + v11 + 8);
    *(void *)uint64_t v12 = *(char **)((char *)a2 + v11);
    *((void *)v12 + 1) = v54;
    long long v14 = v5;
    uint64_t v15 = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = v56;
    swift_retain();
    swift_retain();
    uint64_t v17 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    uint64_t v18 = &v12[v17];
    uint64_t v19 = v13 + v17;
    uint64_t v20 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    long long v21 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v22 = v21[5];
    long long v23 = &v18[v22];
    uint64_t v24 = (void *)(v19 + v22);
    uint64_t v25 = v24[1];
    *(void *)long long v23 = *v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v21[6];
    uint64_t v27 = &v18[v26];
    Swift::String v28 = (void *)(v19 + v26);
    uint64_t v57 = v28[1];
    *(void *)uint64_t v27 = *v28;
    *((void *)v27 + 1) = v57;
    uint64_t v29 = v21[7];
    uint64_t v30 = &v18[v29];
    uint64_t v31 = (void *)(v19 + v29);
    uint64_t v55 = v31[1];
    *(void *)uint64_t v30 = *v31;
    *((void *)v30 + 1) = v55;
    v18[v21[8]] = *(unsigned char *)(v19 + v21[8]);
    v18[v21[9]] = *(unsigned char *)(v19 + v21[9]);
    uint64_t v32 = v21[10];
    unint64_t v33 = &v18[v32];
    long long v34 = (void *)(v19 + v32);
    uint64_t v53 = v34[1];
    *(void *)unint64_t v33 = *v34;
    *((void *)v33 + 1) = v53;
    *(void *)&v18[v21[11]] = *(void *)(v19 + v21[11]);
    v18[v21[12]] = *(unsigned char *)(v19 + v21[12]);
    *(void *)&v18[v21[13]] = *(void *)(v19 + v21[13]);
    *(void *)&v18[v21[14]] = *(void *)(v19 + v21[14]);
    *(void *)&v18[v21[15]] = *(void *)(v19 + v21[15]);
    v18[v21[16]] = *(unsigned char *)(v19 + v21[16]);
    v18[v21[17]] = *(unsigned char *)(v19 + v21[17]);
    *(void *)&v18[v21[18]] = *(void *)(v19 + v21[18]);
    uint64_t v35 = a3[11];
    uint64_t v36 = a3[12];
    uint64_t v37 = &a1[v35];
    uint64_t v38 = (uint64_t)a2 + v35;
    uint64_t v39 = *(void *)(v38 + 8);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = *(void **)(v38 + 16);
    uint64_t v41 = *(void *)(v38 + 24);
    *((void *)v37 + 2) = v40;
    *((void *)v37 + 3) = v41;
    *((_OWORD *)v37 + 2) = *(_OWORD *)(v38 + 32);
    uint64_t v42 = *(void *)(v38 + 56);
    *((void *)v37 + 6) = *(void *)(v38 + 48);
    *((void *)v37 + 7) = v42;
    uint64_t v43 = *(void *)(v38 + 72);
    *((void *)v37 + 8) = *(void *)(v38 + 64);
    *((void *)v37 + 9) = v43;
    uint64_t v44 = *(void *)(v38 + 88);
    *((void *)v37 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v38 + 80);
    *((void *)v37 + 11) = v44;
    uint64_t v45 = *(void *)(v38 + 104);
    *((void *)v37 + 12) = *(void *)(v38 + 96);
    *((void *)v37 + 13) = v45;
    uint64_t v46 = *(void *)(v38 + 120);
    *((void *)v37 + 14) = *(void *)(v38 + 112);
    *((void *)v37 + 15) = v46;
    v37[128] = *(unsigned char *)(v38 + 128);
    v37[129] = *(unsigned char *)(v38 + 129);
    uint64_t v52 = *(void **)(v38 + 136);
    uint64_t v59 = *(void *)(v38 + 144);
    *((void *)v37 + 17) = v52;
    *((void *)v37 + 18) = v59;
    uint64_t v47 = *(char **)((char *)a2 + v36);
    *(void *)&a1[v36] = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v48 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v49 = v52;
    swift_bridgeObjectRetain();
    id v50 = v47;
  }
  return a1;
}

void sub_86BA4(id *a1, int *a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  int v4 = (char *)a1 + a2[10];
  swift_release();
  swift_release();
  uint64_t v5 = &v4[*(int *)(sub_10C7C(&qword_122BB0) + 32)];
  uint64_t v6 = sub_E6050();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (id *)((char *)a1 + a2[11]);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v8 = *(id *)((char *)a1 + a2[12]);
}

uint64_t sub_86D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  id v56 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v56;
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v54 = *(void *)(a2 + v11 + 8);
  void *v12 = *(void *)(a2 + v11);
  v12[1] = v54;
  id v14 = v5;
  id v15 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v16 = v56;
  swift_retain();
  swift_retain();
  uint64_t v17 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v18 = (char *)v12 + v17;
  uint64_t v19 = v13 + v17;
  uint64_t v20 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  long long v21 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v22 = v21[5];
  long long v23 = &v18[v22];
  uint64_t v24 = (void *)(v19 + v22);
  uint64_t v25 = v24[1];
  *(void *)long long v23 = *v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v21[6];
  uint64_t v27 = &v18[v26];
  Swift::String v28 = (void *)(v19 + v26);
  uint64_t v57 = v28[1];
  *(void *)uint64_t v27 = *v28;
  *((void *)v27 + 1) = v57;
  uint64_t v29 = v21[7];
  uint64_t v30 = &v18[v29];
  uint64_t v31 = (void *)(v19 + v29);
  uint64_t v55 = v31[1];
  *(void *)uint64_t v30 = *v31;
  *((void *)v30 + 1) = v55;
  v18[v21[8]] = *(unsigned char *)(v19 + v21[8]);
  v18[v21[9]] = *(unsigned char *)(v19 + v21[9]);
  uint64_t v32 = v21[10];
  unint64_t v33 = &v18[v32];
  long long v34 = (void *)(v19 + v32);
  uint64_t v53 = v34[1];
  *(void *)unint64_t v33 = *v34;
  *((void *)v33 + 1) = v53;
  *(void *)&v18[v21[11]] = *(void *)(v19 + v21[11]);
  v18[v21[12]] = *(unsigned char *)(v19 + v21[12]);
  *(void *)&v18[v21[13]] = *(void *)(v19 + v21[13]);
  *(void *)&v18[v21[14]] = *(void *)(v19 + v21[14]);
  *(void *)&v18[v21[15]] = *(void *)(v19 + v21[15]);
  v18[v21[16]] = *(unsigned char *)(v19 + v21[16]);
  v18[v21[17]] = *(unsigned char *)(v19 + v21[17]);
  *(void *)&v18[v21[18]] = *(void *)(v19 + v21[18]);
  uint64_t v35 = a3[11];
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  uint64_t v39 = *(void *)(v38 + 8);
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v39;
  uint64_t v40 = *(void **)(v38 + 16);
  uint64_t v41 = *(void *)(v38 + 24);
  *(void *)(v37 + 16) = v40;
  *(void *)(v37 + 24) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  uint64_t v42 = *(void *)(v38 + 56);
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
  *(void *)(v37 + 56) = v42;
  uint64_t v43 = *(void *)(v38 + 72);
  *(void *)(v37 + 64) = *(void *)(v38 + 64);
  *(void *)(v37 + 72) = v43;
  uint64_t v44 = *(void *)(v38 + 88);
  *(void *)(v37 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v38 + 80);
  *(void *)(v37 + 88) = v44;
  uint64_t v45 = *(void *)(v38 + 104);
  *(void *)(v37 + 96) = *(void *)(v38 + 96);
  *(void *)(v37 + 104) = v45;
  uint64_t v46 = *(void *)(v38 + 120);
  *(void *)(v37 + 112) = *(void *)(v38 + 112);
  *(void *)(v37 + 12sub_E59A4(2, 18, 1, 0) = v46;
  *(unsigned char *)(v37 + 128) = *(unsigned char *)(v38 + 128);
  *(unsigned char *)(v37 + 129) = *(unsigned char *)(v38 + 129);
  uint64_t v52 = *(void **)(v38 + 136);
  uint64_t v59 = *(void *)(v38 + 144);
  *(void *)(v37 + 136) = v52;
  *(void *)(v37 + 144) = v59;
  uint64_t v47 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v48 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v49 = v52;
  swift_bridgeObjectRetain();
  id v50 = v47;
  return a1;
}

uint64_t sub_870B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(void **)(a2 + 24);
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  uint64_t v12 = *(void **)(a1 + 96);
  uint64_t v13 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v13;
  id v14 = v13;

  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  uint64_t v18 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = v17 + v18;
  uint64_t v21 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v23 = v22[5];
  uint64_t v24 = (void *)(v19 + v23);
  uint64_t v25 = (void *)(v20 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v22[6];
  uint64_t v27 = (void *)(v19 + v26);
  Swift::String v28 = (void *)(v20 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v22[7];
  uint64_t v30 = (void *)(v19 + v29);
  uint64_t v31 = (void *)(v20 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v22[8]) = *(unsigned char *)(v20 + v22[8]);
  *(unsigned char *)(v19 + v22[9]) = *(unsigned char *)(v20 + v22[9]);
  uint64_t v32 = v22[10];
  unint64_t v33 = (void *)(v19 + v32);
  long long v34 = (void *)(v20 + v32);
  *unint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + v22[11]) = *(void *)(v20 + v22[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v22[12]) = *(unsigned char *)(v20 + v22[12]);
  *(void *)(v19 + v22[13]) = *(void *)(v20 + v22[13]);
  *(void *)(v19 + v22[14]) = *(void *)(v20 + v22[14]);
  *(void *)(v19 + v22[15]) = *(void *)(v20 + v22[15]);
  *(unsigned char *)(v19 + v22[16]) = *(unsigned char *)(v20 + v22[16]);
  *(unsigned char *)(v19 + v22[17]) = *(unsigned char *)(v20 + v22[17]);
  *(void *)(v19 + v22[18]) = *(void *)(v20 + v22[18]);
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)(a1 + v35) = *(void *)(a2 + v35);
  swift_retain();
  swift_release();
  *(void *)(v36 + 8) = *(void *)(v37 + 8);
  swift_retain();
  swift_release();
  uint64_t v38 = *(void **)(v36 + 16);
  uint64_t v39 = *(void **)(v37 + 16);
  *(void *)(v36 + 16) = v39;
  id v40 = v39;

  *(void *)(v36 + 24) = *(void *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  *(void *)(v36 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 40);
  *(void *)(v36 + 48) = *(void *)(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 56) = *(void *)(v37 + 56);
  *(void *)(v36 + 64) = *(void *)(v37 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 72) = *(void *)(v37 + 72);
  *(void *)(v36 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 88) = *(void *)(v37 + 88);
  *(void *)(v36 + 96) = *(void *)(v37 + 96);
  swift_retain();
  swift_release();
  *(void *)(v36 + 104) = *(void *)(v37 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 112) = *(void *)(v37 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v37 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 128) = *(unsigned char *)(v37 + 128);
  *(unsigned char *)(v36 + 129) = *(unsigned char *)(v37 + 129);
  uint64_t v41 = *(void **)(v36 + 136);
  uint64_t v42 = *(void **)(v37 + 136);
  *(void *)(v36 + 136) = v42;
  id v43 = v42;

  *(void *)(v36 + 144) = *(void *)(v37 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[12];
  uint64_t v45 = *(void **)(a2 + v44);
  uint64_t v46 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = v45;
  id v47 = v45;

  return a1;
}

uint64_t sub_87544(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  void *v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  id v11 = (char *)v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  id v14 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v11[v14[5]] = *(_OWORD *)(v12 + v14[5]);
  *(_OWORD *)&v11[v14[6]] = *(_OWORD *)(v12 + v14[6]);
  *(_OWORD *)&v11[v14[7]] = *(_OWORD *)(v12 + v14[7]);
  v11[v14[8]] = *(unsigned char *)(v12 + v14[8]);
  v11[v14[9]] = *(unsigned char *)(v12 + v14[9]);
  *(_OWORD *)&v11[v14[10]] = *(_OWORD *)(v12 + v14[10]);
  *(void *)&v11[v14[11]] = *(void *)(v12 + v14[11]);
  v11[v14[12]] = *(unsigned char *)(v12 + v14[12]);
  *(void *)&v11[v14[13]] = *(void *)(v12 + v14[13]);
  *(void *)&v11[v14[14]] = *(void *)(v12 + v14[14]);
  *(void *)&v11[v14[15]] = *(void *)(v12 + v14[15]);
  v11[v14[16]] = *(unsigned char *)(v12 + v14[16]);
  v11[v14[17]] = *(unsigned char *)(v12 + v14[17]);
  *(void *)&v11[v14[18]] = *(void *)(v12 + v14[18]);
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  long long v20 = *(_OWORD *)(v18 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
  *(_OWORD *)(v17 + 8sub_E59A4(2, 18, 1, 0) = v20;
  long long v21 = *(_OWORD *)(v18 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  *(_OWORD *)(v17 + 48) = v21;
  *(void *)(v17 + 144) = *(void *)(v18 + 144);
  long long v22 = *(_OWORD *)(v18 + 128);
  long long v23 = *(_OWORD *)(v18 + 96);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)(v18 + 112);
  *(_OWORD *)(v17 + 128) = v22;
  *(_OWORD *)(v17 + 96) = v23;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t sub_87724(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  uint64_t v9 = a3[10];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release();
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v12 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v13 = v10 + v12;
  uint64_t v14 = v11 + v12;
  uint64_t v15 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v17 = v16[5];
  uint64_t v18 = (void *)(v13 + v17);
  long long v19 = (uint64_t *)(v14 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v16[6];
  long long v23 = (void *)(v13 + v22);
  uint64_t v24 = (uint64_t *)(v14 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *long long v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v16[7];
  Swift::String v28 = (void *)(v13 + v27);
  uint64_t v29 = (uint64_t *)(v14 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *Swift::String v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v16[8]) = *(unsigned char *)(v14 + v16[8]);
  *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
  uint64_t v32 = v16[10];
  unint64_t v33 = (void *)(v13 + v32);
  long long v34 = (uint64_t *)(v14 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *unint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(void *)(v13 + v16[11]) = *(void *)(v14 + v16[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v16[12]) = *(unsigned char *)(v14 + v16[12]);
  *(void *)(v13 + v16[13]) = *(void *)(v14 + v16[13]);
  *(void *)(v13 + v16[14]) = *(void *)(v14 + v16[14]);
  *(void *)(v13 + v16[15]) = *(void *)(v14 + v16[15]);
  *(unsigned char *)(v13 + v16[16]) = *(unsigned char *)(v14 + v16[16]);
  *(unsigned char *)(v13 + v16[17]) = *(unsigned char *)(v14 + v16[17]);
  *(void *)(v13 + v16[18]) = *(void *)(v14 + v16[18]);
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  swift_release();
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_release();
  id v40 = *(void **)(v38 + 16);
  *(void *)(v38 + 16) = *(void *)(v39 + 16);

  *(void *)(v38 + 24) = *(void *)(v39 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(void *)(v38 + 48) = *(void *)(v39 + 48);
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v39 + 64);
  *(void *)(v38 + 56) = *(void *)(v39 + 56);
  *(void *)(v38 + 64) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v39 + 80);
  *(void *)(v38 + 72) = *(void *)(v39 + 72);
  *(void *)(v38 + 8sub_E59A4(2, 18, 1, 0) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v39 + 96);
  *(void *)(v38 + 88) = *(void *)(v39 + 88);
  *(void *)(v38 + 96) = v43;
  swift_release();
  *(void *)(v38 + 104) = *(void *)(v39 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v38 + 112) = *(void *)(v39 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v38 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v39 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v38 + 128) = *(unsigned char *)(v39 + 128);
  *(unsigned char *)(v38 + 129) = *(unsigned char *)(v39 + 129);
  uint64_t v44 = *(void **)(v38 + 136);
  *(void *)(v38 + 136) = *(void *)(v39 + 136);

  *(void *)(v38 + 144) = *(void *)(v39 + 144);
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[12];
  uint64_t v46 = *(void **)(a1 + v45);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);

  return a1;
}

uint64_t sub_87A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_87AA8);
}

uint64_t sub_87AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_87B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_87B70);
}

uint64_t sub_87B70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_87C1C()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for GCSProfileListSectionViewRow.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GCSProfileListSectionViewRow.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x87E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_87E70(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_87E7C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GCSProfileListSectionViewRow.Kind()
{
  return &type metadata for GCSProfileListSectionViewRow.Kind;
}

unint64_t sub_87E9C()
{
  unint64_t result = qword_124570;
  if (!qword_124570)
  {
    sub_11B60(&qword_1244B0);
    sub_87F18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124570);
  }
  return result;
}

unint64_t sub_87F18()
{
  unint64_t result = qword_124578;
  if (!qword_124578)
  {
    sub_11B60(&qword_1244A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124578);
  }
  return result;
}

void *sub_87F74@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_87F84(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_87F90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_87FF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_88058(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_880BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_88120(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_7737C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_88138(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_88194(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_773E4(result, a2 & 1);
  }
  return result;
}

uint64_t sub_881AC()
{
  return swift_getKeyPath();
}

uint64_t sub_881D0()
{
  return sub_883B4((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSProfileHapticsPickerView(uint64_t a1)
{
  return sub_8A984(a1, (uint64_t *)&unk_1294C0);
}

uint64_t sub_88208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileHapticsPickerView(0);
  sub_2E4C8(a1, (uint64_t)v4);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_2E52C(a1);
}

uint64_t (*sub_882B4(void **a1))()
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSProfileHapticsPickerView(0);
  sub_279A8(v1 + *(int *)(v6 + 20), (uint64_t)v5);
  sub_E6DE0();
  return sub_88398;
}

uint64_t sub_8839C()
{
  return sub_883B4((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_883B4(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSProfileHapticsPickerView(0);
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

uint64_t sub_88408()
{
  uint64_t v0 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSProfileHapticsPickerView(0);
  sub_10C7C(&qword_122BB0);
  sub_E6DE0();
  double v3 = *(double *)&v2[*(int *)(v0 + 52)];
  sub_2E52C((uint64_t)v2);
  if (v3 >= 0.24)
  {
    sub_E6DE0();
    double v5 = *(double *)&v2[*(int *)(v0 + 52)];
    sub_2E52C((uint64_t)v2);
    if (v5 >= 0.99) {
      uint64_t v4 = (void *)0xEE00474E4F525453;
    }
    else {
      uint64_t v4 = (void *)0xEC0000004B414557;
    }
  }
  else
  {
    uint64_t v4 = (void *)0xEB0000000046464FLL;
  }
  return sub_B7108(0x5F53434954504148, v4);
}

uint64_t sub_88538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v50 = sub_10C7C(&qword_124588);
  __chkstk_darwin(v50);
  double v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10C7C(&qword_124590);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  char v12 = *(unsigned char *)(v1 + 8);
  sub_19100(*(void *)v1, v12);
  char v13 = sub_1FB00(v11, v12);
  sub_19048(v11, v12);
  if (v13)
  {
    type metadata accessor for GCSProfileHapticsPickerView(0);
    sub_E6E10();
    swift_getKeyPath();
    sub_E6E00();
    swift_release();
    sub_42B84((uint64_t)v6);
    uint64_t v56 = v59;
    uint64_t v57 = v60;
    uint64_t v58 = v61;
    swift_retain();
    swift_retain();
    uint64_t v52 = sub_B7108(0xD000000000000014, (void *)0x80000000000F2820);
    uint64_t v53 = v14;
    sub_187B0();
    uint64_t v52 = sub_E6920();
    uint64_t v53 = v15;
    char v54 = v16 & 1;
    uint64_t v55 = v17;
    sub_10C7C(&qword_1245B0);
    sub_891D8(&qword_1245B8, &qword_1245B0);
    sub_E6DB0();
    swift_release();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_124598);
    sub_891D8(&qword_1245A0, &qword_124590);
    sub_891D8(&qword_1245A8, &qword_124598);
    sub_E6610();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v48 = sub_E6560();
    uint64_t v52 = sub_B7108(0xD000000000000014, (void *)0x80000000000F2820);
    uint64_t v53 = v19;
    sub_187B0();
    uint64_t v20 = sub_E6920();
    uint64_t v45 = v21;
    uint64_t v46 = v20;
    uint64_t v47 = v22;
    char v24 = v23 & 1;
    uint64_t v52 = sub_88408();
    uint64_t v53 = v25;
    uint64_t v26 = sub_E6920();
    uint64_t v49 = v7;
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    LODWORD(v52) = sub_E6720();
    uint64_t v32 = sub_E68F0();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    char v38 = v37 & 1;
    sub_18814(v27, v29, v31);
    swift_bridgeObjectRelease();
    LOBYTE(v52) = v24;
    LOBYTE(v59) = v24;
    LOBYTE(v56) = 0;
    char v62 = v38;
    uint64_t v40 = v45;
    uint64_t v39 = v46;
    sub_18804(v46, v45, v24);
    uint64_t v41 = v47;
    swift_bridgeObjectRetain();
    sub_18804(v32, v34, v38);
    swift_bridgeObjectRetain();
    sub_18814(v32, v34, v38);
    swift_bridgeObjectRelease();
    sub_18814(v39, v40, v52);
    swift_bridgeObjectRelease();
    char v42 = v59;
    char v43 = v56;
    char v44 = v62;
    *(void *)double v3 = v48;
    *((void *)v3 + 1) = 0;
    v3[16] = 0;
    *((void *)v3 + 3) = v39;
    *((void *)v3 + 4) = v40;
    v3[40] = v42;
    *((void *)v3 + 6) = v41;
    *((void *)v3 + 7) = 0x402E000000000000;
    v3[64] = v43;
    *((void *)v3 + 9) = v32;
    *((void *)v3 + 1sub_E59A4(2, 18, 1, 0) = v34;
    v3[88] = v44;
    *((void *)v3 + 12) = v36;
    swift_storeEnumTagMultiPayload();
    sub_10C7C(&qword_124598);
    sub_891D8(&qword_1245A0, &qword_124590);
    sub_891D8(&qword_1245A8, &qword_124598);
    return sub_E6610();
  }
}

uint64_t sub_88B08@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0x5F53434954504148, (void *)0xEB0000000046464FLL);
  sub_187B0();
  uint64_t v2 = sub_E6920();
  uint64_t v4 = v3;
  uint64_t v25 = v5;
  char v7 = v6 & 1;
  sub_B7108(0x5F53434954504148, (void *)0xEC0000004B414557);
  uint64_t v8 = sub_E6920();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_B7108(0x5F53434954504148, (void *)0xEE00474E4F525453);
  uint64_t v15 = sub_E6920();
  char v16 = v7;
  char v26 = v7;
  char v18 = v17 & 1;
  uint64_t v19 = v2;
  uint64_t v24 = v2;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v25;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v14;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = 0x3FD0000000000000;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0x3FD0000000000000;
  *(_WORD *)(a1 + 12sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 136) = v20;
  uint64_t v21 = v20;
  *(unsigned char *)(a1 + 144) = v17 & 1;
  *(void *)(a1 + 152) = v22;
  *(void *)(a1 + 16sub_E59A4(2, 18, 1, 0) = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0x3FF0000000000000;
  *(_WORD *)(a1 + 184) = 0;
  sub_18804(v19, v4, v16);
  swift_bridgeObjectRetain();
  sub_18804(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_18804(v15, v21, v18);
  swift_bridgeObjectRetain();
  sub_18814(v15, v21, v18);
  swift_bridgeObjectRelease();
  sub_18814(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_18814(v24, v4, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_88D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v4 = a2 + *(int *)(type metadata accessor for GCSProfileHapticsPickerView(0) + 20);

  return sub_2FBC4(a1, v4);
}

uint64_t sub_88DAC()
{
  sub_10C7C(&qword_122BB0);

  return sub_E6DE0();
}

uint64_t sub_88DEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  sub_2E4C8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_2E52C(a1);
}

uint64_t (*sub_88E88(void **a1))()
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  sub_279A8(v1, (uint64_t)v5);
  sub_E6DE0();
  return sub_88F60;
}

void sub_88F64(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_2E4C8((uint64_t)v4, (uint64_t)v3);
    sub_E6DF0();
    sub_42B84((uint64_t)v2);
    sub_2E52C((uint64_t)v4);
  }
  else
  {
    sub_E6DF0();
    sub_42B84((uint64_t)v2);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_88FF4()
{
  sub_10C7C(&qword_122BB0);

  return sub_E6E10();
}

uint64_t sub_89034()
{
  return sub_E6EE0();
}

uint64_t sub_89098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E6E10();
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  uint64_t v5 = type metadata accessor for GCSProfileHapticsPickerView(0);
  return sub_2FBC4((uint64_t)v4, a1 + *(int *)(v5 + 20));
}

uint64_t sub_89148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2FBC4(a1, a2);
}

uint64_t sub_89158()
{
  return sub_E69D0();
}

uint64_t sub_89174()
{
  return sub_E6EE0();
}

uint64_t sub_891D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_8921C@<X0>(uint64_t a1@<X8>)
{
  return sub_89098(a1);
}

unint64_t sub_89224()
{
  unint64_t result = qword_1245C0;
  if (!qword_1245C0)
  {
    type metadata accessor for GCSProfileHapticsPickerView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1245C0);
  }
  return result;
}

uint64_t sub_8927C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_89298()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_892B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v36 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_19100(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = a2 + v9;
    uint64_t v12 = *(void *)(a2 + v9);
    uint64_t v13 = *(void *)(a2 + v9 + 8);
    void *v10 = v12;
    v10[1] = v13;
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    uint64_t v15 = (char *)v10 + v14;
    uint64_t v16 = v11 + v14;
    uint64_t v17 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    char v18 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v19 = v18[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = (uint64_t *)(v16 + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    uint64_t v24 = v18[6];
    uint64_t v25 = &v15[v24];
    char v26 = (void *)(v16 + v24);
    uint64_t v27 = v26[1];
    *(void *)uint64_t v25 = *v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v18[7];
    uint64_t v29 = &v15[v28];
    char v30 = (void *)(v16 + v28);
    uint64_t v31 = v30[1];
    *(void *)uint64_t v29 = *v30;
    *((void *)v29 + 1) = v31;
    v15[v18[8]] = *(unsigned char *)(v16 + v18[8]);
    v15[v18[9]] = *(unsigned char *)(v16 + v18[9]);
    uint64_t v32 = v18[10];
    uint64_t v33 = &v15[v32];
    uint64_t v34 = (void *)(v16 + v32);
    uint64_t v35 = v34[1];
    *(void *)uint64_t v33 = *v34;
    *((void *)v33 + 1) = v35;
    *(void *)&v15[v18[11]] = *(void *)(v16 + v18[11]);
    v15[v18[12]] = *(unsigned char *)(v16 + v18[12]);
    *(void *)&v15[v18[13]] = *(void *)(v16 + v18[13]);
    *(void *)&v15[v18[14]] = *(void *)(v16 + v18[14]);
    *(void *)&v15[v18[15]] = *(void *)(v16 + v18[15]);
    v15[v18[16]] = *(unsigned char *)(v16 + v18[16]);
    v15[v18[17]] = *(unsigned char *)(v16 + v18[17]);
    *(void *)&v15[v18[18]] = *(void *)(v16 + v18[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_894D0(uint64_t a1, uint64_t a2)
{
  sub_19048(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_895C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_retain();
  uint64_t v12 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v13 = (char *)v9 + v12;
  uint64_t v14 = (char *)v10 + v12;
  uint64_t v15 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v17 = v16[5];
  char v18 = &v13[v17];
  uint64_t v19 = &v14[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)char v18 = v21;
  *((void *)v18 + 1) = v20;
  uint64_t v22 = v16[6];
  uint64_t v23 = &v13[v22];
  uint64_t v24 = &v14[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v16[7];
  uint64_t v27 = &v13[v26];
  uint64_t v28 = &v14[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  v13[v16[8]] = v14[v16[8]];
  v13[v16[9]] = v14[v16[9]];
  uint64_t v30 = v16[10];
  uint64_t v31 = &v13[v30];
  uint64_t v32 = &v14[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  *(void *)&v13[v16[11]] = *(void *)&v14[v16[11]];
  v13[v16[12]] = v14[v16[12]];
  *(void *)&v13[v16[13]] = *(void *)&v14[v16[13]];
  *(void *)&v13[v16[14]] = *(void *)&v14[v16[14]];
  *(void *)&v13[v16[15]] = *(void *)&v14[v16[15]];
  v13[v16[16]] = v14[v16[16]];
  v13[v16[17]] = v14[v16[17]];
  *(void *)&v13[v16[18]] = *(void *)&v14[v16[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_89794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_19100(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19048(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (void *)(a2 + v10);
  *(void *)(a1 + v1sub_E59A4(2, 18, 1, 0) = *v12;
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = v12[1];
  swift_retain();
  swift_release();
  uint64_t v13 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = (char *)v12 + v13;
  uint64_t v16 = sub_E6050();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v14 + v18);
  uint64_t v20 = &v15[v18];
  *uint64_t v19 = *(void *)v20;
  v19[1] = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v17[6];
  uint64_t v22 = (void *)(v14 + v21);
  uint64_t v23 = &v15[v21];
  *uint64_t v22 = *(void *)v23;
  v22[1] = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v17[7];
  uint64_t v25 = (void *)(v14 + v24);
  uint64_t v26 = &v15[v24];
  void *v25 = *(void *)v26;
  v25[1] = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[8]) = v15[v17[8]];
  *(unsigned char *)(v14 + v17[9]) = v15[v17[9]];
  uint64_t v27 = v17[10];
  uint64_t v28 = (void *)(v14 + v27);
  uint64_t v29 = &v15[v27];
  *uint64_t v28 = *(void *)v29;
  v28[1] = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + v17[11]) = *(void *)&v15[v17[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[12]) = v15[v17[12]];
  *(void *)(v14 + v17[13]) = *(void *)&v15[v17[13]];
  *(void *)(v14 + v17[14]) = *(void *)&v15[v17[14]];
  *(void *)(v14 + v17[15]) = *(void *)&v15[v17[15]];
  *(unsigned char *)(v14 + v17[16]) = v15[v17[16]];
  *(unsigned char *)(v14 + v17[17]) = v15[v17[17]];
  *(void *)(v14 + v17[18]) = *(void *)&v15[v17[18]];
  return a1;
}

uint64_t sub_899CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  void *v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  char v9 = (char *)v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v9[v12[5]] = *(_OWORD *)(v10 + v12[5]);
  *(_OWORD *)&v9[v12[6]] = *(_OWORD *)(v10 + v12[6]);
  *(_OWORD *)&v9[v12[7]] = *(_OWORD *)(v10 + v12[7]);
  v9[v12[8]] = *(unsigned char *)(v10 + v12[8]);
  v9[v12[9]] = *(unsigned char *)(v10 + v12[9]);
  *(_OWORD *)&v9[v12[10]] = *(_OWORD *)(v10 + v12[10]);
  *(void *)&v9[v12[11]] = *(void *)(v10 + v12[11]);
  v9[v12[12]] = *(unsigned char *)(v10 + v12[12]);
  *(void *)&v9[v12[13]] = *(void *)(v10 + v12[13]);
  *(void *)&v9[v12[14]] = *(void *)(v10 + v12[14]);
  *(void *)&v9[v12[15]] = *(void *)(v10 + v12[15]);
  v9[v12[16]] = *(unsigned char *)(v10 + v12[16]);
  v9[v12[17]] = *(unsigned char *)(v10 + v12[17]);
  *(void *)&v9[v12[18]] = *(void *)(v10 + v12[18]);
  return a1;
}

uint64_t sub_89B20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19048(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  *(void *)(a1 + v1sub_E59A4(2, 18, 1, 0) = *v12;
  swift_release();
  *(void *)(v11 + 8) = v12[1];
  swift_release();
  uint64_t v13 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = (char *)v12 + v13;
  uint64_t v16 = sub_E6050();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v14 + v18);
  uint64_t v20 = &v15[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v17[6];
  uint64_t v24 = (void *)(v14 + v23);
  uint64_t v25 = &v15[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v17[7];
  uint64_t v29 = (void *)(v14 + v28);
  uint64_t v30 = &v15[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[8]) = v15[v17[8]];
  *(unsigned char *)(v14 + v17[9]) = v15[v17[9]];
  uint64_t v33 = v17[10];
  uint64_t v34 = (void *)(v14 + v33);
  uint64_t v35 = &v15[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  *(void *)(v14 + v17[11]) = *(void *)&v15[v17[11]];
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[12]) = v15[v17[12]];
  *(void *)(v14 + v17[13]) = *(void *)&v15[v17[13]];
  *(void *)(v14 + v17[14]) = *(void *)&v15[v17[14]];
  *(void *)(v14 + v17[15]) = *(void *)&v15[v17[15]];
  *(unsigned char *)(v14 + v17[16]) = v15[v17[16]];
  *(unsigned char *)(v14 + v17[17]) = v15[v17[17]];
  *(void *)(v14 + v17[18]) = *(void *)&v15[v17[18]];
  return a1;
}

uint64_t sub_89CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_89D00);
}

uint64_t sub_89D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_89DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_89DC0);
}

uint64_t sub_89DC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_89E68()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_89F00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(v4 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_E6050();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
    uint64_t v12 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
    uint64_t v18 = v12[6];
    uint64_t v19 = &v8[v18];
    uint64_t v20 = &v9[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v12[7];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    v8[v12[8]] = v9[v12[8]];
    v8[v12[9]] = v9[v12[9]];
    uint64_t v26 = v12[10];
    uint64_t v27 = &v8[v26];
    uint64_t v28 = &v9[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    *(void *)&v8[v12[11]] = *(void *)&v9[v12[11]];
    v8[v12[12]] = v9[v12[12]];
    *(void *)&v8[v12[13]] = *(void *)&v9[v12[13]];
    *(void *)&v8[v12[14]] = *(void *)&v9[v12[14]];
    *(void *)&v8[v12[15]] = *(void *)&v9[v12[15]];
    v8[v12[16]] = v9[v12[16]];
    v8[v12[17]] = v9[v12[17]];
    *(void *)&v8[v12[18]] = *(void *)&v9[v12[18]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_8A0FC(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v3 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_8A1DC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_retain();
  uint64_t v5 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v14 = *(void *)v12;
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = v14;
  *((void *)v11 + 1) = v13;
  uint64_t v15 = v9[6];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = v9[7];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  v6[v9[8]] = v7[v9[8]];
  v6[v9[9]] = v7[v9[9]];
  uint64_t v23 = v9[10];
  uint64_t v24 = &v6[v23];
  uint64_t v25 = &v7[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  *(void *)&v6[v9[11]] = *(void *)&v7[v9[11]];
  v6[v9[12]] = v7[v9[12]];
  *(void *)&v6[v9[13]] = *(void *)&v7[v9[13]];
  *(void *)&v6[v9[14]] = *(void *)&v7[v9[14]];
  *(void *)&v6[v9[15]] = *(void *)&v7[v9[15]];
  v6[v9[16]] = v7[v9[16]];
  v6[v9[17]] = v7[v9[17]];
  *(void *)&v6[v9[18]] = *(void *)&v7[v9[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_8A37C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8[6];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v8[7];
  uint64_t v16 = &v5[v15];
  uint64_t v17 = &v6[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v8[8]] = v6[v8[8]];
  v5[v8[9]] = v6[v8[9]];
  uint64_t v18 = v8[10];
  uint64_t v19 = &v5[v18];
  uint64_t v20 = &v6[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v5[v8[11]] = *(void *)&v6[v8[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v8[12]] = v6[v8[12]];
  *(void *)&v5[v8[13]] = *(void *)&v6[v8[13]];
  *(void *)&v5[v8[14]] = *(void *)&v6[v8[14]];
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  v5[v8[16]] = v6[v8[16]];
  v5[v8[17]] = v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  return a1;
}

void *sub_8A57C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v6[v9[5]] = *(_OWORD *)&v7[v9[5]];
  *(_OWORD *)&v6[v9[6]] = *(_OWORD *)&v7[v9[6]];
  *(_OWORD *)&v6[v9[7]] = *(_OWORD *)&v7[v9[7]];
  v6[v9[8]] = v7[v9[8]];
  v6[v9[9]] = v7[v9[9]];
  *(_OWORD *)&v6[v9[10]] = *(_OWORD *)&v7[v9[10]];
  *(void *)&v6[v9[11]] = *(void *)&v7[v9[11]];
  v6[v9[12]] = v7[v9[12]];
  *(void *)&v6[v9[13]] = *(void *)&v7[v9[13]];
  *(void *)&v6[v9[14]] = *(void *)&v7[v9[14]];
  *(void *)&v6[v9[15]] = *(void *)&v7[v9[15]];
  v6[v9[16]] = v7[v9[16]];
  v6[v9[17]] = v7[v9[17]];
  *(void *)&v6[v9[18]] = *(void *)&v7[v9[18]];
  return a1;
}

void *sub_8A6B8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v4 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_E6050();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = v8[6];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v8[7];
  uint64_t v20 = &v5[v19];
  uint64_t v21 = &v6[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v5[v8[8]] = v6[v8[8]];
  v5[v8[9]] = v6[v8[9]];
  uint64_t v24 = v8[10];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  *(void *)&v5[v8[11]] = *(void *)&v6[v8[11]];
  swift_bridgeObjectRelease();
  v5[v8[12]] = v6[v8[12]];
  *(void *)&v5[v8[13]] = *(void *)&v6[v8[13]];
  *(void *)&v5[v8[14]] = *(void *)&v6[v8[14]];
  *(void *)&v5[v8[15]] = *(void *)&v6[v8[15]];
  v5[v8[16]] = v6[v8[16]];
  v5[v8[17]] = v6[v8[17]];
  *(void *)&v5[v8[18]] = *(void *)&v6[v8[18]];
  return a1;
}

uint64_t sub_8A858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8A86C);
}

uint64_t sub_8A86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_8A8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8A8F0);
}

uint64_t sub_8A8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GCSProfileHapticsView(uint64_t a1)
{
  return sub_8A984(a1, qword_1294D0);
}

uint64_t sub_8A984(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_8A9BC()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_8AA4C()
{
  unint64_t result = qword_1246C8;
  if (!qword_1246C8)
  {
    sub_11B60(&qword_1246D0);
    sub_891D8(&qword_1245A0, &qword_124590);
    sub_891D8(&qword_1245A8, &qword_124598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1246C8);
  }
  return result;
}

unint64_t sub_8AB14()
{
  unint64_t result = qword_1246D8;
  if (!qword_1246D8)
  {
    sub_11B60(&qword_1246E0);
    sub_89224();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1246D8);
  }
  return result;
}

uint64_t Device.id.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t Device.id.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Device.id.modify())()
{
  return j_j__swift_endAccess_1_0;
}

uint64_t sub_8AC68()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_8ACB8(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_8ACB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_8AD10(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  unint64_t v6 = *(void *)(v2 + 32);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return sub_8AD64(v5, v6);
}

uint64_t sub_8AD64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t (*sub_8ADBC())()
{
  return j_j__swift_endAccess_1;
}

id sub_8AE10()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);

  return v1;
}

void sub_8AE54(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 4sub_E59A4(2, 18, 1, 0) = a1;
}

uint64_t (*sub_8AE9C())()
{
  return j__swift_endAccess_1;
}

id sub_8AEF4()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 48);

  return v1;
}

void sub_8AF38(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

uint64_t (*sub_8AF80())()
{
  return j_j__swift_endAccess_1_1;
}

uint64_t variable initialization expression of Device.deviceImage()
{
  return 0;
}

uint64_t sub_8AFDC()
{
  return swift_retain();
}

uint64_t sub_8B014(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t (*sub_8B05C())()
{
  return j_j__swift_endAccess_1_2;
}

uint64_t variable initialization expression of Device.displayName()
{
  return 0;
}

uint64_t sub_8B0BC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_8B108(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_8B15C())()
{
  return j_j__swift_endAccess_1_3;
}

uint64_t variable initialization expression of Device.name()
{
  return 0;
}

uint64_t sub_8B1BC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_8B208(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 8sub_E59A4(2, 18, 1, 0) = a1;
  *(void *)(v2 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_8B25C())()
{
  return j_j__swift_endAccess_1_4;
}

uint64_t variable initialization expression of Device.pairingInfo()
{
  return 0;
}

void *sub_8B2B8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 96);
  id v2 = v1;
  return v1;
}

void sub_8B2FC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 96);
  *(void *)(v1 + 96) = a1;
}

uint64_t (*sub_8B344())()
{
  return j_j__swift_endAccess_1_5;
}

id sub_8B398()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  id v2 = [v1 btAddressData];

  if (v2)
  {
    uint64_t v3 = sub_E5F80();
    unint64_t v5 = v4;

    sub_10C7C(&qword_122298);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_EECC0;
    char v7 = sub_E5F90();
    *(void *)(v6 + 56) = &type metadata for UInt8;
    *(void *)(v6 + 64) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 32) = v7;
    char v8 = sub_E5F90();
    *(void *)(v6 + 96) = &type metadata for UInt8;
    *(void *)(v6 + 104) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 72) = v8;
    char v9 = sub_E5F90();
    *(void *)(v6 + 136) = &type metadata for UInt8;
    *(void *)(v6 + 144) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 112) = v9;
    char v10 = sub_E5F90();
    *(void *)(v6 + 176) = &type metadata for UInt8;
    *(void *)(v6 + 184) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 152) = v10;
    char v11 = sub_E5F90();
    *(void *)(v6 + 216) = &type metadata for UInt8;
    *(void *)(v6 + 224) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 192) = v11;
    char v12 = sub_E5F90();
    *(void *)(v6 + 256) = &type metadata for UInt8;
    *(void *)(v6 + 264) = &protocol witness table for UInt8;
    *(unsigned char *)(v6 + 232) = v12;
    sub_E7120();
    id v2 = (id)sub_E7140();
    swift_bridgeObjectRelease();
    sub_8AD64(v3, v5);
  }
  return v2;
}

uint64_t variable initialization expression of Device.connection()
{
  return 0;
}

void sub_8B54C()
{
  swift_beginAccess();
  uint64_t v1 = (void *)v0[13];
  if (v1)
  {
    id v2 = *(uint64_t (**)(void))(*v0 + 264);
    id v3 = v1;
    unint64_t v4 = (void *)v2();
    [v3 setPeerDevice:v4];

    [v3 setServiceFlags:0xFFFFFFFFLL];
    [v3 setConnectionFlags:18];
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*v0 + 816))(1);
    char v6 = (*(uint64_t (**)(uint64_t))(*v0 + 904))(v5);
    uint64_t v7 = (*(uint64_t (**)(BOOL))(*v0 + 864))((v6 & 1) == 0);
    char v8 = (void *)((uint64_t (*)(uint64_t))v2)(v7);
    unint64_t v9 = (unint64_t)[v8 discoveryFlags];

    if ((v9 & 0x2000000000000) != 0)
    {
      objc_msgSend(v3, "setConnectionFlags:", objc_msgSend(v3, "connectionFlags") | 0x80);
      objc_msgSend(v3, "setConnectionFlags:", objc_msgSend(v3, "connectionFlags") | 0x200);
      objc_msgSend(v3, "setConnectionFlags:", objc_msgSend(v3, "connectionFlags") | 0x100);
    }
  }
}

void *sub_8B74C()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 104);
  id v2 = v1;
  return v1;
}

void sub_8B790(void *a1)
{
  sub_8FA50(a1);
}

void (*sub_8B7C8(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  unint64_t v4 = *(void **)(v1 + 104);
  v3[3] = v4;
  id v5 = v4;
  return sub_8B844;
}

void sub_8B844(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  id v3 = *(void **)(*(void *)a1 + 24);
  if (a2)
  {
    if (!v3)
    {
      unint64_t v4 = (void *)v2[4];
      (*(void (**)(void))(*v4 + 816))(0);
      (*(void (**)(void))(*v4 + 864))(0);
      id v5 = *(void (**)(void))(*(void *)*sub_11C20() + 496);
      swift_retain();
      v5(0);
      swift_release();
      char v6 = (void *)v4[13];
      if (v6) {
        [v6 invalidate];
      }
    }
    uint64_t v7 = v2[4];
    char v8 = *(void **)(v7 + 104);
    *(void *)(v7 + 104) = v3;
    id v9 = v3;

    sub_8B54C();
    id v10 = (id)v2[3];
  }
  else
  {
    if (!v3)
    {
      char v11 = (void *)v2[4];
      (*(void (**)(void))(*v11 + 816))(0);
      (*(void (**)(void))(*v11 + 864))(0);
      char v12 = *(void (**)(void))(*(void *)*sub_11C20() + 496);
      swift_retain();
      v12(0);
      swift_release();
      uint64_t v13 = (void *)v11[13];
      if (v13) {
        [v13 invalidate];
      }
    }
    uint64_t v14 = v2[4];
    uint64_t v15 = *(void **)(v14 + 104);
    *(void *)(v14 + 104) = v3;
    id v10 = v3;

    sub_8B54C();
  }

  free(v2);
}

uint64_t sub_8BAA0()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 discoveryFlags];

  return (v2 >> 37) & 1;
}

uint64_t sub_8BB04()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unsigned __int16 v2 = (unsigned __int16)[v1 deviceFlags];

  if ((v2 & 0x2000) == 0) {
    return 1;
  }
  if (((*(uint64_t (**)(void))(*(void *)v0 + 464))() & 1) == 0) {
    return 0;
  }
  unint64_t v4 = *(uint64_t (**)(void))(*(void *)v0 + 528);

  return v4();
}

BOOL sub_8BBF4()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 504))() & 1) != 0
    && ((*(uint64_t (**)(void))(*(void *)v0 + 760))() & 1) != 0)
  {
    return 1;
  }
  uint64_t v1 = (uint64_t (**)(void))(*(void *)v0 + 264);
  unsigned __int16 v2 = *v1;
  id v3 = (void *)(*v1)();
  unsigned int v4 = [v3 deviceType];

  if (v4 == 26) {
    return 1;
  }
  id v5 = (void *)v2();
  unsigned int v6 = [v5 deviceType];

  if (v6 == 24) {
    return 1;
  }
  uint64_t v7 = (void *)v2();
  unsigned int v8 = [v7 deviceType];

  if (v8 == 49) {
    return 1;
  }
  id v10 = (void *)v2();
  unsigned int v11 = [v10 deviceType];

  return v11 == 25;
}

uint64_t sub_8BD4C()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 discoveryFlags];

  return (v2 >> 50) & 1;
}

BOOL sub_8BDB0()
{
  return sub_8BDC8((SEL *)&selRef_deviceFlags);
}

BOOL sub_8BDBC()
{
  return sub_8BDC8((SEL *)&selRef_discoveryFlags);
}

BOOL sub_8BDC8(SEL *a1)
{
  id v3 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 264))();
  id v4 = [v3 *a1];

  return v4 == 0;
}

uint64_t sub_8BE30()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 deviceFlags];

  return (v2 >> 12) & 1;
}

uint64_t sub_8BE94()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 deviceFlags];

  return (v2 >> 16) & 1;
}

BOOL sub_8BEF8()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 968))() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = (uint64_t (**)(void))(*(void *)v0 + 264);
  unint64_t v2 = *v1;
  id v3 = (void *)(*v1)();
  unsigned int v4 = [v3 deviceType];

  if (v4 == 20) {
    return 1;
  }
  unsigned int v6 = (void *)v2();
  unsigned int v7 = [v6 deviceType];

  return v7 == 16;
}

uint64_t sub_8BFD8()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 discoveryFlags];

  return (v2 >> 49) & 1;
}

uint64_t sub_8C03C()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 deviceFlags];

  return (v2 >> 13) & 1;
}

uint64_t sub_8C0A0()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 deviceFlags];

  return (v2 >> 15) & 1;
}

BOOL sub_8C104()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unsigned int v2 = [v1 deviceType];

  return v2 == 26;
}

uint64_t sub_8C16C()
{
  uint64_t v1 = (uint64_t (**)(void))(*(void *)v0 + 904);
  unsigned int v2 = *v1;
  if (((*v1)() & 1) != 0 && ((*(uint64_t (**)(void))(*(void *)v0 + 528))() & 1) == 0) {
    return 1;
  }
  if ((v2() & 1) == 0 || ((*(uint64_t (**)(void))(*(void *)v0 + 760))() & 1) == 0) {
    return 0;
  }
  id v3 = *(uint64_t (**)(void))(*(void *)v0 + 528);

  return v3();
}

uint64_t sub_8C284()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 440))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v0 + 464))() & 1) != 0)
  {
    return 1;
  }
  unsigned int v2 = *(uint64_t (**)(void))(*(void *)v0 + 512);

  return v2();
}

uint64_t sub_8C33C()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = (unint64_t)[v1 deviceFlags];

  return (v2 >> 40) & 1;
}

uint64_t property wrapper backing initializer of Device.smartRoutingMode()
{
  return sub_E6130();
}

uint64_t sub_8C3E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_8C458@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 568))();
  *a2 = result;
  return result;
}

uint64_t sub_8C4AC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 576))(*a1);
}

uint64_t sub_8C4FC()
{
  return sub_E6180();
}

uint64_t (*sub_8C56C(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_8C5F8;
}

uint64_t variable initialization expression of Device._smartRoutingMode()
{
  return 0;
}

uint64_t sub_8C604()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__smartRoutingMode, &qword_1246E8);
}

uint64_t sub_8C618(uint64_t a1)
{
  return sub_8E21C(a1, &qword_1246F0, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__smartRoutingMode, &qword_1246E8);
}

uint64_t (*sub_8C634(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_1246F0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__smartRoutingMode;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_1246E8);
  sub_E6140();
  swift_endAccess();
  return sub_8C744;
}

uint64_t property wrapper backing initializer of Device.showDeviceInfoView()
{
  return sub_E6130();
}

uint64_t sub_8C778()
{
  return sub_8DE6C();
}

uint64_t sub_8C78C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 616))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8C7E4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 624))(*a1);
}

uint64_t sub_8C834()
{
  return sub_8DBA8();
}

uint64_t (*sub_8C848(void *a1))()
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_8C8D4;
}

uint64_t variable initialization expression of Device._showDeviceInfoView()
{
  return 0;
}

uint64_t sub_8C8E0()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__showDeviceInfoView, (uint64_t *)&unk_124E10);
}

uint64_t sub_8C8F4(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__showDeviceInfoView, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8C910(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__showDeviceInfoView;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8CA20;
}

uint64_t sub_8CA24()
{
  return sub_8DE6C();
}

uint64_t sub_8CA38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 664))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8CA90(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 672))(*a1);
}

uint64_t sub_8CAE0(int a1)
{
  int v3 = (*(uint64_t (**)(void))(*(void *)v1 + 760))();
  uint64_t v4 = (uint64_t (**)(void))(*(void *)v1 + 712);
  uint64_t v5 = *v4;
  if ((*v4)())
  {
    if (v3) {
      goto LABEL_9;
    }
  }
  else if (((v3 ^ a1) & 1) == 0)
  {
    goto LABEL_9;
  }
  if (a1) {
    char v6 = 1;
  }
  else {
    char v6 = v5();
  }
  (*(void (**)(void))(*(void *)v1 + 768))(v6 & 1);
LABEL_9:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_E6180();
}

uint64_t (*sub_8CC14(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_8CCB4;
}

uint64_t sub_8CCB4(uint64_t a1)
{
  return sub_8CAE0(*(unsigned __int8 *)(a1 + 8));
}

uint64_t variable initialization expression of Device._connectedOverBluetooth()
{
  return 0;
}

uint64_t sub_8CCE4()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverBluetooth, (uint64_t *)&unk_124E10);
}

uint64_t sub_8CCF8(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverBluetooth, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8CD14(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverBluetooth;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8CE24;
}

uint64_t sub_8CE28()
{
  return sub_8DE6C();
}

uint64_t sub_8CE3C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 712))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8CE94(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 720))(*a1);
}

uint64_t sub_8CEE4(char a1)
{
  int v3 = (*(uint64_t (**)(void))(*(void *)v1 + 760))();
  if (a1)
  {
    if ((v3 & 1) == 0)
    {
      char v4 = 1;
LABEL_6:
      (*(void (**)(void))(*(void *)v1 + 768))(v4 & 1);
    }
  }
  else
  {
    uint64_t v5 = (uint64_t (**)(void))(*(void *)v1 + 664);
    size_t v6 = *v5;
    if ((v3 ^ (*v5)()))
    {
      char v4 = v6();
      goto LABEL_6;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_E6180();
}

uint64_t (*sub_8D010(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_8D0B0;
}

uint64_t sub_8D0B0(uint64_t a1)
{
  return sub_8CEE4(*(unsigned char *)(a1 + 8));
}

uint64_t variable initialization expression of Device._connectedOverUSB()
{
  return 0;
}

uint64_t sub_8D0E0()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverUSB, (uint64_t *)&unk_124E10);
}

uint64_t sub_8D0F4(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverUSB, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8D110(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverUSB;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8D220;
}

uint64_t sub_8D224()
{
  return sub_8DE6C();
}

uint64_t sub_8D238@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 760))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8D290(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 768))(*a1);
}

void sub_8D2E0(char a1)
{
  if (a1)
  {
    (*(void (**)(void))(*(void *)v1 + 816))(0);
    (*(void (**)(void))(*(void *)v1 + 864))(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = sub_E6180();
  if (((*(uint64_t (**)(uint64_t))(*(void *)v1 + 760))(v2) & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 808))() & 1) == 0)
  {
    int v3 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 416))();

    if (v3) {
      (*(void (**)(void))(*(void *)v1 + 816))(0);
    }
  }
}

void (*sub_8D48C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_8D52C;
}

void sub_8D52C(uint64_t a1)
{
}

uint64_t variable initialization expression of Device._isConnected()
{
  return 0;
}

uint64_t sub_8D55C()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnected, (uint64_t *)&unk_124E10);
}

uint64_t sub_8D570(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnected, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8D58C(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnected;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8D69C;
}

uint64_t sub_8D6A0()
{
  return sub_8DE6C();
}

uint64_t sub_8D6B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 808))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8D70C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 816))(*a1);
}

uint64_t sub_8D75C(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)*sub_11C20() + 496);
  swift_retain();
  v2(a1);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_E6180();
}

uint64_t (*sub_8D820(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_8D8C0;
}

uint64_t sub_8D8C0(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(void (**)(uint64_t))(*(void *)*sub_11C20() + 496);
  swift_retain();
  v3(v2);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(a1 + 9) = v2;
  swift_retain();

  return sub_E6180();
}

uint64_t variable initialization expression of Device._isConnecting()
{
  return 0;
}

uint64_t sub_8D994()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnecting, (uint64_t *)&unk_124E10);
}

uint64_t sub_8D9A8(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnecting, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8D9C4(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnecting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8DAD4;
}

uint64_t sub_8DAD8()
{
  return sub_8DE6C();
}

uint64_t sub_8DAEC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 856))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8DB44(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 864))(*a1);
}

uint64_t sub_8DB94()
{
  return sub_8DBA8();
}

uint64_t sub_8DBA8()
{
  return sub_E6180();
}

uint64_t (*sub_8DC14(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_E6160();
  return sub_8DCA0;
}

void sub_8DCA4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t variable initialization expression of Device._isPairing()
{
  return 0;
}

uint64_t sub_8DD14()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPairing, (uint64_t *)&unk_124E10);
}

uint64_t sub_8DD28(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPairing, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_8DD44(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPairing;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8DE54;
}

uint64_t sub_8DE58()
{
  return sub_8DE6C();
}

uint64_t sub_8DE6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_8DED8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 904))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_8DF30(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 912))(*a1);
}

uint64_t sub_8DF80(char a1)
{
  if (a1) {
    (*(void (**)(void))(*(void *)v1 + 864))(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_E6180();
}

uint64_t (*sub_8E028(uint64_t a1))(unsigned __int8 *a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_8E0C8;
}

uint64_t sub_8E0C8(unsigned __int8 *a1)
{
  int v2 = a1[8];
  if (v2 == 1) {
    (*(void (**)(void))(**(void **)a1 + 864))(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  a1[9] = v2;
  swift_retain();

  return sub_E6180();
}

uint64_t sub_8E184()
{
  return sub_8E198((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPaired, (uint64_t *)&unk_124E10);
}

uint64_t sub_8E198(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_8E200(uint64_t a1)
{
  return sub_8E21C(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPaired, (uint64_t *)&unk_124E10);
}

uint64_t sub_8E21C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_10C7C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_10C7C(a4);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_8E34C(void *a1))()
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPaired;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_8E45C;
}

void sub_8E460(uint64_t a1, char a2)
{
  int v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_8E5D0(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_8FBC0(a1);

  return v2;
}

uint64_t sub_8E618(void *a1)
{
  uint64_t v2 = sub_8FBC0(a1);

  return v2;
}

uint64_t sub_8E648(void *a1)
{
  if (a1) {
    a1 = (void *)(*(uint64_t (**)(void *))(*(void *)v1 + 272))(a1);
  }
  uint64_t v2 = (uint64_t (**)(void))(*(void *)v1 + 264);
  int v3 = *v2;
  uint64_t v4 = (void *)((uint64_t (*)(void *))*v2)(a1);
  id v5 = [v4 btAddressData];

  if (v5
    || (size_t v6 = (void *)v3(),
        id v5 = [v6 bleAdvertisementData],
        v6,
        v5))
  {
    uint64_t v7 = sub_E5F80();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v1 + 248))(v7, v9);
  unsigned int v11 = (void *)((uint64_t (*)(uint64_t))v3)(v10);
  unsigned int v12 = [v11 connectedServices];

  uint64_t v13 = (*(uint64_t (**)(BOOL))(*(void *)v1 + 672))(v12 != 0);
  uint64_t v14 = (void *)((uint64_t (*)(uint64_t))v3)(v13);
  unint64_t v15 = (unint64_t)[v14 deviceFlags];

  uint64_t v16 = (*(uint64_t (**)(unint64_t))(*(void *)v1 + 720))((v15 >> 20) & 1);
  uint64_t v17 = (void *)((uint64_t (*)(uint64_t))v3)(v16);
  id v18 = [v17 name];

  if (v18)
  {
    uint64_t v19 = sub_E7110();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = (*(uint64_t (**)(void))(*(void *)v1 + 336))();
    uint64_t v21 = v22;
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v1 + 368))(v19, v21);
  uint64_t v24 = (void *)((uint64_t (*)(uint64_t))v3)(v23);
  unsigned int v25 = [v24 discoveryFlags];

  if ((v25 & 0x800000) == 0
    || (uint64_t v26 = (void *)v3(),
        unsigned __int16 v27 = (unsigned __int16)[v26 deviceFlags],
        v26,
        (v27 & 0x8000) != 0))
  {
    uint64_t v29 = (void *)v3();
    unsigned int v30 = [v29 discoveryFlags];

    if ((v30 & 0x800000) != 0
      && (uint64_t v31 = (void *)v3(),
          unsigned int v32 = [v31 discoveryFlags],
          v31,
          (v32 & 0x200000) != 0))
    {
      uint64_t v33 = (void *)v3();
      unint64_t v34 = (unint64_t)[v33 deviceFlags];

      uint64_t v28 = (v34 >> 15) & 1;
    }
    else
    {
      uint64_t v28 = 0;
    }
  }
  else
  {
    uint64_t v28 = 1;
  }
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 912))(v28);
  uint64_t v36 = (void *)((uint64_t (*)(uint64_t))v3)(v35);
  id v37 = [v36 smartRoutingMode];

  (*(void (**)(id))(*(void *)v1 + 576))(v37);
  char v38 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 376))(v40);
  sub_5F0C0();
  return v38(v40, 0);
}

uint64_t sub_8EA7C()
{
  uint64_t v1 = (uint64_t (**)(void))(*v0 + 264);
  uint64_t v2 = *v1;
  int v3 = (void *)(*v1)();
  unsigned int v4 = [v3 vendorIDSource];

  if (v4 == 2)
  {
    id v5 = (void *)v2();
    unsigned int v6 = [v5 vendorID];

    if (v6 == 1452) {
      return 1;
    }
  }
  uint64_t v7 = (void *)v2();
  unsigned int v8 = [v7 vendorID];

  if (v8 == 76) {
    return 1;
  }
  unint64_t v9 = (void *)v2();
  unsigned __int16 v10 = (unsigned __int16)[v9 deviceFlags];

  if ((v10 & 0x8000) != 0) {
    return 1;
  }
  unsigned int v11 = (void *)v2();
  unint64_t v12 = (unint64_t)[v11 deviceFlags];

  return (v12 >> 1) & 1;
}

uint64_t sub_8EB9C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 240))();
  unint64_t v3 = v2;
  Class isa = sub_E5F70().super.isa;
  sub_8AD64(v1, v3);
  id v5 = (id)CUPrintNSDataAddress();

  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_E7110();

  return v6;
}

uint64_t sub_8EC44()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 976))();
  if (v2)
  {
    sub_187B0();
    uint64_t v1 = sub_E73F0();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_8ED18()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 968))() & 1) != 0
    && (uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))(),
        unsigned int v2 = [v1 deviceType],
        v1,
        v2 == 12))
  {
    sub_4D61C();
    uint64_t v3 = sub_E7140();
  }
  else
  {
    id v5 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
    [v5 deviceType];

    CBDeviceTypeToString();
    sub_E71C0();
    uint64_t v6 = sub_E7140();
    unsigned int v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v3 = v6;
    unsigned int v4 = v8;
  }
  uint64_t v9 = sub_B7108(v3, v4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_8EE58()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  id v2 = [v1 modelUser];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_E7110();

  return v3;
}

uint64_t sub_8EEF4()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 968))() & 1) == 0) {
    return 0;
  }
  sub_10C7C(&qword_122298);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_EBBE0;
  id v2 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unsigned int v3 = [v2 productID];

  *(void *)(v1 + 56) = &type metadata for UInt32;
  *(void *)(v1 + 64) = &protocol witness table for UInt32;
  *(_DWORD *)(v1 + 32) = v3;
  return sub_E7120();
}

uint64_t sub_8EFFC()
{
  uint64_t v1 = v0;
  sub_E7660();
  sub_10C7C(&qword_123490);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_EBBE0;
  v36._uint64_t countAndFlagsBits = (*(uint64_t (**)(void))(*(void *)v0 + 360))();
  sub_E71A0(v36);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 32) = 2313;
  *(void *)(v2 + 4sub_E59A4(2, 18, 1, 0) = 0xE200000000000000;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_EB580;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 32) = 0x90909093A6469;
  *(void *)(v3 + 4sub_E59A4(2, 18, 1, 0) = 0xE700000000000000;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v0 + 216))();
  *(void *)(v3 + 88) = &type metadata for ObjectIdentifier;
  *(void *)(v3 + 64) = v4;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_EB580;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 32) = 0x3A73736572646461;
  *(void *)(v5 + 4sub_E59A4(2, 18, 1, 0) = 0xEA00000000000909;
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v0 + 976))();
  uint64_t v8 = v7;
  *(void *)(v5 + 88) = sub_10C7C(&qword_123F18);
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = v8;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_EB580;
  *(void *)(v9 + 56) = &type metadata for String;
  strcpy((char *)(v9 + 32), "isConnected:\t");
  *(_WORD *)(v9 + 46) = -4864;
  char v10 = (*(uint64_t (**)(void))(*(void *)v1 + 760))();
  *(void *)(v9 + 88) = &type metadata for Bool;
  *(unsigned char *)(v9 + 64) = v10 & 1;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_EB580;
  *(void *)(v11 + 56) = &type metadata for String;
  strcpy((char *)(v11 + 32), "isConnecting:\t");
  *(unsigned char *)(v11 + 47) = -18;
  char v12 = (*(uint64_t (**)(void))(*(void *)v1 + 808))();
  *(void *)(v11 + 88) = &type metadata for Bool;
  *(unsigned char *)(v11 + 64) = v12 & 1;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_EB580;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 32) = 0x6465726961507369;
  *(void *)(v13 + 4sub_E59A4(2, 18, 1, 0) = 0xEB0000000009093ALL;
  char v14 = (*(uint64_t (**)(void))(*(void *)v1 + 904))();
  *(void *)(v13 + 88) = &type metadata for Bool;
  *(unsigned char *)(v13 + 64) = v14 & 1;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_EB580;
  *(void *)(v15 + 56) = &type metadata for String;
  strcpy((char *)(v15 + 32), "isPairing:\t\t");
  *(unsigned char *)(v15 + 45) = 0;
  *(_WORD *)(v15 + 46) = -5120;
  char v16 = (*(uint64_t (**)(void))(*(void *)v1 + 856))();
  *(void *)(v15 + 88) = &type metadata for Bool;
  *(unsigned char *)(v15 + 64) = v16 & 1;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_EB580;
  *(void *)(v17 + 56) = &type metadata for String;
  strcpy((char *)(v17 + 32), "deviceType:\t\t");
  *(_WORD *)(v17 + 46) = -4864;
  uint64_t v18 = (*(uint64_t (**)(void))(*(void *)v1 + 336))();
  *(void *)(v17 + 88) = &type metadata for String;
  *(void *)(v17 + 64) = v18;
  *(void *)(v17 + 72) = v19;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_EB580;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 32) = 0xD000000000000010;
  *(void *)(v20 + 4sub_E59A4(2, 18, 1, 0) = 0x80000000000F2860;
  uint64_t v21 = *(uint64_t (**)(void))(*(void *)v1 + 264);
  uint64_t v22 = (void *)v21();
  id v23 = [v22 discoveryFlags];

  uint64_t v24 = sub_C7FAC((uint64_t)v23);
  *(void *)(v20 + 88) = &type metadata for String;
  *(void *)(v20 + 64) = v24;
  *(void *)(v20 + 72) = v25;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_EB580;
  *(void *)(v26 + 56) = &type metadata for String;
  strcpy((char *)(v26 + 32), "deviceFlags:\t");
  *(_WORD *)(v26 + 46) = -4864;
  unsigned __int16 v27 = (void *)v21();
  LODWORD(v23) = [v27 deviceFlags];

  uint64_t v28 = sub_C9E2C((int)v23);
  *(void *)(v26 + 88) = &type metadata for String;
  *(void *)(v26 + 64) = v28;
  *(void *)(v26 + 72) = v29;
  sub_E7660();
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_EB580;
  *(void *)(v30 + 56) = &type metadata for String;
  strcpy((char *)(v30 + 32), "serviceFlags:\t");
  *(unsigned char *)(v30 + 47) = -18;
  uint64_t v31 = (void *)v21();
  LODWORD(v1) = [v31 connectedServices];

  uint64_t v32 = sub_CAF6C(v1);
  *(void *)(v30 + 88) = &type metadata for String;
  *(void *)(v30 + 64) = v32;
  *(void *)(v30 + 72) = v33;
  sub_E7660();
  swift_bridgeObjectRelease();

  return sub_E7660();
}

uint64_t Device.deinit()
{
  sub_8AD64(*(void *)(v0 + 24), *(void *)(v0 + 32));

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__smartRoutingMode;
  uint64_t v2 = sub_10C7C(&qword_1246E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__showDeviceInfoView;
  uint64_t v4 = sub_10C7C((uint64_t *)&unk_124E10);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverBluetooth, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverUSB, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnected, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnecting, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPairing, v4);
  v5(v0 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPaired, v4);
  return v0;
}

uint64_t Device.__deallocating_deinit()
{
  Device.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_8F9B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Device();
  uint64_t result = sub_E6110();
  *a1 = result;
  return result;
}

uint64_t sub_8F9F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 216))();
  *a1 = result;
  return result;
}

uint64_t sub_8FA44(uint64_t *a1, uint64_t *a2)
{
  return _s25GameControlleriOSSettings6DeviceC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_8FA50(void *a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    (*(void (**)(void))(*v1 + 816))();
    (*(void (**)(void))(*v1 + 864))(0);
    uint64_t v4 = *(void (**)(void))(*(void *)*sub_11C20() + 496);
    swift_retain();
    v4(0);
    swift_release();
    swift_beginAccess();
    uint64_t v5 = (void *)v1[13];
    if (v5) {
      [v5 invalidate];
    }
  }
  swift_beginAccess();
  uint64_t v6 = (void *)v1[13];
  v2[13] = a1;
  id v7 = a1;

  sub_8B54C();
}

void type metadata accessor for CBSmartRoutingMode(uint64_t a1)
{
}

uint64_t sub_8FBC0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10C7C((uint64_t *)&unk_124E10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10C7C(&qword_1246E8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0xE000000000000000;
  *(void *)(v2 + 8sub_E59A4(2, 18, 1, 0) = 0;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 88) = 0xE000000000000000;
  uint64_t v12 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__smartRoutingMode;
  v39[0] = 0;
  type metadata accessor for CBSmartRoutingMode(0);
  sub_E6130();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v13 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__showDeviceInfoView;
  v39[0] = 0;
  sub_E6130();
  char v14 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32);
  v14(v13, v7, v4);
  uint64_t v15 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverBluetooth;
  v39[0] = 0;
  sub_E6130();
  v14(v15, v7, v4);
  uint64_t v16 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__connectedOverUSB;
  v39[0] = 0;
  sub_E6130();
  v14(v16, v7, v4);
  uint64_t v17 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnected;
  v39[0] = 0;
  sub_E6130();
  v14(v17, v7, v4);
  uint64_t v18 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isConnecting;
  v39[0] = 0;
  sub_E6130();
  v14(v18, v7, v4);
  uint64_t v19 = v2 + OBJC_IVAR____TtC25GameControlleriOSSettings6Device__isPairing;
  v39[0] = 0;
  sub_E6130();
  v14(v19, v7, v4);
  *(void *)(v2 + 16) = a1;
  id v20 = [a1 btAddressData];
  if (v20 || (id v20 = [a1 bleAdvertisementData]) != 0)
  {
    uint64_t v21 = sub_E5F80();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xC000000000000000;
  }
  *(void *)(v2 + 4sub_E59A4(2, 18, 1, 0) = a1;
  uint64_t v24 = (id *)(v2 + 40);
  *(void *)(v2 + 24) = v21;
  *(void *)(v2 + 32) = v23;
  id v25 = a1;
  *(void *)(v2 + 48) = objc_msgSend(self, "productInfoWithProductID:", objc_msgSend(v25, "productID"));
  swift_beginAccess();
  if (([*(id *)(v2 + 40) discoveryFlags] & 0x800000) == 0
    || ([*v24 deviceFlags] & 0x8000) != 0)
  {
    if (([*v24 discoveryFlags] & 0x800000) != 0
      && ([*v24 discoveryFlags] & 0x200000) != 0)
    {
      unint64_t v26 = ((unint64_t)[*v24 deviceFlags] >> 15) & 1;
    }
    else
    {
      LOBYTE(v26) = 0;
    }
  }
  else
  {
    LOBYTE(v26) = 1;
  }
  swift_beginAccess();
  v38[7] = v26;
  sub_E6130();
  swift_endAccess();
  unsigned __int8 v27 = [v25 smartRoutingMode];
  swift_getKeyPath();
  swift_getKeyPath();
  v39[0] = v27;
  swift_retain();
  sub_E6180();
  (*(void (**)(BOOL))(*(void *)v2 + 672))([v25 connectedServices] != 0);
  uint64_t v28 = (*(uint64_t (**)(unint64_t))(*(void *)v2 + 720))(((unint64_t)[v25 deviceFlags] >> 20) & 1);
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 992))(v28);
  (*(void (**)(uint64_t))(*(void *)v2 + 344))(v29);
  id v30 = [v25 name];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = sub_E7110();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = (*(uint64_t (**)(void))(*(void *)v2 + 336))();
    uint64_t v34 = v35;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 368))(v32, v34);
  Swift::String v36 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 376))(v39);
  sub_5F0C0();
  v36(v39, 0);
  return v2;
}

uint64_t _s25GameControlleriOSSettings6DeviceC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 264))();
  id v4 = [v3 identifier];

  if (v4)
  {
    uint64_t v5 = sub_E7110();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)(*(uint64_t (**)(void))(*(void *)a2 + 264))();
  id v9 = [v8 identifier];

  if (v9)
  {
    uint64_t v10 = sub_E7110();
    uint64_t v12 = v11;

    if (v7)
    {
      if (v12)
      {
        if (v5 == v10 && v7 == v12)
        {
          swift_bridgeObjectRelease();
          char v14 = 1;
        }
        else
        {
          char v14 = sub_E7620();
          swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
      goto LABEL_13;
    }
    if (v12)
    {
      char v14 = 0;
      goto LABEL_18;
    }
  }
  else if (v7)
  {
LABEL_13:
    char v14 = 0;
LABEL_18:
    swift_bridgeObjectRelease();
    return v14 & 1;
  }
  char v14 = 1;
  return v14 & 1;
}

void *sub_9040C()
{
  return &protocol witness table for ObservableObjectPublisher;
}

void *sub_90418()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_90424()
{
  return type metadata accessor for Device();
}

uint64_t type metadata accessor for Device()
{
  uint64_t result = qword_129720;
  if (!qword_129720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_90478()
{
  sub_905B4();
  if (v0 <= 0x3F)
  {
    sub_9060C(319, &qword_124F50, (uint64_t)&type metadata for Bool, (uint64_t (*)(void, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_905B4()
{
  if (!qword_124720)
  {
    type metadata accessor for CBSmartRoutingMode(255);
    unint64_t v0 = sub_E6190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_124720);
    }
  }
}

void sub_9060C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

id sub_9068C(void *a1)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_906DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSPreferencesStore();
  unint64_t v5 = sub_17B60();

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_9073C@<X0>(void *a1@<X0>, void *a2@<X2>, Swift::String *a3@<X8>)
{
  if (a1)
  {
    unint64_t v5 = a1;
    id v6 = [a2 fusedControllerIdentifier];
    uint64_t v7 = sub_E7110();
    uint64_t v9 = v8;

    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v5])(v7, v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t v11 = v5;
      id v12 = [a2 pilotIdentifier];
      uint64_t v13 = sub_E7110();
      uint64_t v15 = v14;

      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v11];
      uint64_t v17 = v16(v13, v15);

      uint64_t v18 = (void *)v17;
      swift_bridgeObjectRelease();
      if (v17)
      {
        uint64_t v19 = v11;
        id v20 = [a2 copilotIdentifier];
        uint64_t v21 = sub_E7110();
        uint64_t v23 = v22;

        uint64_t v24 = (void *)v16(v21, v23);
        swift_bridgeObjectRelease();
        if (v24)
        {
          uint64_t v70 = sub_E65E0();
          uint64_t v69 = sub_E6560();
          id v72 = v10;
          uint64_t v25 = sub_61950();
          uint64_t v74 = (void *)nullsub_44(v25);
          uint64_t v67 = v26;
          uint64_t v65 = v27;
          uint64_t v66 = sub_E65E0();
          id v28 = [v18 localizedName];
          sub_E7110();

          sub_187B0();
          uint64_t v29 = sub_E6920();
          uint64_t v62 = v30;
          uint64_t v63 = v29;
          uint64_t v64 = v31;
          char v61 = v32 & 1;
          sub_10C7C(&qword_122298);
          uint64_t v71 = v18;
          uint64_t v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = xmmword_EBBE0;
          id v34 = [v24 localizedName];
          uint64_t v35 = sub_E7110();
          uint64_t v37 = v36;

          *(void *)(v33 + 56) = &type metadata for String;
          *(void *)(v33 + 64) = sub_17068();
          *(void *)(v33 + 32) = v35;
          *(void *)(v33 + 4sub_E59A4(2, 18, 1, 0) = v37;
          Swift::String v38 = String.localized(with:)((Swift::OpaquePointer)v33);
          swift_bridgeObjectRelease();
          Swift::String v100 = v38;
          uint64_t v39 = sub_E6920();
          uint64_t v41 = v40;
          LOBYTE(v33) = v42 & 1;
          sub_E6850();
          uint64_t v43 = sub_E6900();
          uint64_t v45 = v44;
          uint64_t v68 = v24;
          char v47 = v46;
          swift_release();
          sub_18814(v39, v41, v33);
          swift_bridgeObjectRelease();
          LODWORD(v100._countAndFlagsBits) = sub_E6720();
          uint64_t v48 = sub_E68F0();
          uint64_t v50 = v49;
          uint64_t v73 = v51;
          LOBYTE(v39) = v52 & 1;
          sub_18814(v43, v45, v47 & 1);
          swift_bridgeObjectRelease();
          LOBYTE(v100._countAndFlagsBits) = v61;
          LOBYTE(v9sub_E59A4(2, 18, 1, 0) = v61;
          LOBYTE(v88[0]) = v39;
          sub_18804(v63, v62, v61);
          swift_bridgeObjectRetain();
          sub_18804(v48, v50, v39);
          swift_bridgeObjectRetain();
          sub_18814(v48, v50, v39);
          swift_bridgeObjectRelease();
          sub_18814(v63, v62, v61);
          swift_bridgeObjectRelease();
          v82[0] = 0;
          LODWORD(v86) = v100._countAndFlagsBits;
          BYTE3(v86) = BYTE3(v100._countAndFlagsBits);
          *(_DWORD *)uint64_t v85 = v90;
          *(_DWORD *)&v85[3] = *(_DWORD *)((char *)&v90 + 3);
          *(_DWORD *)((char *)&v83 + 3) = *(_DWORD *)((char *)v88 + 3);
          BYTE3(v83) = BYTE3(v88[0]);
          id v60 = v74;
          id v53 = v65;
          sub_18804(v63, v62, v61);
          swift_bridgeObjectRetain();
          sub_18804(v48, v50, v39);
          swift_bridgeObjectRetain();
          sub_18814(v63, v62, v61);
          swift_bridgeObjectRelease();
          sub_18814(v48, v50, v39);
          swift_bridgeObjectRelease();

          *(void *)&long long v75 = v74;
          *((void *)&v75 + 1) = v67;
          *(void *)&long long v76 = v53;
          *((void *)&v76 + 1) = v66;
          *(void *)&long long v77 = 0x4008000000000000;
          BYTE8(v77) = 0;
          *(_DWORD *)((char *)&v77 + 9) = v86;
          HIDWORD(v77) = *(_DWORD *)((char *)&v100._countAndFlagsBits + 3);
          *(void *)&long long v78 = v63;
          *((void *)&v78 + 1) = v62;
          LOBYTE(v79) = v61;
          DWORD1(v79) = *(_DWORD *)((char *)&v90 + 3);
          *(_DWORD *)((char *)&v79 + 1) = *(_DWORD *)v85;
          *((void *)&v79 + 1) = v64;
          *(void *)&long long v80 = v48;
          *((void *)&v80 + 1) = v50;
          v81[0] = v39;
          *(_DWORD *)&v81[4] = *(_DWORD *)((char *)&v83 + 3);
          *(_DWORD *)&v81[1] = v88[0];
          *(void *)&v81[8] = v73;
          *(void *)&v81[16] = 0;
          v81[24] = 1;
          char v110 = 1;
          *(_OWORD *)&v82[112] = *(_OWORD *)&v81[9];
          *(_OWORD *)&v82[103] = *(_OWORD *)v81;
          *(_OWORD *)&v82[87] = v80;
          *(_OWORD *)&v82[71] = v79;
          *(_OWORD *)&v82[55] = v78;
          *(_OWORD *)&v82[39] = v77;
          *(_OWORD *)&v82[23] = v76;
          *(_OWORD *)&v82[7] = v75;
          long long v83 = (unint64_t)v69;
          v84[0] = 1;
          *(_OWORD *)&v84[49] = *(_OWORD *)&v82[48];
          *(_OWORD *)&v84[33] = *(_OWORD *)&v82[32];
          *(_OWORD *)&v84[17] = *(_OWORD *)&v82[16];
          *(_OWORD *)&v84[1] = *(_OWORD *)v82;
          *(_OWORD *)&v84[113] = *(_OWORD *)&v82[112];
          *(_OWORD *)&v84[97] = *(_OWORD *)&v82[96];
          *(_OWORD *)&v84[81] = *(_OWORD *)&v82[80];
          *(_OWORD *)&v84[65] = *(_OWORD *)&v82[64];
          char v111 = 1;
          *(_OWORD *)&v85[23] = *(_OWORD *)v84;
          *(_OWORD *)&v85[7] = (unint64_t)v69;
          *(_OWORD *)&v85[87] = *(_OWORD *)&v84[64];
          *(_OWORD *)&v85[71] = *(_OWORD *)&v84[48];
          *(_OWORD *)&v85[55] = *(_OWORD *)&v84[32];
          *(_OWORD *)&v85[39] = *(_OWORD *)&v84[16];
          v85[151] = 1;
          *(_OWORD *)&v85[135] = *(_OWORD *)&v84[112];
          *(_OWORD *)&v85[119] = *(_OWORD *)&v84[96];
          *(_OWORD *)&v85[103] = *(_OWORD *)&v84[80];
          long long v86 = (unint64_t)v70;
          v87[0] = 1;
          *(_OWORD *)&v87[113] = *(_OWORD *)&v85[112];
          *(_OWORD *)&v87[97] = *(_OWORD *)&v85[96];
          *(_OWORD *)&v87[129] = *(_OWORD *)&v85[128];
          *(void *)&v87[145] = *(void *)&v85[144];
          *(_OWORD *)&v87[33] = *(_OWORD *)&v85[32];
          *(_OWORD *)&v87[49] = *(_OWORD *)&v85[48];
          *(_OWORD *)&v87[65] = *(_OWORD *)&v85[64];
          *(_OWORD *)&v87[81] = *(_OWORD *)&v85[80];
          *(_OWORD *)&v87[1] = *(_OWORD *)v85;
          *(_OWORD *)&v87[17] = *(_OWORD *)&v85[16];
          long long v98 = *(_OWORD *)&v87[112];
          v99[0] = *(_OWORD *)&v87[128];
          *(_OWORD *)((char *)v99 + 9) = *(_OWORD *)&v87[137];
          long long v94 = *(_OWORD *)&v87[48];
          long long v95 = *(_OWORD *)&v87[64];
          long long v97 = *(_OWORD *)&v87[96];
          long long v96 = *(_OWORD *)&v87[80];
          long long v90 = (unint64_t)v70;
          long long v91 = *(_OWORD *)v87;
          long long v93 = *(_OWORD *)&v87[32];
          long long v92 = *(_OWORD *)&v87[16];
          sub_910FC((uint64_t)&v90);
          sub_936F0((uint64_t)&v90, (uint64_t)&v100, &qword_124B48);
          sub_91104((uint64_t)&v83);
          sub_911A0((uint64_t)&v86);
          sub_10C7C(&qword_124B50);
          sub_10C7C(&qword_124B58);
          sub_9323C(&qword_124B60, &qword_124B50);
          sub_9323C(&qword_124B68, &qword_124B58);
          sub_E6610();

          sub_9123C((uint64_t)&v75);
          uint64_t result = sub_9123C((uint64_t)&v75);
          Swift::String v108 = (Swift::String)v88[8];
          v109[0] = v89[0];
          *(_OWORD *)((char *)v109 + 1sub_E59A4(2, 18, 1, 0) = *(_OWORD *)((char *)v89 + 10);
          Swift::String v104 = (Swift::String)v88[4];
          Swift::String v105 = (Swift::String)v88[5];
          Swift::String v107 = (Swift::String)v88[7];
          Swift::String v106 = (Swift::String)v88[6];
          Swift::String v100 = (Swift::String)v88[0];
          Swift::String v101 = (Swift::String)v88[1];
          Swift::String v103 = (Swift::String)v88[3];
          Swift::String v102 = (Swift::String)v88[2];
LABEL_9:
          Swift::String v55 = (Swift::String)v109[0];
          a3[8] = v108;
          a3[9] = v55;
          *(Swift::String *)((char *)a3 + 154) = *(Swift::String *)((char *)v109 + 10);
          Swift::String v56 = v105;
          a3[4] = v104;
          a3[5] = v56;
          Swift::String v57 = v107;
          a3[6] = v106;
          a3[7] = v57;
          Swift::String v58 = v101;
          *a3 = v100;
          a3[1] = v58;
          Swift::String v59 = v103;
          a3[2] = v102;
          a3[3] = v59;
          return result;
        }

        uint64_t v10 = v18;
      }
    }
    long long v90 = (unint64_t)sub_E65D0();
    LOBYTE(v91) = 1;
    sub_910F0((uint64_t)&v90);
    sub_936F0((uint64_t)&v90, (uint64_t)v88, &qword_124B48);
    sub_10C7C(&qword_124B50);
    sub_10C7C(&qword_124B58);
    sub_9323C(&qword_124B60, &qword_124B50);
    sub_9323C(&qword_124B68, &qword_124B58);
    uint64_t result = sub_E6610();
    goto LABEL_9;
  }
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

uint64_t sub_910F0(uint64_t result)
{
  *(unsigned char *)(result + 169) = 1;
  return result;
}

uint64_t sub_910FC(uint64_t result)
{
  *(unsigned char *)(result + 169) = 0;
  return result;
}

uint64_t sub_91104(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  char v5 = *(unsigned char *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  char v8 = *(unsigned char *)(a1 + 120);
  id v9 = *(id *)(a1 + 24);
  id v10 = v2;
  sub_18804(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_18804(v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_911A0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  char v5 = *(unsigned char *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 136);
  char v8 = *(unsigned char *)(a1 + 144);
  id v9 = *(id *)(a1 + 48);
  id v10 = v2;
  sub_18804(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_18804(v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_9123C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  char v5 = *(unsigned char *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  char v8 = *(unsigned char *)(a1 + 96);

  sub_18814(v3, v4, v5);
  swift_bridgeObjectRelease();
  sub_18814(v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_912DC()
{
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();

  return sub_E63F0();
}

uint64_t sub_9132C@<X0>(Swift::String *a1@<X8>)
{
  return sub_9073C(*v1, v1[2], a1);
}

id sub_91338()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_91398()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  unint64_t v4 = sub_17B60();

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_913F0()
{
  sub_10C7C(&qword_123590);
  sub_E6DE0();
  return v1;
}

uint64_t sub_91440()
{
  return sub_E6DF0();
}

uint64_t (*sub_91494(void *a1))()
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  v3[6] = v4;
  v3[7] = v5;
  uint64_t v6 = (void *)v1[4];
  v3[8] = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  id v7 = v6;
  v3[9] = sub_10C7C(&qword_123590);
  sub_E6DE0();
  return sub_9153C;
}

uint64_t sub_91540()
{
  sub_10C7C(&qword_123590);
  sub_E6E10();
  return v1;
}

uint64_t sub_91594()
{
  sub_10C7C(&qword_123590);
  sub_E6DE0();
  return v1;
}

uint64_t sub_915E4()
{
  return sub_E6DF0();
}

uint64_t (*sub_91638(void *a1))()
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  v3[6] = v4;
  v3[7] = v5;
  uint64_t v6 = (void *)v1[7];
  v3[8] = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  id v7 = v6;
  v3[9] = sub_10C7C(&qword_123590);
  sub_E6DE0();
  return sub_916E0;
}

void sub_916E4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a1 + 24;
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  *(void *)(*(void *)a1 + 32) = v4;
  uint64_t v5 = (void *)*((void *)v2 + 8);
  uint64_t v6 = *((void *)v2 + 7);
  *(void *)uint64_t v2 = *((void *)v2 + 6);
  *((void *)v2 + 1) = v6;
  *((void *)v2 + 2) = v5;
  if (a2)
  {
    id v7 = v4;
    sub_E6DF0();
    sub_18B48(v3);
    swift_release();
  }
  else
  {
    sub_E6DF0();
    sub_18B48(v3);
    swift_release();
  }

  free(v2);
}

uint64_t sub_917A0()
{
  sub_10C7C(&qword_123590);
  sub_E6E10();
  return v1;
}

uint64_t sub_917F4()
{
  sub_10C7C(&qword_122890);
  sub_E6DE0();
  return v1;
}

uint64_t sub_91844()
{
  return sub_E6DF0();
}

void (*sub_91898(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  v3[4] = v4;
  v3[5] = v5;
  char v6 = *(unsigned char *)(v1 + 80);
  *((unsigned char *)v3 + 19) = v6;
  v3[3] = v4;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  sub_18AF0((uint64_t)(v3 + 3));
  swift_retain();
  v3[6] = sub_10C7C(&qword_122890);
  sub_E6DE0();
  return sub_9193C;
}

void sub_9193C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)a1 + 24;
  char v3 = *(unsigned char *)(*(void *)a1 + 18);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  char v5 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 32);
  v1[1] = v4;
  *((unsigned char *)v1 + 16) = v5;
  *((unsigned char *)v1 + 17) = v3;
  sub_E6DF0();
  sub_18B48(v2);
  swift_release();

  free(v1);
}

uint64_t sub_919B0()
{
  sub_10C7C(&qword_122890);
  sub_E6E10();
  return v1;
}

uint64_t sub_91A04()
{
  sub_10C7C(&qword_124B70);
  sub_E6D10();
  return v1;
}

uint64_t sub_91A44()
{
  return 0;
}

uint64_t sub_91A4C()
{
  id v1 = *v0;
  if (!*v0) {
    goto LABEL_13;
  }
  id v2 = [*v0 unfusedFusableControllers];
  sub_93198(0, (unint64_t *)&qword_124E30);
  uint64_t v3 = sub_E7210();

  if ((v3 & 0xC000000000000001) != 0)
  {
    sub_E74E0();
    goto LABEL_5;
  }
  if (*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
  {
    id v4 = *(id *)(v3 + 32);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_10C7C(&qword_123590);
    sub_E6DF0();
    id v5 = [v1 unfusedFusableControllers];
    uint64_t v6 = sub_E7210();

    if ((v6 & 0xC000000000000001) != 0)
    {
      sub_E74E0();
      goto LABEL_8;
    }
    if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)) >= 2uLL)
    {
      id v7 = *(id *)(v6 + 40);
LABEL_8:
      swift_bridgeObjectRelease();
      sub_E6DF0();
      sub_10C7C(&qword_122890);
      return sub_E6DF0();
    }
    goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();
  uint64_t result = sub_E63E0();
  __break(1u);
  return result;
}

void sub_91C34()
{
  long long v10 = *(_OWORD *)(v0 + 88);
  sub_10C7C(&qword_124B78);
  sub_E6D20();
  id v1 = v11;
  if (v11)
  {
    if (*(void *)v0)
    {
      id v2 = *(id *)v0;
      id v3 = objc_msgSend(v11, "fusedControllerIdentifier", v10);
      uint64_t v4 = sub_E7110();
      uint64_t v6 = v5;

      id v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v2])(v4, v6);
      swift_bridgeObjectRelease();
      if (v7)
      {
        char v8 = v2;
        char v9 = sub_A4160();
        (*(void (**)(void *, void))((char *)&stru_2E8.size + (swift_isaMask & *v8)))(v7, v9 & 1);

        id v1 = v8;
      }
    }
    else
    {
      type metadata accessor for GCSPreferencesStore();
      sub_17B60();
      sub_E63E0();
      __break(1u);
    }
  }
}

uint64_t sub_91DCC()
{
  return sub_E6ED0();
}

uint64_t sub_91F18()
{
  return sub_E68A0();
}

uint64_t sub_92018()
{
  return sub_91F18();
}

uint64_t sub_92020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v57 = sub_10C7C(&qword_122B88);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v51 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10C7C(&qword_122D28);
  uint64_t v4 = __chkstk_darwin(v53);
  Swift::String v58 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  char v52 = (char *)&v50 - v7;
  __chkstk_darwin(v6);
  Swift::String v56 = (char *)&v50 - v8;
  uint64_t v9 = sub_10C7C(&qword_124BC8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10C7C(&qword_124BD0);
  uint64_t v13 = __chkstk_darwin(v50);
  char v54 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin(v15);
  uint64_t v60 = (uint64_t)&v50 - v18;
  id v19 = *(id *)a1;
  if (*(void *)a1)
  {
    id v20 = [*(id *)a1 copilotFusedControllers];
    sub_93198(0, (unint64_t *)&unk_124E40);
    uint64_t v21 = sub_E7210();

    uint64_t v61 = v21;
    swift_getKeyPath();
    sub_10C7C(&qword_124BD8);
    sub_9323C(&qword_124BE0, &qword_124BD8);
    sub_931D4();
    sub_93280();
    sub_E6EB0();
    uint64_t v22 = swift_allocObject();
    long long v23 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v22 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v22 + 96) = v23;
    *(void *)(v22 + 112) = *(void *)(a1 + 96);
    long long v24 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v22 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v22 + 32) = v24;
    long long v25 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v22 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v22 + 64) = v25;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_932D8;
    *(void *)(v26 + 24) = v22;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v12, v9);
    unsigned __int8 v27 = (uint64_t (**)())&v17[*(int *)(v50 + 36)];
    void *v27 = sub_93540;
    v27[1] = (uint64_t (*)())v26;
    sub_93568(a1);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_936F0((uint64_t)v17, v60, &qword_124BD0);
    uint64_t v28 = swift_allocObject();
    long long v29 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v28 + 8sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v28 + 96) = v29;
    *(void *)(v28 + 112) = *(void *)(a1 + 96);
    long long v30 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v28 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v28 + 32) = v30;
    long long v31 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v28 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v28 + 64) = v31;
    sub_93568(a1);
    char v32 = v51;
    sub_E6D80();
    id v33 = [v19 unfusedFusableControllers];
    sub_93198(0, (unint64_t *)&qword_124E30);
    unint64_t v34 = sub_E7210();

    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_E7570();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = *(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8));
    }
    uint64_t v37 = (uint64_t)v58;
    uint64_t v36 = v59;
    uint64_t v39 = (uint64_t)v56;
    uint64_t v38 = v57;
    uint64_t v41 = (uint64_t)v54;
    uint64_t v40 = v55;
    swift_bridgeObjectRelease();
    BOOL v42 = v35 < 2;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = v42;
    uint64_t v45 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v52, v32, v38);
    char v46 = (uint64_t *)(v45 + *(int *)(v53 + 36));
    *char v46 = KeyPath;
    v46[1] = (uint64_t)sub_936D8;
    v46[2] = v44;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v38);
    sub_936F0(v45, v39, &qword_122D28);
    uint64_t v47 = v60;
    sub_93754(v60, v41, &qword_124BD0);
    sub_93754(v39, v37, &qword_122D28);
    sub_93754(v41, v36, &qword_124BD0);
    uint64_t v48 = sub_10C7C(&qword_124BF0);
    sub_93754(v37, v36 + *(int *)(v48 + 48), &qword_122D28);
    sub_937B8(v39, &qword_122D28);
    sub_937B8(v47, &qword_124BD0);
    sub_937B8(v37, &qword_122D28);
    return sub_937B8(v41, &qword_124BD0);
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    uint64_t result = sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_926EC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for GCSPreferencesStore();
  sub_17B60();
  id v4 = v3;
  uint64_t result = sub_E63F0();
  *a2 = result;
  a2[1] = v6;
  a2[2] = (uint64_t)v4;
  return result;
}

uint64_t sub_92748@<X0>(uint64_t a1@<X8>)
{
  sub_B7108(0xD00000000000001FLL, (void *)0x80000000000F29B0);
  sub_187B0();
  uint64_t result = sub_E6920();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

__n128 sub_927BC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12)
{
  sub_10C7C(&qword_124B70);
  sub_E6D10();
  __n128 result = v22;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a12;
  *(__n128 *)(a9 + 88) = v22;
  return result;
}

uint64_t sub_92870()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_9288C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_928B0()
{
  return sub_E69D0();
}

uint64_t sub_928CC()
{
  return sub_E6ED0();
}

void *initializeBufferWithCopyOfBuffer for GCSCopilotListViewRow(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

void destroy for GCSCopilotListViewRow(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for GCSCopilotListViewRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for GCSCopilotListViewRow(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSCopilotListViewRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSCopilotListViewRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSCopilotListViewRow()
{
  return &type metadata for GCSCopilotListViewRow;
}

uint64_t initializeBufferWithCopyOfBuffer for GCSCopilotListView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for GCSCopilotListView(id *a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GCSCopilotListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  id v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v6;
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void **)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v10;
  id v12 = v3;
  swift_retain();
  swift_retain();
  id v13 = v7;
  swift_retain();
  swift_retain();
  id v14 = v8;
  swift_retain();
  swift_retain();
  id v15 = v11;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GCSCopilotListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  id v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v10 = *(void **)(a2 + 56);
  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v10;
  id v12 = v10;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  id v13 = *(void **)(a1 + 88);
  id v14 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v14;
  id v15 = v14;

  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GCSCopilotListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  uint64_t v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GCSCopilotListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSCopilotListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_E59A4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSCopilotListView()
{
  return &type metadata for GCSCopilotListView;
}

unint64_t sub_93028()
{
  unint64_t result = qword_124B90;
  if (!qword_124B90)
  {
    sub_11B60(&qword_124B98);
    sub_9323C(&qword_124B60, &qword_124B50);
    sub_9323C(&qword_124B68, &qword_124B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124B90);
  }
  return result;
}

unint64_t sub_930EC()
{
  unint64_t result = qword_124BA0;
  if (!qword_124BA0)
  {
    sub_11B60(&qword_124BA8);
    sub_9323C(&qword_124B88, &qword_124B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124BA0);
  }
  return result;
}

uint64_t sub_93190@<X0>(uint64_t a1@<X8>)
{
  return sub_92020(*(void *)(v1 + 16), a1);
}

uint64_t sub_93198(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_931D4()
{
  unint64_t result = qword_124BB8;
  if (!qword_124BB8)
  {
    sub_93198(255, (unint64_t *)&unk_124E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124BB8);
  }
  return result;
}

uint64_t sub_9323C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_93280()
{
  unint64_t result = qword_124BE8;
  if (!qword_124BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124BE8);
  }
  return result;
}

void sub_932D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_E6090();
  if (v3) {
    return;
  }
  uint64_t v4 = *(void **)(v0 + 16);
  if (!v4)
  {
LABEL_16:
    type metadata accessor for GCSPreferencesStore();
    sub_17B60();
    sub_E63E0();
    __break(1u);
    return;
  }
  unint64_t v5 = v2;
  id v6 = [*(id *)(v1 + 16) copilotFusedControllers];
  sub_93198(0, (unint64_t *)&unk_124E40);
  uint64_t v7 = sub_E7210();

  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)sub_E74E0();
    goto LABEL_7;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 >= *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v8 = *(id *)(v7 + 8 * v5 + 32);
LABEL_7:
  id v17 = v8;
  swift_bridgeObjectRelease();
  id v9 = v4;
  id v10 = [v17 fusedControllerIdentifier];
  uint64_t v11 = sub_E7110();
  uint64_t v13 = v12;

  id v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v9])(v11, v13);
  swift_bridgeObjectRelease();

  if (v14)
  {
    id v15 = v9;
    char v16 = sub_A4160();
    (*(void (**)(void *, void))((char *)&stru_2E8.size + (swift_isaMask & *v15)))(v14, v16 & 1);
  }
}

uint64_t sub_93508()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_93540()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_93568(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 56);
  id v10 = *(void **)(a1 + 88);
  swift_retain();
  id v5 = v2;
  swift_retain();
  swift_retain();
  id v6 = v3;
  swift_retain();
  swift_retain();
  id v7 = v4;
  swift_retain();
  swift_retain();
  id v8 = v10;
  return a1;
}

uint64_t sub_9361C()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_936A4()
{
  return sub_91A4C();
}

uint64_t sub_936C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_936D8(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_936F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_93754(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_937B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_93828(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*sub_93854())()
{
  return nullsub_57;
}

void *initializeBufferWithCopyOfBuffer for GCSSelectedGame(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for GCSSelectedGame(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for GCSSelectedGame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for GCSSelectedGame(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for GCSSelectedGame(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GCSSelectedGame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GCSSelectedGame()
{
  return &type metadata for GCSSelectedGame;
}

id sub_93A1C()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    return v1;
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_9593C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id result = (id)sub_E63E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_93AAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for GCSPreferencesStore();
  uint64_t v4 = sub_9593C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return EnvironmentObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_93B34()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  sub_19100(v1, v2);
  char v3 = sub_1FB00(v1, v2);
  sub_19048(v1, v2);
  return v3 & 1;
}

id sub_93B8C()
{
  return *(id *)(v0 + 32);
}

uint64_t sub_93B94()
{
  sub_10C7C(&qword_124BF8);
  sub_E6DE0();
  return v1;
}

uint64_t sub_93BE4()
{
  return sub_E6DF0();
}

uint64_t (*sub_93C34(void *a1))()
{
  char v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  v3[5] = v4;
  v3[6] = v5;
  id v6 = (void *)v1[7];
  v3[7] = v6;
  *char v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = sub_10C7C(&qword_124BF8);
  sub_E6DE0();
  return sub_93CD8;
}

uint64_t sub_93CDC()
{
  sub_10C7C(&qword_124BF8);
  sub_E6E10();
  return v1;
}

uint64_t sub_93D30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_93D38()
{
  sub_10C7C(&qword_124150);
  sub_E6DE0();
  return v1;
}

uint64_t sub_93D88()
{
  return sub_E6DF0();
}

uint64_t (*sub_93DD8(void *a1))()
{
  char v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = v1[9];
  uint64_t v5 = v1[10];
  v3[5] = v4;
  v3[6] = v5;
  id v6 = (void *)v1[11];
  v3[7] = v6;
  *char v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = sub_10C7C(&qword_124150);
  sub_E6DE0();
  return sub_93E7C;
}

uint64_t sub_93E80()
{
  sub_10C7C(&qword_124150);
  sub_E6E10();
  return v1;
}

uint64_t sub_93ED4()
{
  return sub_941CC((uint64_t (*)(uint64_t))&Binding.wrappedValue.getter);
}

uint64_t type metadata accessor for GCSControllerCustomizeGameView()
{
  uint64_t result = qword_1298D0;
  if (!qword_1298D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_93F38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GCSProfileParams();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GCSControllerCustomizeGameView();
  sub_99058(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  return sub_990C0(a1, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
}

void (*sub_94000(void **a1))(uint64_t a1, char a2)
{
  size_t v3 = *(void *)(*(void *)(type metadata accessor for GCSProfileParams() - 8) + 64);
  *a1 = malloc(v3);
  a1[1] = malloc(v3);
  uint64_t v4 = sub_10C7C(&qword_122BB0);
  a1[2] = (void *)v4;
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  a1[3] = v5;
  uint64_t v6 = type metadata accessor for GCSControllerCustomizeGameView();
  sub_99184(v1 + *(int *)(v6 + 40), (uint64_t)v5, &qword_122BB0);
  sub_E6DE0();
  return sub_940EC;
}

void sub_940EC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 24);
  size_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (a2)
  {
    sub_99058(*(void *)(a1 + 8), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
    sub_E6DF0();
    sub_991E8((uint64_t)v2, &qword_122BB0);
    sub_990C0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  }
  else
  {
    sub_E6DF0();
    sub_991E8((uint64_t)v2, &qword_122BB0);
  }
  free(v2);
  free(v4);

  free(v3);
}

uint64_t sub_941B4()
{
  return sub_941CC((uint64_t (*)(uint64_t))&Binding.projectedValue.getter);
}

uint64_t sub_941CC(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for GCSControllerCustomizeGameView();
  uint64_t v2 = sub_10C7C(&qword_122BB0);
  return a1(v2);
}

__n128 sub_94220@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSControllerCustomizeGameView();
  sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  __n128 result = v4;
  *(_OWORD *)a1 = v3;
  *(__n128 *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_942D4()
{
  return sub_E6DF0();
}

void (*sub_94388(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x358uLL);
  *a1 = v3;
  __n128 v4 = (long long *)(v1 + *(int *)(type metadata accessor for GCSControllerCustomizeGameView() + 44));
  long long v6 = v4[6];
  long long v5 = v4[7];
  long long v7 = v4[5];
  v3[6] = v6;
  v3[7] = v5;
  long long v8 = v4[7];
  v3[8] = v4[8];
  long long v10 = v4[2];
  long long v9 = v4[3];
  long long v11 = v4[1];
  v3[2] = v10;
  v3[3] = v9;
  long long v12 = v4[3];
  long long v14 = v4[4];
  long long v13 = v4[5];
  v3[4] = v14;
  v3[5] = v13;
  long long v15 = v4[1];
  long long v16 = *v4;
  *long long v3 = *v4;
  v3[1] = v15;
  *(_OWORD *)((char *)v3 + 248) = v6;
  long long v17 = v4[8];
  *(_OWORD *)((char *)v3 + 264) = v8;
  *(_OWORD *)((char *)v3 + 28sub_E59A4(2, 18, 1, 0) = v17;
  *(_OWORD *)((char *)v3 + 184) = v10;
  *(_OWORD *)((char *)v3 + 20sub_E59A4(2, 18, 1, 0) = v12;
  *(_OWORD *)((char *)v3 + 216) = v14;
  *(_OWORD *)((char *)v3 + 232) = v7;
  *(_OWORD *)((char *)v3 + 152) = v16;
  *((void *)v3 + 18) = *((void *)v4 + 18);
  *((void *)v3 + 37) = *((void *)v4 + 18);
  *(_OWORD *)((char *)v3 + 168) = v11;
  sub_27E80((uint64_t)v3);
  *((void *)v3 + 106) = sub_10C7C(&qword_122BB8);
  sub_E6DE0();
  return sub_9448C;
}

void sub_9448C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 152;
  uint64_t v4 = (uint64_t)*a1 + 304;
  long long v5 = (_OWORD *)((char *)v2 + 712);
  if (a2)
  {
    long long v6 = *(_OWORD *)((char *)v2 + 792);
    long long v8 = *(_OWORD *)((char *)v2 + 808);
    long long v7 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 112) = v7;
    long long v9 = *(_OWORD *)((char *)v2 + 728);
    long long v11 = *(_OWORD *)((char *)v2 + 744);
    long long v10 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = v11;
    *(_OWORD *)(v4 + 48) = v10;
    long long v12 = *(_OWORD *)((char *)v2 + 760);
    long long v14 = *(_OWORD *)((char *)v2 + 776);
    long long v13 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = v14;
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v13;
    long long v15 = *(_OWORD *)((char *)v2 + 728);
    long long v16 = *v5;
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v15;
    long long v17 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v17;
    *(_OWORD *)(v3 + 128) = v2[8];
    long long v18 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v18;
    long long v19 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v19;
    long long v20 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v20;
    long long v21 = *(_OWORD *)((char *)v2 + 824);
    v2[42] = v8;
    v2[43] = v21;
    v2[38] = v11;
    v2[39] = v12;
    v2[40] = v14;
    v2[41] = v6;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    *((void *)v2 + 88) = *((void *)v2 + 105);
    v2[36] = v16;
    v2[37] = v9;
    sub_27F58((void **)v4);
    sub_E6DF0();
    sub_28014((uint64_t)v2);
    long long v22 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)((char *)v2 + 536) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)((char *)v2 + 552) = v22;
    *((void *)v2 + 71) = *((void *)v2 + 105);
    long long v23 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)((char *)v2 + 472) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)((char *)v2 + 488) = v23;
    long long v24 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)((char *)v2 + 504) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)((char *)v2 + 52sub_E59A4(2, 18, 1, 0) = v24;
    long long v25 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)((char *)v2 + 44sub_E59A4(2, 18, 1, 0) = *v5;
    *(_OWORD *)((char *)v2 + 456) = v25;
    sub_280EC((uint64_t)v2 + 440);
  }
  else
  {
    long long v26 = *(_OWORD *)((char *)v2 + 824);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)((char *)v2 + 808);
    *(_OWORD *)(v4 + 112) = v26;
    *(void *)(v4 + 128) = *((void *)v2 + 105);
    long long v27 = *(_OWORD *)((char *)v2 + 760);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)((char *)v2 + 744);
    *(_OWORD *)(v4 + 48) = v27;
    long long v28 = *(_OWORD *)((char *)v2 + 792);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)((char *)v2 + 776);
    *(_OWORD *)(v4 + 8sub_E59A4(2, 18, 1, 0) = v28;
    long long v29 = *(_OWORD *)((char *)v2 + 728);
    *(_OWORD *)uint64_t v4 = *v5;
    *(_OWORD *)(v4 + 16) = v29;
    long long v30 = v2[7];
    *(_OWORD *)(v3 + 96) = v2[6];
    *(_OWORD *)(v3 + 112) = v30;
    *(_OWORD *)(v3 + 128) = v2[8];
    *(void *)(v3 + 144) = *((void *)v2 + 18);
    long long v31 = v2[3];
    *(_OWORD *)(v3 + 32) = v2[2];
    *(_OWORD *)(v3 + 48) = v31;
    long long v32 = v2[5];
    *(_OWORD *)(v3 + 64) = v2[4];
    *(_OWORD *)(v3 + 8sub_E59A4(2, 18, 1, 0) = v32;
    long long v33 = v2[1];
    *(_OWORD *)uint64_t v3 = *v2;
    *(_OWORD *)(v3 + 16) = v33;
    sub_E6DF0();
    sub_28014((uint64_t)v2);
  }

  free(v2);
}

double sub_94624@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for GCSControllerCustomizeGameView();
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(void *)(a1 + 144) = v12;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 8sub_E59A4(2, 18, 1, 0) = v8;
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_946E0()
{
  type metadata accessor for GCSControllerCustomizeGameView();
  sub_10C7C(&qword_123590);
  sub_E6DE0();
  return v1;
}

uint64_t sub_94740()
{
  return sub_E6DF0();
}

uint64_t (*sub_947A4(void *a1))()
{
  long long v3 = malloc(0x48uLL);
  *a1 = v3;
  long long v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GCSControllerCustomizeGameView() + 48));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[5] = *v4;
  v3[6] = v6;
  long long v7 = (void *)v4[2];
  v3[7] = v7;
  *long long v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  swift_retain();
  swift_retain();
  id v8 = v7;
  v3[8] = sub_10C7C(&qword_123590);
  sub_E6DE0();
  return sub_94858;
}

void sub_9485C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  long long v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)uint64_t v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_E6DF0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_E6DF0();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t sub_94914()
{
  type metadata accessor for GCSControllerCustomizeGameView();
  sub_10C7C(&qword_123590);
  sub_E6E10();
  return v1;
}

uint64_t sub_94978()
{
  sub_E6D10();
  return v1;
}

uint64_t sub_949B4()
{
  return 0;
}

uint64_t sub_949C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v2 = type metadata accessor for GCSControllerCustomizeGameView();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v38 = *(void *)(v39 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_E66C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  uint64_t v34 = v5;
  __chkstk_darwin(v4);
  long long v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10C7C(&qword_124C00);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10C7C(&qword_124C08);
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  __chkstk_darwin(v12);
  long long v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10C7C(&qword_124C10);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  long long v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v1;
  sub_10C7C(&qword_124C18);
  sub_99370(&qword_124C20, &qword_124C18);
  sub_E6890();
  sub_E66B0();
  sub_99370(&qword_124C28, &qword_124C00);
  sub_9593C(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
  uint64_t v19 = v33;
  sub_E6A90();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v20 = v32;
  uint64_t v42 = *(void *)(v32 + 72);
  long long v43 = *(_OWORD *)(v32 + 80);
  sub_10C7C(&qword_124150);
  sub_E6DE0();
  uint64_t v21 = v44;
  uint64_t v22 = v37;
  sub_99058(v20, v37, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);
  unint64_t v23 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v24 = swift_allocObject();
  sub_96D30(v22, v24 + v23);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v18, v14, v36);
  long long v27 = &v18[*(int *)(v16 + 44)];
  *(void *)long long v27 = v21;
  *((void *)v27 + 1) = sub_96D94;
  *((void *)v27 + 2) = v24;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
  uint64_t v28 = v40;
  sub_99184((uint64_t)v18, v40, &qword_124C10);
  long long v29 = (uint64_t (**)())(v28 + *(int *)(sub_10C7C(&qword_124C30) + 36));
  *long long v29 = sub_96E04;
  v29[1] = 0;
  v29[2] = 0;
  v29[3] = 0;
  return sub_991E8((uint64_t)v18, &qword_124C10);
}

uint64_t sub_94E9C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  Swift::String v107 = a2;
  uint64_t v98 = sub_10C7C(&qword_122BB0);
  __chkstk_darwin(v98);
  uint64_t v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GCSProfileContentView();
  __chkstk_darwin(v5 - 8);
  uint64_t v100 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10C7C(&qword_124278) - 8;
  uint64_t v7 = __chkstk_darwin(v106);
  uint64_t v101 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v104 = (uint64_t)&v80 - v9;
  uint64_t v105 = sub_10C7C(&qword_124CE8);
  uint64_t v103 = *(void *)(v105 - 8);
  uint64_t v10 = __chkstk_darwin(v105);
  Swift::String v102 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v99 = (char *)&v80 - v12;
  uint64_t v108 = a1;
  sub_10C7C(&qword_124CF0);
  sub_99370(&qword_124CF8, &qword_124CF0);
  sub_E6EE0();
  uint64_t v13 = type metadata accessor for GCSControllerCustomizeGameView();
  uint64_t v14 = a1 + *(int *)(v13 + 44);
  long long v15 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v15;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v16 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v18;
  sub_10C7C(&qword_122BB8);
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v151[6];
  long long v172 = v151[7];
  long long v173 = v151[8];
  uint64_t v174 = v152;
  long long v167 = v151[2];
  long long v168 = v151[3];
  long long v169 = v151[4];
  long long v170 = v151[5];
  __n128 v165 = (__n128)v151[0];
  long long v166 = v151[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v151);
  uint64_t v96 = v147;
  uint64_t v97 = v146;
  uint64_t v95 = v148;
  long long v19 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v19;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v20 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v20;
  long long v21 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v21;
  long long v22 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v22;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v153[6];
  long long v172 = v153[7];
  long long v173 = v153[8];
  uint64_t v174 = v154;
  long long v167 = v153[2];
  long long v168 = v153[3];
  long long v169 = v153[4];
  long long v170 = v153[5];
  __n128 v165 = (__n128)v153[0];
  long long v166 = v153[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v153);
  uint64_t v93 = v144;
  uint64_t v94 = v143;
  uint64_t v92 = v145;
  long long v23 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v23;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v24 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v24;
  long long v25 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v25;
  long long v26 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v26;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v155[6];
  long long v172 = v155[7];
  long long v173 = v155[8];
  uint64_t v174 = v156;
  long long v167 = v155[2];
  long long v168 = v155[3];
  long long v169 = v155[4];
  long long v170 = v155[5];
  __n128 v165 = (__n128)v155[0];
  long long v166 = v155[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v155);
  uint64_t v90 = v141;
  uint64_t v91 = v140;
  uint64_t v89 = v142;
  long long v27 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v27;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v28 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v28;
  long long v29 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v29;
  long long v30 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v30;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v157[6];
  long long v172 = v157[7];
  long long v173 = v157[8];
  uint64_t v174 = v158;
  long long v167 = v157[2];
  long long v168 = v157[3];
  long long v169 = v157[4];
  long long v170 = v157[5];
  __n128 v165 = (__n128)v157[0];
  long long v166 = v157[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v157);
  uint64_t v87 = v138;
  uint64_t v88 = v137;
  int v86 = v139;
  long long v31 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v31;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v32 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v32;
  long long v33 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v33;
  long long v34 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v34;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v159[6];
  long long v172 = v159[7];
  long long v173 = v159[8];
  uint64_t v174 = v160;
  long long v167 = v159[2];
  long long v168 = v159[3];
  long long v169 = v159[4];
  long long v170 = v159[5];
  __n128 v165 = (__n128)v159[0];
  long long v166 = v159[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v159);
  uint64_t v84 = v135;
  uint64_t v85 = v134;
  int v83 = v136;
  long long v35 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v35;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v36 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v36;
  long long v37 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v37;
  long long v38 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v38;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v161[6];
  long long v172 = v161[7];
  long long v173 = v161[8];
  uint64_t v174 = v162;
  long long v167 = v161[2];
  long long v168 = v161[3];
  long long v169 = v161[4];
  long long v170 = v161[5];
  __n128 v165 = (__n128)v161[0];
  long long v166 = v161[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v161);
  uint64_t v81 = v132;
  uint64_t v82 = v131;
  uint64_t v39 = v133;
  long long v40 = *(_OWORD *)(v14 + 112);
  long long v171 = *(_OWORD *)(v14 + 96);
  long long v172 = v40;
  long long v173 = *(_OWORD *)(v14 + 128);
  uint64_t v174 = *(void *)(v14 + 144);
  long long v41 = *(_OWORD *)(v14 + 48);
  long long v167 = *(_OWORD *)(v14 + 32);
  long long v168 = v41;
  long long v42 = *(_OWORD *)(v14 + 80);
  long long v169 = *(_OWORD *)(v14 + 64);
  long long v170 = v42;
  long long v43 = *(_OWORD *)(v14 + 16);
  __n128 v165 = *(__n128 *)v14;
  long long v166 = v43;
  sub_E6E10();
  swift_getKeyPath();
  long long v171 = v163[6];
  long long v172 = v163[7];
  long long v173 = v163[8];
  uint64_t v174 = v164;
  long long v167 = v163[2];
  long long v168 = v163[3];
  long long v169 = v163[4];
  long long v170 = v163[5];
  __n128 v165 = (__n128)v163[0];
  long long v166 = v163[1];
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)v163);
  v149[2] = v127;
  v149[3] = v128;
  v149[4] = v129;
  uint64_t v150 = v130;
  v149[0] = v125;
  v149[1] = v126;
  sub_E6E10();
  long long v44 = *(_OWORD *)(v14 + 112);
  long long v121 = *(_OWORD *)(v14 + 96);
  long long v122 = v44;
  long long v123 = *(_OWORD *)(v14 + 128);
  uint64_t v124 = *(void *)(v14 + 144);
  long long v45 = *(_OWORD *)(v14 + 48);
  long long v117 = *(_OWORD *)(v14 + 32);
  long long v118 = v45;
  long long v46 = *(_OWORD *)(v14 + 80);
  long long v119 = *(_OWORD *)(v14 + 64);
  long long v120 = v46;
  long long v47 = *(_OWORD *)(v14 + 16);
  __n128 v115 = *(__n128 *)v14;
  long long v116 = v47;
  sub_E6E10();
  swift_getKeyPath();
  long long v121 = v171;
  long long v122 = v172;
  long long v123 = v173;
  uint64_t v124 = v174;
  long long v117 = v167;
  long long v118 = v168;
  long long v119 = v169;
  long long v120 = v170;
  __n128 v115 = v165;
  long long v116 = v166;
  sub_E6E00();
  swift_release();
  sub_28014((uint64_t)&v165);
  uint64_t v48 = v112;
  uint64_t v49 = v113;
  uint64_t v50 = v114;
  uint64_t v51 = (uint64_t *)(a1 + *(int *)(v13 + 52));
  uint64_t v52 = *v51;
  uint64_t v53 = v51[1];
  uint64_t v54 = v51[2];
  uint64_t v109 = v52;
  uint64_t v110 = v53;
  uint64_t v111 = v54;
  sub_10C7C(&qword_122CB8);
  uint64_t v55 = sub_E6D40();
  __n128 v56 = v115;
  long long v57 = v116;
  uint64_t v58 = sub_81F00(v55);
  *((void *)&v79 + 1) = v49;
  *(void *)&long long v79 = v48;
  LOBYTE(v78) = 1;
  *((void *)&v77 + 1) = v81;
  *(void *)&long long v77 = v82;
  *((void *)&v76 + 1) = v89;
  *(void *)&long long v76 = v90;
  *((void *)&v75 + 1) = v91;
  *(void *)&long long v75 = v92;
  uint64_t v59 = v100;
  sub_81F48(0, v58, v60, v97, v96, v95, v94, v93, v100, v75, v76, v88, v87, v86, v85, v84, v83, v77, v39,
    v78,
    (uint64_t)v149,
    (uint64_t)v4,
    v79,
    v50,
    v56,
    v57,
    *((unint64_t *)&v57 + 1));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = swift_allocObject();
  *(unsigned char *)(v62 + 16) = 1;
  uint64_t v63 = v101;
  sub_99058(v59, v101, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v64 = (uint64_t *)(v63 + *(int *)(v106 + 44));
  *uint64_t v64 = KeyPath;
  v64[1] = (uint64_t)sub_99040;
  v64[2] = v62;
  sub_990C0(v59, (uint64_t (*)(void))type metadata accessor for GCSProfileContentView);
  uint64_t v65 = v104;
  sub_99120(v63, v104, &qword_124278);
  uint64_t v66 = v102;
  uint64_t v67 = v103;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v69 = v99;
  uint64_t v70 = v105;
  v68(v102, v99, v105);
  sub_99184(v65, v63, &qword_124278);
  uint64_t v71 = v107;
  v68(v107, v66, v70);
  uint64_t v72 = sub_10C7C(&qword_124D00);
  sub_99184(v63, (uint64_t)&v71[*(int *)(v72 + 48)], &qword_124278);
  sub_991E8(v65, &qword_124278);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v67 + 8);
  v73(v69, v70);
  sub_991E8(v63, &qword_124278);
  return ((uint64_t (*)(char *, uint64_t))v73)(v66, v70);
}

uint64_t sub_95934@<X0>(char *a1@<X8>)
{
  return sub_94E9C(*(void *)(v1 + 16), a1);
}

uint64_t sub_9593C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_95984(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v57 = a2;
  uint64_t v3 = sub_10C7C(&qword_1242C0);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void **)(a1 + 56);
  uint64_t v61 = (char *)&v52 - v9;
  uint64_t v62 = v6;
  uint64_t v63 = v7;
  uint64_t v64 = v8;
  sub_10C7C(&qword_124BF8);
  sub_E6DE0();
  id v10 = v72;
  id v11 = [v72 bundleIdentifier];

  uint64_t v12 = sub_E7110();
  uint64_t v14 = v13;

  id v15 = [self defaultIdentifier];
  uint64_t v16 = sub_E7110();
  uint64_t v18 = v17;

  if (v12 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v62 = v6;
      uint64_t v63 = v7;
      uint64_t v64 = v8;
      sub_E6DE0();
      *(id *)(a1 + 32);
      uint64_t v23 = sub_78A7C();
      id v72 = (id)nullsub_49(v23);
      *(void *)&long long v73 = v24;
      *((void *)&v73 + 1) = v25;
      uint64_t v74 = v26;
      char v75 = 1;
      goto LABEL_7;
    }
  }
  *(id *)(a1 + 32);
  uint64_t v20 = sub_783BC();
  id v72 = (id)nullsub_48(v20);
  *(void *)&long long v73 = v21;
  *((void *)&v73 + 1) = v22;
  uint64_t v74 = 0;
  char v75 = 0;
LABEL_7:
  sub_7DFB4();
  sub_7E008();
  sub_E6610();
  uint64_t v27 = v63;
  __n128 v56 = (void *)v62;
  long long v28 = v64;
  uint64_t v55 = (void *)v65;
  int v54 = v66;
  id v72 = *(id *)(a1 + 72);
  long long v73 = *(_OWORD *)(a1 + 80);
  sub_10C7C(&qword_124150);
  uint64_t v29 = sub_E6E10();
  uint64_t v53 = &v52;
  long long v30 = (void *)v62;
  uint64_t v31 = v63;
  long long v32 = v64;
  __chkstk_darwin(v29);
  id v72 = v30;
  *(void *)&long long v73 = v31;
  *((void *)&v73 + 1) = v32;
  swift_retain();
  swift_retain();
  id v52 = v32;
  uint64_t v33 = sub_E65E0();
  uint64_t v62 = sub_B7108(0xD000000000000010, (void *)0x80000000000F26B0);
  uint64_t v63 = v34;
  sub_187B0();
  uint64_t v35 = sub_E6920();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v41 = v40;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = v33;
  uint64_t v63 = 0;
  LOBYTE(v64) = 1;
  uint64_t v65 = v35;
  uint64_t v66 = v37;
  char v67 = v39 & 1;
  uint64_t v68 = v41;
  uint64_t v69 = KeyPath;
  uint64_t v70 = 1;
  char v71 = 0;
  sub_10C7C(&qword_1242D8);
  sub_99334(0, (unint64_t *)&qword_124E50);
  sub_10C7C(&qword_1242E0);
  sub_99370(&qword_1242E8, &qword_1242D8);
  sub_6752C();
  sub_7E188();
  long long v43 = v61;
  sub_E6DB0();

  swift_release();
  swift_release();
  uint64_t v44 = v59;
  uint64_t v53 = *(id **)(v59 + 16);
  long long v45 = v58;
  uint64_t v46 = v60;
  ((void (*)(char *, char *, uint64_t))v53)(v58, v43, v60);
  uint64_t v48 = v56;
  long long v47 = v57;
  *long long v57 = v56;
  v47[1] = v27;
  uint64_t v49 = v55;
  v47[2] = v28;
  v47[3] = v49;
  LOBYTE(v3sub_E59A4(2, 18, 1, 0) = v54;
  *((unsigned char *)v47 + 32) = v54;
  uint64_t v50 = sub_10C7C(&qword_124D08);
  ((void (*)(char *, char *, uint64_t))v53)((char *)v47 + *(int *)(v50 + 48), v45, v46);
  sub_7E498(v48, v27, v28, v49, (char)v30);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v44 + 8);
  v51(v61, v46);
  v51(v45, v46);
  sub_7E548(v48, v27, v28, v49, (char)v30);
}

id sub_95ED8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  *a2 = nullsub_16();
  a2[1] = v3;
  a2[2] = v3;
  id v4 = v3;

  return v4;
}

void sub_95F24(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSControllerCustomizeGameView();
  __chkstk_darwin(v4);
  uint64_t v90 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_E60E0();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v91 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (void *)sub_E6050();
  uint64_t v96 = *(v94 - 1);
  __chkstk_darwin(v94);
  uint64_t v88 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10C7C(&qword_123560);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v87 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v86 - v12;
  uint64_t v14 = type metadata accessor for GCSProfileParams();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v86 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v86 - v21;
  id v95 = *a1;
  sub_E0510((uint64_t)&v86 - v21);
  sub_99058((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_10C7C(&qword_122BB0);
  sub_E6DF0();
  sub_990C0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for GCSProfileParams);
  sub_E6DE0();
  uint64_t v23 = *(void **)(a2 + 32);
  uint64_t v24 = *(void **)a2;
  if (*(void *)a2)
  {
    id v89 = v23;
    id v25 = [v24 controllers];
    sub_99334(0, (unint64_t *)&qword_124E30);
    unint64_t v26 = sub_E7210();

    sub_57F44((uint64_t)v17, v23, v26, (uint64_t)v111);
    uint64_t v27 = a2 + *(int *)(v4 + 44);
    long long v28 = *(_OWORD *)(v27 + 112);
    v109[6] = *(_OWORD *)(v27 + 96);
    v109[7] = v28;
    v109[8] = *(_OWORD *)(v27 + 128);
    uint64_t v110 = *(void *)(v27 + 144);
    long long v29 = *(_OWORD *)(v27 + 48);
    _OWORD v109[2] = *(_OWORD *)(v27 + 32);
    v109[3] = v29;
    long long v30 = *(_OWORD *)(v27 + 80);
    v109[4] = *(_OWORD *)(v27 + 64);
    v109[5] = v30;
    long long v31 = *(_OWORD *)(v27 + 16);
    v109[0] = *(_OWORD *)v27;
    v109[1] = v31;
    long long v106 = v111[6];
    long long v107 = v111[7];
    uint64_t v108 = v112;
    long long v102 = v111[2];
    long long v103 = v111[3];
    long long v104 = v111[4];
    long long v105 = v111[5];
    long long v100 = v111[0];
    long long v101 = v111[1];
    sub_10C7C(&qword_122BB8);
    sub_E6DF0();
    *(void *)&v109[0] = *(void *)(a2 + 40);
    *(_OWORD *)((char *)v109 + 8) = *(_OWORD *)(a2 + 48);
    uint64_t v97 = sub_10C7C(&qword_124BF8);
    sub_E6DE0();
    long long v32 = (void *)v100;
    id v33 = [(id)v100 controllerToProfileMappings];

    uint64_t v34 = v94;
    uint64_t v35 = sub_E7050();

    *(void *)&long long v100 = v35;
    id v36 = [v89 persistentIdentifier];
    uint64_t v37 = sub_E7110();
    uint64_t v39 = v38;

    id v40 = [v95 uuid];
    sub_E6030();

    uint64_t v41 = v96;
    (*(void (**)(char *, void, uint64_t, void *))(v96 + 56))(v13, 0, 1, v34);
    uint64_t v42 = a2;
    if ((*(unsigned int (**)(char *, uint64_t, void *))(v41 + 48))(v13, 1, v34) == 1)
    {
      sub_991E8((uint64_t)v13, &qword_123560);
      uint64_t v43 = v87;
      sub_75C9C(v37, v39, v87);
      swift_bridgeObjectRelease();
      sub_991E8(v43, &qword_123560);
    }
    else
    {
      uint64_t v44 = (uint64_t)v88;
      (*(void (**)(char *, char *, void *))(v41 + 32))(v88, v13, v34);
      uint64_t v45 = v100;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v109[0] = v45;
      *(void *)&long long v100 = 0x8000000000000000;
      sub_98DF4(v44, v37, v39, isUniquelyReferenced_nonNull_native);
      *(void *)&long long v100 = *(void *)&v109[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = *(void *)(a2 + 40);
    uint64_t v48 = *(void *)(v42 + 48);
    uint64_t v49 = *(void *)(v42 + 56);
    *(void *)&v109[0] = v47;
    *((void *)&v109[0] + 1) = v48;
    *(void *)&v109[1] = v49;
    sub_E6DE0();
    id v50 = v99;
    id v51 = [v99 bundleIdentifier];

    id v89 = (id)sub_E7110();
    *(void *)&v109[0] = v47;
    *((void *)&v109[0] + 1) = v48;
    *(void *)&v109[1] = v49;
    sub_E6DE0();
    id v52 = v99;
    id v53 = [v99 title];

    uint64_t v88 = (char *)sub_E7110();
    *(void *)&v109[0] = v47;
    *((void *)&v109[0] + 1) = v48;
    *(void *)&v109[1] = v49;
    sub_E6DE0();
    id v54 = v99;
    id v55 = [v99 controllerToCompatibilityModeMappings];

    type metadata accessor for GCSCompatibilityMode();
    sub_E7050();
    uint64_t v96 = v42;

    id v56 = objc_allocWithZone((Class)GCSGame);
    NSString v57 = sub_E70D0();
    swift_bridgeObjectRelease();
    NSString v58 = sub_E70D0();
    swift_bridgeObjectRelease();
    Class isa = sub_E7040().super.isa;
    swift_bridgeObjectRelease();
    Class v60 = sub_E7040().super.isa;
    swift_bridgeObjectRelease();
    id v61 = [v56 initWithBundleIdentifier:v57 title:v58 controllerToProfileMappings:isa controllerToCompatibilityModeMappings:v60];

    uint64_t v62 = sub_33D64();
    uint64_t v63 = v91;
    uint64_t v64 = v92;
    uint64_t v65 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v62, v93);
    uint64_t v66 = v90;
    sub_99058(v96, v90, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);
    id v67 = v95;
    uint64_t v68 = sub_E60C0();
    os_log_type_t v69 = sub_E7320();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v94 = (void *)swift_slowAlloc();
      id v99 = v94;
      *(_DWORD *)uint64_t v70 = 136315394;
      *(void *)&v109[0] = *(void *)(v66 + 40);
      *(_OWORD *)((char *)v109 + 8) = *(_OWORD *)(v66 + 48);
      sub_E6DE0();
      id v71 = v98;
      id v72 = [v98 localizedName];
      id v95 = v61;
      id v73 = v72;

      uint64_t v74 = sub_E7110();
      unint64_t v76 = v75;

      *(void *)&v109[0] = sub_23A0C(v74, v76, (uint64_t *)&v99);
      sub_E73D0();
      swift_bridgeObjectRelease();
      sub_990C0(v66, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);
      *(_WORD *)(v70 + 12) = 2080;
      id v77 = [v67 name];
      uint64_t v78 = sub_E7110();
      unint64_t v80 = v79;

      uint64_t v81 = v78;
      id v61 = v95;
      *(void *)&v109[0] = sub_23A0C(v81, v80, (uint64_t *)&v99);
      sub_E73D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v68, v69, "Mapping %s to %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
    }
    else
    {
      sub_990C0(v66, (uint64_t (*)(void))type metadata accessor for GCSControllerCustomizeGameView);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
    }
    uint64_t v82 = *(void **)v96;
    if (*(void *)v96)
    {
      *(void *)&v109[0] = *(void *)(v96 + 40);
      *(_OWORD *)((char *)v109 + 8) = *(_OWORD *)(v96 + 48);
      int v83 = v82;
      sub_E6DE0();
      id v84 = v99;
      (*(void (**)(id, id, uint64_t))&stru_298.segname[(swift_isaMask & *v83) - 8])(v99, v61, 1);

      return;
    }
  }
  else
  {
    type metadata accessor for GCSPreferencesStore();
    sub_9593C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
    id v85 = v23;
    sub_E63E0();
    __break(1u);
  }
  type metadata accessor for GCSPreferencesStore();
  sub_9593C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);
  sub_E63E0();
  __break(1u);
}

uint64_t sub_96AC4()
{
  uint64_t v1 = (int *)(type metadata accessor for GCSControllerCustomizeGameView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  sub_19048(*(void *)(v6 + 16), *(unsigned char *)(v6 + 24));
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v7 = v6 + v1[12];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v9 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v6 + v1[13];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[14];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_96D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCSControllerCustomizeGameView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_96D94(id *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GCSControllerCustomizeGameView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_95F24(a1, v4);
}

uint64_t sub_96E04()
{
  uint64_t v0 = sub_E60E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_33D64();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_E60C0();
  os_log_type_t v6 = sub_E7320();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Did Appear!", v7, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_96F58()
{
  type metadata accessor for GCSPreferencesStore();
  sub_9593C((unint64_t *)&qword_1227D8, (void (*)(uint64_t))type metadata accessor for GCSPreferencesStore);

  return sub_E63F0();
}

uint64_t sub_96FCC()
{
  return swift_getKeyPath();
}

double sub_96FF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, uint64_t a16)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 4sub_E59A4(2, 18, 1, 0) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(void *)(a9 + 8sub_E59A4(2, 18, 1, 0) = a11;
  *(void *)(a9 + 88) = a12;
  uint64_t v17 = (int *)type metadata accessor for GCSControllerCustomizeGameView();
  sub_99120(a13, a9 + v17[10], &qword_122BB0);
  uint64_t v18 = a9 + v17[11];
  long long v19 = *(_OWORD *)(a14 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(a14 + 96);
  *(_OWORD *)(v18 + 112) = v19;
  *(_OWORD *)(v18 + 128) = *(_OWORD *)(a14 + 128);
  *(void *)(v18 + 144) = *(void *)(a14 + 144);
  long long v20 = *(_OWORD *)(a14 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a14 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  long long v21 = *(_OWORD *)(a14 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a14 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  long long v22 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)a14;
  *(_OWORD *)(v18 + 16) = v22;
  uint64_t v23 = a9 + v17[12];
  *(_OWORD *)uint64_t v23 = a15;
  *(void *)(v23 + 16) = a16;
  uint64_t v24 = a9 + v17[13];
  sub_E6D10();
  double result = *(double *)&v26;
  *(_OWORD *)uint64_t v24 = v26;
  *(void *)(v24 + 16) = v27;
  return result;
}

uint64_t sub_97104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_97128()
{
  return sub_E69D0();
}

char *sub_97148(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = (uint64_t)a2[2];
    *((void *)a1 + 1) = a2[1];
    char v9 = *((unsigned char *)a2 + 24);
    uint64_t v10 = v4;
    sub_19100(v8, v9);
    *((void *)v7 + 2) = v8;
    v7[24] = v9;
    uint64_t v11 = a2[4];
    uint64_t v12 = a2[5];
    *((void *)v7 + 4) = v11;
    *((void *)v7 + 5) = v12;
    uint64_t v13 = a2[7];
    *((void *)v7 + 6) = a2[6];
    *((void *)v7 + 7) = v13;
    uint64_t v14 = a2[9];
    *((void *)v7 + 8) = a2[8];
    *((void *)v7 + 9) = v14;
    uint64_t v68 = a2[11];
    *((void *)v7 + 1sub_E59A4(2, 18, 1, 0) = a2[10];
    *((void *)v7 + 11) = v68;
    uint64_t v15 = a3[10];
    uint64_t v16 = &v7[v15];
    uint64_t v70 = a3;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v66 = *(uint64_t *)((char *)a2 + v15 + 8);
    *(void *)uint64_t v16 = *(char **)((char *)a2 + v15);
    *((void *)v16 + 1) = v66;
    uint64_t v18 = v11;
    swift_retain();
    swift_retain();
    long long v19 = v13;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    long long v20 = v68;
    swift_retain();
    swift_retain();
    uint64_t v21 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
    long long v22 = &v16[v21];
    uint64_t v23 = v17 + v21;
    uint64_t v24 = sub_E6050();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    id v25 = (int *)type metadata accessor for GCSProfileParams();
    uint64_t v26 = v25[5];
    uint64_t v27 = &v22[v26];
    long long v28 = (void *)(v23 + v26);
    uint64_t v29 = v28[1];
    *(void *)uint64_t v27 = *v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = v25[6];
    long long v31 = &v22[v30];
    long long v32 = (void *)(v23 + v30);
    uint64_t v69 = v32[1];
    *(void *)long long v31 = *v32;
    *((void *)v31 + 1) = v69;
    uint64_t v33 = v25[7];
    uint64_t v34 = &v22[v33];
    uint64_t v35 = (void *)(v23 + v33);
    uint64_t v67 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v67;
    v22[v25[8]] = *(unsigned char *)(v23 + v25[8]);
    v22[v25[9]] = *(unsigned char *)(v23 + v25[9]);
    uint64_t v36 = v25[10];
    uint64_t v37 = &v22[v36];
    uint64_t v38 = (void *)(v23 + v36);
    uint64_t v65 = v38[1];
    *(void *)uint64_t v37 = *v38;
    *((void *)v37 + 1) = v65;
    *(void *)&v22[v25[11]] = *(void *)(v23 + v25[11]);
    v22[v25[12]] = *(unsigned char *)(v23 + v25[12]);
    *(void *)&v22[v25[13]] = *(void *)(v23 + v25[13]);
    *(void *)&v22[v25[14]] = *(void *)(v23 + v25[14]);
    *(void *)&v22[v25[15]] = *(void *)(v23 + v25[15]);
    v22[v25[16]] = *(unsigned char *)(v23 + v25[16]);
    v22[v25[17]] = *(unsigned char *)(v23 + v25[17]);
    *(void *)&v22[v25[18]] = *(void *)(v23 + v25[18]);
    uint64_t v39 = v70[11];
    uint64_t v40 = v70[12];
    uint64_t v41 = &v7[v39];
    uint64_t v42 = (uint64_t)a2 + v39;
    uint64_t v43 = *(void *)(v42 + 8);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = *(void **)(v42 + 16);
    uint64_t v45 = *(void *)(v42 + 24);
    *((void *)v41 + 2) = v44;
    *((void *)v41 + 3) = v45;
    *((_OWORD *)v41 + 2) = *(_OWORD *)(v42 + 32);
    uint64_t v46 = *(void *)(v42 + 56);
    *((void *)v41 + 6) = *(void *)(v42 + 48);
    *((void *)v41 + 7) = v46;
    uint64_t v47 = *(void *)(v42 + 72);
    *((void *)v41 + 8) = *(void *)(v42 + 64);
    *((void *)v41 + 9) = v47;
    uint64_t v48 = *(void *)(v42 + 88);
    *((void *)v41 + 1sub_E59A4(2, 18, 1, 0) = *(void *)(v42 + 80);
    *((void *)v41 + 11) = v48;
    uint64_t v59 = *(void *)(v42 + 104);
    *((void *)v41 + 12) = *(void *)(v42 + 96);
    *((void *)v41 + 13) = v59;
    uint64_t v60 = *(void *)(v42 + 120);
    *((void *)v41 + 14) = *(void *)(v42 + 112);
    *((void *)v41 + 15) = v60;
    v41[128] = *(unsigned char *)(v42 + 128);
    v41[129] = *(unsigned char *)(v42 + 129);
    id v61 = *(void **)(v42 + 136);
    uint64_t v62 = *(void *)(v42 + 144);
    *((void *)v41 + 17) = v61;
    *((void *)v41 + 18) = v62;
    uint64_t v49 = &v7[v40];
    id v50 = (char **)((char *)a2 + v40);
    uint64_t v63 = v50[1];
    *(void *)uint64_t v49 = *v50;
    *((void *)v49 + 1) = v63;
    uint64_t v64 = (void *)v50[2];
    *((void *)v49 + 2) = v64;
    uint64_t v51 = v70[13];
    id v52 = &v7[v51];
    id v53 = (char **)((char *)a2 + v51);
    uint64_t v54 = v53[1];
    *(void *)id v52 = *v53;
    *((void *)v52 + 1) = v54;
    *((void *)v52 + 2) = v53[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v55 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v61;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v57 = v64;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_97530(uint64_t a1, int *a2)
{
  sub_19048(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v4 = a1 + a2[10];
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v6 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for GCSProfileParams();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[11];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[12];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_97720(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  id v10 = v6;
  sub_19100(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v11 = *(void **)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v12;
  uint64_t v13 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v13;
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v14;
  uint64_t v68 = *(void **)(a2 + 88);
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v68;
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = a2 + v15;
  uint64_t v66 = *(void *)(a2 + v15 + 8);
  *uint64_t v16 = *(void *)(a2 + v15);
  v16[1] = v66;
  id v18 = v11;
  swift_retain();
  swift_retain();
  id v19 = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v20 = v68;
  swift_retain();
  swift_retain();
  uint64_t v21 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  long long v22 = (char *)v16 + v21;
  uint64_t v23 = v17 + v21;
  uint64_t v24 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  id v25 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v26 = v25[5];
  uint64_t v27 = &v22[v26];
  long long v28 = (void *)(v23 + v26);
  uint64_t v29 = v28[1];
  *(void *)uint64_t v27 = *v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = v25[6];
  long long v31 = &v22[v30];
  long long v32 = (void *)(v23 + v30);
  uint64_t v69 = v32[1];
  *(void *)long long v31 = *v32;
  *((void *)v31 + 1) = v69;
  uint64_t v33 = v25[7];
  uint64_t v34 = &v22[v33];
  uint64_t v35 = (void *)(v23 + v33);
  uint64_t v67 = v35[1];
  *(void *)uint64_t v34 = *v35;
  *((void *)v34 + 1) = v67;
  v22[v25[8]] = *(unsigned char *)(v23 + v25[8]);
  v22[v25[9]] = *(unsigned char *)(v23 + v25[9]);
  uint64_t v36 = v25[10];
  uint64_t v37 = &v22[v36];
  uint64_t v38 = (void *)(v23 + v36);
  uint64_t v65 = v38[1];
  *(void *)uint64_t v37 = *v38;
  *((void *)v37 + 1) = v65;
  *(void *)&v22[v25[11]] = *(void *)(v23 + v25[11]);
  v22[v25[12]] = *(unsigned char *)(v23 + v25[12]);
  *(void *)&v22[v25[13]] = *(void *)(v23 + v25[13]);
  *(void *)&v22[v25[14]] = *(void *)(v23 + v25[14]);
  *(void *)&v22[v25[15]] = *(void *)(v23 + v25[15]);
  v22[v25[16]] = *(unsigned char *)(v23 + v25[16]);
  v22[v25[17]] = *(unsigned char *)(v23 + v25[17]);
  *(void *)&v22[v25[18]] = *(void *)(v23 + v25[18]);
  uint64_t v39 = a3[11];
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  uint64_t v43 = *(void *)(v42 + 8);
  *(void *)uint64_t v41 = *(void *)v42;
  *(void *)(v41 + 8) = v43;
  uint64_t v45 = *(void **)(v42 + 16);
  uint64_t v44 = *(void *)(v42 + 24);
  *(void *)(v41 + 16) = v45;
  *(void *)(v41 + 24) = v44;
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
  uint64_t v46 = *(void *)(v42 + 56);
  *(void *)(v41 + 48) = *(void *)(v42 + 48);
  *(void *)(v41 + 56) = v46;
  uint64_t v47 = *(void *)(v42 + 72);
  *(void *)(v41 + 64) = *(void *)(v42 + 64);
  *(void *)(v41 + 72) = v47;
  uint64_t v48 = *(void *)(v42 + 88);
  *(void *)(v41 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v42 + 80);
  *(void *)(v41 + 88) = v48;
  uint64_t v49 = *(void *)(v42 + 104);
  *(void *)(v41 + 96) = *(void *)(v42 + 96);
  *(void *)(v41 + 104) = v49;
  uint64_t v50 = *(void *)(v42 + 120);
  *(void *)(v41 + 112) = *(void *)(v42 + 112);
  *(void *)(v41 + 12sub_E59A4(2, 18, 1, 0) = v50;
  *(unsigned char *)(v41 + 128) = *(unsigned char *)(v42 + 128);
  *(unsigned char *)(v41 + 129) = *(unsigned char *)(v42 + 129);
  id v61 = *(void **)(v42 + 136);
  uint64_t v62 = *(void *)(v42 + 144);
  *(void *)(v41 + 136) = v61;
  *(void *)(v41 + 144) = v62;
  uint64_t v51 = (void *)(a1 + v40);
  id v52 = (void *)(a2 + v40);
  uint64_t v63 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v63;
  uint64_t v64 = (void *)v52[2];
  v51[2] = v64;
  uint64_t v53 = a3[13];
  uint64_t v54 = (void *)(a1 + v53);
  id v55 = (void *)(a2 + v53);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  v54[2] = v55[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v57 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v58 = v61;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v59 = v64;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_97AC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  char v10 = *(unsigned char *)(a2 + 24);
  sub_19100(v9, v10);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 24) = v10;
  sub_19048(v11, v12);
  uint64_t v13 = *(void **)(a2 + 32);
  uint64_t v14 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v13;
  id v15 = v13;

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v16 = *(void **)(a2 + 56);
  uint64_t v17 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v16;
  id v18 = v16;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  id v19 = *(void **)(a2 + 88);
  id v20 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v19;
  id v21 = v19;

  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_retain();
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_retain();
  swift_release();
  uint64_t v25 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v26 = v23 + v25;
  uint64_t v27 = v24 + v25;
  uint64_t v28 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v30 = v29[5];
  long long v31 = (void *)(v26 + v30);
  long long v32 = (void *)(v27 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v29[6];
  uint64_t v34 = (void *)(v26 + v33);
  uint64_t v35 = (void *)(v27 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = v29[7];
  uint64_t v37 = (void *)(v26 + v36);
  uint64_t v38 = (void *)(v27 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v29[8]) = *(unsigned char *)(v27 + v29[8]);
  *(unsigned char *)(v26 + v29[9]) = *(unsigned char *)(v27 + v29[9]);
  uint64_t v39 = v29[10];
  uint64_t v40 = (void *)(v26 + v39);
  uint64_t v41 = (void *)(v27 + v39);
  void *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v26 + v29[11]) = *(void *)(v27 + v29[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + v29[12]) = *(unsigned char *)(v27 + v29[12]);
  *(void *)(v26 + v29[13]) = *(void *)(v27 + v29[13]);
  *(void *)(v26 + v29[14]) = *(void *)(v27 + v29[14]);
  *(void *)(v26 + v29[15]) = *(void *)(v27 + v29[15]);
  *(unsigned char *)(v26 + v29[16]) = *(unsigned char *)(v27 + v29[16]);
  *(unsigned char *)(v26 + v29[17]) = *(unsigned char *)(v27 + v29[17]);
  *(void *)(v26 + v29[18]) = *(void *)(v27 + v29[18]);
  uint64_t v42 = a3[11];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(void *)(a1 + v42) = *(void *)(a2 + v42);
  swift_retain();
  swift_release();
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  swift_retain();
  swift_release();
  uint64_t v45 = *(void **)(v43 + 16);
  uint64_t v46 = *(void **)(v44 + 16);
  *(void *)(v43 + 16) = v46;
  id v47 = v46;

  *(void *)(v43 + 24) = *(void *)(v44 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  *(void *)(v43 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(v44 + 40);
  *(void *)(v43 + 48) = *(void *)(v44 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 56) = *(void *)(v44 + 56);
  *(void *)(v43 + 64) = *(void *)(v44 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 72) = *(void *)(v44 + 72);
  *(void *)(v43 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(v44 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 88) = *(void *)(v44 + 88);
  *(void *)(v43 + 96) = *(void *)(v44 + 96);
  swift_retain();
  swift_release();
  *(void *)(v43 + 104) = *(void *)(v44 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 112) = *(void *)(v44 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v44 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v43 + 128) = *(unsigned char *)(v44 + 128);
  *(unsigned char *)(v43 + 129) = *(unsigned char *)(v44 + 129);
  uint64_t v48 = *(void **)(v43 + 136);
  uint64_t v49 = *(void **)(v44 + 136);
  *(void *)(v43 + 136) = v49;
  id v50 = v49;

  *(void *)(v43 + 144) = *(void *)(v44 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[12];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(void *)(a1 + v51) = *(void *)(a2 + v51);
  swift_retain();
  swift_release();
  *(void *)(v52 + 8) = *(void *)(v53 + 8);
  swift_retain();
  swift_release();
  uint64_t v54 = *(void **)(v53 + 16);
  id v55 = *(void **)(v52 + 16);
  *(void *)(v52 + 16) = v54;
  id v56 = v54;

  uint64_t v57 = a3[13];
  id v58 = (void *)(a1 + v57);
  uint64_t v59 = a2 + v57;
  *id v58 = *(void *)(a2 + v57);
  v58[1] = *(void *)(a2 + v57 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58[2] = *(void *)(v59 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_97FE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = a3[10];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  char v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_E6050();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  id v15 = (int *)type metadata accessor for GCSProfileParams();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)(v13 + v15[5]);
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)(v13 + v15[6]);
  *(_OWORD *)&v12[v15[7]] = *(_OWORD *)(v13 + v15[7]);
  v12[v15[8]] = *(unsigned char *)(v13 + v15[8]);
  v12[v15[9]] = *(unsigned char *)(v13 + v15[9]);
  *(_OWORD *)&v12[v15[10]] = *(_OWORD *)(v13 + v15[10]);
  *(void *)&v12[v15[11]] = *(void *)(v13 + v15[11]);
  v12[v15[12]] = *(unsigned char *)(v13 + v15[12]);
  *(void *)&v12[v15[13]] = *(void *)(v13 + v15[13]);
  *(void *)&v12[v15[14]] = *(void *)(v13 + v15[14]);
  *(void *)&v12[v15[15]] = *(void *)(v13 + v15[15]);
  v12[v15[16]] = *(unsigned char *)(v13 + v15[16]);
  v12[v15[17]] = *(unsigned char *)(v13 + v15[17]);
  *(void *)&v12[v15[18]] = *(void *)(v13 + v15[18]);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  long long v21 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 8sub_E59A4(2, 18, 1, 0) = v21;
  long long v22 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v22;
  *(void *)(v18 + 144) = *(void *)(v19 + 144);
  long long v23 = *(_OWORD *)(v19 + 128);
  long long v24 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 128) = v23;
  *(_OWORD *)(v18 + 96) = v24;
  uint64_t v25 = a1 + v17;
  uint64_t v26 = a2 + v17;
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  uint64_t v27 = a3[13];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  return a1;
}

uint64_t sub_981E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v7;
  sub_19048(v8, v9);
  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 8sub_E59A4(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_release();
  char v12 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_release();
  uint64_t v16 = *(int *)(sub_10C7C(&qword_122BB0) + 32);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = v15 + v16;
  uint64_t v19 = sub_E6050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  long long v20 = (int *)type metadata accessor for GCSProfileParams();
  uint64_t v21 = v20[5];
  long long v22 = (void *)(v17 + v21);
  long long v23 = (uint64_t *)(v18 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *long long v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v20[6];
  uint64_t v27 = (void *)(v17 + v26);
  uint64_t v28 = (uint64_t *)(v18 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  void *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v20[7];
  long long v32 = (void *)(v17 + v31);
  uint64_t v33 = (uint64_t *)(v18 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *long long v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[8]) = *(unsigned char *)(v18 + v20[8]);
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  uint64_t v36 = v20[10];
  uint64_t v37 = (void *)(v17 + v36);
  uint64_t v38 = (uint64_t *)(v18 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(void *)(v17 + v20[11]) = *(void *)(v18 + v20[11]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[12]) = *(unsigned char *)(v18 + v20[12]);
  *(void *)(v17 + v20[13]) = *(void *)(v18 + v20[13]);
  *(void *)(v17 + v20[14]) = *(void *)(v18 + v20[14]);
  *(void *)(v17 + v20[15]) = *(void *)(v18 + v20[15]);
  *(unsigned char *)(v17 + v20[16]) = *(unsigned char *)(v18 + v20[16]);
  *(unsigned char *)(v17 + v20[17]) = *(unsigned char *)(v18 + v20[17]);
  *(void *)(v17 + v20[18]) = *(void *)(v18 + v20[18]);
  uint64_t v41 = a3[11];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(void *)(a1 + v41) = *(void *)(a2 + v41);
  swift_release();
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  swift_release();
  uint64_t v44 = *(void **)(v42 + 16);
  *(void *)(v42 + 16) = *(void *)(v43 + 16);

  *(void *)(v42 + 24) = *(void *)(v43 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(void *)(v42 + 48) = *(void *)(v43 + 48);
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(v43 + 64);
  *(void *)(v42 + 56) = *(void *)(v43 + 56);
  *(void *)(v42 + 64) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v43 + 80);
  *(void *)(v42 + 72) = *(void *)(v43 + 72);
  *(void *)(v42 + 8sub_E59A4(2, 18, 1, 0) = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v43 + 96);
  *(void *)(v42 + 88) = *(void *)(v43 + 88);
  *(void *)(v42 + 96) = v47;
  swift_release();
  *(void *)(v42 + 104) = *(void *)(v43 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v42 + 112) = *(void *)(v43 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v42 + 12sub_E59A4(2, 18, 1, 0) = *(void *)(v43 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v42 + 128) = *(unsigned char *)(v43 + 128);
  *(unsigned char *)(v42 + 129) = *(unsigned char *)(v43 + 129);
  uint64_t v48 = *(void **)(v42 + 136);
  *(void *)(v42 + 136) = *(void *)(v43 + 136);

  *(void *)(v42 + 144) = *(void *)(v43 + 144);
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[12];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(void *)(a1 + v49) = *(void *)(a2 + v49);
  swift_release();
  *(void *)(v50 + 8) = *(void *)(v51 + 8);
  swift_release();
  uint64_t v52 = *(void **)(v50 + 16);
  *(void *)(v50 + 16) = *(void *)(v51 + 16);

  uint64_t v53 = a3[13];
  uint64_t v54 = (void *)(a1 + v53);
  id v55 = (void *)(a2 + v53);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v54[2] = v55[2];
  swift_release();
  return a1;
}

uint64_t sub_985A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_985B8);
}

uint64_t sub_985B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10C7C(&qword_122BB0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_9866C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_98680);
}

uint64_t sub_98680(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10C7C(&qword_122BB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_9872C()
{
  sub_2C194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_98804()
{
  unint64_t result = qword_124CD8;
  if (!qword_124CD8)
  {
    sub_11B60(&qword_124C30);
    sub_98880();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124CD8);
  }
  return result;
}

unint64_t sub_98880()
{
  unint64_t result = qword_124CE0;
  if (!qword_124CE0)
  {
    sub_11B60(&qword_124C10);
    sub_11B60(&qword_124C00);
    sub_E66C0();
    sub_99370(&qword_124C28, &qword_124C00);
    sub_9593C(&qword_122D10, (void (*)(uint64_t))&type metadata accessor for InsetGroupedFormStyle);
    swift_getOpaqueTypeConformance2();
    sub_99370(&qword_124268, &qword_124270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_124CE0);
  }
  return result;
}

uint64_t sub_989C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_E7110();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_98A0C(uint64_t a1, int a2)
{
  int v3 = v2;
  uint64_t v49 = sub_E6050();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_10C7C(&qword_123588);
  int v47 = a2;
  uint64_t v8 = sub_E7590();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    long long v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          int v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_E7670();
    sub_E7170();
    uint64_t result = sub_E76A0();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  int v3 = v42;
  long long v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *int v3 = v9;
  return result;
}

uint64_t sub_98DF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21CB8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_76930();
      goto LABEL_7;
    }
    sub_98A0C(v15, a4 & 1);
    unint64_t v26 = sub_21CB8(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_E7640();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_E6050();
    uint64_t v21 = *(void *)(v20 - 8);
    int64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_98F74(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_98F74(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_E6050();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void sub_99028(void *a1@<X8>)
{
  sub_95984(*(void *)(v1 + 16), a1);
}

uint64_t sub_99030()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_99040(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_99058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_990C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_99120(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_99184(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10C7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_991E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10C7C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_99244()
{
  return sub_E6EB0();
}

uint64_t sub_99334(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_99370(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_11B60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_993B4()
{
  return sub_9593C(&qword_123568, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_993FC()
{
  return sub_9593C((unint64_t *)&unk_1250A0, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

uint64_t sub_99444()
{
  return sub_9593C(&qword_123570, (void (*)(uint64_t))type metadata accessor for GCSCompatibilityMode);
}

void sub_99490(uint64_t a1)
{
  uint64_t v3 = (uint64_t (**)(void))(*(void *)v1 + 288);
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)(*v3)();

  if (!v5) {
    uint64_t v6 = (*(uint64_t (**)(id))(*(void *)v1 + 296))([objc_allocWithZone((Class)CBDiscovery) init]);
  }
  uint64_t v7 = (void *)((uint64_t (*)(uint64_t))v4)(v6);
  [v7 setDiscoveryFlags:a1];

  uint64_t v8 = v4();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v24 = sub_99820;
    uint64_t v25 = v1;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    int64_t v22 = sub_99950;
    uint64_t v23 = &unk_116318;
    uint64_t v10 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    [v9 setDeviceFoundHandler:v10];
    _Block_release(v10);
  }
  uint64_t v11 = v4();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v24 = sub_999D0;
    uint64_t v25 = v1;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    int64_t v22 = sub_99950;
    uint64_t v23 = &unk_116340;
    BOOL v13 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    [v12 setDeviceLostHandler:v13];
    _Block_release(v13);
  }
  uint64_t v14 = v4();
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    uint64_t v24 = sub_99AA4;
    uint64_t v25 = v1;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    int64_t v22 = sub_419EC;
    uint64_t v23 = &unk_116368;
    char v16 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    [v15 setErrorHandler:v16];
    _Block_release(v16);
  }
  uint64_t v17 = v4();
  if (v17)
  {
    unint64_t v18 = (void *)v17;
    uint64_t v24 = sub_99AC0;
    uint64_t v25 = v1;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    int64_t v22 = sub_419EC;
    uint64_t v23 = &unk_116390;
    uint64_t v19 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    [v18 activateWithCompletion:v19];
    _Block_release(v19);
  }
}

uint64_t sub_99820(void *a1)
{
  uint64_t v3 = sub_C0A8C(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    (*(void (**)(void *))(*(void *)v3 + 960))(a1);
    sub_DA570(v4);
    uint64_t v5 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 552))(v9);
    sub_DA47C(v6);
    v5(v9, 0);
    return swift_release();
  }
  else
  {
    uint64_t v8 = sub_C0B78(a1);
    sub_DA570(v8);
    return swift_release();
  }
}

void sub_99950(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_999B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_E59A4(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t sub_999C8()
{
  return swift_release();
}

uint64_t sub_999D0(void *a1)
{
  uint64_t result = sub_C0A8C(a1);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (*(uint64_t (**)(void *))(*(void *)result + 960))(a1);
    (*(void (**)(uint64_t))(*(void *)v3 + 1016))(v4);
    sub_DA570(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_99AA4(uint64_t a1)
{
  return sub_99ADC(a1, 0xD000000000000017, 0x80000000000F2C70);
}

uint64_t sub_99AC0(uint64_t a1)
{
  return sub_99ADC(a1, 0xD000000000000013, 0x80000000000F2C50);
}

uint64_t sub_99ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 1176))(a2, a3, a1);
}

void sub_99B18(uint64_t a1, uint64_t a2)
{
  sub_41D00(a2);
  (*(void (**)(void))(*(void *)v2 + 296))(0);

  sub_99490(a1);
}

uint64_t *sub_99B9C()
{
  return &qword_124D10;
}

uint64_t *sub_99BA8()
{
  return &qword_124D20;
}

uint64_t sub_99C1C()
{
  sub_E74B0(56);
  v2._object = (void *)0x80000000000F2D50;
  v2._uint64_t countAndFlagsBits = 0xD000000000000027;
  sub_E71A0(v2);
  (*(void (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
  v3._uint64_t countAndFlagsBits = sub_E7600();
  sub_E71A0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6F4373656D616720;
  v4._object = (void *)0xEC0000003D746E75;
  sub_E71A0(v4);
  (*(void (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
  v5._uint64_t countAndFlagsBits = sub_E7600();
  sub_E71A0(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  sub_E71A0(v6);
  return 0;
}

void *sub_99D90()
{
  return &_swiftEmptySetSingleton;
}

uint64_t sub_99DA8()
{
  return sub_99ECC();
}

uint64_t sub_99DC0(uint64_t a1)
{
  return sub_99FA8(a1, &OBJC_IVAR____TtC25GameControlleriOSSettings20GCSProfileUsageStats_controllerIdentifiers);
}

uint64_t (*sub_99DCC())()
{
  return j_j__swift_endAccess_2;
}

void *sub_99E28()
{
  return &_swiftEmptySetSingleton;
}

Class sub_99E40()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0.super.Class isa = sub_E72B0().super.isa;
  swift_bridgeObjectRelease();

  return v0.super.isa;
}

uint64_t sub_99EC0()
{
  return sub_99ECC();
}

uint64_t sub_99ECC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_99F20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_E72C0();
  uint64_t v7 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  uint64_t *v7 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_99F9C(uint64_t a1)
{
  return sub_99FA8(a1, &OBJC_IVAR____TtC25GameControlleriOSSettings20GCSProfileUsageStats_gameIdentifiers);
}

uint64_t sub_99FA8(uint64_t a1, void *a2)
{
  Swift::String v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *Swift::String v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_99FF8())()
{
  return j__swift_endAccess_2;
}

uint64_t sub_9A0D0()
{
  uint64_t v1 = *(void *)((*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))() + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_9A1A4()
{
  uint64_t v1 = *(void *)((*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])() + 16);
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_9A2BC()
{
  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))() > 0
      || (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))() > 0;
}

id sub_9A350()
{
  *(void *)&v0[OBJC_IVAR____TtC25GameControlleriOSSettings20GCSProfileUsageStats_controllerIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC25GameControlleriOSSettings20GCSProfileUsageStats_gameIdentifiers] = &_swiftEmptySetSingleton;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GCSProfileUsageStats();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for GCSProfileUsageStats()
{
  return self;
}

id sub_9A428()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GCSProfileUsageStats();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_9A4A8()
{
  return 0x31322E312E3031;
}

id sub_9A4C0()
{
  id v0 = objc_allocWithZone((Class)CloudSettingsManager);

  return [v0 init];
}

id sub_9A4F8()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_E70D0();
  id v2 = [v0 initWithSuiteName:v1];

  if (v2) {
    return v2;
  }
  id v4 = [self standardUserDefaults];

  return v4;
}

uint64_t sub_9A5A8(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124D40);
}

uint64_t sub_9A664()
{
  return sub_9BEC8();
}

const char *sub_9A678()
{
  return "connectedControllerIdentifiers";
}

uint64_t sub_9A704()
{
  return sub_9C024();
}

void sub_9A718(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 connectedControllerIdentifiers];
  uint64_t v4 = sub_E7210();

  *a2 = v4;
}

void sub_9A774(uint64_t a1, void **a2)
{
  id v2 = *a2;
  Class isa = sub_E7200().super.isa;
  [v2 setConnectedControllerIdentifiers:isa];
}

void *sub_9A7D8()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_9A7E4()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__connectedControllerIdentifiers, &qword_124D48);
}

uint64_t sub_9A7F8(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124D50, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__connectedControllerIdentifiers, &qword_124D48);
}

uint64_t (*sub_9A814(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124D50);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__connectedControllerIdentifiers;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124D48);
  sub_E6140();
  swift_endAccess();
  return sub_9A924;
}

uint64_t sub_9A928(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124D58);
}

uint64_t sub_9A958()
{
  return sub_9BEC8();
}

const char *sub_9A96C()
{
  return "allControllers";
}

uint64_t sub_9A99C()
{
  return sub_9C024();
}

void sub_9A9B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_9A9CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void *sub_9A9E8()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_9A9F4()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__allControllers, &qword_124D60);
}

uint64_t sub_9AA08(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124D68, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__allControllers, &qword_124D60);
}

uint64_t (*sub_9AA24(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124D68);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__allControllers;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124D60);
  sub_E6140();
  swift_endAccess();
  return sub_9AB34;
}

uint64_t sub_9AB38(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124D70);
}

uint64_t sub_9AC0C()
{
  return sub_9BEC8();
}

const char *sub_9AC20()
{
  return "tombstones";
}

uint64_t sub_9ACC8()
{
  return sub_9C024();
}

void sub_9ACDC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 tombstones];
  sub_10C7C(&qword_124F88);
  uint64_t v4 = sub_E7050();

  *a2 = v4;
}

void sub_9AD54(uint64_t a1, void **a2)
{
  id v2 = *a2;
  sub_10C7C(&qword_124F88);
  Class isa = sub_E7040().super.isa;
  [v2 setTombstones:isa];
}

unint64_t sub_9ADD4()
{
  return sub_9AFF0((uint64_t)_swiftEmptyArrayStorage, &qword_125008);
}

unint64_t sub_9ADFC(uint64_t a1)
{
  uint64_t v2 = sub_10C7C(&qword_125088);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(&qword_125058);
  uint64_t v6 = sub_E75A0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_B40E0(v12, (uint64_t)v5, &qword_125088);
    unint64_t result = sub_6817C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_E6050();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_9AFF0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10C7C(a2);
  uint64_t v3 = (void *)sub_E75A0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21CB8(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_9B108()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__tombstones, &qword_124D78);
}

uint64_t sub_9B11C(uint64_t a1)
{
  return sub_9CE04(a1, (uint64_t *)&unk_124D80, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__tombstones, &qword_124D78);
}

uint64_t (*sub_9B138(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C((uint64_t *)&unk_124D80);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__tombstones;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124D78);
  sub_E6140();
  swift_endAccess();
  return sub_9B248;
}

uint64_t sub_9B24C(uint64_t a1)
{
  return sub_9BD74(a1, &qword_123E28);
}

Class sub_9B27C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = a1;
  sub_E6170();

  swift_release();
  swift_release();
  sub_B3A64(0, a5);
  v8.super.Class isa = sub_E7200().super.isa;
  swift_bridgeObjectRelease();

  return v8.super.isa;
}

uint64_t sub_9B344()
{
  return sub_9BEC8();
}

const char *sub_9B358()
{
  return "profiles";
}

uint64_t sub_9B388(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_B3A64(0, a4);
  sub_E7210();
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  return sub_E6180();
}

uint64_t sub_9B418()
{
  return sub_9C024();
}

void sub_9B42C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_9B448(id *a1@<X0>, SEL *a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X8>)
{
  id v6 = [*a1 *a2];
  sub_B3A64(0, a3);
  uint64_t v7 = sub_E7210();

  *a4 = v7;
}

void sub_9B4B8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_9B4D4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, SEL *a7)
{
  NSArray v8 = *a2;
  sub_B3A64(0, a5);
  Class isa = sub_E7200().super.isa;
  objc_msgSend(v8, *a7, isa);
}

uint64_t sub_9B550()
{
  return sub_9B98C((uint64_t)&classRef_GCSProfile, (SEL *)&selRef_defaultProfile);
}

uint64_t sub_9B564()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profiles, &qword_124D98);
}

uint64_t sub_9B578(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124DA0, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profiles, &qword_124D98);
}

uint64_t (*sub_9B594(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124DA0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profiles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124D98);
  sub_E6140();
  swift_endAccess();
  return sub_9B6A4;
}

uint64_t sub_9B6A8(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124DA8);
}

uint64_t sub_9B6D8()
{
  return sub_9BEC8();
}

const char *sub_9B6EC()
{
  return "mouseProfiles";
}

uint64_t sub_9B71C()
{
  return sub_9C024();
}

void sub_9B730(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_9B74C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void *sub_9B768()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_9B774()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__mouseProfiles, &qword_124DB0);
}

uint64_t sub_9B788(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124DB8, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__mouseProfiles, &qword_124DB0);
}

uint64_t (*sub_9B7A4(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124DB8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__mouseProfiles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124DB0);
  sub_E6140();
  swift_endAccess();
  return sub_9B8B4;
}

uint64_t sub_9B8B8(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124DC0);
}

uint64_t sub_9B8E8()
{
  return sub_9BEC8();
}

const char *sub_9B8FC()
{
  return "games";
}

uint64_t sub_9B92C()
{
  return sub_9C024();
}

void sub_9B940(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_9B95C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_9B978()
{
  return sub_9B98C((uint64_t)&classRef_GCSGame, (SEL *)&selRef_defaultGame);
}

uint64_t sub_9B98C(uint64_t a1, SEL *a2)
{
  sub_10C7C(&qword_124D90);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_EF4F0;
  *(void *)(v3 + 32) = [self *a2];
  sub_E7230();
  return v3;
}

uint64_t sub_9BA14()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__games, &qword_124DC8);
}

uint64_t sub_9BA28(uint64_t a1)
{
  return sub_9CE04(a1, (uint64_t *)&unk_124DD0, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__games, &qword_124DC8);
}

uint64_t (*sub_9BA44(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C((uint64_t *)&unk_124DD0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__games;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124DC8);
  sub_E6140();
  swift_endAccess();
  return sub_9BB54;
}

uint64_t sub_9BB58(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124BD8);
}

uint64_t sub_9BB88()
{
  return sub_9BEC8();
}

const char *sub_9BB9C()
{
  return "copilotFusedControllers";
}

uint64_t sub_9BBCC()
{
  return sub_9C024();
}

void sub_9BBE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_9BBFC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void *sub_9BC18()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_9BC24()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__copilotFusedControllers, &qword_124DE0);
}

uint64_t sub_9BC38(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124DE8, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__copilotFusedControllers, &qword_124DE0);
}

uint64_t (*sub_9BC54(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124DE8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__copilotFusedControllers;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124DE0);
  sub_E6140();
  swift_endAccess();
  return sub_9BD64;
}

uint64_t sub_9BD68(uint64_t a1)
{
  return sub_9BD74(a1, &qword_124DF0);
}

uint64_t sub_9BD74(uint64_t a1, uint64_t *a2)
{
  return sub_E6130();
}

uint64_t sub_9BEB4()
{
  return sub_9BEC8();
}

uint64_t sub_9BEC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

const char *sub_9BF34()
{
  return "profileUsageStats";
}

uint64_t sub_9C010()
{
  return sub_9C024();
}

uint64_t sub_9C024()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_E6180();
}

void sub_9C08C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 profileUsageStats];
  sub_E6050();
  type metadata accessor for GCSProfileUsageStats();
  sub_B1FDC(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v4 = sub_E7050();

  *a2 = v4;
}

void sub_9C138(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  sub_E6050();
  type metadata accessor for GCSProfileUsageStats();
  sub_B1FDC(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  Class isa = sub_E7040().super.isa;
  [v2 setProfileUsageStats:isa];
}

unint64_t sub_9C1F4()
{
  return sub_9ADFC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_9C200()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profileUsageStats, &qword_124DF8);
}

uint64_t sub_9C214(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124E00, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profileUsageStats, &qword_124DF8);
}

uint64_t (*sub_9C230(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124E00);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__profileUsageStats;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124DF8);
  sub_E6140();
  swift_endAccess();
  return sub_9C340;
}

uint64_t sub_9C344()
{
  return sub_E6130();
}

uint64_t sub_9C388()
{
  return sub_9C74C();
}

const char *sub_9C39C()
{
  return "longPressMenuOpensLaunchPad";
}

void sub_9C468()
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = v0;
  sub_E6180();
  id v2 = *(id *)&v1[OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore_userDefaults];
  objc_msgSend(v2, "setBool:forKey:", objc_msgSend(v1, "longPressMenuOpensLaunchPad"), @"bluetoothPrefsMenuLongPressAction");
}

id sub_9C51C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 longPressMenuOpensLaunchPad];
  *a2 = (_BYTE)result;
  return result;
}

id sub_9C550(unsigned __int8 *a1, id *a2)
{
  return [*a2 setLongPressMenuOpensLaunchPad:*a1];
}

uint64_t sub_9C564()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__longPressMenuOpensLaunchPad, (uint64_t *)&unk_124E10);
}

uint64_t sub_9C578(uint64_t a1)
{
  return sub_9CE04(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__longPressMenuOpensLaunchPad, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_9C594(void *a1))()
{
  id v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__longPressMenuOpensLaunchPad;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_9C6A4;
}

uint64_t sub_9C6BC(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  sub_E6170();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_9C738()
{
  return sub_9C74C();
}

uint64_t sub_9C74C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

const char *sub_9C7B8()
{
  return "naturalThumbstickScrollDirection";
}

void sub_9C818()
{
  swift_getKeyPath();
  swift_getKeyPath();
  unsigned __int8 v1 = v0;
  sub_E6180();
  id v2 = *(id *)&v1[OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore_userDefaults];
  uint64_t v3 = [v1 naturalThumbstickScrollDirection] ^ 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  NSString v4 = sub_E70D0();
  swift_bridgeObjectRelease();
  [v2 setBool:v3 forKey:v4];
}

id sub_9C910@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 naturalThumbstickScrollDirection];
  *a2 = (_BYTE)result;
  return result;
}

id sub_9C944(unsigned __int8 *a1, id *a2)
{
  return [*a2 setNaturalThumbstickScrollDirection:*a1];
}

uint64_t sub_9C958()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__naturalThumbstickScrollDirection, (uint64_t *)&unk_124E10);
}

uint64_t sub_9C96C(uint64_t a1)
{
  return sub_9CE04(a1, &qword_122248, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__naturalThumbstickScrollDirection, (uint64_t *)&unk_124E10);
}

uint64_t (*sub_9C988(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_122248);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__naturalThumbstickScrollDirection;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C((uint64_t *)&unk_124E10);
  sub_E6140();
  swift_endAccess();
  return sub_9CA98;
}

uint64_t sub_9CA9C()
{
  return sub_E6130();
}

double sub_9CB4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_E6170();
  swift_release();
  swift_release();
  return v1;
}

const char *sub_9CBC0()
{
  return "thumbstickScrollingSpeed";
}

void sub_9CC24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  double v1 = v0;
  sub_E6180();
  id v2 = *(id *)&v1[OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore_userDefaults];
  [v1 thumbstickScrollingSpeed];
  double v4 = v3;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  NSString v5 = sub_E70D0();
  swift_bridgeObjectRelease();
  [v2 setDouble:v5 forKey:v4];
}

id sub_9CD24@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 thumbstickScrollingSpeed];
  *a2 = v4;
  return result;
}

id sub_9CD58(double *a1, id *a2)
{
  return [*a2 setThumbstickScrollingSpeed:*a1];
}

uint64_t sub_9CD6C()
{
  return sub_9CD80((uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__thumbstickScrollingSpeed, &qword_124E20);
}

uint64_t sub_9CD80(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_9CDE8(uint64_t a1)
{
  return sub_9CE04(a1, &qword_124E28, (uint64_t)&OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__thumbstickScrollingSpeed, &qword_124E20);
}

uint64_t sub_9CE04(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_10C7C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_10C7C(a4);
  sub_E6150();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_9CF34(void *a1))()
{
  double v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10C7C(&qword_124E28);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC25GameControlleriOSSettings19GCSPreferencesStore__thumbstickScrollingSpeed;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_10C7C(&qword_124E20);
  sub_E6140();
  swift_endAccess();
  return sub_9D044;
}

void sub_9D048(uint64_t a1, char a2)
{
  double v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_E6150();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

void *sub_9D1B8(uint64_t a1, uint64_t a2)
{
  return sub_A0F88(a1, a2, (SEL *)&selRef_allControllers, (unint64_t *)&qword_124E30, (uint64_t)&classRef_GCSController, (SEL *)&selRef_persistentIdentifier);
}

void *sub_9D304()
{
  id v1 = [v0 hiddenControllers];
  sub_B3A64(0, (unint64_t *)&qword_124E30);
  unint64_t v2 = sub_E7210();

  id v3 = [v0 allControllers];
  unint64_t v4 = sub_E7210();

  uint64_t v5 = sub_AF864(v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_9D3D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_E7570())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)sub_E74E0();
LABEL_5:
      size_t v6 = v5;
      sub_B3A64(0, (unint64_t *)&qword_124E30);
      char v7 = sub_E7390();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_E7390();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      sub_E74E0();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_E7390();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_9D558(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_E7620();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_E7620() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

Swift::Int sub_9D620()
{
  return sub_9ED54(0x72746E6F436C6C61, 0xEE007372656C6C6FLL);
}

uint64_t sub_9D698()
{
  return sub_9E620((SEL *)&selRef_allControllers, (unint64_t *)&qword_124E30, (uint64_t)&classRef_GCSController, (uint64_t (*)(uint64_t, id))sub_AFB20);
}

uint64_t sub_9D6F0()
{
  return sub_9D998((SEL *)&selRef_allControllers, (uint64_t (*)(uint64_t, char *))sub_AFECC);
}

Swift::Int sub_9D714()
{
  sub_10C7C(&qword_123488);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_EB580;
  strcpy((char *)(inited + 32), "allControllers");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000000000EF710;
  Swift::Int v1 = sub_B0B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v1;
}

Class sub_9D8EC(void *a1, uint64_t a2, SEL *a3, uint64_t (*a4)(uint64_t, char *))
{
  id v6 = a1;
  sub_9D998(a3, a4);

  sub_B3A64(0, (unint64_t *)&qword_124E30);
  v7.super.Class isa = sub_E7200().super.isa;
  swift_bridgeObjectRelease();

  return v7.super.isa;
}

uint64_t sub_9D978()
{
  return sub_9D998((SEL *)&selRef_fusableControllers, (uint64_t (*)(uint64_t, char *))sub_B00F4);
}

uint64_t sub_9D998(SEL *a1, uint64_t (*a2)(uint64_t, char *))
{
  id v5 = [v2 copilotFusedControllers];
  sub_B3A64(0, (unint64_t *)&unk_124E40);
  unint64_t v6 = sub_E7210();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_E7570();
    uint64_t v7 = result;
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v24 = v2;
  uint64_t v25 = a2;
  uint64_t v23 = a1;
  if (!v7)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease_n();
    id v20 = [v24 *v23];
    sub_B3A64(0, (unint64_t *)&qword_124E30);
    uint64_t v21 = sub_E7210();

    uint64_t v22 = v25(v21, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v11 = (id)sub_E74E0();
      }
      else {
        id v11 = *(id *)(v6 + 8 * v9 + 32);
      }
      BOOL v12 = v11;
      id v13 = objc_msgSend(v11, "fusedControllerIdentifier", v23, v24);
      uint64_t v14 = sub_E7110();
      uint64_t v16 = v15;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_3F588(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v18 = *((void *)v10 + 2);
      unint64_t v17 = *((void *)v10 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v10 = sub_3F588((char *)(v17 > 1), v18 + 1, 1, v10);
      }
      ++v9;
      *((void *)v10 + 2) = v18 + 1;
      uint64_t v19 = &v10[16 * v18];
      *((void *)v19 + 4) = v14;
      *((void *)v19 + 5) = v16;
    }
    while (v7 != v9);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

Swift::Int sub_9DBE0()
{
  sub_10C7C(&qword_123488);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_ECEF0;
  strcpy((char *)(inited + 32), "allControllers");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = 0xD000000000000017;
  *(void *)(inited + 56) = 0x80000000000EF710;
  *(void *)(inited + 64) = 0xD00000000000001ALL;
  *(void *)(inited + 72) = 0x80000000000F2D80;
  Swift::Int v1 = sub_B0B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v1;
}

void sub_9DDEC()
{
  id v1 = [v0 allControllers];
  sub_B3A64(0, (unint64_t *)&qword_124E30);
  unint64_t v2 = sub_E7210();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_E7570();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_E74E0();
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      unint64_t v6 = v5;
      if ([v5 supportsBuddyController])
      {
        sub_E7510();
        sub_E7540();
        sub_E7550();
        sub_E7520();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_9DF70()
{
  return sub_9ED54(0x72746E6F436C6C61, 0xEE007372656C6C6FLL);
}

uint64_t sub_9DFFC()
{
  id v1 = [v0 games];
  sub_B3A64(0, (unint64_t *)&qword_122828);
  unint64_t v2 = sub_E7210();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_E7570();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t result = self;
  id v23 = (id)result;
  if (v3 < 1) {
    goto LABEL_31;
  }
  uint64_t v5 = 0;
  unint64_t v6 = v2 & 0xC000000000000001;
  unint64_t v7 = v2;
  do
  {
    if (v6) {
      id v8 = (id)sub_E74E0();
    }
    else {
      id v8 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, "bundleIdentifier", v23);
    uint64_t v11 = sub_E7110();
    uint64_t v13 = v12;

    id v14 = [v23 defaultIdentifier];
    uint64_t v15 = sub_E7110();
    uint64_t v17 = v16;

    if (v11 == v15 && v13 == v17)
    {
      swift_bridgeObjectRelease_n();
LABEL_6:
      sub_E7510();
      sub_E7540();
      sub_E7550();
      sub_E7520();
      goto LABEL_7;
    }
    char v19 = sub_E7620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_6;
    }

LABEL_7:
    ++v5;
    unint64_t v2 = v7;
  }
  while (v3 != v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0)
  {
LABEL_21:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
      goto LABEL_27;
    }
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_23;
    }
LABEL_28:
    swift_release();
    __break(1u);
LABEL_29:
    id v20 = (id)sub_E74E0();
LABEL_26:
    id v21 = v20;
    swift_release();
    return (uint64_t)v21;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_E7570();
  uint64_t result = swift_release();
  if (!v22) {
    goto LABEL_28;
  }
LABEL_23:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
    goto LABEL_29;
  }
  if (_swiftEmptyArrayStorage[2])
  {
    id v20 = (id)_swiftEmptyArrayStorage[4];
    goto LABEL_26;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_9E2EC()
{
  id v1 = [v0 profiles];
  sub_B3A64(0, (unint64_t *)&qword_124E50);
  unint64_t v2 = sub_E7210();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_E7570();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  if (v3 < 1) {
    goto LABEL_26;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_E74E0();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    unint64_t v6 = v5;
    if ([v5 customizable])
    {
    }
    else
    {
      sub_E7510();
      sub_E7540();
      sub_E7550();
      sub_E7520();
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
LABEL_16:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    if (!_swiftEmptyArrayStorage[2])
    {
LABEL_23:
      swift_release();
      __break(1u);
      goto LABEL_24;
    }
    goto LABEL_18;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_E7570();
  swift_release();
  if (!v8) {
    goto LABEL_23;
  }
LABEL_18:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_24:
    sub_E74E0();
    goto LABEL_21;
  }
  if (_swiftEmptyArrayStorage[2])
  {
    id v7 = (id)_swiftEmptyArrayStorage[4];
LABEL_21:
    swift_release();
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

Class sub_9E518(void *a1, uint64_t a2, SEL *a3, unint64_t *a4, uint64_t a5, void (*a6)(uint64_t, id))
{
  id v9 = a1;
  id v10 = [v9 *a3];
  sub_B3A64(0, a4);
  uint64_t v11 = sub_E7210();

  a6(v11, v9);
  swift_bridgeObjectRelease();

  v12.super.Class isa = sub_E7200().super.isa;
  swift_bridgeObjectRelease();

  return v12.super.isa;
}

uint64_t sub_9E5F0()
{
  return sub_9E620((SEL *)&selRef_profiles, (unint64_t *)&qword_124E50, (uint64_t)&classRef_GCSProfile, (uint64_t (*)(uint64_t, id))sub_B0304);
}

uint64_t sub_9E620(SEL *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, id))
{
  id v7 = [v4 *a1];
  sub_B3A64(0, a2);
  uint64_t v8 = sub_E7210();

  id v9 = v4;
  uint64_t v10 = a4(v8, v9);
  swift_bridgeObjectRelease();

  return v10;
}

Swift::Int sub_9E6CC()
{
  return sub_9ED54(0x73656C69666F7270, 0xE800000000000000);
}

uint64_t sub_9E72C()
{
  return sub_9E620((SEL *)&selRef_profiles, (unint64_t *)&qword_124E50, (uint64_t)&classRef_GCSProfile, (uint64_t (*)(uint64_t, id))sub_B0630);
}

Swift::Int sub_9E75C()
{
  return sub_9ED54(0x73656C69666F7270, 0xE800000000000000);
}

Class sub_9E7B4(void *a1, uint64_t a2, void (*a3)(void), unint64_t *a4)
{
  id v6 = a1;
  a3();

  sub_B3A64(0, a4);
  v7.super.Class isa = sub_E7200().super.isa;
  swift_bridgeObjectRelease();

  return v7.super.isa;
}

uint64_t sub_9E838()
{
  id v1 = [v0 profiles];
  sub_B3A64(0, (unint64_t *)&qword_124E50);
  uint64_t v2 = sub_E7210();

  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    id v7 = v0;
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_AD034(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    id v4 = v0;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = v3;
  id v5 = v0;
  sub_B1C20(&v9, v5);
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_9E92C(void **a1, id *a2, void *a3)
{
  uint64_t v6 = sub_E6050();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSArray v12 = (char *)&v42 - v11;
  uint64_t v13 = *a1;
  id v43 = *a2;
  id v14 = [v13 uuid];
  sub_E6030();

  id v15 = [a3 profileUsageStats];
  type metadata accessor for GCSProfileUsageStats();
  sub_B1FDC(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v16 = sub_E7050();

  uint64_t v17 = *(void *)(v16 + 16);
  id v42 = v13;
  if (v17 && (unint64_t v18 = sub_6817C((uint64_t)v12), (v19 & 1) != 0))
  {
    id v20 = *(id *)(*(void *)(v16 + 56) + 8 * v18);
    swift_bridgeObjectRelease();
    id v21 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v21(v12, v6);
    char v23 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.reloff + (swift_isaMask & *v20)))(v22);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v21 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v21(v12, v6);
    char v23 = 0;
  }
  id v24 = objc_msgSend(v43, "uuid", v42);
  sub_E6030();

  id v25 = [a3 profileUsageStats];
  uint64_t v26 = sub_E7050();

  if (*(void *)(v26 + 16) && (unint64_t v27 = sub_6817C((uint64_t)v10), (v28 & 1) != 0))
  {
    uint64_t v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRelease();
    uint64_t v30 = v21(v10, v6);
    char v31 = (*(uint64_t (**)(uint64_t))((char *)&stru_68.reloff + (swift_isaMask & *v29)))(v30);

    if (v23)
    {
      if ((v31 & 1) == 0) {
        goto LABEL_11;
      }
    }
    else if (v31)
    {
      char v32 = 0;
      return v32 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v21(v10, v6);
    if (v23)
    {
LABEL_11:
      char v32 = 1;
      return v32 & 1;
    }
  }
  id v33 = [v42 name];
  uint64_t v34 = sub_E7110();
  uint64_t v36 = v35;

  id v37 = [v43 name];
  uint64_t v38 = sub_E7110();
  uint64_t v40 = v39;

  if (v34 == v38 && v36 == v40) {
    char v32 = 0;
  }
  else {
    char v32 = sub_E7620();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32 & 1;
}

Swift::Int sub_9ED3C()
{
  return sub_9ED54(0x73656C69666F7270, 0xE800000000000000);
}

Swift::Int sub_9ED54(uint64_t a1, uint64_t a2)
{
  sub_10C7C(&qword_123488);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_EBBE0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 4sub_E59A4(2, 18, 1, 0) = a2;
  Swift::Int v5 = sub_B0B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v5;
}

Class sub_9EDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10C7C(&qword_123488);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_EBBE0;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 4sub_E59A4(2, 18, 1, 0) = a4;
  sub_B0B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v7.super.Class isa = sub_E72B0().super.isa;
  swift_bridgeObjectRelease();

  return v7.super.isa;
}

uint64_t sub_9EEB8(void *a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((char *)&stru_248.size + (swift_isaMask & *v1)))();
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = [v1 connectedControllerIdentifiers];
    uint64_t v6 = (void *)sub_E7210();

    id v7 = [v4 fusedControllerIdentifier];
    uint64_t v8 = sub_E7110();
    uint64_t v10 = v9;

    int v11 = sub_9D558(v8, v10, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v11 = 0;
  }
  id v12 = [v1 connectedControllerIdentifiers];
  uint64_t v13 = (void *)sub_E7210();

  id v14 = [a1 persistentIdentifier];
  uint64_t v15 = sub_E7110();
  uint64_t v17 = v16;

  LODWORD(v14) = sub_9D558(v15, v17, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v14 | v11) & 1;
}

uint64_t sub_9F094()
{
  id v1 = (void *)(*(uint64_t (**)(void))((char *)&stru_248.size + (swift_isaMask & *v0)))();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 fusedControllerIdentifier];
    uint64_t v4 = sub_E7110();
    uint64_t v6 = v5;

    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))&stru_1F8.sectname[swift_isaMask & *v0])(v4, v6);
    swift_bridgeObjectRelease();
    if (v7)
    {
      char v8 = (*(uint64_t (**)(uint64_t))&stru_248.segname[(swift_isaMask & *v0) - 8])(v7);

      uint64_t v2 = (void *)v7;
    }
    else
    {
      char v8 = 0;
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_9F230(uint64_t a1)
{
  id v3 = [v1 fusedControllers];
  sub_B3A64(0, (unint64_t *)&qword_124E30);
  unint64_t v4 = sub_E7210();

  LOBYTE(a1) = sub_9D3D0(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

void *sub_9F35C(void *a1)
{
  id v2 = [v1 copilotFusedControllers];
  sub_B3A64(0, (unint64_t *)&unk_124E40);
  unint64_t v3 = sub_E7210();

  if (v3 >> 62) {
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  while (v4)
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0 ? (id)sub_E74E0() : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 pilotIdentifier];
      uint64_t v10 = sub_E7110();
      uint64_t v12 = v11;

      id v13 = [a1 persistentIdentifier];
      uint64_t v14 = sub_E7110();
      uint64_t v16 = v15;

      if (v10 == v14 && v12 == v16) {
        goto LABEL_21;
      }
      char v18 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_22;
      }
      id v19 = [v7 copilotIdentifier];
      uint64_t v20 = sub_E7110();
      uint64_t v22 = v21;

      id v23 = [a1 persistentIdentifier];
      uint64_t v24 = sub_E7110();
      uint64_t v26 = v25;

      if (v20 == v24 && v22 == v26) {
        goto LABEL_21;
      }
      char v27 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_22;
      }
      id v28 = [v7 fusedControllerIdentifier];
      uint64_t v29 = sub_E7110();
      uint64_t v31 = v30;

      id v32 = [a1 persistentIdentifier];
      uint64_t v33 = sub_E7110();
      uint64_t v35 = v34;

      if (v29 == v33 && v31 == v35)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v7;
      }
      char v36 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_E7570();
    swift_bridgeObjectRelease();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_9F6D8(void *a1)
{
  id v2 = [v1 copilotFusedControllers];
  sub_B3A64(0, (unint64_t *)&unk_124E40);
  unint64_t v3 = sub_E7210();

  if (v3 >> 62) {
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  while (v4)
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0 ? (id)sub_E74E0() : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 pilotIdentifier];
      uint64_t v10 = sub_E7110();
      uint64_t v12 = v11;

      id v13 = [a1 persistentIdentifier];
      uint64_t v14 = sub_E7110();
      uint64_t v16 = v15;

      if (v10 == v14 && v12 == v16) {
        goto LABEL_18;
      }
      char v18 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_19;
      }
      id v19 = [v7 copilotIdentifier];
      uint64_t v20 = sub_E7110();
      uint64_t v22 = v21;

      id v23 = [a1 persistentIdentifier];
      uint64_t v24 = sub_E7110();
      uint64_t v26 = v25;

      if (v20 == v24 && v22 == v26)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v7;
      }
      char v27 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_E7570();
    swift_bridgeObjectRelease();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_9F9BC(void *a1)
{
  id v2 = [v1 copilotFusedControllers];
  sub_B3A64(0, (unint64_t *)&unk_124E40);
  unint64_t v3 = sub_E7210();

  if (v3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  while (v4)
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0 ? (id)sub_E74E0() : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 fusedControllerIdentifier];
      uint64_t v10 = sub_E7110();
      uint64_t v12 = v11;

      id v13 = [a1 persistentIdentifier];
      uint64_t v14 = sub_E7110();
      uint64_t v16 = v15;

      if (v10 == v14 && v12 == v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v7;
      }
      char v18 = sub_E7620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_E7570();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_9FC6C()
{
  id v1 = v0;
  uint64_t v113 = sub_E60E0();
  unint64_t v123 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  unint64_t v3 = (unint64_t)&v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10C7C(&qword_124E58);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (unint64_t *)((char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  id v9 = (unint64_t *)((char *)&v112 - v8);
  uint64_t v10 = sub_E6050();
  uint64_t v136 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (unint64_t)&v112 - v14;
  uint64_t v16 = sub_9ADFC((uint64_t)_swiftEmptyArrayStorage);
  id v17 = [v0 profiles];
  sub_B3A64(0, (unint64_t *)&qword_124E50);
  unint64_t v18 = sub_E7210();

  uint64_t v138 = v18;
  if (v18 >> 62) {
    goto LABEL_127;
  }
  uint64_t v19 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
LABEL_3:
  unint64_t v122 = v3;
  uint64_t v135 = v10;
  uint64_t v124 = v1;
  uint64_t v141 = v7;
  uint64_t v142 = v13;
  if (v19)
  {
    uint64_t v7 = (void *)v138;
    unint64_t v143 = v138 & 0xC000000000000001;
    uint64_t v134 = v136 + 16;
    unint64_t v3 = 4;
    unsigned __int8 v139 = (void (**)(unint64_t, uint64_t))(v136 + 8);
    uint64_t v140 = (void (**)(void, void, void))v19;
    uint64_t v137 = (v136 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    while (1)
    {
      unint64_t v23 = v3 - 4;
      if (v143)
      {
        id v24 = (id)sub_E74E0();
        uint64_t v13 = v3 - 3;
        if (__OFADD__(v23, 1)) {
          goto LABEL_122;
        }
      }
      else
      {
        id v24 = (id)v7[v3];
        uint64_t v13 = v3 - 3;
        if (__OFADD__(v23, 1))
        {
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_E7570();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
      }
      uint64_t v144 = (uint64_t)v24;
      id v25 = objc_msgSend(v24, "uuid", v112);
      sub_E6030();

      id v26 = [objc_allocWithZone((Class)type metadata accessor for GCSProfileUsageStats()) init];
      if (!v26)
      {
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_6817C(v15);
        char v37 = v36;
        swift_bridgeObjectRelease();
        if (v37)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v145 = (void *)v16;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_AEB5C();
            uint64_t v16 = (uint64_t)v145;
          }
          uint64_t v39 = v135;
          uint64_t v40 = *(void (**)(unint64_t, uint64_t))(v136 + 8);
          v40(*(void *)(v16 + 48) + *(void *)(v136 + 72) * v35, v135);
          uint64_t v16 = (uint64_t)v145;
          uint64_t v41 = *(void **)(v145[7] + 8 * v35);
          sub_AE6F4(v35, (uint64_t)v145);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v41 = 0;
          uint64_t v40 = *v139;
          uint64_t v39 = v135;
        }
        v40(v15, v39);

        id v22 = v41;
        uint64_t v10 = v39;
        id v1 = v124;
        uint64_t v21 = v140;
        goto LABEL_7;
      }
      uint64_t v10 = (uint64_t)v26;
      char v27 = (void *)v16;
      uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v145 = v27;
      uint64_t v7 = (void *)v15;
      unint64_t v15 = sub_6817C(v15);
      uint64_t v29 = v27[2];
      BOOL v30 = (v28 & 1) == 0;
      uint64_t v31 = v29 + v30;
      if (__OFADD__(v29, v30)) {
        goto LABEL_124;
      }
      char v32 = v28;
      if (v27[3] >= v31)
      {
        if (v16)
        {
          uint64_t v16 = (uint64_t)v145;
          if ((v28 & 1) == 0) {
            goto LABEL_25;
          }
        }
        else
        {
          sub_AEB5C();
          uint64_t v16 = (uint64_t)v145;
          if ((v32 & 1) == 0) {
            goto LABEL_25;
          }
        }
      }
      else
      {
        sub_ADFB8(v31, v16);
        unint64_t v33 = sub_6817C((uint64_t)v7);
        if ((v32 & 1) != (v34 & 1))
        {
          uint64_t result = sub_E7640();
          __break(1u);
          return result;
        }
        unint64_t v15 = v33;
        uint64_t v16 = (uint64_t)v145;
        if ((v32 & 1) == 0)
        {
LABEL_25:
          *(void *)(v16 + 8 * (v15 >> 6) + 64) |= 1 << v15;
          (*(void (**)(unint64_t, void *, uint64_t))(v136 + 16))(*(void *)(v16 + 48) + *(void *)(v136 + 72) * v15, v7, v135);
          *(void *)(*(void *)(v16 + 56) + 8 * v15) = v10;
          uint64_t v42 = *(void *)(v16 + 16);
          BOOL v43 = __OFADD__(v42, 1);
          uint64_t v44 = v42 + 1;
          if (v43) {
            goto LABEL_125;
          }
          *(void *)(v16 + 16) = v44;
          goto LABEL_6;
        }
      }
      uint64_t v20 = *(void *)(v16 + 56);

      *(void *)(v20 + 8 * v15) = v10;
LABEL_6:
      swift_bridgeObjectRelease();
      unint64_t v15 = (unint64_t)v7;
      uint64_t v10 = v135;
      (*v139)((unint64_t)v7, v135);
      uint64_t v7 = (void *)v138;
      uint64_t v21 = v140;
      id v22 = (id)v144;
LABEL_7:

      ++v3;
      if ((void (**)(void, void, void))v13 == v21)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v122;
        uint64_t v7 = v141;
        goto LABEL_33;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_33:
  id v45 = objc_msgSend(v1, "hiddenControllers", v112);
  uint64_t v138 = sub_B3A64(0, (unint64_t *)&qword_124E30);
  uint64_t v144 = sub_E7210();

  id v46 = [v1 games];
  sub_B3A64(0, (unint64_t *)&qword_122828);
  unint64_t v47 = sub_E7210();

  unint64_t v116 = v47;
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_E7570();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v132 = v16;
  unint64_t v15 = v123;
  if (v13)
  {
    unint64_t v48 = 0;
    unint64_t v121 = v116 & 0xC000000000000001;
    uint64_t v115 = v116 & 0xFFFFFFFFFFFFFF8;
    unint64_t v114 = v116 + 32;
    uint64_t v140 = (void (**)(void, void, void))(v136 + 32);
    unint64_t v49 = v144 & 0xFFFFFFFFFFFFFF8;
    unint64_t v133 = v144 & 0xFFFFFFFFFFFFFF8;
    uint64_t v134 = v136 + 16;
    if (v144 < 0) {
      unint64_t v49 = v144;
    }
    unint64_t v112 = v49;
    unint64_t v130 = v144 & 0xC000000000000001;
    unsigned __int8 v139 = (void (**)(unint64_t, uint64_t))(v136 + 8);
    long long v126 = v9;
    uint64_t v120 = v13;
    do
    {
      if (v121)
      {
        unint64_t v50 = v48;
        id v51 = (id)sub_E74E0();
      }
      else
      {
        if (v48 >= *(void *)(v115 + 16)) {
          goto LABEL_126;
        }
        unint64_t v50 = v48;
        id v51 = *(id *)(v114 + 8 * v48);
      }
      id v128 = v51;
      BOOL v43 = __OFADD__(v50, 1);
      unint64_t v52 = v50 + 1;
      if (v43) {
        goto LABEL_123;
      }
      unint64_t v125 = v52;
      uint64_t v13 = (uint64_t)objc_msgSend(v128, "controllerToProfileMappings", v112);
      uint64_t v53 = sub_E7050();

      unint64_t v54 = 0;
      uint64_t v55 = *(void *)(v53 + 64);
      uint64_t v129 = v53 + 64;
      uint64_t v56 = 1 << *(unsigned char *)(v53 + 32);
      if (v56 < 64) {
        uint64_t v57 = ~(-1 << v56);
      }
      else {
        uint64_t v57 = -1;
      }
      unint64_t v3 = v57 & v55;
      unint64_t v58 = (unint64_t)(v56 + 63) >> 6;
      unint64_t v117 = v58 - 1;
      int64_t v131 = v58;
      unint64_t v119 = v58 - 5;
      uint64_t v137 = v53;
      uint64_t v118 = v53 + 104;
      while (1)
      {
        if (v3)
        {
          unint64_t v59 = __clz(__rbit64(v3));
          v3 &= v3 - 1;
          unint64_t v143 = v54;
          unint64_t v60 = v59 | (v54 << 6);
          goto LABEL_53;
        }
        int64_t v67 = v54 + 1;
        if (__OFADD__(v54, 1))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
          goto LABEL_122;
        }
        if (v67 >= v131)
        {
          unint64_t v69 = v54;
        }
        else
        {
          unint64_t v68 = *(void *)(v129 + 8 * v67);
          if (v68) {
            goto LABEL_57;
          }
          unint64_t v69 = v54 + 1;
          if ((uint64_t)(v54 + 2) < v131)
          {
            unint64_t v68 = *(void *)(v129 + 8 * (v54 + 2));
            if (v68)
            {
              int64_t v67 = v54 + 2;
              goto LABEL_57;
            }
            unint64_t v69 = v54 + 2;
            if ((uint64_t)(v54 + 3) < v131)
            {
              unint64_t v68 = *(void *)(v129 + 8 * (v54 + 3));
              if (v68)
              {
                int64_t v67 = v54 + 3;
LABEL_57:
                unint64_t v3 = (v68 - 1) & v68;
                unint64_t v60 = __clz(__rbit64(v68)) + (v67 << 6);
                unint64_t v143 = v67;
LABEL_53:
                uint64_t v61 = v136;
                uint64_t v62 = *(void *)(v137 + 56);
                uint64_t v63 = (void *)(*(void *)(v137 + 48) + 16 * v60);
                uint64_t v64 = v63[1];
                void *v7 = *v63;
                v7[1] = v64;
                uint64_t v65 = v62 + *(void *)(v61 + 72) * v60;
                uint64_t v66 = sub_10C7C((uint64_t *)&unk_124E60);
                (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))((char *)v7 + *(int *)(v66 + 48), v65, v10);
                (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v7, 0, 1, v66);
                swift_bridgeObjectRetain();
                goto LABEL_60;
              }
              int64_t v67 = v54 + 4;
              unint64_t v69 = v54 + 3;
              if ((uint64_t)(v54 + 4) < v131)
              {
                unint64_t v68 = *(void *)(v129 + 8 * v67);
                if (v68) {
                  goto LABEL_57;
                }
                while (v119 != v54)
                {
                  unint64_t v68 = *(void *)(v118 + 8 * v54++);
                  if (v68)
                  {
                    int64_t v67 = v54 + 4;
                    goto LABEL_57;
                  }
                }
                unint64_t v69 = v117;
              }
            }
          }
        }
        uint64_t v70 = sub_10C7C((uint64_t *)&unk_124E60);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v7, 1, 1, v70);
        unint64_t v3 = 0;
        unint64_t v143 = v69;
LABEL_60:
        sub_B3704((uint64_t)v7, (uint64_t)v9, &qword_124E58);
        uint64_t v71 = sub_10C7C((uint64_t *)&unk_124E60);
        int v72 = (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v9, 1, v71);
        uint64_t v13 = v142;
        if (v72 == 1) {
          break;
        }
        unint64_t v15 = *v9;
        Swift::Int v73 = v9[1];
        (*v140)(v142, (char *)v9 + *(int *)(v71 + 48), v10);
        uint64_t v74 = (*(uint64_t (**)(unint64_t, Swift::Int))&stru_1F8.sectname[swift_isaMask & *v1])(v15, v73);
        if (!v74)
        {
          (*v139)(v13, v10);
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        uint64_t v7 = (void *)v74;
        if ((unint64_t)v144 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = sub_E7570();
          if (!v10)
          {
LABEL_101:
            swift_bridgeObjectRelease();
            goto LABEL_102;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v133 + 16);
          swift_bridgeObjectRetain();
          if (!v10) {
            goto LABEL_101;
          }
        }
        if (v130) {
          id v75 = (id)sub_E74E0();
        }
        else {
          id v75 = *(id *)(v144 + 32);
        }
        unint64_t v76 = v75;
        uint64_t v13 = sub_E7390();

        if (v13)
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = v132;
          goto LABEL_68;
        }
        id v77 = v1;
        uint64_t v78 = v132;
        if (v10 != 1)
        {
          if (v130)
          {
            uint64_t v13 = sub_E74E0();
            char v79 = sub_E7390();
            swift_unknownObjectRelease();
            if (v79) {
              goto LABEL_83;
            }
            if (v10 != 2)
            {
              uint64_t v16 = 2;
              id v9 = v126;
              while (1)
              {
                uint64_t v80 = sub_E74E0();
                id v1 = (void *)(v16 + 1);
                if (__OFADD__(v16, 1)) {
                  goto LABEL_120;
                }
                uint64_t v13 = v80;
                char v81 = sub_E7390();
                swift_unknownObjectRelease();
                if (v81) {
                  goto LABEL_94;
                }
                ++v16;
                if (v1 == (void *)v10) {
                  goto LABEL_93;
                }
              }
            }
          }
          else
          {
            uint64_t v13 = (uint64_t)*(id *)(v144 + 40);
            char v82 = sub_E7390();

            if (v82)
            {
LABEL_83:
              swift_bridgeObjectRelease();
              uint64_t v16 = v78;
              id v1 = v77;
              id v9 = v126;
LABEL_68:
              uint64_t v10 = v135;
              (*v139)(v142, v135);
LABEL_108:
              swift_bridgeObjectRelease();

              goto LABEL_50;
            }
            if (v10 != 2)
            {
              uint64_t v16 = 6;
              uint64_t v83 = v144;
              id v9 = v126;
              while (1)
              {
                id v1 = (void *)(v16 - 3);
                if (__OFADD__(v16 - 4, 1)) {
                  goto LABEL_121;
                }
                uint64_t v13 = (uint64_t)*(id *)(v83 + 8 * v16);
                char v84 = sub_E7390();

                if (v84)
                {
LABEL_94:
                  swift_bridgeObjectRelease();
                  uint64_t v16 = v132;
                  id v1 = v124;
                  goto LABEL_68;
                }
                ++v16;
                uint64_t v83 = v144;
                if (v1 == (void *)v10)
                {
LABEL_93:
                  swift_bridgeObjectRelease();
                  uint64_t v16 = v132;
                  id v1 = v124;
                  uint64_t v13 = v142;
                  goto LABEL_102;
                }
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v13 = v142;
        uint64_t v16 = v78;
        id v1 = v77;
        id v9 = v126;
LABEL_102:
        uint64_t v10 = v135;
        if (!*(void *)(v16 + 16) || (unint64_t v85 = sub_6817C(v13), (v86 & 1) == 0))
        {
          (*v139)(v13, v10);
          goto LABEL_108;
        }
        uint64_t v87 = *(void **)(*(void *)(v16 + 56) + 8 * v85);
        uint64_t v88 = *(uint64_t (**)(void **))&stru_68.segname[(swift_isaMask & *v87) - 8];
        long long v127 = v87;
        id v89 = (void (*)(void **, void))v88(&v145);
        sub_AD528((Swift::Int *)&v146, v15, v73);
        swift_bridgeObjectRelease();
        v89(&v145, 0);
        id v90 = [v128 bundleIdentifier];
        uint64_t v91 = sub_E7110();
        uint64_t v93 = v92;

        uint64_t v13 = (uint64_t)[self defaultIdentifier];
        unint64_t v15 = sub_E7110();
        uint64_t v95 = v94;

        if (v91 == v15 && v93 == v95)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v13 = sub_E7620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            id v96 = [v128 bundleIdentifier];
            Swift::Int v97 = sub_E7110();
            Swift::Int v99 = v98;

            unint64_t v15 = (unint64_t)v127;
            uint64_t v13 = (*(uint64_t (**)(void **))&stru_68.segname[(swift_isaMask & *v127) + 16])(&v145);
            sub_AD528((Swift::Int *)&v146, v97, v99);
            swift_bridgeObjectRelease();
            ((void (*)(void **, void))v13)(&v145, 0);

            uint64_t v10 = v135;
            (*v139)(v142, v135);
            goto LABEL_112;
          }
        }
        uint64_t v10 = v135;
        (*v139)(v142, v135);

LABEL_112:
        uint64_t v16 = v132;
LABEL_50:
        uint64_t v7 = v141;
        unint64_t v54 = v143;
      }

      swift_release();
      uint64_t v13 = v120;
      unint64_t v48 = v125;
      unint64_t v3 = v122;
      unint64_t v15 = v123;
    }
    while (v125 != v120);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for GCSProfileUsageStats();
  sub_B1FDC(&qword_123E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  Class isa = sub_E7040().super.isa;
  swift_bridgeObjectRelease();
  [v1 setProfileUsageStats:isa];

  uint64_t v101 = sub_33D64();
  uint64_t v102 = v113;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v3, v101, v113);
  os_log_type_t v103 = sub_E72E0();
  long long v104 = v1;
  long long v105 = sub_E60C0();
  if (os_log_type_enabled(v105, v103))
  {
    long long v106 = (uint8_t *)swift_slowAlloc();
    uint64_t v144 = swift_slowAlloc();
    uint64_t v145 = (void *)v144;
    *(_DWORD *)long long v106 = 136315138;
    unint64_t v143 = (unint64_t)(v106 + 4);
    id v107 = [v104 profileUsageStats];
    sub_E7050();

    uint64_t v108 = sub_E7060();
    unint64_t v110 = v109;
    swift_bridgeObjectRelease();
    unint64_t v146 = sub_23A0C(v108, v110, (uint64_t *)&v145);
    sub_E73D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v105, v103, "%s", v106, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unint64_t, uint64_t))(v123 + 8))(v122, v113);
  }
  else
  {

    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v3, v102);
  }
  return swift_bridgeObjectRelease();
}