uint64_t sub_B12A4()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  double v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;

  v2 = *((void *)v0 + 30);
  v1 = *((void *)v0 + 31);
  v4 = *((void *)v0 + 27);
  v3 = *((void *)v0 + 28);
  v5 = *((void *)v0 + 26);
  v7 = *((void *)v0 + 18);
  v6 = (void *)*((void *)v0 + 19);
  v8 = *((void *)v0 + 8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(v2, v1, v4, v3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36._countAndFlagsBits = v7;
  v36._object = v6;
  sub_145C90(v36);
  v37._countAndFlagsBits = 8995;
  v37._object = (void *)0xE200000000000000;
  sub_145C90(v37);
  v10 = sub_B260C();
  v12 = v11;
  v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520((uint64_t)v10, v12, 0xD000000000000017, 0x800000000014EB00, v13);
  v14 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = v7;
  v38._object = v6;
  sub_145C90(v38);
  v39._countAndFlagsBits = 8995;
  v39._object = (void *)0xE200000000000000;
  sub_145C90(v39);
  v15 = *(void **)(v8 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
  v16 = 0xE000000000000000;
  if (v15)
  {
    v17 = v15;
    sub_1467D0(31);
    swift_bridgeObjectRelease();
    v18 = [v17 string];
    v19 = sub_145BC0();
    v21 = v20;

    v40._countAndFlagsBits = v19;
    v40._object = v21;
    sub_145C90(v40);
    swift_bridgeObjectRelease();
    v41._countAndFlagsBits = 0x3E7669642F3CLL;
    v41._object = (void *)0xE600000000000000;
    sub_145C90(v41);

    v22 = 0xD000000000000017;
    v16 = 0x800000000014EC20;
  }
  else
  {
    v22 = 0;
  }
  v24 = *((void *)v0 + 18);
  v23 = (void *)*((void *)v0 + 19);
  v25 = (void *)*((void *)v0 + 17);
  v26 = v0[16];
  v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(v22, v16, 0xD000000000000012, 0x800000000014EB40, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = v24;
  v42._object = v23;
  sub_145C90(v42);
  v43._countAndFlagsBits = 8995;
  v43._object = (void *)0xE200000000000000;
  sub_145C90(v43);
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(0xD000000000000016, 0x800000000014EBC0, 0xD00000000000001FLL, 0x800000000014EBA0, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44._countAndFlagsBits = v24;
  v44._object = v23;
  sub_145C90(v44);
  v45._countAndFlagsBits = 8995;
  v45._object = (void *)0xE200000000000000;
  sub_145C90(v45);
  v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(0x3E7669642F3CLL, 0xE600000000000000, 0xD00000000000001FLL, 0x800000000014EBE0, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = v24;
  v46._object = v23;
  sub_145C90(v46);
  v47._countAndFlagsBits = 8995;
  v47._object = (void *)0xE200000000000000;
  sub_145C90(v47);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(0xD00000000000001BLL, 0x800000000014EC00, 0xD00000000000001FLL, 0x800000000014EAC0, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = v24;
  v48._object = v23;
  sub_145C90(v48);
  v49._countAndFlagsBits = 8995;
  v49._object = (void *)0xE200000000000000;
  sub_145C90(v49);
  swift_bridgeObjectRelease();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(0x3E7669642F3CLL, 0xE600000000000000, 0xD00000000000001FLL, 0x800000000014EB60, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_B1928(v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v32 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v0 + 1);
  v33 = *((void *)v0 + 17);
  return v32(v33, v14);
}

uint64_t sub_B17CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B1834()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A0310);
  sub_C584(v0, (uint64_t)qword_1A0310);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

void sub_B1928(double a1)
{
  if (qword_19AFA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_145760();
  sub_C584(v2, (uint64_t)qword_1A0310);
  oslog = sub_145740();
  os_log_type_t v3 = sub_1461E0();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_A314(&qword_1A0A00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = sub_145BD0();
    sub_3D2B4(v7, v8, &v10);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, oslog, v3, "EntryViewModel.buildExportPackage executed in %ss", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

unint64_t sub_B1B2C()
{
  uint64_t v18 = sub_145020();
  uint64_t v1 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  os_log_type_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_145060();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145230();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1467D0(36);
  swift_bridgeObjectRelease();
  unint64_t v21 = 0xD00000000000001CLL;
  unint64_t v22 = 0x800000000014ECE0;
  uint64_t v11 = v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_145050();
  sub_145000();
  uint64_t v12 = sub_145200();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v23._countAndFlagsBits = v12;
  v23._object = v14;
  sub_145C90(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0x3E7669642F3CLL;
  v24._object = (void *)0xE600000000000000;
  sub_145C90(v24);
  return v21;
}

uint64_t sub_B1DF8(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return _swift_task_switch(sub_B1E18, 0, 0);
}

uint64_t sub_B1E18()
{
  v0[2] = 0;
  uint64_t v1 = v0[5];
  v0[3] = 0xE000000000000000;
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsWithSlimAsset);
  v0[6] = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_146930();
    uint64_t v3 = result;
    v0[7] = result;
    if (result)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[8] = 0;
        uint64_t v5 = v0[6];
        if ((v5 & 0xC000000000000001) != 0) {
          id v6 = (id)sub_146810();
        }
        else {
          id v6 = *(id *)(v5 + 32);
        }
        v0[9] = v6;
        uint64_t v7 = (void *)swift_task_alloc();
        v0[10] = v7;
        *uint64_t v7 = v0;
        v7[1] = sub_B2004;
        uint64_t v8 = v0[4];
        return sub_6D3D0(v8);
      }
      return result;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    v0[7] = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  sub_1467D0(35);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  sub_145C90(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x3E7669642F3CLL;
  v12._object = (void *)0xE600000000000000;
  sub_145C90(v12);
  uint64_t v9 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
  return v9(0xD00000000000001BLL, 0x800000000014EC80);
}

uint64_t sub_B2004(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 88) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_B22DC;
  }
  else
  {
    *(void *)(v6 + 96) = a2;
    *(void *)(v6 + 104) = a1;
    uint64_t v7 = sub_B2138;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_B2138()
{
  v12._countAndFlagsBits = *(void *)(v0 + 104);
  uint64_t v1 = *(void **)(v0 + 72);
  v12._object = *(void **)(v0 + 96);
  sub_145C90(v12);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void *)(v0 + 64) + 1;
  if (v2 == *(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void **)(v0 + 24);
    sub_1467D0(35);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = v3;
    v13._object = v4;
    sub_145C90(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 0x3E7669642F3CLL;
    v14._object = (void *)0xE600000000000000;
    sub_145C90(v14);
    uint64_t v5 = *(uint64_t (**)(unint64_t, unint64_t))(v0 + 8);
    return v5(0xD00000000000001BLL, 0x800000000014EC80);
  }
  else
  {
    *(void *)(v0 + 64) = v2;
    uint64_t v7 = *(void *)(v0 + 48);
    if ((v7 & 0xC000000000000001) != 0) {
      id v8 = (id)sub_146810();
    }
    else {
      id v8 = *(id *)(v7 + 8 * v2 + 32);
    }
    *(void *)(v0 + 72) = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_B2004;
    uint64_t v10 = *(void *)(v0 + 32);
    return sub_6D3D0(v10);
  }
}

uint64_t sub_B22DC()
{
  if (qword_19AFA0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = sub_145760();
  sub_C584(v2, (uint64_t)qword_1A0310);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = sub_145740();
  os_log_type_t v6 = sub_1461F0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = v0[9];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v9 + 4) = v8;
    *uint64_t v10 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v9 + 14) = v11;
    v10[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v5, v6, "getHTMLAssetGrid error creating HTML export for %@ %@", (uint8_t *)v9, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    id v8 = v5;
  }
  swift_errorRelease();

  uint64_t v12 = v0[8] + 1;
  if (v12 == v0[7])
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v0[2];
    Swift::String v14 = (void *)v0[3];
    sub_1467D0(35);
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = v13;
    v22._object = v14;
    sub_145C90(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 0x3E7669642F3CLL;
    v23._object = (void *)0xE600000000000000;
    sub_145C90(v23);
    v15 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
    return v15(0xD00000000000001BLL, 0x800000000014EC80);
  }
  else
  {
    v0[8] = v12;
    uint64_t v17 = v0[6];
    if ((v17 & 0xC000000000000001) != 0) {
      id v18 = (id)sub_146810();
    }
    else {
      id v18 = *(id *)(v17 + 8 * v12 + 32);
    }
    v0[9] = v18;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[10] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_B2004;
    uint64_t v20 = v0[4];
    return sub_6D3D0(v20);
  }
}

void *sub_B260C()
{
  uint64_t result = (void *)sub_2792C();
  if (result)
  {
    sub_27A6C(result);
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 string];
      uint64_t v4 = sub_145BC0();
      os_log_type_t v6 = v5;

      sub_1467D0(60);
      v7._object = (void *)0x800000000014EC40;
      v7._countAndFlagsBits = 0xD000000000000030;
      sub_145C90(v7);
      v8._countAndFlagsBits = sub_146B50();
      sub_145C90(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 15906;
      v9._object = (void *)0xE200000000000000;
      sub_145C90(v9);
      v10._countAndFlagsBits = v4;
      v10._object = v6;
      sub_145C90(v10);
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 0x3E7669642F3CLL;
      v11._object = (void *)0xE600000000000000;
      sub_145C90(v11);
    }
    return 0;
  }
  return result;
}

uint64_t sub_B274C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_144F60();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_B280C, 0, 0);
}

uint64_t sub_B280C()
{
  if (qword_19B010 != -1) {
    swift_once();
  }
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_1A1FD0 + dword_1A1FD0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B28E4;
  return v3();
}

uint64_t sub_B28E4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_B29E4, 0, 0);
}

uint64_t sub_B29E4()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 56);
  unint64_t v2 = 0xE000000000000000;
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v7 = sub_E3E6C(v3, *(UIImage **)(v0 + 56), 0xD000000000000010, 0x800000000014ECC0);
    Swift::String v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_1467D0(21);
    swift_bridgeObjectRelease();
    strcpy((char *)v16, "<img src=\"../");
    HIWORD(v16[1]) = -4864;
    Swift::String v10 = (uint64_t *)(v6 + *(int *)(type metadata accessor for ExportOptions() + 36));
    uint64_t v11 = *v10;
    uint64_t v12 = (void *)v10[1];
    swift_bridgeObjectRetain();
    v19._countAndFlagsBits = v11;
    v19._object = v12;
    sub_145C90(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 47;
    v20._object = (void *)0xE100000000000000;
    sub_145C90(v20);
    v21._countAndFlagsBits = v7;
    v21._object = v9;
    sub_145C90(v21);
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = 4075298;
    v22._object = (void *)0xE300000000000000;
    sub_145C90(v22);

    uint64_t v13 = v16[0];
    unint64_t v2 = v16[1];
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_task_dealloc();
  Swift::String v14 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v14(v13, v2);
}

uint64_t sub_B2B84(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B2C18;
  return sub_B274C(a1);
}

uint64_t sub_B2C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_B2D18, 0, 0);
}

uint64_t sub_B2D18()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (void *)v0[4];
  sub_1467D0(39);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v2;
  v8._object = v1;
  sub_145C90(v8);
  swift_bridgeObjectRelease();
  if (qword_19AD50 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1A3AE8;
  uint64_t v4 = (void *)unk_1A3AF0;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v3;
  v9._object = v4;
  sub_145C90(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x3E7669642F3CLL;
  v10._object = (void *)0xE600000000000000;
  sub_145C90(v10);
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
  return v5(0xD00000000000001DLL, 0x800000000014ECA0);
}

unint64_t sub_B2E44(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B2F78(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A0488);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_B4C1C();
  sub_146D10();
  LOBYTE(v14) = 0;
  sub_146A90();
  if (!v2)
  {
    uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_145230();
    sub_B4BD4(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v14) = 2;
    sub_146A90();
    LOBYTE(v14) = 3;
    sub_146AB0();
    LOBYTE(v14) = 4;
    sub_146AB0();
    Swift::String v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_B4BD4(&qword_1A0490, type metadata accessor for CGSize);
    sub_146AD0();
    LOBYTE(v14) = 6;
    sub_146A90();
    LOBYTE(v14) = 7;
    sub_146A90();
    LOBYTE(v14) = 8;
    sub_146A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_B32E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_A314(&qword_1A0470);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_2F114(a1, a1[3]);
  sub_B4C1C();
  v44 = v9;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_1469E0();
  v11[1] = v17;
  sub_145230();
  LOBYTE(v46) = 1;
  sub_B4BD4(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  uint64_t v18 = (int *)v45;
  sub_12384(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_1469E0();
  Swift::String v20 = (uint64_t *)((char *)v11 + v18[6]);
  *Swift::String v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_146A00();
  Swift::String v23 = (char *)v11 + v18[7];
  *(void *)Swift::String v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_146A00();
  v26 = (char *)v11 + v18[8];
  *(void *)v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_B4BD4(&qword_1A0480, type metadata accessor for CGSize);
  sub_146A20();
  char v28 = v47;
  v29 = (char *)v11 + v18[9];
  *(_OWORD *)v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_1469E0();
  v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_1469E0();
  v34 = (uint64_t *)((char *)v11 + v18[11]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  v36 = v44;
  uint64_t v37 = sub_1469E0();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  uint64_t *v40 = v37;
  v40[1] = v39;
  sub_B4C70((uint64_t)v11, v15);
  sub_C7FC(v12);
  return sub_B4CD4((uint64_t)v11);
}

unint64_t sub_B3900()
{
  return sub_B2E44(*v0);
}

uint64_t sub_B3908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B4F3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B3930(uint64_t a1)
{
  unint64_t v2 = sub_B4C1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B396C(uint64_t a1)
{
  unint64_t v2 = sub_B4C1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_B39A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_B32E4(a1, a2);
}

uint64_t sub_B39C0(void *a1)
{
  return sub_B2F78(a1);
}

uint64_t sub_B39D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_B3A10(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_B3A48(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_B3A80()
{
  uint64_t v1 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19C758);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling10PhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_30E3C((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1248C((uint64_t)v7, &qword_19C758);
    return 0;
  }
  else
  {
    sub_B4C70((uint64_t)v7, (uint64_t)v4);
    sub_1248C((uint64_t)v7, &qword_19C758);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_B4CD4((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_B3C1C()
{
  return swift_release();
}

id sub_B3C2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10PhotoAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_B3C74()
{
  return _s10PhotoAssetCMa(0);
}

uint64_t _s10PhotoAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A0370);
}

uint64_t sub_B3C9C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_B3CE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v23;
    v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    char v27 = (char *)v4 + v24;
    char v28 = (char *)a2 + v24;
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    v31 = (uint64_t *)((char *)v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    v34 = (uint64_t *)((char *)v4 + v30);
    uint64_t v35 = (uint64_t *)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_B3F18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_B401C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  v26 = (char *)a2 + v22;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  void *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_B4204(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  long long v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_B44A8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  v13[8] = v14[8];
  *(void *)int v13 = *(void *)v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *sub_B4644(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  long long v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  uint64_t v31 = (void *)((char *)a1 + v28);
  uint64_t v32 = (void *)((char *)a2 + v28);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  void *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  void *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_B4890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B48A4);
}

uint64_t sub_B48A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_B4964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B4978);
}

uint64_t sub_B4978(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10PhotoAssetC9PhotoDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A03D8);
}

void sub_B4A44()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_B4AF8()
{
  return swift_retain();
}

uint64_t sub_B4B08(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10PhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_B4B20()
{
  return sub_B3A80();
}

uint64_t sub_B4B44()
{
  return sub_B4BD4(&qword_19C760, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_B4B8C()
{
  return sub_B4BD4(&qword_1A0430, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_B4BD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_B4C1C()
{
  unint64_t result = qword_1A0478;
  if (!qword_1A0478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0478);
  }
  return result;
}

uint64_t sub_B4C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_B4CD4(uint64_t a1)
{
  uint64_t v2 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s10PhotoAssetC9PhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB4DFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10PhotoAssetC9PhotoDataV10CodingKeysOMa()
{
  return &_s10PhotoAssetC9PhotoDataV10CodingKeysON;
}

unint64_t sub_B4E38()
{
  unint64_t result = qword_1A0498;
  if (!qword_1A0498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0498);
  }
  return result;
}

unint64_t sub_B4E90()
{
  unint64_t result = qword_1A04A0;
  if (!qword_1A04A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A04A0);
  }
  return result;
}

unint64_t sub_B4EE8()
{
  unint64_t result = qword_1A04A8;
  if (!qword_1A04A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A04A8);
  }
  return result;
}

uint64_t sub_B4F3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564497465737361 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7243657261757173 && a2 == 0xEE0074636552706FLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000000014ED30 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000000014ED50)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

id sub_B5318()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16PlaceholderAssetCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_B5350()
{
  return _s16PlaceholderAssetCMa();
}

uint64_t _s16PlaceholderAssetCMa()
{
  uint64_t result = qword_1A04D8;
  if (!qword_1A04D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_B53A4()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_B53DC(char a1)
{
  unint64_t result = 0x6D614E6563616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 2037672291;
      break;
    case 2:
      unint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      unint64_t result = 0x6174537469736976;
      break;
    case 4:
      unint64_t result = 0x646E457469736976;
      break;
    case 5:
      unint64_t result = 0x4464657461657263;
      break;
    case 6:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0x746144656C797473;
      break;
    case 9:
      unint64_t result = 0x446D65744970616DLL;
      break;
    case 10:
      unint64_t result = 0x6B726F577369;
      break;
    case 11:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B559C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A0628);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_B7EF4();
  sub_146D10();
  LOBYTE(v11) = 0;
  sub_146A90();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_146A90();
    LOBYTE(v11) = 2;
    sub_146A90();
    uint64_t v9 = _s10VisitAssetC9VisitDataVMa(0);
    LOBYTE(v11) = 3;
    sub_145230();
    sub_B7EAC(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v11) = 4;
    sub_146AD0();
    LOBYTE(v11) = 5;
    sub_146AD0();
    LOBYTE(v11) = 6;
    sub_146AB0();
    LOBYTE(v11) = 7;
    sub_146AB0();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 48));
    char v12 = 8;
    sub_40D74();
    sub_146AD0();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 52));
    char v12 = 9;
    sub_146AD0();
    LOBYTE(v11) = 10;
    sub_146AA0();
    LOBYTE(v11) = 11;
    sub_146AB0();
    LOBYTE(v11) = 12;
    sub_146AB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_B59A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  char v12 = (char *)&v39 - v11;
  uint64_t v43 = sub_A314(&qword_1A0618);
  uint64_t v13 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v46 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v46);
  uint64_t v44 = a1;
  uint64_t v45 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_B7EF4();
  uint64_t v42 = v15;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v44);
  }
  uint64_t v17 = (uint64_t)v12;
  uint64_t v40 = v13;
  LOBYTE(v47) = 0;
  uint64_t v18 = sub_1469E0();
  uint64_t v19 = v46;
  uint64_t v20 = v45;
  *uint64_t v45 = v18;
  v20[1] = v21;
  LOBYTE(v47) = 1;
  v20[2] = sub_1469E0();
  v20[3] = v22;
  LOBYTE(v47) = 2;
  v20[4] = sub_1469E0();
  v20[5] = v23;
  sub_145230();
  LOBYTE(v47) = 3;
  uint64_t v39 = sub_B7EAC(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384(v17, (uint64_t)v20 + v19[7]);
  LOBYTE(v47) = 4;
  sub_146A20();
  sub_12384((uint64_t)v10, (uint64_t)v20 + v19[8]);
  LOBYTE(v47) = 5;
  sub_146A20();
  sub_12384((uint64_t)v7, (uint64_t)v20 + v19[9]);
  LOBYTE(v47) = 6;
  uint64_t v24 = sub_146A00();
  uint64_t v25 = (char *)v20 + v19[10];
  *(void *)uint64_t v25 = v24;
  v25[8] = v26 & 1;
  LOBYTE(v47) = 7;
  uint64_t v27 = sub_146A00();
  uint64_t v28 = (char *)v20 + v19[11];
  *(void *)uint64_t v28 = v27;
  v28[8] = v29 & 1;
  char v48 = 8;
  sub_40CBC();
  sub_146A20();
  *(_OWORD *)((char *)v20 + v19[12]) = v47;
  char v48 = 9;
  sub_146A20();
  *(_OWORD *)((char *)v45 + v46[13]) = v47;
  LOBYTE(v47) = 10;
  *((unsigned char *)v45 + v46[14]) = sub_1469F0();
  LOBYTE(v47) = 11;
  uint64_t v30 = sub_146A00();
  uint64_t v31 = (char *)v45 + v46[15];
  *(void *)uint64_t v31 = v30;
  v31[8] = v32 & 1;
  LOBYTE(v47) = 12;
  uint64_t v33 = sub_146A00();
  char v35 = v34;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
  uint64_t v36 = (uint64_t)v45;
  uint64_t v37 = (char *)v45 + v46[16];
  *(void *)uint64_t v37 = v33;
  v37[8] = v35 & 1;
  sub_2E1B0(v36, v41);
  sub_C7FC((uint64_t)v44);
  return sub_2E274(v36);
}

unint64_t sub_B6164()
{
  return sub_B53DC(*v0);
}

uint64_t sub_B616C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B9668(a1, a2);
  *a3 = result;
  return result;
}

void sub_B6194(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_B61A0(uint64_t a1)
{
  unint64_t v2 = sub_B7EF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B61DC(uint64_t a1)
{
  unint64_t v2 = sub_B7EF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_B6218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_B59A0(a1, a2);
}

uint64_t sub_B6230(void *a1)
{
  return sub_B559C(a1);
}

uint64_t sub_B624C()
{
  uint64_t v1 = sub_A314(&qword_19C498);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling10VisitAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_335E0((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C498);
    return 0;
  }
  sub_B9368((uint64_t)v3, (uint64_t)v7);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = *(void *)v7;
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  uint64_t v9 = *((void *)v7 + 3);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 8);
  *(void *)(inited + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_2E274((uint64_t)v7);
  return v10;
}

uint64_t sub_B6474()
{
  return swift_release();
}

id sub_B6484()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VisitAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_B64CC()
{
  return _s10VisitAssetCMa(0);
}

uint64_t _s10VisitAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A0510);
}

uint64_t sub_B64F4()
{
  return swift_updateClassMetadata2();
}

void *sub_B6538(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = &a2[v10];
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_A314(&qword_19C150);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = &a2[v17];
    if (v14(&a2[v17], 1, v12))
    {
      uint64_t v20 = sub_A314(&qword_19C150);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = &a2[v21];
    if (v14(&a2[v21], 1, v12))
    {
      uint64_t v24 = sub_A314(&qword_19C150);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v4 + v25;
    uint64_t v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    char v29 = (char *)v4 + v26;
    uint64_t v30 = &a2[v26];
    *(void *)char v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[12];
    char v32 = (char *)v4 + v31;
    uint64_t v33 = &a2[v31];
    unint64_t v34 = *((void *)v33 + 1);
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)char v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_C4D4(*(void *)v33, *((void *)v33 + 1));
      *(void *)char v32 = v35;
      *((void *)v32 + 1) = v34;
    }
    uint64_t v36 = a3[13];
    uint64_t v37 = (char *)v4 + v36;
    uint64_t v38 = &a2[v36];
    unint64_t v39 = *((void *)v38 + 1);
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      sub_C4D4(*(void *)v38, *((void *)v38 + 1));
      *(void *)uint64_t v37 = v40;
      *((void *)v37 + 1) = v39;
    }
    uint64_t v41 = a3[15];
    *((unsigned char *)v4 + a3[14]) = a2[a3[14]];
    uint64_t v42 = (char *)v4 + v41;
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = a3[16];
    uint64_t v45 = (char *)v4 + v44;
    long long v46 = &a2[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
  }
  return v4;
}

uint64_t sub_B6918(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[8];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[12]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    uint64_t result = sub_C52C(*v11, v12);
  }
  uint64_t v13 = (uint64_t *)(a1 + a2[13]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = *v13;
    return sub_C52C(v15, v14);
  }
  return result;
}

void *sub_B6ACC(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = &a2[v8];
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[12];
  char v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  unint64_t v31 = *((void *)v30 + 1);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)char v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_C4D4(*(void *)v30, *((void *)v30 + 1));
    *(void *)char v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  uint64_t v33 = a3[13];
  unint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = &a2[v33];
  unint64_t v36 = *((void *)v35 + 1);
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_C4D4(*(void *)v35, *((void *)v35 + 1));
    *(void *)unint64_t v34 = v37;
    *((void *)v34 + 1) = v36;
  }
  uint64_t v38 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  *(void *)unint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[16];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  return a1;
}

char *sub_B6E54(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_A314(&qword_19C150);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v27];
  char v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[12];
  unint64_t v36 = (uint64_t *)&a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  unint64_t v38 = *(void *)((char *)a2 + v35 + 8);
  if (*(void *)&a1[v35 + 8] >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v39 = *v37;
      sub_C4D4(v39, v38);
      uint64_t *v36 = v39;
      v36[1] = v38;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v38 >> 60 == 15)
  {
    sub_40058((uint64_t)v36);
LABEL_24:
    *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  sub_C4D4(v40, v38);
  uint64_t v41 = *v36;
  unint64_t v42 = v36[1];
  uint64_t *v36 = v40;
  v36[1] = v38;
  sub_C52C(v41, v42);
LABEL_26:
  uint64_t v43 = a3[13];
  uint64_t v44 = (uint64_t *)&a1[v43];
  uint64_t v45 = (void *)((char *)a2 + v43);
  unint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_C4D4(v48, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      uint64_t *v44 = v48;
      v44[1] = v46;
      sub_C52C(v49, v50);
      goto LABEL_33;
    }
    sub_40058((uint64_t)v44);
    goto LABEL_31;
  }
  if (v46 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_33;
  }
  uint64_t v47 = *v45;
  sub_C4D4(v47, v46);
  uint64_t *v44 = v47;
  v44[1] = v46;
LABEL_33:
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v51 = a3[15];
  v52 = &a1[v51];
  v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)v52 = v54;
  uint64_t v55 = a3[16];
  v56 = &a1[v55];
  v57 = (char *)a2 + v55;
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)v56 = v58;
  return a1;
}

_OWORD *sub_B73A8(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  a1[2] = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  int v24 = (char *)a1 + v22;
  int v25 = &a2[v22];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[16];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

char *sub_B769C(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v14(&a1[v24], 1, v12);
  int v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = (char *)a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = (char *)a2 + v31;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t)&a1[v36];
  unint64_t v38 = (char *)a2 + v36;
  unint64_t v39 = *(void *)&a1[v36 + 8];
  if (v39 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_24;
  }
  unint64_t v40 = *((void *)v38 + 1);
  if (v40 >> 60 == 15)
  {
    sub_40058(v37);
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_C52C(v41, v39);
LABEL_24:
  uint64_t v42 = a3[13];
  uint64_t v43 = (uint64_t *)&a1[v42];
  uint64_t v44 = (void *)((char *)a2 + v42);
  unint64_t v45 = *(void *)&a1[v42 + 8];
  if (v45 >> 60 != 15)
  {
    unint64_t v46 = v44[1];
    if (v46 >> 60 != 15)
    {
      uint64_t v47 = *v43;
      *uint64_t v43 = *v44;
      v43[1] = v46;
      sub_C52C(v47, v45);
      goto LABEL_29;
    }
    sub_40058((uint64_t)v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_29:
  uint64_t v48 = a3[15];
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v49 = &a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = a3[16];
  v52 = &a1[v51];
  v53 = (char *)a2 + v51;
  *(void *)v52 = *(void *)v53;
  v52[8] = v53[8];
  return a1;
}

uint64_t sub_B7B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B7B6C);
}

uint64_t sub_B7B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_B7C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B7C40);
}

uint64_t sub_B7C40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VisitAssetC9VisitDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A0578);
}

void sub_B7D0C()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_B7DD0()
{
  return swift_retain();
}

uint64_t sub_B7DE0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10VisitAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_B7DF8()
{
  return sub_B624C();
}

uint64_t sub_B7E1C()
{
  return sub_B7EAC(&qword_19C880, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_B7E64()
{
  return sub_B7EAC(&qword_19D6A0, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_B7EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_B7EF4()
{
  unint64_t result = qword_1A0620;
  if (!qword_1A0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0620);
  }
  return result;
}

uint64_t sub_B7F48@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_C4D4(a2, a3);
      uint64_t v10 = (char *)sub_144B90();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_144BB0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_144BA0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0xB81ACLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_C52C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_144B90();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_144BB0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_144BA0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_B81BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_B7F48((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_B8294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_144B90();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_144BB0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_144BA0();
  sub_B7F48(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_B834C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0xB85B4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_C4D4(a3, a4);
                  sub_C4D4(a1, a2);
                  char v17 = sub_B8294((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_C52C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_C4D4(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_B8294(v21, v22, v20, a3, a4);
                  sub_C52C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_C4D4(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_C4D4(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_B81BC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_C52C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_B85E4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_A314(&qword_19DCC0);
  uint64_t v7 = __chkstk_darwin(v171);
  uint64_t v9 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v169 = (uint64_t)&v151 - v11;
  __chkstk_darwin(v10);
  uint64_t v170 = (uint64_t)&v151 - v12;
  uint64_t v13 = sub_A314(&qword_19C150);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v167 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v151 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v168 = (uint64_t)&v151 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  int v23 = (char *)&v151 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = __chkstk_darwin(v24);
  char v27 = (char *)&v151 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  uint64_t v35 = (char *)&v151 - v34;
  uint64_t v36 = v31[1];
  uint64_t v37 = a2[1];
  if (!v36)
  {
    if (v37) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v37) {
    return 0;
  }
  if (*v31 == *a2 && v36 == v37) {
    goto LABEL_8;
  }
  v165 = v18;
  uint64_t v166 = v30;
  v163 = v27;
  v164 = v23;
  unint64_t v38 = v9;
  uint64_t v39 = v4;
  uint64_t v40 = v3;
  uint64_t v41 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  char v44 = sub_146B90();
  uint64_t v18 = v165;
  uint64_t v30 = v166;
  uint64_t v33 = v43;
  uint64_t v32 = v42;
  uint64_t v31 = v41;
  uint64_t v3 = v40;
  uint64_t v4 = v39;
  uint64_t v9 = v38;
  char v27 = v163;
  int v23 = v164;
  char v45 = v44;
  uint64_t result = 0;
  if (v45)
  {
LABEL_8:
    uint64_t v47 = v31[3];
    uint64_t v48 = a2[3];
    if (v47)
    {
      if (!v48) {
        return 0;
      }
      if (v31[2] != a2[2] || v47 != v48)
      {
        v165 = v18;
        uint64_t v166 = v30;
        v163 = v27;
        v164 = v23;
        uint64_t v49 = v9;
        uint64_t v50 = v4;
        uint64_t v51 = v3;
        v52 = v31;
        uint64_t v53 = v32;
        uint64_t v54 = v33;
        char v55 = sub_146B90();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v54;
        uint64_t v32 = v53;
        uint64_t v31 = v52;
        uint64_t v3 = v51;
        uint64_t v4 = v50;
        uint64_t v9 = v49;
        char v27 = v163;
        int v23 = v164;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    uint64_t v57 = v31[5];
    uint64_t v58 = a2[5];
    if (v57)
    {
      if (!v58) {
        return 0;
      }
      if (v31[4] != a2[4] || v57 != v58)
      {
        v165 = v18;
        uint64_t v166 = v30;
        v163 = v27;
        v164 = v23;
        v59 = v9;
        uint64_t v60 = v4;
        uint64_t v61 = v3;
        v62 = v31;
        uint64_t v63 = v32;
        uint64_t v64 = v33;
        char v65 = sub_146B90();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v64;
        uint64_t v32 = v63;
        uint64_t v31 = v62;
        uint64_t v3 = v61;
        uint64_t v4 = v60;
        uint64_t v9 = v59;
        char v27 = v163;
        int v23 = v164;
        char v66 = v65;
        uint64_t result = 0;
        if ((v66 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v58)
    {
      return 0;
    }
    v154 = v6;
    uint64_t v155 = v33;
    uint64_t v158 = v32;
    v153 = v9;
    uint64_t v67 = v4;
    uint64_t v68 = v3;
    v69 = v31;
    uint64_t v70 = v30;
    uint64_t v71 = _s10VisitAssetC9VisitDataVMa(0);
    uint64_t v72 = *(int *)(v71 + 28);
    v159 = v69;
    uint64_t v73 = (uint64_t)v69 + v72;
    uint64_t v74 = v68;
    sub_2647C(v73, (uint64_t)v35);
    v157 = (int *)v71;
    uint64_t v75 = *(int *)(v71 + 28);
    v160 = a2;
    sub_2647C((uint64_t)a2 + v75, v70);
    uint64_t v76 = v170;
    uint64_t v77 = v170 + *(int *)(v171 + 48);
    v163 = v35;
    sub_2647C((uint64_t)v35, v170);
    v164 = (char *)v77;
    sub_2647C(v70, v77);
    uint64_t v161 = v67;
    uint64_t v162 = v74;
    v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    unsigned int v79 = v78(v76, 1, v74);
    uint64_t v156 = v67 + 48;
    v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
    if (v79 == 1)
    {
      v165 = v18;
      sub_1248C(v70, &qword_19C150);
      sub_1248C((uint64_t)v163, &qword_19C150);
      if (v78((uint64_t)v164, 1, v162) == 1)
      {
        sub_1248C(v76, &qword_19C150);
        uint64_t v18 = v165;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v166 = v70;
      uint64_t v80 = v155;
      sub_2647C(v76, v155);
      uint64_t v81 = v76;
      if (v78((uint64_t)v164, 1, v162) != 1)
      {
        uint64_t v84 = v161;
        uint64_t v83 = v162;
        v85 = v154;
        (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v154, v164, v162);
        sub_B7EAC((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
        char v86 = sub_145AD0();
        v87 = *(void (**)(char *, uint64_t))(v84 + 8);
        v87(v85, v83);
        sub_1248C(v166, &qword_19C150);
        sub_1248C((uint64_t)v163, &qword_19C150);
        v87((char *)v80, v83);
        sub_1248C(v81, &qword_19C150);
        if ((v86 & 1) == 0) {
          return 0;
        }
LABEL_29:
        v164 = v23;
        v88 = v157;
        sub_2647C((uint64_t)v159 + v157[8], (uint64_t)v27);
        uint64_t v89 = v158;
        sub_2647C((uint64_t)v160 + v88[8], v158);
        uint64_t v90 = v169;
        uint64_t v91 = v169 + *(int *)(v171 + 48);
        sub_2647C((uint64_t)v27, v169);
        sub_2647C(v89, v91);
        v92 = v152;
        if (v152(v90, 1, v162) == 1)
        {
          sub_1248C(v89, &qword_19C150);
          sub_1248C((uint64_t)v27, &qword_19C150);
          int v93 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v93 == 1)
          {
            sub_1248C(v90, &qword_19C150);
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v95 = (uint64_t)v164;
          sub_2647C(v90, (uint64_t)v164);
          int v96 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v96 != 1)
          {
            uint64_t v97 = v161;
            uint64_t v98 = v162;
            v99 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 32);
            v163 = v27;
            v100 = v154;
            v99(v154, v91, v162);
            sub_B7EAC((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
            char v101 = sub_145AD0();
            v102 = v18;
            v103 = *(void (**)(char *, uint64_t))(v97 + 8);
            v103(v100, v98);
            sub_1248C(v158, &qword_19C150);
            sub_1248C((uint64_t)v163, &qword_19C150);
            v103((char *)v95, v98);
            uint64_t v18 = v102;
            sub_1248C(v169, &qword_19C150);
            if ((v101 & 1) == 0) {
              return 0;
            }
LABEL_36:
            v104 = v157;
            uint64_t v105 = v168;
            sub_2647C((uint64_t)v159 + v157[9], v168);
            sub_2647C((uint64_t)v160 + v104[9], (uint64_t)v18);
            uint64_t v106 = v94 + *(int *)(v171 + 48);
            sub_2647C(v105, v94);
            sub_2647C((uint64_t)v18, v106);
            if (v92(v94, 1, v162) == 1)
            {
              sub_1248C((uint64_t)v18, &qword_19C150);
              sub_1248C(v168, &qword_19C150);
              if (v92(v106, 1, v162) == 1)
              {
                sub_1248C(v94, &qword_19C150);
LABEL_43:
                uint64_t v114 = v104[10];
                v116 = v159;
                v115 = v160;
                v117 = (double *)((char *)v159 + v114);
                char v118 = *((unsigned char *)v159 + v114 + 8);
                v119 = (double *)((char *)v160 + v114);
                int v120 = *((unsigned __int8 *)v160 + v114 + 8);
                if (v118)
                {
                  if (!v120) {
                    return 0;
                  }
                }
                else
                {
                  if (*v117 != *v119) {
                    LOBYTE(v120) = 1;
                  }
                  if (v120) {
                    return 0;
                  }
                }
                uint64_t v121 = v104[11];
                v122 = (double *)((char *)v159 + v121);
                char v123 = *((unsigned char *)v159 + v121 + 8);
                v124 = (double *)((char *)v160 + v121);
                int v125 = *((unsigned __int8 *)v160 + v121 + 8);
                if (v123)
                {
                  if (!v125) {
                    return 0;
                  }
                }
                else
                {
                  if (*v122 != *v124) {
                    LOBYTE(v125) = 1;
                  }
                  if (v125) {
                    return 0;
                  }
                }
                v126 = v104;
                uint64_t v127 = v104[12];
                uint64_t v128 = *(void *)((char *)v159 + v127);
                unint64_t v129 = *(void *)((char *)v159 + v127 + 8);
                v130 = (void *)((char *)v160 + v127);
                uint64_t v131 = *v130;
                unint64_t v132 = v130[1];
                if (v129 >> 60 == 15)
                {
                  if (v132 >> 60 != 15) {
                    goto LABEL_64;
                  }
                  goto LABEL_60;
                }
                if (v132 >> 60 == 15) {
                  goto LABEL_64;
                }
                sub_27BC0(v128, v129);
                sub_27BC0(v131, v132);
                char v133 = sub_B834C(v128, v129, v131, v132);
                sub_120B4(v131, v132);
                sub_120B4(v128, v129);
                v116 = v159;
                v115 = v160;
                if (v133)
                {
LABEL_60:
                  uint64_t v134 = v126[13];
                  uint64_t v128 = *(void *)((char *)v116 + v134);
                  unint64_t v129 = *(void *)((char *)v116 + v134 + 8);
                  v135 = (void *)((char *)v115 + v134);
                  uint64_t v131 = *v135;
                  unint64_t v132 = v135[1];
                  if (v129 >> 60 == 15)
                  {
                    if (v132 >> 60 == 15) {
                      goto LABEL_68;
                    }
                  }
                  else if (v132 >> 60 != 15)
                  {
                    sub_27BC0(v128, v129);
                    sub_27BC0(v131, v132);
                    char v136 = sub_B834C(v128, v129, v131, v132);
                    sub_120B4(v131, v132);
                    sub_120B4(v128, v129);
                    v116 = v159;
                    v115 = v160;
                    if ((v136 & 1) == 0) {
                      return 0;
                    }
LABEL_68:
                    uint64_t v137 = v126[14];
                    int v138 = *((unsigned __int8 *)v116 + v137);
                    int v139 = *((unsigned __int8 *)v115 + v137);
                    if (v138 == 2)
                    {
                      if (v139 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t result = 0;
                      BOOL v140 = (v138 & 1) == 0;
                      if (v139 == 2 || ((v140 ^ v139) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v141 = v126[15];
                    v142 = (double *)((char *)v116 + v141);
                    char v143 = *((unsigned char *)v116 + v141 + 8);
                    v144 = (double *)((char *)v115 + v141);
                    int v145 = *((unsigned __int8 *)v115 + v141 + 8);
                    if (v143)
                    {
                      if (!v145) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v142 != *v144) {
                        LOBYTE(v145) = 1;
                      }
                      if (v145) {
                        return 0;
                      }
                    }
                    uint64_t v146 = v157[16];
                    v147 = (double *)((char *)v159 + v146);
                    char v148 = *((unsigned char *)v159 + v146 + 8);
                    v149 = (double *)((char *)v160 + v146);
                    char v150 = *((unsigned char *)v160 + v146 + 8);
                    if (v148)
                    {
                      if ((v150 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v147 != *v149) {
                        char v150 = 1;
                      }
                      if (v150) {
                        return 0;
                      }
                    }
                    return 1;
                  }
LABEL_64:
                  sub_27BC0(v128, v129);
                  sub_27BC0(v131, v132);
                  sub_120B4(v128, v129);
                  sub_120B4(v131, v132);
                }
                return 0;
              }
            }
            else
            {
              sub_2647C(v94, v167);
              if (v92(v106, 1, v162) != 1)
              {
                uint64_t v107 = v161;
                uint64_t v108 = v162;
                v109 = v154;
                (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v154, v106, v162);
                sub_B7EAC((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v110 = v94;
                uint64_t v111 = v167;
                char v112 = sub_145AD0();
                v113 = *(void (**)(char *, uint64_t))(v107 + 8);
                v113(v109, v108);
                sub_1248C((uint64_t)v18, &qword_19C150);
                sub_1248C(v168, &qword_19C150);
                v113((char *)v111, v108);
                sub_1248C(v110, &qword_19C150);
                if ((v112 & 1) == 0) {
                  return 0;
                }
                goto LABEL_43;
              }
              sub_1248C((uint64_t)v18, &qword_19C150);
              sub_1248C(v168, &qword_19C150);
              (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v167, v162);
            }
            sub_1248C(v94, &qword_19DCC0);
            return 0;
          }
          sub_1248C(v158, &qword_19C150);
          sub_1248C((uint64_t)v27, &qword_19C150);
          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v95, v162);
        }
        sub_1248C(v90, &qword_19DCC0);
        return 0;
      }
      uint64_t v82 = v161;
      sub_1248C(v166, &qword_19C150);
      sub_1248C((uint64_t)v163, &qword_19C150);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v162);
    }
    sub_1248C(v76, &qword_19DCC0);
    return 0;
  }
  return result;
}

uint64_t sub_B9368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s10VisitAssetC9VisitDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10VisitAssetC9VisitDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB9528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VisitAssetC9VisitDataV10CodingKeysOMa()
{
  return &_s10VisitAssetC9VisitDataV10CodingKeysON;
}

unint64_t sub_B9564()
{
  unint64_t result = qword_1A0630;
  if (!qword_1A0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0630);
  }
  return result;
}

unint64_t sub_B95BC()
{
  unint64_t result = qword_1A0638;
  if (!qword_1A0638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0638);
  }
  return result;
}

unint64_t sub_B9614()
{
  unint64_t result = qword_1A0640;
  if (!qword_1A0640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0640);
  }
  return result;
}

uint64_t sub_B9668(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174537469736976 && a2 == 0xEE00656D69547472 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E457469736976 && a2 == 0xEC000000656D6954 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144656C797473 && a2 == 0xE900000000000061 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446D65744970616DLL && a2 == 0xEB00000000617461 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B726F577369 && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000000014EDE0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

unint64_t sub_B9C48(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B9D7C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A0830);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_BAFE0();
  sub_146D10();
  LOBYTE(v14) = 0;
  sub_146A90();
  if (!v2)
  {
    uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_145230();
    sub_BAF98(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v14) = 2;
    sub_146A90();
    LOBYTE(v14) = 3;
    sub_146AB0();
    LOBYTE(v14) = 4;
    sub_146AB0();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_BAF98(&qword_1A0490, type metadata accessor for CGSize);
    sub_146AD0();
    LOBYTE(v14) = 6;
    sub_146A90();
    LOBYTE(v14) = 7;
    sub_146A90();
    LOBYTE(v14) = 8;
    sub_146A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_BA0E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_A314(&qword_1A0820);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_2F114(a1, a1[3]);
  sub_BAFE0();
  char v44 = v9;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_1469E0();
  v11[1] = v17;
  sub_145230();
  LOBYTE(v46) = 1;
  sub_BAF98(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  uint64_t v18 = (int *)v45;
  sub_12384(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_1469E0();
  uint64_t v20 = (uint64_t *)((char *)v11 + v18[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_146A00();
  int v23 = (char *)v11 + v18[7];
  *(void *)int v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_146A00();
  uint64_t v26 = (char *)v11 + v18[8];
  *(void *)uint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_BAF98(&qword_1A0480, type metadata accessor for CGSize);
  sub_146A20();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_1469E0();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_1469E0();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = sub_1469E0();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  uint64_t v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  uint64_t *v40 = v37;
  v40[1] = v39;
  sub_BB32C((uint64_t)v11, v15, _s14LivePhotoAssetC13LivePhotoDataVMa);
  sub_C7FC(v12);
  return sub_BB034((uint64_t)v11);
}

unint64_t sub_BA718()
{
  return sub_B9C48(*v0);
}

uint64_t sub_BA720(uint64_t a1)
{
  unint64_t v2 = sub_BAFE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA75C(uint64_t a1)
{
  unint64_t v2 = sub_BAFE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BA798@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_BA0E8(a1, a2);
}

uint64_t sub_BA7B0(void *a1)
{
  return sub_B9D7C(a1);
}

uint64_t sub_BA7C8()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_BB090(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_livePhotoAttachments) = v2;

  return swift_release();
}

uint64_t sub_BA834()
{
  swift_release();

  return swift_release();
}

id sub_BA874()
{
  if ((v0[OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_pendingLivePhotoRequest + 4] & 1) == 0)
  {
    unint64_t v1 = (unsigned int *)&v0[OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
    [self cancelLivePhotoRequestWithRequestID:*v1];
  }
  v3.receiver = v0;
  v3.super_class = (Class)_s14LivePhotoAssetCMa(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_BA9C8()
{
  return _s14LivePhotoAssetCMa(0);
}

uint64_t _s14LivePhotoAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A0678);
}

uint64_t sub_BA9F0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_BAA40()
{
  uint64_t v1 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19C778);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_31B0C((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1248C((uint64_t)v7, &qword_19C778);
    return 0;
  }
  else
  {
    sub_BB32C((uint64_t)v7, (uint64_t)v4, _s14LivePhotoAssetC13LivePhotoDataVMa);
    sub_1248C((uint64_t)v7, &qword_19C778);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_BB034((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_BABF0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s14LivePhotoAssetC20LivePhotoAttachmentsCMa()
{
  return self;
}

uint64_t sub_BAC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_BAC68);
}

uint64_t sub_BAC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_BAD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_BAD3C);
}

uint64_t sub_BAD3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A0788);
}

void sub_BAE08()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_BAEBC()
{
  return swift_retain();
}

uint64_t sub_BAECC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_BAEE4()
{
  return sub_BAA40();
}

uint64_t sub_BAF08()
{
  return sub_BAF98(&qword_19C780, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_BAF50()
{
  return sub_BAF98(&qword_1A07E0, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_BAF98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_BAFE0()
{
  unint64_t result = qword_1A0828;
  if (!qword_1A0828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0828);
  }
  return result;
}

uint64_t sub_BB034(uint64_t a1)
{
  uint64_t v2 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BB090(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  if (a1 >> 62) {
    uint64_t v9 = sub_146930();
  }
  else {
    uint64_t v9 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9)
  {
LABEL_15:
    _s14LivePhotoAssetC20LivePhotoAttachmentsCMa();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
    *(void *)(result + 24) = 0;
    return result;
  }
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t result = sub_2CC1C(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        uint64_t v13 = sub_146810();
        sub_BB32C(v13 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v8, type metadata accessor for AssetAttachment.AssetType);
        swift_unknownObjectRelease();
        uint64_t v20 = v10;
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_2CC1C(v14 > 1, v15 + 1, 1);
          uint64_t v10 = v20;
        }
        *((void *)v10 + 2) = v15 + 1;
        sub_BB394((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15);
      }
    }
    else
    {
      uint64_t v16 = (void *)(a1 + 32);
      do
      {
        sub_BB32C(*v16 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v6, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v20 = v10;
        unint64_t v18 = *((void *)v10 + 2);
        unint64_t v17 = *((void *)v10 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_2CC1C(v17 > 1, v18 + 1, 1);
          uint64_t v10 = v20;
        }
        *((void *)v10 + 2) = v18 + 1;
        sub_BB394((uint64_t)v6, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18);
        ++v16;
        --v9;
      }
      while (v9);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_BB32C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_BB394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBB4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOMa()
{
  return &_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysON;
}

unint64_t sub_BB500()
{
  unint64_t result = qword_1A0838;
  if (!qword_1A0838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0838);
  }
  return result;
}

unint64_t sub_BB558()
{
  unint64_t result = qword_1A0840;
  if (!qword_1A0840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0840);
  }
  return result;
}

unint64_t sub_BB5B0()
{
  unint64_t result = qword_1A0848;
  if (!qword_1A0848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0848);
  }
  return result;
}

id sub_BB604()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12UnknownAssetCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_BB63C()
{
  return _s12UnknownAssetCMa();
}

uint64_t _s12UnknownAssetCMa()
{
  uint64_t result = qword_1A0878;
  if (!qword_1A0878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_BB690(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = sub_A314(&qword_19BE50);
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_BB754, 0, 0);
}

uint64_t sub_BB754()
{
  sub_144FF0();
  double v2 = v1;
  id v3 = sub_9855C();
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 96);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v7;
  long long v16 = *(_OWORD *)(v0 + 80);
  sub_1455E0();
  *(_OWORD *)(swift_task_alloc() + 16) = v16;
  sub_1CF60();
  sub_1CFB4();
  sub_BD1B4();
  sub_1460E0();
  swift_task_dealloc();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v4, v6);
  sub_1455E0();
  sub_1467D0(19);
  uint64_t v9 = sub_BC938();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v18._object = (void *)0x800000000014F060;
  v18._countAndFlagsBits = 0xD000000000000011;
  sub_145C90(v18);
  *(void *)(v0 + 32) = v9;
  *(void *)(v0 + 40) = v11;
  sub_1460F0();
  swift_bridgeObjectRelease();
  v8(v4, v6);
  *(void *)(v0 + 48) = 0x3E6C6D74683CLL;
  *(void *)(v0 + 64) = 0xD000000000000011;
  *(void *)(v0 + 56) = 0xE600000000000000;
  *(void *)(v0 + 72) = 0x800000000014F080;
  sub_BD210();
  sub_1460F0();
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + 24);
  sub_BC228("ExportPackage.renderHTML executed in %ss", v2);
  swift_task_dealloc();
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v14(v12, v13);
}

uint64_t sub_BBAA8()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A0890);
  sub_C584(v0, (uint64_t)qword_1A0890);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_BBB9C@<X0>(uint64_t a1@<X2>, unint64_t *a2@<X8>)
{
  sub_A314(&qword_1A0A48);
  sub_1455F0();
  uint64_t v4 = sub_145C40();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_137A88(v4, v6), (v8 & 1) != 0))
  {
    uint64_t v9 = (unint64_t *)(*(void *)(a1 + 56) + 16 * v7);
    unint64_t v11 = *v9;
    unint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1455F0();
    char v13 = sub_BCE34(v15, v16, v17, v18, 0xD000000000000013, 0x800000000014A830);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v14 = (v13 & 1) == 0;
    if (v13) {
      unint64_t v11 = 0xD000000000000022;
    }
    else {
      unint64_t v11 = 0;
    }
    if (v14) {
      unint64_t v10 = 0xE000000000000000;
    }
    else {
      unint64_t v10 = 0x8000000000150CD0;
    }
  }
  *a2 = v11;
  a2[1] = v10;
  return result;
}

uint64_t type metadata accessor for HTMLUtilities()
{
  return self;
}

char *sub_BBD04()
{
  uint64_t v1 = OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_webView;
  id v2 = objc_allocWithZone((Class)WKWebView);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = &v3[OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_continuation];
  uint64_t v5 = sub_A314(&qword_1A09F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PrintableHTMLContentController();
  uint64_t v6 = (char *)objc_msgSendSuper2(&v8, "init");
  [*(id *)&v6[OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_webView] setNavigationDelegate:v6];
  return v6;
}

uint64_t sub_BBE1C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = sub_145F30();
  v3[7] = sub_145F20();
  uint64_t v5 = sub_145EB0();
  v3[8] = v5;
  v3[9] = v4;
  return _swift_task_switch(sub_BBEBC, v5, v4);
}

uint64_t sub_BBEBC()
{
  long long v8 = *(_OWORD *)(v0 + 24);
  sub_144FF0();
  *(void *)(v0 + 80) = v1;
  uint64_t v2 = sub_145F20();
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 96) = v3;
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v8;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  uint64_t v6 = sub_C84C(0, &qword_1A09F8);
  *uint64_t v5 = v0;
  v5[1] = sub_BC028;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v2, &protocol witness table for MainActor, 0xD000000000000026, 0x800000000014EFE0, sub_BC8C4, v4, v6);
}

uint64_t sub_BC028()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_BC1AC, v3, v2);
}

uint64_t sub_BC1AC()
{
  double v1 = v0[10];
  swift_release();
  uint64_t v2 = *((void *)v0 + 2);
  sub_BC228("PrintableHTMLContentController.loadWebView executed in %ss", v1);
  uint64_t v3 = (uint64_t (*)(uint64_t))*((void *)v0 + 1);
  return v3(v2);
}

void sub_BC228(const char *a1, double a2)
{
  if (qword_19AFA8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_145760();
  sub_C584(v4, (uint64_t)qword_1A0890);
  oslog = sub_145740();
  os_log_type_t v5 = sub_1461E0();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_A314(&qword_1A0A00);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v7 + 32) = Current - a2;
    uint64_t v9 = sub_145BD0();
    sub_3D2B4(v9, v10, &v12);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, oslog, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_BC438(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_1A0A08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = sub_A314(&qword_1A09F0);
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v4, a1, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    uint64_t v9 = (uint64_t)v6 + OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_continuation;
    swift_beginAccess();
    sub_BC8D0((uint64_t)v4, v9);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    unint64_t v11 = (void *)v10;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_webView);

    sub_144EB0(v13);
    unint64_t v15 = v14;
    sub_144EB0(v16);
    uint64_t v18 = v17;
    id v19 = [v12 loadFileURL:v15 allowingReadAccessToURL:v17];
  }
}

id sub_BC6B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrintableHTMLContentController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_BC73C()
{
  return type metadata accessor for PrintableHTMLContentController();
}

uint64_t type metadata accessor for PrintableHTMLContentController()
{
  uint64_t result = qword_1A09D0;
  if (!qword_1A09D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_BC790()
{
  sub_BC830();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_BC830()
{
  if (!qword_1A09E8)
  {
    sub_12244(&qword_1A09F0);
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1A09E8);
    }
  }
}

uint64_t sub_BC88C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_BC8C4(uint64_t a1)
{
}

uint64_t sub_BC8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_1A0A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_BC938()
{
  uint64_t v0 = sub_145610();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v40 = v0;
  uint64_t v41 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_1467D0(7178);
  v44._countAndFlagsBits = 0xD0000000000007F0;
  v44._object = (void *)0x800000000014F0A0;
  sub_145C90(v44);
  uint64_t v4 = self;
  id v5 = [v4 tertiarySystemFillColor];
  uint64_t v6 = self;
  id v7 = [v6 traitCollectionWithUserInterfaceStyle:1];
  id v8 = [v5 resolvedColorWithTraitCollection:v7];

  uint64_t v9 = sub_57C84();
  unint64_t v11 = v10;

  v45._countAndFlagsBits = v9;
  v45._object = v11;
  sub_145C90(v45);
  swift_bridgeObjectRelease();
  v46._object = (void *)0x800000000014F8A0;
  v46._countAndFlagsBits = 0xD00000000000129FLL;
  sub_145C90(v46);
  id v12 = [v4 blackColor];
  id v13 = [v12 colorWithAlphaComponent:0.6];

  uint64_t v14 = sub_57C84();
  unint64_t v16 = v15;

  v47._countAndFlagsBits = v14;
  v47._object = v16;
  sub_145C90(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0xD00000000000005FLL;
  v48._object = (void *)0x8000000000150B40;
  sub_145C90(v48);
  id v17 = [v4 labelColor];
  id v18 = [v6 traitCollectionWithUserInterfaceStyle:1];
  id v19 = [v17 resolvedColorWithTraitCollection:v18];

  id v20 = [v19 colorWithAlphaComponent:0.6];
  uint64_t v21 = sub_57C84();
  int v23 = v22;

  v49._countAndFlagsBits = v21;
  v49._object = v23;
  sub_145C90(v49);
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = 0xD000000000000048;
  v50._object = (void *)0x8000000000150BA0;
  sub_145C90(v50);
  id v24 = [v4 secondaryLabelColor];
  id v25 = [v6 traitCollectionWithUserInterfaceStyle:1];
  id v26 = [v24 resolvedColorWithTraitCollection:v25];

  id v27 = [v26 colorWithAlphaComponent:0.4];
  uint64_t v28 = sub_57C84();
  uint64_t v30 = v29;

  v51._countAndFlagsBits = v28;
  v51._object = v30;
  sub_145C90(v51);
  swift_bridgeObjectRelease();
  v52._object = (void *)0x8000000000150BF0;
  v52._countAndFlagsBits = 0xD000000000000042;
  sub_145C90(v52);
  sub_C84C(0, (unint64_t *)&qword_1A0A40);
  if (qword_19B060 != -1) {
    swift_once();
  }
  uint64_t v31 = v40;
  uint64_t v32 = sub_C584(v40, (uint64_t)qword_1A3ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v3, v32, v31);
  uint64_t v33 = (void *)sub_146460();
  id v34 = [v6 traitCollectionWithUserInterfaceStyle:1];
  id v35 = [v33 resolvedColorWithTraitCollection:v34];

  uint64_t v36 = sub_57C84();
  uint64_t v38 = v37;

  v53._countAndFlagsBits = v36;
  v53._object = v38;
  sub_145C90(v53);
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 0xD000000000000088;
  v54._object = (void *)0x8000000000150C40;
  sub_145C90(v54);
  return v42;
}

uint64_t sub_BCE34(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_146B40() & 1;
  }
}

uint64_t sub_BCEAC(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A09F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A0A08);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v16 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC15JournalSettings30PrintableHTMLContentController_continuation;
  swift_beginAccess();
  sub_BD0D0(v13, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_BD138((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_BD138((uint64_t)v12);
    v16[0] = a1;
    id v14 = a1;
    sub_145ED0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  swift_beginAccess();
  sub_BC8D0((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_BD0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_1A0A08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_BD138(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_1A0A08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_BD198@<X0>(unint64_t *a1@<X8>)
{
  return sub_BBB9C(*(void *)(v1 + 24), a1);
}

unint64_t sub_BD1B4()
{
  unint64_t result = qword_1A0A30;
  if (!qword_1A0A30)
  {
    sub_12244(&qword_19BE50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0A30);
  }
  return result;
}

unint64_t sub_BD210()
{
  unint64_t result = qword_1A0A38;
  if (!qword_1A0A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0A38);
  }
  return result;
}

Swift::Int sub_BD264(void *a1)
{
  sub_146C80();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_146C90(v2);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v3 = a1;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(a1);
      break;
  }
  return sub_146CD0();
}

Swift::Int sub_BD358()
{
  return sub_BD264(*v0);
}

void sub_BD360()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_9:
      sub_146C90(v2);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v3 = v1;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(v1);
      break;
  }
}

Swift::Int sub_BD448()
{
  uint64_t v1 = *v0;
  sub_146C80();
  switch((unint64_t)v1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_146C90(v2);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v3 = v1;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(v1);
      break;
  }
  return sub_146CD0();
}

uint64_t sub_BD538(void **a1, char **a2)
{
  return sub_BDF14(*a1, *a2);
}

uint64_t sub_BD544()
{
  sub_A314(&qword_1A0A80);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15E590;
  uint64_t v1 = (void *)MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 32) = MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 40) = MKPointOfInterestCategoryAirport;
  *(void *)(inited + 48) = MKPointOfInterestCategoryAmusementPark;
  *(void *)(inited + 56) = MKPointOfInterestCategoryAquarium;
  *(void *)(inited + 64) = MKPointOfInterestCategoryATM;
  Swift::UInt v2 = (void *)MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 72) = MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 80) = MKPointOfInterestCategoryBakery;
  id v3 = (void *)MKPointOfInterestCategoryBaseball;
  *(void *)(inited + 88) = MKPointOfInterestCategoryBank;
  *(void *)(inited + 96) = v3;
  uint64_t v4 = (void *)MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 104) = MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 112) = MKPointOfInterestCategoryBeach;
  uint64_t v90 = (void *)MKPointOfInterestCategoryBeauty;
  uint64_t v5 = MKPointOfInterestCategoryBowling;
  uint64_t v91 = (void *)MKPointOfInterestCategoryBowling;
  *(void *)(inited + 120) = MKPointOfInterestCategoryBeauty;
  *(void *)(inited + 128) = v5;
  *(void *)(inited + 136) = MKPointOfInterestCategoryBrewery;
  *(void *)(inited + 144) = MKPointOfInterestCategoryCafe;
  *(void *)(inited + 152) = MKPointOfInterestCategoryCampground;
  *(void *)(inited + 160) = MKPointOfInterestCategoryCarRental;
  v92 = (void *)MKPointOfInterestCategoryCastle;
  uint64_t v6 = MKPointOfInterestCategoryConventionCenter;
  uint64_t v94 = (void *)MKPointOfInterestCategoryConventionCenter;
  *(void *)(inited + 168) = MKPointOfInterestCategoryCastle;
  *(void *)(inited + 176) = v6;
  int v93 = (void *)MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 184) = MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 192) = MKPointOfInterestCategoryEVCharger;
  uint64_t v95 = (void *)MKPointOfInterestCategoryFairground;
  *(void *)(inited + 200) = MKPointOfInterestCategoryFairground;
  *(void *)(inited + 208) = MKPointOfInterestCategoryFireStation;
  int v96 = (void *)MKPointOfInterestCategoryFishing;
  *(void *)(inited + 216) = MKPointOfInterestCategoryFishing;
  *(void *)(inited + 224) = MKPointOfInterestCategoryFitnessCenter;
  uint64_t v7 = MKPointOfInterestCategoryFortress;
  uint64_t v97 = (void *)MKPointOfInterestCategoryFortress;
  *(void *)(inited + 232) = MKPointOfInterestCategoryFoodMarket;
  *(void *)(inited + 240) = v7;
  uint64_t v8 = MKPointOfInterestCategoryGolf;
  v99 = (void *)MKPointOfInterestCategoryGolf;
  *(void *)(inited + 248) = MKPointOfInterestCategoryGasStation;
  *(void *)(inited + 256) = v8;
  uint64_t v98 = (void *)MKPointOfInterestCategoryGoKart;
  uint64_t v9 = MKPointOfInterestCategoryHiking;
  v100 = (void *)MKPointOfInterestCategoryHiking;
  *(void *)(inited + 264) = MKPointOfInterestCategoryGoKart;
  *(void *)(inited + 272) = v9;
  *(void *)(inited + 280) = MKPointOfInterestCategoryHospital;
  *(void *)(inited + 288) = MKPointOfInterestCategoryHotel;
  char v101 = (void *)MKPointOfInterestCategoryKayaking;
  uint64_t v10 = MKPointOfInterestCategoryLandmark;
  v102 = (void *)MKPointOfInterestCategoryLandmark;
  *(void *)(inited + 296) = MKPointOfInterestCategoryKayaking;
  *(void *)(inited + 304) = v10;
  *(void *)(inited + 312) = MKPointOfInterestCategoryLaundry;
  *(void *)(inited + 320) = MKPointOfInterestCategoryLibrary;
  v103 = (void *)MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 328) = MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 336) = MKPointOfInterestCategoryMarina;
  v104 = (void *)MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 344) = MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 352) = MKPointOfInterestCategoryMovieTheater;
  uint64_t v11 = MKPointOfInterestCategoryMusicVenue;
  uint64_t v106 = (void *)MKPointOfInterestCategoryMusicVenue;
  *(void *)(inited + 360) = MKPointOfInterestCategoryMuseum;
  *(void *)(inited + 368) = v11;
  uint64_t v105 = (void *)MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 376) = MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 384) = MKPointOfInterestCategoryNationalPark;
  *(void *)(inited + 392) = MKPointOfInterestCategoryNightlife;
  *(void *)(inited + 400) = MKPointOfInterestCategoryPark;
  *(void *)(inited + 408) = MKPointOfInterestCategoryParking;
  *(void *)(inited + 416) = MKPointOfInterestCategoryPharmacy;
  uint64_t v107 = (void *)MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 424) = MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 432) = MKPointOfInterestCategoryPolice;
  *(void *)(inited + 440) = MKPointOfInterestCategoryPostOffice;
  *(void *)(inited + 448) = MKPointOfInterestCategoryPublicTransport;
  *(void *)(inited + 456) = MKPointOfInterestCategoryRestaurant;
  *(void *)(inited + 464) = MKPointOfInterestCategoryRestroom;
  uint64_t v108 = (void *)MKPointOfInterestCategoryRockClimbing;
  uint64_t v12 = MKPointOfInterestCategoryRVPark;
  v109 = (void *)MKPointOfInterestCategoryRVPark;
  *(void *)(inited + 472) = MKPointOfInterestCategoryRockClimbing;
  *(void *)(inited + 480) = v12;
  uint64_t v13 = MKPointOfInterestCategorySkatePark;
  uint64_t v111 = (void *)MKPointOfInterestCategorySkatePark;
  *(void *)(inited + 488) = MKPointOfInterestCategorySchool;
  *(void *)(inited + 496) = v13;
  uint64_t v110 = (void *)MKPointOfInterestCategorySkating;
  uint64_t v14 = MKPointOfInterestCategorySkiing;
  char v112 = (void *)MKPointOfInterestCategorySkiing;
  *(void *)(inited + 504) = MKPointOfInterestCategorySkating;
  *(void *)(inited + 512) = v14;
  v113 = (void *)MKPointOfInterestCategorySoccer;
  *(void *)(inited + 520) = MKPointOfInterestCategorySoccer;
  uint64_t v114 = (void *)MKPointOfInterestCategorySpa;
  *(void *)(inited + 528) = MKPointOfInterestCategorySpa;
  *(void *)(inited + 536) = MKPointOfInterestCategoryStadium;
  *(void *)(inited + 544) = MKPointOfInterestCategoryStore;
  v115 = (void *)MKPointOfInterestCategorySurfing;
  *(void *)(inited + 552) = MKPointOfInterestCategorySurfing;
  v116 = (void *)MKPointOfInterestCategorySwimming;
  *(void *)(inited + 560) = MKPointOfInterestCategorySwimming;
  v117 = (void *)MKPointOfInterestCategoryTennis;
  *(void *)(inited + 568) = MKPointOfInterestCategoryTennis;
  *(void *)(inited + 576) = MKPointOfInterestCategoryTheater;
  *(void *)(inited + 584) = MKPointOfInterestCategoryUniversity;
  char v118 = (void *)MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 592) = MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 600) = MKPointOfInterestCategoryWinery;
  *(void *)(inited + 608) = MKPointOfInterestCategoryZoo;
  id v15 = v1;
  unint64_t v16 = MKPointOfInterestCategoryAirport;
  id v17 = MKPointOfInterestCategoryAmusementPark;
  id v18 = MKPointOfInterestCategoryAquarium;
  id v19 = MKPointOfInterestCategoryATM;
  id v20 = v2;
  uint64_t v21 = MKPointOfInterestCategoryBakery;
  uint64_t v22 = MKPointOfInterestCategoryBank;
  id v23 = v3;
  id v24 = v4;
  id v25 = MKPointOfInterestCategoryBeach;
  id v26 = v90;
  id v27 = v91;
  uint64_t v28 = MKPointOfInterestCategoryBrewery;
  uint64_t v29 = MKPointOfInterestCategoryCafe;
  uint64_t v30 = MKPointOfInterestCategoryCampground;
  uint64_t v31 = MKPointOfInterestCategoryCarRental;
  id v32 = v92;
  id v33 = v94;
  id v34 = v93;
  id v35 = MKPointOfInterestCategoryEVCharger;
  id v36 = v95;
  uint64_t v37 = MKPointOfInterestCategoryFireStation;
  id v38 = v96;
  uint64_t v39 = MKPointOfInterestCategoryFitnessCenter;
  uint64_t v40 = MKPointOfInterestCategoryFoodMarket;
  id v41 = v97;
  uint64_t v42 = MKPointOfInterestCategoryGasStation;
  id v43 = v99;
  id v44 = v98;
  id v45 = v100;
  Swift::String v46 = MKPointOfInterestCategoryHospital;
  Swift::String v47 = MKPointOfInterestCategoryHotel;
  id v48 = v101;
  id v49 = v102;
  Swift::String v50 = MKPointOfInterestCategoryLaundry;
  Swift::String v51 = MKPointOfInterestCategoryLibrary;
  id v52 = v103;
  Swift::String v53 = MKPointOfInterestCategoryMarina;
  id v54 = v104;
  char v55 = MKPointOfInterestCategoryMovieTheater;
  char v56 = MKPointOfInterestCategoryMuseum;
  id v57 = v106;
  id v58 = v105;
  v59 = MKPointOfInterestCategoryNationalPark;
  uint64_t v60 = MKPointOfInterestCategoryNightlife;
  uint64_t v61 = MKPointOfInterestCategoryPark;
  v62 = MKPointOfInterestCategoryParking;
  uint64_t v63 = MKPointOfInterestCategoryPharmacy;
  id v64 = v107;
  char v65 = MKPointOfInterestCategoryPolice;
  char v66 = MKPointOfInterestCategoryPostOffice;
  uint64_t v67 = MKPointOfInterestCategoryPublicTransport;
  uint64_t v68 = MKPointOfInterestCategoryRestaurant;
  v69 = MKPointOfInterestCategoryRestroom;
  id v70 = v108;
  id v71 = v109;
  uint64_t v72 = MKPointOfInterestCategorySchool;
  id v73 = v111;
  id v74 = v110;
  id v75 = v112;
  id v76 = v113;
  id v77 = v114;
  v78 = MKPointOfInterestCategoryStadium;
  unsigned int v79 = MKPointOfInterestCategoryStore;
  id v80 = v115;
  id v81 = v116;
  id v82 = v117;
  uint64_t v83 = MKPointOfInterestCategoryTheater;
  uint64_t v84 = MKPointOfInterestCategoryUniversity;
  id v85 = v118;
  char v86 = MKPointOfInterestCategoryWinery;
  v87 = MKPointOfInterestCategoryZoo;
  v88 = (int *)sub_F3A18(inited);
  swift_setDeallocating();
  type metadata accessor for MKPointOfInterestCategory(0);
  uint64_t result = swift_arrayDestroy();
  off_1A0A50[0] = v88;
  return result;
}

id sub_BDD1C()
{
  sub_BDD54();
  id result = sub_BDD94(346);
  qword_1A0A58 = (uint64_t)result;
  return result;
}

unint64_t sub_BDD54()
{
  unint64_t result = qword_19C888;
  if (!qword_19C888)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19C888);
  }
  return result;
}

id sub_BDD94(int a1)
{
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (result)
  {
    id v3 = result;
    sub_A314(&qword_1A0A78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_15CBA0;
    *(void *)(inited + 32) = 0x300000005;
    uint64_t v5 = inited + 32;
    *(_DWORD *)(inited + 40) = 6;
    *(_DWORD *)(inited + 44) = a1;
    *(void *)(inited + 48) = 0x100010024;
    id v6 = v3;
    [v6 replaceAttributes:v5 count:6];

    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_BDE5C()
{
  sub_BDD54();
  id result = sub_BDD94(347);
  qword_1A0A60 = (uint64_t)result;
  return result;
}

id sub_BDE94()
{
  sub_BDD54();
  id result = sub_BDD94(169);
  qword_1A0A68 = (uint64_t)result;
  return result;
}

id sub_BDECC()
{
  sub_BDD54();
  id result = sub_BDD94(145);
  qword_1A0A70 = (uint64_t)result;
  return result;
}

void sub_BDF04(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

uint64_t sub_BDF14(void *a1, char *a2)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 1uLL:
      if (a2 == (unsigned char *)&def_94138 + 1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 2uLL:
      if (a2 != (unsigned char *)&def_94138 + 2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 3uLL:
      if (a2 != (unsigned char *)&def_94138 + 3) {
        goto LABEL_13;
      }
LABEL_9:
      char v8 = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_13:
        char v8 = 0;
      }
      else
      {
        uint64_t v4 = sub_145BC0();
        uint64_t v6 = v5;
        if (v4 == sub_145BC0() && v6 == v7) {
          char v8 = 1;
        }
        else {
          char v8 = sub_146B90();
        }
        sub_BE044(a1);
        sub_BE044(a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_BDF04(a2);
        sub_BDF04(a1);
      }
      break;
  }
  return v8 & 1;
}

id sub_BE044(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

uint64_t sub_BE054(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 52));
  unint64_t v6 = v5[1];
  if (v6 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    sub_27BC0(v8, v6);
    uint64_t v7 = (void *)sub_35D58(v8, v6);
    sub_120B4(v8, v6);
  }
  id v9 = [v7 pointOfInterestCategory];

  if (!v2) {
    goto LABEL_29;
  }
  if (v3 == 1701670728 && v2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    if (qword_19AFB8 != -1) {
      swift_once();
    }
    (id)qword_1A0A58;

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 == 1802661719 && v2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    if (qword_19AFC0 != -1) {
      swift_once();
    }
    (id)qword_1A0A60;

    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == 0x6C6F6F686353 && v2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    if (qword_19AFC8 != -1) {
      swift_once();
    }
    (id)qword_1A0A68;

    swift_bridgeObjectRelease();
    return 2;
  }
  if (v3 == 7174471 && v2 == 0xE300000000000000 || (sub_146B90() & 1) != 0)
  {
    if (qword_19AFD0 != -1) {
      swift_once();
    }
    (id)qword_1A0A70;

    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
LABEL_29:
    if (v9)
    {
      uint64_t v10 = qword_19AFB0;
      id v11 = v9;
      if (v10 != -1) {
        swift_once();
      }
      if ((sub_37294((uint64_t)v11, (uint64_t)off_1A0A50[0]) & 1) != 0
        && (uint64_t v12 = a1 + *(int *)(v4 + 48), v13 = *(void *)(v12 + 8), v13 >> 60 != 15))
      {
        uint64_t v15 = *(void *)v12;
        sub_C4D4(*(void *)v12, *(void *)(v12 + 8));
        uint64_t v16 = sub_35D6C(v15, v13);
        sub_120B4(v15, v13);

        swift_bridgeObjectRelease();
        if (!v16)
        {

          return 0;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v9;
}

void *initializeBufferWithCopyOfBuffer for PlaceCategory(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for PlaceCategory(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for PlaceCategory(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for PlaceCategory(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceCategory(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaceCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)id result = 0;
    *(_DWORD *)id result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)id result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_BE620(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_BE638(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *id result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaceCategory()
{
  return &type metadata for PlaceCategory;
}

unint64_t sub_BE66C()
{
  unint64_t result = qword_1A0A88;
  if (!qword_1A0A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0A88);
  }
  return result;
}

uint64_t sub_BE6C4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A0A90);
  sub_C584(v0, (uint64_t)qword_1A0A90);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

id AssetMetadataDownloadOperation.__allocating_init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[qword_1A0AA8] = a1;
  *(void *)&v7[qword_1A0AB0] = a2;
  *(void *)&v7[qword_1A0AB8] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, "init");
}

id AssetMetadataDownloadOperation.init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[qword_1A0AA8] = a1;
  *(void *)&v3[qword_1A0AB0] = a2;
  *(void *)&v3[qword_1A0AB8] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for AssetMetadataDownloadOperation()
{
  uint64_t result = qword_1A0B00;
  if (!qword_1A0B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetMetadataDownloadOperation.main@Sendable ()()
{
  v1[4] = v0;
  sub_A314(&qword_19EB20);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_144F60();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_BE9E0, 0, 0);
}

uint64_t sub_BE9E0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_1A0AB8);
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  unint64_t v5 = sub_3D02C();
  *uint64_t v4 = v0;
  v4[1] = sub_BEAE8;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_1A0AD0, v3, v5);
}

uint64_t sub_BEAE8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_BF0F4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_BEC04;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_BEC04()
{
  id v32 = v0;
  id v1 = (id)v0[2];
  if (!sub_146470()) {
    goto LABEL_10;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_10:
    if (qword_19AFD8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_145760();
    sub_C584(v19, (uint64_t)qword_1A0A90);
    id v1 = v1;
    id v20 = sub_145740();
    os_log_type_t v21 = sub_146200();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      id v23 = [v1 debugDescription];
      uint64_t v24 = sub_145BC0();
      unint64_t v26 = v25;

      v0[3] = sub_3D2B4(v24, v26, &v31);
      sub_146610();
      swift_bridgeObjectRelease();

      _os_log_impl(&def_94138, v20, v21, "error getting DataConfig.JournalEntryAssetFileAttachment.file :%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_20:

LABEL_23:
      uint64_t v11 = 0;
      uint64_t v13 = 0;
      id v1 = 0;
      goto LABEL_24;
    }

LABEL_22:
    goto LABEL_23;
  }
  id v3 = [v2 fileURL];
  if (!v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[7] + 56))(v0[5], 1, 1, v0[6]);
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  sub_144EF0();

  objc_super v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9(v8, v5, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
LABEL_16:
    sub_296E0(v0[5]);
    if (qword_19AFD8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_145760();
    sub_C584(v27, (uint64_t)qword_1A0A90);
    id v20 = sub_145740();
    os_log_type_t v28 = sub_146200();
    if (os_log_type_enabled(v20, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&def_94138, v20, v28, "ckAsset.fileURL is nil", v29, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_unknownObjectRelease();
    goto LABEL_22;
  }
  uint64_t v10 = v0[12];
  v9(v0[9], v0[5], v0[6]);
  uint64_t v11 = sub_144F70();
  uint64_t v13 = v12;
  uint64_t v14 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v16 = v0[7];
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);

    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_unknownObjectRelease();
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, id))v0[1];
  return v30(v11, v13, v1);
}

uint64_t sub_BF0F4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_BF17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_BF1A0, 0, 0);
}

uint64_t sub_BF1A0()
{
  id v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_1A0AA8);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_3CDD0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_6F3C0;
  v0[13] = &unk_188EE8;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_BF2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_21598;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_BF1A0, 0, 0);
}

void AssetMetadataDownloadOperation.init()()
{
}

void sub_BF39C()
{
}

void sub_BF3CC()
{
  id v1 = *(void **)(v0 + qword_1A0AB8);
}

id AssetMetadataDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_BF454(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1A0AB8);
}

uint64_t sub_BF4B0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_BF540;
  return AssetMetadataDownloadOperation.main@Sendable ()();
}

uint64_t sub_BF540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void **)(v8 + 16);
    *uint64_t v10 = a1;
    v10[1] = a2;
    v10[2] = a3;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

uint64_t sub_BF664()
{
  return swift_initClassMetadata2();
}

uint64_t sub_BF6B0()
{
  return type metadata accessor for AssetMetadataDownloadOperation();
}

uint64_t type metadata accessor for VideoUtilities()
{
  return self;
}

uint64_t sub_BF6DC(uint64_t a1, double a2)
{
  *(double *)(v2 + 24) = a2;
  *(void *)(v2 + 16) = a1;
  return _swift_task_switch(sub_BF700, 0, 0);
}

uint64_t sub_BF700()
{
  double v1 = v0[3];
  id v2 = objc_allocWithZone((Class)AVURLAsset);
  sub_144EB0(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithURL:v4 options:0];
  *((void *)v0 + 4) = v6;

  id v7 = [objc_allocWithZone((Class)AVAssetImageGenerator) initWithAsset:v6];
  *((void *)v0 + 5) = v7;
  [v7 setAppliesPreferredTrackTransform:1];
  objc_msgSend(v7, "setMaximumSize:", v1, v1);
  [v7 setDynamicRangePolicy:AVAssetImageGeneratorDynamicRangePolicyForceSDR];
  unint64_t v8 = sub_146440(0.0, 60);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  *((void *)v0 + 6) = v13;
  void *v13 = v0;
  v13[1] = sub_BF870;
  return AVAssetImageGenerator.image(at:)(v8, v10, v12);
}

uint64_t sub_BF870(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_BFA34;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_BF998;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_BF998()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = (void *)v0[4];
  id v2 = (void *)v0[5];
  id v4 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];

  uint64_t v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_BFA34()
{
  uint64_t v1 = *(void **)(v0 + 32);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_BFA9C(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_BFABC, 0, 0);
}

uint64_t sub_BFABC()
{
  id v1 = objc_allocWithZone((Class)AVURLAsset);
  sub_144EB0(v2);
  uint64_t v4 = v3;
  v0[6] = [v1 initWithURL:v3 options:0];

  sub_A314(&qword_1A0CA0);
  uint64_t v5 = sub_145550();
  v0[7] = v5;
  id v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  void *v6 = v0;
  v6[1] = sub_BFBC8;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 2, v5);
}

uint64_t sub_BFBC8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_BFD50;
  }
  else
  {
    swift_release();
    id v2 = sub_BFCE4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_BFCE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v2, v3);
}

uint64_t sub_BFD50()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_BFDBC(char a1)
{
  uint64_t v2 = sub_1452C0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_145B50();
  __chkstk_darwin(v3 - 8);
  switch(a1)
  {
    case 5:
      sub_145AE0();
      sub_1452B0();
      uint64_t result = sub_145C00();
      break;
    default:
      sub_145AE0();
      sub_1452B0();
      uint64_t result = sub_145C10();
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType()
{
  return &type metadata for MediaViewType;
}

unint64_t sub_C007C()
{
  unint64_t result = qword_1A0CB0;
  if (!qword_1A0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0CB0);
  }
  return result;
}

unint64_t sub_C00D0(char a1)
{
  unint64_t result = 1735290739;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75626C41676E6F73;
      break;
    case 2:
      unint64_t result = 0x74736163646F70;
      break;
    case 3:
      unint64_t result = 0x4174736163646F70;
      break;
    case 4:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 5:
      unint64_t result = 0x7261506472696874;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C01FC(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_A314(&qword_1A0D50);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  Swift::String v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_1A0D58);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  id v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A0D60);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  id v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_1A0D68);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  id v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_A314(&qword_1A0D70);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  id v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_A314(&qword_1A0D78);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_A314(&qword_1A0D80);
  uint64_t v32 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_A314(&qword_1A0D88);
  uint64_t v31 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_A314(&qword_1A0D90);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_C1B10();
  sub_146D10();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_C1D5C();
      uint64_t v26 = v51;
      sub_146A80();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_C1D08();
      uint64_t v26 = v51;
      sub_146A80();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_C1CB4();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      sub_146A80();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_C1C60();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      sub_146A80();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_C1C0C();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      sub_146A80();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_C1BB8();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      sub_146A80();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_C1B64();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      sub_146A80();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_C1DB0();
      uint64_t v26 = v51;
      sub_146A80();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_C0970()
{
  return 0;
}

uint64_t sub_C097C(uint64_t a1)
{
  unint64_t v2 = sub_C1C60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C09B8(uint64_t a1)
{
  unint64_t v2 = sub_C1C60();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_C09F4()
{
  return sub_C00D0(*v0);
}

uint64_t sub_C09FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C0E5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C0A24(uint64_t a1)
{
  unint64_t v2 = sub_C1B10();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0A60(uint64_t a1)
{
  unint64_t v2 = sub_C1B10();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0A9C(uint64_t a1)
{
  unint64_t v2 = sub_C1CB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0AD8(uint64_t a1)
{
  unint64_t v2 = sub_C1CB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0B14(uint64_t a1)
{
  unint64_t v2 = sub_C1D08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0B50(uint64_t a1)
{
  unint64_t v2 = sub_C1D08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0B8C(uint64_t a1)
{
  unint64_t v2 = sub_C1D5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0BC8(uint64_t a1)
{
  unint64_t v2 = sub_C1D5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0C04(uint64_t a1)
{
  unint64_t v2 = sub_C1DB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0C40(uint64_t a1)
{
  unint64_t v2 = sub_C1DB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0C7C(uint64_t a1)
{
  unint64_t v2 = sub_C1BB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0CB8(uint64_t a1)
{
  unint64_t v2 = sub_C1BB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0CF4(uint64_t a1)
{
  unint64_t v2 = sub_C1B64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0D30(uint64_t a1)
{
  unint64_t v2 = sub_C1B64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0D6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_C0D9C(uint64_t a1)
{
  unint64_t v2 = sub_C1C0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C0DD8(uint64_t a1)
{
  unint64_t v2 = sub_C1C0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C0E14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_C11DC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_C0E40(void *a1)
{
  return sub_C01FC(a1, *v1);
}

uint64_t sub_C0E5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75626C41676E6F73 && a2 == 0xE90000000000006DLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4174736163646F70 && a2 == 0xED00007473697472 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F626F69647561 && a2 == 0xE90000000000006BLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7261506472696874 && a2 == 0xEF616964654D7974 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000150EF0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000000150F10)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_C11DC(void *a1)
{
  uint64_t v2 = sub_A314(&qword_1A0CB8);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  char v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_A314(&qword_1A0CC0);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_1A0CC8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_1A0CD0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  __chkstk_darwin(v8);
  char v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_A314(&qword_1A0CD8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  __chkstk_darwin(v11);
  char v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_A314(&qword_1A0CE0);
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  char v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_A314(&qword_1A0CE8);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_A314(&qword_1A0CF0);
  uint64_t v44 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_A314(&qword_1A0CF8);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  sub_2F114(a1, v25);
  sub_C1B10();
  uint64_t v26 = v64;
  sub_146D00();
  if (v26) {
    goto LABEL_16;
  }
  id v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = sub_146A70();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_146840();
    swift_allocError();
    uint64_t v34 = v33;
    sub_A314(&qword_1A0D08);
    void *v34 = &type metadata for MediaViewType;
    sub_1469D0();
    sub_146830();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    sub_C7FC((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_C1D5C();
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_C1D08();
      id v35 = v57;
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_C1CB4();
      uint64_t v27 = v58;
      sub_1469C0();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_C1C60();
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_C1C0C();
      sub_1469C0();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_C1BB8();
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_C1B64();
      id v38 = v59;
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_C1DB0();
      uint64_t v32 = v41;
      sub_1469C0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  sub_C7FC((uint64_t)v63);
  return v24;
}

unint64_t sub_C1B10()
{
  unint64_t result = qword_1A0D00;
  if (!qword_1A0D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D00);
  }
  return result;
}

unint64_t sub_C1B64()
{
  unint64_t result = qword_1A0D10;
  if (!qword_1A0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D10);
  }
  return result;
}

unint64_t sub_C1BB8()
{
  unint64_t result = qword_1A0D18;
  if (!qword_1A0D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D18);
  }
  return result;
}

unint64_t sub_C1C0C()
{
  unint64_t result = qword_1A0D20;
  if (!qword_1A0D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D20);
  }
  return result;
}

unint64_t sub_C1C60()
{
  unint64_t result = qword_1A0D28;
  if (!qword_1A0D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D28);
  }
  return result;
}

unint64_t sub_C1CB4()
{
  unint64_t result = qword_1A0D30;
  if (!qword_1A0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D30);
  }
  return result;
}

unint64_t sub_C1D08()
{
  unint64_t result = qword_1A0D38;
  if (!qword_1A0D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D38);
  }
  return result;
}

unint64_t sub_C1D5C()
{
  unint64_t result = qword_1A0D40;
  if (!qword_1A0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D40);
  }
  return result;
}

unint64_t sub_C1DB0()
{
  unint64_t result = qword_1A0D48;
  if (!qword_1A0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D48);
  }
  return result;
}

unsigned char *_s15JournalSettings13MediaViewTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC1ED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType.CodingKeys()
{
  return &type metadata for MediaViewType.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongCodingKeys()
{
  return &type metadata for MediaViewType.SongCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongAlbumCodingKeys()
{
  return &type metadata for MediaViewType.SongAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastCodingKeys()
{
  return &type metadata for MediaViewType.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastArtistCodingKeys()
{
  return &type metadata for MediaViewType.PodcastArtistCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.AudiobookCodingKeys()
{
  return &type metadata for MediaViewType.AudiobookCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaAlbumCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaArtistCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaArtistCodingKeys;
}

unint64_t sub_C1F8C()
{
  unint64_t result = qword_1A0D98;
  if (!qword_1A0D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0D98);
  }
  return result;
}

unint64_t sub_C1FE4()
{
  unint64_t result = qword_1A0DA0;
  if (!qword_1A0DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DA0);
  }
  return result;
}

unint64_t sub_C203C()
{
  unint64_t result = qword_1A0DA8;
  if (!qword_1A0DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DA8);
  }
  return result;
}

unint64_t sub_C2094()
{
  unint64_t result = qword_1A0DB0;
  if (!qword_1A0DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DB0);
  }
  return result;
}

unint64_t sub_C20EC()
{
  unint64_t result = qword_1A0DB8;
  if (!qword_1A0DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DB8);
  }
  return result;
}

unint64_t sub_C2144()
{
  unint64_t result = qword_1A0DC0;
  if (!qword_1A0DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DC0);
  }
  return result;
}

unint64_t sub_C219C()
{
  unint64_t result = qword_1A0DC8;
  if (!qword_1A0DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DC8);
  }
  return result;
}

unint64_t sub_C21F4()
{
  unint64_t result = qword_1A0DD0;
  if (!qword_1A0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DD0);
  }
  return result;
}

unint64_t sub_C224C()
{
  unint64_t result = qword_1A0DD8;
  if (!qword_1A0DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DD8);
  }
  return result;
}

unint64_t sub_C22A4()
{
  unint64_t result = qword_1A0DE0;
  if (!qword_1A0DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DE0);
  }
  return result;
}

unint64_t sub_C22FC()
{
  unint64_t result = qword_1A0DE8;
  if (!qword_1A0DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DE8);
  }
  return result;
}

unint64_t sub_C2354()
{
  unint64_t result = qword_1A0DF0;
  if (!qword_1A0DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DF0);
  }
  return result;
}

unint64_t sub_C23AC()
{
  unint64_t result = qword_1A0DF8;
  if (!qword_1A0DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0DF8);
  }
  return result;
}

unint64_t sub_C2404()
{
  unint64_t result = qword_1A0E00;
  if (!qword_1A0E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E00);
  }
  return result;
}

unint64_t sub_C245C()
{
  unint64_t result = qword_1A0E08;
  if (!qword_1A0E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E08);
  }
  return result;
}

unint64_t sub_C24B4()
{
  unint64_t result = qword_1A0E10;
  if (!qword_1A0E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E10);
  }
  return result;
}

unint64_t sub_C250C()
{
  unint64_t result = qword_1A0E18;
  if (!qword_1A0E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E18);
  }
  return result;
}

unint64_t sub_C2564()
{
  unint64_t result = qword_1A0E20;
  if (!qword_1A0E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E20);
  }
  return result;
}

unint64_t sub_C25BC()
{
  unint64_t result = qword_1A0E28;
  if (!qword_1A0E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0E28);
  }
  return result;
}

uint64_t sub_C2618()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A0E30);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_1A0E30);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_C26E0()
{
  v1[4] = v0;
  sub_A314(&qword_19EB20);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_144F60();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  int v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *int v3 = v1;
  v3[1] = sub_C27FC;
  return sub_42ECC();
}

uint64_t sub_C27FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_C28FC, 0, 0);
}

uint64_t sub_C28FC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (!v1)
  {
    id v2 = *(id *)(v0 + 32);
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_C319C(v3, (uint64_t)v2);

    swift_bridgeObjectRelease();
    if (v4
      || (id v5 = *(id *)(v0 + 32),
          unint64_t v6 = swift_bridgeObjectRetain(),
          uint64_t v7 = sub_C319C(v6, (uint64_t)v5),
          v5,
          swift_bridgeObjectRelease(),
          v7))
    {
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = *(void *)(v0 + 56);
      uint64_t v10 = *(char **)(v0 + 40);
      sub_D2630(v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1)
      {
        uint64_t v11 = *(void *)(v0 + 32);
        (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
        *(unsigned char *)(v0 + 112) = *(unsigned char *)(v11 + qword_19D1C8);
        sub_4CB28();
        double v13 = v12;
        id v14 = [self mainScreen];
        [v14 scale];
        double v16 = v15;

        uint64_t v21 = (uint64_t (*)(uint64_t, double))((char *)&dword_1A0CA8 + dword_1A0CA8);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_C2B9C;
        uint64_t v18 = *(void *)(v0 + 64);
        return v21(v18, v13 * v16);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 48));
    }
    sub_1248C(*(void *)(v0 + 40), &qword_19EB20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v1);
}

uint64_t sub_C2B9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_C2E78;
  }
  else {
    uint64_t v4 = sub_C2CB0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_C2CB0()
{
  switch(*(unsigned char *)(v0 + 112))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v1 = sub_146B90();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {
        if (qword_19ADD0 != -1) {
          swift_once();
        }
        sub_E75DC(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 32) + qword_19D198), *(void *)(*(void *)(v0 + 32) + qword_19D198 + 8));
      }
      break;
  }
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_C2E78()
{
  if (qword_19AFE0 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[4];
  uint64_t v2 = sub_145760();
  sub_C584(v2, (uint64_t)qword_1A0E30);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = sub_145740();
  os_log_type_t v6 = sub_1461F0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[4];
  if (v7)
  {
    os_log_type_t type = v6;
    uint64_t v9 = swift_slowAlloc();
    double v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    v0[2] = v8;
    uint64_t v10 = v8;
    sub_146610();
    *double v15 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    double v12 = v5;
    sub_146610();
    v15[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v5, type, "%@ - error generating video preview image: %@", (uint8_t *)v9, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    double v12 = v8;
  }

  swift_errorRelease();
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t type metadata accessor for VideoThumbnailCacheOperation()
{
  uint64_t result = qword_1A0E70;
  if (!qword_1A0E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_C315C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_C3194()
{
  return type metadata accessor for VideoThumbnailCacheOperation();
}

uint64_t sub_C319C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_A314(&qword_19D360);
  __chkstk_darwin(v6 - 8);
  v78 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_145680();
  uint64_t v8 = *(void *)(v85 - 8);
  uint64_t v9 = __chkstk_darwin(v85);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  id v77 = (char *)&v64 - v15;
  uint64_t v80 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v16 = __chkstk_darwin(v80);
  uint64_t v90 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v93 = (uint64_t)&v64 - v18;
  uint64_t v19 = sub_A314(&qword_19EB20);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v84 = (char *)&v64 - v22;
  uint64_t v91 = sub_144F60();
  unint64_t v23 = *(void *)(v91 - 8);
  uint64_t v24 = __chkstk_darwin(v91);
  char v71 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v86 = (char *)&v64 - v26;
  uint64_t v27 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v28 = __chkstk_darwin(v27);
  v87 = (id *)((char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v31 = (void **)((char *)&v64 - v30);
  unint64_t v95 = a1;
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v32 = *(void *)((char *)&dword_10 + (v95 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v32)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v64 = v3;
    uint64_t v88 = *(void *)(a2 + qword_19D1D0);
    int v89 = *(unsigned __int8 *)(a2 + qword_19D1D0 + 8);
    v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    id v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    id v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    char v66 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    id v73 = (void (**)(char *, uint64_t))(v8 + 8);
    char v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    char v72 = (void (**)(char *, uint64_t))(v23 + 8);
    unint64_t v23 = v95 & 0xC000000000000001;
    uint64_t v3 = 4;
    char v67 = v11;
    id v75 = v14;
    uint64_t v11 = v90;
    uint64_t v79 = v27;
    uint64_t v81 = v32;
    unint64_t v94 = v95 & 0xC000000000000001;
LABEL_6:
    uint64_t v8 = v3 - 4;
    if (v23) {
      break;
    }
    a2 = *(void *)(v95 + 8 * v3);
    swift_retain();
    id v14 = (char *)(v3 - 3);
    if (!__OFADD__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_146930();
    if (!v32) {
      goto LABEL_44;
    }
  }
  a2 = sub_146810();
  id v14 = (char *)(v3 - 3);
  if (__OFADD__(v8, 1)) {
    goto LABEL_42;
  }
LABEL_11:
  uint64_t v34 = a2 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType;
  sub_463EC(a2 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v31, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = *v31;
      swift_release();

      goto LABEL_5;
    case 2u:
      uint64_t v35 = (uint64_t)v31;
      if ((v89 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v35 = (uint64_t)v31;
      goto LABEL_40;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v37 = v34;
      id v38 = v87;
      sub_463EC(v37, (uint64_t)v87, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = (uint64_t)v38;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v41 = (uint64_t)v84;
          uint64_t v42 = v91;
          (*v82)(v84, 1, 1, v91);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t)v38 + *(int *)(sub_A314(&qword_19D368) + 48);
          goto LABEL_19;
        default:
LABEL_19:
          uint64_t v43 = v93;
          sub_46388(v40, v93);
          sub_463EC(v43, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = (uint64_t)v84;
            uint64_t v42 = v91;
            (*v83)(v84, v11, v91);
            uint64_t v44 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v45 = v76;
            sub_621B8(v76);
            uint64_t v46 = v45;
            swift_bridgeObjectRelease();
            uint64_t v42 = v91;
            if ((*v92)(v45, 1, v91) == 1)
            {
              sub_1248C(v45, &qword_19EB20);
              uint64_t v44 = 1;
              uint64_t v11 = v90;
              uint64_t v41 = (uint64_t)v84;
            }
            else
            {
              uint64_t v47 = *v83;
              uint64_t v48 = v71;
              (*v83)(v71, (char *)v46, v42);
              uint64_t v49 = v84;
              v47(v84, v48, v42);
              uint64_t v41 = (uint64_t)v49;
              uint64_t v44 = 0;
              uint64_t v11 = v90;
            }
            uint64_t v27 = v79;
          }
          (*v82)((char *)v41, v44, 1, v42);
          sub_4632C(v93);
          break;
      }
      uint64_t v35 = (uint64_t)v31 + *(int *)(sub_A314(&qword_19D368) + 48);
      if ((*v92)(v41, 1, v42) == 1)
      {
        sub_1248C(v41, &qword_19EB20);
LABEL_30:
        uint64_t v32 = v81;
        goto LABEL_31;
      }
      (*v83)(v86, (char *)v41, v42);
      sub_144E30();
      uint64_t v51 = v50;
      swift_bridgeObjectRetain();
      uint64_t v52 = v75;
      sub_145630();
      uint64_t v53 = (uint64_t)v78;
      sub_145620();
      if ((*v74)(v53, 1, v85) == 1)
      {
        sub_1248C(v53, &qword_19D360);
        swift_bridgeObjectRelease();
        (*v72)(v86, v42);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        goto LABEL_30;
      }
      uint64_t v69 = v51;
      uint64_t v54 = v77;
      uint64_t v55 = v85;
      (*v66)(v77, v53, v85);
      sub_145660();
      int v70 = sub_145670();
      char v68 = *v73;
      v68(v52, v55);
      uint64_t v56 = v67;
      (*v65)(v67, v54, v55);
      if ((v70 & 1) == 0)
      {
        sub_145650();
        int v70 = sub_145670();
        char v60 = v52;
        uint64_t v61 = v85;
        v62 = v68;
        v68(v60, v85);
        v62(v56, v61);
        v62(v77, v61);
        swift_bridgeObjectRelease();
        (*v72)(v86, v91);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        uint64_t v32 = v81;
        if (v70) {
          goto LABEL_36;
        }
LABEL_31:
        sub_4632C(v35);
LABEL_32:
        swift_release();
        unint64_t v23 = v94;
LABEL_5:
        ++v3;
        if (v14 == (char *)v32) {
          goto LABEL_44;
        }
        goto LABEL_6;
      }
      char v57 = v56;
      uint64_t v58 = v85;
      char v59 = v68;
      v68(v57, v85);
      v59(v77, v58);
      swift_bridgeObjectRelease();
      (*v72)(v86, v91);
      uint64_t v11 = v90;
      uint64_t v27 = v79;
      uint64_t v32 = v81;
LABEL_36:
      if ((v89 & 1) == 0)
      {
LABEL_14:
        uint64_t v36 = *(void *)(a2 + 16);
        sub_4632C(v35);
        if (v36 == v88) {
          goto LABEL_41;
        }
        goto LABEL_32;
      }
LABEL_40:
      sub_4632C(v35);
LABEL_41:
      swift_bridgeObjectRelease();
      return a2;
    default:
      sub_4632C((uint64_t)v31);
      swift_release();
      goto LABEL_5;
  }
}

uint64_t sub_C3C64(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A10D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_C5224();
  sub_146D10();
  v8[15] = 0;
  sub_146AE0();
  if (!v1)
  {
    v8[14] = 1;
    sub_146A90();
    v8[13] = 2;
    sub_146A90();
    _s9BookAssetC8BookDataVMa(0);
    v8[12] = 3;
    sub_145230();
    sub_C51DC(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_C3E6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A10C0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s9BookAssetC8BookDataVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_C5224();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v29 = 0;
  *uint64_t v12 = sub_146A30();
  v12[1] = v16;
  char v28 = 1;
  v12[2] = sub_1469E0();
  v12[3] = v17;
  char v27 = 2;
  uint64_t v18 = sub_1469E0();
  v21[1] = 0;
  v12[4] = v18;
  v12[5] = v19;
  sub_145230();
  char v26 = 3;
  sub_C51DC(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_12384(v13, (uint64_t)v12 + *(int *)(v22 + 28));
  sub_C5278((uint64_t)v12, v23);
  sub_C7FC((uint64_t)a1);
  return sub_C52DC((uint64_t)v12);
}

uint64_t sub_C4208()
{
  uint64_t result = 0x6449616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x726F68747561;
      break;
    case 3:
      uint64_t result = 0x7550664F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C429C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C5608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C42C4(uint64_t a1)
{
  unint64_t v2 = sub_C5224();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C4300(uint64_t a1)
{
  unint64_t v2 = sub_C5224();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C433C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C3E6C(a1, a2);
}

uint64_t sub_C4354(void *a1)
{
  return sub_C3C64(a1);
}

uint64_t sub_C436C()
{
  uint64_t v1 = sub_A314(&qword_19C838);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling9BookAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_32B10((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_C5338((uint64_t)v3);
    return 0;
  }
  sub_C5398((uint64_t)v3, (uint64_t)v7);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_C52DC((uint64_t)v7);
  return v9;
}

uint64_t sub_C458C()
{
  return swift_release();
}

id sub_C459C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9BookAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C45E4()
{
  return _s9BookAssetCMa(0);
}

uint64_t _s9BookAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A0FD8);
}

uint64_t sub_C460C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_C4650(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t sub_C47EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_145230();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_C48CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void *sub_C4A18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_C4BF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_145230();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_A314(&qword_19C150);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_C4D0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_C4EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C4EC8);
}

uint64_t sub_C4EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_C4F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C4F90);
}

uint64_t sub_C4F90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s9BookAssetC8BookDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1040);
}

void sub_C505C()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_C5100()
{
  return swift_retain();
}

uint64_t sub_C5110(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling9BookAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_C5128()
{
  return sub_C436C();
}

uint64_t sub_C514C()
{
  return sub_C51DC(&qword_19C840, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_C5194()
{
  return sub_C51DC(&qword_1A1080, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_C51DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_C5224()
{
  unint64_t result = qword_1A10C8;
  if (!qword_1A10C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10C8);
  }
  return result;
}

uint64_t sub_C5278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C52DC(uint64_t a1)
{
  uint64_t v2 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C5338(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C838);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C5398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s9BookAssetC8BookDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC54C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9BookAssetC8BookDataV10CodingKeysOMa()
{
  return &_s9BookAssetC8BookDataV10CodingKeysON;
}

unint64_t sub_C5504()
{
  unint64_t result = qword_1A10D8;
  if (!qword_1A10D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10D8);
  }
  return result;
}

unint64_t sub_C555C()
{
  unint64_t result = qword_1A10E0;
  if (!qword_1A10E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10E0);
  }
  return result;
}

unint64_t sub_C55B4()
{
  unint64_t result = qword_1A10E8;
  if (!qword_1A10E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10E8);
  }
  return result;
}

uint64_t sub_C5608(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7550664F656D6974 && a2 == 0xEE00657361686372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_C57D8(uint64_t a1, unsigned __int8 a2)
{
  switch(a2 >> 5)
  {
    case 1:
      sub_146C90(5uLL);
      sub_146CA0(a2 & 1);
      return;
    case 2:
      if (a2 == 64) {
        Swift::UInt v3 = 1;
      }
      else {
        Swift::UInt v3 = 2;
      }
      goto LABEL_14;
    case 3:
      if (a2 == 96) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 4;
      }
      goto LABEL_14;
    case 4:
      if (a2 == 128) {
        Swift::UInt v3 = 6;
      }
      else {
        Swift::UInt v3 = 7;
      }
      goto LABEL_14;
    case 5:
      Swift::UInt v3 = 8;
      goto LABEL_14;
    default:
      sub_146C90(0);
      Swift::UInt v3 = a2 & 1;
LABEL_14:
      sub_146C90(v3);
      return;
  }
}

Swift::Int sub_C58BC()
{
  unsigned __int8 v1 = *v0;
  sub_146C80();
  sub_C57D8((uint64_t)v3, v1);
  return sub_146CD0();
}

void sub_C5904(uint64_t a1)
{
  sub_C57D8(a1, *v1);
}

Swift::Int sub_C590C()
{
  unsigned __int8 v1 = *v0;
  sub_146C80();
  sub_C57D8((uint64_t)v3, v1);
  return sub_146CD0();
}

uint64_t sub_C5950(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_C595C(*a1, *a2);
}

uint64_t sub_C595C(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
    case 2:
      if (a1 == 64) {
        return a2 == 64;
      }
      return a2 == 65;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          return 1;
        }
      }
      else if (a2 == 97)
      {
        return 1;
      }
      return 0;
    case 4:
      if (a1 == 128) {
        return a2 == 128;
      }
      return a2 == 129;
    case 5:
      return a2 == 160;
    default:
      if (a2 >= 0x20u) {
        return 0;
      }
      return ((a2 ^ a1) & 1) == 0;
  }
}

uint64_t getEnumTagSinglePayload for CanvasContentInputType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *unint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC5BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_C5BF4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_C5C10(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_C5C20(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType()
{
  return &type metadata for CanvasContentInputType;
}

unint64_t sub_C5C68()
{
  unint64_t result = qword_1A10F0;
  if (!qword_1A10F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType.KeyboardFocus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC5D88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType.KeyboardFocus()
{
  return &type metadata for CanvasContentInputType.KeyboardFocus;
}

unint64_t sub_C5DC4()
{
  unint64_t result = qword_1A10F8;
  if (!qword_1A10F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A10F8);
  }
  return result;
}

uint64_t type metadata accessor for MapManager()
{
  return self;
}

uint64_t sub_C5E3C(uint64_t a1)
{
  int v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = *((void *)v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v58 - v6);
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v9 = sub_138F64((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  uint64_t v59 = v12;
  while (1)
  {
    sub_2E1B0(v11, (uint64_t)v7);
    int v15 = (double *)((char *)v7 + v2[10]);
    if ((_BYTE)v15[1]) {
      goto LABEL_4;
    }
    int v16 = (double *)((char *)v7 + v2[11]);
    if ((_BYTE)v16[1]) {
      goto LABEL_4;
    }
    double v17 = *v15;
    double v18 = *v16;
    if (*(void *)(v9 + 16))
    {
      sub_1379CC(v17, *v16);
      if (v19) {
        goto LABEL_4;
      }
    }
    uint64_t v20 = (uint64_t *)((char *)v7 + v2[13]);
    unint64_t v21 = v20[1];
    int v64 = *((unsigned __int8 *)v7 + v2[14]);
    if (v21 >> 60 == 15)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v23 = *v20;
      sub_C4D4(*v20, v21);
      uint64_t v22 = (void *)sub_35D58(v23, v21);
      sub_120B4(v23, v21);
    }
    uint64_t v24 = (char *)v7 + v2[16];
    uint64_t v25 = *(void *)v24;
    int v26 = v24[8];
    sub_2E1B0((uint64_t)v7, v65);
    if (v26 == 1)
    {
      char v27 = (uint64_t *)(v65 + v2[15]);
      if (v27[1])
      {
        uint64_t v25 = 0;
        if (v22)
        {
          id v28 = [v22 placemark];
          id v29 = [v28 location];

          if (v29)
          {
            [v29 horizontalAccuracy];
            uint64_t v25 = v30;
          }
        }
      }
      else
      {
        uint64_t v25 = *v27;
      }
    }
    sub_2E274(v65);
    uint64_t v31 = (void *)v7[1];
    uint64_t v63 = v8;
    if (v31)
    {
      uint64_t v66 = *v7;
      uint64_t v32 = v31;
    }
    else
    {
      uint64_t v66 = 0;
      uint64_t v32 = (void *)0xE000000000000000;
    }
    id v33 = v22;
    swift_bridgeObjectRetain();
    id v62 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v67 = (void *)v9;
    unint64_t v36 = sub_1379CC(v17, v18);
    uint64_t v37 = *(void *)(v9 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v9 + 24) >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_13D47C();
      }
    }
    else
    {
      sub_139E04(v39, isUniquelyReferenced_nonNull_native);
      uint64_t v41 = sub_1379CC(v17, v18);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_39;
      }
      unint64_t v36 = v41;
    }
    char v43 = v64 & 1;
    uint64_t v44 = v67;
    char v60 = v22;
    unint64_t v61 = (unint64_t)v67;
    v64 &= 1u;
    if (v40)
    {
      uint64_t v45 = v67[7] + 104 * v36;
      uint64_t v46 = v2;
      uint64_t v47 = *(void **)(v45 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      int v2 = v46;
      char v48 = v64;
      swift_bridgeObjectRelease();
      *(double *)uint64_t v45 = v17;
      *(double *)(v45 + 8) = v18;
      *(void *)(v45 + 16) = v22;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 1;
      *(void *)(v45 + 40) = v66;
      *(void *)(v45 + 48) = v32;
      *(unsigned char *)(v45 + 56) = v48;
      *(void *)(v45 + 64) = 0;
      *(void *)(v45 + 72) = 0;
      *(void *)(v45 + 80) = v25;
      *(void *)(v45 + 88) = 0;
      *(void *)(v45 + 96) = 0xE000000000000000;
    }
    else
    {
      v67[(v36 >> 6) + 8] |= 1 << v36;
      uint64_t v49 = (double *)(v44[6] + 16 * v36);
      *uint64_t v49 = v17;
      v49[1] = v18;
      uint64_t v50 = v44[7] + 104 * v36;
      *(double *)uint64_t v50 = v17;
      *(double *)(v50 + 8) = v18;
      *(void *)(v50 + 16) = v22;
      *(void *)(v50 + 24) = 0;
      *(unsigned char *)(v50 + 32) = 1;
      *(void *)(v50 + 40) = v66;
      *(void *)(v50 + 48) = v32;
      *(unsigned char *)(v50 + 56) = v43;
      *(void *)(v50 + 64) = 0;
      *(void *)(v50 + 72) = 0;
      *(void *)(v50 + 80) = v25;
      *(void *)(v50 + 88) = 0;
      *(void *)(v50 + 96) = 0xE000000000000000;
      uint64_t v51 = v44[2];
      BOOL v52 = __OFADD__(v51, 1);
      uint64_t v53 = v51 + 1;
      if (v52) {
        goto LABEL_38;
      }
      v44[2] = v53;
    }
    swift_bridgeObjectRelease();
    id v54 = v62;
    id v62 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_7D910(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v9 = v61;
    unint64_t v56 = *((void *)v8 + 2);
    unint64_t v55 = *((void *)v8 + 3);
    if (v56 >= v55 >> 1) {
      uint64_t v8 = sub_7D910((double *)(v55 > 1), v56 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v56 + 1;
    uint64_t v13 = &v8[13 * v56];
    v13[4] = v17;
    v13[5] = v18;
    *((void *)v13 + 6) = v60;
    v13[7] = 0.0;
    *((unsigned char *)v13 + 64) = 1;
    id v14 = v62;
    *((void *)v13 + 9) = v66;
    *((void *)v13 + 10) = v14;
    *((unsigned char *)v13 + 88) = v64;
    v13[12] = 0.0;
    v13[13] = 0.0;
    *((void *)v13 + 14) = v25;
    v13[15] = 0.0;
    unsigned char v13[16] = -2.68156159e154;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v59;
LABEL_4:
    sub_2E274((uint64_t)v7);
    v11 += v12;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = sub_146C20();
  __break(1u);
  return result;
}

BOOL sub_C63B4(double a1, double a2, double a3, double a4)
{
  if (a1 < -90.0 || a1 > 90.0 || a2 < -180.0 || a2 > 180.0) {
    return 0;
  }
  BOOL v7 = a4 >= 0.0;
  if (a4 > 360.0) {
    BOOL v7 = 0;
  }
  if (a3 > 180.0) {
    BOOL v7 = 0;
  }
  return a3 >= 0.0 && v7;
}

uint64_t sub_C6434(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v9 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      sub_2E1B0(v8, (uint64_t)v6);
      uint64_t v11 = *(int *)(v2 + 44);
      uint64_t v12 = &v6[*(int *)(v2 + 40)];
      if (v12[8]) {
        double v13 = INFINITY;
      }
      else {
        double v13 = *(double *)v12;
      }
      if (v6[v11 + 8]) {
        double v14 = INFINITY;
      }
      else {
        double v14 = *(double *)&v6[v11];
      }
      sub_2E274((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_7DC90(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v16 = *((void *)v10 + 2);
      unint64_t v15 = *((void *)v10 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v10 = sub_7DC90((double *)(v15 > 1), v16 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v16 + 1;
      double v17 = &v10[2 * v16];
      v17[4] = v13;
      v17[5] = v14;
      v8 += v9;
      --v7;
    }
    while (v7);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v18 = *((void *)v10 + 2);
  unint64_t v19 = v18 != 0;
  if (v18 == v19)
  {
LABEL_22:
    uint64_t v21 = 1;
LABEL_24:
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    uint64_t v20 = &v10[2 * v19 + 5];
    while (v19 < v18)
    {
      if (*(v20 - 1) != v10[4] || *v20 != v10[5])
      {
        uint64_t v21 = 0;
        goto LABEL_24;
      }
      ++v19;
      v20 += 2;
      if (v18 == v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  return result;
}

id sub_C66A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CommonTransitions();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CommonTransitions()
{
  return self;
}

unint64_t sub_C6700(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C6834(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A12F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_C7718();
  sub_146D10();
  LOBYTE(v14) = 0;
  sub_146A90();
  if (!v2)
  {
    uint64_t v9 = _s10VideoAssetC9VideoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_145230();
    sub_C76A8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v14) = 2;
    sub_146A90();
    LOBYTE(v14) = 3;
    sub_146AB0();
    LOBYTE(v14) = 4;
    sub_146AB0();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_C76A8(&qword_1A0490, type metadata accessor for CGSize);
    sub_146AD0();
    LOBYTE(v14) = 6;
    sub_146A90();
    LOBYTE(v14) = 7;
    sub_146A90();
    LOBYTE(v14) = 8;
    sub_146A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_C6BA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_A314(&qword_1A12E8);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10VideoAssetC9VideoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_2F114(a1, a1[3]);
  sub_C7718();
  uint64_t v44 = v9;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_1469E0();
  v11[1] = v17;
  sub_145230();
  LOBYTE(v46) = 1;
  sub_C76A8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  unint64_t v18 = (int *)v45;
  sub_12384(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_1469E0();
  uint64_t v20 = (uint64_t *)((char *)v11 + v18[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_146A00();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_146A00();
  int v26 = (char *)v11 + v18[8];
  *(void *)int v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_C76A8(&qword_1A0480, type metadata accessor for CGSize);
  sub_146A20();
  char v28 = v47;
  id v29 = (char *)v11 + v18[9];
  *(_OWORD *)id v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_1469E0();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  uint64_t *v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_1469E0();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  uint64_t *v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  unint64_t v36 = v44;
  uint64_t v37 = sub_1469E0();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  char v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  uint64_t *v40 = v37;
  v40[1] = v39;
  sub_C776C((uint64_t)v11, v15);
  sub_C7FC(v12);
  return sub_C77D0((uint64_t)v11);
}

unint64_t sub_C71AC()
{
  return sub_C6700(*v0);
}

uint64_t sub_C71B4(uint64_t a1)
{
  unint64_t v2 = sub_C7718();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C71F0(uint64_t a1)
{
  unint64_t v2 = sub_C7718();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C722C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C6BA0(a1, a2);
}

uint64_t sub_C7244(void *a1)
{
  return sub_C6834(a1);
}

id sub_C725C(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for VideoThumbnailCacheOperation());
  swift_bridgeObjectRetain();
  return sub_42A2C(v6, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_C72EC()
{
  return swift_release();
}

id sub_C72FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VideoAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C7344()
{
  return _s10VideoAssetCMa(0);
}

uint64_t _s10VideoAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A11E8);
}

uint64_t sub_C736C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_C73B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C73C4);
}

uint64_t sub_C73C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_C7484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C7498);
}

uint64_t sub_C7498(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VideoAssetC9VideoDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1250);
}

void sub_C7564()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_C7618()
{
  return sub_C76A8(&qword_19C740, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_C7660()
{
  return sub_C76A8(&qword_1A12A8, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_C76A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_C76F0()
{
  return swift_retain();
}

uint64_t sub_C7700(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10VideoAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_C7718()
{
  unint64_t result = qword_1A12F0;
  if (!qword_1A12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A12F0);
  }
  return result;
}

uint64_t sub_C776C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C77D0(uint64_t a1)
{
  uint64_t v2 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s10VideoAssetC9VideoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC78F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VideoAssetC9VideoDataV10CodingKeysOMa()
{
  return &_s10VideoAssetC9VideoDataV10CodingKeysON;
}

unint64_t sub_C7934()
{
  unint64_t result = qword_1A1300;
  if (!qword_1A1300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1300);
  }
  return result;
}

unint64_t sub_C798C()
{
  unint64_t result = qword_1A1308;
  if (!qword_1A1308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1308);
  }
  return result;
}

unint64_t sub_C79E4()
{
  unint64_t result = qword_1A1310;
  if (!qword_1A1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1310);
  }
  return result;
}

uint64_t sub_C7A38(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A1440);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_C954C();
  sub_146D10();
  char v13 = 0;
  sub_146AE0();
  if (!v1)
  {
    _s12ContactAssetC11ContactDataVMa(0);
    char v12 = 1;
    sub_145230();
    sub_C9504(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    char v11 = 2;
    sub_146AD0();
    char v10 = 3;
    sub_146AB0();
    char v9 = 4;
    sub_146AC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_C7C98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_A314(&qword_1A1430);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (int *)_s12ContactAssetC11ContactDataVMa(0);
  __chkstk_darwin(v11);
  char v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_C954C();
  uint64_t v14 = v10;
  uint64_t v15 = (uint64_t)v32;
  sub_146D00();
  if (v15) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v32 = a1;
  uint64_t v16 = v30;
  char v37 = 0;
  uint64_t *v13 = sub_146A30();
  v13[1] = v17;
  sub_145230();
  char v36 = 1;
  sub_C9504(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384((uint64_t)v7, (uint64_t)v13 + v11[5]);
  char v35 = 2;
  uint64_t v18 = (uint64_t)v29;
  sub_146A20();
  sub_12384(v18, (uint64_t)v13 + v11[6]);
  char v34 = 3;
  uint64_t v19 = sub_146A00();
  uint64_t v20 = (char *)v13 + v11[7];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  char v33 = 4;
  uint64_t v22 = sub_146A10();
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v31);
  uint64_t v25 = (char *)v13 + v11[8];
  *(void *)uint64_t v25 = v22;
  v25[8] = v24 & 1;
  sub_C95A0((uint64_t)v13, v28);
  sub_C7FC((uint64_t)v32);
  return sub_C9604((uint64_t)v13);
}

unint64_t sub_C80EC()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D69547472617473;
      break;
    case 2:
      unint64_t result = 0x656D6954646E65;
      break;
    case 3:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_C8198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C98D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C81C0(uint64_t a1)
{
  unint64_t v2 = sub_C954C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C81FC(uint64_t a1)
{
  unint64_t v2 = sub_C954C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_C8238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C7C98(a1, a2);
}

uint64_t sub_C8250(void *a1)
{
  return sub_C7A38(a1);
}

uint64_t sub_C8268()
{
  uint64_t v1 = sub_A314(&qword_19C538);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_314A4((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C538);
    return 0;
  }
  sub_C9660((uint64_t)v3, (uint64_t)v7);
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  sub_C9604((uint64_t)v7);
  return v8;
}

uint64_t sub_C8408()
{
  return swift_release();
}

id sub_C8418()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12ContactAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C8460()
{
  return _s12ContactAssetCMa(0);
}

uint64_t _s12ContactAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A1340);
}

uint64_t sub_C8488()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_C84CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v20;
    char v23 = (char *)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
  }
  return v4;
}

uint64_t sub_C8720(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_145230();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_C8848(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = (char *)a1 + v19;
  char v23 = &a2[v19];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

char *sub_C8A4C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  char v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[8];
  int v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)int v26 = v28;
  return a1;
}

_OWORD *sub_C8D20(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  int v19 = (char *)a1 + v17;
  uint64_t v20 = &a2[v17];
  *(void *)int v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = &a2[v18];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_C8F1C(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12(&a1[v16], 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = (char *)a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  int v26 = &a1[v23];
  uint64_t v27 = (char *)a2 + v23;
  *(void *)int v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_C91DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_C91F0);
}

uint64_t sub_C91F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_C92A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_C92B8);
}

uint64_t sub_C92B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s12ContactAssetC11ContactDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A13A8);
}

void sub_C9384()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_C9428()
{
  return swift_retain();
}

uint64_t sub_C9438(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_C9450()
{
  return sub_C8268();
}

uint64_t sub_C9474()
{
  return sub_C9504(&qword_19C850, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_C94BC()
{
  return sub_C9504(&qword_1A13F0, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_C9504(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_C954C()
{
  unint64_t result = qword_1A1438;
  if (!qword_1A1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1438);
  }
  return result;
}

uint64_t sub_C95A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C9604(uint64_t a1)
{
  uint64_t v2 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C9660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s12ContactAssetC11ContactDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC9790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ContactAssetC11ContactDataV10CodingKeysOMa()
{
  return &_s12ContactAssetC11ContactDataV10CodingKeysON;
}

unint64_t sub_C97CC()
{
  unint64_t result = qword_1A1448;
  if (!qword_1A1448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1448);
  }
  return result;
}

unint64_t sub_C9824()
{
  unint64_t result = qword_1A1450;
  if (!qword_1A1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1450);
  }
  return result;
}

unint64_t sub_C987C()
{
  unint64_t result = qword_1A1458;
  if (!qword_1A1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1458);
  }
  return result;
}

uint64_t sub_C98D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000151070)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_C9AE8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_A314(&qword_19C508);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_C9BF4, 0, 0);
}

uint64_t sub_C9BF4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_2B308(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1248C(*(void *)(v0 + 32), &qword_19C508);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unsigned int v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  sub_CD12C(*(void *)(v0 + 32), v7, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v8 = *(void *)(v7 + 16);
  char v9 = *(unsigned char *)(v7 + 24);
  sub_CE934(v7, v6, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v10 = *(void *)(v0 + 64);
  if (v9)
  {
    uint64_t v11 = v10 + *(int *)(*(void *)(v0 + 40) + 52);
    uint64_t v8 = *(void *)v11;
    char v12 = *(unsigned char *)(v11 + 8);
    sub_CD194(v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    if (v12)
    {
      int v13 = *(uint64_t **)(v0 + 72);
      uint64_t v14 = *(void *)(v0 + 56);
      uint64_t v15 = *(void *)(v0 + 40);
      uint64_t v16 = (char *)v13 + *(int *)(v15 + 48);
      uint64_t v17 = *(void *)v16;
      *(void *)(v0 + 112) = *(void *)v16;
      int v18 = v16[8];
      *(unsigned char *)(v0 + 168) = v18;
      if (v17 < 2) {
        int v19 = 1;
      }
      else {
        int v19 = v18;
      }
      if (v19) {
        unint64_t v20 = 0xD000000000000196;
      }
      else {
        unint64_t v20 = 0;
      }
      if (v19) {
        uint64_t v21 = 0x8000000000151090;
      }
      else {
        uint64_t v21 = 0xE000000000000000;
      }
      uint64_t v22 = sub_CA6D8(v13);
      unint64_t v24 = sub_CA864(v22, v23);
      int v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v48._countAndFlagsBits = v24;
      v48._object = v26;
      sub_145C90(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v46 = v20;
      *(void *)(v0 + 120) = v21;
      uint64_t v27 = (uint64_t *)((char *)v13 + *(int *)(v15 + 40));
      uint64_t v28 = *v27;
      unint64_t v29 = v27[1];
      sub_CE934((uint64_t)v13, v14, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      uint64_t v30 = *(void *)(v0 + 56);
      uint64_t v31 = *(void *)(v0 + 40);
      if (v29)
      {
        unint64_t v32 = v29;
      }
      else
      {
        char v34 = (uint64_t *)(v30 + *(int *)(v31 + 72));
        uint64_t v28 = *v34;
        unint64_t v32 = v34[1];
        swift_bridgeObjectRetain();
      }
      if (v19) {
        uint64_t v35 = 0;
      }
      else {
        uint64_t v35 = 0x8000000000151230;
      }
      if (v19) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = 0xD000000000000011;
      }
      uint64_t v37 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      sub_CD194(v30, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      uint64_t v38 = (uint64_t *)(v37 + *(int *)(v31 + 44));
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_CA918(v28, v32, v39, v40, 0, 0);
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = v43;
      swift_bridgeObjectRelease();
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 136) = v44;
      void *v44 = v0;
      v44[1] = sub_CA3A4;
      uint64_t v45 = *(void *)(v0 + 16);
      return sub_543BC(v45, 0, 0, v36, v35, v46, v21, v41);
    }
  }
  else
  {
    sub_CD194(v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  }
  *(void *)(v0 + 80) = v8;
  if (qword_19ADB0 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_1A3B78;
  *(void *)(v0 + 88) = qword_1A3B78;
  return _swift_task_switch(sub_CA060, v33, 0);
}

uint64_t sub_CA060()
{
  uint64_t v1 = (uint64_t (*)())[*(id *)(*(void *)(v0 + 88) + 112) stringWithDuration:2 durationFormat:*(double *)(v0 + 80)];
  if (v1)
  {
    unsigned int v4 = v1;
    uint64_t v5 = sub_145BC0();
    uint64_t v7 = v6;

    *(void *)(v0 + 96) = v5;
    *(void *)(v0 + 104) = v7;
    uint64_t v1 = sub_CA10C;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_CA10C()
{
  uint64_t v38 = *(void **)(v0 + 104);
  uint64_t v36 = *(void *)(v0 + 96);
  uint64_t v1 = *(uint64_t **)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  unsigned int v4 = (char *)v1 + *(int *)(v3 + 48);
  uint64_t v5 = *(void *)v4;
  *(void *)(v0 + 112) = *(void *)v4;
  int v6 = v4[8];
  *(unsigned char *)(v0 + 168) = v6;
  if (v5 < 2) {
    int v7 = 1;
  }
  else {
    int v7 = v6;
  }
  if (v7) {
    unint64_t v8 = 0xD000000000000196;
  }
  else {
    unint64_t v8 = 0;
  }
  if (v7) {
    unint64_t v9 = 0x8000000000151090;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v10 = sub_CA6D8(v1);
  unint64_t v12 = sub_CA864(v10, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = v12;
  v39._object = v14;
  sub_145C90(v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v9;
  uint64_t v35 = v8;
  *(void *)(v0 + 120) = v9;
  uint64_t v16 = (uint64_t *)((char *)v1 + *(int *)(v3 + 40));
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_CE934((uint64_t)v1, v2, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v19 = *(void *)(v0 + 56);
  uint64_t v20 = *(void *)(v0 + 40);
  if (v18)
  {
    unint64_t v21 = v18;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v19 + *(int *)(v20 + 72));
    uint64_t v17 = *v22;
    unint64_t v21 = v22[1];
    swift_bridgeObjectRetain();
  }
  if (v7) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = 0x8000000000151230;
  }
  if (v7) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = 0xD000000000000011;
  }
  uint64_t v25 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_CD194(v19, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  int v26 = (uint64_t *)(v25 + *(int *)(v20 + 44));
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_CA918(v17, v21, v27, v28, v36, v38);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v31;
  swift_bridgeObjectRelease();
  unint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v32;
  *unint64_t v32 = v0;
  v32[1] = sub_CA3A4;
  uint64_t v33 = *(void *)(v0 + 16);
  return sub_543BC(v33, 0, 0, v24, v23, v35, v15, v29);
}

uint64_t sub_CA3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 144) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    int v7 = sub_CA62C;
  }
  else
  {
    *(void *)(v6 + 152) = a2;
    *(void *)(v6 + 160) = a1;
    swift_bridgeObjectRelease();
    int v7 = sub_CA570;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_CA570()
{
  sub_CD194(v0[9], _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_CA62C()
{
  sub_CD194(*(void *)(v0 + 72), _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CA6D8(uint64_t *a1)
{
  uint64_t v2 = (char *)a1 + *(int *)(_s16WorkoutIconAssetC15WorkoutIconDataVMa(0) + 48);
  if ((v2[8] & 1) != 0 || (uint64_t v3 = *(void *)v2, *(uint64_t *)v2 < 2))
  {
    uint64_t v5 = *a1;
    if (!a1[1])
    {
      uint64_t v6 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000000151330;
      v10._countAndFlagsBits = 0x74756F6B726F57;
      v10._object = (void *)0xE700000000000000;
      v11.value._countAndFlagsBits = v5;
      v11.value._object = 0;
      v7.super.isa = v6;
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      uint64_t v5 = sub_144CC0(v10, v11, v7, v12, v9);
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_19AD38 != -1) {
      swift_once();
    }
    sub_A314(&qword_1A0A00);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1578A0;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = v3;
    uint64_t v5 = sub_145B90();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_CA864(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)0xE000000000000000;
  sub_1467D0(38);
  swift_bridgeObjectRelease();
  if (a2) {
    uint64_t v4 = a2;
  }
  else {
    a1 = 0;
  }
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = v4;
  sub_145C90(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x3E7669642F3CLL;
  v7._object = (void *)0xE600000000000000;
  sub_145C90(v7);
  return 0xD00000000000001ELL;
}

unint64_t sub_CA918(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  if (a4)
  {
    uint64_t v12 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      sub_1467D0(47);
      swift_bridgeObjectRelease();
      unint64_t v26 = 0x80000000001512E0;
      v13._countAndFlagsBits = a3;
      v13._object = (void *)a4;
      goto LABEL_11;
    }
  }
  if (a2)
  {
    uint64_t v14 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v14)
    {
      sub_1467D0(47);
      swift_bridgeObjectRelease();
      unint64_t v26 = 0x80000000001512B0;
      v13._countAndFlagsBits = a1;
      v13._object = (void *)a2;
LABEL_11:
      sub_145C90(v13);
      v27._countAndFlagsBits = 0x3E6E6170732F3CLL;
      v27._object = (void *)0xE700000000000000;
      sub_145C90(v27);
      uint64_t v15 = sub_7DB80(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v17 = *((void *)v15 + 2);
      unint64_t v16 = *((void *)v15 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_7DB80((double *)(v16 > 1), v17 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v17 + 1;
      unint64_t v18 = &v15[2 * v17];
      v18[4] = -2.31584178e77;
      *((void *)v18 + 5) = v26;
      if (a6) {
        goto LABEL_14;
      }
      goto LABEL_20;
    }
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (a6)
  {
LABEL_14:
    sub_1467D0(47);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = a5;
    v28._object = a6;
    sub_145C90(v28);
    v29._countAndFlagsBits = 0x3E6E6170732F3CLL;
    v29._object = (void *)0xE700000000000000;
    sub_145C90(v29);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_7DB80(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v20 = *((void *)v15 + 2);
    unint64_t v19 = *((void *)v15 + 3);
    if (v20 >= v19 >> 1) {
      uint64_t v15 = sub_7DB80((double *)(v19 > 1), v20 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v20 + 1;
    unint64_t v21 = &v15[2 * v20];
    v21[4] = -2.31584178e77;
    *((void *)v21 + 5) = 0x8000000000151280;
    goto LABEL_21;
  }
LABEL_20:
  if (*((void *)v15 + 2))
  {
LABEL_21:
    sub_1467D0(41);
    swift_bridgeObjectRelease();
    sub_A314(&qword_19C708);
    sub_64880();
    uint64_t v22 = sub_145A50();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = v22;
    v30._object = v24;
    sub_145C90(v30);
    swift_bridgeObjectRelease();
    v31._countAndFlagsBits = 0x3E7669642F3CLL;
    v31._object = (void *)0xE600000000000000;
    sub_145C90(v31);
    return 0xD000000000000021;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_CAC40(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_C9AE8(a1);
}

double sub_CACD4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C508);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata))
  {
    swift_retain();
    sub_32174((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_CD12C((uint64_t)v5, (uint64_t)v9, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = sub_CBDD8(&qword_19C7D0, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
      *(void *)(a1 + 40) = sub_CBDD8(&qword_19F818, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
      Swift::String v10 = sub_484D0((uint64_t *)a1);
      sub_CD12C((uint64_t)v9, (uint64_t)v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1248C((uint64_t)v5, &qword_19C508);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_CAF00(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_A314(&qword_19D0C0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_CAFF0, 0, 0);
}

uint64_t sub_CAFF0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_2AB6C(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1248C(*(void *)(v0 + 32), &qword_19D0C0);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  else
  {
    sub_CD12C(*(void *)(v0 + 32), *(void *)(v0 + 56), _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    if (qword_19ADB0 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = qword_1A3B78;
    *(void *)(v0 + 64) = qword_1A3B78;
    *(void *)(v0 + 72) = *(void *)(v6 + 32);
    *(unsigned char *)(v0 + 144) = *(unsigned char *)(v6 + 40);
    return _swift_task_switch(sub_CB15C, v7, 0);
  }
}

uint64_t sub_CB15C()
{
  double v1 = *(double *)(v0 + 72);
  if (*(unsigned char *)(v0 + 144)) {
    double v1 = 0.0;
  }
  uint64_t v2 = (uint64_t (*)())[*(id *)(*(void *)(v0 + 64) + 112) stringWithDuration:2 durationFormat:v1];
  if (v2)
  {
    uint64_t v5 = v2;
    uint64_t v6 = sub_145BC0();
    uint64_t v8 = v7;

    *(void *)(v0 + 80) = v6;
    *(void *)(v0 + 88) = v8;
    uint64_t v2 = sub_CB218;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_CB218()
{
  uint64_t v2 = v0[10];
  double v1 = (void *)v0[11];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_CA864(v5, v6);
  Swift::String v9 = v8;
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = v7;
  v20._object = v9;
  sub_145C90(v20);
  swift_bridgeObjectRelease();
  v0[12] = 0x8000000000151090;
  uint64_t v10 = (uint64_t *)(v3 + *(int *)(v4 + 48));
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_CA918(0, 0, v11, v12, v2, v1);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[13] = v15;
  unint64_t v16 = (void *)swift_task_alloc();
  v0[14] = v16;
  *unint64_t v16 = v0;
  v16[1] = sub_CB3AC;
  uint64_t v17 = v0[2];
  return sub_543BC(v17, 0, 0, 0, 0, 0xD000000000000196, 0x8000000000151090, v13);
}

uint64_t sub_CB3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 120) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    unint64_t v7 = sub_CB5C0;
  }
  else
  {
    *(void *)(v6 + 128) = a2;
    *(void *)(v6 + 136) = a1;
    unint64_t v7 = sub_CB520;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_CB520()
{
  sub_CD194(v0[7], _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_CB5C0()
{
  sub_CD194(*(void *)(v0 + 56), _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CB650(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_CF418;
  return sub_CAF00(a1);
}

double sub_CB6E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v34[-v7];
  uint64_t v9 = sub_A314(&qword_19D0C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v12 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v13 = *((void *)v12 - 1);
  __chkstk_darwin(v12);
  uint64_t v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata))
  {
    swift_retain();
    sub_3033C((uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_CD12C((uint64_t)v11, (uint64_t)v15, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
      uint64_t v16 = sub_CBAC0();
      uint64_t v17 = *((void *)v15 + 3);
      uint64_t v41 = *((void *)v15 + 2);
      uint64_t v42 = v16;
      uint64_t v40 = *((void *)v15 + 4);
      int v39 = v15[40];
      sub_2647C((uint64_t)&v15[v12[7]], (uint64_t)v8);
      sub_2647C((uint64_t)&v15[v12[8]], (uint64_t)v6);
      uint64_t v18 = v12[10];
      uint64_t v19 = &v15[v12[9]];
      uint64_t v20 = *(void *)v19;
      int v35 = v19[8];
      uint64_t v21 = *(void *)&v15[v18];
      int v38 = v15[v18 + 8];
      uint64_t v22 = (uint64_t *)&v15[v12[11]];
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      uint64_t v25 = (uint64_t *)&v15[v12[12]];
      uint64_t v26 = v25[1];
      uint64_t v36 = *v25;
      uint64_t v37 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_CD194((uint64_t)v15, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
      Swift::String v27 = (int *)_s16WorkoutRouteDataVMa(0);
      *(void *)(a1 + 24) = v27;
      *(void *)(a1 + 32) = sub_CBDD8(&qword_1A1490, (void (*)(uint64_t))_s16WorkoutRouteDataVMa);
      *(void *)(a1 + 40) = sub_CBDD8(&qword_1A1498, (void (*)(uint64_t))_s16WorkoutRouteDataVMa);
      Swift::String v28 = sub_484D0((uint64_t *)a1);
      *Swift::String v28 = v41;
      v28[1] = v17;
      v28[2] = v40;
      *((unsigned char *)v28 + 24) = v39;
      sub_12384((uint64_t)v8, (uint64_t)v28 + v27[6]);
      sub_12384((uint64_t)v6, (uint64_t)v28 + v27[7]);
      Swift::String v30 = (char *)v28 + v27[8];
      *(void *)Swift::String v30 = v20;
      v30[8] = v35;
      Swift::String v31 = (char *)v28 + v27[9];
      *(void *)Swift::String v31 = v37;
      v31[8] = v38;
      unint64_t v32 = (uint64_t *)((char *)v28 + v27[10]);
      *unint64_t v32 = v23;
      v32[1] = v24;
      uint64_t v33 = (uint64_t *)((char *)v28 + v27[11]);
      *uint64_t v33 = v36;
      v33[1] = v26;
      *(uint64_t *)((char *)v28 + v27[12]) = v42;
      return result;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1248C((uint64_t)v11, &qword_19D0C0);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_CBAC0()
{
  uint64_t v0 = _s10RoutePointVMa(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (unint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = sub_3E3A0();
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  unint64_t v6 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    if (v7) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  uint64_t v7 = sub_146930();
  if (!v7) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t result = sub_2CBC0(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v5 = v23;
    unint64_t v22 = v6 & 0xC000000000000001;
    unint64_t v10 = v6;
    do
    {
      if (v22) {
        id v11 = (id)sub_146810();
      }
      else {
        id v11 = *(id *)(v6 + 8 * v9 + 32);
      }
      unint64_t v12 = v11;
      objc_msgSend(v11, "coordinate", v22);
      uint64_t v14 = v13;
      [v12 coordinate];
      uint64_t v16 = v15;
      id v17 = [v12 timestamp];
      sub_1451E0();

      [v12 speed];
      uint64_t v19 = v18;

      *uint64_t v3 = v14;
      v3[1] = v16;
      *(void *)((char *)v3 + *(int *)(v0 + 28)) = v19;
      uint64_t v23 = v5;
      unint64_t v21 = *((void *)v5 + 2);
      unint64_t v20 = *((void *)v5 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_2CBC0(v20 > 1, v21 + 1, 1);
        uint64_t v5 = v23;
      }
      ++v9;
      *((void *)v5 + 2) = v21 + 1;
      sub_CD12C((uint64_t)v3, (uint64_t)v5+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v21, _s10RoutePointVMa);
      unint64_t v6 = v10;
    }
    while (v7 != v9);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_CBD28(uint64_t a1)
{
  uint64_t result = sub_CBDD8(&qword_1A1460, (void (*)(uint64_t))_s17WorkoutRouteAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_CBD80(uint64_t a1)
{
  uint64_t result = sub_CBDD8(&qword_1A1470, (void (*)(uint64_t))_s16WorkoutIconAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_CBDD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_CBE20(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A1638);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_CEA30();
  sub_146D10();
  v8[15] = 0;
  sub_146AF0();
  if (!v1)
  {
    v8[14] = 1;
    sub_146AF0();
    _s10RoutePointVMa(0);
    v8[13] = 2;
    sub_145230();
    sub_CBDD8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146B10();
    v8[12] = 3;
    sub_146AF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_CC030@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_145230();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_A314(&qword_1A1628);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s10RoutePointVMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_CEA30();
  unint64_t v10 = v25;
  sub_146D00();
  if (v10) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v11 = v23;
  char v29 = 0;
  sub_146A40();
  *uint64_t v9 = v12;
  char v28 = 1;
  sub_146A40();
  v9[1] = v13;
  char v27 = 2;
  sub_CBDD8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A60();
  uint64_t v20 = v7;
  uint64_t v14 = *(void (**)(void))(v22 + 32);
  uint64_t v25 = (char *)v9 + *(int *)(v7 + 24);
  v14();
  char v26 = 3;
  sub_146A40();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v24);
  uint64_t v17 = v21;
  *(void *)((char *)v9 + *(int *)(v20 + 28)) = v16;
  sub_CE934((uint64_t)v9, v17, _s10RoutePointVMa);
  sub_C7FC((uint64_t)a1);
  return sub_CD194((uint64_t)v9, _s10RoutePointVMa);
}

unint64_t sub_CC3DC(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x6D69547472617473;
      break;
    case 3:
      unint64_t result = 0x656D6954646E65;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 6:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    case 8:
      unint64_t result = 0x73746E696F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_CC4F4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A1610);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_CE8E0();
  sub_146D10();
  LOBYTE(v12) = 0;
  sub_146A90();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_146AB0();
    uint64_t v9 = _s16WorkoutRouteDataVMa(0);
    LOBYTE(v12) = 2;
    sub_145230();
    sub_CBDD8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v12) = 3;
    sub_146AD0();
    LOBYTE(v12) = 4;
    sub_146AB0();
    LOBYTE(v12) = 5;
    sub_146AB0();
    LOBYTE(v12) = 6;
    sub_146A90();
    LOBYTE(v12) = 7;
    sub_146A90();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 48));
    v11[15] = 8;
    sub_A314(&qword_1A15F8);
    sub_CE99C(&qword_1A1618, &qword_1A1620);
    sub_146B10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_CC86C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v40 = sub_A314(&qword_1A15E8);
  uint64_t v10 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (int *)_s16WorkoutRouteDataVMa(0);
  __chkstk_darwin(v41);
  uint64_t v42 = a1;
  uint64_t v43 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_CE8E0();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v42);
  }
  int v38 = v7;
  uint64_t v14 = v10;
  LOBYTE(v45) = 0;
  uint64_t v15 = v40;
  uint64_t v16 = sub_1469E0();
  uint64_t v17 = v43;
  *uint64_t v43 = v16;
  v17[1] = v18;
  LOBYTE(v45) = 1;
  v17[2] = sub_146A00();
  *((unsigned char *)v17 + 24) = v19 & 1;
  sub_145230();
  LOBYTE(v45) = 2;
  sub_CBDD8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  uint64_t v20 = v41;
  sub_12384((uint64_t)v9, (uint64_t)v17 + v41[6]);
  LOBYTE(v45) = 3;
  uint64_t v21 = (uint64_t)v38;
  sub_146A20();
  sub_12384(v21, (uint64_t)v17 + v20[7]);
  LOBYTE(v45) = 4;
  uint64_t v22 = sub_146A00();
  uint64_t v23 = (char *)v17 + v20[8];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v45) = 5;
  uint64_t v25 = sub_146A00();
  uint64_t v26 = (uint64_t)v42;
  char v27 = (char *)v17 + v20[9];
  *(void *)char v27 = v25;
  v27[8] = v28 & 1;
  LOBYTE(v45) = 6;
  uint64_t v29 = sub_1469E0();
  Swift::String v30 = (uint64_t *)((char *)v17 + v20[10]);
  *Swift::String v30 = v29;
  v30[1] = v31;
  LOBYTE(v45) = 7;
  uint64_t v32 = sub_1469E0();
  uint64_t v33 = (uint64_t *)((char *)v17 + v41[11]);
  *uint64_t v33 = v32;
  v33[1] = v34;
  sub_A314(&qword_1A15F8);
  char v44 = 8;
  sub_CE99C(&qword_1A1600, &qword_1A1608);
  sub_146A60();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v15);
  uint64_t v35 = (uint64_t)v43;
  *(uint64_t *)((char *)v43 + v41[12]) = v45;
  sub_CE934(v35, v39, _s16WorkoutRouteDataVMa);
  sub_C7FC(v26);
  return sub_CD194(v35, _s16WorkoutRouteDataVMa);
}

uint64_t sub_CCEEC()
{
  uint64_t result = 0x656475746974616CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6465657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_CCF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_CEE9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_CCFAC(uint64_t a1)
{
  unint64_t v2 = sub_CEA30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_CCFE8(uint64_t a1)
{
  unint64_t v2 = sub_CEA30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_CD024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_CC030(a1, a2);
}

uint64_t sub_CD03C(void *a1)
{
  return sub_CBE20(a1);
}

unint64_t sub_CD054()
{
  return sub_CC3DC(*v0);
}

uint64_t sub_CD05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_CF060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_CD084(uint64_t a1)
{
  unint64_t v2 = sub_CE8E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_CD0C0(uint64_t a1)
{
  unint64_t v2 = sub_CE8E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_CD0FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_CC86C(a1, a2);
}

uint64_t sub_CD114(void *a1)
{
  return sub_CC4F4(a1);
}

uint64_t sub_CD12C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_CD194(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s16WorkoutRouteDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1590);
}

uint64_t _s10RoutePointVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A14F8);
}

uint64_t *sub_CD234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_CD31C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_CD384(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_CD41C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_CD4BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_CD554(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_CD5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CD600);
}

uint64_t sub_CD600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_CD670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CD684);
}

uint64_t sub_CD684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_CD6F8()
{
  uint64_t result = sub_145230();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_CD794(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    char v28 = (void *)((char *)v4 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *char v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_CDA3C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_CDB74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_CDDCC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_CE124(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_CE350(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  void *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_CE66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CE680);
}

uint64_t sub_CE680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19C150);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 48));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_CE748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CE75C);
}

uint64_t sub_CE75C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_A314(&qword_19C150);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
  }
  return result;
}

void sub_CE820()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_CE8E0()
{
  unint64_t result = qword_1A15F0;
  if (!qword_1A15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A15F0);
  }
  return result;
}

uint64_t sub_CE934(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_CE99C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_1A15F8);
    sub_CBDD8(a2, (void (*)(uint64_t))_s10RoutePointVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_CEA30()
{
  unint64_t result = qword_1A1630;
  if (!qword_1A1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1630);
  }
  return result;
}

unsigned char *_s10RoutePointV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCEB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10RoutePointV10CodingKeysOMa()
{
  return &_s10RoutePointV10CodingKeysON;
}

unsigned char *_s16WorkoutRouteDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCEC54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16WorkoutRouteDataV10CodingKeysOMa()
{
  return &_s16WorkoutRouteDataV10CodingKeysON;
}

unint64_t sub_CEC90()
{
  unint64_t result = qword_1A1640;
  if (!qword_1A1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1640);
  }
  return result;
}

unint64_t sub_CECE8()
{
  unint64_t result = qword_1A1648;
  if (!qword_1A1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1648);
  }
  return result;
}

unint64_t sub_CED40()
{
  unint64_t result = qword_1A1650;
  if (!qword_1A1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1650);
  }
  return result;
}

unint64_t sub_CED98()
{
  unint64_t result = qword_1A1658;
  if (!qword_1A1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1658);
  }
  return result;
}

unint64_t sub_CEDF0()
{
  unint64_t result = qword_1A1660;
  if (!qword_1A1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1660);
  }
  return result;
}

unint64_t sub_CEE48()
{
  unint64_t result = qword_1A1668;
  if (!qword_1A1668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1668);
  }
  return result;
}

uint64_t sub_CEE9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_CF060(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000014B8E0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73746E696F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t getEnumTagSinglePayload for JournalFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JournalFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xCF578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalFeatureFlags()
{
  return &type metadata for JournalFeatureFlags;
}

unint64_t sub_CF5B4()
{
  unint64_t result = qword_1A1670;
  if (!qword_1A1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1670);
  }
  return result;
}

const char *sub_CF608(char a1)
{
  unint64_t result = "EntrySearch";
  switch(a1)
  {
    case 1:
      unint64_t result = "Insights";
      break;
    case 2:
      unint64_t result = "ShowDateSections";
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = "RichText";
      break;
    case 5:
      unint64_t result = "Chamomile";
      break;
    case 6:
      unint64_t result = "Sorting";
      break;
    case 7:
      unint64_t result = "IntelligentToolbox";
      break;
    case 8:
      unint64_t result = "MindfulMinutes";
      break;
    case 9:
      unint64_t result = "Export";
      break;
    case 10:
      unint64_t result = "AudioTranscription";
      break;
    case 11:
      unint64_t result = "AppStoreRatingPrompt";
      break;
    case 12:
      unint64_t result = "InsightsMentionedWords";
      break;
    case 13:
      unint64_t result = "ThirdPartyMedia";
      break;
    default:
      unint64_t result = "Debug";
      break;
  }
  return result;
}

const char *sub_CF768()
{
  return "Journal";
}

const char *sub_CF77C()
{
  return sub_CF608(*v0);
}

unint64_t sub_CF79C(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 2:
      unint64_t result = 0x614E747369747261;
      break;
    case 3:
      unint64_t result = 1735290739;
      break;
    case 4:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_CF89C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A17A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_D1B5C();
  sub_146D10();
  v11[15] = 0;
  sub_146AE0();
  if (!v2)
  {
    uint64_t v9 = _s10MusicAssetC9MusicDataVMa(0);
    v11[14] = 1;
    sub_144F60();
    sub_D1B14(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146AD0();
    v11[13] = 2;
    sub_146A90();
    v11[12] = 3;
    sub_146A90();
    v11[11] = 4;
    sub_146A90();
    v11[10] = 5;
    sub_146AC0();
    v11[9] = 6;
    sub_145230();
    sub_D1B14(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    v11[8] = *(unsigned char *)(v3 + *(int *)(v9 + 44));
    v11[7] = 7;
    sub_A7050();
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_CFBD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_A314(&qword_1A1798);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = _s10MusicAssetC9MusicDataVMa(0);
  __chkstk_darwin(v37);
  int v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  int v38 = a1;
  sub_2F114(a1, v15);
  sub_D1B5C();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v38);
  }
  uint64_t v16 = (uint64_t)v6;
  uint64_t v17 = v10;
  char v47 = 0;
  uint64_t *v14 = sub_146A30();
  v14[1] = v18;
  sub_144F60();
  char v46 = 1;
  sub_D1B14(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146A20();
  int v19 = (int *)v37;
  sub_2E4D0((uint64_t)v9, (uint64_t)v14 + *(int *)(v37 + 20), &qword_19EB20);
  char v45 = 2;
  uint64_t v20 = sub_1469E0();
  uint64_t v21 = (uint64_t *)((char *)v14 + v19[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v44 = 3;
  uint64_t v23 = sub_1469E0();
  uint64_t v24 = (uint64_t *)((char *)v14 + v19[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  char v43 = 4;
  uint64_t v26 = sub_1469E0();
  uint64_t v27 = (uint64_t)v38;
  uint64_t v28 = (uint64_t *)((char *)v14 + v19[8]);
  *uint64_t v28 = v26;
  v28[1] = v29;
  char v42 = 5;
  uint64_t v30 = sub_146A10();
  uint64_t v34 = 0;
  uint64_t v31 = (char *)v14 + v19[9];
  *(void *)uint64_t v31 = v30;
  v31[8] = v32 & 1;
  sub_145230();
  char v41 = 6;
  sub_D1B14(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_2E4D0(v16, (uint64_t)v14 + v19[10], &qword_19C150);
  char v39 = 7;
  sub_A6F3C();
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v36);
  *((unsigned char *)v14 + v19[11]) = v40;
  sub_D1BB0((uint64_t)v14, v35);
  sub_C7FC(v27);
  return sub_D1C14((uint64_t)v14);
}

unint64_t sub_D0268()
{
  return sub_CF79C(*v0);
}

uint64_t sub_D0270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_D1EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D0298(uint64_t a1)
{
  unint64_t v2 = sub_D1B5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D02D4(uint64_t a1)
{
  unint64_t v2 = sub_D1B5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_D0310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_CFBD8(a1, a2);
}

uint64_t sub_D0328(void *a1)
{
  return sub_CF89C(a1);
}

uint64_t sub_D0340()
{
  uint64_t v1 = sub_A314(&qword_19C7F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling10MusicAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_30B08((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C7F8);
    return 0;
  }
  sub_D1C70((uint64_t)v3, (uint64_t)v7);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15A590;
  uint64_t v9 = &v7[v4[7]];
  uint64_t v10 = v9[1];
  *(void *)(inited + 32) = *v9;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = &v7[v4[8]];
  uint64_t v12 = v11[1];
  *(void *)(inited + 48) = *v11;
  *(void *)(inited + 56) = v12;
  uint64_t v13 = &v7[v4[6]];
  uint64_t v14 = v13[1];
  *(void *)(inited + 64) = *v13;
  *(void *)(inited + 72) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_D1C14((uint64_t)v7);
  return v15;
}

uint64_t sub_D0588()
{
  return swift_release();
}

id sub_D0598()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10MusicAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_D05E0()
{
  return _s10MusicAssetCMa(0);
}

uint64_t _s10MusicAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A16A0);
}

uint64_t sub_D0608()
{
  return swift_updateClassMetadata2();
}

void *sub_D064C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_144F60();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19EB20);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)((char *)v4 + v16);
    int v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[10];
    __dst = (char *)v4 + v31;
    char v32 = (char *)a2 + v31;
    uint64_t v33 = sub_145230();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v32, 1, v33))
    {
      uint64_t v35 = sub_A314(&qword_19C150);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_D0934(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_145230();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_D0AC8(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  int v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[10];
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = sub_145230();
  uint64_t v31 = *(void *)(v30 - 8);
  char v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = sub_A314(&qword_19C150);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_D0D60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  int v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *int v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_145230();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v36 = sub_A314(&qword_19C150);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *sub_D10E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_145230();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_D1320(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19EB20);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  int v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  int v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  uint64_t v37 = sub_145230();
  uint64_t v38 = *(void *)(v37 - 8);
  char v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_12;
  }
  if (v41)
  {
LABEL_12:
    uint64_t v42 = sub_A314(&qword_19C150);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_D165C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D1670);
}

uint64_t sub_D1670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_D17A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D17B8);
}

uint64_t sub_D17B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s10MusicAssetC9MusicDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1708);
}

void sub_D190C()
{
  sub_A6D70(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_A6D70(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_D1A38()
{
  return swift_retain();
}

uint64_t sub_D1A48(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10MusicAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_D1A60()
{
  return sub_D0340();
}

uint64_t sub_D1A84()
{
  return sub_D1B14(&qword_19C800, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_D1ACC()
{
  return sub_D1B14(&qword_1A1758, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_D1B14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_D1B5C()
{
  unint64_t result = qword_1A17A0;
  if (!qword_1A17A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A17A0);
  }
  return result;
}

uint64_t sub_D1BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D1C14(uint64_t a1)
{
  uint64_t v2 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D1C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s10MusicAssetC9MusicDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xD1DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10MusicAssetC9MusicDataV10CodingKeysOMa()
{
  return &_s10MusicAssetC9MusicDataV10CodingKeysON;
}

unint64_t sub_D1DDC()
{
  unint64_t result = qword_1A17B0;
  if (!qword_1A17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A17B0);
  }
  return result;
}

unint64_t sub_D1E34()
{
  unint64_t result = qword_1A17B8;
  if (!qword_1A17B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A17B8);
  }
  return result;
}

unint64_t sub_D1E8C()
{
  unint64_t result = qword_1A17C0;
  if (!qword_1A17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A17C0);
  }
  return result;
}

uint64_t sub_D1EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000000014E940 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

id sub_D223C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v11[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_sizeType] = 4;
  *(void *)&v11[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_isAssetFinishedLoading] = 0;

  v13.receiver = v11;
  v13.super_class = (Class)type metadata accessor for JournalAssetView();
  return objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
}

id sub_D2350(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v5[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_sizeType] = 4;
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_isAssetFinishedLoading] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for JournalAssetView();
  id v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_D2454()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for JournalAssetView()
{
  return self;
}

void *sub_D24F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v10[4] = a9;
  v10[5] = a10;
  type metadata accessor for CoreDataStackConfiguration();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = a5;
  *(void *)(v18 + 64) = a9;
  *(void *)(v18 + 72) = a10;
  v10[2] = v18;
  type metadata accessor for CloudKitStackConfiguration();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a5;
  v10[3] = v19;
  swift_bridgeObjectRetain();
  id v20 = a5;
  return v10;
}

uint64_t sub_D25C4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataStackConfiguration()
{
  return self;
}

uint64_t sub_D2630@<X0>(char *a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  objc_super v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (id *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  sub_463EC(v1, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v11 = (id *)((char *)v11 + *(int *)(sub_A314(&qword_19D368) + 48));
      goto LABEL_4;
    default:
LABEL_4:
      sub_D49E4((uint64_t)v11, (uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      sub_463EC((uint64_t)v17, (uint64_t)v15, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v19 = v23;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v15, v5);
      }
      else
      {
        type metadata accessor for Journaling();
        sub_621B8((uint64_t)v4);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_296E0((uint64_t)v4);
          uint64_t v20 = 1;
          uint64_t v19 = v23;
          goto LABEL_10;
        }
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21(v8, v4, v5);
        uint64_t v19 = v23;
        v21(v23, v8, v5);
      }
      uint64_t v20 = 0;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v20, 1, v5);
      return sub_D41FC((uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
  }
}

uint64_t sub_D29F8()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A18C8);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_1A18C8);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_D2AC0()
{
  sub_D41FC(v0 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_D2B4C()
{
  return type metadata accessor for AssetAttachment(0);
}

uint64_t type metadata accessor for AssetAttachment(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1908);
}

uint64_t sub_D2B74()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssetAttachment.AssetType(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1A10);
}

char *sub_D2C3C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = *a2;
        *(void *)a1 = *a2;
        uint64_t v14 = v13;
        goto LABEL_18;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 4u:
        objc_super v8 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(sub_A314(&qword_19D368) + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (char **)((char *)a2 + v9);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_144F60();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        }
        else
        {
          uint64_t v15 = v11[1];
          *(void *)uint64_t v10 = *v11;
          *((void *)v10 + 1) = v15;
          swift_bridgeObjectRetain();
        }
        goto LABEL_17;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v6 = sub_144F60();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        }
        else
        {
LABEL_16:
          uint64_t v16 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v16;
          swift_bridgeObjectRetain();
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AssetAttachment.AssetType.FilePathType(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1AB8);
}

void sub_D2FC4(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_6;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 4u:
      swift_bridgeObjectRelease();
      a1 = (void **)((char *)a1 + *(int *)(sub_A314(&qword_19D368) + 48));
LABEL_6:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v3 = sub_144F60();
        id v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
        v4(a1, v3);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

void *sub_D30F0(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v4 = *(void **)a2;
      *a1 = *(void *)a2;
      id v5 = v4;
      goto LABEL_15;
    case 2u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 3u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_8;
      }
      goto LABEL_11;
    case 4u:
      uint64_t v7 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_A314(&qword_19D368) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_144F60();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      }
      else
      {
        uint64_t v13 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v13;
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    default:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_8:
        uint64_t v6 = sub_144F60();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      }
      else
      {
LABEL_11:
        uint64_t v12 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void **sub_D3408(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_D41FC((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        id v10 = v9;
        goto LABEL_16;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v5 = *(int *)(sub_A314(&qword_19D368) + 48);
        uint64_t v6 = (void **)((char *)a1 + v5);
        uint64_t v7 = (void **)((char *)a2 + v5);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = sub_144F60();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        }
        else
        {
          void *v6 = *v7;
          v6[1] = v7[1];
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v4 = sub_144F60();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        }
        else
        {
LABEL_12:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_D376C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 3u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_7:
        uint64_t v7 = sub_144F60();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_11:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      goto LABEL_13;
    case 4u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_A314(&qword_19D368) + 48);
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_144F60();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_D3AB8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_D41FC((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 2u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 3u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v7 = sub_144F60();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_12:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        goto LABEL_14;
      case 4u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_A314(&qword_19D368) + 48);
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_144F60();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_D3E30()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType.FilePathType(319);
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v5 = v3;
    uint64_t v6 = v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_D3EE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_144F60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_D3FE0(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_144F60();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_D4070(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_144F60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_D4120(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_D41FC((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_144F60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_D41FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_D425C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_144F60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_D4314(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_D41FC((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_144F60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_D43F0()
{
  uint64_t result = sub_144F60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_D4484(void *a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = [a1 filePath];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_145BC0();
    uint64_t v9 = v8;

    signed int v10 = [a1 index];
    id v11 = [a1 name];
    uint64_t v43 = v2;
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_145BC0();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v41 = v10;
    id v23 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v42 = v7;
    NSString v24 = sub_145B80();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithString:v24];

    id v26 = [v25 lastPathComponent];
    sub_145BC0();

    id v27 = objc_allocWithZone((Class)NSString);
    NSString v28 = sub_145B80();
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithString:v28];

    id v30 = [v29 stringByDeletingPathExtension];
    uint64_t v31 = sub_145BC0();
    uint64_t v33 = v32;

    if (v15)
    {
      if (v13 == 0x6567616D69 && v15 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v42;
LABEL_14:
        int v34 = v4;
LABEL_17:
        uint64_t v36 = v41;
        v34[1] = v9;
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        type metadata accessor for AssetAttachment(0);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        sub_D49E4((uint64_t)v4, v37 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_fileNameID);
        *uint64_t v38 = v31;
        v38[1] = v33;
        return v37;
      }
      uint64_t v35 = v42;
      if (v13 == 0x6F65646976 && v15 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      if (v13 == 0x6F69647561 && v15 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();

LABEL_30:
        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      char v40 = sub_146B90();

      if (v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {

      uint64_t v35 = v42;
    }
    int v34 = (uint64_t *)((char *)v4 + *(int *)(sub_A314(&qword_19D368) + 48));
    *uint64_t v4 = v13;
    v4[1] = v15;
    uint64_t *v34 = v35;
    goto LABEL_17;
  }
  if (qword_19AFE8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_145760();
  sub_C584(v16, (uint64_t)qword_1A18C8);
  id v17 = a1;
  uint64_t v18 = sub_145740();
  os_log_type_t v19 = sub_1461F0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    id v44 = v17;
    id v22 = v17;
    sub_146610();
    *uint64_t v21 = v17;

    _os_log_impl(&def_94138, v18, v19, "AssetAttachment.init error, missing filePath. AttachmentMO: %@", v20, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_D49E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_D4A4C(uint64_t a1, void *a2, void *a3)
{
  type metadata accessor for JurassicAlertController();
  uint64_t v5 = self;
  uint64_t v6 = (objc_class *)[v5 settingsBundle];
  v27._countAndFlagsBits = 0x80000000001515E0;
  v33._object = (void *)0x80000000001515C0;
  v33._countAndFlagsBits = 0xD000000000000017;
  v37.value._countAndFlagsBits = 0;
  v37.value._object = 0;
  v7.super.isa = v6;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  sub_144CC0(v33, v37, v7, v41, v27);

  uint64_t v8 = (objc_class *)[v5 settingsBundle];
  v34._countAndFlagsBits = 0xD00000000000001BLL;
  v28._countAndFlagsBits = 0x8000000000151620;
  v34._object = (void *)0x8000000000151600;
  v38.value._countAndFlagsBits = 0;
  v38.value._object = 0;
  v9.super.isa = v8;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  sub_144CC0(v34, v38, v9, v42, v28);

  NSString v10 = sub_145B80();
  swift_bridgeObjectRelease();
  NSString v11 = sub_145B80();
  swift_bridgeObjectRelease();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  uint64_t v13 = (objc_class *)[v5 settingsBundle];
  v29._countAndFlagsBits = 0xE600000000000000;
  v35._countAndFlagsBits = 0x6C65636E6143;
  v35._object = (void *)0xE600000000000000;
  v39.value._countAndFlagsBits = 0;
  v39.value._object = 0;
  v14.super.isa = v13;
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  sub_144CC0(v35, v39, v14, v43, v29);

  NSString v15 = sub_145B80();
  swift_bridgeObjectRelease();
  uint64_t v16 = self;
  id v17 = [v16 actionWithTitle:v15 style:1 handler:0];

  [v12 addAction:v17];
  uint64_t v18 = (objc_class *)[v5 settingsBundle];
  v30._countAndFlagsBits = 0xE900000000000074;
  v36._countAndFlagsBits = 0x74726F707845;
  v36._object = (void *)0xE600000000000000;
  v40.value._countAndFlagsBits = 0;
  v40.value._object = 0;
  v19.super.isa = v18;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  sub_144CC0(v36, v40, v19, v44, v30);

  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = a1;
  v21[4] = a2;
  v21[5] = a3;
  swift_bridgeObjectRetain();
  id v22 = a2;
  id v23 = a3;
  swift_retain();
  NSString v24 = sub_145B80();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_D78E0;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_538EC;
  aBlock[3] = &unk_189720;
  id v25 = _Block_copy(aBlock);
  swift_release();
  id v26 = [v16 actionWithTitle:v24 style:0 handler:v25];
  _Block_release(v25);
  swift_release();

  [v12 addAction:v26];
  [v23 presentViewController:v12 animated:1 completion:0];
}

uint64_t sub_D4E80()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A1AF0);
  sub_C584(v0, (uint64_t)qword_1A1AF0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

void sub_D4F74(uint64_t a1, void *a2, int a3, void *a4)
{
  int v77 = a3;
  id v81 = a2;
  uint64_t v82 = a1;
  uint64_t v6 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v85 = &v69[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_A314((uint64_t *)&unk_1A1B70);
  __chkstk_darwin(v8 - 8);
  v78 = &v69[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_145290();
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  __chkstk_darwin(v10);
  char v71 = &v69[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_144E20();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  NSString v15 = &v69[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_144F60();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v69[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v18);
  char v72 = &v69[-v22];
  __chkstk_darwin(v21);
  id v73 = &v69[-v23];
  NSString v24 = (int *)type metadata accessor for ExportOptions();
  uint64_t v76 = *((void *)v24 - 1);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v79 = v26;
  uint64_t v80 = &v69[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  char v86 = &v69[-v27];
  swift_unknownObjectWeakAssign();
  id v28 = sub_D5968();
  uint64_t v29 = OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController;
  Swift::String v30 = *(void **)&v4[OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController];
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController] = v28;

  uint64_t v83 = v4;
  uint64_t v31 = *(void **)&v4[v29];
  if (v31)
  {
    id v84 = v31;
    objc_msgSend(a4, "presentViewController:animated:completion:");
    if (qword_19AE00 != -1) {
      swift_once();
    }
    uint64_t v32 = v72;
    if (qword_1A3BB0)
    {
      sub_29058(qword_1A3BA8, (void *)qword_1A3BB0, (uint64_t)v20);
      Swift::String v33 = *(void (**)(unsigned char *))(v13 + 104);
      unsigned int v70 = enum case for URL.DirectoryHint.inferFromPath(_:);
      v33(v15);
      sub_12060();
      sub_144F40();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v20, v16);
    }
    else
    {
      sub_144EA0();
      unsigned int v70 = enum case for URL.DirectoryHint.inferFromPath(_:);
    }
    uint64_t v87 = 0x2D74726F707845;
    unint64_t v88 = 0xE700000000000000;
    Swift::String v34 = v71;
    sub_145280();
    uint64_t v35 = sub_145240();
    Swift::String_optional v37 = v36;
    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v34, v75);
    v90._countAndFlagsBits = v35;
    v90._object = v37;
    sub_145C90(v90);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, void, uint64_t))(v13 + 104))(v15, v70, v12);
    sub_12060();
    Swift::String_optional v38 = v73;
    sub_144F50();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v32, v16);
    Swift::String_optional v39 = v86;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v86, v38, v16);
    v39[v24[5]] = v77;
    v39[v24[6]] = 1;
    Swift::String_optional v40 = &v39[v24[7]];
    void *v40 = 0xD000000000000013;
    v40[1] = 0x8000000000151670;
    Swift::String v41 = &v39[v24[8]];
    void *v41 = 0x73656972746E45;
    v41[1] = 0xE700000000000000;
    Swift::String v42 = &v39[v24[9]];
    *Swift::String v42 = 0x656372756F736552;
    v42[1] = 0xE900000000000073;
    Swift::String v43 = &v39[v24[10]];
    strcpy(v43, "Journal.html");
    v43[13] = 0;
    *((_WORD *)v43 + 7) = -5120;
    Swift::String v44 = &v39[v24[11]];
    void *v44 = 0xD000000000000017;
    v44[1] = 0x8000000000151690;
    *(int64x2_t *)&v39[v24[12]] = vdupq_n_s64(0x406F400000000000uLL);
    uint64_t v45 = v24[13];
    id v46 = [objc_allocWithZone((Class)NSProgress) init];
    *(void *)&v39[v45] = v46;
    char v47 = (objc_class *)type metadata accessor for AlertProgressContentViewController();
    Swift::String v48 = (char *)objc_allocWithZone(v47);
    *(void *)&v48[OBJC_IVAR____TtC15JournalSettingsP33_D4BC7CE3092874972FE10FC5EDA6053234AlertProgressContentViewController_progress] = v46;
    v89.receiver = v48;
    v89.super_class = v47;
    id v49 = v46;
    id v50 = objc_msgSendSuper2(&v89, "initWithNibName:bundle:", 0, 0);
    [v50 preferredContentSize];
    objc_msgSend(v50, "setPreferredContentSize:");
    [v84 setContentViewController:v50];

    uint64_t v51 = v78;
    sub_12AAC((uint64_t)v39, (uint64_t)v78);
    uint64_t v52 = v76;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v76 + 56))(v51, 0, 1, v24);
    uint64_t v53 = v83;
    uint64_t v54 = (uint64_t)&v83[OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportOptions];
    swift_beginAccess();
    sub_D7904((uint64_t)v51, v54);
    swift_endAccess();
    uint64_t v55 = OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportTask;
    if (*(void *)&v53[OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportTask])
    {
      if (qword_19AFF0 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_145760();
      sub_C584(v56, (uint64_t)qword_1A1AF0);
      char v57 = sub_145740();
      os_log_type_t v58 = sub_1461F0();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v59 = 0;
        _os_log_impl(&def_94138, v57, v58, "ExportManager.startExport previous currentExportTask is not nil. This is unexpected.", v59, 2u);
        swift_slowDealloc();
      }

      if (*(void *)&v53[v55])
      {
        swift_retain();
        sub_145F60();
        swift_release();
      }
      *(void *)&v53[v55] = 0;
      swift_release();
    }
    uint64_t v60 = sub_145F50();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v85, 1, 1, v60);
    unint64_t v61 = v80;
    sub_12AAC((uint64_t)v86, (uint64_t)v80);
    sub_145F30();
    uint64_t v62 = v82;
    swift_bridgeObjectRetain();
    id v81 = v81;
    uint64_t v63 = v53;
    uint64_t v64 = sub_145F20();
    uint64_t v65 = v53;
    unint64_t v66 = (*(unsigned __int8 *)(v52 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v67 = (v79 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v68 = (void *)swift_allocObject();
    v68[2] = v64;
    v68[3] = &protocol witness table for MainActor;
    v68[4] = v62;
    sub_D7AE8((uint64_t)v61, (uint64_t)v68 + v66);
    *(void *)((char *)v68 + v67) = v81;
    *(void *)((char *)v68 + ((v67 + 15) & 0xFFFFFFFFFFFFFFF8)) = v63;
    *(void *)&v65[v55] = sub_76884((uint64_t)v85, (uint64_t)&unk_1A1B88, (uint64_t)v68);

    swift_release();
    sub_12B10((uint64_t)v86);
  }
}

id sub_D5968()
{
  uint64_t v0 = self;
  id v1 = (objc_class *)[v0 settingsBundle];
  v15._countAndFlagsBits = 0x8000000000151750;
  v19._object = (void *)0x8000000000151730;
  v19._countAndFlagsBits = 0xD000000000000019;
  v22.value._countAndFlagsBits = 0;
  v22.value._object = 0;
  v2.super.isa = v1;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_144CC0(v19, v22, v2, v25, v15);

  uint64_t v3 = (objc_class *)[v0 settingsBundle];
  v20._countAndFlagsBits = 0xD00000000000003CLL;
  v16._countAndFlagsBits = 0x80000000001517C0;
  v20._object = (void *)0x8000000000151780;
  v23.value._countAndFlagsBits = 0;
  v23.value._object = 0;
  v4.super.isa = v3;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  sub_144CC0(v20, v23, v4, v26, v16);

  type metadata accessor for JurassicAlertController();
  NSString v5 = sub_145B80();
  swift_bridgeObjectRelease();
  NSString v6 = sub_145B80();
  swift_bridgeObjectRelease();
  id v7 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v5 message:v6 preferredStyle:1];

  uint64_t v8 = (objc_class *)[v0 settingsBundle];
  v17._countAndFlagsBits = 0xE600000000000000;
  v21._countAndFlagsBits = 0x6C65636E6143;
  v21._object = (void *)0xE600000000000000;
  v24.value._countAndFlagsBits = 0;
  v24.value._object = 0;
  v9.super.isa = v8;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  sub_144CC0(v21, v24, v9, v27, v17);

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v11 = sub_145B80();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_D7E64;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_538EC;
  aBlock[3] = &unk_189860;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  id v13 = [self actionWithTitle:v11 style:1 handler:v12];
  _Block_release(v12);
  swift_release();

  [v7 addAction:v13];
  return v7;
}

uint64_t sub_D5C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  uint64_t v8 = sub_144E20();
  v7[26] = v8;
  v7[27] = *(void *)(v8 - 8);
  v7[28] = swift_task_alloc();
  uint64_t v9 = sub_144F60();
  v7[29] = v9;
  v7[30] = *(void *)(v9 - 8);
  v7[31] = swift_task_alloc();
  uint64_t v10 = sub_145EE0();
  v7[32] = v10;
  v7[33] = *(void *)(v10 - 8);
  v7[34] = swift_task_alloc();
  v7[35] = type metadata accessor for ExportOptions();
  v7[36] = swift_task_alloc();
  sub_145F30();
  v7[37] = sub_145F20();
  uint64_t v12 = sub_145EB0();
  v7[38] = v12;
  v7[39] = v11;
  return _swift_task_switch(sub_D5E50, v12, v11);
}

uint64_t sub_D5E50()
{
  id v1 = self;
  v0[40] = v1;
  id v2 = [v1 sharedApplication];
  [v2 setIdleTimerDisabled:1];

  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_19BE20 + dword_19BE20);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[41] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_D5F38;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[22];
  return v8(v6, v4, v5);
}

uint64_t sub_D5F38()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_D64CC;
  }
  else {
    uint64_t v5 = sub_D6074;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_D6074()
{
  uint64_t v40 = v0;
  swift_release();
  if (qword_19AFF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = sub_145760();
  sub_C584(v3, (uint64_t)qword_1A1AF0);
  sub_12AAC(v2, v1);
  uint64_t v4 = sub_145740();
  os_log_type_t v5 = sub_146210();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 288);
  if (v6)
  {
    os_log_type_t type = v5;
    uint64_t v8 = *(void *)(v0 + 280);
    Swift::String v34 = v4;
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v32 = *(void *)(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 216);
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136315138;
    uint64_t v14 = (void *)(v7 + *(int *)(v8 + 44));
    uint64_t v15 = v14[1];
    *(void *)(v0 + 112) = *v14;
    *(void *)(v0 + 120) = v15;
    unsigned int v36 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v35 = *(void (**)(uint64_t))(v12 + 104);
    v35(v10);
    sub_12060();
    swift_bridgeObjectRetain();
    sub_144F50();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    sub_D7CBC((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v16 = sub_146B50();
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v32);
    *(void *)(v0 + 168) = sub_3D2B4(v16, v18, &v39);
    sub_146610();
    swift_bridgeObjectRelease();
    sub_12B10(v7);
    _os_log_impl(&def_94138, v34, type, "Export succeeded: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    Swift::String v19 = (void (*)(uint64_t, uint64_t, uint64_t))v35;
    uint64_t v20 = v36;
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 216);
    sub_12B10(*(void *)(v0 + 288));

    uint64_t v20 = enum case for URL.DirectoryHint.inferFromPath(_:);
    Swift::String v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
  }
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 216);
  *(void *)typea = *(void *)(v0 + 232);
  Swift::String v27 = (void *)(*(void *)(v0 + 184) + *(int *)(*(void *)(v0 + 280) + 44));
  uint64_t v28 = v27[1];
  *(void *)(v0 + 128) = *v27;
  *(void *)(v0 + 136) = v28;
  v19(v24, v20, v25);
  sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  sub_D6B5C(v22);
  (*(void (**)(uint64_t, os_log_type_t *))(v23 + 8))(v22, *(os_log_type_t **)typea);
  id v29 = [*(id *)(v0 + 320) sharedApplication];
  [v29 setIdleTimerDisabled:0];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_D64CC()
{
  uint64_t v1 = v0[42];
  swift_release();
  v0[20] = v1;
  swift_errorRetain();
  sub_A314(&qword_19C160);
  char v2 = swift_dynamicCast();
  uint64_t v3 = v0[42];
  if (v2)
  {
    swift_errorRelease();
    if (qword_19AFF0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_145760();
    sub_C584(v4, (uint64_t)qword_1A1AF0);
    os_log_type_t v5 = sub_145740();
    os_log_type_t v6 = sub_146210();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&def_94138, v5, v6, "Export was canceled", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v0[33];
    uint64_t v8 = v0[34];
    uint64_t v10 = v0[32];

    sub_12584();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  else
  {
    swift_errorRelease();
    v0[19] = v3;
    swift_errorRetain();
    if (swift_dynamicCast() && *((unsigned char *)v0 + 344) == 3)
    {
      swift_errorRelease();
      if (qword_19AFF0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_145760();
      sub_C584(v11, (uint64_t)qword_1A1AF0);
      uint64_t v12 = sub_145740();
      os_log_type_t v13 = sub_146210();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&def_94138, v12, v13, "Nothing to export", v14, 2u);
        swift_slowDealloc();
      }
      uint64_t v15 = v0[25];

      sub_12584();
      uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController);
      if (v16)
      {
        uint64_t v17 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v0[6] = sub_D7C98;
        v0[7] = v17;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = sub_10478;
        v0[5] = &unk_189798;
        unint64_t v18 = _Block_copy(v0 + 2);
        id v19 = v16;
        swift_release();
        [v19 dismissViewControllerAnimated:1 completion:v18];
        _Block_release(v18);
      }
    }
    else
    {
      swift_errorRelease();
      if (qword_19AFF0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_145760();
      sub_C584(v20, (uint64_t)qword_1A1AF0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v21 = sub_145740();
      os_log_type_t v22 = sub_1461F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138412290;
        swift_errorRetain();
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        v0[18] = v24;
        sub_146610();
        *uint64_t v33 = v24;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&def_94138, v21, v22, "Export failed: %@", v23, 0xCu);
        sub_A314(&qword_19B200);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v25 = v0[25];

      sub_12584();
      uint64_t v26 = *(void **)(v25 + OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController);
      if (v26)
      {
        uint64_t v27 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v0[12] = sub_D7C90;
        v0[13] = v27;
        v0[8] = _NSConcreteStackBlock;
        v0[9] = 1107296256;
        v0[10] = sub_10478;
        v0[11] = &unk_189770;
        uint64_t v28 = _Block_copy(v0 + 8);
        id v29 = v26;
        swift_release();
        [v29 dismissViewControllerAnimated:1 completion:v28];
        swift_errorRelease();
        _Block_release(v28);

        goto LABEL_23;
      }
    }
  }
  swift_errorRelease();
LABEL_23:
  id v30 = [(id)v0[40] sharedApplication];
  [v30 setIdleTimerDisabled:0];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_D6B5C(uint64_t a1)
{
  uint64_t v2 = sub_145940();
  uint64_t v23 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145980();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_144F60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_48534();
  uint64_t v12 = (void *)sub_146320();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v20;
  *(void *)(v14 + 16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v11, v8);
  aBlock[4] = sub_D7CA4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  aBlock[3] = &unk_1897E8;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v15;
  sub_145950();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_D7CBC((unint64_t *)&qword_19EAB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  sub_1466C0();
  sub_146330();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  return swift_release();
}

void sub_D6ED0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = self;
      uint64_t v5 = (objc_class *)[v4 settingsBundle];
      v16._countAndFlagsBits = 0x80000000001516D0;
      v18._object = (void *)0x80000000001516B0;
      v18._countAndFlagsBits = 0xD000000000000013;
      v20.value._countAndFlagsBits = 0;
      v20.value._object = 0;
      v6.super.isa = v5;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      uint64_t v7 = sub_144CC0(v18, v20, v6, v22, v16);
      uint64_t v9 = v8;

      uint64_t v10 = (objc_class *)[v4 settingsBundle];
      v19._countAndFlagsBits = 0xD000000000000014;
      v17._countAndFlagsBits = 0x8000000000151710;
      v19._object = (void *)0x80000000001516F0;
      v21.value._countAndFlagsBits = 0;
      v21.value._object = 0;
      v11.super.isa = v10;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      uint64_t v12 = sub_144CC0(v19, v21, v11, v23, v17);
      uint64_t v14 = v13;

      id v15 = sub_137274(v7, v9, v12, v14, (uint64_t)nullsub_1, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = v15;
    }
  }
}

void sub_D708C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_D70E8(0, 0);
  }
}

void sub_D70E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (objc_class *)[self settingsBundle];
  v11._countAndFlagsBits = 0xED000064656C6961;
  v14._countAndFlagsBits = 0x662074726F707845;
  v14._object = (void *)0xED000064656C6961;
  v15.value._countAndFlagsBits = 0;
  v15.value._object = 0;
  v4.super.isa = v3;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  sub_144CC0(v14, v15, v4, v16, v11);

  swift_bridgeObjectRetain();
  NSString v5 = sub_145B80();
  swift_bridgeObjectRelease();
  if (a2)
  {
    NSString v6 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  type metadata accessor for JurassicAlertController();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v5 message:v6 preferredStyle:1];

  if (qword_19AD28 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v7 = sub_145B80();
  swift_bridgeObjectRelease();
  id v8 = [self actionWithTitle:v7 style:0 handler:0];

  [v12 addAction:v8];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

void sub_D7320()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (*(void *)&Strong[OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportTask])
    {
      swift_retain();
      sub_145F60();

      swift_release();
    }
    else
    {
    }
  }
}

void sub_D73BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_D4F74(a3, a4, 0, a5);
  }
}

void sub_D7438(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  NSString v7 = *(void **)&a1[OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController];
  if (v7)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_D7DD4;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10478;
    aBlock[3] = &unk_189838;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = v7;
    id v12 = a1;
    swift_release();
    [v11 dismissViewControllerAnimated:1 completion:v10];
    _Block_release(v10);
  }
}

void sub_D760C(uint64_t a1, uint64_t a2)
{
  sub_A314(&qword_19EB70);
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1578A0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  id v8 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v8 initForExportingURLs:isa asCopy:1];

  [v12 setDelegate:a1];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

uint64_t sub_D7858()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D7890()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_D78E0(uint64_t a1)
{
  sub_D73BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_D78EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_D78FC()
{
  return swift_release();
}

uint64_t sub_D7904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314((uint64_t *)&unk_1A1B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_D796C()
{
  uint64_t v1 = (int *)(type metadata accessor for ExportOptions() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3;
  uint64_t v8 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v4);
}

uint64_t sub_D7AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_D7B4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ExportOptions() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_21598;
  return sub_D5C70(a1, v7, v8, v9, v10, v11, v12);
}

void sub_D7C90()
{
}

void sub_D7C98()
{
}

uint64_t sub_D7CA4()
{
  return sub_D7DEC((uint64_t (*)(uint64_t, uint64_t))sub_D7438);
}

uint64_t sub_D7CBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_D7D08()
{
  uint64_t v1 = sub_144F60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D7DD4()
{
  return sub_D7DEC((uint64_t (*)(uint64_t, uint64_t))sub_D760C);
}

uint64_t sub_D7DEC(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_144F60() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

void sub_D7E64()
{
}

double *sub_D7E94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_2CC98(0, v1, 0);
  uint64_t result = (double *)sub_DBABC(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  char v8 = v7 & 1;
  uint64_t v9 = a1 + 64;
  uint64_t v25 = v4;
  int64_t v26 = v1;
  uint64_t v27 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v5 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_32;
    }
    uint64_t v28 = v4;
    char v24 = v8;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    uint64_t result = (double *)sub_DBB6C(v14, v15);
    if (result == 12) {
      char v16 = 11;
    }
    else {
      char v16 = (char)result;
    }
    double v18 = _swiftEmptyArrayStorage[2];
    double v17 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v18 >= *(void *)&v17 >> 1) {
      uint64_t result = (double *)sub_2CC98(*(void *)&v17 > 1uLL, *(void *)&v18 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v18 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + *(void *)&v18) = v16;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_33;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v19 = *(void *)(v27 + 8 * v12);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_35;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v26;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v26;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (!v23)
        {
          unint64_t v21 = v12 + 2;
          if (v12 + 2 >= v22) {
            goto LABEL_4;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (!v23)
          {
            unint64_t v21 = v12 + 3;
            if (v12 + 3 >= v22) {
              goto LABEL_4;
            }
            unint64_t v23 = *(void *)(v27 + 8 * v21);
            if (!v23)
            {
              while (v22 - 4 != v12)
              {
                unint64_t v23 = *(void *)(a1 + 96 + 8 * v12++);
                if (v23)
                {
                  uint64_t result = (double *)sub_262F8(v5, v28, v24 & 1);
                  unint64_t v21 = v12 + 3;
                  goto LABEL_20;
                }
              }
              uint64_t result = (double *)sub_262F8(v5, v28, v24 & 1);
              goto LABEL_4;
            }
          }
        }
LABEL_20:
        int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    char v8 = 0;
    ++v6;
    uint64_t v4 = v25;
    uint64_t v5 = v10;
    if (v6 == v11) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

double sub_D8128@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1378A8(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_C738(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_D818C()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A1B98);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_1A1B98);
  if (qword_19AF40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D10);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_D8254(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_145760();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v344 = (char *)&v312 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19C150);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v336 = (char *)&v312 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v346 = (char *)&v312 - v10;
  uint64_t v350 = sub_145230();
  int64_t v11 = *(char **)(v350 - 8);
  uint64_t v12 = __chkstk_darwin(v350);
  v326 = (char *)&v312 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v339 = (char *)&v312 - v15;
  __chkstk_darwin(v14);
  v327 = (char *)&v312 - v16;
  uint64_t v371 = 0;
  uint64_t v17 = sub_145290();
  v323 = *(NSObject **)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v312 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  v329 = (char *)&v312 - v22;
  __chkstk_darwin(v21);
  v347 = (char *)&v312 - v23;
  uint64_t v363 = sub_A314(&qword_19BC98);
  uint64_t v24 = __chkstk_darwin(v363);
  v349 = (char *)&v312 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v362 = (uint64_t)&v312 - v26;
  uint64_t v27 = sub_A314(&qword_19B730);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  v325 = (char *)&v312 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v312 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v312 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v352 = (uint64_t)&v312 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v341 = (char *)&v312 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v364 = (uint64_t)&v312 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v366 = (char *)&v312 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v357 = (uint64_t)&v312 - v45;
  __chkstk_darwin(v44);
  uint64_t v367 = (uint64_t)&v312 - v46;
  id result = [a1 userInfo];
  if (!result) {
    return result;
  }
  Swift::String v48 = result;
  v345 = v35;
  v333 = v32;
  uint64_t v49 = sub_1459E0();

  unint64_t v382 = 0xD000000000000027;
  unint64_t v383 = 0x8000000000151800;
  v381 = &_swiftEmptySetSingleton;
  uint64_t v389 = sub_145BC0();
  uint64_t v390 = v50;
  sub_146780();
  uint64_t v51 = *(void *)(v49 + 16);
  uint64_t v324 = v49;
  if (v51 && (unint64_t v52 = sub_1378A8((uint64_t)&v375), (v53 & 1) != 0))
  {
    sub_C738(*(void *)(v49 + 56) + 32 * v52, (uint64_t)&v378);
  }
  else
  {
    Swift::String v378 = (Swift::String)0;
    v379[0] = 0u;
  }
  sub_884F8((uint64_t)&v375);
  uint64_t v370 = v2;
  uint64_t v331 = v5;
  uint64_t v332 = v4;
  uint64_t v365 = v17;
  v315 = v20;
  if (*((void *)&v379[0] + 1))
  {
    sub_A314(&qword_1A1BC0);
    if (swift_dynamicCast())
    {
      uint64_t v54 = v389;
      if ((v389 & 0xC000000000000001) != 0)
      {
        if (sub_146710() > 0)
        {
          v375._id countAndFlagsBits = 40;
          v375._object = (void *)0xE100000000000000;
          uint64_t v55 = sub_146710();
LABEL_14:
          v368 = v11;
          v378._id countAndFlagsBits = v55;
          v394._id countAndFlagsBits = sub_146B50();
          sub_145C90(v394);
          swift_bridgeObjectRelease();
          v395._id countAndFlagsBits = 0x73747265736E6920;
          v395._object = (void *)0xEB00000000203A29;
          sub_145C90(v395);
          sub_145C90(v375);
          swift_bridgeObjectRelease();
          if ((v54 & 0xC000000000000001) != 0)
          {
            sub_146700();
            sub_C84C(0, &qword_1A1BC8);
            sub_DBA54();
            sub_145FE0();
            uint64_t v54 = v384;
            uint64_t v56 = v385;
            char v57 = v386;
            os_log_type_t v58 = v387;
            uint64_t v59 = (uint64_t)v388;
          }
          else
          {
            os_log_type_t v58 = 0;
            uint64_t v235 = -1 << *(unsigned char *)(v54 + 32);
            uint64_t v56 = v54 + 56;
            uint64_t v236 = ~v235;
            uint64_t v237 = -v235;
            if (v237 < 64) {
              uint64_t v238 = ~(-1 << v237);
            }
            else {
              uint64_t v238 = -1;
            }
            uint64_t v59 = v238 & *(void *)(v54 + 56);
            char v57 = v236;
          }
          v372 = (v54 & 0x7FFFFFFFFFFFFFFFLL);
          v361 = v57;
          int64_t v239 = (unint64_t)&v57[8] >> 6;
          p_name = &stru_190FF8.name;
          v369 = ((char *)&type metadata for Swift.AnyObject + 8);
          if ((v54 & 0x8000000000000000) == 0) {
            goto LABEL_226;
          }
LABEL_219:
          uint64_t v241 = sub_146740();
          if (!v241) {
            goto LABEL_305;
          }
          v378._id countAndFlagsBits = v241;
          sub_C84C(0, &qword_1A1BC8);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id countAndFlagsBits = (id)v375._countAndFlagsBits;
          swift_unknownObjectRelease();
          v243 = v58;
          os_log_t v374 = (os_log_t)v59;
          if (!countAndFlagsBits) {
            goto LABEL_305;
          }
          while (1)
          {
            v373 = v243;
            v375._id countAndFlagsBits = 2107914;
            v375._object = (void *)0xE300000000000000;
            v405._id countAndFlagsBits = sub_E71EC();
            sub_145C90(v405);
            swift_bridgeObjectRelease();
            sub_145C90(v375);
            swift_bridgeObjectRelease();
            type metadata accessor for JournalEntryAssetMO();
            uint64_t v248 = swift_dynamicCastClass();
            if (!v248) {
              goto LABEL_224;
            }
            v249 = (void *)v248;
            id v250 = countAndFlagsBits;
            id v251 = [v249 entry];
            if (v251)
            {
              v252 = v251;
              id v253 = objc_msgSend(v251, p_name[457]);
            }
            else
            {
              id v253 = 0;
            }
            id v254 = objc_msgSend(*(id *)(v370 + 32), p_name[457]);
            id countAndFlagsBits = v254;
            if (v253)
            {
              if (!v254)
              {

                goto LABEL_225;
              }
              sub_C84C(0, &qword_19B750);
              id v255 = v253;
              char v256 = sub_1464B0();

              p_name = (char **)(&stru_190FF8 + 8);
              if ((v256 & 1) == 0)
              {

                goto LABEL_225;
              }
            }
            else if (v254)
            {

LABEL_224:
LABEL_225:
              os_log_type_t v58 = v373;
              uint64_t v59 = (uint64_t)v374;
              if (v54 < 0) {
                goto LABEL_219;
              }
              goto LABEL_226;
            }
            id v257 = [v249 assetType];
            if (v257)
            {
              v258 = v257;
              uint64_t v259 = sub_145BC0();
              uint64_t v261 = v260;

              if (v259 == 0x697463656C666572 && v261 == 0xEA00000000006E6FLL)
              {
                swift_bridgeObjectRelease();
LABEL_257:
                Swift::Int v263 = 4;
                goto LABEL_259;
              }
              char v262 = sub_146B90();
              swift_bridgeObjectRelease();
              if (v262) {
                goto LABEL_257;
              }
            }
            Swift::Int v263 = 1;
LABEL_259:
            sub_E985C(&v375, v263);

            os_log_type_t v58 = v373;
            uint64_t v59 = (uint64_t)v374;
            p_name = (char **)(&stru_190FF8 + 8);
            if (v54 < 0) {
              goto LABEL_219;
            }
LABEL_226:
            if (v59)
            {
              os_log_t v374 = (os_log_t)((v59 - 1) & v59);
              unint64_t v244 = __clz(__rbit64(v59)) | ((void)v58 << 6);
              v243 = v58;
            }
            else
            {
              int64_t v245 = (int64_t)&v58->isa + 1;
              if (__OFADD__(v58, 1))
              {
                __break(1u);
                goto LABEL_319;
              }
              if (v245 >= v239) {
                goto LABEL_305;
              }
              unint64_t v246 = *(void *)(v56 + 8 * v245);
              v243 = ((char *)&v58->isa + 1);
              if (!v246)
              {
                v243 = ((char *)&v58->isa + 2);
                if ((uint64_t)&v58->isa + 2 >= v239) {
                  goto LABEL_305;
                }
                unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                if (!v246)
                {
                  v243 = ((char *)&v58->isa + 3);
                  if ((uint64_t)&v58->isa + 3 >= v239) {
                    goto LABEL_305;
                  }
                  unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                  if (!v246)
                  {
                    v243 = ((char *)&v58->isa + 4);
                    if ((uint64_t)&v58->isa + 4 >= v239) {
                      goto LABEL_305;
                    }
                    unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                    if (!v246)
                    {
                      v247 = (char *)&v58->isa + 5;
                      do
                      {
                        if ((char *)v239 == v247) {
                          goto LABEL_305;
                        }
                        unint64_t v246 = *(void *)(v56 + 8 * (void)v247++);
                      }
                      while (!v246);
                      v243 = (v247 - 1);
                    }
                  }
                }
              }
              os_log_t v374 = (os_log_t)((v246 - 1) & v246);
              unint64_t v244 = __clz(__rbit64(v246)) + ((void)v243 << 6);
            }
            id countAndFlagsBits = *(id *)(*(void *)(v54 + 48) + 8 * v244);
            if (!countAndFlagsBits) {
              goto LABEL_305;
            }
          }
        }
      }
      else
      {
        uint64_t v55 = *(void *)(v389 + 16);
        if (v55)
        {
          v375._id countAndFlagsBits = 40;
          v375._object = (void *)0xE100000000000000;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1248C((uint64_t)&v378, &qword_19B1E0);
  }
  uint64_t v60 = v324;
  while (1)
  {
    v378._id countAndFlagsBits = sub_145BC0();
    v378._object = v61;
    sub_146780();
    sub_D8128((uint64_t)&v375, v60, &v378);
    sub_884F8((uint64_t)&v375);
    if (*((void *)&v379[0] + 1))
    {
      sub_A314(&qword_1A1BC0);
      if (swift_dynamicCast())
      {
        uint64_t v62 = (void *)v389;
        goto LABEL_23;
      }
    }
    else
    {
      sub_1248C((uint64_t)&v378, &qword_19B1E0);
    }
    uint64_t v62 = &_swiftEmptySetSingleton;
LABEL_23:
    v378._id countAndFlagsBits = sub_145BC0();
    v378._object = v63;
    sub_146780();
    sub_D8128((uint64_t)&v375, v60, &v378);
    sub_884F8((uint64_t)&v375);
    if (!*((void *)&v379[0] + 1))
    {
      sub_1248C((uint64_t)&v378, &qword_19B1E0);
LABEL_27:
      uint64_t v64 = &_swiftEmptySetSingleton;
      goto LABEL_28;
    }
    sub_A314(&qword_1A1BC0);
    if (!swift_dynamicCast()) {
      goto LABEL_27;
    }
    uint64_t v64 = (void *)v389;
LABEL_28:
    sub_DB2B0((unint64_t)v64, v62);
    uint64_t v66 = v65;
    unint64_t v67 = v65 & 0xC000000000000001;
    if ((v65 & 0xC000000000000001) != 0)
    {
      if (sub_146710() < 1) {
        goto LABEL_33;
      }
    }
    else if (*(uint64_t *)(v65 + 16) < 1)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      uint64_t v69 = v344;
      goto LABEL_203;
    }
    v375._id countAndFlagsBits = 0;
    v375._object = (void *)0xE000000000000000;
    sub_1467D0(22);
    swift_bridgeObjectRelease();
    v375._id countAndFlagsBits = 10;
    v375._object = (void *)0xE100000000000000;
    uint64_t v68 = v67 ? sub_146710() : *(void *)(v66 + 16);
    v378._id countAndFlagsBits = v68;
    v396._id countAndFlagsBits = sub_146B50();
    sub_145C90(v396);
    swift_bridgeObjectRelease();
    v397._object = (void *)0x8000000000151850;
    v397._id countAndFlagsBits = 0xD000000000000013;
    sub_145C90(v397);
    sub_145C90(v375);
    swift_bridgeObjectRelease();
    if (v67)
    {
      sub_146700();
      sub_C84C(0, &qword_1A1BC8);
      sub_DBA54();
      sub_145FE0();
      uint64_t v66 = v389;
      uint64_t v343 = v390;
      uint64_t v71 = v391;
      int64_t v70 = (int64_t)v392;
      unint64_t v72 = v393;
    }
    else
    {
      int64_t v70 = 0;
      uint64_t v73 = -1 << *(unsigned char *)(v66 + 32);
      uint64_t v74 = *(void *)(v66 + 56);
      uint64_t v343 = v66 + 56;
      uint64_t v71 = ~v73;
      uint64_t v75 = -v73;
      uint64_t v76 = v75 < 64 ? ~(-1 << v75) : -1;
      unint64_t v72 = v76 & v74;
    }
    uint64_t v322 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text;
    uint64_t v313 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_textChanged;
    uint64_t v321 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_dateSource;
    uint64_t v330 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked;
    uint64_t v351 = v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
    swift_beginAccess();
    uint64_t v340 = v66 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v342 = (unint64_t)(v71 + 64) >> 6;
    os_log_t v374 = (os_log_t)v379;
    uint64_t v69 = (char *)&v376;
    v372 = v323 + 7;
    v359 = v323 + 6;
    v348 = v323 + 1;
    v334 = v323 + 4;
    v335 = (void (**)(void))(v11 + 32);
    v337 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v328 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v316 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v317 = (void (**)(char *, uint64_t))(v11 + 8);
    v318 = (void (**)(uint64_t, char *, uint64_t))(v11 + 40);
    v314 = (void (**)(uint64_t, char *, uint64_t))(v11 + 24);
    v355 = (char *)&type metadata for Any + 8;
    v319 = "";
    v320 = "unspecifiedMedia";
    v338 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v356 = v71;
    uint64_t v358 = v66;
LABEL_43:
    if (v66 < 0) {
      break;
    }
    if (!v72)
    {
      int64_t v78 = v70 + 1;
      if (!__OFADD__(v70, 1))
      {
        if (v78 >= v342) {
          goto LABEL_202;
        }
        unint64_t v81 = *(void *)(v343 + 8 * v78);
        if (!v81)
        {
          int64_t v82 = v70 + 2;
          if (v70 + 2 >= v342) {
            goto LABEL_202;
          }
          unint64_t v81 = *(void *)(v343 + 8 * v82);
          if (v81) {
            goto LABEL_56;
          }
          int64_t v82 = v70 + 3;
          if (v70 + 3 >= v342) {
            goto LABEL_202;
          }
          unint64_t v81 = *(void *)(v343 + 8 * v82);
          if (v81)
          {
LABEL_56:
            int64_t v78 = v82;
          }
          else
          {
            int64_t v78 = v70 + 4;
            if (v70 + 4 >= v342) {
              goto LABEL_202;
            }
            unint64_t v81 = *(void *)(v343 + 8 * v78);
            if (!v81)
            {
              v163 = (char *)(v70 + 5);
              do
              {
                if ((char *)v342 == v163) {
                  goto LABEL_202;
                }
                unint64_t v81 = *(void *)(v343 + 8 * (void)v163++);
              }
              while (!v81);
              int64_t v78 = (int64_t)(v163 - 1);
            }
          }
        }
        v369 = ((v81 - 1) & v81);
        unint64_t v77 = __clz(__rbit64(v81)) + (v78 << 6);
        goto LABEL_58;
      }
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      swift_once();
      goto LABEL_308;
    }
    v369 = ((v72 - 1) & v72);
    unint64_t v77 = __clz(__rbit64(v72)) | (v70 << 6);
    int64_t v78 = v70;
LABEL_58:
    uint64_t v80 = *(id *)(*(void *)(v66 + 48) + 8 * v77);
    if (!v80) {
      goto LABEL_202;
    }
LABEL_59:
    v368 = (char *)v78;
    v375._id countAndFlagsBits = 2107914;
    v375._object = (void *)0xE300000000000000;
    v398._id countAndFlagsBits = sub_E71EC();
    sub_145C90(v398);
    swift_bridgeObjectRelease();
    v399._id countAndFlagsBits = 58;
    v399._object = (void *)0xE100000000000000;
    sub_145C90(v399);
    sub_145C90(v375);
    swift_bridgeObjectRelease();
    v373 = v80;
    id v83 = [v80 changedValuesForCurrentEvent];
    uint64_t v84 = sub_1459E0();

    int64_t v85 = 0;
    uint64_t v86 = v84 + 64;
    uint64_t v87 = 1 << *(unsigned char *)(v84 + 32);
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    else {
      uint64_t v88 = -1;
    }
    unint64_t v89 = v88 & *(void *)(v84 + 64);
    int64_t v90 = (unint64_t)(v87 + 63) >> 6;
    v361 = (v90 - 1);
    if (v89)
    {
LABEL_63:
      unint64_t v91 = __clz(__rbit64(v89));
      v89 &= v89 - 1;
      unint64_t v92 = v91 | (v85 << 6);
LABEL_64:
      uint64_t v93 = *(void *)(v84 + 56);
      unint64_t v94 = (uint64_t *)(*(void *)(v84 + 48) + 16 * v92);
      unint64_t v95 = (void *)v94[1];
      v378._id countAndFlagsBits = *v94;
      v378._object = v95;
      sub_C738(v93 + 32 * v92, (uint64_t)v374);
      swift_bridgeObjectRetain();
      goto LABEL_74;
    }
    while (1)
    {
      int64_t v96 = v85 + 1;
      if (__OFADD__(v85, 1)) {
        break;
      }
      if (v96 < v90)
      {
        unint64_t v97 = *(void *)(v86 + 8 * v96);
        if (v97) {
          goto LABEL_68;
        }
        v85 += 2;
        if (v96 + 1 >= v90)
        {
          int64_t v85 = v96;
        }
        else
        {
          unint64_t v97 = *(void *)(v86 + 8 * v85);
          if (v97)
          {
            ++v96;
LABEL_68:
            unint64_t v89 = (v97 - 1) & v97;
            unint64_t v92 = __clz(__rbit64(v97)) + (v96 << 6);
            int64_t v85 = v96;
            goto LABEL_64;
          }
          if (v96 + 2 < v90)
          {
            unint64_t v97 = *(void *)(v86 + 8 * (v96 + 2));
            if (v97)
            {
              v96 += 2;
              goto LABEL_68;
            }
            int64_t v100 = v96 + 3;
            if (v96 + 3 >= v90)
            {
              int64_t v85 = v96 + 2;
            }
            else
            {
              unint64_t v97 = *(void *)(v86 + 8 * v100);
              if (v97)
              {
                v96 += 3;
                goto LABEL_68;
              }
              while (1)
              {
                int64_t v96 = v100 + 1;
                if (__OFADD__(v100, 1)) {
                  goto LABEL_316;
                }
                if (v96 >= v90) {
                  break;
                }
                unint64_t v97 = *(void *)(v86 + 8 * v96);
                ++v100;
                if (v97) {
                  goto LABEL_68;
                }
              }
              int64_t v85 = (int64_t)v361;
            }
          }
        }
      }
      unint64_t v89 = 0;
      memset(v379, 0, sizeof(v379));
      Swift::String v378 = (Swift::String)0;
LABEL_74:
      sub_2E4D0((uint64_t)&v378, (uint64_t)&v375, &qword_1A1BD8);
      object = v375._object;
      if (!v375._object)
      {
        swift_release();
        char v101 = v373;
        id v102 = [v373 changedValuesForCurrentEvent];
        uint64_t v103 = sub_1459E0();

        uint64_t v104 = v371;
        uint64_t v105 = sub_D7E94(v103);
        uint64_t v371 = v104;
        swift_bridgeObjectRelease();
        uint64_t v106 = sub_F3B1C((uint64_t)v105);
        swift_bridgeObjectRelease();
        type metadata accessor for JournalEntryMO();
        uint64_t v107 = swift_dynamicCastClass();
        uint64_t v108 = v370;
        uint64_t v110 = v365;
        uint64_t v109 = (uint64_t)v366;
        if (!v107) {
          goto LABEL_111;
        }
        uint64_t v111 = (void *)v107;
        v361 = v101;
        id v353 = v111;
        id v112 = [v111 id];
        if (v112)
        {
          v113 = v112;
          uint64_t v114 = v367;
          sub_145270();

          Class isa = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v372->isa)(v114, 0, 1, v110);
        }
        else
        {
          Class isa = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa)(v367, 1, 1, v110);
        }
        id v354 = *(id *)(v108 + 32);
        id v116 = [v354 id];
        uint64_t v360 = v106;
        if (v116)
        {
          v117 = v116;
          uint64_t v118 = v357;
          sub_145270();

          uint64_t v119 = 0;
        }
        else
        {
          uint64_t v119 = 1;
          uint64_t v118 = v357;
        }
        isa(v118, v119, 1, v110);
        uint64_t v120 = v362;
        uint64_t v121 = v362 + *(int *)(v363 + 48);
        uint64_t v122 = v367;
        sub_B17CC(v367, v362);
        sub_B17CC(v118, v121);
        char v123 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v359->isa;
        if (((unint64_t (*)(uint64_t, uint64_t, uint64_t))v359->isa)(v120, 1, v110) != 1)
        {
          sub_B17CC(v120, v109);
          if (v123(v121, 1, v110) == 1)
          {
            sub_1248C(v357, &qword_19B730);
            sub_1248C(v367, &qword_19B730);
            ((void (*)(uint64_t, uint64_t))v348->isa)(v109, v110);
            uint64_t v108 = v370;
LABEL_101:
            sub_1248C(v362, &qword_19BC98);
          }
          else
          {
            v126 = v347;
            ((void (*)(char *, uint64_t, uint64_t))v334->isa)(v347, v121, v110);
            sub_DBBB8((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v127 = sub_145AD0();
            uint64_t v128 = (void (*)(char *, uint64_t))v348->isa;
            ((void (*)(char *, uint64_t))v348->isa)(v126, v110);
            sub_1248C(v357, &qword_19B730);
            sub_1248C(v367, &qword_19B730);
            v128(v366, v110);
            sub_1248C(v120, &qword_19B730);
            uint64_t v108 = v370;
            uint64_t v125 = v360;
            if (v127) {
              goto LABEL_103;
            }
          }

          char v101 = v373;
LABEL_111:
          swift_bridgeObjectRelease();
          type metadata accessor for JournalEntryAssetMO();
          uint64_t v134 = swift_dynamicCastClass();
          if (!v134)
          {

            int64_t v70 = (int64_t)v368;
            unint64_t v72 = (unint64_t)v369;
            uint64_t v66 = v358;
            goto LABEL_43;
          }
          v135 = v134;
          char v136 = v101;
          v361 = v135;
          id v137 = [v135 entry];
          if (v137)
          {
            int v138 = v137;
            id v139 = [v137 id];

            if (v139)
            {
              uint64_t v140 = (uint64_t)v341;
              sub_145270();

              uint64_t v141 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v372->isa)(v140, 0, 1, v110);
            }
            else
            {
              uint64_t v141 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa;
              uint64_t v140 = (uint64_t)v341;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v372->isa)(v341, 1, 1, v110);
            }
            sub_2E4D0(v140, v364, &qword_19B730);
          }
          else
          {
            uint64_t v141 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v372->isa)(v364, 1, 1, v110);
          }
          id v142 = [*(id *)(v108 + 32) id];
          v373 = v136;
          if (v142)
          {
            char v143 = v142;
            uint64_t v144 = v352;
            sub_145270();

            uint64_t v145 = 0;
            uint64_t v146 = (uint64_t)v349;
            uint64_t v147 = (uint64_t)v345;
          }
          else
          {
            uint64_t v145 = 1;
            uint64_t v146 = (uint64_t)v349;
            uint64_t v147 = (uint64_t)v345;
            uint64_t v144 = v352;
          }
          v141(v144, v145, 1, v110);
          uint64_t v148 = v364;
          uint64_t v149 = v146 + *(int *)(v363 + 48);
          sub_B17CC(v364, v146);
          sub_B17CC(v144, v149);
          char v150 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v359->isa;
          if (((unint64_t (*)(uint64_t, uint64_t, uint64_t))v359->isa)(v146, 1, v110) == 1)
          {
            sub_1248C(v144, &qword_19B730);
            sub_1248C(v148, &qword_19B730);
            unsigned int v151 = v150(v149, 1, v110);
            v152 = v373;
            if (v151 == 1)
            {
              sub_1248C(v146, &qword_19B730);
              uint64_t v66 = v358;
              goto LABEL_128;
            }
LABEL_126:
            sub_1248C(v146, &qword_19BC98);
            uint64_t v66 = v358;
            goto LABEL_136;
          }
          sub_B17CC(v146, v147);
          if (v150(v149, 1, v110) == 1)
          {
            sub_1248C(v352, &qword_19B730);
            sub_1248C(v364, &qword_19B730);
            ((void (*)(uint64_t, uint64_t))v348->isa)(v147, v110);
            v152 = v373;
            goto LABEL_126;
          }
          v153 = v347;
          ((void (*)(char *, uint64_t, uint64_t))v334->isa)(v347, v149, v110);
          sub_DBBB8((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v154 = sub_145AD0();
          uint64_t v155 = (void (*)(uint64_t, uint64_t))v348->isa;
          ((void (*)(char *, uint64_t))v348->isa)(v153, v110);
          sub_1248C(v352, &qword_19B730);
          sub_1248C(v364, &qword_19B730);
          v155(v147, v110);
          sub_1248C(v146, &qword_19B730);
          uint64_t v66 = v358;
          v152 = v373;
          if ((v154 & 1) == 0)
          {
LABEL_136:

            int64_t v70 = (int64_t)v368;
            unint64_t v72 = (unint64_t)v369;
            goto LABEL_43;
          }
LABEL_128:
          id v156 = [v361 assetType];
          if (!v156) {
            goto LABEL_134;
          }
          v157 = v156;
          uint64_t v158 = sub_145BC0();
          uint64_t v160 = v159;

          if (v158 == 0x697463656C666572 && v160 == 0xEA00000000006E6FLL)
          {
            swift_bridgeObjectRelease();
            goto LABEL_133;
          }
          char v161 = sub_146B90();
          swift_bridgeObjectRelease();
          if (v161) {
LABEL_133:
          }
            Swift::Int v162 = 4;
          else {
LABEL_134:
          }
            Swift::Int v162 = 1;
          sub_E985C(&v375, v162);
          goto LABEL_136;
        }
        sub_1248C(v118, &qword_19B730);
        sub_1248C(v122, &qword_19B730);
        unsigned int v124 = v123(v121, 1, v110);
        uint64_t v108 = v370;
        uint64_t v125 = v360;
        if (v124 != 1) {
          goto LABEL_101;
        }
        sub_1248C(v362, &qword_19B730);
LABEL_103:
        if (*(void *)(v125 + 16))
        {
          sub_146C80();
          sub_145C70();
          Swift::Int v129 = sub_146CD0();
          uint64_t v130 = -1 << *(unsigned char *)(v125 + 32);
          unint64_t v131 = v129 & ~v130;
          if ((*(void *)(v125 + 56 + ((v131 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v131))
          {
            uint64_t v132 = ~v130;
            while (1)
            {
              switch(*(unsigned char *)(*(void *)(v125 + 48) + v131))
              {
                case 1:
                  swift_bridgeObjectRelease();
                  goto LABEL_144;
                default:
                  char v133 = sub_146B90();
                  swift_bridgeObjectRelease();
                  if (v133)
                  {
LABEL_144:
                    sub_E985C(&v375, 1);
                    goto LABEL_145;
                  }
                  unint64_t v131 = (v131 + 1) & v132;
                  if (((*(void *)(v125 + 56 + ((v131 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v131) & 1) == 0) {
                    goto LABEL_145;
                  }
                  break;
              }
            }
          }
        }
LABEL_145:
        char v164 = sub_37594(0, v125);
        uint64_t v165 = (uint64_t)v346;
        uint64_t v66 = v358;
        uint64_t v166 = v351;
        id v167 = v353;
        if (v164)
        {
          id v168 = [v353 text];
          if (v168)
          {
            uint64_t v169 = sub_144FA0();
            unint64_t v171 = v170;

            id v168 = sub_9C5C(v169, v171);
            sub_C52C(v169, v171);
            if (v168 && *(void *)(v108 + v322))
            {
              unsigned __int8 v172 = objc_msgSend(v168, "isEqualToAttributedString:");
              uint64_t v165 = (uint64_t)v346;
              uint64_t v166 = v351;
              if ((v172 & 1) == 0) {
                *(unsigned char *)(v108 + v313) = 1;
              }
            }
            else
            {
              uint64_t v165 = (uint64_t)v346;
              uint64_t v166 = v351;
            }
          }
          v173 = *(void **)(v108 + v322);
          *(void *)(v108 + v322) = v168;

          sub_E985C(&v375, 0);
        }
        if (sub_37594(3u, v125))
        {
          id v174 = [v167 title];
          if (v174)
          {
            v175 = v174;
            uint64_t v176 = sub_144FA0();
            unint64_t v178 = v177;

            id v179 = sub_9C5C(v176, v178);
            sub_C52C(v176, v178);
          }
          else
          {
            id v179 = 0;
          }
          sub_11FE0(v179);

          sub_E985C(&v375, 2);
          uint64_t v165 = (uint64_t)v346;
          uint64_t v166 = v351;
        }
        if (sub_37594(4u, v125))
        {
          id v180 = [v354 entryDate];
          if (v180)
          {
            v181 = v180;
            v182 = v339;
            sub_1451E0();

            v183 = *v335;
            v184 = v182;
            uint64_t v185 = v350;
            ((void (*)(uint64_t, char *, uint64_t))*v335)(v165, v184, v350);
            (*v337)(v165, 0, 1, v185);
            uint64_t v186 = v185;
            uint64_t v166 = v351;
            if ((*v328)(v165, 1, v186) != 1)
            {
              v187 = v327;
              ((void (*)(char *, uint64_t, uint64_t))v183)(v327, v165, v350);
              v188 = v187;
              uint64_t v166 = v351;
              goto LABEL_164;
            }
          }
          else
          {
            (*v337)(v165, 1, 1, v350);
          }
          v188 = v327;
          sub_145220();
          sub_1248C(v165, &qword_19C150);
LABEL_164:
          swift_beginAccess();
          (*v318)(v166, v188, v350);
          swift_endAccess();
          sub_E985C(&v375, 3);
        }
        if (sub_37594(7u, v125))
        {
          id v189 = [v354 dateSource];
          if (v189)
          {
            v190 = v189;
            uint64_t v191 = sub_145BC0();
            v193 = v192;
          }
          else
          {
            uint64_t v191 = 0;
            v193 = (void *)0xE000000000000000;
          }
          char v194 = sub_B9D8(v191, v193);
          *(unsigned char *)(v108 + v321) = v194;
          sub_E985C(&v375, 3);
        }
        if (sub_37594(9u, v125))
        {
          id v195 = [v354 prompt];
          if (v195)
          {
            v196 = v195;
            uint64_t v197 = sub_144FA0();
            unint64_t v199 = v198;

            id v200 = sub_9C5C(v197, v199);
            sub_C52C(v197, v199);
          }
          else
          {
            id v200 = 0;
          }
          sub_120C8(v200);

          sub_E985C(&v375, 6);
        }
        if (sub_37594(8u, v125)) {
          sub_E985C(&v375, 7);
        }
        if (sub_37594(5u, v125))
        {
          swift_bridgeObjectRelease();
          goto LABEL_180;
        }
        char v201 = sub_37594(6u, v125);
        swift_bridgeObjectRelease();
        if (v201) {
LABEL_180:
        }
          sub_E985C(&v375, 8);
        unsigned __int8 v202 = [v167 isRemovedFromCloud];
        uint64_t v203 = (uint64_t)v336;
        uint64_t v204 = v350;
        if ((v202 & 1) != 0 || [v167 isFullyRemoved]) {
          sub_E985C(&v375, 9);
        }
        id v205 = [v167 entryDate];
        if (!v205)
        {
          (*v337)(v203, 1, 1, v204);
LABEL_189:
          sub_1248C(v203, &qword_19C150);
          goto LABEL_190;
        }
        v206 = v205;
        v207 = v339;
        sub_1451E0();

        v208 = *v335;
        ((void (*)(uint64_t, char *, uint64_t))*v335)(v203, v207, v204);
        (*v337)(v203, 0, 1, v204);
        if ((*v328)(v203, 1, v204) == 1) {
          goto LABEL_189;
        }
        v209 = v326;
        v208();
        v210 = v339;
        uint64_t v211 = v351;
        (*v316)(v339, v351, v204);
        sub_DBBB8((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
        char v212 = sub_145AD0();
        v213 = *v317;
        (*v317)(v210, v204);
        if (v212)
        {
          v213(v209, v204);
          uint64_t v66 = v358;
          id v167 = v353;
        }
        else
        {
          swift_beginAccess();
          (*v314)(v211, v209, v204);
          swift_endAccess();
          id v223 = [v354 dateSource];
          if (v223)
          {
            v224 = v223;
            uint64_t v225 = sub_145BC0();
            v227 = v226;
          }
          else
          {
            uint64_t v225 = 0;
            v227 = (void *)0xE000000000000000;
          }
          id v167 = v353;
          char v228 = sub_B9D8(v225, v227);
          *(unsigned char *)(v108 + v321) = v228;
          sub_E985C(&v375, 3);
          v213(v326, v204);
          uint64_t v66 = v358;
        }
LABEL_190:
        int v214 = *(unsigned __int8 *)(v108 + v330);
        if (v214 != [v167 flagged])
        {
          sub_10988((uint64_t)[v167 flagged]);
          sub_E985C(&v375, 7);
        }
        id v215 = [v167 text];
        if (v215)
        {
          v216 = v215;
          uint64_t v217 = sub_144FA0();
          unint64_t v219 = v218;

          id v220 = sub_9C5C(v217, v219);
          sub_C52C(v217, v219);
        }
        else
        {
          id v220 = 0;
        }
        unint64_t v72 = (unint64_t)v369;
        char v221 = sub_10710(v220);

        if (v221) {
          sub_E985C(&v375, 0);
        }
        v222 = v361;

        int64_t v70 = (int64_t)v368;
        goto LABEL_43;
      }
      uint64_t v99 = v375._countAndFlagsBits;
      sub_2A74C(&v376, &v378);
      v380._id countAndFlagsBits = 0;
      v380._object = (void *)0xE000000000000000;
      v400._id countAndFlagsBits = 0x20202020200ALL;
      v400._object = (void *)0xE600000000000000;
      sub_145C90(v400);
      v401._id countAndFlagsBits = v99;
      v401._object = object;
      sub_145C90(v401);
      swift_bridgeObjectRelease();
      v402._id countAndFlagsBits = 8250;
      v402._object = (void *)0xE200000000000000;
      sub_145C90(v402);
      sub_1468E0();
      sub_145C90(v380);
      swift_bridgeObjectRelease();
      sub_C7FC((uint64_t)&v378);
      if (v89) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_305:
    sub_1D050();
    uint64_t v2 = v370;
    uint64_t v60 = v324;
    int64_t v11 = v368;
  }
  uint64_t v79 = sub_146740();
  if (v79)
  {
    v378._id countAndFlagsBits = v79;
    sub_C84C(0, &qword_1A1BC8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v80 = v375._countAndFlagsBits;
    swift_unknownObjectRelease();
    int64_t v78 = v70;
    v369 = v72;
    if (v80) {
      goto LABEL_59;
    }
  }
LABEL_202:
  sub_1D050();
  uint64_t v69 = v344;
  uint64_t v60 = v324;
LABEL_203:
  v380._id countAndFlagsBits = sub_145BC0();
  v380._object = v229;
  sub_146780();
  sub_D8128((uint64_t)&v375, v60, &v378);
  swift_bridgeObjectRelease();
  sub_884F8((uint64_t)&v375);
  if (!*((void *)&v379[0] + 1))
  {
    sub_1248C((uint64_t)&v378, &qword_19B1E0);
    goto LABEL_307;
  }
  sub_A314(&qword_1A1BC0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_307;
  }
  uint64_t v230 = v380._countAndFlagsBits;
  unint64_t v231 = v380._countAndFlagsBits & 0xC000000000000001;
  if ((v380._countAndFlagsBits & 0xC000000000000001) != 0)
  {
    if (sub_146710() > 0)
    {
      v375._id countAndFlagsBits = 10;
      v375._object = (void *)0xE100000000000000;
      uint64_t v232 = sub_146710();
      goto LABEL_211;
    }
LABEL_213:
    swift_bridgeObjectRelease();
    goto LABEL_307;
  }
  uint64_t v232 = *(void *)(v380._countAndFlagsBits + 16);
  if (!v232) {
    goto LABEL_213;
  }
  v375._id countAndFlagsBits = 10;
  v375._object = (void *)0xE100000000000000;
LABEL_211:
  v378._id countAndFlagsBits = v232;
  v403._id countAndFlagsBits = sub_146B50();
  sub_145C90(v403);
  swift_bridgeObjectRelease();
  v404._id countAndFlagsBits = 0x736574656C656420;
  v404._object = (void *)0xE90000000000003ALL;
  sub_145C90(v404);
  sub_145C90(v375);
  swift_bridgeObjectRelease();
  if (v231)
  {
    sub_146700();
    sub_C84C(0, &qword_1A1BC8);
    sub_DBA54();
    sub_145FE0();
    uint64_t v230 = v375._countAndFlagsBits;
    v368 = (char *)v375._object;
    unint64_t v231 = *((void *)&v376 + 1);
    uint64_t v233 = v376;
    unint64_t v234 = v377;
  }
  else
  {
    uint64_t v264 = -1 << *(unsigned char *)(v230 + 32);
    uint64_t v265 = *(void *)(v230 + 56);
    v368 = (char *)(v230 + 56);
    uint64_t v266 = ~v264;
    uint64_t v267 = -v264;
    if (v267 < 64) {
      uint64_t v268 = ~(-1 << v267);
    }
    else {
      uint64_t v268 = -1;
    }
    unint64_t v234 = v268 & v265;
    uint64_t v233 = v266;
  }
  uint64_t v362 = v233;
  v366 = (char *)(v230 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v367 = (unint64_t)(v233 + 64) >> 6;
  v373 = v323 + 4;
  os_log_t v374 = v323 + 7;
  v369 = v323 + 6;
  uint64_t v363 = (uint64_t)&v323[1];
  uint64_t v364 = (uint64_t)&type metadata for Swift.AnyObject + 8;
  v372 = v230;
  while (2)
  {
    if (v230 < 0)
    {
      uint64_t v273 = sub_146740();
      if (!v273) {
        goto LABEL_306;
      }
      v380._id countAndFlagsBits = v273;
      sub_C84C(0, &qword_1A1BC8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v274 = (id)v378._countAndFlagsBits;
      swift_unknownObjectRelease();
      uint64_t v272 = v231;
      uint64_t v270 = v234;
      if (!v274) {
        goto LABEL_306;
      }
      goto LABEL_284;
    }
    if (v234)
    {
      uint64_t v270 = (v234 - 1) & v234;
      unint64_t v271 = __clz(__rbit64(v234)) | (v231 << 6);
      uint64_t v272 = v231;
LABEL_283:
      id v274 = *(id *)(*(void *)(v230 + 48) + 8 * v271);
      if (!v274) {
        goto LABEL_306;
      }
LABEL_284:
      v378._id countAndFlagsBits = 2107914;
      v378._object = (void *)0xE300000000000000;
      v406._id countAndFlagsBits = sub_E71EC();
      sub_145C90(v406);
      swift_bridgeObjectRelease();
      sub_145C90(v378);
      swift_bridgeObjectRelease();
      type metadata accessor for JournalEntryMO();
      uint64_t v277 = swift_dynamicCastClass();
      if (!v277)
      {
        type metadata accessor for JournalEntryAssetMO();
        if (swift_dynamicCastClass())
        {
          sub_E985C(&v378, 4);
          sub_E985C(&v378, 1);
        }

        unint64_t v231 = v272;
        unint64_t v234 = v270;
        continue;
      }
      v278 = (void *)v277;
      id v279 = v274;
      id v280 = [v278 id];
      if (!v280)
      {
        uint64_t v269 = (uint64_t)v333;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v374->isa)(v333, 1, 1, v365);
LABEL_267:

        sub_1248C(v269, &qword_19B730);
        unint64_t v231 = v272;
        unint64_t v234 = v270;
        uint64_t v69 = v344;
        uint64_t v230 = (uint64_t)v372;
        continue;
      }
      v281 = v280;
      v282 = v347;
      sub_145270();

      v283 = (void (*)(char *, uint64_t, uint64_t))v373->isa;
      uint64_t v269 = (uint64_t)v333;
      uint64_t v284 = v365;
      ((void (*)(char *, char *, uint64_t))v373->isa)(v333, v282, v365);
      Class v285 = v374->isa;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v374->isa)(v269, 0, 1, v284);
      v286 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v369->isa;
      if (((unint64_t (*)(uint64_t, uint64_t, uint64_t))v369->isa)(v269, 1, v284) == 1) {
        goto LABEL_267;
      }
      uint64_t v287 = v365;
      v283(v329, v269, v365);
      id v288 = [v278 id];
      if (v288)
      {
        v289 = v288;
        v290 = v347;
        sub_145270();

        uint64_t v291 = (uint64_t)v325;
        v283(v325, (uint64_t)v290, v287);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v285)(v291, 0, 1, v287);
        int v292 = v286(v291, 1, v287);
        uint64_t v69 = v344;
        if (v292 != 1)
        {
          v293 = v315;
          v283(v315, v291, v287);
          v294 = v329;
          if (sub_145260()) {
            sub_E985C(&v378, 9);
          }

          v295 = *(void (**)(char *, uint64_t))v363;
          (*(void (**)(char *, uint64_t))v363)(v293, v287);
          v295(v294, v287);
          goto LABEL_297;
        }
      }
      else
      {
        uint64_t v291 = (uint64_t)v325;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v285)(v325, 1, 1, v287);
        uint64_t v69 = v344;
      }

      (*(void (**)(char *, uint64_t))v363)(v329, v287);
      sub_1248C(v291, &qword_19B730);
LABEL_297:
      unint64_t v231 = v272;
      unint64_t v234 = v270;
      uint64_t v230 = (uint64_t)v372;
      continue;
    }
    break;
  }
  uint64_t v272 = v231 + 1;
  if (__OFADD__(v231, 1))
  {
LABEL_319:
    __break(1u);
    JUMPOUT(0xDB280);
  }
  if (v272 >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v272];
  if (v275)
  {
LABEL_282:
    uint64_t v270 = (v275 - 1) & v275;
    unint64_t v271 = __clz(__rbit64(v275)) + (v272 << 6);
    goto LABEL_283;
  }
  uint64_t v276 = v231 + 2;
  if ((uint64_t)(v231 + 2) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v276];
  if (v275) {
    goto LABEL_281;
  }
  uint64_t v276 = v231 + 3;
  if ((uint64_t)(v231 + 3) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v276];
  if (v275)
  {
LABEL_281:
    uint64_t v272 = v276;
    goto LABEL_282;
  }
  uint64_t v272 = v231 + 4;
  if ((uint64_t)(v231 + 4) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v272];
  if (v275) {
    goto LABEL_282;
  }
  unint64_t v296 = v231 + 5;
  while (v367 != v296)
  {
    unint64_t v275 = *(void *)&v368[8 * v296++];
    if (v275)
    {
      uint64_t v272 = v296 - 1;
      goto LABEL_282;
    }
  }
LABEL_306:
  sub_1D050();
LABEL_307:
  v378._id countAndFlagsBits = 0;
  v378._object = (void *)0xE000000000000000;
  sub_1467D0(22);
  swift_bridgeObjectRelease();
  v378._id countAndFlagsBits = 0xD000000000000013;
  v378._object = (void *)0x8000000000151830;
  sub_DB928();
  swift_bridgeObjectRetain();
  v407._id countAndFlagsBits = sub_145FC0();
  sub_145C90(v407);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v408._id countAndFlagsBits = 10;
  v408._object = (void *)0xE100000000000000;
  sub_145C90(v408);
  sub_145C90(v378);
  swift_bridgeObjectRelease();
  if (qword_19AFF8 != -1) {
    goto LABEL_317;
  }
LABEL_308:
  uint64_t v297 = v332;
  uint64_t v298 = sub_C584(v332, (uint64_t)qword_1A1B98);
  (*(void (**)(char *, uint64_t, uint64_t))(v331 + 16))(v69, v298, v297);
  v299 = v382;
  unint64_t v300 = v383;
  uint64_t v301 = swift_allocObject();
  v373 = v299;
  *(void *)(v301 + 16) = v299;
  *(void *)(v301 + 24) = v300;
  swift_bridgeObjectRetain();
  v302 = sub_145740();
  os_log_type_t v303 = sub_1461E0();
  uint64_t v304 = swift_allocObject();
  *(unsigned char *)(v304 + 16) = 32;
  uint64_t v305 = swift_allocObject();
  *(unsigned char *)(v305 + 16) = 8;
  uint64_t v306 = swift_allocObject();
  *(void *)(v306 + 16) = sub_DB9B4;
  *(void *)(v306 + 24) = v301;
  uint64_t v307 = swift_allocObject();
  *(void *)(v307 + 16) = sub_DBA0C;
  *(void *)(v307 + 24) = v306;
  sub_A314(&qword_1A1BB8);
  uint64_t v308 = swift_allocObject();
  *(_OWORD *)(v308 + 16) = xmmword_15A590;
  *(void *)(v308 + 32) = sub_DB9F4;
  *(void *)(v308 + 40) = v304;
  *(void *)(v308 + 48) = sub_DBDEC;
  *(void *)(v308 + 56) = v305;
  *(void *)(v308 + 64) = sub_DBA4C;
  *(void *)(v308 + 72) = v307;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v309 = v303;
  os_log_t v374 = v302;
  if (os_log_type_enabled(v302, v303))
  {
    v310 = (uint8_t *)swift_slowAlloc();
    v378._id countAndFlagsBits = swift_slowAlloc();
    *(_WORD *)v310 = 258;
    v310[2] = 32;
    swift_release();
    v310[3] = 8;
    swift_release();
    swift_bridgeObjectRetain();
    v380._id countAndFlagsBits = sub_3D2B4((uint64_t)v373, v300, &v378._countAndFlagsBits);
    sub_146610();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    os_log_t v311 = v374;
    _os_log_impl(&def_94138, v374, v309, "%s", v310, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v331 + 8))(v344, v332);
  if (v381[2])
  {
    v378._id countAndFlagsBits = (uint64_t)v381;
    sub_1458D0();
  }
  return (id)swift_bridgeObjectRelease();
}

void sub_DB2B0(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_146700();
    sub_C84C(0, &qword_1A1BC8);
    sub_DBA54();
    sub_145FE0();
    unint64_t v2 = (unint64_t)v18[2];
    uint64_t v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      uint64_t v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    uint64_t v12 = (char *)v4 + 1;
    if (!v15)
    {
      uint64_t v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        uint64_t v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          uint64_t v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            uint64_t v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              uint64_t v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1D050();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_EB468(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_146740())
      {
        sub_C84C(0, &qword_1A1BC8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        uint64_t v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_DB5A0(char a1)
{
  unint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64724F7465737361;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x7461447972746E65;
      break;
    case 5:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 6:
      unint64_t result = 0x6144656C646E7562;
      break;
    case 7:
      unint64_t result = 0x72756F5365746164;
      break;
    case 8:
      unint64_t result = 0x64656767616C66;
      break;
    case 9:
      unint64_t result = 0x74706D6F7270;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_DB728(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_DB5A0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_DB5A0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_DB7B4()
{
  char v1 = *v0;
  sub_146C80();
  sub_DB5A0(v1);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_DB818()
{
  sub_DB5A0(*v0);
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_DB86C()
{
  char v1 = *v0;
  sub_146C80();
  sub_DB5A0(v1);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_DB8CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_DBB6C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_DB8FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_DB5A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_DB928()
{
  unint64_t result = qword_1A1BB0;
  if (!qword_1A1BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1BB0);
  }
  return result;
}

uint64_t sub_DB97C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DB9B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_DB9E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_DB9F4(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_3D204(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_DB9FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_DBA0C()
{
  return sub_3D214(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_DBA14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DBA4C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_3D23C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_DBA54()
{
  unint64_t result = qword_1A1BD0;
  if (!qword_1A1BD0)
  {
    sub_C84C(255, &qword_1A1BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1BD0);
  }
  return result;
}

uint64_t sub_DBABC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  int64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_DBB6C(uint64_t a1, void *a2)
{
  v6._id countAndFlagsBits = a1;
  v3._rawValue = &off_184578;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xC) {
    return 12;
  }
  else {
    return v4;
  }
}

uint64_t sub_DBBB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s6FieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6FieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xDBD5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6FieldsOMa()
{
  return &_s6FieldsON;
}

unint64_t sub_DBD98()
{
  unint64_t result = qword_1A1BE0;
  if (!qword_1A1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1BE0);
  }
  return result;
}

unint64_t sub_DBDF8()
{
  unint64_t result = qword_1A1BE8;
  if (!qword_1A1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1BE8);
  }
  return result;
}

unint64_t sub_DBE4C()
{
  if (*v0) {
    return 0xD000000000000045;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

unsigned char *storeEnumTagSinglePayload for NSItemProviderExtensionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xDBF64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSItemProviderExtensionError()
{
  return &type metadata for NSItemProviderExtensionError;
}

unint64_t sub_DBFA0()
{
  unint64_t result = qword_1A1BF0;
  if (!qword_1A1BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1BF0);
  }
  return result;
}

BOOL static SharedDeviceInfoProvider.isDeviceLocked()()
{
  return MKBGetDeviceLockState() == 1;
}

id SharedDeviceInfoProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SharedDeviceInfoProvider()
{
  return self;
}

id SharedDeviceInfoProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_DC0E4(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19AD78 != -1) {
    swift_once();
  }
  unsigned int v6 = (void *)qword_1A3B30;
  if (!qword_1A3B30) {
    return 0;
  }
  sub_A314(&qword_19C130);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_159A30;
  *(void *)(v7 + 32) = [self whiteColor];
  *(void *)(v7 + 40) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  v21[0] = v7;
  sub_145E00();
  sub_85408();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  int64_t v9 = self;
  id v10 = [v9 configurationWithPaletteColors:isa];

  id v11 = [v9 configurationWithPointSize:100.0];
  id v12 = [v10 configurationByApplyingConfiguration:v11];

  id v13 = (UIImage *)[v6 imageWithConfiguration:v12];
  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_E3E6C((uint64_t)v5, v13, 0xD000000000000012, 0x8000000000151940);
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1467D0(44);
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "<img src=\"../");
  HIWORD(v21[1]) = -4864;
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v18 = *v17;
  uint64_t v19 = (void *)v17[1];
  swift_bridgeObjectRetain();
  v22._id countAndFlagsBits = v18;
  v22._object = v19;
  sub_145C90(v22);
  swift_bridgeObjectRelease();
  v23._id countAndFlagsBits = 47;
  v23._object = (void *)0xE100000000000000;
  sub_145C90(v23);
  v24._id countAndFlagsBits = v14;
  v24._object = v16;
  sub_145C90(v24);
  swift_bridgeObjectRelease();
  v25._id countAndFlagsBits = 0xD00000000000001ALL;
  v25._object = (void *)0x8000000000151960;
  sub_145C90(v25);

  return v21[0];
}

uint64_t sub_DC448(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_DC468, 0, 0);
}

uint64_t sub_DC468()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = sub_DC0E4(v1);
  uint64_t v4 = v3;
  v0[4] = v3;
  uint64_t v5 = sub_DE45C(v1, 0x636973756DLL, 0xE500000000000000, 0x6F6349636973756DLL, 0xEE00636965682E6ELL);
  v0[5] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_A224C;
  uint64_t v8 = v0[2];
  return sub_543BC(v8, 0, 0, 0, 0, v2, v4, v5);
}

double sub_DC58C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_19C7F8);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  uint64_t v13 = *((void *)v12 - 1);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10MusicAsset_metadata))
  {
    swift_retain();
    sub_30B08((uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_DE798((uint64_t)v11, (uint64_t)v15, _s10MusicAssetC9MusicDataVMa);
      sub_12428((uint64_t)&v15[v12[5]], (uint64_t)v8, &qword_19EB20);
      uint64_t v16 = &v15[v12[6]];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 1);
      uint64_t v19 = &v15[v12[7]];
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *((void *)v19 + 1);
      Swift::String v22 = &v15[v12[8]];
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *((void *)v22 + 1);
      uint64_t v31 = v20;
      uint64_t v32 = v23;
      sub_12428((uint64_t)&v15[v12[10]], (uint64_t)v5, &qword_19C150);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_DE718((uint64_t)v15, _s10MusicAssetC9MusicDataVMa);
      Swift::String v25 = (int *)_s6ResultVMa_7(0);
      *(void *)(a1 + 24) = v25;
      *(void *)(a1 + 32) = sub_DE0C8(&qword_1A1C50, (void (*)(uint64_t))_s6ResultVMa_7);
      *(void *)(a1 + 40) = sub_DE0C8(&qword_1A1C58, (void (*)(uint64_t))_s6ResultVMa_7);
      uint64_t v26 = sub_484D0((uint64_t *)a1);
      sub_2E4D0((uint64_t)v8, (uint64_t)v26, &qword_19EB20);
      uint64_t v27 = (uint64_t *)((char *)v26 + v25[5]);
      *uint64_t v27 = v17;
      v27[1] = v18;
      uint64_t v28 = (uint64_t *)((char *)v26 + v25[6]);
      *uint64_t v28 = v31;
      v28[1] = v21;
      uint64_t v29 = (uint64_t *)((char *)v26 + v25[7]);
      void *v29 = v32;
      v29[1] = v24;
      sub_2E4D0((uint64_t)v5, (uint64_t)v26 + v25[8], &qword_19C150);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1248C((uint64_t)v11, &qword_19C7F8);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_DC938(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_DC958, 0, 0);
}

uint64_t sub_DC958()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = sub_DC0E4(v1);
  uint64_t v4 = v3;
  v0[4] = v3;
  uint64_t v5 = sub_DE45C(v1, 0x6F702E656C707061, 0xEE00737473616364, 0xD000000000000010, 0x8000000000151980);
  v0[5] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_DCA84;
  uint64_t v8 = v0[2];
  return sub_543BC(v8, 0, 0, 0, 0, v2, v4, v5);
}

uint64_t sub_DCA84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_E1584, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

double sub_DCBE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_19C818);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling12PodcastAsset_metadata))
  {
    swift_retain();
    sub_317D8((uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_DE798((uint64_t)v11, (uint64_t)v15, _s12PodcastAssetC11PodcastDataVMa);
      uint64_t v17 = v15[2];
      uint64_t v16 = v15[3];
      uint64_t v18 = v15[4];
      uint64_t v19 = v15[5];
      sub_12428((uint64_t)v15 + *(int *)(v12 + 28), (uint64_t)v8, &qword_19EB20);
      sub_12428((uint64_t)v15 + *(int *)(v12 + 32), (uint64_t)v5, &qword_19C150);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_DE718((uint64_t)v15, _s12PodcastAssetC11PodcastDataVMa);
      uint64_t v20 = _s6ResultVMa_6(0);
      *(void *)(a1 + 24) = v20;
      *(void *)(a1 + 32) = sub_DE0C8(&qword_1A1C60, (void (*)(uint64_t))_s6ResultVMa_6);
      *(void *)(a1 + 40) = sub_DE0C8(&qword_1A1C68, (void (*)(uint64_t))_s6ResultVMa_6);
      uint64_t v21 = sub_484D0((uint64_t *)a1);
      *uint64_t v21 = v17;
      v21[1] = v16;
      void v21[2] = v18;
      v21[3] = v19;
      sub_2E4D0((uint64_t)v8, (uint64_t)v21 + *(int *)(v20 + 24), &qword_19EB20);
      sub_2E4D0((uint64_t)v5, (uint64_t)v21 + *(int *)(v20 + 28), &qword_19C150);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1248C((uint64_t)v11, &qword_19C818);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_DCF4C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_543BC(a1, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_DD004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C838);
  uint64_t result = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling9BookAsset_metadata)) {
    goto LABEL_4;
  }
  swift_retain();
  sub_32B10((uint64_t)v6);
  swift_release();
  uint64_t v7 = _s9BookAssetC8BookDataVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_1248C((uint64_t)v6, &qword_19C838);
LABEL_4:
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = sub_DE0C8(&qword_19C840, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
  *(void *)(a1 + 40) = sub_DE0C8(&qword_1A1080, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
  uint64_t v8 = sub_484D0((uint64_t *)a1);
  return sub_DE798((uint64_t)v6, (uint64_t)v8, _s9BookAssetC8BookDataVMa);
}

uint64_t sub_DD19C(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A1DB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_E0C70();
  sub_146D10();
  v8[15] = 0;
  sub_144F60();
  sub_DE0C8(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146AD0();
  if (!v1)
  {
    _s6ResultVMa_7(0);
    v8[14] = 1;
    sub_146A90();
    v8[13] = 2;
    sub_146A90();
    v8[12] = 3;
    sub_146A90();
    v8[11] = 4;
    sub_145230();
    sub_DE0C8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_DD430@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_1A1DA8);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)_s6ResultVMa_7(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_E0C70();
  uint64_t v31 = v11;
  uint64_t v15 = v32;
  sub_146D00();
  if (v15) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v16 = v29;
  sub_144F60();
  char v37 = 0;
  sub_DE0C8(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146A20();
  sub_2E4D0((uint64_t)v8, (uint64_t)v14, &qword_19EB20);
  char v36 = 1;
  uint64_t v17 = sub_1469E0();
  uint64_t v18 = (uint64_t *)&v14[v12[5]];
  *uint64_t v18 = v17;
  v18[1] = v19;
  char v35 = 2;
  uint64_t v20 = sub_1469E0();
  uint64_t v21 = (uint64_t *)&v14[v12[6]];
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v34 = 3;
  uint64_t v23 = sub_1469E0();
  uint64_t v24 = (uint64_t *)&v14[v12[7]];
  *uint64_t v24 = v23;
  v24[1] = v25;
  sub_145230();
  char v33 = 4;
  sub_DE0C8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v30);
  sub_2E4D0((uint64_t)v5, (uint64_t)&v14[v12[8]], &qword_19C150);
  sub_E0D18((uint64_t)v14, v28, _s6ResultVMa_7);
  sub_C7FC((uint64_t)a1);
  return sub_DE718((uint64_t)v14, _s6ResultVMa_7);
}

uint64_t sub_DD94C(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A1DD0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_E0CC4();
  sub_146D10();
  v8[15] = 0;
  sub_146A90();
  if (!v1)
  {
    v8[14] = 1;
    sub_146A90();
    _s6ResultVMa_6(0);
    v8[13] = 2;
    sub_144F60();
    sub_DE0C8(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146AD0();
    v8[12] = 3;
    sub_145230();
    sub_DE0C8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_DDBA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_1A1DC0);
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s6ResultVMa_6(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_E0CC4();
  uint64_t v14 = v25;
  sub_146D00();
  if (v14) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v15 = v23;
  char v29 = 0;
  uint64_t *v13 = sub_1469E0();
  v13[1] = v16;
  char v28 = 1;
  v13[2] = sub_1469E0();
  v13[3] = v17;
  sub_144F60();
  char v27 = 2;
  sub_DE0C8(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146A20();
  sub_2E4D0((uint64_t)v7, (uint64_t)v13 + *(int *)(v11 + 24), &qword_19EB20);
  sub_145230();
  char v26 = 3;
  sub_DE0C8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v18 = (uint64_t)v22;
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v24);
  sub_2E4D0(v18, (uint64_t)v13 + *(int *)(v11 + 28), &qword_19C150);
  sub_E0D18((uint64_t)v13, v21, _s6ResultVMa_6);
  sub_C7FC((uint64_t)a1);
  return sub_DE718((uint64_t)v13, _s6ResultVMa_6);
}

uint64_t sub_DE018(uint64_t a1)
{
  uint64_t result = sub_DE0C8(&qword_1A1C20, (void (*)(uint64_t))_s9BookAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_DE070(uint64_t a1)
{
  uint64_t result = sub_DE0C8(&qword_1A1C30, (void (*)(uint64_t))_s12PodcastAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_DE0C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_DE110(uint64_t a1)
{
  uint64_t result = sub_DE0C8(&qword_1A1C40, (void (*)(uint64_t))_s10MusicAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_DE168()
{
  uint64_t result = 0x4C5255616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x614E747369747261;
      break;
    case 2:
      uint64_t result = 1735290739;
      break;
    case 3:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 4:
      uint64_t result = 0x6D69547472617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_DE210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_E1198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_DE238(uint64_t a1)
{
  unint64_t v2 = sub_E0C70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_DE274(uint64_t a1)
{
  unint64_t v2 = sub_E0C70();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_DE2B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_DD430(a1, a2);
}

uint64_t sub_DE2C8(void *a1)
{
  return sub_DD19C(a1);
}

uint64_t sub_DE2E0()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F68747561;
      break;
    case 2:
      uint64_t result = 0x4C5255616964656DLL;
      break;
    case 3:
      uint64_t result = 0x79616C50656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_DE36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_E13CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_DE394(uint64_t a1)
{
  unint64_t v2 = sub_E0CC4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_DE3D0(uint64_t a1)
{
  unint64_t v2 = sub_E0CC4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_DE40C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_DDBA8(a1, a2);
}

uint64_t sub_DE424(void *a1)
{
  return sub_DD94C(a1);
}

uint64_t _s6ResultVMa_7(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1D60);
}

uint64_t sub_DE45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_144F60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = sub_145B80();
  id v13 = [self _systemImageNamed:v12];

  if (!v13) {
    return 0;
  }
  id v14 = [self whiteColor];
  id v15 = [v13 imageWithTintColor:v14 renderingMode:2];

  id v16 = [self configurationWithPointSize:100.0];
  uint64_t v17 = (UIImage *)[v15 imageWithConfiguration:v16];

  if (!v17) {
    return 0;
  }
  uint64_t v18 = sub_E3E6C((uint64_t)v11, v17, a4, a5);
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_1467D0(44);
  swift_bridgeObjectRelease();
  strcpy((char *)v25, "<img src=\"../");
  HIWORD(v25[1]) = -4864;
  uint64_t v21 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v22 = *v21;
  uint64_t v23 = (void *)v21[1];
  swift_bridgeObjectRetain();
  v26._id countAndFlagsBits = v22;
  v26._object = v23;
  sub_145C90(v26);
  swift_bridgeObjectRelease();
  v27._id countAndFlagsBits = 47;
  v27._object = (void *)0xE100000000000000;
  sub_145C90(v27);
  v28._id countAndFlagsBits = v18;
  v28._object = v20;
  sub_145C90(v28);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x8000000000151920;
  v29._id countAndFlagsBits = 0xD00000000000001ALL;
  sub_145C90(v29);

  return v25[0];
}

uint64_t sub_DE718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s6ResultVMa_6(uint64_t a1)
{
  return sub_407CC(a1, qword_1A1CC8);
}

uint64_t sub_DE798(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_DE800(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_144F60();
    uint64_t v12 = *(void *)(v11 - 8);
    id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19EB20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_145230();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t sub_DEA90(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_145230();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_DEC10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19EB20);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_145230();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_DEE4C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_145230();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_OWORD *sub_DF154(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_A314(&qword_19EB20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_145230();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *sub_DF364(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_144F60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_A314(&qword_19EB20);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_145230();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_A314(&qword_19C150);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_DF64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DF660);
}

uint64_t sub_DF660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19EB20);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 24);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_DF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DF7B4);
}

uint64_t sub_DF7B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_DF8E8()
{
  sub_A6D70(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_A6D70(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_DF9F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_144F60();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(&qword_19EB20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (uint64_t *)((char *)a1 + v12);
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)a1 + v19);
    int v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    int v24 = (char *)a1 + v20;
    uint64_t v25 = (char *)a2 + v20;
    uint64_t v26 = sub_145230();
    uint64_t v27 = *(void *)(v26 - 8);
    Swift::String v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = sub_A314(&qword_19C150);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return a1;
}

uint64_t sub_DFC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_145230();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_DFE20(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  int v22 = &a1[v18];
  uint64_t v23 = &a2[v18];
  uint64_t v24 = sub_145230();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    uint64_t v27 = sub_A314(&qword_19C150);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

char *sub_E0070(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  int v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_145230();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

char *sub_E03A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

char *sub_E05B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[8];
  int v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_145230();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    uint64_t v35 = sub_A314(&qword_19C150);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t sub_E08C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E08D4);
}

uint64_t sub_E08D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19EB20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 32);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_E0A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E0A2C);
}

uint64_t sub_E0A2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_A314(&qword_19EB20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_E0B64()
{
  sub_A6D70(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_A6D70(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_E0C70()
{
  unint64_t result = qword_1A1DB0;
  if (!qword_1A1DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DB0);
  }
  return result;
}

unint64_t sub_E0CC4()
{
  unint64_t result = qword_1A1DC8;
  if (!qword_1A1DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DC8);
  }
  return result;
}

uint64_t sub_E0D18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *_s6ResultV10CodingKeysOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE0E4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_6()
{
  return &_s6ResultV10CodingKeysON_6;
}

unsigned char *_s6ResultV10CodingKeysOwst_5(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE0F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_7()
{
  return &_s6ResultV10CodingKeysON_7;
}

unint64_t sub_E0F8C()
{
  unint64_t result = qword_1A1DD8;
  if (!qword_1A1DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DD8);
  }
  return result;
}

unint64_t sub_E0FE4()
{
  unint64_t result = qword_1A1DE0;
  if (!qword_1A1DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DE0);
  }
  return result;
}

unint64_t sub_E103C()
{
  unint64_t result = qword_1A1DE8;
  if (!qword_1A1DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DE8);
  }
  return result;
}

unint64_t sub_E1094()
{
  unint64_t result = qword_1A1DF0;
  if (!qword_1A1DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DF0);
  }
  return result;
}

unint64_t sub_E10EC()
{
  unint64_t result = qword_1A1DF8;
  if (!qword_1A1DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1DF8);
  }
  return result;
}

unint64_t sub_E1144()
{
  unint64_t result = qword_1A1E00;
  if (!qword_1A1E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1E00);
  }
  return result;
}

uint64_t sub_E1198(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_E13CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_E1588(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_144F60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (void *)((char *)a1 + v10);
    uint64_t v15 = (void *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (void *)((char *)a1 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)((char *)a1 + v18);
    uint64_t v23 = (void *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[11];
    uint64_t v26 = a3[12];
    uint64_t v27 = (void *)((char *)a1 + v25);
    int v28 = (void *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
    uint64_t v30 = a3[13];
    uint64_t v31 = *(void **)((char *)a2 + v30);
    *(void *)((char *)a1 + v30) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = v31;
  }
  return a1;
}

void sub_E1704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 52));
}

uint64_t sub_E17C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v29 = a3[13];
  uint64_t v30 = *(void **)(a2 + v29);
  *(void *)(a1 + v29) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v31 = v30;
  return a1;
}

uint64_t sub_E18F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = a3[13];
  uint64_t v26 = *(void **)(a2 + v25);
  uint64_t v27 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = v26;
  id v28 = v26;

  return a1;
}

uint64_t sub_E1A8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_E1B58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_144F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  void *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  int v34 = *(void **)(a1 + v33);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);

  return a1;
}

uint64_t sub_E1C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E1C98);
}

uint64_t sub_E1C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_E1D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E1D70);
}

uint64_t sub_E1D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_144F60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ExportOptions()
{
  uint64_t result = qword_1A1E78;
  if (!qword_1A1E78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_E1E7C()
{
  uint64_t result = sub_144F60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_E1F44()
{
  uint64_t v1 = type metadata accessor for ExportOptions();
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultManager];
  sub_144EB0(v5);
  uint64_t v7 = v6;
  id v25 = 0;
  unsigned int v8 = [v4 removeItemAtURL:v6 error:&v25];

  if (v8)
  {
    uint64_t v9 = qword_19B000;
    id v10 = v25;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_145760();
    sub_C584(v11, (uint64_t)qword_1A1E08);
    sub_12AAC(v0, (uint64_t)v3);
    uint64_t v12 = sub_145740();
    os_log_type_t v13 = sub_146210();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v25 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_144F60();
      sub_1E014();
      uint64_t v15 = sub_146B50();
      uint64_t v24 = sub_3D2B4(v15, v16, (uint64_t *)&v25);
      sub_146610();
      swift_bridgeObjectRelease();
      sub_12B10((uint64_t)v3);
      _os_log_impl(&def_94138, v12, v13, "ExportOptions.cleanup removed %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_12B10((uint64_t)v3);
    }
  }
  else
  {
    id v17 = v25;
    sub_144D90();

    swift_willThrow();
    if (qword_19B000 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_145760();
    sub_C584(v18, (uint64_t)qword_1A1E08);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v19 = sub_145740();
    os_log_type_t v20 = sub_1461F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      swift_errorRetain();
      uint64_t v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v25 = v23;
      sub_146610();
      *uint64_t v22 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_94138, v19, v20, "ExportOptions.cleanup error %@", v21, 0xCu);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_E2374()
{
  v1[6] = v0;
  uint64_t v2 = sub_144E20();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_144F60();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_E24A0, 0, 0);
}

uint64_t sub_E24A0()
{
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[12];
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v15 = type metadata accessor for ExportOptions();
  uint64_t v5 = (void *)(v3 + *(int *)(v15 + 28));
  uint64_t v6 = v5[1];
  v0[2] = *v5;
  v0[3] = v6;
  unsigned int v14 = enum case for URL.DirectoryHint.inferFromPath(_:);
  os_log_type_t v13 = *(void (**)(uint64_t))(v1 + 104);
  v13(v2);
  sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v7(v2, v4);
  swift_bridgeObjectRelease();
  unsigned int v8 = (void *)(v3 + *(int *)(v15 + 44));
  uint64_t v9 = v8[1];
  v0[4] = *v8;
  v0[5] = v9;
  ((void (*)(uint64_t, void, uint64_t))v13)(v2, v14, v4);
  swift_bridgeObjectRetain();
  sub_144F50();
  v7(v2, v4);
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_task_alloc();
  v0[14] = v10;
  *(void *)(v10 + 16) = v16;
  *(void *)(v10 + 24) = v17;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[15] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_E26E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_E26E0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_E28B8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_E27FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_E27FC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[11] + 8);
  v3(v0[12], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_E28B8()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[10];
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_E2978()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ExportOptions();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v49 - v6;
  uint64_t v8 = sub_144F60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v55 = self;
  id v12 = [v55 defaultManager];
  sub_E3098((uint64_t)v11);
  sub_144EB0(v13);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  id v57 = 0;
  unsigned int v17 = [v12 createDirectoryAtURL:v15 withIntermediateDirectories:1 attributes:0 error:&v57];

  id v18 = v57;
  if (!v17) {
    goto LABEL_10;
  }
  uint64_t v19 = v16;
  if (qword_19B000 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_145760();
  uint64_t v21 = sub_C584(v20, (uint64_t)qword_1A1E08);
  uint64_t v54 = (void (*)(char *, uint64_t))v1;
  sub_12AAC(v1, (uint64_t)v7);
  uint64_t v52 = v21;
  uint64_t v22 = sub_145740();
  os_log_type_t v23 = sub_146210();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = (void *)swift_slowAlloc();
    id v57 = v51;
    char v53 = v5;
    *(_DWORD *)uint64_t v24 = 136315138;
    v49[1] = v24 + 4;
    uint64_t v50 = v24;
    sub_E3098((uint64_t)v11);
    sub_1E014();
    uint64_t v25 = sub_146B50();
    uint64_t v26 = v8;
    unint64_t v28 = v27;
    v19(v11, v26);
    uint64_t v56 = sub_3D2B4(v25, v28, (uint64_t *)&v57);
    uint64_t v5 = v53;
    sub_146610();
    uint64_t v8 = v26;
    swift_bridgeObjectRelease();
    sub_12B10((uint64_t)v7);
    _os_log_impl(&def_94138, v22, v23, "ExportOptions.createDirectories created %s", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_12B10((uint64_t)v7);
  }

  id v29 = [v55 defaultManager];
  uint64_t v30 = (uint64_t)v54;
  sub_E3C18((uint64_t)v11);
  sub_144EB0(v31);
  uint64_t v33 = v32;
  v19(v11, v8);
  id v57 = 0;
  unsigned int v34 = [v29 createDirectoryAtURL:v33 withIntermediateDirectories:1 attributes:0 error:&v57];

  id v18 = v57;
  if (v34)
  {
    sub_12AAC(v30, (uint64_t)v5);
    uint64_t v35 = sub_145740();
    os_log_type_t v36 = sub_146210();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v54 = v19;
      uint64_t v38 = (uint8_t *)v37;
      id v57 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      id v55 = v38 + 4;
      sub_E3C18((uint64_t)v11);
      sub_1E014();
      uint64_t v39 = sub_146B50();
      char v53 = v5;
      unint64_t v41 = v40;
      v54(v11, v8);
      uint64_t v56 = sub_3D2B4(v39, v41, (uint64_t *)&v57);
      sub_146610();
      swift_bridgeObjectRelease();
      sub_12B10((uint64_t)v53);
      _os_log_impl(&def_94138, v35, v36, "ExportOptions.createDirectories created %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_12B10((uint64_t)v5);
    }
  }
  else
  {
LABEL_10:
    uint64_t v42 = v18;
    sub_144D90();

    swift_willThrow();
    if (qword_19B000 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_145760();
    sub_C584(v43, (uint64_t)qword_1A1E08);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v44 = sub_145740();
    os_log_type_t v45 = sub_1461F0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      char v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138412290;
      swift_errorRetain();
      Swift::String v48 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v57 = v48;
      sub_146610();
      *char v47 = v48;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_94138, v44, v45, "ExportOptions.createDirectories error %@", v46, 0xCu);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_E3098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_144E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ExportOptions();
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(v9 + 28));
  uint64_t v11 = v10[1];
  uint64_t v21 = *v10;
  uint64_t v22 = v11;
  uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
  unsigned int v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v17(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  os_log_type_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  swift_bridgeObjectRelease();
  unsigned int v14 = (uint64_t *)(v1 + *(int *)(v9 + 32));
  uint64_t v15 = v14[1];
  uint64_t v21 = *v14;
  uint64_t v22 = v15;
  v17(v5, v12, v2);
  swift_bridgeObjectRetain();
  sub_144F50();
  v13(v5, v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t sub_E32EC(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = sub_144E20();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_144F60();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = sub_145F30();
  v3[14] = sub_145F20();
  uint64_t v7 = sub_145EB0();
  v3[15] = v7;
  v3[16] = v6;
  return _swift_task_switch(sub_E3444, v7, v6);
}

uint64_t sub_E3444()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  sub_144FF0();
  v0[17] = v5;
  v0[18] = [objc_allocWithZone((Class)type metadata accessor for PrintableHTMLContentController()) init];
  uint64_t v6 = (void *)(v3 + *(int *)(type metadata accessor for ExportOptions() + 28));
  uint64_t v7 = v6[1];
  v0[2] = *v6;
  v0[3] = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[19] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_E35C8;
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[4];
  return sub_BBE1C(v10, v9);
}

uint64_t sub_E35C8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 160) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 120);
  return _swift_task_switch(sub_E3754, v7, v6);
}

uint64_t sub_E3754()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[5];
  id v3 = [objc_allocWithZone((Class)UIPrintInteractionController) init];
  v0[21] = v3;
  id v4 = [self printInfo];
  v0[22] = v4;
  [v4 setOutputType:0];
  [v3 setPrintInfo:v4];
  id v5 = objc_allocWithZone((Class)type metadata accessor for JournalPrintPageRenderer());
  id v6 = v1;
  id v7 = [v5 init];
  id v8 = [v6 viewPrintFormatter];
  [v7 addPrintFormatter:v8 startingAtPageAtIndex:0];

  [v3 setPrintPageRenderer:v7];
  v0[23] = sub_145F20();
  uint64_t v9 = swift_task_alloc();
  v0[24] = v9;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v2;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[25] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_E3958;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_E3958()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    id v5 = sub_E3B3C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    id v5 = sub_E3A7C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_E3A7C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  double v4 = *(double *)(v0 + 136);

  swift_release();
  sub_E4498(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_E3B3C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  double v4 = *(double *)(v0 + 136);

  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_E4498(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_E3C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = sub_144E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ExportOptions();
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(v9 + 28));
  uint64_t v11 = v10[1];
  uint64_t v21 = *v10;
  uint64_t v22 = v11;
  uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
  unsigned int v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v17(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  os_log_type_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  swift_bridgeObjectRelease();
  unsigned int v14 = (uint64_t *)(v1 + *(int *)(v9 + 36));
  uint64_t v15 = v14[1];
  uint64_t v21 = *v14;
  uint64_t v22 = v15;
  v17(v5, v12, v2);
  swift_bridgeObjectRetain();
  sub_144F50();
  v13(v5, v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t sub_E3E6C(uint64_t a1, UIImage *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  uint64_t v6 = sub_144E20();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unsigned int v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  sub_E3C18((uint64_t)v14);
  uint64_t v33 = a3;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
  sub_12060();
  sub_144F50();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  id v17 = [self defaultManager];
  sub_144F10();
  NSString v18 = sub_145B80();
  swift_bridgeObjectRelease();
  unsigned __int8 v19 = [v17 fileExistsAtPath:v18];

  if ((v19 & 1) == 0)
  {
    uint64_t v20 = UIImageHEICRepresentation(v31);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = sub_144FA0();
      unint64_t v24 = v23;

      sub_144FB0();
      sub_C52C(v22, v24);
    }
    else
    {
      if (qword_19B000 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_145760();
      sub_C584(v25, (uint64_t)qword_1A1E08);
      uint64_t v26 = sub_145740();
      os_log_type_t v27 = sub_1461F0();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v28 = 0;
        _os_log_impl(&def_94138, v26, v27, "ExportOptions.saveImageToResources error getting data from image.", v28, 2u);
        swift_slowDealloc();
      }
    }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v32, v16, v10);
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_E43A4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A1E08);
  sub_C584(v0, (uint64_t)qword_1A1E08);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

void sub_E4498(double a1)
{
  if (qword_19B000 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_145760();
  sub_C584(v2, (uint64_t)qword_1A1E08);
  oslog = sub_145740();
  os_log_type_t v3 = sub_1461E0();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_A314(&qword_1A0A00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = sub_145BD0();
    sub_3D2B4(v7, v8, &v10);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, oslog, v3, "ExportOptions.savePDF executed in %ss", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_E469C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_A314(&qword_19E318);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_144EB0(&aBlock);
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock._reserved = sub_E49FC;
  uint64_t v13 = v10;
  aBlock.super.Class isa = (Class)_NSConcreteStackBlock;
  aBlock._urlString = (NSString *)1107296256;
  aBlock._baseURL = (NSURL *)sub_E48C4;
  aBlock._clients = &unk_189C30;
  uint64_t v11 = _Block_copy(&aBlock);
  swift_release();
  [a2 savePDFToURL:v8 showProgress:0 completionHandler:v11];
  _Block_release(v11);
}

uint64_t sub_E485C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_errorRetain();
    sub_A314(&qword_19E318);
    return sub_145EC0();
  }
  else
  {
    sub_A314(&qword_19E318);
    return sub_145ED0();
  }
}

void sub_E48C4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(v9, a3, a4);
  swift_release();
}

void sub_E4958(uint64_t a1)
{
}

void sub_E4960(uint64_t a1)
{
  sub_E469C(a1, *(void **)(v1 + 16));
}

uint64_t sub_E4968()
{
  uint64_t v1 = sub_A314(&qword_19E318);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E49FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_A314(&qword_19E318);

  return sub_E485C(a1, a2, a3);
}

uint64_t sub_E4A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_E4A98()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for ExportOptions.ExportFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE4B6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExportOptions.ExportFormat()
{
  return &type metadata for ExportOptions.ExportFormat;
}

unint64_t sub_E4BA8()
{
  unint64_t result = qword_1A1EE0;
  if (!qword_1A1EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1EE0);
  }
  return result;
}

uint64_t sub_E4BFC()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A1EE8);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_1A1EE8);
  if (qword_19AF40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D10);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_E4CC4()
{
  type metadata accessor for AppIconProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = &_swiftEmptyDictionarySingleton;
  qword_1A3E68 = v0;
  return result;
}

uint64_t sub_E4D0C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_E51F0((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t type metadata accessor for AppIconProvider()
{
  return self;
}

uint64_t sub_E4D8C()
{
  *(void *)(v1 + 152) = v0;
  return _swift_task_switch(sub_E4DAC, v0, 0);
}

uint64_t sub_E4DAC()
{
  uint64_t v1 = v0[19];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_137A88(0xD000000000000019, 0x8000000000151A70);
    if (v4)
    {
      uint64_t v5 = *(void **)(*(void *)(v2 + 56) + 8 * v3);
      id v6 = v5;
      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t (*)(void *))v0[1];
      return v7(v5);
    }
    swift_bridgeObjectRelease();
  }
  id v9 = objc_allocWithZone((Class)ISIcon);
  NSString v10 = sub_145B80();
  id v11 = [v9 initWithBundleIdentifier:v10];
  v0[20] = v11;

  id v12 = [objc_allocWithZone((Class)ISImageDescriptor) init];
  v0[21] = v12;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_E4FBC;
  uint64_t v13 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_E4D0C;
  v0[13] = &unk_189CE8;
  v0[14] = v13;
  [v11 getCGImageForImageDescriptor:v12 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_E4FBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  return _swift_task_switch(sub_E50B0, v1, 0);
}

uint64_t sub_E50B0()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = (void *)v0[21];
  if (v1)
  {
    id v4 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];

    if (v4)
    {
      uint64_t v5 = v0[19];
      swift_beginAccess();
      id v6 = v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *(void *)(v5 + 112);
      *(void *)(v5 + 112) = 0x8000000000000000;
      sub_13C3B0((uint64_t)v6, 0xD000000000000019, 0x8000000000151A70, isUniquelyReferenced_nonNull_native);
      *(void *)(v5 + 112) = v10;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
  else
  {

    id v4 = 0;
  }
  id v8 = (uint64_t (*)(id))v0[1];
  return v8(v4);
}

uint64_t sub_E51F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_1A1FD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_E5258(double a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 fontDescriptor];
  id v5 = [v4 fontAttributes];

  type metadata accessor for AttributeName(0);
  sub_E5620();
  uint64_t v6 = sub_1459E0();

  uint64_t v33 = v6;
  if (!*(void *)(v6 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = UIFontDescriptorTraitsAttribute;
  unint64_t v8 = sub_137BD8((uint64_t)v7);
  if ((v9 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_C738(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v31);

  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_8:
    sub_C5BC((uint64_t)&v31);
    goto LABEL_9;
  }
  sub_A314(&qword_1A1FE0);
  if (!swift_dynamicCast())
  {
LABEL_9:
    unint64_t v10 = sub_137018((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)&v30[0];
LABEL_10:
  type metadata accessor for Weight(0);
  *((void *)&v32 + 1) = v11;
  *(double *)&long long v31 = a1;
  sub_2A74C(&v31, v30);
  id v12 = UIFontWeightTrait;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_13C9A4(v30, v12, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  uint64_t v14 = UIFontDescriptorNameAttribute;
  sub_E56B8((uint64_t)v14, (uint64_t (*)(uint64_t))sub_137BD8, (void (*)(uint64_t, uint64_t))sub_E57D4, (void (*)(void))sub_13DA0C, &v31);

  sub_C5BC((uint64_t)&v31);
  *((void *)&v32 + 1) = sub_A314(&qword_1A1FE0);
  *(void *)&long long v31 = v10;
  sub_2A74C(&v31, v30);
  uint64_t v15 = UIFontDescriptorTraitsAttribute;
  uint64_t v16 = v33;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C7F4(v30, v15, v17);

  swift_bridgeObjectRelease();
  NSString v18 = UIFontDescriptorFamilyAttribute;
  id v19 = [v2 familyName];
  uint64_t v20 = sub_145BC0();
  uint64_t v22 = v21;

  *((void *)&v32 + 1) = &type metadata for String;
  *(void *)&long long v31 = v20;
  *((void *)&v31 + 1) = v22;
  sub_2A74C(&v31, v30);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_13C7F4(v30, v18, v23);
  uint64_t v33 = v16;

  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone((Class)UIFontDescriptor);
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithFontAttributes:isa];

  [v2 pointSize];
  id v28 = [self fontWithDescriptor:v26 size:v27];

  return v28;
}

unint64_t sub_E5620()
{
  unint64_t result = qword_19B478;
  if (!qword_19B478)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B478);
  }
  return result;
}

double sub_E5678@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_E56B8(a1, (uint64_t (*)(uint64_t))sub_137B00, (void (*)(uint64_t, uint64_t))sub_E57D4, (void (*)(void))sub_13DA00, a2);
}

double sub_E56B8@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  char v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v9;
    uint64_t v17 = *v9;
    *char v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }

    sub_2A74C((_OWORD *)(*(void *)(v15 + 56) + 32 * v12), a5);
    a3(v12, v15);
    *char v9 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

unint64_t sub_E57D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1466D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_145BC0();
        sub_146C80();
        id v11 = v10;
        sub_145C70();
        Swift::Int v12 = sub_146CD0();

        double result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          NSString v18 = (_OWORD *)(v17 + 32 * v3);
          id v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *NSString v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_E59C8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1466D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_146C80();
        sub_145C70();
        swift_bridgeObjectRelease();
        double result = sub_146CD0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          id v11 = (unsigned char *)(v10 + v3);
          Swift::Int v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *id v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0xE5C38);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_E5C50(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_A314(&qword_19C538);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s12ContactAssetC11ContactDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_E5D40, 0, 0);
}

uint64_t sub_E5D40()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_2AFBC(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_E69B0(v0[4]);
    sub_1CF0C();
    swift_allocError();
    *uint64_t v4 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = (uint64_t *)v0[7];
    sub_C9660(v0[4], (uint64_t)v7);
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_2E1AC(v8, v9, 0xD000000000000029, (void *)0x8000000000151AB0, 0, 0);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[8] = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[9] = v13;
    void *v13 = v0;
    v13[1] = sub_E5F1C;
    uint64_t v14 = v0[2];
    return sub_543BC(v14, 0, 0, 0, 0, 0, 0, v10);
  }
}

uint64_t sub_E5F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 80) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v7 = sub_E6100;
  }
  else
  {
    *(void *)(v6 + 88) = a2;
    *(void *)(v6 + 96) = a1;
    uint64_t v7 = sub_E606C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_E606C()
{
  sub_E6E48(v0[7], _s12ContactAssetC11ContactDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  return v1(v2, v3);
}

uint64_t sub_E6100()
{
  sub_E6E48(*(void *)(v0 + 56), _s12ContactAssetC11ContactDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_E618C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_E5C50(a1);
}

double sub_E6220@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C538);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata))
  {
    swift_retain();
    sub_314A4((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_C9660((uint64_t)v8, (uint64_t)v12);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      sub_2647C((uint64_t)v12 + *(int *)(v9 + 20), (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_E6E48((uint64_t)v12, _s12ContactAssetC11ContactDataVMa);
      uint64_t v15 = _s6ResultVMa_8();
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = sub_E6EA8(&qword_1A2000, (void (*)(uint64_t))_s6ResultVMa_8);
      *(void *)(a1 + 40) = sub_E6EA8(&qword_1A2008, (void (*)(uint64_t))_s6ResultVMa_8);
      uint64_t v16 = sub_484D0((uint64_t *)a1);
      *uint64_t v16 = v14;
      v16[1] = v13;
      sub_12384((uint64_t)v5, (uint64_t)v16 + *(int *)(v15 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_E69B0((uint64_t)v8);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_E64C0(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A20B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_E6D90();
  sub_146D10();
  v8[15] = 0;
  sub_146A90();
  if (!v1)
  {
    _s6ResultVMa_8();
    v8[14] = 1;
    sub_145230();
    sub_E6EA8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_E6678@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A20A0);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_8();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_E6D90();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = sub_1469E0();
  v12[1] = v15;
  sub_145230();
  char v21 = 1;
  sub_E6EA8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_12384((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_E6DE4((uint64_t)v12, v18);
  sub_C7FC((uint64_t)a1);
  return sub_E6E48((uint64_t)v12, (uint64_t (*)(void))_s6ResultVMa_8);
}

uint64_t sub_E6958(uint64_t a1)
{
  uint64_t result = sub_E6EA8(&qword_1A1FE8, (void (*)(uint64_t))_s12ContactAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_E69B0(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C538);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E6A10()
{
  if (*v0) {
    return 0x6D69547472617473;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_E6A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_E70FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E6A70(uint64_t a1)
{
  unint64_t v2 = sub_E6D90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E6AAC(uint64_t a1)
{
  unint64_t v2 = sub_E6D90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E6AE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_E6678(a1, a2);
}

uint64_t sub_E6B00(void *a1)
{
  return sub_E64C0(a1);
}

uint64_t _s6ResultVMa_8()
{
  uint64_t result = qword_1A2068;
  if (!qword_1A2068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_E6B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E6B78);
}

uint64_t sub_E6B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_E6C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E6C4C);
}

uint64_t sub_E6C4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_E6CF8()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_E6D90()
{
  unint64_t result = qword_1A20A8;
  if (!qword_1A20A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A20A8);
  }
  return result;
}

uint64_t sub_E6DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ResultVMa_8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E6E48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_E6EA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_6(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xE6FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_8()
{
  return &_s6ResultV10CodingKeysON_8;
}

unint64_t sub_E6FF8()
{
  unint64_t result = qword_1A20B8;
  if (!qword_1A20B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A20B8);
  }
  return result;
}

unint64_t sub_E7050()
{
  unint64_t result = qword_1A20C0;
  if (!qword_1A20C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A20C0);
  }
  return result;
}

unint64_t sub_E70A8()
{
  unint64_t result = qword_1A20C8;
  if (!qword_1A20C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A20C8);
  }
  return result;
}

uint64_t sub_E70FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_E71EC()
{
  uint64_t v1 = v0;
  BOOL v2 = (void *)0xE000000000000000;
  sub_1467D0(19);
  id v3 = [v0 entity];
  id v4 = [v3 managedObjectClassName];

  if (v4)
  {
    uint64_t v5 = sub_145BC0();
    BOOL v2 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  v13._id countAndFlagsBits = v5;
  v13._object = v2;
  sub_145C90(v13);
  swift_bridgeObjectRelease();
  v14._id countAndFlagsBits = 23328;
  v14._object = (void *)0xE200000000000000;
  sub_145C90(v14);
  id v7 = [v1 objectID];
  id v8 = objc_msgSend(v7, "pl_shortURI");

  if (v8)
  {
    uint64_t v9 = sub_145BC0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = (void *)0xE000000000000000;
  }
  v15._id countAndFlagsBits = v9;
  v15._object = v11;
  sub_145C90(v15);
  swift_bridgeObjectRelease();
  v16._id countAndFlagsBits = 0x7865746E6F63205DLL;
  v16._object = (void *)0xEB00000000203A74;
  sub_145C90(v16);
  [v1 managedObjectContext];
  sub_A314(&qword_1A20D0);
  v17._id countAndFlagsBits = sub_145C20();
  sub_145C90(v17);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_E739C(UIImage *a1, uint64_t a2, uint64_t a3)
{
  BOOL v24 = a1;
  uint64_t v5 = sub_144E20();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v23 - v14;
  sub_7917C((uint64_t)v13);
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_12060();
  sub_144F50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  Swift::String v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  Swift::String v17 = UIImageHEICRepresentation(v24);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_144FA0();
    unint64_t v21 = v20;

    sub_E90F0();
    sub_C52C(v19, v21);
  }
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

uint64_t sub_E75DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145940();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_145980();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19ADD8 != -1) {
    swift_once();
  }
  v18[1] = qword_1A3B90;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_E90CC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  aBlock[3] = &unk_189E08;
  Swift::String v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  sub_145950();
  unint64_t v20 = &_swiftEmptyArrayStorage;
  sub_885A4();
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  sub_1466C0();
  sub_146330();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_E78C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2;
    sub_E739C(v8, a3, a4);
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_E7964()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A20D8);
  sub_C584(v0, (uint64_t)qword_1A20D8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_E7A60()
{
  v1[3] = v0;
  sub_A314(&qword_19C5A0);
  v1[4] = swift_task_alloc();
  sub_A314(&qword_19C498);
  v1[5] = swift_task_alloc();
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  id v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *id v3 = v1;
  v3[1] = sub_E7BAC;
  return sub_42ECC();
}

uint64_t sub_E7BAC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E7CAC, 0, 0);
}

uint64_t sub_E7CAC()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v1);
  }
  uint64_t v2 = v0[4];
  sub_12428(v0[3] + qword_1A3E70, v2, &qword_19C5A0);
  uint64_t v3 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  if (v4 == 1)
  {
    sub_1248C(v0[4], &qword_19C5A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
LABEL_5:
    sub_1248C(v0[5], &qword_19C498);
    if (qword_19B018 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_145760();
    sub_C584(v9, (uint64_t)qword_1A20D8);
    uint64_t v10 = sub_145740();
    os_log_type_t v11 = sub_1461F0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&def_94138, v10, v11, "no visits data", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_10;
  }
  sub_12428(v0[4], v0[5], &qword_19C498);
  sub_E8FEC(v8, _s15GenericMapAssetC14GenericMapDataVMa);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1) {
    goto LABEL_5;
  }
  sub_B9368(v0[5], v0[8]);
  Swift::String v15 = (void *)swift_task_alloc();
  v0[11] = v15;
  *Swift::String v15 = v0;
  v15[1] = sub_E7F90;
  uint64_t v16 = v0[3];
  v15[16] = v0[8];
  v15[17] = v16;
  return _swift_task_switch(sub_E87C0, 0, 0);
}

uint64_t sub_E7F90(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E8090, 0, 0);
}

uint64_t sub_E8090()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 24) + qword_19D1C8);
    *(unsigned char *)(v0 + 120) = v2;
    switch(v2)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_146B90();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          sub_E8FEC(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
          uint64_t v1 = *(void *)(v0 + 96);
          goto LABEL_10;
        }
        sub_4CB28();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 104) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_E8310;
        uint64_t result = sub_47114(v5 * v8);
        break;
    }
  }
  else
  {
    sub_E8FEC(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v1);
  }
  return result;
}

uint64_t sub_E8310(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_E8410, 0, 0);
}

uint64_t sub_E8410()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    char v12 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v12)
    {
      sub_E8FEC(v0[8], _s10VisitAssetC9VisitDataVMa);

      goto LABEL_15;
    }
    if (qword_19ADD0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[8];
    sub_E75DC(v1, *(void *)(v0[3] + qword_19D198), *(void *)(v0[3] + qword_19D198 + 8));

    uint64_t v11 = v13;
  }
  else
  {
    if (qword_19B018 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = sub_145760();
    sub_C584(v3, (uint64_t)qword_1A20D8);
    id v4 = v2;
    double v5 = sub_145740();
    os_log_type_t v6 = sub_1461F0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    double v8 = v0[3];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v0[2] = v8;
      uint64_t v10 = v8;
      sub_146610();
      *uint64_t v17 = v8;

      _os_log_impl(&def_94138, v5, v6, "%@ - error creating thumbnail from MKMap", v9, 0xCu);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      double v5 = v8;
    }

    uint64_t v11 = v0[8];
  }
  sub_E8FEC(v11, _s10VisitAssetC9VisitDataVMa);
LABEL_15:
  uint64_t v14 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_E87A0(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_E87C0, 0, 0);
}

uint64_t sub_E87C0()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  sub_A314(&qword_1A2278);
  uint64_t v3 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1578A0;
  sub_2E1B0(v1, v5 + v4);
  *(void *)(v0 + 144) = sub_C5E3C(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(unsigned char *)(v0 + 192) = *(unsigned char *)(v2 + qword_19D1C8);
  *(void *)(v0 + 152) = *(void *)(v2 + qword_19D1D8);
  sub_145F30();
  *(void *)(v0 + 160) = sub_145F20();
  uint64_t v7 = sub_145EB0();
  return _swift_task_switch(sub_E8960, v7, v6);
}

uint64_t sub_E8960()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 192);
  swift_release();
  *(void *)(v0 + 168) = sub_936E0(v2, 0, v3, v1, 0);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_E89FC, 0, 0);
}

uint64_t sub_E89FC()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_E8B20;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_6F3C0;
  v0[13] = &unk_189E30;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_E8B20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_E8C30;
  }
  else {
    uint64_t v2 = sub_73458;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_E8C30()
{
  swift_willThrow();
  if (qword_19B018 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_1A20D8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    char v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    double v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v9;
    sub_146610();
    *double v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_E8E58()
{
  return sub_1248C(v0 + qword_1A3E70, &qword_19C5A0);
}

uint64_t sub_E8E84(uint64_t a1)
{
  return sub_1248C(a1 + qword_1A3E70, &qword_19C5A0);
}

uint64_t type metadata accessor for GenericMapThumbnailCacheOperation()
{
  uint64_t result = qword_1A2118;
  if (!qword_1A2118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_E8EFC()
{
  sub_E8F8C();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_E8F8C()
{
  if (!qword_1A2130)
  {
    _s15GenericMapAssetC14GenericMapDataVMa(255);
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1A2130);
    }
  }
}

uint64_t sub_E8FE4()
{
  return type metadata accessor for GenericMapThumbnailCacheOperation();
}

uint64_t sub_E8FEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_E904C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E9084()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E90CC()
{
  return sub_E78C8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_E90D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_E90E8()
{
  return swift_release();
}

uint64_t sub_E90F0()
{
  return sub_144FB0();
}

uint64_t sub_E92F8()
{
  uint64_t v0 = sub_1452D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145450();
  sub_C61C(v4, qword_1A3E78);
  sub_C584(v4, (uint64_t)qword_1A3E78);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  sub_1452E0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

BOOL sub_E9418(uint64_t *a1, uint64_t a2)
{
  return !a2 || sub_368F8(*a1, a2);
}

uint64_t sub_E9454()
{
  sub_A314(&qword_1A2280);
  uint64_t v0 = sub_145430();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1578B0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for Calendar.Component.era(_:), v0);
  v6(v5 + v2, enum case for Calendar.Component.year(_:), v0);
  v6(v5 + 2 * v2, enum case for Calendar.Component.month(_:), v0);
  v6(v5 + 3 * v2, enum case for Calendar.Component.day(_:), v0);
  uint64_t v7 = sub_F3728(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1A3E90 = v7;
  return result;
}

uint64_t sub_E95E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_146C80();
  sub_145290();
  sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  sub_145A20();
  Swift::Int v10 = sub_146CD0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v19 = v2;
    uint64_t v20 = a2;
    uint64_t v21 = a1;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v22 + 72);
    while (1)
    {
      sub_926B8(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8);
      char v15 = sub_145260();
      sub_9271C((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v20;
        a1 = v21;
        unint64_t v3 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_9271C(v20);
    sub_926B8(*(void *)(*v19 + 48) + v14 * v12, v21);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_926B8(a2, (uint64_t)v8);
    uint64_t v23 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_EE300((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v23;
    swift_bridgeObjectRelease();
    sub_92654(a2, a1);
    return 1;
  }
}

uint64_t sub_E985C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_146C80();
  sub_146C90(a2);
  Swift::Int v6 = sub_146CD0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_EE558(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_E997C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_146C80();
  sub_8758(a2);
  swift_bridgeObjectRetain();
  sub_145C70();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_146CD0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_67:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_EE6B8(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_70;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE500000000000000;
    uint64_t v10 = 0x6F746F6870;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v10 = 0x746F68506576696CLL;
        unint64_t v9 = 0xE90000000000006FLL;
        break;
      case 2:
        uint64_t v10 = 0x6F65646976;
        break;
      case 3:
        uint64_t v10 = 0x636973756DLL;
        break;
      case 4:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x74736163646F70;
        break;
      case 5:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1802465122;
        break;
      case 6:
        uint64_t v10 = 0x6F69647561;
        break;
      case 7:
        uint64_t v10 = 0x7469736976;
        break;
      case 8:
        uint64_t v10 = 0x6E695069746C756DLL;
        unint64_t v9 = 0xEB0000000070614DLL;
        break;
      case 9:
        unint64_t v9 = 0xEA00000000007061;
        uint64_t v10 = 0x4D636972656E6567;
        break;
      case 0xA:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1802398060;
        break;
      case 0xB:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x746361746E6F63;
        break;
      case 0xC:
        uint64_t v10 = 0x4974756F6B726F77;
        unint64_t v9 = 0xEB000000006E6F63;
        break;
      case 0xD:
        uint64_t v10 = 0x5274756F6B726F77;
        unint64_t v9 = 0xEC0000006574756FLL;
        break;
      case 0xE:
        uint64_t v10 = 0x697463656C666572;
        unint64_t v9 = 0xEA00000000006E6FLL;
        break;
      case 0xF:
        uint64_t v10 = 0x4D664F6574617473;
        unint64_t v9 = 0xEB00000000646E69;
        break;
      case 0x10:
        uint64_t v10 = 0x63416E6F69746F6DLL;
        unint64_t v9 = 0xEE00797469766974;
        break;
      case 0x11:
        uint64_t v10 = 0x7261506472696874;
        unint64_t v9 = 0xEF616964654D7974;
        break;
      case 0x12:
        uint64_t v10 = 0x6C6F686563616C70;
        unint64_t v9 = 0xEB00000000726564;
        break;
      case 0x13:
        uint64_t v10 = 0x76456B6165727473;
        unint64_t v9 = 0xEB00000000746E65;
        break;
      case 0x14:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE500000000000000;
    uint64_t v12 = 0x6F746F6870;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE90000000000006FLL;
        if (v10 == 0x746F68506576696CLL) {
          goto LABEL_61;
        }
        goto LABEL_62;
      case 2:
        uint64_t v13 = 1701079414;
        goto LABEL_34;
      case 3:
        if (v10 != 0x636973756DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 4:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v14 = 0x736163646F70;
        goto LABEL_44;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1802465122) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 6:
        uint64_t v13 = 1768191329;
LABEL_34:
        if (v10 != (v13 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 7:
        if (v10 != 0x7469736976) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 8:
        uint64_t v15 = 0x6E695069746C756DLL;
        uint64_t v16 = 7364941;
        goto LABEL_57;
      case 9:
        unint64_t v11 = 0xEA00000000007061;
        if (v10 != 0x4D636972656E6567) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 10:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1802398060) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 11:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v14 = 0x6361746E6F63;
LABEL_44:
        if (v10 != (v14 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 12:
        uint64_t v15 = 0x4974756F6B726F77;
        uint64_t v16 = 7237475;
        goto LABEL_57;
      case 13:
        unint64_t v11 = 0xEC0000006574756FLL;
        if (v10 != 0x5274756F6B726F77) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 14:
        unint64_t v11 = 0xEA00000000006E6FLL;
        if (v10 != 0x697463656C666572) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 15:
        uint64_t v15 = 0x4D664F6574617473;
        uint64_t v16 = 6581865;
        goto LABEL_57;
      case 16:
        unint64_t v11 = 0xEE00797469766974;
        if (v10 != 0x63416E6F69746F6DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 17:
        unint64_t v11 = 0xEF616964654D7974;
        if (v10 != 0x7261506472696874) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 18:
        uint64_t v15 = 0x6C6F686563616C70;
        uint64_t v16 = 7497060;
LABEL_57:
        unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        if (v10 != v15) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 19:
        uint64_t v12 = 0x76456B6165727473;
        unint64_t v11 = 0xEB00000000746E65;
        goto LABEL_60;
      case 20:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x6E776F6E6B6E75) {
          goto LABEL_62;
        }
        goto LABEL_61;
      default:
LABEL_60:
        if (v10 != v12) {
          goto LABEL_62;
        }
LABEL_61:
        if (v9 != v11)
        {
LABEL_62:
          char v17 = sub_146B90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_69;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_67;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_69:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_70:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_EA098(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_146C80();
  swift_bridgeObjectRetain();
  sub_145C70();
  Swift::Int v8 = sub_146CD0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_146B90() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_146B90() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_EEDD0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_EA248(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_146C70();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_EEF6C(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_EA344(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_145430();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_F3AD4(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_145A10();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_F3AD4(&qword_19C178, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      char v21 = sub_145AD0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    BOOL v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_EF090((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_EA668(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_145A10();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_F3AD4((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_145AD0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    BOOL v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_EF34C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_EA98C(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_145BC0();
  sub_146C80();
  swift_bridgeObjectRetain();
  sub_145C70();
  Swift::Int v7 = sub_146CD0();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_EF608((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_145BC0();
  uint64_t v12 = v11;
  if (v10 == sub_145BC0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_146B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_145BC0();
        uint64_t v19 = v18;
        if (v17 == sub_145BC0() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_146B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_EABB8(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_146C80();
  sub_145A30();
  Swift::Int v9 = sub_146CD0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (sub_146B90() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v16 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v11);
      Swift::Int v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v19 = ~v10;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v19;
      if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v13 + 16 * v11);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_146B90() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_EF848(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_EAD48(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_145BC0();
  sub_146C80();
  swift_bridgeObjectRetain();
  sub_145C70();
  Swift::Int v7 = sub_146CD0();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_EF9E4((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_145BC0();
  uint64_t v12 = v11;
  if (v10 == sub_145BC0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_146B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_145BC0();
        uint64_t v19 = v18;
        if (v17 == sub_145BC0() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_146B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_EAF74(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_146C80();
  sub_DB5A0(a2);
  swift_bridgeObjectRetain();
  sub_145C70();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_146CD0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_EFC24(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_46;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    unint64_t v10 = 1954047348;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x64724F7465737361;
        unint64_t v9 = 0xED0000676E697265;
        break;
      case 2:
        unint64_t v10 = 0xD000000000000015;
        unint64_t v9 = 0x8000000000149BF0;
        break;
      case 3:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x656C746974;
        break;
      case 4:
        unint64_t v10 = 0x7461447972746E65;
        unint64_t v9 = 0xE900000000000065;
        break;
      case 5:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6449656C646E7562;
        break;
      case 6:
        unint64_t v9 = 0xEA00000000006574;
        unint64_t v10 = 0x6144656C646E7562;
        break;
      case 7:
        unint64_t v10 = 0x72756F5365746164;
        unint64_t v9 = 0xEA00000000006563;
        break;
      case 8:
        unint64_t v9 = 0xE700000000000000;
        unint64_t v10 = 0x64656767616C66;
        break;
      case 9:
        unint64_t v9 = 0xE600000000000000;
        unint64_t v10 = 0x74706D6F7270;
        break;
      case 0xA:
        unint64_t v9 = 0x8000000000149C40;
        unint64_t v10 = 0xD000000000000011;
        break;
      case 0xB:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x726568746FLL;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE400000000000000;
    unint64_t v12 = 1954047348;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xED0000676E697265;
        if (v10 == 0x64724F7465737361) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v11 = 0x8000000000149BF0;
        if (v10 != 0xD000000000000015) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x656C746974) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        unint64_t v11 = 0xE900000000000065;
        if (v10 != 0x7461447972746E65) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x6449656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v11 = 0xEA00000000006574;
        if (v10 != 0x6144656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 7:
        unint64_t v11 = 0xEA00000000006563;
        if (v10 != 0x72756F5365746164) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 8:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x64656767616C66) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 9:
        unint64_t v11 = 0xE600000000000000;
        if (v10 != 0x74706D6F7270) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 10:
        unint64_t v11 = 0x8000000000149C40;
        unint64_t v12 = 0xD000000000000011;
        goto LABEL_35;
      case 11:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x726568746FLL) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v10 != v12) {
          goto LABEL_37;
        }
LABEL_36:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_45;
        }
LABEL_37:
        char v13 = sub_146B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_46:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_EB468(void *a1, void *a2)
{
  return sub_EB4A0(a1, a2, &qword_1A1BC8, (uint64_t)NSManagedObject_ptr, &qword_1A22B8);
}

uint64_t sub_EB484(void *a1, void *a2)
{
  return sub_EB4A0(a1, a2, &qword_19B750, (uint64_t)NSManagedObjectID_ptr, (uint64_t *)&unk_19C180);
}

uint64_t sub_EB4A0(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_146720();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_C84C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_146710();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_EB76C(v12, result + 1, a5, a3);
    uint64_t v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_EDFE0(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = (void *)v27;
      id v30 = v13;
    }
    sub_EE27C((uint64_t)v13, v29);
    *uint64_t v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = sub_1464A0(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_C84C(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = sub_1464B0();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = sub_1464B0();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    id v32 = a2;
    sub_F0130((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

Swift::Int sub_EB76C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_A314(a3);
    uint64_t v6 = sub_1467B0();
    uint64_t v19 = v6;
    sub_146700();
    if (sub_146740())
    {
      sub_C84C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_EDFE0(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_1464A0(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_146740());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_EB970()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_A314(&qword_1A22C0);
  uint64_t v6 = sub_1467A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    id v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    id v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_92654(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_146C80();
      sub_145290();
      sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_145A20();
      uint64_t result = sub_146CD0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_92654((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_EBD40()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_19C258);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_146C80();
      sub_146C90(v18);
      uint64_t result = sub_146CD0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_EBFEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A22D0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_146C80();
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_146CD0();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0xEC4E8);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_EC53C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314((uint64_t *)&unk_19C1C0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_146C80();
      sub_145C70();
      uint64_t result = sub_146CD0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_EC81C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_19C140);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_146C70();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_ECAA0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_145430();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_A314(&qword_19C168);
  uint64_t v5 = sub_1467A0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_F3AD4(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t result = sub_145A10();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_ECE9C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_145290();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_A314(&qword_1A22A0);
  uint64_t v5 = sub_1467A0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_145A10();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_ED298()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2290);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_145BC0();
      sub_146C80();
      sub_145C70();
      Swift::Int v18 = sub_146CD0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_ED5AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2298);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::Int v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_146C80();
      sub_145A30();
      uint64_t result = sub_146CD0();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *unint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_ED87C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2288);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_145BC0();
      sub_146C80();
      sub_145C70();
      Swift::Int v18 = sub_146CD0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_EDB90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A22B0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_146C80();
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_146CD0();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0xEDFB0);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_EDFE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_A314(a2);
  uint64_t v5 = sub_1467A0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1464A0(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_EE27C(uint64_t a1, void *a2)
{
  sub_1464A0(a2[5]);
  unint64_t result = sub_1466F0();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_EE300(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v27 = v3;
  uint64_t v28 = a1;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_EB970();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_F0FEC();
LABEL_8:
    uint64_t v14 = *v3;
    sub_146C80();
    sub_145290();
    sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_145A20();
    Swift::Int v15 = sub_146CD0();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_926B8(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10);
        char v19 = sub_145260();
        sub_9271C((uint64_t)v10);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v13 = v8;
  sub_F02C4();
LABEL_14:
  uint64_t v20 = v28;
  uint64_t v21 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_92654(v20, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_146C10();
  __break(1u);
  return result;
}

Swift::Int sub_EE558(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_EBD40();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_F0E60(&qword_19C258);
      goto LABEL_14;
    }
    sub_F1380();
  }
  uint64_t v8 = *v3;
  sub_146C80();
  sub_146C90(v5);
  uint64_t result = sub_146CD0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_146C10();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_EE6B8(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_EBFEC();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_F0E60(&qword_1A22D0);
        goto LABEL_74;
      }
      sub_F15FC();
    }
    uint64_t v8 = *v3;
    sub_146C80();
    sub_8758(v5);
    sub_145C70();
    swift_bridgeObjectRelease();
    uint64_t result = sub_146CD0();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6F746F6870;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x746F68506576696CLL;
            unint64_t v11 = 0xE90000000000006FLL;
            break;
          case 2:
            uint64_t v12 = 0x6F65646976;
            break;
          case 3:
            uint64_t v12 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1802465122;
            break;
          case 6:
            uint64_t v12 = 0x6F69647561;
            break;
          case 7:
            uint64_t v12 = 0x7469736976;
            break;
          case 8:
            uint64_t v12 = 0x6E695069746C756DLL;
            uint64_t v13 = 7364941;
            goto LABEL_31;
          case 9:
            unint64_t v11 = 0xEA00000000007061;
            uint64_t v12 = 0x4D636972656E6567;
            break;
          case 0xA:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1802398060;
            break;
          case 0xB:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x746361746E6F63;
            break;
          case 0xC:
            uint64_t v12 = 0x4974756F6B726F77;
            uint64_t v13 = 7237475;
            goto LABEL_31;
          case 0xD:
            uint64_t v12 = 0x5274756F6B726F77;
            unint64_t v11 = 0xEC0000006574756FLL;
            break;
          case 0xE:
            uint64_t v12 = 0x697463656C666572;
            unint64_t v11 = 0xEA00000000006E6FLL;
            break;
          case 0xF:
            uint64_t v12 = 0x4D664F6574617473;
            uint64_t v13 = 6581865;
            goto LABEL_31;
          case 0x10:
            uint64_t v12 = 0x63416E6F69746F6DLL;
            unint64_t v11 = 0xEE00797469766974;
            break;
          case 0x11:
            uint64_t v12 = 0x7261506472696874;
            unint64_t v11 = 0xEF616964654D7974;
            break;
          case 0x12:
            uint64_t v12 = 0x6C6F686563616C70;
            uint64_t v13 = 7497060;
            goto LABEL_31;
          case 0x13:
            uint64_t v12 = 0x76456B6165727473;
            uint64_t v13 = 7630437;
LABEL_31:
            unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 0x14:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x6F746F6870;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xE90000000000006FLL;
            if (v12 != 0x746F68506576696CLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 2:
            uint64_t v19 = 1701079414;
            goto LABEL_57;
          case 3:
            if (v12 != 0x636973756DLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 4:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v16 = 0x736163646F70;
            goto LABEL_41;
          case 5:
            unint64_t v14 = 0xE400000000000000;
            if (v12 != 1802465122) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 6:
            uint64_t v19 = 1768191329;
LABEL_57:
            if (v12 != (v19 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 7:
            if (v12 != 0x7469736976) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 8:
            uint64_t v17 = 0x6E695069746C756DLL;
            uint64_t v18 = 7364941;
            goto LABEL_72;
          case 9:
            unint64_t v14 = 0xEA00000000007061;
            if (v12 != 0x4D636972656E6567) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 10:
            unint64_t v14 = 0xE400000000000000;
            if (v12 != 1802398060) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 11:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v16 = 0x6361746E6F63;
LABEL_41:
            if (v12 != (v16 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 12:
            uint64_t v17 = 0x4974756F6B726F77;
            uint64_t v18 = 7237475;
            goto LABEL_72;
          case 13:
            unint64_t v14 = 0xEC0000006574756FLL;
            if (v12 != 0x5274756F6B726F77) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 14:
            unint64_t v14 = 0xEA00000000006E6FLL;
            if (v12 != 0x697463656C666572) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 15:
            uint64_t v17 = 0x4D664F6574617473;
            uint64_t v18 = 6581865;
            goto LABEL_72;
          case 16:
            unint64_t v14 = 0xEE00797469766974;
            if (v12 != 0x63416E6F69746F6DLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 17:
            unint64_t v14 = 0xEF616964654D7974;
            if (v12 != 0x7261506472696874) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 18:
            uint64_t v17 = 0x6C6F686563616C70;
            uint64_t v18 = 7497060;
            goto LABEL_72;
          case 19:
            uint64_t v17 = 0x76456B6165727473;
            uint64_t v18 = 7630437;
LABEL_72:
            unint64_t v14 = v18 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            if (v12 != v17) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 20:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v15 = 0x6E776F6E6B6E75;
            goto LABEL_66;
          default:
LABEL_66:
            if (v12 != v15) {
              goto LABEL_68;
            }
LABEL_67:
            if (v11 == v14) {
              goto LABEL_77;
            }
LABEL_68:
            char v20 = sub_146B90();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_78;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_74:
  uint64_t v21 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v5;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_77:
    swift_bridgeObjectRelease_n();
LABEL_78:
    sub_146C10();
    __break(1u);
    JUMPOUT(0xEED28);
  }
  *(void *)(v21 + 16) = v24;
  return result;
}

Swift::Int sub_EEDD0(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  char v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_EC53C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_F050C();
      goto LABEL_22;
    }
    sub_F1B18();
  }
  uint64_t v11 = *v4;
  sub_146C80();
  sub_145C70();
  uint64_t result = sub_146CD0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_146B90(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_146C10();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_146B90();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_EEF6C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_EC81C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_F06C0();
      goto LABEL_14;
    }
    sub_F1DC8();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_146C70();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_146C10();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_EF090(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_145430();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_ECAA0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_F0858((uint64_t (*)(void))&type metadata accessor for Calendar.Component, &qword_19C168);
      goto LABEL_12;
    }
    sub_F202C();
  }
  uint64_t v12 = *v3;
  sub_F3AD4(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  uint64_t v13 = sub_145A10();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_F3AD4(&qword_19C178, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      char v21 = sub_145AD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_146C10();
  __break(1u);
  return result;
}

uint64_t sub_EF34C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_ECE9C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_F0858((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1A22A0);
      goto LABEL_12;
    }
    sub_F23DC();
  }
  uint64_t v12 = *v3;
  sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_145A10();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_F3AD4((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_145AD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_146C10();
  __break(1u);
  return result;
}

uint64_t sub_EF608(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_ED298();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_F0CBC(&qword_1A2290);
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_F278C();
  }
  uint64_t v9 = *v3;
  sub_145BC0();
  sub_146C80();
  sub_145C70();
  Swift::Int v10 = sub_146CD0();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_145BC0();
  uint64_t v14 = v13;
  if (v12 == sub_145BC0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_146B90();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_145BC0();
      uint64_t v21 = v20;
      if (v19 == sub_145BC0() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_146B90();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for NLTag(0);
  uint64_t result = sub_146C10();
  __break(1u);
  return result;
}

Swift::Int sub_EF848(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_ED5AC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_F0B08();
      goto LABEL_22;
    }
    sub_F2A6C();
  }
  uint64_t v11 = *v4;
  sub_146C80();
  sub_145A30();
  uint64_t result = sub_146CD0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_146B90(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_146C10();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_146B90();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_EF9E4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_ED87C();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_F0CBC(&qword_1A2288);
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_F2D0C();
  }
  uint64_t v9 = *v3;
  sub_145BC0();
  sub_146C80();
  sub_145C70();
  Swift::Int v10 = sub_146CD0();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_145BC0();
  uint64_t v14 = v13;
  if (v12 == sub_145BC0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_146B90();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_145BC0();
      uint64_t v21 = v20;
      if (v19 == sub_145BC0() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_146B90();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for MKPointOfInterestCategory(0);
  uint64_t result = sub_146C10();
  __break(1u);
  return result;
}

Swift::Int sub_EFC24(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_EDB90();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_F0E60(&qword_1A22B0);
        goto LABEL_49;
      }
      sub_F2FEC();
    }
    uint64_t v8 = *v3;
    sub_146C80();
    sub_DB5A0(v5);
    sub_145C70();
    swift_bridgeObjectRelease();
    uint64_t result = sub_146CD0();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x64724F7465737361;
            unint64_t v11 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v12 = 0xD000000000000015;
            unint64_t v11 = 0x8000000000149BF0;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x656C746974;
            break;
          case 4:
            unint64_t v12 = 0x7461447972746E65;
            unint64_t v11 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            unint64_t v12 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v12 = 0x72756F5365746164;
            unint64_t v11 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v11 = 0x8000000000149C40;
            unint64_t v12 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1954047348;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xED0000676E697265;
            if (v12 != 0x64724F7465737361) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 2:
            unint64_t v13 = 0x8000000000149BF0;
            if (v12 != 0xD000000000000015) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x656C746974) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 4:
            unint64_t v13 = 0xE900000000000065;
            if (v12 != 0x7461447972746E65) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x6449656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 6:
            unint64_t v13 = 0xEA00000000006574;
            if (v12 != 0x6144656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 7:
            unint64_t v13 = 0xEA00000000006563;
            if (v12 != 0x72756F5365746164) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 8:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x64656767616C66;
            goto LABEL_42;
          case 9:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x74706D6F7270) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 10:
            unint64_t v13 = 0x8000000000149C40;
            if (v12 != 0xD000000000000011) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 11:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x726568746FLL) {
              goto LABEL_44;
            }
            goto LABEL_43;
          default:
LABEL_42:
            if (v12 != v14) {
              goto LABEL_44;
            }
LABEL_43:
            if (v11 == v13) {
              goto LABEL_52;
            }
LABEL_44:
            char v15 = sub_146B90();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_53;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_52:
    swift_bridgeObjectRelease_n();
LABEL_53:
    sub_146C10();
    __break(1u);
    JUMPOUT(0xF00D0);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

void sub_F0130(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_EDFE0(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_F0CBC(a4);
      goto LABEL_14;
    }
    sub_F3408(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_1464A0(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_C84C(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1464B0();

    if (v16)
    {
LABEL_13:
      sub_146C10();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1464B0();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_F02C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_A314(&qword_1A22C0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_146790();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_926B8(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_92654((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_F0500()
{
  return sub_F0E60(&qword_19C258);
}

void *sub_F050C()
{
  uint64_t v1 = v0;
  sub_A314((uint64_t *)&unk_19C1C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146790();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_F06C0()
{
  uint64_t v1 = v0;
  sub_A314(&qword_19C140);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146790();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_F0858(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_A314(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_146790();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_F0B08()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A2298);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146790();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_F0CBC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_A314(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_146790();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_F0E60(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_A314(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_146790();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_F0FEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_A314(&qword_1A22C0);
  uint64_t v6 = sub_1467A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_926B8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_146C80();
    sub_145290();
    sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_145A20();
    uint64_t result = sub_146CD0();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_92654((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F1380()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_19C258);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_146C80();
    sub_146C90(v18);
    uint64_t result = sub_146CD0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F15FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A22D0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_146C80();
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_146CD0();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0xF1AC4);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_F1B18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314((uint64_t *)&unk_19C1C0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_146C80();
    swift_bridgeObjectRetain();
    sub_145C70();
    uint64_t result = sub_146CD0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F1DC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_19C140);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_146C70();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F202C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_145430();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_A314(&qword_19C168);
  uint64_t v7 = sub_1467A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_F3AD4(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
    uint64_t result = sub_145A10();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F23DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_145290();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_A314(&qword_1A22A0);
  uint64_t v7 = sub_1467A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_F3AD4((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_145A10();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F278C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2290);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_145BC0();
    sub_146C80();
    id v18 = v17;
    sub_145C70();
    Swift::Int v19 = sub_146CD0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F2A6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2298);
  uint64_t result = sub_1467A0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v28)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          int64_t v5 = v17;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    id v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_146C80();
    sub_145A30();
    uint64_t result = sub_146CD0();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_F2D0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A2288);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_145BC0();
    sub_146C80();
    id v18 = v17;
    sub_145C70();
    Swift::Int v19 = sub_146CD0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F2FEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_A314(&qword_1A22B0);
  uint64_t v3 = sub_1467A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_146C80();
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_146CD0();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0xF33D8);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_F3408(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_A314(a2);
  uint64_t v5 = sub_1467A0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  unint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1464A0(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F3680(uint64_t a1)
{
  return sub_F3B50(a1, (void (*)(void))sub_F3C24, (uint64_t)&type metadata for Journaling.AssetType, (void (*)(char *, void))sub_E997C);
}

uint64_t sub_F36B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_145FD0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_EA248(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_F3728(uint64_t a1)
{
  uint64_t v2 = sub_145430();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_F3AD4(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  uint64_t result = sub_145FD0();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_EA344((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_F38C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for NLTag(0);
  sub_F3AD4(&qword_19B4A0, type metadata accessor for NLTag);
  uint64_t result = sub_145FD0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_EA98C(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_F3980(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_145FD0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_EABB8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_F3A18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for MKPointOfInterestCategory(0);
  sub_F3AD4(&qword_19B4D8, type metadata accessor for MKPointOfInterestCategory);
  uint64_t result = sub_145FD0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      Swift::Int v5 = *v4++;
      sub_EAD48(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_F3AD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_F3B1C(uint64_t a1)
{
  return sub_F3B50(a1, (void (*)(void))sub_F3BD0, (uint64_t)&_s6FieldsON, (void (*)(char *, void))sub_EAF74);
}

uint64_t sub_F3B50(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_145FD0();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

unint64_t sub_F3BD0()
{
  unint64_t result = qword_1A22A8;
  if (!qword_1A22A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A22A8);
  }
  return result;
}

unint64_t sub_F3C24()
{
  unint64_t result = qword_1A22C8;
  if (!qword_1A22C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A22C8);
  }
  return result;
}

uint64_t sub_F3C78(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A23F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_F5140();
  sub_146D10();
  v8[15] = 0;
  sub_145290();
  sub_F50D0(&qword_19FD78, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_146AD0();
  if (!v1)
  {
    _s16StreakEventAssetC12MetadataTypeVMa(0);
    v8[14] = 1;
    sub_145230();
    sub_F50D0(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146B10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_F3E78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_145230();
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19B730);
  __chkstk_darwin(v5 - 8);
  char v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_A314(&qword_1A23E0);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_145290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_2F114(a1, a1[3]);
  sub_F5140();
  uint64_t v13 = v28;
  sub_146D00();
  if (v13)
  {
    sub_C7FC((uint64_t)a1);
    return sub_52900((uint64_t)v11);
  }
  else
  {
    uint64_t v28 = v9;
    uint64_t v14 = v25;
    char v30 = 0;
    sub_F50D0(&qword_19C908, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = (uint64_t)v26;
    sub_146A20();
    sub_F5194(v15, (uint64_t)v11);
    char v29 = 1;
    sub_F50D0(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = v4;
    uint64_t v17 = v22;
    uint64_t v18 = v27;
    sub_146A60();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[*(int *)(v28 + 20)], v16, v17);
    sub_F51FC((uint64_t)v11, v19);
    sub_C7FC((uint64_t)a1);
    return sub_F5260((uint64_t)v11);
  }
}

uint64_t sub_F4258()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x44497972746E65;
  }
}

uint64_t sub_F428C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_F54C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F42B4(uint64_t a1)
{
  unint64_t v2 = sub_F5140();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F42F0(uint64_t a1)
{
  unint64_t v2 = sub_F5140();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F432C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_F3E78(a1, a2);
}

uint64_t sub_F4344(void *a1)
{
  return sub_F3C78(a1);
}

uint64_t sub_F435C()
{
  return swift_release();
}

id sub_F436C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StreakEventAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_F43B4()
{
  return _s16StreakEventAssetCMa(0);
}

uint64_t _s16StreakEventAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A2300);
}

uint64_t sub_F43DC()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_F4420(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145290();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(&qword_19B730);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_F45D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145290();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_145230();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_F46D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19B730);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_F4838(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19B730);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_F4A00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19B730);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_F4B64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19B730);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_F4D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F4D40);
}

uint64_t sub_F4D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19B730);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_145230();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_F4E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F4E50);
}

uint64_t sub_F4E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_A314(&qword_19B730);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s16StreakEventAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2368);
}

void sub_F4F78()
{
  sub_82948();
  if (v0 <= 0x3F)
  {
    sub_145230();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_F5040()
{
  return sub_F50D0(&qword_19C8A8, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_F5088()
{
  return sub_F50D0(&qword_1A23A0, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_F50D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_F5118()
{
  return swift_retain();
}

uint64_t sub_F5128(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StreakEventAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_F5140()
{
  unint64_t result = qword_1A23E8;
  if (!qword_1A23E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A23E8);
  }
  return result;
}

uint64_t sub_F5194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_F51FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F5260(uint64_t a1)
{
  uint64_t v2 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF5388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s16StreakEventAssetC12MetadataTypeV10CodingKeysON;
}

unint64_t sub_F53C4()
{
  unint64_t result = qword_1A23F8;
  if (!qword_1A23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A23F8);
  }
  return result;
}

unint64_t sub_F541C()
{
  unint64_t result = qword_1A2400;
  if (!qword_1A2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2400);
  }
  return result;
}

unint64_t sub_F5474()
{
  unint64_t result = qword_1A2408;
  if (!qword_1A2408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2408);
  }
  return result;
}

uint64_t sub_F54C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double *sub_F55AC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2CCB8(0, v1, 0);
    int v3 = (uint64_t *)(a1 + 48);
    do
    {
      unsigned int v4 = (void *)*(v3 - 2);
      uint64_t v5 = (void *)*(v3 - 1);
      uint64_t v6 = *v3;
      sub_BE044(v4);
      double v8 = _swiftEmptyArrayStorage[2];
      double v7 = _swiftEmptyArrayStorage[3];
      id v9 = v5;
      swift_bridgeObjectRetain();
      if (*(void *)&v8 >= *(void *)&v7 >> 1) {
        sub_2CCB8(*(void *)&v7 > 1uLL, *(void *)&v8 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[5 * *(void *)&v8];
      *((void *)v10 + 4) = v4;
      v10[5] = 0.0;
      *((unsigned char *)v10 + 48) = 1;
      *((void *)v10 + 7) = v6;
      *((void *)v10 + 8) = v9;
      v3 += 3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_F56B0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  double v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v31 = v1;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_2CCD8(0, v6, 0);
  double v7 = v39;
  uint64_t result = sub_39840(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  int v13 = v12 & 1;
  uint64_t v14 = a1 + 64;
  uint64_t v33 = v9;
  int64_t v34 = v6;
  uint64_t v30 = a1 + 96;
  uint64_t v35 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v10 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_29;
    }
    uint64_t v38 = v9;
    int v32 = v13;
    char v18 = *(unsigned char *)(*(void *)(a1 + 48) + v10);
    uint64_t v19 = a1;
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    sub_145280();
    uint64_t v21 = v37;
    v5[*(int *)(v37 + 20)] = v18;
    *(void *)&v5[*(int *)(v21 + 24)] = v20;
    uint64_t v39 = v7;
    unint64_t v23 = *((void *)v7 + 2);
    unint64_t v22 = *((void *)v7 + 3);
    if (v23 >= v22 >> 1)
    {
      sub_2CCD8(v22 > 1, v23 + 1, 1);
      double v7 = v39;
    }
    *((void *)v7 + 2) = v23 + 1;
    uint64_t result = sub_1100C4((uint64_t)v5, (uint64_t)v7+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v23, type metadata accessor for InsightsDataManager.TopAssetCategory);
    int64_t v15 = 1 << *(unsigned char *)(v19 + 32);
    if (v10 >= v15) {
      goto LABEL_30;
    }
    uint64_t v14 = v35;
    uint64_t v24 = *(void *)(v35 + 8 * v17);
    if ((v24 & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    a1 = v19;
    if (*(_DWORD *)(v19 + 36) != v38) {
      goto LABEL_32;
    }
    unint64_t v25 = v24 & (-2 << (v10 & 0x3F));
    if (v25)
    {
      int64_t v15 = __clz(__rbit64(v25)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v34;
    }
    else
    {
      unint64_t v26 = v17 + 1;
      unint64_t v27 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v34;
      if (v17 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v35 + 8 * v26);
        if (!v28)
        {
          unint64_t v26 = v17 + 2;
          if (v17 + 2 >= v27) {
            goto LABEL_4;
          }
          unint64_t v28 = *(void *)(v35 + 8 * v26);
          if (!v28)
          {
            unint64_t v26 = v17 + 3;
            if (v17 + 3 >= v27) {
              goto LABEL_4;
            }
            unint64_t v28 = *(void *)(v35 + 8 * v26);
            if (!v28)
            {
              while (v27 - 4 != v17)
              {
                unint64_t v28 = *(void *)(v30 + 8 * v17++);
                if (v28)
                {
                  uint64_t result = sub_262F8(v10, v38, v32 & 1);
                  uint64_t v14 = v35;
                  unint64_t v26 = v17 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t result = sub_262F8(v10, v38, v32 & 1);
              uint64_t v14 = v35;
              goto LABEL_4;
            }
          }
        }
LABEL_17:
        int64_t v15 = __clz(__rbit64(v28)) + (v26 << 6);
      }
    }
LABEL_4:
    int v13 = 0;
    ++v11;
    uint64_t v9 = v33;
    uint64_t v10 = v15;
    if (v11 == v16) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_F59F8(uint64_t a1)
{
  uint64_t v65 = sub_A314(&qword_1A24A0);
  uint64_t v3 = __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v63 = (uint64_t)&v56 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t)&v56 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v62 = (uint64_t)&v56 - v10;
  __chkstk_darwin(v9);
  unint64_t v61 = (char *)&v56 - v11;
  uint64_t v12 = sub_A314(&qword_19C548);
  uint64_t v59 = *(void *)(v12 - 8);
  uint64_t v60 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = *(int *)(sub_A314(&qword_19C938) + 32);
  uint64_t v15 = *(void *)(a1 + v58);
  uint64_t v16 = sub_39840(v15);
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = 1 << *(unsigned char *)(v15 + 32);
  unsigned int v22 = *(_DWORD *)(v15 + 36);
  uint64_t v71 = a1;
  uint64_t v23 = sub_398E4(v16, v17, v19 & 1, v21, v22, 0);
  sub_262F8(v16, v18, v20);
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (!v23) {
    return (uint64_t)v24;
  }
  uint64_t v73 = _swiftEmptyArrayStorage;
  sub_2CD14(0, v23 & ~(v23 >> 63), 0);
  uint64_t result = sub_39840(v15);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v56 = v1;
    if ((result & 0x8000000000000000) == 0 && result < 1 << *(unsigned char *)(v15 + 32))
    {
      id v57 = v14;
      while ((*(void *)(v15 + 8 * ((unint64_t)result >> 6) + 64) & (1 << result)) != 0)
      {
        if (v26 != *(_DWORD *)(v15 + 36)) {
          goto LABEL_22;
        }
        uint64_t v68 = 1 << result;
        unint64_t v69 = (unint64_t)result >> 6;
        uint64_t v66 = v23;
        uint64_t v67 = v26;
        uint64_t v27 = v65;
        uint64_t v28 = *(void *)(v15 + 56);
        uint64_t v29 = *(void *)(*(void *)(v15 + 48) + 8 * result);
        uint64_t v30 = (uint64_t)v61;
        uint64_t v31 = &v61[*(int *)(v65 + 48)];
        uint64_t v70 = result;
        int v32 = (uint64_t *)(v28 + 32 * result);
        uint64_t v34 = *v32;
        uint64_t v33 = v32[1];
        uint64_t v35 = v32[2];
        uint64_t v36 = v32[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_140334(v29, v30);
        *(void *)uint64_t v31 = v34;
        *((void *)v31 + 1) = v33;
        *((void *)v31 + 2) = v35;
        *((void *)v31 + 3) = v36;
        uint64_t v37 = v62;
        sub_12428(v30, v62, &qword_19C930);
        uint64_t v38 = (void *)(v37 + *(int *)(v27 + 48));
        *uint64_t v38 = v34;
        v38[1] = v33;
        v38[2] = v35;
        v38[3] = v36;
        sub_2E4D0(v37, v72, &qword_1A24A0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v39 = v30;
        uint64_t v40 = (uint64_t)v57;
        sub_1248C(v39, &qword_1A24A0);
        uint64_t v41 = *(int *)(v60 + 48);
        uint64_t v42 = *(int *)(v27 + 48);
        uint64_t v43 = v63;
        uint64_t v44 = (_OWORD *)(v63 + v42);
        uint64_t v45 = v72 + v42;
        sub_12428(v72, v63, &qword_19C930);
        long long v46 = *(_OWORD *)(v45 + 16);
        _OWORD *v44 = *(_OWORD *)v45;
        v44[1] = v46;
        sub_A314(&qword_19C930);
        sub_145130();
        sub_1451B0();
        sub_1248C(v43, &qword_19C930);
        uint64_t v47 = *(int *)(v27 + 48);
        uint64_t v48 = v72;
        uint64_t v49 = v64;
        uint64_t v50 = v64 + v47;
        uint64_t result = sub_12428(v72, v64, &qword_19C930);
        uint64_t v51 = *(void *)(v45 + 8);
        *(void *)uint64_t v50 = *(void *)v45;
        *(void *)(v50 + 8) = v51;
        *(_OWORD *)(v50 + 16) = *(_OWORD *)(v45 + 16);
        if (v51 < 0) {
          goto LABEL_23;
        }
        uint64_t v52 = (void *)(v40 + v41);
        void *v52 = 0;
        v52[1] = v51;
        sub_1248C(v49, &qword_19C930);
        sub_1248C(v48, &qword_1A24A0);
        uint64_t v24 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2CD14(0, *((void *)v24 + 2) + 1, 1);
          uint64_t v24 = v73;
        }
        uint64_t v53 = v70;
        unint64_t v55 = *((void *)v24 + 2);
        unint64_t v54 = *((void *)v24 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_2CD14(v54 > 1, v55 + 1, 1);
          uint64_t v24 = v73;
        }
        *((void *)v24 + 2) = v55 + 1;
        uint64_t result = sub_2E4D0(v40, (uint64_t)v24+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v55, &qword_19C548);
        uint64_t v15 = *(void *)(v71 + v58);
        if (v53 >= -(-1 << *(unsigned char *)(v15 + 32))) {
          goto LABEL_24;
        }
        if ((*(void *)(v15 + 64 + 8 * v69) & v68) == 0) {
          goto LABEL_25;
        }
        if (v67 != *(_DWORD *)(v15 + 36)) {
          goto LABEL_26;
        }
        uint64_t result = sub_1466E0();
        uint64_t v23 = v66 - 1;
        if (v66 == 1) {
          return (uint64_t)v24;
        }
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v26 = *(unsigned int *)(v15 + 36);
          if (result < 1 << *(unsigned char *)(v15 + 32)) {
            continue;
          }
        }
        goto LABEL_27;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_F5F3C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = sub_A314(&qword_19C548);
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (!v8) {
    return result;
  }
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_2CD14(0, v8, 0);
  uint64_t v40 = v43;
  uint64_t result = (double *)sub_39840(a3);
  uint64_t v10 = (uint64_t)result;
  uint64_t v12 = v11;
  uint64_t v13 = 0;
  int v15 = v14 & 1;
  uint64_t v16 = a3 + 64;
  uint64_t v33 = v11;
  int64_t v34 = v8;
  uint64_t v31 = a3 + 96;
  uint64_t v35 = a3 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a3 + 32))
  {
    unint64_t v19 = (unint64_t)v10 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_32;
    }
    int v32 = v15;
    uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * v10);
    v42[0] = *(void *)(*(void *)(a3 + 48) + 8 * v10);
    v42[1] = v20;
    v37(v42);
    if (v4) {
      return (double *)swift_release();
    }
    uint64_t v39 = 0;
    uint64_t v21 = v40;
    uint64_t v43 = v40;
    unint64_t v23 = *((void *)v40 + 2);
    unint64_t v22 = *((void *)v40 + 3);
    if (v23 >= v22 >> 1)
    {
      sub_2CD14(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v43;
    }
    *((void *)v21 + 2) = v23 + 1;
    unint64_t v24 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v40 = v21;
    uint64_t result = (double *)sub_2E4D0(v41, (uint64_t)v21 + v24 + *(void *)(v36 + 72) * v23, &qword_19C548);
    int64_t v17 = 1 << *(unsigned char *)(a3 + 32);
    if (v10 >= v17) {
      goto LABEL_33;
    }
    uint64_t v16 = v35;
    uint64_t v25 = *(void *)(v35 + 8 * v19);
    if ((v25 & (1 << v10)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_35;
    }
    unint64_t v26 = v25 & (-2 << (v10 & 0x3F));
    if (v26)
    {
      int64_t v17 = __clz(__rbit64(v26)) | v10 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = v39;
      int64_t v18 = v34;
    }
    else
    {
      unint64_t v27 = v19 + 1;
      unint64_t v28 = (unint64_t)(v17 + 63) >> 6;
      uint64_t v4 = v39;
      int64_t v18 = v34;
      if (v19 + 1 < v28)
      {
        unint64_t v29 = *(void *)(v35 + 8 * v27);
        if (!v29)
        {
          unint64_t v27 = v19 + 2;
          if (v19 + 2 >= v28) {
            goto LABEL_4;
          }
          unint64_t v29 = *(void *)(v35 + 8 * v27);
          if (!v29)
          {
            unint64_t v27 = v19 + 3;
            if (v19 + 3 >= v28) {
              goto LABEL_4;
            }
            unint64_t v29 = *(void *)(v35 + 8 * v27);
            if (!v29)
            {
              while (v28 - 4 != v19)
              {
                unint64_t v29 = *(void *)(v31 + 8 * v19++);
                if (v29)
                {
                  uint64_t result = (double *)sub_262F8(v10, v12, v32 & 1);
                  uint64_t v16 = v35;
                  unint64_t v27 = v19 + 3;
                  goto LABEL_18;
                }
              }
              uint64_t result = (double *)sub_262F8(v10, v12, v32 & 1);
              uint64_t v16 = v35;
              goto LABEL_4;
            }
          }
        }
LABEL_18:
        int64_t v17 = __clz(__rbit64(v29)) + (v27 << 6);
      }
    }
LABEL_4:
    int v15 = 0;
    ++v13;
    uint64_t v12 = v33;
    uint64_t v10 = v17;
    if (v13 == v18) {
      return v40;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

double *sub_F62AC(unint64_t a1, SEL *a2)
{
  int64_t v34 = a2;
  uint64_t v3 = v2;
  uint64_t v5 = sub_A314(&qword_19C150);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_145230();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v33 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v27 = (char *)v25 - v11;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_146930())
  {
    v25[1] = v3;
    uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    unint64_t v32 = a1 & 0xC000000000000001;
    unint64_t v29 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v13 = _swiftEmptyArrayStorage;
    uint64_t v14 = 4;
    unint64_t v26 = a1;
    while (1)
    {
      id v15 = v32 ? (id)sub_146810() : *(id *)(a1 + 8 * v14);
      uint64_t v16 = v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v17 = [v15 *v34];
      if (v17)
      {
        int64_t v18 = v17;
        sub_1451E0();

        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 1;
      }
      (*v31)(v7, v19, 1, v8);

      if ((*v30)(v7, 1, v8) == 1)
      {
        sub_1248C((uint64_t)v7, &qword_19C150);
      }
      else
      {
        uint64_t v20 = *v29;
        uint64_t v21 = v27;
        (*v29)(v27, v7, v8);
        v20(v33, v21, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = (double *)sub_7E3EC(0, *((void *)v13 + 2) + 1, 1, (unint64_t)v13);
        }
        unint64_t v23 = *((void *)v13 + 2);
        unint64_t v22 = *((void *)v13 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v13 = (double *)sub_7E3EC(v22 > 1, v23 + 1, 1, (unint64_t)v13);
        }
        *((void *)v13 + 2) = v23 + 1;
        v20((char *)v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, v33, v8);
        a1 = v26;
      }
      ++v14;
      if (v3 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_F662C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = sub_A314(&qword_19C150);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v30 - v14;
  long long v46 = _swiftEmptyArrayStorage;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    uint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      int64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      uint64_t v35 = v18;
      uint64_t v19 = a3;
      uint64_t v20 = v8;
      uint64_t v21 = v45;
      unint64_t v22 = *v44;
      unint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2CD34(0, *((void *)v25 + 2) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = *((void *)v25 + 2);
        unint64_t v27 = *((void *)v25 + 3);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_2CD34(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        *((void *)v25 + 2) = v29;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v22)((char *)v25 + v16 + v28 * v17, v37, v9);
        long long v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1248C((uint64_t)v8, &qword_19C150);
    return (uint64_t)v46;
  }
  return result;
}

uint64_t sub_F69EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_F69F8(a1, &qword_19C938, a2);
}

uint64_t sub_F69F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = sub_A314(&qword_1A2530);
  uint64_t v6 = __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v40 - v8;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v40 - v14;
  uint64_t v49 = sub_A314(&qword_19C930);
  uint64_t v16 = __chkstk_darwin(v49);
  uint64_t v44 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v40 - v21;
  uint64_t v43 = sub_A314(a2);
  *(void *)(a3 + *(int *)(v43 + 32)) = &_swiftEmptyDictionarySingleton;
  uint64_t v46 = a3;
  sub_106078(a1, a3, type metadata accessor for UniformDateBins);
  sub_140334(0, (uint64_t)v22);
  uint64_t v23 = v10;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v48(v15, v22, v9);
  sub_1248C((uint64_t)v22, &qword_19C930);
  uint64_t v24 = *(void *)(a1 + *(int *)(type metadata accessor for UniformDateBins(0) + 24));
  uint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
  }
  else
  {
    sub_140334(result, (uint64_t)v20);
    unint64_t v26 = v13;
    v48(v13, &v20[*(int *)(v49 + 36)], v9);
    sub_1248C((uint64_t)v20, &qword_19C930);
    sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    char v27 = sub_145A80();
    uint64_t result = sub_1065D0(a1, type metadata accessor for UniformDateBins);
    if (v27)
    {
      unint64_t v28 = v15;
      uint64_t v29 = v47;
      uint64_t v30 = v42;
      unint64_t v31 = &v42[*(int *)(v47 + 48)];
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v32(v42, v28, v9);
      uint64_t v33 = v31;
      uint64_t v41 = v31;
      v32(v31, v26, v9);
      uint64_t v34 = v45;
      uint64_t v35 = &v45[*(int *)(v29 + 48)];
      uint64_t v36 = v48;
      v48(v45, v30, v9);
      v36(v35, v33, v9);
      uint64_t v37 = (uint64_t)v44;
      v32(v44, v34, v9);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v23 + 8);
      v38(v35, v9);
      uint64_t v39 = &v34[*(int *)(v47 + 48)];
      v32(v34, v30, v9);
      v32(v39, v41, v9);
      v32((char *)(v37 + *(int *)(v49 + 36)), v39, v9);
      v38(v34, v9);
      return sub_2E4D0(v37, v46 + *(int *)(v43 + 28), &qword_19C930);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_F6EA8()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_1A2410);
  sub_C584(v0, (uint64_t)qword_1A2410);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_F6FA4()
{
  v1[465] = v0;
  v1[471] = type metadata accessor for InsightsDataManager.Streaks(0);
  v1[472] = swift_task_alloc();
  v1[473] = swift_task_alloc();
  v1[474] = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  v1[475] = swift_task_alloc();
  v1[476] = swift_task_alloc();
  v1[477] = swift_task_alloc();
  sub_A314(&qword_19C150);
  v1[478] = swift_task_alloc();
  uint64_t v2 = sub_145230();
  v1[479] = v2;
  v1[480] = *(void *)(v2 - 8);
  v1[481] = swift_task_alloc();
  v1[482] = swift_task_alloc();
  v1[483] = swift_task_alloc();
  sub_145F30();
  v1[484] = sub_145F20();
  uint64_t v4 = sub_145EB0();
  v1[485] = v4;
  v1[486] = v3;
  return _swift_task_switch(sub_F7174, v4, v3);
}

uint64_t sub_F7174()
{
  uint64_t v1 = v0[483];
  uint64_t v19 = v0[481];
  uint64_t v2 = v0[480];
  uint64_t v3 = v0[479];
  uint64_t v4 = v0[478];
  uint64_t v5 = v0[465];
  sub_1451F0();
  swift_getKeyPath();
  v0[487] = OBJC_IVAR____TtC15JournalSettings19InsightsDataManager___observationRegistrar;
  v0[459] = v5;
  v0[488] = sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v6 = v5 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate;
  swift_beginAccess();
  sub_12428(v6, v4, &qword_19C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v19, v1, v3);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3);
  uint64_t v8 = v0[482];
  uint64_t v9 = v0[480];
  uint64_t v10 = v0[479];
  uint64_t v11 = v0[478];
  if (v7 == 1)
  {
    (*(void (**)(void, void, void))(v9 + 32))(v0[482], v0[481], v0[479]);
    sub_1248C(v11, &qword_19C150);
  }
  else
  {
    (*(void (**)(void, void))(v9 + 8))(v0[481], v0[479]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v11, v10);
  }
  uint64_t v12 = v0[482];
  uint64_t v13 = v0[465];
  uint64_t v14 = swift_task_alloc();
  v0[489] = v14;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  swift_asyncLet_begin();
  uint64_t v15 = swift_task_alloc();
  v0[490] = v15;
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  swift_asyncLet_begin();
  uint64_t v16 = swift_task_alloc();
  v0[491] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  uint64_t v17 = v0[477];
  return _swift_asyncLet_get(v0 + 162, v17, sub_F74B0, v0 + 430);
}

uint64_t sub_F74B0()
{
  return _swift_task_switch(sub_F74CC, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F74CC()
{
  uint64_t v1 = v0[482];
  uint64_t v2 = v0[476];
  uint64_t v3 = v0[465];
  sub_106078(v0[477], v2, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[492] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 322, v0 + 411, sub_F75CC, v0 + 448);
}

uint64_t sub_F75CC()
{
  uint64_t v1 = *(void *)(v0 + 3808);
  uint64_t v2 = *(void *)(v0 + 3800);
  *(void *)(v0 + 3944) = *(void *)(v0 + 3288);
  *(_OWORD *)(v0 + 3952) = *(_OWORD *)(v0 + 3296);
  *(void *)(v0 + 3968) = *(void *)(v0 + 3312);
  sub_106078(v1, v2, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_bridgeObjectRetain();
  uint64_t v3 = *(void *)(v0 + 3784);
  return _swift_asyncLet_get(v0 + 1936, v3, sub_F7680, v0 + 3536);
}

uint64_t sub_F7680()
{
  sub_106078(*(void *)(v0 + 3784), *(void *)(v0 + 3776), type metadata accessor for InsightsDataManager.Streaks);
  return _swift_asyncLet_get(v0 + 16, v0 + 3256, sub_F7718, v0 + 3680);
}

uint64_t sub_F7718()
{
  v0[497] = v0[407];
  v0[498] = v0[408];
  v0[499] = v0[409];
  v0[500] = v0[410];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return _swift_asyncLet_get(v0 + 82, v0 + 453, sub_F77CC, v0 + 466);
}

uint64_t sub_F77CC()
{
  return _swift_task_switch(sub_F77E8, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F77E8()
{
  uint64_t v14 = *(void *)(v0 + 3992);
  uint64_t v15 = *(void *)(v0 + 4000);
  uint64_t v12 = *(void *)(v0 + 3976);
  uint64_t v13 = *(void *)(v0 + 3984);
  uint64_t v1 = *(void *)(v0 + 3968);
  uint64_t v2 = *(void *)(v0 + 3960);
  long long v17 = *(_OWORD *)(v0 + 3944);
  uint64_t v10 = *(void *)(v0 + 3800);
  uint64_t v11 = *(void *)(v0 + 3776);
  uint64_t v3 = *(void *)(v0 + 3720);
  uint64_t v16 = *(void *)(v0 + 3624);
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v17;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  *(void *)(v0 + 3576) = v3;
  swift_bridgeObjectRetain();
  sub_1454F0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v10;
  *(void *)(v0 + 3528) = v3;
  sub_1454F0();
  swift_release();
  swift_task_dealloc();
  sub_1065D0(v10, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v11;
  *(void *)(v0 + 3480) = v3;
  sub_1454F0();
  swift_release();
  swift_task_dealloc();
  sub_1065D0(v11, type metadata accessor for InsightsDataManager.Streaks);
  swift_getKeyPath();
  int v7 = (void *)swift_task_alloc();
  v7[2] = v3;
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v14;
  v7[6] = v15;
  *(void *)(v0 + 3384) = v3;
  sub_1454F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v16;
  *(void *)(v0 + 3432) = v3;
  sub_1454F0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 16, v0 + 3256, sub_F7B78, v0 + 3632);
}

uint64_t sub_F7B78()
{
  return _swift_task_switch(sub_F7B94, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F7B94()
{
  uint64_t v1 = *(void *)(v0 + 3808);
  swift_task_dealloc();
  sub_1065D0(v1, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  return _swift_asyncLet_finish(v0 + 656, v0 + 3624, sub_F7C34, v0 + 3392);
}

uint64_t sub_F7C34()
{
  return _swift_task_switch(sub_F7C50, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F7C50()
{
  return _swift_asyncLet_finish(v0 + 2576, v0 + 3288, sub_F7C70, v0 + 3488);
}

uint64_t sub_F7C70()
{
  return _swift_task_switch(sub_F7C8C, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F7C8C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 3784);
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_F7D00, v0 + 3344);
}

uint64_t sub_F7D00()
{
  return _swift_task_switch(sub_F7D1C, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F7D1C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 3816);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_F7D90, v0 + 3216);
}

uint64_t sub_F7D90()
{
  return _swift_task_switch(sub_F7DAC, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_F7DAC()
{
  uint64_t v1 = v0[483];
  uint64_t v2 = v0[482];
  uint64_t v3 = v0[480];
  uint64_t v4 = v0[479];
  uint64_t v5 = v0[465];
  swift_release();
  swift_task_dealloc();
  sub_F7EF0(v1, v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v4);
  v6(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_F7EF0(uint64_t a1, uint64_t a2)
{
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  uint64_t v4 = Update - 8;
  __chkstk_darwin(Update);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_145230();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1451F0();
  sub_145130();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v6, v10, v7);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10B720((uint64_t)&off_184C60, v13);
  *(void *)&v6[*(int *)(v4 + 28)] = v12;
  *(void *)&v6[*(int *)(v4 + 32)] = v14;
  swift_getKeyPath();
  uint64_t v21 = a2;
  unint64_t v22 = v6;
  uint64_t v23 = a2;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  sub_1065D0((uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
  sub_38AA4();
  if (qword_19B030 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_145760();
  sub_C584(v15, (uint64_t)qword_1A2410);
  uint64_t v16 = sub_145740();
  os_log_type_t v17 = sub_146210();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    uint64_t v23 = v12;
    sub_146610();
    _os_log_impl(&def_94138, v16, v17, "Insights update took %g seconds", v18, 0xCu);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_F821C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = type metadata accessor for UniformDateBins(0);
  v3[10] = swift_task_alloc();
  uint64_t v4 = sub_145450();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_F8310, 0, 0);
}

uint64_t sub_F8310()
{
  *(void *)(v0 + 112) = sub_145F30();
  *(void *)(v0 + 120) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_F83A8, v2, v1);
}

uint64_t sub_F83A8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 128) = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_F8430, 0, 0);
}

uint64_t sub_F8430()
{
  char v1 = sub_10BE50((uint64_t)&off_184C88, v0[16]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v3 = v0[9];
    uint64_t v2 = v0[10];
    uint64_t v4 = v0[6];
    uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_F69F8(v2, &qword_19C938, v4);
    uint64_t v7 = (int *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
    uint64_t v8 = v4 + v7[5];
    *(void *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 8) = 1;
    uint64_t v9 = v4 + v7[6];
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_F69F8(v2, &qword_19C938, v9);
    uint64_t v10 = v4 + v7[7];
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_F69F8(v2, &qword_19C938, v10);
    uint64_t v11 = v4 + v7[8];
    *(void *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 8) = 1;
    sub_145120();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    v0[17] = sub_145F20();
    uint64_t v15 = sub_145EB0();
    return _swift_task_switch(sub_F8694, v15, v14);
  }
}

uint64_t sub_F8694()
{
  swift_release();
  *(void *)(v0 + 144) = sub_115AA0();
  return _swift_task_switch(sub_F8708, 0, 0);
}

uint64_t sub_F8708()
{
  *(void *)(v0 + 152) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_F8794, v2, v1);
}

uint64_t sub_F8794()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  void *v6 = v0;
  v6[1] = sub_F8910;
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[6];
  return sub_F8AB0(v10, v7, v8, v9);
}

uint64_t sub_F8910()
{
  uint64_t v1 = *(void **)(*v0 + 144);
  uint64_t v2 = *(void *)(*v0 + 104);
  uint64_t v3 = *(void *)(*v0 + 96);
  uint64_t v4 = *(void *)(*v0 + 88);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_F8AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v4[7] = sub_A314(&qword_19C938);
  v4[8] = swift_task_alloc();
  uint64_t v5 = sub_1463D0();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_145450();
  v4[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[13] = v7;
  v4[14] = *(void *)(v7 + 64);
  v4[15] = swift_task_alloc();
  v4[16] = sub_A314(&qword_1A2538);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_145230();
  v4[18] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[19] = v9;
  v4[20] = *(void *)(v9 + 64);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = sub_A314(&qword_1A2540);
  v4[24] = swift_task_alloc();
  v4[25] = sub_A314(&qword_1A2548);
  v4[26] = swift_task_alloc();
  v4[27] = sub_A314(&qword_1A2550);
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for UniformDateBins(0);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_F8D80, 0, 0);
}

uint64_t sub_F8D80()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v27 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 160);
  uint64_t v35 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 104);
  uint64_t v28 = *(void *)(v0 + 96);
  uint64_t v34 = *(void *)(v0 + 88);
  uint64_t v32 = *(void *)(v0 + 80);
  uint64_t v33 = *(void *)(v0 + 72);
  uint64_t v23 = *(void *)(v0 + 48);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v31 = *(void **)(v0 + 32);
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_F69F8(v2, &qword_19C938, v3);
  uint64_t v6 = (int *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v7 = v3 + v6[5];
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = v6[6];
  *(_DWORD *)(v0 + 288) = v8;
  uint64_t v9 = v3 + v8;
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_F69F8(v2, &qword_19C938, v9);
  uint64_t v10 = v6[7];
  *(_DWORD *)(v0 + 292) = v10;
  uint64_t v11 = v3 + v10;
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_F69F8(v2, &qword_19C938, v11);
  uint64_t v12 = v3 + v6[8];
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  *(_DWORD *)(v0 + 296) = v6[9];
  sub_145120();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v27, v23, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v29, v24, v28);
  unint64_t v13 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v14 = (v30 + *(unsigned __int8 *)(v26 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 248) = v15;
  *(void *)(v15 + 16) = v31;
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32);
  *(void *)(v0 + 256) = v16;
  *(void *)(v0 + 264) = (v35 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v16(v15 + v13, v27, v25);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v15 + v14, v29, v28);
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v34, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v33);
  id v17 = v31;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_F9118;
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v19 = *(void *)(v0 + 136);
  uint64_t v21 = *(void *)(v0 + 88);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v19, v21, sub_10FF3C, v15, v20);
}

uint64_t sub_F9118()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_F9618;
  }
  else {
    uint64_t v3 = sub_F929C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_F929C()
{
  unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v30 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v31 = *(void *)(v0 + 144);
  uint64_t v6 = *(int **)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v29 = v7 + *(int *)(v0 + 296);
  uint64_t v28 = v7 + *(int *)(v0 + 292);
  uint64_t v25 = v7 + *(int *)(v0 + 288);
  uint64_t v8 = v5 + v6[12];
  uint64_t v9 = v5 + v6[16];
  uint64_t v10 = v5 + v6[20];
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v26 = *(void *)(v0 + 64);
  sub_2E4D0(v5, v1, &qword_1A2550);
  sub_2E4D0(v8, v2, &qword_1A2548);
  sub_2E4D0(v9, v3, &qword_1A2540);
  v22(v4, v10, v31);
  uint64_t v12 = v1 + *(int *)(v21 + 28);
  uint64_t v23 = v1;
  unint64_t v13 = sub_10B584(*(void *)(v1 + *(int *)(v21 + 32)));
  sub_1248C(v7, &qword_19C938);
  sub_106078(v1, v7, type metadata accessor for UniformDateBins);
  sub_12428(v12, v7 + *(int *)(v11 + 28), &qword_19C930);
  *(void *)(v7 + *(int *)(v11 + 32)) = v13;
  uint64_t v14 = v2 + *(int *)(v24 + 28);
  uint64_t v15 = sub_10B2AC(*(void *)(v2 + *(int *)(v24 + 32)));
  sub_1248C(v25, &qword_19C938);
  sub_106078(v2, v25, type metadata accessor for UniformDateBins);
  sub_12428(v14, v25 + *(int *)(v11 + 28), &qword_19C930);
  *(void *)(v25 + *(int *)(v11 + 32)) = v15;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v2;
  uint64_t v17 = v3 + *(int *)(v27 + 28);
  uint64_t v18 = sub_10AFCC((void (*)(_OWORD *__return_ptr, char *))sub_110010, v16, *(void *)(v3 + *(int *)(v27 + 32)));
  sub_106078(v3, v26, type metadata accessor for UniformDateBins);
  sub_12428(v17, v26 + *(int *)(v11 + 28), &qword_19C930);
  *(void *)(v26 + *(int *)(v11 + 32)) = v18;
  swift_task_dealloc();
  sub_1248C(v3, &qword_1A2540);
  sub_1248C(v23, &qword_1A2550);
  sub_1248C(v2, &qword_1A2548);
  sub_121E0(v26, v28, &qword_19C938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))(v29, v4, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_F9618()
{
  if (qword_19B030 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_1A2410);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    sub_146610();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Failed to fetch entries by entry date: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_F988C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_F98B0, 0, 0);
}

uint64_t sub_F98B0()
{
  *(void *)(v0 + 40) = sub_145F30();
  *(void *)(v0 + 48) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_F9948, v2, v1);
}

uint64_t sub_F9948()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v0 + 56) = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_F99D0, 0, 0);
}

uint64_t sub_F99D0()
{
  char v1 = sub_369C4(3, v0[7]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[8] = sub_145F20();
    uint64_t v3 = sub_145EB0();
    return _swift_task_switch(sub_F9D98, v3, v2);
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = sub_145230();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v4, 1, 1, v5);
    uint64_t v7 = (int *)type metadata accessor for StreakSummary();
    v6(v4 + v7[5], 1, 1, v5);
    v6(v4 + v7[6], 1, 1, v5);
    *(void *)(v4 + v7[7]) = 0;
    uint64_t v8 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
    uint64_t v9 = v4 + v8[5];
    v6(v9, 1, 1, v5);
    v6(v9 + v7[5], 1, 1, v5);
    v6(v9 + v7[6], 1, 1, v5);
    *(void *)(v9 + v7[7]) = 0;
    uint64_t v10 = v4 + v8[6];
    v6(v10, 1, 1, v5);
    v6(v10 + v7[5], 1, 1, v5);
    v6(v10 + v7[6], 1, 1, v5);
    *(void *)(v10 + v7[7]) = 0;
    uint64_t v11 = v4 + v8[7];
    v6(v11, 1, 1, v5);
    v6(v11 + v7[5], 1, 1, v5);
    v6(v11 + v7[6], 1, 1, v5);
    *(void *)(v11 + v7[7]) = 0;
    uint64_t v12 = v4 + v8[8];
    v6(v12, 1, 1, v5);
    v6(v12 + v7[5], 1, 1, v5);
    v6(v12 + v7[6], 1, 1, v5);
    *(void *)(v12 + v7[7]) = 0;
    uint64_t v13 = v4 + v8[9];
    v6(v13, 1, 1, v5);
    v6(v13 + v7[5], 1, 1, v5);
    v6(v13 + v7[6], 1, 1, v5);
    *(void *)(v13 + v7[7]) = 0;
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_F9D98()
{
  swift_release();
  id v1 = sub_115AA0();
  v0[9] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_F9E4C;
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_F9F5C(v4, (uint64_t)v1, v3);
}

uint64_t sub_F9E4C()
{
  id v1 = *(void **)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_F9F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_1463D0();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_145450();
  v3[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[13] = v6;
  v3[14] = *(void *)(v6 + 64);
  v3[15] = swift_task_alloc();
  uint64_t v7 = sub_145230();
  v3[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = *(void *)(v8 + 64);
  v3[19] = swift_task_alloc();
  sub_A314(&qword_19C910);
  v3[20] = swift_task_alloc();
  sub_A314(&qword_19C918);
  v3[21] = swift_task_alloc();
  uint64_t v9 = sub_144C60();
  v3[22] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[23] = v10;
  v3[24] = *(void *)(v10 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_FA1D4, 0, 0);
}

uint64_t sub_FA1D4()
{
  if (qword_19B020 != -1) {
    swift_once();
  }
  uint64_t v40 = v0[28];
  uint64_t v25 = v0[27];
  uint64_t v44 = v0[26];
  uint64_t v45 = v0[25];
  uint64_t v32 = v0[24];
  uint64_t v29 = v0[23];
  uint64_t v1 = v0[21];
  uint64_t v39 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v43 = v0[19];
  uint64_t v30 = v0[18];
  uint64_t v28 = v0[17];
  uint64_t v41 = v0[15];
  uint64_t v42 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v31 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v36 = v0[11];
  uint64_t v37 = v3;
  uint64_t v34 = v0[10];
  uint64_t v35 = v0[9];
  uint64_t v27 = v0[8];
  uint64_t v33 = (void *)v0[7];
  uint64_t v26 = sub_C584(v4, (uint64_t)qword_1A3E78);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v38 = v4;
  v5(v1, 1, 1, v4);
  uint64_t v6 = sub_1454A0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v2, 1, 1, v6);
  sub_144C50();
  v5(v1, 1, 1, v4);
  v7(v2, 1, 1, v6);
  sub_144C50();
  type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v24 = swift_allocBox();
  v0[29] = v24;
  v0[30] = v8;
  sub_11574C(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v43, v27, v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v41, v26, v4);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v9(v44, v40, v39);
  v9(v45, v25, v39);
  unint64_t v10 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v11 = (v30 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (*(unsigned __int8 *)(v37 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v13 = (v31 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v15 = (v14 + v13 + 8) & ~v14;
  uint64_t v16 = (v32 + v14 + v15) & ~v14;
  uint64_t v17 = swift_allocObject();
  v0[31] = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 32))(v17 + v10, v43, v42);
  *(void *)(v17 + v11) = v33;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 32))(v17 + v12, v41, v38);
  *(void *)(v17 + v13) = v24;
  uint64_t v18 = v17 + v15;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v19(v18, v44, v39);
  v19(v17 + v16, v45, v39);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v36, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v35);
  id v20 = v33;
  swift_retain();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[32] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_FA6F0;
  uint64_t v22 = v0[11];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v21, v22, sub_10FB54, v17, (char *)&type metadata for () + 8);
}

uint64_t sub_FA6F0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_FA9DC;
  }
  else {
    uint64_t v5 = sub_FA884;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_FA884()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[23] + 8);
  v3(v0[27], v2);
  v3(v1, v2);
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[6];
  swift_beginAccess();
  sub_106078(v4, v5, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_FA9DC()
{
  if (qword_19B030 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_1A2410);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v6;
    sub_146610();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Failed to fetch events for streaks: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v7 = v0[28];
  uint64_t v8 = v0[22];
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0[23] + 8);
  v9(v0[27], v8);
  v9(v7, v8);
  uint64_t v10 = v0[30];
  uint64_t v11 = v0[6];
  swift_beginAccess();
  sub_106078(v10, v11, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_FACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_145450();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_FAD7C, 0, 0);
}

uint64_t sub_FAD7C()
{
  *(void *)(v0 + 96) = sub_145F30();
  *(void *)(v0 + 104) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_FAE14, v2, v1);
}

uint64_t sub_FAE14()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 112) = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_FAE9C, 0, 0);
}

uint64_t sub_FAE9C()
{
  char v1 = sub_369C4(2, v0[14]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[15] = sub_145F20();
    uint64_t v3 = sub_145EB0();
    return _swift_task_switch(sub_FAF98, v3, v2);
  }
  else
  {
    uint64_t v4 = (void *)v0[6];
    *uint64_t v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = _swiftEmptyArrayStorage;
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_FAF98()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  id v2 = [*(id *)(v1 + 16) newBackgroundContext];
  *(void *)(v0 + 128) = v2;
  NSString v3 = sub_145B80();
  [v2 setName:v3];

  id v4 = [self mergeByPropertyStoreTrumpMergePolicy];
  [v2 setMergePolicy:v4];

  [v2 setAutomaticallyMergesChangesFromParent:1];
  return _swift_task_switch(sub_FB0A4, 0, 0);
}

uint64_t sub_FB0A4()
{
  *(void *)(v0 + 136) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_FB130, v2, v1);
}

uint64_t sub_FB130()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1A2508 + dword_1A2508);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  void *v6 = v0;
  v6[1] = sub_FB2C0;
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[8];
  return v11(v7, v8, v9);
}

uint64_t sub_FB2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void **)(*(void *)v4 + 128);
  uint64_t v7 = *(void *)(*(void *)v4 + 88);
  uint64_t v8 = *(void *)(*(void *)v4 + 80);
  uint64_t v9 = *(void *)(*(void *)v4 + 72);
  v5[19] = a1;
  v5[20] = a2;
  v5[21] = a3;
  v5[22] = a4;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  return _swift_task_switch(sub_FB43C, 0, 0);
}

uint64_t sub_FB43C()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 152);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_FB4B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_FB4D4, 0, 0);
}

uint64_t sub_FB4D4()
{
  *(void *)(v0 + 32) = sub_145F30();
  *(void *)(v0 + 40) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_FB56C, v2, v1);
}

uint64_t sub_FB56C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v0 + 48) = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_FB5F4, 0, 0);
}

uint64_t sub_FB5F4()
{
  char v1 = sub_369C4(4, *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  if (v1)
  {
    *(void *)(v0 + 56) = sub_145F20();
    uint64_t v3 = sub_145EB0();
    return _swift_task_switch(sub_FB6E4, v3, v2);
  }
  else
  {
    **(void **)(v0 + 16) = _swiftEmptyArrayStorage;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_FB6E4()
{
  swift_release();
  id v1 = sub_115AA0();
  *(void *)(v0 + 64) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1A24C0 + dword_1A24C0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_FB7A0;
  return v4((uint64_t)v1);
}

uint64_t sub_FB7A0(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_FB8BC, 0, 0);
}

uint64_t sub_FB8BC()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_FB8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = sub_145450();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  return _swift_task_switch(sub_FB9A4, 0, 0);
}

uint64_t sub_FB9A4()
{
  *(void *)(v0 + 104) = sub_145F30();
  *(void *)(v0 + 112) = sub_145F20();
  uint64_t v2 = sub_145EB0();
  return _swift_task_switch(sub_FBA3C, v2, v1);
}

uint64_t sub_FBA3C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 120) = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_FBAC4, 0, 0);
}

uint64_t sub_FBAC4()
{
  char v1 = sub_369C4(1, v0[15]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[16] = sub_145F20();
    uint64_t v3 = sub_145EB0();
    return _swift_task_switch(sub_FBBC0, v3, v2);
  }
  else
  {
    uint64_t v4 = (void *)v0[6];
    *uint64_t v4 = _swiftEmptyArrayStorage;
    v4[1] = _swiftEmptyArrayStorage;
    v4[2] = 0;
    v4[3] = _swiftEmptyArrayStorage;
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_FBBC0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1A2480 + dword_1A2480);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  void *v6 = v0;
  v6[1] = sub_FBD4C;
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  return v11(v9, v7, v8);
}

uint64_t sub_FBD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(*(void *)v4 + 96);
  uint64_t v7 = *(void *)(*(void *)v4 + 88);
  uint64_t v8 = *(void *)(*(void *)v4 + 80);
  v5[18] = a1;
  v5[19] = a2;
  v5[20] = a3;
  v5[21] = a4;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  return _swift_task_switch(sub_FBEB0, 0, 0);
}

uint64_t sub_FBEB0()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 144);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_FBF28(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  if (__OFADD__(*v4, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v4;
  uint64_t v7 = a3;
  uint64_t v5 = a1;
  ++*v4;
  uint64_t v6 = _s4YearVMa(0);
  sub_145470(a2);
  uint64_t v10 = *(int *)(v6 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)((char *)v4 + v10);
  uint64_t v29 = v13;
  *(void *)((char *)v3 + v10) = 0x8000000000000000;
  unint64_t v8 = sub_137B94(v7);
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = (v14 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v9 = v14;
  if (*(void *)(v13 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_13B6F0(v17, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v29;
    unint64_t v18 = sub_137B94(v7);
    if ((v9 & 1) != (v19 & 1))
    {
      uint64_t result = sub_146C20();
      __break(1u);
      return result;
    }
    unint64_t v8 = v18;
  }
  while (1)
  {
    *(void *)((char *)v3 + v10) = v13;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)((char *)v3 + v10);
    if ((v9 & 1) == 0) {
      sub_13D120(v8, v7, 0, *(void **)((char *)v3 + v10));
    }
    uint64_t v21 = *(void *)(v20 + 56);
    uint64_t v22 = *(void *)(v21 + 8 * v8);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23) {
      break;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    sub_13E0B0();
    uint64_t v13 = v29;
  }
  *(void *)(v21 + 8 * v8) = v24;
  uint64_t v25 = *(void *)(v5 + *(int *)(type metadata accessor for InsightsDataManager.EntrySummary(0) + 28));
  uint64_t v26 = *(int *)(v6 + 28);
  swift_bridgeObjectRetain();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *(void *)((char *)v3 + v26);
  *(void *)((char *)v3 + v26) = 0x8000000000000000;
  sub_106A00(v25, (uint64_t)sub_10D760, 0, v27, &v29);
  *(void *)((char *)v3 + v26) = v29;

  return swift_bridgeObjectRelease();
}

void sub_FC110(void *a1@<X0>, void (*a2)(void, void, void)@<X1>, void (**a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v267 = a2;
  unint64_t v271 = a3;
  uint64_t v226 = a4;
  uint64_t v233 = _s4YearVMa(0);
  uint64_t v240 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  uint64_t v232 = (uint64_t *)((char *)&v212 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v257 = _s5MonthVMa(0);
  uint64_t v243 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  uint64_t v235 = (uint64_t *)((char *)&v212 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v260 = sub_144C60();
  uint64_t v224 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  uint64_t v259 = (char *)&v212 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(qword_19E190);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v242 = (uint64_t)&v212 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v245 = (uint64_t)&v212 - v12;
  __chkstk_darwin(v11);
  uint64_t v248 = (uint64_t)&v212 - v13;
  uint64_t v261 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v223 = *(void *)(v261 - 8);
  uint64_t v14 = __chkstk_darwin(v261);
  uint64_t v234 = (uint64_t)&v212 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v246 = (char *)&v212 - v17;
  __chkstk_darwin(v16);
  uint64_t v236 = (uint64_t)&v212 - v18;
  uint64_t v19 = sub_A314(&qword_1A2560);
  __chkstk_darwin(v19 - 8);
  id v250 = (char *)&v212 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = type metadata accessor for InsightsDataManager.EntrySummary(0);
  uint64_t v222 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  uint64_t v264 = (uint64_t)&v212 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_A314(&qword_1A2540);
  __chkstk_darwin(v241);
  uint64_t v278 = (uint64_t)&v212 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_A314(&qword_1A2548);
  __chkstk_darwin(v244);
  uint64_t v272 = (uint64_t)&v212 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for UniformDateBins(0);
  __chkstk_darwin(v258);
  uint64_t v269 = (void (*)(uint64_t, uint64_t))((char *)&v212 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v252 = (void *)sub_145450();
  id v274 = (const char *)*(v252 - 1);
  uint64_t v25 = __chkstk_darwin(v252);
  char v262 = (void (**)(uint64_t, uint64_t))((char *)&v212 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  int64_t v239 = (void (**)(uint64_t, uint64_t))((char *)&v212 - v27);
  uint64_t v263 = sub_145430();
  uint64_t v266 = *(void *)(v263 - 8);
  uint64_t v28 = __chkstk_darwin(v263);
  char v256 = (char *)&v212 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v273 = (uint64_t)&v212 - v30;
  uint64_t v247 = sub_A314(&qword_1A2550);
  __chkstk_darwin(v247);
  uint64_t v265 = (uint64_t)&v212 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_A314(&qword_1A2530);
  uint64_t v32 = __chkstk_darwin(v229);
  uint64_t v230 = (char *)&v212 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v227 = (char *)&v212 - v34;
  uint64_t v228 = sub_A314(&qword_19C930);
  uint64_t v35 = __chkstk_darwin(v228);
  id v255 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v212 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = __chkstk_darwin(v35);
  id v254 = (char *)&v212 - v38;
  __chkstk_darwin(v37);
  uint64_t v251 = (uint64_t)&v212 - v39;
  uint64_t v40 = sub_A314(&qword_19C150);
  __chkstk_darwin(v40 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v212 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_145230();
  uint64_t v253 = *(void *)(v238 - 8);
  uint64_t v43 = __chkstk_darwin(v238);
  uint64_t v45 = (uint64_t)&v212 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v237 = (char *)&v212 - v46;
  id v47 = [objc_allocWithZone((Class)NSExpressionDescription) init];
  unint64_t v48 = (unint64_t)"%K = %@ AND %K != nil";
  NSString v49 = sub_145B80();
  [v47 setName:v49];

  sub_C84C(0, &qword_1A2568);
  sub_A314(&qword_1A0A00);
  uint64_t v50 = swift_allocObject();
  long long v270 = xmmword_1578A0;
  *(_OWORD *)(v50 + 16) = xmmword_1578A0;
  *(void *)(v50 + 56) = &type metadata for String;
  *(void *)(v50 + 64) = sub_1CEB8();
  *(void *)(v50 + 32) = 0x7461447972746E65;
  *(void *)(v50 + 40) = 0xE900000000000065;
  uint64_t v51 = (void *)sub_146170();
  [v47 setExpression:v51];

  [v47 setExpressionResultType:900];
  id v52 = [objc_allocWithZone((Class)NSFetchRequest) init];
  uint64_t v231 = type metadata accessor for JournalEntryMO();
  id v53 = [(id)swift_getObjCClassFromMetadata() entity];
  [v52 setEntity:v53];

  if (qword_19AED0 != -1) {
    swift_once();
  }
  [v52 setPredicate:static NSPredicate.allJournalEntries];
  [v52 setResultType:2];
  sub_A314(&qword_19C570);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v270;
  *(void *)(v54 + 56) = sub_C84C(0, &qword_1A2570);
  *(void *)(v54 + 32) = v47;
  id v55 = v47;
  uint64_t v56 = (uint64_t)&type metadata for Any;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v52 setPropertiesToFetch:isa];

  sub_C84C(0, &qword_1A2578);
  uint64_t v58 = v268;
  unint64_t v59 = sub_1463F0();
  if (v58)
  {

    return;
  }
  unint64_t v60 = v59;
  id v215 = v55;
  uint64_t v221 = 0;
  id v216 = v52;
  id v219 = a1;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_146930();
    swift_bridgeObjectRelease();
    if (v69) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    long long v276 = 0u;
    long long v277 = 0u;
    uint64_t v64 = v238;
    uint64_t v65 = v253;
    goto LABEL_18;
  }
  if (!*(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_17;
  }
LABEL_7:
  if ((v60 & 0xC000000000000001) != 0) {
    goto LABEL_92;
  }
  if (!*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFFF8)))
  {
    __break(1u);
    goto LABEL_94;
  }
  for (id i = *(id *)(v60 + 32); ; id i = (id)sub_146810())
  {
    uint64_t v62 = i;
    swift_bridgeObjectRelease();
    *(void *)&v275[0] = 0xD000000000000011;
    *((void *)&v275[0] + 1) = v48 | 0x8000000000000000;
    id v63 = objc_msgSend(v62, "__swift_objectForKeyedSubscript:", sub_146C00());
    swift_unknownObjectRelease();

    if (v63)
    {
      sub_1466A0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v275, 0, sizeof(v275));
    }
    uint64_t v64 = v238;
    uint64_t v65 = v253;
    sub_2E4D0((uint64_t)v275, (uint64_t)&v276, &qword_19B1E0);
    if (*((void *)&v277 + 1))
    {
      int v66 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(isUniquelyReferenced_nonNull_native, v66 ^ 1u, 1, v64);
      int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(isUniquelyReferenced_nonNull_native, 1, v64);
      uint64_t v68 = v267;
      if (v67 != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v45, isUniquelyReferenced_nonNull_native, v64);
        goto LABEL_20;
      }
    }
    else
    {
LABEL_18:
      sub_1248C((uint64_t)&v276, &qword_19B1E0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(isUniquelyReferenced_nonNull_native, 1, 1, v64);
      uint64_t v68 = v267;
    }
    sub_145120();
    sub_1248C(isUniquelyReferenced_nonNull_native, &qword_19C150);
LABEL_20:
    uint64_t isUniquelyReferenced_nonNull_native = sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    char v70 = sub_145A60();
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
    unint64_t v48 = v65 + 16;
    uint64_t v71 = v72;
    uint64_t v73 = v237;
    if (v70)
    {
      uint64_t v74 = v237;
      uint64_t v75 = (uint64_t)v68;
    }
    else
    {
      uint64_t v74 = v237;
      uint64_t v75 = v45;
    }
    v71(v74, v75, v64);
    uint64_t v76 = v64;
    uint64_t v77 = v253 + 8;
    id v220 = *(void (**)(uint64_t, uint64_t))(v253 + 8);
    v220(v45, v64);
    if (sub_145A80()) {
      break;
    }
LABEL_91:
    __break(1u);
LABEL_92:
    ;
  }
  int64_t v78 = v73;
  uint64_t v79 = v229;
  uint64_t v80 = v227;
  unint64_t v81 = &v227[*(int *)(v229 + 48)];
  v71(v227, (uint64_t)v78, v76);
  uint64_t v268 = (uint64_t)v81;
  v71(v81, (uint64_t)v68, v76);
  int64_t v82 = v230;
  id v83 = &v230[*(int *)(v79 + 48)];
  v71(v230, (uint64_t)v80, v76);
  v71(v83, (uint64_t)v81, v76);
  uint64_t v84 = v77;
  uint64_t v86 = v253 + 32;
  int64_t v85 = *(void (**)(char *, char *, uint64_t))(v253 + 32);
  uint64_t v87 = v76;
  v85(v254, v82, v76);
  uint64_t v88 = v76;
  unint64_t v89 = (void (*)(char *, uint64_t))v220;
  v220((uint64_t)v83, v88);
  int64_t v90 = &v82[*(int *)(v79 + 48)];
  v85(v82, v80, v87);
  v85(v90, (char *)v268, v87);
  uint64_t v91 = (uint64_t)v254;
  unint64_t v92 = &v254[*(int *)(v228 + 36)];
  uint64_t v253 = v86;
  v213 = (void (*)(uint64_t, char *, uint64_t))v85;
  v85(v92, v90, v87);
  uint64_t v214 = v84;
  v89(v82, v87);
  uint64_t v93 = v91;
  uint64_t v94 = v251;
  sub_2E4D0(v91, v251, &qword_19C930);
  unint64_t v95 = *(char **)(v266 + 104);
  uint64_t v229 = v266 + 104;
  uint64_t v230 = v95;
  uint64_t v96 = v273;
  uint64_t v97 = v266;
  uint64_t v98 = v263;
  ((void (*)(uint64_t, void, uint64_t))v95)(v273, enum case for Calendar.Component.day(_:), v263);
  sub_12428(v94, v93, &qword_19C930);
  uint64_t v99 = v274 + 16;
  int64_t v100 = (void (*)(char *, void (**)(uint64_t, uint64_t), void *))*((void *)v274 + 2);
  char v101 = v239;
  id v102 = v252;
  v100((char *)v239, v271, v252);
  unint64_t v218 = v100;
  uint64_t v267 = *(void (**)(void, void, void))(v97 + 16);
  uint64_t v268 = v97 + 16;
  uint64_t v103 = (uint64_t)v256;
  v267(v256, v96, v98);
  uint64_t v104 = v255;
  sub_12428(v93, (uint64_t)v255, &qword_19C930);
  uint64_t v105 = (uint64_t)v262;
  v100((char *)v262, v101, v102);
  uint64_t v217 = v99;
  uint64_t v106 = v269;
  sub_1408A0(v103, (uint64_t)v104, v105, (uint64_t)v269);
  sub_F69F8((uint64_t)v106, &qword_1A2550, v265);
  uint64_t v225 = (void (*)(void, void *))*((void *)v274 + 1);
  v274 += 8;
  v225(v101, v102);
  sub_1248C(v93, &qword_19C930);
  uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v266 + 8);
  v227 = (char *)(v266 + 8);
  uint64_t v228 = (uint64_t)v107;
  uint64_t v108 = v273;
  v107(v273, v98);
  ((void (*)(uint64_t, void, uint64_t))v230)(v108, enum case for Calendar.Component.month(_:), v98);
  uint64_t v109 = v93;
  sub_12428(v251, v93, &qword_19C930);
  uint64_t v110 = v218;
  v218((char *)v101, v271, v102);
  uint64_t v111 = (uint64_t)v256;
  v267(v256, v108, v98);
  id v112 = v255;
  sub_12428(v93, (uint64_t)v255, &qword_19C930);
  uint64_t v113 = (uint64_t)v262;
  v110((char *)v262, v101, v102);
  uint64_t v114 = v269;
  sub_1408A0(v111, (uint64_t)v112, v113, (uint64_t)v269);
  sub_F69F8((uint64_t)v114, &qword_1A2548, v272);
  v225(v101, v102);
  sub_1248C(v109, &qword_19C930);
  uint64_t v115 = v273;
  ((void (*)(uint64_t, uint64_t))v228)(v273, v98);
  ((void (*)(uint64_t, void, uint64_t))v230)(v115, enum case for Calendar.Component.year(_:), v98);
  sub_12428(v251, v109, &qword_19C930);
  v110((char *)v101, v271, v102);
  uint64_t v116 = (uint64_t)v256;
  v267(v256, v115, v98);
  sub_12428(v109, (uint64_t)v112, &qword_19C930);
  uint64_t v117 = (uint64_t)v262;
  v110((char *)v262, v101, v102);
  uint64_t v118 = v269;
  sub_1408A0(v116, (uint64_t)v112, v117, (uint64_t)v269);
  uint64_t v119 = v278;
  sub_F69F8((uint64_t)v118, &qword_1A2540, v278);
  v225(v101, v102);
  sub_1248C(v109, &qword_19C930);
  ((void (*)(uint64_t, uint64_t))v228)(v273, v98);
  id v120 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v121 = sub_145B80();
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)[v120 initWithEntityName:v121];

  [(id)isUniquelyReferenced_nonNull_native setPredicate:static NSPredicate.allJournalEntries];
  sub_A314(&qword_19C130);
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_159A20;
  sub_C84C(0, &qword_19C2E0);
  swift_getKeyPath();
  *(void *)(v122 + 32) = sub_146270();
  *(void *)&long long v276 = v122;
  sub_145E00();
  Class v123 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [(id)isUniquelyReferenced_nonNull_native setSortDescriptors:v123];

  Class v124 = sub_145DD0().super.isa;
  [(id)isUniquelyReferenced_nonNull_native setRelationshipKeyPathsForPrefetching:v124];

  [(id)isUniquelyReferenced_nonNull_native setFetchBatchSize:400];
  uint64_t v125 = v221;
  unint64_t v126 = sub_1463F0();
  if (v125)
  {

    sub_1248C(v119, &qword_1A2540);
    sub_1248C(v272, &qword_1A2548);
    sub_1248C(v265, &qword_1A2550);
    sub_1248C(v251, &qword_19C930);
    v220((uint64_t)v237, v238);
    return;
  }
  uint64_t v56 = v126;
  uint64_t v230 = (char *)isUniquelyReferenced_nonNull_native;
  uint64_t v221 = 0;
  if (!(v126 >> 62))
  {
    uint64_t v127 = *(void *)((char *)&dword_10 + (v126 & 0xFFFFFFFFFFFFFF8));
    goto LABEL_28;
  }
LABEL_94:
  swift_bridgeObjectRetain();
  uint64_t v127 = sub_146930();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v128 = v261;
  uint64_t v129 = v278;
  uint64_t v45 = (uint64_t)v250;
  uint64_t v130 = v249;
  unint64_t v131 = 0;
  if (!v127)
  {
LABEL_81:
    swift_bridgeObjectRelease();
    [v219 reset];

    sub_1248C(v251, &qword_19C930);
    v208 = (int *)sub_A314(&qword_1A2538);
    uint64_t v209 = v226 + v208[12];
    uint64_t v210 = v226 + v208[16];
    uint64_t v211 = v226 + v208[20];
    sub_2E4D0(v265, v226, &qword_1A2550);
    sub_2E4D0(v272, v209, &qword_1A2548);
    sub_2E4D0(v129, v210, &qword_1A2540);
    v213(v211, v237, v238);
    sub_278A8((uint64_t)v131);
    return;
  }
  char v256 = (char *)(v56 & 0xC000000000000001);
  id v255 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
  unint64_t v271 = (void (**)(uint64_t, uint64_t))(v223 + 48);
  int64_t v239 = (void (**)(uint64_t, uint64_t))(v224 + 8);
  unint64_t v48 = 4;
  uint64_t v231 = v56;
  id v254 = (char *)v127;
  while (2)
  {
    uint64_t v132 = (const char *)(v48 - 4);
    if (v256)
    {
      id v133 = (id)sub_146810();
      uint64_t v134 = (const char *)(v48 - 3);
      if (__OFADD__(v132, 1)) {
        goto LABEL_82;
      }
    }
    else
    {
      id v133 = *(id *)(v56 + 8 * v48);
      uint64_t v134 = (const char *)(v48 - 3);
      if (__OFADD__(v132, 1))
      {
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
    }
    uint64_t isUniquelyReferenced_nonNull_native = v128;
    id v274 = v134;
    v135 = v133;
    sub_FE3D8(v45);
    if ((*v255)(v45, 1, v130) == 1)
    {

      sub_1248C(v45, &qword_1A2560);
      uint64_t v128 = isUniquelyReferenced_nonNull_native;
      goto LABEL_31;
    }
    v252 = v135;
    uint64_t v136 = v264;
    sub_1100C4(v45, v264, type metadata accessor for InsightsDataManager.EntrySummary);
    char v262 = (void (**)(uint64_t, uint64_t))(v136 + *(int *)(v130 + 24));
    uint64_t v137 = v265;
    uint64_t v138 = v248;
    sub_12428(v265, v248, qword_19E190);
    uint64_t v139 = isUniquelyReferenced_nonNull_native;
    uint64_t v269 = *v271;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v138, 1, isUniquelyReferenced_nonNull_native) == 1)
    {
      sub_1248C(v138, qword_19E190);
      uint64_t v45 = 0;
      goto LABEL_43;
    }
    uint64_t v140 = v236;
    sub_1100C4(v138, v236, type metadata accessor for CalendarBinningUnit);
    sub_A314(&qword_1A2280);
    unint64_t v141 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
    uint64_t v142 = swift_allocObject();
    *(_OWORD *)(v142 + 16) = v270;
    v267(v142 + v141, v140, v263);
    sub_26B0C(v142);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v259;
    sub_145330();
    swift_bridgeObjectRelease();
    uint64_t v143 = sub_144C10();
    LOBYTE(v142) = v144;
    (*v239)(isUniquelyReferenced_nonNull_native, v260);
    if ((v142 & 1) == 0)
    {
      sub_1065D0(v140, type metadata accessor for CalendarBinningUnit);
      uint64_t v137 = v265;
      uint64_t v145 = *(void *)(v265 + *(int *)(v258 + 20));
      uint64_t v45 = v143 - v145;
      if (__OFSUB__(v143, v145)) {
        goto LABEL_88;
      }
      uint64_t v139 = v261;
LABEL_43:
      uint64_t v146 = *(int *)(v247 + 32);
      sub_278A8((uint64_t)v131);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v137 + v146);
      uint64_t v147 = v276;
      *(void *)(v137 + v146) = 0x8000000000000000;
      uint64_t v273 = v45;
      unint64_t v149 = sub_137B94(v45);
      uint64_t v150 = *(void *)(v147 + 16);
      BOOL v151 = (v148 & 1) == 0;
      uint64_t v152 = v150 + v151;
      if (__OFADD__(v150, v151)) {
        goto LABEL_83;
      }
      char v153 = v148;
      if (*(void *)(v147 + 24) >= v152)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_13E0B0();
          uint64_t v147 = v276;
        }
      }
      else
      {
        sub_13B6F0(v152, isUniquelyReferenced_nonNull_native);
        uint64_t v147 = v276;
        unint64_t v154 = sub_137B94(v273);
        if ((v153 & 1) != (v155 & 1)) {
          goto LABEL_98;
        }
        unint64_t v149 = v154;
      }
      *(void *)(v137 + v146) = v147;
      swift_bridgeObjectRelease();
      id v156 = *(void **)(v137 + v146);
      swift_bridgeObjectRetain();
      if ((v153 & 1) == 0) {
        sub_13D120(v149, v273, 0, v156);
      }
      uint64_t v45 = v156[7];
      swift_bridgeObjectRelease();
      uint64_t v157 = *(void *)(v45 + 8 * v149);
      BOOL v158 = __OFADD__(v157, 1);
      uint64_t v159 = v157 + 1;
      uint64_t v160 = (uint64_t)v246;
      char v161 = v267;
      uint64_t isUniquelyReferenced_nonNull_native = v268;
      if (v158) {
        goto LABEL_84;
      }
      *(void *)(v45 + 8 * v149) = v159;
      uint64_t v45 = v272;
      uint64_t v162 = v245;
      sub_12428(v272, v245, qword_19E190);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v162, 1, v139) == 1)
      {
        sub_1248C(v162, qword_19E190);
        v163 = 0;
      }
      else
      {
        sub_1100C4(v162, v160, type metadata accessor for CalendarBinningUnit);
        sub_A314(&qword_1A2280);
        unint64_t v164 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
        uint64_t v165 = swift_allocObject();
        *(_OWORD *)(v165 + 16) = v270;
        v161(v165 + v164, v160, v263);
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_26B0C(v165);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v166 = v259;
        sub_145330();
        swift_bridgeObjectRelease();
        uint64_t v167 = sub_144C10();
        LOBYTE(v165) = v168;
        (*v239)((uint64_t)v166, v260);
        if (v165) {
          goto LABEL_96;
        }
        sub_1065D0(v160, type metadata accessor for CalendarBinningUnit);
        uint64_t v45 = v272;
        uint64_t v169 = *(void *)(v272 + *(int *)(v258 + 20));
        v163 = (void (*)(uint64_t, uint64_t))(v167 - v169);
        if (__OFSUB__(v167, v169)) {
          goto LABEL_89;
        }
      }
      uint64_t v170 = *(int *)(v244 + 32);
      int v171 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v45 + v170);
      uint64_t v172 = v276;
      *(void *)(v45 + v170) = 0x8000000000000000;
      uint64_t v45 = sub_137B94((uint64_t)v163);
      uint64_t v174 = *(void *)(v172 + 16);
      BOOL v175 = (v173 & 1) == 0;
      uint64_t v176 = v174 + v175;
      if (__OFADD__(v174, v175)) {
        goto LABEL_85;
      }
      char v177 = v173;
      if (*(void *)(v172 + 24) >= v176)
      {
        if ((v171 & 1) == 0)
        {
          sub_13E274();
          uint64_t v172 = v276;
        }
      }
      else
      {
        sub_13B9CC(v176, v171);
        uint64_t v172 = v276;
        unint64_t v178 = sub_137B94((uint64_t)v163);
        if ((v177 & 1) != (v179 & 1)) {
          goto LABEL_98;
        }
        uint64_t v45 = v178;
      }
      uint64_t v180 = v278;
      uint64_t v181 = v272;
      *(void *)(v272 + v170) = v172;
      swift_bridgeObjectRelease();
      v182 = *(void **)(v181 + v170);
      if (v177)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v183 = (uint64_t)v235;
        *uint64_t v235 = 0;
        swift_bridgeObjectRetain();
        sub_145480();
        sub_13D194(v45, (uint64_t)v163, v183, v182);
      }
      uint64_t isUniquelyReferenced_nonNull_native = v182[7];
      swift_bridgeObjectRelease();
      v184 = (void *)(isUniquelyReferenced_nonNull_native + *(void *)(v243 + 72) * v45);
      if (__OFADD__(*v184, 1)) {
        goto LABEL_86;
      }
      ++*v184;
      sub_145470(v273);
      uint64_t v185 = v242;
      sub_12428(v180, v242, qword_19E190);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v185, 1, v139) == 1)
      {
        sub_1248C(v185, qword_19E190);
        uint64_t isUniquelyReferenced_nonNull_native = 0;
      }
      else
      {
        uint64_t v269 = v163;
        uint64_t v186 = v234;
        sub_1100C4(v185, v234, type metadata accessor for CalendarBinningUnit);
        sub_A314(&qword_1A2280);
        unint64_t v187 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
        uint64_t v188 = swift_allocObject();
        *(_OWORD *)(v188 + 16) = v270;
        v267(v188 + v187, v186, v263);
        sub_26B0C(v188);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v189 = v259;
        sub_145330();
        swift_bridgeObjectRelease();
        uint64_t v190 = sub_144C10();
        uint64_t v45 = v191;
        (*v239)((uint64_t)v189, v260);
        if (v45) {
          goto LABEL_97;
        }
        sub_1065D0(v186, type metadata accessor for CalendarBinningUnit);
        uint64_t v192 = *(void *)(v180 + *(int *)(v258 + 20));
        uint64_t isUniquelyReferenced_nonNull_native = v190 - v192;
        if (__OFSUB__(v190, v192)) {
          goto LABEL_90;
        }
        v163 = v269;
      }
      uint64_t v193 = *(int *)(v241 + 32);
      int v194 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v180 + v193);
      uint64_t v195 = v276;
      *(void *)(v180 + v193) = 0x8000000000000000;
      uint64_t v45 = sub_137B94(isUniquelyReferenced_nonNull_native);
      uint64_t v197 = *(void *)(v195 + 16);
      BOOL v198 = (v196 & 1) == 0;
      uint64_t v199 = v197 + v198;
      if (__OFADD__(v197, v198)) {
        goto LABEL_87;
      }
      char v200 = v196;
      if (*(void *)(v195 + 24) >= v199)
      {
        if ((v194 & 1) == 0)
        {
          sub_13E240();
          uint64_t v195 = v276;
        }
      }
      else
      {
        sub_13B998(v199, v194);
        uint64_t v195 = v276;
        unint64_t v201 = sub_137B94(isUniquelyReferenced_nonNull_native);
        if ((v200 & 1) != (v202 & 1)) {
          goto LABEL_98;
        }
        uint64_t v45 = v201;
      }
      uint64_t v203 = v278;
      *(void *)(v278 + v193) = v195;
      swift_bridgeObjectRelease();
      uint64_t v204 = *(void **)(v203 + v193);
      if (v200)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v205 = (uint64_t)v232;
        *uint64_t v232 = 0;
        uint64_t v206 = v233;
        swift_bridgeObjectRetain();
        sub_145480();
        *(void *)(v205 + *(int *)(v206 + 24)) = &_swiftEmptyDictionarySingleton;
        *(void *)(v205 + *(int *)(v206 + 28)) = &_swiftEmptyDictionarySingleton;
        sub_13D168(v45, isUniquelyReferenced_nonNull_native, v205, v204);
      }
      uint64_t v128 = v261;
      uint64_t isUniquelyReferenced_nonNull_native = v204[7];
      swift_bridgeObjectRelease();
      uint64_t v207 = v264;
      sub_FBF28(v264, v273, (uint64_t)v163);

      sub_1065D0(v207, type metadata accessor for InsightsDataManager.EntrySummary);
      unint64_t v131 = sub_A4E0;
      uint64_t v129 = v278;
      uint64_t v45 = (uint64_t)v250;
      uint64_t v130 = v249;
      uint64_t v56 = v231;
LABEL_31:
      ++v48;
      if (v274 == v254) {
        goto LABEL_81;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  sub_146C20();
  __break(1u);
}

uint64_t sub_FE3D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_A314(&qword_19C150);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v84 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v74 - v7;
  uint64_t v85 = sub_145230();
  uint64_t v9 = *(void *)(v85 - 8);
  uint64_t v10 = __chkstk_darwin(v85);
  int64_t v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v74 - v13;
  __chkstk_darwin(v12);
  id v83 = (char *)&v74 - v15;
  uint64_t v16 = sub_A314(&qword_19B730);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_145290();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v74 - v24;
  id v25 = [v2 id];
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_42;
  }
  uint64_t v26 = v25;
  uint64_t v81 = v9;
  sub_145270();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v27(v18, v23, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_42:
    int v66 = &qword_19B730;
    uint64_t v67 = (uint64_t)v18;
LABEL_43:
    sub_1248C(v67, v66);
LABEL_46:
    uint64_t v68 = type metadata accessor for InsightsDataManager.EntrySummary(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(a1, 1, 1, v68);
  }
  uint64_t v80 = a1;
  v27(v86, v18, v19);
  id v28 = [v2 createdDate];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v8, 1, 1, v85);
    goto LABEL_45;
  }
  uint64_t v29 = v28;
  uint64_t v76 = (void (*)(uint64_t, char *, uint64_t))v27;
  uint64_t v77 = v20 + 32;
  sub_1451E0();

  uint64_t v30 = v81;
  uint64_t v31 = (unsigned int (*)(char *, uint64_t, uint64_t))(v81 + 32);
  unint64_t v32 = *(void *)(v81 + 32);
  uint64_t v33 = v85;
  ((void (*)(char *, char *, uint64_t))v32)(v8, v14, v85);
  unint64_t v79 = *(void *)(v30 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v79)(v8, 0, 1, v33);
  int64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v78(v8, 1, v33) == 1)
  {
LABEL_45:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v86, v19);
    sub_1248C((uint64_t)v8, &qword_19C150);
    a1 = v80;
    goto LABEL_46;
  }
  ((void (*)(char *, char *, uint64_t))v32)(v83, v8, v33);
  id v34 = [v2 entryDate];
  uint64_t v35 = v33;
  if (!v34)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v84, 1, 1, v33);
    a1 = v80;
    goto LABEL_48;
  }
  uint64_t v36 = v34;
  sub_1451E0();

  uint64_t v37 = v84;
  ((void (*)(char *, char *, uint64_t))v32)(v84, v14, v35);
  ((void (*)(char *, void, uint64_t, uint64_t))v79)(v37, 0, 1, v35);
  unsigned int v38 = v78(v37, 1, v35);
  a1 = v80;
  if (v38 == 1)
  {
LABEL_48:
    (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v35);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v86, v19);
    int v66 = &qword_19C150;
    uint64_t v67 = (uint64_t)v84;
    goto LABEL_43;
  }
  int64_t v78 = v31;
  ((void (*)(char *, char *, uint64_t))v32)(v82, v84, v35);
  unint64_t v39 = (unint64_t)sub_50208();
  unint64_t v79 = v39;
  if (v39 >> 62) {
    goto LABEL_55;
  }
  uint64_t v40 = *(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))v32;
    uint64_t v41 = 0;
    if (!v40) {
      break;
    }
    unint64_t v32 = v79;
    uint64_t v84 = (char *)(v79 & 0xC000000000000001);
    uint64_t v42 = &_swiftEmptyDictionarySingleton;
    uint64_t v43 = 4;
    uint64_t v81 = v40;
    while (1)
    {
      id v44 = v84 ? (id)sub_146810() : *(id *)(v32 + 8 * v43);
      uint64_t v45 = v44;
      uint64_t v46 = v43 - 3;
      if (__OFADD__(v43 - 4, 1)) {
        break;
      }
      id v47 = [v44 assetType];
      if (v47)
      {
        unint64_t v48 = v47;
        sub_145BC0();

        char v49 = sub_B938();
        unsigned __int8 v50 = 1;
        unint64_t v32 = v79;
        switch(v49)
        {
          case 2:
            break;
          case 3:
          case 4:
          case 5:
          case 17:
            unsigned __int8 v50 = 3;
            break;
          case 6:
            unsigned __int8 v50 = 2;
            break;
          case 7:
          case 8:
          case 9:
            unsigned __int8 v50 = 4;
            break;
          case 10:
          case 18:
          case 19:
          case 20:
          case 21:
            goto LABEL_11;
          case 11:
            unsigned __int8 v50 = 5;
            break;
          case 12:
          case 13:
          case 16:
            unsigned __int8 v50 = 6;
            break;
          case 14:
            unsigned __int8 v50 = 7;
            break;
          case 15:
            unsigned __int8 v50 = 8;
            break;
          default:
            unsigned __int8 v50 = 0;
            break;
        }
        sub_278A8((uint64_t)v41);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v87 = v42;
        unint64_t v53 = sub_137E14(v50);
        uint64_t v54 = v42[2];
        BOOL v55 = (v52 & 1) == 0;
        uint64_t v56 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_52;
        }
        char v57 = v52;
        if (v42[3] >= v56)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_13DF20();
          }
        }
        else
        {
          sub_13B300(v56, isUniquelyReferenced_nonNull_native);
          unint64_t v58 = sub_137E14(v50);
          if ((v57 & 1) != (v59 & 1))
          {
            sub_146C20();
            __break(1u);
            JUMPOUT(0xFED04);
          }
          unint64_t v53 = v58;
        }
        uint64_t v42 = v87;
        swift_bridgeObjectRelease();
        if (v57)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v42[(v53 >> 6) + 8] |= 1 << v53;
          *(unsigned char *)(v42[6] + v53) = v50;
          *(void *)(v42[7] + 8 * v53) = 0;
          uint64_t v60 = v42[2];
          uint64_t v61 = v60 + 1;
          unint64_t v32 = __OFADD__(v60, 1);
          swift_bridgeObjectRetain();
          if (v32) {
            goto LABEL_54;
          }
          void v42[2] = v61;
          unint64_t v32 = v79;
        }
        uint64_t v62 = v42[7];
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(v62 + 8 * v53);
        BOOL v64 = __OFADD__(v63, 1);
        uint64_t v65 = v63 + 1;
        if (v64) {
          goto LABEL_53;
        }
        *(void *)(v62 + 8 * v53) = v65;
        uint64_t v41 = sub_A4E0;
      }
LABEL_11:

      ++v43;
      if (v46 == v81) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_146930();
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = &_swiftEmptyDictionarySingleton;
LABEL_50:
  swift_bridgeObjectRelease();
  uint64_t v70 = v80;
  v76(v80, v86, v19);
  uint64_t v71 = (int *)type metadata accessor for InsightsDataManager.EntrySummary(0);
  uint64_t v72 = v85;
  uint64_t v73 = v75;
  v75(v70 + v71[5], v83, v85);
  v73(v70 + v71[6], v82, v72);
  *(void *)(v70 + v71[7]) = v42;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v71 - 1) + 56))(v70, 0, 1, v71);
  return sub_278A8((uint64_t)v41);
}

uint64_t sub_FED5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = _s4YearVMa(0);
  uint64_t v7 = sub_145460();
  uint64_t v8 = *a1;
  uint64_t v9 = *(uint64_t *)((char *)a1 + *(int *)(v6 + 24));
  v13[2] = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_F5F3C((void (*)(void *))sub_110038, (uint64_t)v13, v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_F56B0(*(uint64_t *)((char *)a1 + *(int *)(v6 + 28)));
  swift_bridgeObjectRetain();
  sub_106CC4(&v14, type metadata accessor for InsightsDataManager.TopAssetCategory, (uint64_t (*)(uint64_t))sub_10C5F0, sub_106D88);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = v14;
  *a3 = v7;
  a3[1] = v8;
  a3[2] = (uint64_t)v10;
  a3[3] = v12;
  return result;
}

uint64_t sub_FEE90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_A314(&qword_19C930);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = *(int *)(sub_A314(&qword_19C548) + 48);
  sub_140334(v8, (uint64_t)v6);
  sub_145130();
  sub_1451B0();
  uint64_t result = sub_1248C((uint64_t)v6, &qword_19C930);
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = (void *)(a2 + v9);
    *uint64_t v11 = 0;
    v11[1] = v7;
  }
  return result;
}

void sub_FEF94(void (*a1)(char *, uint64_t, uint64_t, uint64_t), void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v98 = a6;
  uint64_t v97 = a5;
  uint64_t v91 = a4;
  id v110 = a3;
  uint64_t v96 = sub_145430();
  uint64_t v111 = *(char **)(v96 - 8);
  __chkstk_darwin(v96);
  unint64_t v95 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_A314(&qword_19C150);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v104 = (char *)&v83 - v15;
  uint64_t v16 = sub_145230();
  uint64_t v17 = *(char ***)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v89 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v107 = (char *)&v83 - v21;
  __chkstk_darwin(v20);
  int64_t v90 = (char *)&v83 - v22;
  id v23 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v24 = sub_145B80();
  id v25 = [v23 initWithEntityName:v24];

  if (qword_19AED0 != -1) {
    goto LABEL_51;
  }
  while (1)
  {
    [v25 setPredicate:static NSPredicate.allJournalEntries];
    sub_A314(&qword_19C570);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1578A0;
    *(void *)(v26 + 56) = &type metadata for String;
    *(void *)(v26 + 32) = 1954047348;
    *(void *)(v26 + 40) = 0xE400000000000000;
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
    [v25 setPropertiesToFetch:isa];

    [v25 setFetchBatchSize:100];
    type metadata accessor for JournalEntryMO();
    unint64_t v28 = sub_1463F0();
    if (v7)
    {
      uint64_t v29 = v25;
      if (qword_19B030 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_145760();
      sub_C584(v30, (uint64_t)qword_1A2410);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v31 = sub_145740();
      os_log_type_t v32 = sub_1461F0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        id v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        swift_errorRetain();
        uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v112 = v35;
        sub_146610();
        void *v34 = v35;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&def_94138, v31, v32, "Failed to fetch entries for word counts: %@", v33, 0xCu);
        sub_A314(&qword_19B200);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return;
    }
    unint64_t v36 = v28;
    uint64_t v85 = a1;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_146930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8));
    }
    unsigned int v38 = v85;
    if (!v37) {
      break;
    }
    if (v37 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v83 = 0;
    id v84 = v25;
    unint64_t v39 = v91 + 2;
    unint64_t v103 = v36 & 0xC000000000000001;
    swift_beginAccess();
    swift_beginAccess();
    id v102 = v39;
    swift_beginAccess();
    uint64_t v7 = 0;
    uint64_t v108 = v17 + 4;
    uint64_t v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 7);
    uint64_t v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 6);
    unsigned int v88 = enum case for Calendar.Component.month(_:);
    uint64_t v94 = v111 + 104;
    uint64_t v93 = (void (**)(char *, uint64_t))(v111 + 8);
    unint64_t v92 = (void (**)(void *, uint64_t))(v17 + 1);
    unsigned int v87 = enum case for Calendar.Component.year(_:);
    uint64_t v17 = &selRef_streakReminderMinute;
    char v101 = (char *)v14;
    uint64_t v86 = a2;
    unint64_t v99 = v36;
    int64_t v100 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v37;
    while (1)
    {
      uint64_t v40 = v103 ? (char *)sub_146810() : (char *)*(id *)(v36 + 8 * (void)v7 + 32);
      uint64_t v41 = v40;
      id v42 = [v40 title];
      if (v42 && (v43 = sub_144FA0(), v45 = v44, v42, id v42 = sub_9C5C(v43, v45), sub_C52C(v43, v45), v42))
      {
        id v46 = [v42 string];

        id v42 = (id)sub_145BC0();
        unint64_t v48 = v47;
      }
      else
      {
        unint64_t v48 = 0xE000000000000000;
      }
      uint64_t v113 = 0;
      NSString v49 = sub_145B80();
      uint64_t v50 = (uint64_t)v110;
      objc_msgSend(v110, v17[313], v49);

      NSString v51 = sub_145B80();
      objc_msgSend(a2, v17[313], v51);

      __chkstk_darwin(v52);
      *(&v83 - 6) = (uint64_t)a2;
      *(&v83 - 5) = v50;
      *(&v83 - 4) = (uint64_t)&v113;
      *(&v83 - 3) = (uint64_t)v42;
      *(&v83 - 2) = v48;
      sub_146150();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t)v113;
      id v53 = [v41 text];
      uint64_t v111 = v41;
      if (!v53) {
        goto LABEL_25;
      }
      uint64_t v54 = sub_144FA0();
      unint64_t v56 = v55;

      id v53 = sub_9C5C(v54, v56);
      sub_C52C(v54, v56);
      if (v53)
      {
        id v57 = [v53 string];

        id v53 = (id)sub_145BC0();
        unint64_t v59 = v58;
      }
      else
      {
LABEL_25:
        unint64_t v59 = 0xE000000000000000;
      }
      uint64_t v113 = 0;
      NSString v60 = sub_145B80();
      id v25 = v110;
      objc_msgSend(v110, v17[313], v60);

      NSString v61 = sub_145B80();
      objc_msgSend(a2, v17[313], v61);

      a1 = (void (*)(char *, uint64_t, uint64_t, uint64_t))&v83;
      __chkstk_darwin(v62);
      *(&v83 - 6) = (uint64_t)a2;
      *(&v83 - 5) = (uint64_t)v25;
      *(&v83 - 4) = (uint64_t)&v113;
      *(&v83 - 3) = (uint64_t)v53;
      *(&v83 - 2) = v59;
      sub_146150();
      swift_bridgeObjectRelease();
      uint64_t v63 = &v113[v14];
      if (__OFADD__(v14, v113)) {
        break;
      }
      if (__OFADD__(*v102, v63)) {
        goto LABEL_48;
      }
      *v102 += v63;
      id v64 = [v111 entryDate];
      if (!v64)
      {
        a1 = *v109;
        uint64_t v68 = (uint64_t)v104;
        (*v109)(v104, 1, 1, v16);
        id v25 = v101;
        goto LABEL_32;
      }
      uint64_t v65 = v64;
      uint64_t v105 = v7;
      uint64_t v7 = v17;
      int v66 = v107;
      sub_1451E0();

      uint64_t v17 = v108;
      uint64_t v67 = *v108;
      uint64_t v68 = (uint64_t)v104;
      ((void (*)(char *, char *, uint64_t))*v108)(v104, v66, v16);
      a1 = *v109;
      (*v109)((char *)v68, 0, 1, v16);
      if ((*v106)(v68, 1, v16) == 1)
      {
        id v25 = v101;
        uint64_t v17 = v7;
        uint64_t v7 = v105;
LABEL_32:
        sub_1248C(v68, &qword_19C150);
        goto LABEL_38;
      }
      a2 = v90;
      ((void (*)(char *, uint64_t, uint64_t))v67)(v90, v68, v16);
      uint64_t v69 = v95;
      uint64_t v70 = v96;
      (*(void (**)(char *, void, uint64_t))v94)(v95, v88, v96);
      char v71 = sub_1453F0();
      (*v93)(v69, v70);
      uint64_t v14 = v16;
      (*v92)(a2, v16);
      if (v71)
      {
        uint64_t v72 = v91[3];
        BOOL v73 = __OFADD__(v72, v63);
        uint64_t v74 = &v63[v72];
        id v25 = v101;
        if (v73) {
          goto LABEL_49;
        }
        uint64_t v17 = v7;
        v91[3] = v74;
        a2 = v86;
      }
      else
      {
        id v25 = v101;
        a2 = v86;
        uint64_t v17 = v7;
      }
      uint64_t v7 = v105;
LABEL_38:
      id v75 = [v111 entryDate];
      if (!v75)
      {
        a1((char *)v25, 1, 1, v16);
LABEL_13:

        sub_1248C((uint64_t)v25, &qword_19C150);
        a1 = v100;
        goto LABEL_14;
      }
      uint64_t v76 = v75;
      uint64_t v77 = v107;
      sub_1451E0();

      int64_t v78 = *v108;
      ((void (*)(id, char *, uint64_t))*v108)(v25, v77, v16);
      a1((char *)v25, 0, 1, v16);
      if ((*v106)((uint64_t)v25, 1, v16) == 1) {
        goto LABEL_13;
      }
      uint64_t v14 = (uint64_t)v89;
      ((void (*)(char *, id, uint64_t))v78)(v89, v25, v16);
      unint64_t v79 = v95;
      id v25 = (id)v96;
      (*(void (**)(char *, void, uint64_t))v94)(v95, v87, v96);
      char v80 = sub_1453F0();

      (*v93)(v79, (uint64_t)v25);
      (*v92)((void *)v14, v16);
      a1 = v100;
      if (v80)
      {
        uint64_t v81 = v91[4];
        BOOL v73 = __OFADD__(v81, v63);
        int64_t v82 = &v63[v81];
        if (v73) {
          goto LABEL_50;
        }
        v91[4] = v82;
      }
LABEL_14:
      uint64_t v7 = (char **)((char *)v7 + 1);
      unint64_t v36 = v99;
      if ((char *)a1 == (char *)v7)
      {
        swift_bridgeObjectRelease();
        id v25 = v84;
        unsigned int v38 = v85;
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_46:
  [v38 reset];
}

void sub_FFD3C(uint64_t a1, char *a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v224 = a6;
  uint64_t v223 = a5;
  int64_t v239 = a3;
  uint64_t v236 = a2;
  uint64_t v237 = (double *)a1;
  uint64_t v240 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v240);
  uint64_t v8 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_A314(&qword_19C890);
  __chkstk_darwin(v206);
  uint64_t v205 = (uint64_t *)((char *)&v195 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v204 = sub_A314(&qword_19C8A0);
  uint64_t v199 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v207 = (char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_A314(&qword_19C150);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v222 = (uint64_t)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v226 = (char *)&v195 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v231 = (char *)&v195 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v221 = (uint64_t)&v195 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v225 = (char *)&v195 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v228 = (char *)&v195 - v23;
  __chkstk_darwin(v22);
  id v25 = (char *)&v195 - v24;
  uint64_t v26 = sub_145230();
  uint64_t v27 = *(char **)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  id v220 = (char *)&v195 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  id v219 = (char *)&v195 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v238 = (char *)&v195 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  char v200 = (char *)&v195 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v232 = (char *)&v195 - v37;
  __chkstk_darwin(v36);
  v227 = (char *)&v195 - v38;
  uint64_t v202 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v229 = a4;
  uint64_t v201 = swift_projectBox();
  id v39 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v40 = sub_145B80();
  id v234 = [v39 initWithEntityName:v40];

  uint64_t v235 = (unsigned int (*)(char *, char *, uint64_t))sub_A314(&qword_19C130);
  uint64_t v41 = swift_allocObject();
  long long v213 = xmmword_15BC70;
  *(_OWORD *)(v41 + 16) = xmmword_15BC70;
  if (qword_19AEA8 != -1) {
    swift_once();
  }
  uint64_t v233 = v25;
  v208 = v27;
  uint64_t v242 = v26;
  uint64_t v203 = v8;
  id v42 = (void *)static NSPredicate.isNotDraftEntry;
  *(void *)(v41 + 32) = static NSPredicate.isNotDraftEntry;
  uint64_t v43 = qword_19AEB0;
  id v44 = v42;
  if (v43 != -1) {
    swift_once();
  }
  unint64_t v45 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v41 + 40) = static NSPredicate.isNotTipEntry;
  uint64_t v46 = sub_C84C(0, (unint64_t *)&qword_19C2E8);
  uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_A314(&qword_1A0A00);
  uint64_t v47 = swift_allocObject();
  long long v215 = xmmword_15A590;
  *(_OWORD *)(v47 + 16) = xmmword_15A590;
  *(void *)(v47 + 56) = &type metadata for String;
  unint64_t v48 = sub_1CEB8();
  *(void *)(v47 + 64) = v48;
  *(void *)(v47 + 32) = 0x4464657461657263;
  *(void *)(v47 + 40) = 0xEB00000000657461;
  id v49 = v45;
  Class isa = sub_145180().super.isa;
  *(void *)&long long v212 = sub_C84C(0, &qword_19C2F0);
  *(void *)(v47 + 96) = v212;
  uint64_t v51 = sub_1228C((unint64_t *)&qword_19C2F8, &qword_19C2F0);
  *(void *)(v47 + 72) = isa;
  *(void *)(v47 + 136) = &type metadata for String;
  *(void *)(v47 + 144) = v48;
  id v216 = (objc_class *)v48;
  uint64_t v211 = v51;
  *(void *)(v47 + 104) = v51;
  *(void *)(v47 + 112) = 0x4464657461657263;
  *(void *)(v47 + 120) = 0xEB00000000657461;
  uint64_t v210 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))0x8000000000151C10;
  *(void *)(v41 + 48) = sub_146160();
  uint64_t v241 = (char *)v41;
  sub_145E00();
  unint64_t v218 = (void (*)(char *, char *, uint64_t))v46;
  Class v52 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v53 = self;
  id v54 = [v53 andPredicateWithSubpredicates:v52];

  id v55 = v234;
  [v234 setPredicate:v54];

  uint64_t v56 = swift_allocObject();
  long long v209 = xmmword_159A20;
  *(_OWORD *)(v56 + 16) = xmmword_159A20;
  sub_C84C(0, &qword_19C2E0);
  swift_getKeyPath();
  *(void *)(v56 + 32) = sub_146270();
  uint64_t v241 = (char *)v56;
  sub_145E00();
  Class v57 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v55 setSortDescriptors:v57];

  uint64_t v58 = sub_A314(&qword_19C570);
  uint64_t v59 = swift_allocObject();
  long long v214 = xmmword_1578A0;
  *(_OWORD *)(v59 + 16) = xmmword_1578A0;
  *(void *)(v59 + 56) = &type metadata for String;
  *(void *)(v59 + 32) = 0x4464657461657263;
  *(void *)(v59 + 40) = 0xEB00000000657461;
  Class v60 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v55 setPropertiesToFetch:v60];

  NSString v61 = (void *)type metadata accessor for JournalEntryMO();
  uint64_t v62 = v230;
  unint64_t v63 = sub_1463F0();
  if (v62) {
    goto LABEL_9;
  }
  uint64_t v195 = sub_F62AC(v63, (SEL *)&selRef_createdDate);
  uint64_t v197 = 0;
  swift_bridgeObjectRelease();
  id v64 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v65 = sub_145B80();
  id v198 = [v64 initWithEntityName:v65];

  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v213;
  uint64_t v67 = (void *)static NSPredicate.isNotDraftEntry;
  uint64_t v68 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v66 + 32) = static NSPredicate.isNotDraftEntry;
  *(void *)(v66 + 40) = v68;
  uint64_t v69 = swift_allocObject();
  uint64_t v230 = v58;
  uint64_t v70 = (NSDate *)v69;
  *(_OWORD *)(v69 + 16) = v215;
  *(void *)(v69 + 56) = &type metadata for String;
  *(void *)&long long v213 = (char *)&type metadata for Any + 8;
  char v71 = v216;
  *(void *)(v69 + 64) = v216;
  *(void *)(v69 + 32) = 0x4464657461647075;
  id v196 = v61;
  *(void *)(v69 + 40) = 0xEB00000000657461;
  id v72 = v67;
  id v73 = v68;
  v74.super.Class isa = sub_145180().super.isa;
  uint64_t v75 = v211;
  v70[12].super.Class isa = (Class)v212;
  v70[13].super.Class isa = (Class)v75;
  v70[9].super.Class isa = v74.super.isa;
  v70[17].super.Class isa = (Class)&type metadata for String;
  v70[18].super.Class isa = v71;
  v70[14].super.Class isa = (Class)0x4464657461647075;
  v70[15].super.Class isa = (Class)0xEB00000000657461;
  *(void *)(v66 + 48) = sub_146160();
  uint64_t v241 = (char *)v66;
  sub_145E00();
  Class v76 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v77 = [v53 andPredicateWithSubpredicates:v76];

  id v78 = v198;
  [v198 setPredicate:v77];

  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = v209;
  swift_getKeyPath();
  *(void *)(v79 + 32) = sub_146270();
  uint64_t v241 = (char *)v79;
  sub_145E00();
  Class v80 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v78 setSortDescriptors:v80];

  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = v214;
  *(void *)(v81 + 56) = &type metadata for String;
  *(void *)(v81 + 32) = 0x4464657461647075;
  *(void *)(v81 + 40) = 0xEB00000000657461;
  Class v82 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v78 setPropertiesToFetch:v82];

  uint64_t v83 = v197;
  unint64_t v84 = sub_1463F0();
  if (v83)
  {

    swift_bridgeObjectRelease();
    id v55 = v78;
LABEL_9:

    return;
  }
  uint64_t v85 = sub_F62AC(v84, (SEL *)&selRef_updatedDate);
  swift_bridgeObjectRelease();
  id v86 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v87 = sub_145B80();
  id v88 = [v86 initWithEntityName:v87];

  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v215;
  int64_t v90 = v216;
  *(void *)(v89 + 56) = &type metadata for String;
  *(void *)(v89 + 64) = v90;
  *(void *)(v89 + 32) = 0x7079547465737361;
  *(void *)(v89 + 40) = 0xE900000000000065;
  *(void *)(v89 + 96) = &type metadata for String;
  *(void *)(v89 + 104) = v90;
  *(void *)(v89 + 72) = 0x76456B6165727473;
  *(void *)(v89 + 80) = 0xEB00000000746E65;
  *(void *)(v89 + 136) = &type metadata for String;
  *(void *)(v89 + 144) = v90;
  strcpy((char *)(v89 + 112), "assetMetaData");
  *(_WORD *)(v89 + 126) = -4864;
  uint64_t v91 = (void *)sub_146160();
  [v88 setPredicate:v91];

  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = v214;
  *(void *)(v92 + 56) = &type metadata for String;
  strcpy((char *)(v92 + 32), "assetMetaData");
  *(_WORD *)(v92 + 46) = -4864;
  Class v93 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v88 setPropertiesToFetch:v93];

  type metadata accessor for JournalEntryAssetMO();
  unint64_t v94 = sub_1463F0();
  unint64_t v95 = v94;
  *(void *)&long long v209 = v85;
  uint64_t v197 = 0;
  if (v94 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_146930();
  }
  else
  {
    uint64_t v96 = *(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v97 = v242;
  uint64_t v98 = v208;
  id v196 = v88;
  if (v96)
  {
    if (v96 < 1)
    {
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v99 = 0;
    unint64_t v218 = (void (*)(char *, char *, uint64_t))(v95 & 0xC000000000000001);
    *(void *)&long long v213 = v199 + 56;
    *(void *)&long long v214 = v208 + 16;
    uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 56);
    id v216 = (objc_class *)(v208 + 48);
    int64_t v100 = _swiftEmptyArrayStorage;
    *(void *)&long long v215 = v208 + 32;
    long long v212 = xmmword_159810;
    uint64_t v101 = (uint64_t)v207;
    uint64_t v235 = (unsigned int (*)(char *, char *, uint64_t))v95;
    uint64_t v230 = v96;
    do
    {
      if (v218) {
        id v102 = (id)sub_146810();
      }
      else {
        id v102 = *(id *)(v95 + 8 * v99 + 32);
      }
      unint64_t v103 = v102;
      uint64_t v104 = (char *)objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
      *(void *)&v104[OBJC_IVAR____TtCC15JournalSettings10Journaling16StreakEventAsset_metadata] = 0;
      id v105 = v103;
      uint64_t v106 = (char *)sub_7B3F8(v105);
      uint64_t v107 = v106;
      uint64_t v108 = OBJC_IVAR____TtCC15JournalSettings10Journaling16StreakEventAsset_metadata;
      if (*(void *)&v106[OBJC_IVAR____TtCC15JournalSettings10Journaling16StreakEventAsset_metadata]) {
        goto LABEL_25;
      }
      uint64_t v109 = *(void **)&v106[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO];
      if (v109)
      {
        id v110 = [v109 assetMetaData];
        if (v110)
        {
          uint64_t v111 = v110;
          uint64_t v112 = sub_144FA0();
          uint64_t v114 = v113;

          uint64_t v115 = v205;
          *uint64_t v205 = v112;
          v115[1] = v114;
          uint64_t v98 = v208;
          uint64_t v97 = v242;
          swift_storeEnumTagMultiPayload();
          sub_A314(&qword_1A2520);
          uint64_t v116 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v213)(v116 + *(void *)(*(void *)v116 + 104), 1, 1, v204);
          *(_OWORD *)(v116 + *(void *)(*(void *)v116 + 112)) = v212;
          uint64_t v117 = (uint64_t)v115;
          uint64_t v101 = (uint64_t)v207;
          sub_2E4D0(v117, v116 + *(void *)(*(void *)v116 + 120), &qword_19C890);
          *(void *)&v107[v108] = v116;
          swift_release();
        }
      }
      if (*(void *)&v107[v108])
      {
LABEL_25:
        swift_retain();
        sub_33914(v101);

        swift_release();
      }
      else
      {
        uint64_t v126 = _s16StreakEventAssetC12MetadataTypeVMa(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v101, 1, 1, v126);
      }
      uint64_t v118 = _s16StreakEventAssetC12MetadataTypeVMa(0);
      int v119 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v101, 1, v118);
      uint64_t v120 = (uint64_t)v233;
      if (v119 == 1)
      {
        sub_1248C(v101, &qword_19C8A0);
        uint64_t v121 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))v214)(v233, v101 + *(int *)(v118 + 20), v97);
        sub_1065D0(v101, _s16StreakEventAssetC12MetadataTypeVMa);
        uint64_t v121 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v217)(v120, v121, 1, v97);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v216)(v120, 1, v97) == 1)
      {
        sub_1248C(v120, &qword_19C150);
      }
      else
      {
        uint64_t v122 = *(void (**)(uint64_t, char *, uint64_t))v215;
        Class v123 = v227;
        (*(void (**)(char *, uint64_t, uint64_t))v215)(v227, v120, v97);
        v122((uint64_t)v232, v123, v97);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v100 = (double *)sub_7E3EC(0, *((void *)v100 + 2) + 1, 1, (unint64_t)v100);
        }
        unint64_t v125 = *((void *)v100 + 2);
        unint64_t v124 = *((void *)v100 + 3);
        if (v125 >= v124 >> 1) {
          int64_t v100 = (double *)sub_7E3EC(v124 > 1, v125 + 1, 1, (unint64_t)v100);
        }
        *((void *)v100 + 2) = v125 + 1;
        v122((uint64_t)v100+ ((v98[80] + 32) & ~(unint64_t)v98[80])+ *((void *)v98 + 9) * v125, v232, v97);
      }
      ++v99;
      unint64_t v95 = (unint64_t)v235;
    }
    while (v230 != v99);
  }
  else
  {
    int64_t v100 = _swiftEmptyArrayStorage;
  }
  uint64_t v127 = swift_bridgeObjectRelease_n();
  __chkstk_darwin(v127);
  *(&v195 - 2) = v237;
  uint64_t v128 = v197;
  uint64_t v129 = sub_F662C((uint64_t (*)(char *))sub_10FD6C, (uint64_t)(&v195 - 4), (uint64_t)v100);
  uint64_t v130 = (int *)v240;
  *(void *)&long long v212 = swift_allocBox();
  uint64_t v132 = v131;
  id v133 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v98 + 7);
  v133(v131, 1, 1, v97);
  v133(v132 + v130[5], 1, 1, v97);
  v133(v132 + v130[6], 1, 1, v97);
  uint64_t v134 = v130[7];
  uint64_t v232 = (char *)v132;
  *(void *)(v132 + v134) = 0;
  uint64_t v211 = swift_allocBox();
  uint64_t v136 = v135;
  v133(v135, 1, 1, v97);
  v133(v136 + v130[5], 1, 1, v97);
  uint64_t v137 = v136 + v130[6];
  uint64_t v210 = v133;
  uint64_t v233 = v98 + 56;
  v133(v137, 1, 1, v97);
  uint64_t v138 = v130[7];
  uint64_t v230 = v136;
  *(void *)(v136 + v138) = 0;
  uint64_t v139 = v195;
  uint64_t v241 = (char *)v195;
  swift_bridgeObjectRetain();
  uint64_t v140 = v209;
  uint64_t v141 = swift_bridgeObjectRetain();
  sub_10AC5C(v141);
  uint64_t v142 = swift_bridgeObjectRetain();
  sub_10AC5C(v142);
  swift_bridgeObjectRetain();
  sub_106CC4((uint64_t *)&v241, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(uint64_t))sub_10C604, sub_10831C);
  if (v128)
  {
LABEL_62:
    swift_release();
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v207 = v241;
  if (qword_19B030 != -1) {
    swift_once();
  }
  uint64_t v143 = sub_145760();
  sub_C584(v143, (uint64_t)qword_1A2410);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v144 = sub_145740();
  os_log_type_t v145 = sub_1461D0();
  BOOL v146 = os_log_type_enabled(v144, v145);
  uint64_t v197 = 0;
  if (v146)
  {
    uint64_t v147 = swift_slowAlloc();
    *(_DWORD *)uint64_t v147 = 134218496;
    uint64_t v148 = *((void *)v139 + 2);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v148;
    sub_146610();
    swift_bridgeObjectRelease();
    *(_WORD *)(v147 + 12) = 2048;
    uint64_t v149 = *(void *)(v140 + 16);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v149;
    sub_146610();
    swift_bridgeObjectRelease();
    *(_WORD *)(v147 + 22) = 2048;
    uint64_t v150 = *(void *)(v129 + 16);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v150;
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v144, v145, "Creating streaks from %ld created, %ld updated, %ld event dates", (uint8_t *)v147, 0x20u);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v151 = v242;
  uint64_t v152 = v228;
  char v153 = v210;
  [v236 reset];
  uint64_t v154 = *((void *)v207 + 2);
  if (v154)
  {
    char v155 = v208;
    uint64_t v236 = &v207[(v155[80] + 32) & ~(unint64_t)v155[80]];
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v157 = (void (*)(char *, uint64_t, uint64_t))*((void *)v155 + 2);
    v155 += 16;
    id v156 = v157;
    *(void *)&long long v209 = *((void *)v155 + 7);
    BOOL v158 = (unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 32);
    id v216 = (objc_class *)(v155 + 16);
    *(void *)&long long v215 = v155 - 8;
    v227 = v155;
    uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 32);
    unint64_t v218 = (void (*)(char *, char *, uint64_t))v157;
    v157(v152, (uint64_t)v236, v151);
    while (1)
    {
      v153((uint64_t)v152, 0, 1, v151);
      uint64_t v166 = *v158;
      if ((*v158)(v152, 1, v151) == 1) {
        break;
      }
      *(void *)&long long v214 = v154;
      uint64_t v167 = (uint64_t)v238;
      uint64_t v235 = *(unsigned int (**)(char *, char *, uint64_t))v216;
      v235(v238, v152, v151);
      char v168 = v239;
      uint64_t v169 = v229;
      sub_101FF8(v167, v212, v239, v229);
      sub_102EE8(v167, v211, (uint64_t)v168, v169);
      uint64_t v170 = v221;
      sub_12428((uint64_t)v232, v221, &qword_19C150);
      int v171 = v219;
      v156(v219, v167, v151);
      *(void *)&long long v213 = v166;
      if (v166((char *)v170, 1, v151) == 1)
      {
        uint64_t v172 = v171;
        uint64_t v173 = (uint64_t)v225;
        v235(v225, v172, v151);
        sub_1248C(v170, &qword_19C150);
      }
      else
      {
        (*(void (**)(char *, uint64_t))v215)(v171, v151);
        uint64_t v173 = (uint64_t)v225;
        v235(v225, (char *)v170, v151);
      }
      char v153 = v210;
      v210(v173, 0, 1, v151);
      uint64_t v174 = (uint64_t)v232;
      sub_121E0(v173, (uint64_t)v232, &qword_19C150);
      uint64_t v175 = v240;
      uint64_t v176 = v174 + *(int *)(v240 + 20);
      sub_1248C(v176, &qword_19C150);
      char v177 = v238;
      unint64_t v178 = v218;
      v218((char *)v176, v238, v242);
      v153(v176, 0, 1, v242);
      uint64_t v179 = (uint64_t)v231;
      sub_1453D0();
      uint64_t v180 = *(int *)(v175 + 24);
      uint64_t v151 = v242;
      sub_121E0(v179, v174 + v180, &qword_19C150);
      uint64_t v181 = v222;
      sub_12428(v230, v222, &qword_19C150);
      v182 = v220;
      v178(v220, v177, v151);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v181, 1, v151) == 1)
      {
        uint64_t v159 = v182;
        uint64_t v160 = (uint64_t)v226;
        v235(v226, v159, v151);
        sub_1248C(v181, &qword_19C150);
      }
      else
      {
        (*(void (**)(char *, uint64_t))v215)(v182, v151);
        uint64_t v160 = (uint64_t)v226;
        v235(v226, (char *)v181, v151);
      }
      v153(v160, 0, 1, v151);
      uint64_t v161 = v230;
      sub_121E0(v160, v230, &qword_19C150);
      uint64_t v162 = v161 + *(int *)(v240 + 20);
      sub_1248C(v162, &qword_19C150);
      v163 = v238;
      unint64_t v164 = (void (*)(char *, uint64_t, uint64_t))v218;
      v218((char *)v162, v238, v151);
      v153(v162, 0, 1, v151);
      uint64_t v165 = (uint64_t)v231;
      sub_1453D0();
      (*(void (**)(char *, uint64_t))v215)(v163, v151);
      sub_121E0(v165, v161 + *(int *)(v240 + 24), &qword_19C150);
      id v156 = v164;
      v236 += v209;
      uint64_t v154 = v214 - 1;
      uint64_t v152 = v228;
      BOOL v158 = v217;
      if ((void)v214 == 1) {
        goto LABEL_54;
      }
      v156(v228, (uint64_t)v236, v151);
    }
  }
  else
  {
LABEL_54:
    v153((uint64_t)v152, 1, 1, v151);
  }
  swift_release();
  uint64_t v183 = (uint64_t)v200;
  sub_145120();
  v184 = v239;
  uint64_t v185 = v229;
  sub_101FF8(v183, v212, v239, v229);
  uint64_t v186 = (void (*)(uint64_t, uint64_t))*((void *)v208 + 1);
  v186(v183, v151);
  sub_145120();
  sub_102EE8(v183, v211, (uint64_t)v184, v185);
  v186(v183, v151);
  uint64_t v187 = v201;
  swift_beginAccess();
  uint64_t v188 = (uint64_t)v203;
  sub_106078(v187, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v189 = (uint64_t)v237;
  LOBYTE(v186) = sub_111F28((uint64_t)v237);
  sub_1065D0(v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v190 = (int *)v202;
  if ((v186 & 1) == 0)
  {
    swift_beginAccess();
    sub_106078(v187, v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_3BDF4(v188, v187 + v190[6]);
    sub_1065D0(v187, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    v153(v187, 1, 1, v151);
    uint64_t v191 = v240;
    v153(v187 + *(int *)(v240 + 20), 1, 1, v151);
    v153(v187 + *(int *)(v191 + 24), 1, 1, v151);
    *(void *)(v187 + *(int *)(v191 + 28)) = 0;
  }
  swift_beginAccess();
  sub_106078(v187 + v190[5], v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  char v192 = sub_111F28(v189);

  sub_1065D0(v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  if ((v192 & 1) == 0)
  {
    swift_beginAccess();
    sub_106078(v187 + v190[5], v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_3BDF4(v188, v187 + v190[7]);
    uint64_t v193 = v187 + v190[5];
    sub_1065D0(v193, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    v153(v193, 1, 1, v151);
    uint64_t v194 = v240;
    v153(v193 + *(int *)(v240 + 20), 1, 1, v151);
    v153(v193 + *(int *)(v194 + 24), 1, 1, v151);
    *(void *)(v193 + *(int *)(v194 + 28)) = 0;
  }
  swift_release();
  swift_release();
}

void sub_101E00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = sub_A314(&qword_19C150);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12428(a1, (uint64_t)v10, &qword_19C150);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    Class isa = sub_145180().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, isa);
}

uint64_t sub_101F34@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1451E0();

    uint64_t v6 = sub_145230();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_145230();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t sub_101FF8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v120 = a1;
  uint64_t v121 = a4;
  uint64_t v114 = a3;
  uint64_t v4 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145170();
  uint64_t v105 = *(void *)(v7 - 8);
  uint64_t v106 = v7;
  __chkstk_darwin(v7);
  uint64_t v104 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_144C60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v112 = v9;
  uint64_t v113 = v10;
  __chkstk_darwin(v9);
  uint64_t v115 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(&qword_19C150);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v117 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v96 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v20 = sub_145230();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v110 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v111 = (char *)&v96 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v107 = (char *)&v96 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v116 = (char *)&v96 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v118 = (char *)&v96 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v96 - v32;
  uint64_t v34 = swift_projectBox();
  uint64_t v109 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v108 = swift_projectBox();
  swift_beginAccess();
  int v119 = (int *)v4;
  uint64_t v35 = *(int *)(v4 + 24);
  uint64_t v121 = v34;
  sub_12428(v34 + v35, (uint64_t)v19, &qword_19C150);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1) {
    return sub_1248C((uint64_t)v19, &qword_19C150);
  }
  unint64_t v103 = v6;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v38(v33, v19, v20);
  uint64_t v39 = v20;
  if ((sub_1451A0() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v33, v20);
  }
  uint64_t v120 = v21;
  uint64_t v40 = v121;
  swift_beginAccess();
  sub_12428(v40, (uint64_t)v17, &qword_19C150);
  unsigned int v41 = v36(v17, 1, v39);
  id v102 = v33;
  if (v41 == 1)
  {
    sub_1248C((uint64_t)v17, &qword_19C150);
    uint64_t v42 = (uint64_t)v103;
    uint64_t v43 = v119;
    uint64_t v44 = v120;
LABEL_21:
    uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v92(v42, 1, 1, v39);
    v92(v42 + v43[5], 1, 1, v39);
    v92(v42 + v43[6], 1, 1, v39);
    *(void *)(v42 + v43[7]) = 0;
    swift_beginAccess();
    sub_3BDF4(v42, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v102, v39);
  }
  unint64_t v45 = v118;
  v38(v118, v17, v39);
  swift_beginAccess();
  uint64_t v43 = v119;
  uint64_t v46 = v117;
  sub_12428(v40 + v119[5], v117, &qword_19C150);
  if (v36((char *)v46, 1, v39) == 1)
  {
    uint64_t v44 = v120;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v45, v39);
    sub_1248C(v46, &qword_19C150);
    uint64_t v42 = (uint64_t)v103;
    goto LABEL_21;
  }
  uint64_t v47 = v116;
  v38(v116, (char *)v46, v39);
  sub_A314(&qword_1A2280);
  uint64_t v48 = sub_145430();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = v45;
  uint64_t v51 = *(void *)(v49 + 72);
  uint64_t v52 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v117 = v39;
  uint64_t v53 = (v52 + 32) & ~v52;
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1598D0;
  uint64_t v55 = v54 + v53;
  uint64_t v56 = *(void (**)(uint64_t, void, uint64_t))(v49 + 104);
  v56(v55, enum case for Calendar.Component.day(_:), v48);
  v56(v55 + v51, enum case for Calendar.Component.second(_:), v48);
  Class v57 = (char *)sub_26B0C(v54);
  swift_setDeallocating();
  uint64_t v58 = v47;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v59 = v115;
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_144BE0();
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    uint64_t v89 = *(void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v39 = v117;
    v89(v47, v117);
    v89(v50, v39);
    uint64_t v42 = (uint64_t)v103;
LABEL_20:
    uint64_t v40 = v121;
    goto LABEL_21;
  }
  uint64_t v62 = v60;
  uint64_t v63 = v117;
  uint64_t v64 = sub_144C30();
  uint64_t v42 = (uint64_t)v103;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    int64_t v90 = *(void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v91 = v58;
    uint64_t v39 = v63;
    v90(v91, v63);
LABEL_19:
    v90(v118, v63);
    goto LABEL_20;
  }
  BOOL v66 = v64 != 0;
  BOOL v67 = __OFADD__(v62, v66);
  uint64_t v68 = v62 + v66;
  if (v67)
  {
    __break(1u);
    goto LABEL_27;
  }
  Class v57 = v111;
  if (v68 < 2)
  {
    uint64_t v39 = v63;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    int64_t v90 = *(void (**)(char *, uint64_t))(v120 + 8);
    v90(v116, v63);
    goto LABEL_19;
  }
  uint64_t v101 = v68;
  if (qword_19B030 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v69 = sub_145760();
  sub_C584(v69, (uint64_t)qword_1A2410);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  char v71 = v107;
  uint64_t v72 = v63;
  v70(v107, v118, v63);
  v70(v57, v116, v63);
  id v73 = v110;
  v70(v110, v102, v72);
  NSDate v74 = sub_145740();
  os_log_type_t v75 = sub_146210();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v77 = swift_slowAlloc();
    int v98 = v76;
    uint64_t v78 = v77;
    uint64_t v99 = swift_slowAlloc();
    v122[0] = v99;
    *(_DWORD *)uint64_t v78 = 134218754;
    uint64_t v123 = v101;
    sub_146610();
    *(_WORD *)(v78 + 12) = 2080;
    uint64_t v114 = (void (*)(char *, uint64_t))(v78 + 14);
    uint64_t v79 = v104;
    sub_144980();
    uint64_t v100 = sub_10FD9C((unint64_t *)&qword_19BE58, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v80 = v106;
    os_log_t v97 = v74;
    sub_145210();
    uint64_t v105 = *(void *)(v105 + 8);
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_3D2B4(v123, v124, v122);
    sub_146610();
    swift_bridgeObjectRelease();
    uint64_t v114 = *(void (**)(char *, uint64_t))(v120 + 8);
    v114(v71, v72);
    *(_WORD *)(v78 + 22) = 2080;
    uint64_t v107 = (char *)(v78 + 24);
    sub_144980();
    uint64_t v81 = v111;
    sub_145210();
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_3D2B4(v123, v124, v122);
    sub_146610();
    swift_bridgeObjectRelease();
    v114(v81, v72);
    *(_WORD *)(v78 + 32) = 2080;
    uint64_t v111 = (char *)(v78 + 34);
    sub_144980();
    Class v82 = v110;
    sub_145210();
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_3D2B4(v123, v124, v122);
    sub_146610();
    uint64_t v83 = v101;
    swift_bridgeObjectRelease();
    unint64_t v84 = v114;
    v114(v82, v72);
    os_log_t v85 = v97;
    _os_log_impl(&def_94138, v97, (os_log_type_t)v98, "Ending %ld day streak from %s to %s after %s", (uint8_t *)v78, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
    v84(v116, v72);
    v84(v118, v72);
    uint64_t v43 = v119;
    uint64_t v86 = v121;
    uint64_t v88 = v108;
    uint64_t v87 = v109;
  }
  else
  {

    Class v93 = *(void (**)(char *, uint64_t))(v120 + 8);
    v93(v73, v72);
    v93(v57, v72);
    v93(v71, v72);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
    v93(v116, v72);
    uint64_t v114 = v93;
    v93(v118, v72);
    uint64_t v86 = v121;
    uint64_t v88 = v108;
    uint64_t v87 = v109;
    uint64_t v83 = v101;
  }
  swift_beginAccess();
  *(void *)(v86 + v43[7]) = v83;
  swift_beginAccess();
  sub_106078(v88, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_3BDF4(v42, v88 + *(int *)(v87 + 24));
  swift_beginAccess();
  sub_106078(v86, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_3BDF4(v42, v88);
  swift_beginAccess();
  uint64_t v94 = *(void *)(v86 + v43[7]);
  swift_beginAccess();
  if (v94 >= *(void *)(v88 + *(int *)(v87 + 32) + v43[7]))
  {
    swift_beginAccess();
    sub_106078(v86, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_3BDF4(v42, v88 + *(int *)(v87 + 32));
  }
  unint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56);
  v95(v42, 1, 1, v72);
  v95(v42 + v43[5], 1, 1, v72);
  v95(v42 + v43[6], 1, 1, v72);
  *(void *)(v42 + v43[7]) = 0;
  swift_beginAccess();
  sub_3BDF4(v42, v86);
  return ((uint64_t (*)(char *, uint64_t))v114)(v102, v72);
}

uint64_t sub_102EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = a1;
  uint64_t v123 = a4;
  uint64_t v116 = a3;
  uint64_t v4 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145170();
  uint64_t v107 = *(void *)(v7 - 8);
  uint64_t v108 = v7;
  __chkstk_darwin(v7);
  uint64_t v106 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_144C60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  uint64_t v115 = v10;
  __chkstk_darwin(v9);
  uint64_t v117 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(&qword_19C150);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v119 = (uint64_t)v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v99 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v99 - v18;
  uint64_t v20 = sub_145230();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v113 = (char *)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v112 = (char *)v99 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v111 = (char *)v99 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v118 = (char *)v99 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v120 = (char *)v99 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)v99 - v32;
  uint64_t v34 = swift_projectBox();
  uint64_t v110 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v109 = swift_projectBox();
  swift_beginAccess();
  uint64_t v121 = (int *)v4;
  uint64_t v35 = *(int *)(v4 + 24);
  uint64_t v123 = v34;
  sub_12428(v34 + v35, (uint64_t)v19, &qword_19C150);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1) {
    return sub_1248C((uint64_t)v19, &qword_19C150);
  }
  uint64_t v105 = v6;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v38(v33, v19, v20);
  uint64_t v39 = v20;
  if ((sub_1451A0() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v33, v20);
  }
  uint64_t v122 = v21;
  uint64_t v40 = v123;
  swift_beginAccess();
  sub_12428(v40, (uint64_t)v17, &qword_19C150);
  unsigned int v41 = v36(v17, 1, v39);
  uint64_t v104 = v33;
  if (v41 == 1)
  {
    sub_1248C((uint64_t)v17, &qword_19C150);
    uint64_t v42 = (uint64_t)v105;
    uint64_t v44 = v121;
    uint64_t v43 = v122;
LABEL_19:
    Class v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    v93(v42, 1, 1, v39);
    v93(v42 + v44[5], 1, 1, v39);
    v93(v42 + v44[6], 1, 1, v39);
    *(void *)(v42 + v44[7]) = 0;
    swift_beginAccess();
    sub_3BDF4(v42, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v104, v39);
  }
  unint64_t v45 = v120;
  v38(v120, v17, v39);
  swift_beginAccess();
  uint64_t v44 = v121;
  uint64_t v46 = v119;
  sub_12428(v40 + v121[5], v119, &qword_19C150);
  if (v36((char *)v46, 1, v39) == 1)
  {
    uint64_t v43 = v122;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v45, v39);
    sub_1248C(v46, &qword_19C150);
    uint64_t v42 = (uint64_t)v105;
    goto LABEL_19;
  }
  uint64_t v47 = v118;
  v38(v118, (char *)v46, v39);
  sub_A314(&qword_1A2280);
  uint64_t v48 = sub_145430();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void *)(v49 + 72);
  unint64_t v51 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1598D0;
  unint64_t v53 = v52 + v51;
  uint64_t v54 = v39;
  uint64_t v55 = *(void (**)(unint64_t, void, uint64_t))(v49 + 104);
  v55(v53, enum case for Calendar.Component.weekOfYear(_:), v48);
  unint64_t v56 = v53 + v50;
  Class v57 = v120;
  v55(v56, enum case for Calendar.Component.second(_:), v48);
  uint64_t v58 = (char *)sub_26B0C(v52);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v59 = v117;
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_144BC0();
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    int64_t v90 = *(void (**)(char *, uint64_t))(v122 + 8);
    v90(v47, v54);
    v90(v57, v54);
    uint64_t v39 = v54;
    uint64_t v42 = (uint64_t)v105;
    uint64_t v40 = v123;
    goto LABEL_19;
  }
  uint64_t v62 = v60;
  uint64_t v103 = v54;
  uint64_t v63 = sub_144C30();
  uint64_t v42 = (uint64_t)v105;
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    uint64_t v91 = *(void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v39 = v103;
    v91(v47, v103);
    v91(v120, v39);
    uint64_t v40 = v123;
    goto LABEL_19;
  }
  BOOL v65 = v63 != 0;
  BOOL v66 = __OFADD__(v62, v65);
  uint64_t v67 = v62 + v65;
  uint64_t v39 = v103;
  uint64_t v40 = v123;
  if (v66)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v58 = v112;
  Class v57 = v113;
  if (v67 < 2)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    uint64_t v92 = *(void (**)(char *, uint64_t))(v122 + 8);
    v92(v118, v39);
    v92(v120, v39);
    goto LABEL_19;
  }
  uint64_t v119 = v67;
  if (qword_19B030 != -1) {
    goto LABEL_25;
  }
LABEL_14:
  uint64_t v68 = sub_145760();
  sub_C584(v68, (uint64_t)qword_1A2410);
  uint64_t v69 = v122;
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
  v70(v111, v120, v39);
  v70(v58, v118, v39);
  v70(v57, v104, v39);
  char v71 = sub_145740();
  os_log_type_t v72 = sub_146210();
  int v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v74 = swift_slowAlloc();
    int v101 = v73;
    uint64_t v75 = v74;
    uint64_t v102 = swift_slowAlloc();
    v124[0] = v102;
    *(_DWORD *)uint64_t v75 = 134218754;
    uint64_t v125 = v119;
    sub_146610();
    *(_WORD *)(v75 + 12) = 2080;
    v99[1] = v75 + 14;
    int v76 = v106;
    sub_144980();
    uint64_t v116 = sub_10FD9C((unint64_t *)&qword_19BE58, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v77 = v108;
    os_log_t v100 = v71;
    uint64_t v78 = v111;
    sub_145210();
    uint64_t v107 = *(void *)(v107 + 8);
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_3D2B4(v125, v126, v124);
    sub_146610();
    swift_bridgeObjectRelease();
    uint64_t v79 = *(void (**)(char *, uint64_t))(v69 + 8);
    v79(v78, v39);
    *(_WORD *)(v75 + 22) = 2080;
    uint64_t v111 = (char *)(v75 + 24);
    sub_144980();
    uint64_t v80 = v112;
    sub_145210();
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_3D2B4(v125, v126, v124);
    sub_146610();
    swift_bridgeObjectRelease();
    v79(v80, v103);
    *(_WORD *)(v75 + 32) = 2080;
    uint64_t v112 = (char *)(v75 + 34);
    sub_144980();
    uint64_t v81 = v113;
    sub_145210();
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_3D2B4(v125, v126, v124);
    sub_146610();
    uint64_t v82 = v119;
    swift_bridgeObjectRelease();
    uint64_t v83 = v81;
    uint64_t v84 = v103;
    v79(v83, v103);
    os_log_t v85 = v100;
    _os_log_impl(&def_94138, v100, (os_log_type_t)v101, "Ending %ld week streak from %s to %s after %s", (uint8_t *)v75, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
    v79(v118, v84);
    uint64_t v86 = v84;
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v79;
    v79(v120, v86);
    uint64_t v44 = v121;
    uint64_t v89 = v109;
    uint64_t v88 = (int *)v110;
  }
  else
  {

    uint64_t v94 = *(void (**)(char *, uint64_t))(v69 + 8);
    v94(v57, v39);
    v94(v58, v39);
    v94(v111, v39);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
    v94(v118, v39);
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v94;
    v94(v120, v39);
    uint64_t v89 = v109;
    uint64_t v88 = (int *)v110;
    uint64_t v82 = v119;
  }
  uint64_t v95 = v123;
  swift_beginAccess();
  *(void *)(v95 + v44[7]) = v82;
  swift_beginAccess();
  sub_106078(v89 + v88[5], v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_3BDF4(v42, v89 + v88[7]);
  swift_beginAccess();
  sub_106078(v95, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_3BDF4(v42, v89 + v88[5]);
  swift_beginAccess();
  uint64_t v96 = *(void *)(v95 + v44[7]);
  swift_beginAccess();
  if (v96 >= *(void *)(v89 + v88[9] + v44[7]))
  {
    swift_beginAccess();
    sub_106078(v95, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_3BDF4(v42, v89 + v88[9]);
  }
  os_log_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
  uint64_t v98 = v103;
  v97(v42, 1, 1, v103);
  v97(v42 + v44[5], 1, 1, v98);
  v97(v42 + v44[6], 1, 1, v98);
  *(void *)(v42 + v44[7]) = 0;
  swift_beginAccess();
  sub_3BDF4(v42, v95);
  return v87(v104, v98);
}

uint64_t sub_103DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_A314(&qword_1A24A0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v5 + 56));
  sub_12428(a1, (uint64_t)&v19 - v9, &qword_19C930);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = v11[2];
  uint64_t v15 = v11[3];
  uint64_t v16 = &v8[*(int *)(v5 + 56)];
  sub_2E4D0((uint64_t)v10, (uint64_t)v8, &qword_19C930);
  *(void *)uint64_t v16 = v12;
  *((void *)v16 + 1) = v13;
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = v15;
  uint64_t v17 = sub_145230();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a2, v8, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1248C((uint64_t)v8, &qword_1A24A0);
}

void sub_103F4C(uint64_t a1, void *a2)
{
  uint64_t v181 = a1;
  id v180 = a2;
  uint64_t v2 = sub_A314(&qword_19C498);
  __chkstk_darwin(v2 - 8);
  uint64_t v172 = (char *)v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v159 = *(void *)(v171 - 8);
  uint64_t v4 = __chkstk_darwin(v171);
  uint64_t v173 = (uint64_t)v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v150 - v6;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_145B80();
  id v10 = [v8 initWithEntityName:v9];

  sub_C84C(0, (unint64_t *)&qword_19C2E8);
  sub_A314(&qword_1A0A00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1578B0;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_1CEB8();
  *(void *)(v11 + 32) = 0xD000000000000012;
  *(void *)(v11 + 40) = 0x8000000000151BD0;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = 0xD000000000000018;
  *(void *)(v11 + 80) = 0x8000000000151BF0;
  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v12;
  *(void *)(v11 + 112) = 0x7079547465737361;
  *(void *)(v11 + 120) = 0xE900000000000065;
  *(void *)(v11 + 176) = sub_A314(&qword_19C708);
  *(void *)(v11 + 184) = sub_122D8(&qword_1A2500, &qword_19C708);
  *(void *)(v11 + 152) = &off_184CE0;
  uint64_t v13 = (void *)sub_146160();
  [v10 setPredicate:v13];

  [v10 setFetchBatchSize:200];
  sub_A314(&qword_19C570);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1598D0;
  *(void *)(v14 + 32) = 0x7079547465737361;
  *(void *)(v14 + 40) = 0xE900000000000065;
  *(void *)(v14 + 88) = &type metadata for String;
  *(void *)(v14 + 56) = &type metadata for String;
  strcpy((char *)(v14 + 64), "assetMetaData");
  *(_WORD *)(v14 + 78) = -4864;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v10 setPropertiesToFetch:isa];

  type metadata accessor for JournalEntryAssetMO();
  uint64_t v16 = v182;
  unint64_t v17 = sub_1463F0();
  uint64_t v19 = (uint64_t)v16;
  if (v16)
  {

    return;
  }
  unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)v180;
  id v151 = v10;
  uint64_t v157 = v7;
  unint64_t v165 = v17;
  if (v17 >> 62) {
    goto LABEL_136;
  }
  uint64_t v21 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
LABEL_5:
  uint64_t v23 = v171;
  uint64_t v22 = (uint64_t)v172;
  uint64_t v24 = v173;
  if (!v21)
  {

    swift_bridgeObjectRelease();
    uint64_t v149 = 0;
    uint64_t v147 = 0;
    uint64_t v148 = 0;
    uint64_t v146 = 0;
    goto LABEL_131;
  }
  unint64_t v25 = isUniquelyReferenced_nonNull_native;
  uint64_t v154 = 0;
  uint64_t v153 = 0;
  id v156 = 0;
  uint64_t v155 = 0;
  uint64_t v174 = 0;
  uint64_t v175 = 0;
  uint64_t v176 = 0;
  char v177 = 0;
  unint64_t isUniquelyReferenced_nonNull_native = 0;
  unint64_t v178 = (unint64_t *)(v25 + 16);
  unint64_t v167 = v165 & 0xC000000000000001;
  uint64_t v162 = v165 & 0xFFFFFFFFFFFFFF8;
  unint64_t v161 = v165 + 32;
  BOOL v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
  uint64_t v152 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
  *(void *)&long long v18 = 136315394;
  long long v160 = v18;
  v150[1] = (char *)&type metadata for Any + 8;
  uint64_t v166 = v21;
  while (1)
  {
    if (v167)
    {
      id v26 = (id)sub_146810();
    }
    else
    {
      if (isUniquelyReferenced_nonNull_native >= *(void *)(v162 + 16)) {
        goto LABEL_135;
      }
      id v26 = *(id *)(v161 + 8 * isUniquelyReferenced_nonNull_native);
    }
    id v27 = v26;
    BOOL v28 = __OFADD__(isUniquelyReferenced_nonNull_native++, 1);
    if (v28)
    {
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_146930();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    id v29 = [v26 assetType];
    if (v29)
    {
      uint64_t v30 = v29;
      sub_145BC0();
    }
    int v31 = sub_B938();
    if (v31 == 21) {
      goto LABEL_8;
    }
    unint64_t v179 = isUniquelyReferenced_nonNull_native;
    id v180 = v27;
    if (v31 == 8)
    {
      id v56 = [v27 assetMetaData];
      if (v56)
      {
        Class v57 = v56;
        uint64_t v58 = sub_144FA0();
        unint64_t v60 = v59;

        char v61 = (double *)sub_33E7C();
        sub_C52C(v58, v60);
        if (v61 != (double *)((char *)&def_94138 + 1))
        {
          if (!v61) {
            char v61 = _swiftEmptyArrayStorage;
          }
          uint64_t v170 = (char *)*((void *)v61 + 2);
          if (!v170)
          {
LABEL_121:

            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
          uint64_t v62 = 0;
          unint64_t v63 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
          v150[2] = v61;
          uint64_t v169 = (char *)v61 + v63;
          uint64_t v168 = *(void *)(v159 + 72);
          while (2)
          {
            v182 = v62;
            sub_106078((uint64_t)&v169[v168 * (void)v62], v24, _s10VisitAssetC9VisitDataVMa);
            uint64_t v64 = *(void *)(v24 + 32);
            uint64_t v65 = *(void *)(v24 + 40);
            BOOL v66 = (uint64_t *)(v24 + *(int *)(v23 + 52));
            unint64_t v67 = v66[1];
            if (v67 >> 60 == 15)
            {
              swift_bridgeObjectRetain();
              uint64_t v68 = 0;
            }
            else
            {
              uint64_t v181 = *(void *)(v24 + 32);
              uint64_t v69 = *v66;
              sub_C84C(0, &qword_19C718);
              sub_C84C(0, (unint64_t *)&unk_19D010);
              swift_bridgeObjectRetain();
              sub_27BC0(v69, v67);
              uint64_t v70 = sub_146290();
              if (v19)
              {
                if (qword_19B008 != -1) {
                  swift_once();
                }
                uint64_t v71 = sub_145760();
                sub_C584(v71, (uint64_t)qword_1A1EE8);
                swift_errorRetain();
                swift_errorRetain();
                os_log_type_t v72 = sub_145740();
                os_log_type_t v73 = sub_1461F0();
                if (os_log_type_enabled(v72, v73))
                {
                  uint64_t v74 = swift_slowAlloc();
                  uint64_t v75 = (void *)swift_slowAlloc();
                  uint64_t v76 = swift_slowAlloc();
                  uint64_t v164 = v65;
                  uint64_t v183 = v76;
                  *(_DWORD *)uint64_t v74 = v160;
                  uint64_t v77 = sub_146D70();
                  *(void *)(v74 + 4) = sub_3D2B4(v77, v78, &v183);
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v74 + 12) = 2112;
                  swift_errorRetain();
                  uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
                  *(void *)(v74 + 14) = v79;
                  *uint64_t v75 = v79;
                  swift_errorRelease();
                  swift_errorRelease();
                  _os_log_impl(&def_94138, v72, v73, "Error converting Data to %s: %@", (uint8_t *)v74, 0x16u);
                  sub_A314(&qword_19B200);
                  swift_arrayDestroy();
                  uint64_t v23 = v171;
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  uint64_t v65 = v164;
                  swift_slowDealloc();
                  uint64_t v24 = v173;
                  swift_slowDealloc();

                  swift_errorRelease();
                }
                else
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_errorRelease();
                }
                sub_120B4(v69, v67);
                uint64_t v68 = 0;
                uint64_t v19 = 0;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
              }
              else
              {
                uint64_t v68 = (void *)v70;
                sub_120B4(v69, v67);
              }
              id v27 = v180;
              uint64_t v64 = v181;
            }
            id v80 = [v68 pointOfInterestCategory];

            if (v65)
            {
              uint64_t v181 = v19;
              if (v64 == 1701670728 && v65 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
              {
                if (qword_19AFB8 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_1A0A58;

                swift_bridgeObjectRelease();
                id v80 = 0;
                goto LABEL_53;
              }
              if (v64 == 1802661719 && v65 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
              {
                if (qword_19AFC0 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_1A0A60;

                swift_bridgeObjectRelease();
                id v80 = &def_94138 + 1;
                goto LABEL_53;
              }
              if (v64 == 0x6C6F6F686353 && v65 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
              {
                if (qword_19AFC8 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_1A0A68;

                swift_bridgeObjectRelease();
                id v80 = &def_94138 + 2;
                goto LABEL_53;
              }
              if (v64 == 7174471 && v65 == 0xE300000000000000 || (sub_146B90() & 1) != 0)
              {
                if (qword_19AFD0 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_1A0A70;

                swift_bridgeObjectRelease();
                id v80 = &def_94138 + 3;
LABEL_53:
                uint64_t v82 = (uint64_t)v177;
                uint64_t v83 = (uint64_t)v175;
LABEL_54:
                uint64_t v84 = swift_allocObject();
                *(void *)(v84 + 16) = v81;
                sub_BE044(v80);
                id v85 = v81;
                sub_278A8(v83);
                id v86 = [v27 objectID];
                uint64_t v19 = (uint64_t)v178;
                swift_beginAccess();
                uint64_t v87 = swift_allocObject();
                *(void *)(v87 + 16) = sub_110CC0;
                *(void *)(v87 + 24) = v84;
                sub_278A8(v82);
                unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v184 = *(void **)v19;
                uint64_t v88 = v184;
                *(void *)uint64_t v19 = 0x8000000000000000;
                unint64_t v90 = sub_137E80(v80);
                uint64_t v91 = v88[2];
                BOOL v92 = (v89 & 1) == 0;
                uint64_t v93 = v91 + v92;
                if (__OFADD__(v91, v92)) {
                  goto LABEL_133;
                }
                uint64_t v19 = v89;
                if (v88[3] >= v93)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_13E510();
                    uint64_t v88 = v184;
                  }
                }
                else
                {
                  sub_13BD68(v93, isUniquelyReferenced_nonNull_native);
                  uint64_t v88 = v184;
                  unint64_t v94 = sub_137E80(v80);
                  if ((v19 & 1) != (v95 & 1)) {
                    goto LABEL_139;
                  }
                  unint64_t v90 = v94;
                }
                uint64_t v96 = v178;
                *unint64_t v178 = (unint64_t)v88;
                swift_bridgeObjectRelease();
                unint64_t isUniquelyReferenced_nonNull_native = *v96;
                uint64_t v97 = swift_bridgeObjectRetain();
                if ((v19 & 1) == 0)
                {
                  uint64_t v98 = (*(uint64_t (**)(uint64_t))(v87 + 16))(v97);
                  *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v90 >> 6) + 64) |= 1 << v90;
                  *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v90) = v80;
                  uint64_t v99 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v90);
                  uint64_t *v99 = v98;
                  v99[1] = v100;
                  uint64_t v101 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
                  BOOL v28 = __OFADD__(v101, 1);
                  uint64_t v102 = v101 + 1;
                  if (v28) {
                    goto LABEL_134;
                  }
                  *(void *)(isUniquelyReferenced_nonNull_native + 16) = v102;
                  sub_BE044(v80);
                }
                swift_bridgeObjectRelease();
                sub_EB484(&v184, v86);
                swift_endAccess();

                sub_BDF04(v80);
                sub_BDF04(v80);

                uint64_t v24 = v173;
                sub_1065D0(v173, _s10VisitAssetC9VisitDataVMa);
                uint64_t v176 = v87;
                char v177 = sub_10F630;
                uint64_t v174 = v84;
                uint64_t v175 = sub_110CC0;
                uint64_t v23 = v171;
                uint64_t v22 = (uint64_t)v172;
                id v27 = v180;
                uint64_t v19 = v181;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
LABEL_34:
                uint64_t v62 = v182 + 1;
                if (v182 + 1 == v170) {
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (v80)
          {
            uint64_t v181 = v19;
            uint64_t v103 = qword_19AFB0;
            id v104 = v80;
            if (v103 != -1) {
              swift_once();
            }
            uint64_t v105 = off_1A0A50[0];
            if (*(void *)((char *)off_1A0A50[0] + (unint64_t)&dword_10))
            {
              id v163 = v104;
              sub_145BC0();
              sub_146C80();
              sub_145C70();
              Swift::Int v106 = sub_146CD0();
              swift_bridgeObjectRelease();
              uint64_t v107 = -1 << *((unsigned char *)&stru_20.cmd + (void)v105);
              unint64_t v108 = v106 & ~v107;
              if (((*(void *)((char *)v105 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v108) & 1) == 0) {
                goto LABEL_102;
              }
              uint64_t v109 = sub_145BC0();
              uint64_t v111 = v110;
              if (v109 == sub_145BC0() && v111 == v112)
              {
LABEL_103:
                uint64_t v23 = v171;
                uint64_t v24 = v173;
                swift_bridgeObjectRelease_n();
LABEL_104:
                uint64_t v19 = v181;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
                uint64_t v123 = (uint64_t *)(v24 + *(int *)(v23 + 48));
                unint64_t v124 = v123[1];
                if (v124 >> 60 == 15)
                {
                  id v125 = v163;

                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v164 = v65;
                  uint64_t v126 = *v123;
                  sub_C84C(0, (unint64_t *)&qword_19C888);
                  sub_C84C(0, (unint64_t *)&unk_19D010);
                  sub_27BC0(v126, v124);
                  uint64_t v127 = sub_146290();
                  if (v19)
                  {
                    uint64_t v181 = v126;
                    if (qword_19B008 != -1) {
                      swift_once();
                    }
                    uint64_t v128 = sub_145760();
                    sub_C584(v128, (uint64_t)qword_1A1EE8);
                    swift_errorRetain();
                    swift_errorRetain();
                    uint64_t v129 = sub_145740();
                    os_log_type_t v130 = sub_1461F0();
                    if (os_log_type_enabled(v129, v130))
                    {
                      uint64_t v131 = swift_slowAlloc();
                      uint64_t v132 = (void *)swift_slowAlloc();
                      uint64_t v183 = swift_slowAlloc();
                      *(_DWORD *)uint64_t v131 = v160;
                      uint64_t v133 = sub_146D70();
                      *(void *)(v131 + 4) = sub_3D2B4(v133, v134, &v183);
                      uint64_t v23 = v171;
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v131 + 12) = 2112;
                      swift_errorRetain();
                      uint64_t v135 = _swift_stdlib_bridgeErrorToNSError();
                      *(void *)(v131 + 14) = v135;
                      *uint64_t v132 = v135;
                      swift_errorRelease();
                      swift_errorRelease();
                      _os_log_impl(&def_94138, v129, v130, "Error converting Data to %s: %@", (uint8_t *)v131, 0x16u);
                      sub_A314(&qword_19B200);
                      swift_arrayDestroy();
                      uint64_t v24 = v173;
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      swift_errorRelease();
                    }
                    else
                    {
                      swift_errorRelease();
                      swift_errorRelease();
                      swift_errorRelease();
                    }
                    sub_120B4(v181, v124);
                    id v136 = v163;

                    swift_bridgeObjectRelease();
                    uint64_t v22 = (uint64_t)v172;
                    unint64_t isUniquelyReferenced_nonNull_native = v179;
                    id v27 = v180;

                    uint64_t v19 = 0;
                    goto LABEL_108;
                  }
                  id v81 = (id)v127;
                  sub_120B4(v126, v124);
                  id v137 = v163;

                  swift_bridgeObjectRelease();
                  if (v81)
                  {
                    uint64_t v181 = 0;
                    uint64_t v82 = (uint64_t)v177;
                    uint64_t v83 = (uint64_t)v175;
                    id v27 = v180;
                    goto LABEL_54;
                  }
                }
                uint64_t v22 = (uint64_t)v172;
                goto LABEL_107;
              }
              char v114 = sub_146B90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v114)
              {
LABEL_91:
                uint64_t v23 = v171;
                uint64_t v24 = v173;
                goto LABEL_104;
              }
              uint64_t v115 = ~v107;
              while (1)
              {
                unint64_t v108 = (v108 + 1) & v115;
                if (((*(void *)((char *)v105 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v108) & 1) == 0) {
                  break;
                }
                uint64_t v116 = sub_145BC0();
                uint64_t v118 = v117;
                if (v116 == sub_145BC0() && v118 == v119) {
                  goto LABEL_103;
                }
                char v121 = sub_146B90();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v121) {
                  goto LABEL_91;
                }
              }
LABEL_102:
              id v122 = v163;

              swift_bridgeObjectRelease();
              uint64_t v23 = v171;
              uint64_t v22 = (uint64_t)v172;
              uint64_t v24 = v173;
              uint64_t v19 = v181;
              unint64_t isUniquelyReferenced_nonNull_native = v179;
LABEL_107:
              id v27 = v180;
            }
            else
            {

              swift_bridgeObjectRelease();
              uint64_t v22 = (uint64_t)v172;
              uint64_t v24 = v173;
              uint64_t v19 = v181;
              unint64_t isUniquelyReferenced_nonNull_native = v179;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v172;
          }
LABEL_108:
          sub_1065D0(v24, _s10VisitAssetC9VisitDataVMa);
          goto LABEL_34;
        }
      }
      goto LABEL_8;
    }
    if (v31 == 7) {
      break;
    }
LABEL_8:

LABEL_9:
    if (isUniquelyReferenced_nonNull_native == v166)
    {

      swift_bridgeObjectRelease();
      uint64_t v146 = (uint64_t)v177;
      uint64_t v147 = v156;
      uint64_t v148 = (uint64_t)v175;
      uint64_t v149 = v154;
LABEL_131:
      sub_278A8((uint64_t)v149);
      sub_278A8((uint64_t)v147);
      sub_278A8(v148);
      sub_278A8(v146);
      return;
    }
  }
  id v32 = [v27 assetMetaData];
  if (!v32)
  {
    (*v152)(v22, 1, 1, v23);
LABEL_120:

    sub_1248C(v22, &qword_19C498);
    goto LABEL_9;
  }
  uint64_t v33 = v32;
  uint64_t v34 = sub_144FA0();
  unint64_t v36 = v35;

  sub_3481C(v22);
  sub_C52C(v34, v36);
  if ((*v158)(v22, 1, v23) == 1) {
    goto LABEL_120;
  }
  uint64_t v37 = (uint64_t)v157;
  sub_1100C4(v22, (uint64_t)v157, _s10VisitAssetC9VisitDataVMa);
  uint64_t v38 = sub_BE054(v37);
  if (!v39)
  {
    sub_1065D0(v37, _s10VisitAssetC9VisitDataVMa);
    goto LABEL_8;
  }
  uint64_t v40 = (void *)v38;
  unsigned int v41 = v39;
  uint64_t v181 = v19;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  sub_BE044(v40);
  v182 = v41;
  sub_278A8((uint64_t)v154);
  id v43 = [v27 objectID];
  uint64_t v44 = (id *)v178;
  swift_beginAccess();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_10F634;
  *(void *)(v45 + 24) = v42;
  sub_278A8((uint64_t)v156);
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  v184 = *v44;
  uint64_t v47 = v184;
  id *v44 = (id)0x8000000000000000;
  unint64_t v49 = sub_137E80(v40);
  uint64_t v50 = v47[2];
  BOOL v51 = (v48 & 1) == 0;
  uint64_t v52 = v50 + v51;
  if (!__OFADD__(v50, v51))
  {
    char v53 = v48;
    if (v47[3] >= v52)
    {
      if ((v46 & 1) == 0)
      {
        sub_13E510();
        uint64_t v47 = v184;
      }
    }
    else
    {
      sub_13BD68(v52, v46);
      uint64_t v47 = v184;
      unint64_t v54 = sub_137E80(v40);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_139;
      }
      unint64_t v49 = v54;
    }
    uint64_t v138 = v178;
    *unint64_t v178 = (unint64_t)v47;
    swift_bridgeObjectRelease();
    uint64_t v139 = (void *)*v138;
    uint64_t v140 = swift_bridgeObjectRetain();
    if ((v53 & 1) == 0)
    {
      uint64_t v141 = (*(uint64_t (**)(uint64_t))(v45 + 16))(v140);
      v139[(v49 >> 6) + 8] |= 1 << v49;
      *(void *)(v139[6] + 8 * v49) = v40;
      uint64_t v142 = (uint64_t *)(v139[7] + 16 * v49);
      uint64_t *v142 = v141;
      v142[1] = v143;
      uint64_t v144 = v139[2];
      BOOL v28 = __OFADD__(v144, 1);
      uint64_t v145 = v144 + 1;
      if (v28) {
        goto LABEL_138;
      }
      v139[2] = v145;
      sub_BE044(v40);
    }
    swift_bridgeObjectRelease();
    sub_EB484(&v184, v43);
    swift_endAccess();

    sub_BDF04(v40);
    sub_BDF04(v40);

    sub_1065D0((uint64_t)v157, _s10VisitAssetC9VisitDataVMa);
    id v156 = sub_10F630;
    uint64_t v154 = sub_10F634;
    uint64_t v153 = v42;
    uint64_t v155 = v45;
    uint64_t v23 = v171;
    uint64_t v22 = (uint64_t)v172;
    uint64_t v19 = v181;
    unint64_t isUniquelyReferenced_nonNull_native = v179;
    goto LABEL_9;
  }
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_146C20();
  __break(1u);
}

id sub_1056DC(void *a1)
{
  id v1 = a1;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_146930()) {
    sub_27010((unint64_t)_swiftEmptyArrayStorage);
  }
  return v1;
}

uint64_t sub_105744@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, (uint64_t)type metadata accessor for InsightsDataManager.LastUpdate, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_106078, a2);
}

uint64_t sub_105780(uint64_t a1, uint64_t *a2)
{
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  __chkstk_darwin(Update - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_106078(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  return sub_1065D0((uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
}

uint64_t sub_1058D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v5 = sub_145450();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1059CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_145450();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_105B54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate, (uint64_t)&qword_19C150, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_12428, a2);
}

uint64_t sub_105B84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate, (uint64_t)&qword_19C150, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_12428, a2);
}

uint64_t sub_105BC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_12428(a1, (uint64_t)v6, &qword_19C150);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  return sub_1248C((uint64_t)v6, &qword_19C150);
}

uint64_t sub_105D0C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_216D4;
  return sub_F821C(a1, v5, v4);
}

uint64_t sub_105DB8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_216D4;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_F98B0, 0, 0);
}

uint64_t sub_105E6C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_216D4;
  return sub_FACB8(a1, v5, v4);
}

uint64_t sub_105F18(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_21598;
  return _swift_task_switch(sub_FB4D4, 0, 0);
}

uint64_t sub_105FC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_216D4;
  return sub_FB8E0(a1, v4, v5, v6);
}

uint64_t sub_106078(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1060E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount + 16);
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount + 24);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount);
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1061A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10629C()
{
  return sub_10BE1C(sub_115F30);
}

uint64_t sub_1062C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, (uint64_t)type metadata accessor for InsightsDataManager.EntrySummaryGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_106078, a2);
}

uint64_t sub_106304@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X5>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  swift_getKeyPath();
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v10 = v9 + *a2;
  swift_beginAccess();
  return a4(v10, a5, a3);
}

uint64_t sub_1063EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, (uint64_t)type metadata accessor for InsightsDataManager.EntrySummaryGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_106078, a2);
}

uint64_t sub_10643C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_106078(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  return sub_1065D0((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
}

uint64_t sub_106590()
{
  return sub_115FA4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1065B4()
{
  return sub_1160D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1065D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_106630@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime + 8);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime + 16);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime + 24);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime);
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_106704()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10681C()
{
  return sub_10BE1C(sub_116250);
}

uint64_t sub_106848@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10FD9C(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__places);
  return swift_bridgeObjectRetain();
}

uint64_t sub_106900()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1069E4()
{
  return sub_116384(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_106A00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  unsigned __int8 v7 = sub_10D5F8();
  if (v7 == 9) {
    goto LABEL_14;
  }
  unsigned __int8 v9 = v7;
  uint64_t v10 = v8;
  uint64_t v11 = (void *)*a5;
  unint64_t result = sub_137E14(v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v13 & 1) == 0;
  BOOL v16 = __OFADD__(v14, v15);
  uint64_t v17 = v14 + v15;
  if (v16) {
    goto LABEL_25;
  }
  char v18 = v13;
  if (v11[3] < v17)
  {
    sub_13B300(v17, a4 & 1);
    unint64_t result = sub_137E14(v9);
    if ((v18 & 1) == (v19 & 1)) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t result = sub_146C20();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    unint64_t v23 = result;
    sub_13DF20();
    unint64_t result = v23;
    uint64_t v20 = (void *)*a5;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v20 = (void *)*a5;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = (void *)(v20[7] + 8 * result);
    uint64_t v22 = *v21 + v10;
    if (!__OFADD__(*v21, v10)) {
      goto LABEL_13;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_12:
  v20[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(v20[6] + result) = v9;
  *(void *)(v20[7] + 8 * result) = v10;
  uint64_t v24 = v20[2];
  uint64_t v21 = v20 + 2;
  uint64_t v22 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
LABEL_13:
    *uint64_t v21 = v22;
    unsigned __int8 v25 = sub_10D5F8();
    if (v25 == 9)
    {
LABEL_14:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1D050();
      return swift_release();
    }
    unsigned __int8 v9 = v25;
    uint64_t v10 = v26;
    char v18 = 1;
    while (1)
    {
      int v31 = (void *)*a5;
      unint64_t result = sub_137E14(v9);
      uint64_t v33 = v31[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v16 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v16) {
        goto LABEL_25;
      }
      a4 = v32;
      if (v31[3] < v35)
      {
        sub_13B300(v35, 1);
        unint64_t result = sub_137E14(v9);
        if ((a4 & 1) != (v36 & 1)) {
          goto LABEL_5;
        }
      }
      uint64_t v37 = (void *)*a5;
      if (a4)
      {
        id v27 = (void *)(v37[7] + 8 * result);
        uint64_t v29 = *v27 + v10;
        if (__OFADD__(*v27, v10)) {
          goto LABEL_24;
        }
      }
      else
      {
        v37[(result >> 6) + 8] |= 1 << result;
        *(unsigned char *)(v37[6] + result) = v9;
        *(void *)(v37[7] + 8 * result) = v10;
        uint64_t v28 = v37[2];
        id v27 = v37 + 2;
        uint64_t v29 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          break;
        }
      }
      *id v27 = v29;
      unsigned __int8 v9 = sub_10D5F8();
      uint64_t v10 = v30;
      if (v9 == 9) {
        goto LABEL_14;
      }
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_106CC4(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

Swift::Int sub_106D88(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v4 = *(void *)(v135 - 8);
  uint64_t v5 = __chkstk_darwin(v135);
  uint64_t v125 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v136 = (uint64_t)&v120 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v132 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  uint64_t v133 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_146B30(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      return sub_108EDC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_146;
  }
  Swift::Int v121 = result;
  uint64_t v129 = v4;
  if (v12 < 2)
  {
    char v18 = _swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v120 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      uint64_t v113 = v18;
      if (v20 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_133;
          }
          if (!v114) {
            goto LABEL_145;
          }
          double v116 = v113[2 * v115 + 4];
          double v117 = v113[2 * v20 + 3];
          sub_1097AC(v114 + *(void *)(v129 + 72) * *(void *)&v116, v114 + *(void *)(v129 + 72) * *(void *)&v113[2 * v20 + 2], v114 + *(void *)(v129 + 72) * *(void *)&v117, v127);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v117 < *(uint64_t *)&v116) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_10AC48((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_135;
          }
          uint64_t v118 = &v113[2 * v115 + 4];
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v20 > v119) {
            goto LABEL_136;
          }
          memmove(&v113[2 * v20 + 2], &v113[2 * v20 + 4], 16 * (v119 - v20));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v120[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_145E30();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v120 = (double *)v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  char v18 = _swiftEmptyArrayStorage;
  uint64_t v128 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v126 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v30 = v19 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v24 = *(void *)(v129 + 72);
      uint64_t v25 = *a1 + v24 * v22;
      uint64_t v138 = v24;
      sub_106078(v25, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
      Swift::Int v137 = v12;
      uint64_t v26 = v132;
      sub_106078(v23 + v24 * v21, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v27 = *(int *)(v135 + 24);
      uint64_t v28 = v133;
      Swift::Int v134 = *(void *)(v133 + v27);
      Swift::Int v131 = *(void *)(v26 + v27);
      uint64_t v29 = v26;
      Swift::Int v12 = v137;
      sub_1065D0(v29, type metadata accessor for InsightsDataManager.TopAssetCategory);
      sub_1065D0(v28, type metadata accessor for InsightsDataManager.TopAssetCategory);
      Swift::Int v30 = v21 + 2;
      uint64_t v130 = v23;
      if (v21 + 2 < v12)
      {
        id v122 = v18;
        uint64_t v123 = v2;
        uint64_t v31 = v138 * v22;
        uint64_t v32 = v23;
        Swift::Int v33 = v138 * v30;
        while (1)
        {
          Swift::Int v34 = v30;
          uint64_t v35 = v133;
          int v36 = v131 < v134;
          sub_106078(v32 + v33, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v37 = v132;
          sub_106078(v32 + v31, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
          int v38 = *(void *)(v37 + *(int *)(v135 + 24)) >= *(void *)(v35 + *(int *)(v135 + 24));
          sub_1065D0(v37, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1065D0(v35, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v36 == v38) {
            break;
          }
          ++v30;
          v32 += v138;
          if (v137 == v34 + 1)
          {
            Swift::Int v12 = v137;
            Swift::Int v30 = v137;
            a1 = v128;
            char v18 = v122;
            uint64_t v2 = v123;
            goto LABEL_23;
          }
        }
        a1 = v128;
        char v18 = v122;
        uint64_t v2 = v123;
        Swift::Int v12 = v137;
LABEL_23:
        uint64_t v23 = v130;
      }
      Swift::Int v21 = v126;
      if (v131 < v134)
      {
        if (v30 < v126) {
          goto LABEL_139;
        }
        if (v126 < v30)
        {
          id v122 = v18;
          uint64_t v123 = v2;
          uint64_t v39 = 0;
          uint64_t v40 = v138;
          uint64_t v41 = v138 * (v30 - 1);
          Swift::Int v42 = v30 * v138;
          Swift::Int v43 = v126;
          uint64_t v44 = v126 * v138;
          do
          {
            if (v43 != v30 + v39 - 1)
            {
              if (!v23) {
                goto LABEL_144;
              }
              sub_1100C4(v23 + v44, v125, type metadata accessor for InsightsDataManager.TopAssetCategory);
              if (v44 < v41 || v23 + v44 >= (unint64_t)(v23 + v42))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v44 != v41)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1100C4(v125, v23 + v41, type metadata accessor for InsightsDataManager.TopAssetCategory);
              uint64_t v23 = v130;
              uint64_t v40 = v138;
            }
            ++v43;
            --v39;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v30 + v39);
          char v18 = v122;
          uint64_t v2 = v123;
          a1 = v128;
          Swift::Int v21 = v126;
          Swift::Int v12 = v137;
        }
      }
    }
    if (v30 < v12)
    {
      if (__OFSUB__(v30, v21)) {
        goto LABEL_137;
      }
      if (v30 - v21 < v121) {
        break;
      }
    }
LABEL_56:
    if (v30 < v21) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v134 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v18 = sub_10A934(0, *((void *)v18 + 2) + 1, 1, (uint64_t)v18);
    }
    unint64_t v63 = *((void *)v18 + 2);
    unint64_t v62 = *((void *)v18 + 3);
    unint64_t v20 = v63 + 1;
    if (v63 >= v62 >> 1) {
      char v18 = sub_10A934((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v64 = v18 + 4;
    uint64_t v65 = &v18[2 * v63 + 4];
    Swift::Int v66 = v134;
    *(void *)uint64_t v65 = v21;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v20 - 1;
        if (v20 >= 4)
        {
          os_log_type_t v72 = &v64[2 * v20];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_121;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_122;
          }
          unint64_t v79 = v20 - 2;
          id v80 = &v64[2 * v20 - 4];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_124;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_127;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[2 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_131;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v96 = *((void *)v18 + 4);
            uint64_t v97 = *((void *)v18 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_87;
          }
          uint64_t v69 = *((void *)v18 + 4);
          uint64_t v68 = *((void *)v18 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_123;
        }
        unint64_t v79 = v20 - 2;
        id v85 = &v64[2 * v20 - 4];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_126;
        }
        uint64_t v91 = &v64[2 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_129;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_130;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_93:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v90) {
          goto LABEL_125;
        }
        uint64_t v98 = &v64[2 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_128;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v128) {
          goto LABEL_143;
        }
        uint64_t v107 = v18;
        unint64_t v108 = &v64[2 * v106];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v64[2 * v67];
        double v111 = v110[1];
        sub_1097AC(*v128 + *(void *)(v129 + 72) * *(void *)v108, *v128 + *(void *)(v129 + 72) * *(void *)v110, *v128 + *(void *)(v129 + 72) * *(void *)&v111, v127);
        if (v2) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v111 < v109) {
          goto LABEL_118;
        }
        if (v67 > *((void *)v107 + 2)) {
          goto LABEL_119;
        }
        *(void *)unint64_t v108 = v109;
        v64[2 * v106 + 1] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v67 >= v112) {
          goto LABEL_120;
        }
        char v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v64[2 * v67], v110 + 2, 16 * (v112 - 1 - v67));
        *((void *)v107 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v128;
    Swift::Int v12 = v128[1];
    Swift::Int v19 = v134;
    if (v134 >= v12) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v21, v121)) {
    goto LABEL_140;
  }
  if (v21 + v121 >= v12) {
    Swift::Int v45 = v12;
  }
  else {
    Swift::Int v45 = v21 + v121;
  }
  if (v45 >= v21)
  {
    if (v30 != v45)
    {
      id v122 = v18;
      uint64_t v123 = v2;
      uint64_t v46 = *(void *)(v129 + 72);
      uint64_t v47 = v46 * (v30 - 1);
      uint64_t v130 = v46;
      Swift::Int v48 = v30 * v46;
      Swift::Int v124 = v45;
      do
      {
        uint64_t v50 = 0;
        Swift::Int v134 = v30;
        Swift::Int v131 = v48;
        while (1)
        {
          Swift::Int v137 = v21;
          uint64_t v51 = *a1;
          uint64_t v52 = v48 + v50 + *a1;
          uint64_t v53 = v133;
          sub_106078(v52, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v54 = v47;
          uint64_t v55 = v47 + v50 + v51;
          uint64_t v56 = v132;
          sub_106078(v55, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v57 = *(int *)(v135 + 24);
          uint64_t v138 = *(void *)(v53 + v57);
          uint64_t v58 = *(void *)(v56 + v57);
          sub_1065D0(v56, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1065D0(v53, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v58 >= v138) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          Swift::Int v48 = v131;
          uint64_t v47 = v54;
          uint64_t v60 = v59 + v54 + v50;
          sub_1100C4(v59 + v131 + v50, v136, type metadata accessor for InsightsDataManager.TopAssetCategory);
          swift_arrayInitWithTakeFrontToBack();
          sub_1100C4(v136, v60, type metadata accessor for InsightsDataManager.TopAssetCategory);
          v50 -= v130;
          Swift::Int v21 = v137 + 1;
          Swift::Int v49 = v134;
          if (v134 == v137 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v49 = v134;
        uint64_t v47 = v54;
        Swift::Int v48 = v131;
LABEL_49:
        Swift::Int v30 = v49 + 1;
        v47 += v130;
        v48 += v130;
        Swift::Int v21 = v126;
      }
      while (v30 != v124);
      Swift::Int v30 = v124;
      char v18 = v122;
      uint64_t v2 = v123;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_146900();
  __break(1u);
  return result;
}

Swift::Int sub_107838(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_145230();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Int v134 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v149 = (char *)&v129 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v144 = (char *)&v129 - v11;
  __chkstk_darwin(v10);
  uint64_t v145 = (char *)&v129 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_146B30(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      return sub_1091A0(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_146;
  }
  uint64_t v147 = v4;
  Swift::Int v130 = result;
  Swift::Int v137 = (void *)v5;
  if (v13 < 2)
  {
    Swift::Int v19 = _swiftEmptyArrayStorage;
    unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v129 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      if (v21 >= 2)
      {
        uint64_t v123 = *a1;
        do
        {
          unint64_t v124 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_133;
          }
          if (!v123) {
            goto LABEL_145;
          }
          double v125 = v19[2 * v124 + 4];
          double v126 = v19[2 * v21 + 3];
          sub_109D24(v123 + v137[9] * *(void *)&v125, v123 + v137[9] * *(void *)&v19[2 * v21 + 2], v123 + v137[9] * *(void *)&v126, v136);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v126 < *(uint64_t *)&v125) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v19 = sub_10AC48((uint64_t)v19);
          }
          if (v124 >= *((void *)v19 + 2)) {
            goto LABEL_135;
          }
          unint64_t v127 = &v19[2 * v124 + 4];
          *unint64_t v127 = v125;
          v127[1] = v126;
          unint64_t v128 = *((void *)v19 + 2);
          if (v21 > v128) {
            goto LABEL_136;
          }
          memmove(&v19[2 * v21 + 2], &v19[2 * v21 + 4], 16 * (v128 - v21));
          *((void *)v19 + 2) = v128 - 1;
          unint64_t v21 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v129[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_145E30();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v129 = (double *)v17;
    unint64_t v136 = v17 + v18;
  }
  unint64_t v20 = 0;
  uint64_t v142 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v143 = v5 + 16;
  uint64_t v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  Swift::Int v19 = _swiftEmptyArrayStorage;
  uint64_t v148 = a1;
  while (1)
  {
    Swift::Int v22 = v20 + 1;
    uint64_t v135 = v20;
    if ((uint64_t)(v20 + 1) >= v13)
    {
      Swift::Int v33 = (void (*)(void, void, void))v20;
      Swift::Int v35 = (Swift::Int)(v20 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = v147;
      Swift::Int v24 = *v148;
      uint64_t v25 = v137[9];
      uint64_t v26 = *v148 + v25 * (void)v22;
      uint64_t v151 = v25;
      Swift::Int v140 = v24;
      uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v27(v145, v26, v147);
      Swift::Int v150 = v13;
      uint64_t v28 = v144;
      v27(v144, v24 + v25 * (void)v135, v23);
      uint64_t v29 = v145;
      LODWORD(v146) = sub_145190();
      Swift::Int v30 = (void (*)(char *, uint64_t))v137[1];
      uint64_t v31 = v28;
      Swift::Int v13 = v150;
      v30(v31, v23);
      uint64_t v32 = v23;
      Swift::Int v33 = (void (*)(void, void, void))v135;
      v30(v29, v32);
      uint64_t v34 = v151;
      Swift::Int v35 = (Swift::Int)v33 + 2;
      if ((uint64_t)v33 + 2 < v13)
      {
        Swift::Int v131 = v19;
        uint64_t v132 = v2;
        uint64_t v141 = v151 * (void)v22;
        Swift::Int v36 = v140;
        Swift::Int v37 = v151 * v35;
        while (1)
        {
          Swift::Int v38 = v35;
          uint64_t v39 = v145;
          uint64_t v40 = v147;
          v27(v145, v36 + v37, v147);
          uint64_t v41 = v144;
          v27(v144, v36 + v141, v40);
          int v42 = sub_145190();
          v30(v41, v40);
          v30(v39, v40);
          if ((v146 ^ v42)) {
            break;
          }
          Swift::Int v35 = v38 + 1;
          uint64_t v34 = v151;
          v36 += v151;
          if (v150 == v38 + 1)
          {
            Swift::Int v13 = v150;
            Swift::Int v35 = v150;
            Swift::Int v19 = v131;
            uint64_t v2 = v132;
            Swift::Int v33 = (void (*)(void, void, void))v135;
            goto LABEL_23;
          }
        }
        Swift::Int v19 = v131;
        uint64_t v2 = v132;
        Swift::Int v35 = v38;
        Swift::Int v33 = (void (*)(void, void, void))v135;
        Swift::Int v13 = v150;
        uint64_t v34 = v151;
      }
LABEL_23:
      a1 = v148;
      if (v146)
      {
        if (v35 < (uint64_t)v33) {
          goto LABEL_139;
        }
        if ((uint64_t)v33 < v35)
        {
          Swift::Int v131 = v19;
          uint64_t v132 = v2;
          uint64_t v43 = 0;
          uint64_t v44 = v34 * (v35 - 1);
          Swift::Int v45 = (Swift::Int)v33;
          Swift::Int v46 = v35 * v34;
          Swift::Int v47 = v45;
          uint64_t v48 = v45 * v34;
          Swift::Int v49 = v140;
          do
          {
            if (v47 != v35 + v43 - 1)
            {
              if (!v49) {
                goto LABEL_144;
              }
              Swift::Int v51 = v49 + v44;
              uint64_t v146 = (char *)*v152;
              ((void (*)(char *, Swift::Int, uint64_t))v146)(v134, v49 + v48, v147);
              if (v48 < v44 || v49 + v48 >= (unint64_t)(v49 + v46))
              {
                uint64_t v50 = v147;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v50 = v147;
                if (v48 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(Swift::Int, char *, uint64_t))v146)(v51, v134, v50);
              a1 = v148;
              Swift::Int v49 = v140;
              uint64_t v34 = v151;
            }
            ++v47;
            --v43;
            v44 -= v34;
            v46 -= v34;
            v48 += v34;
          }
          while (v47 < v35 + v43);
          Swift::Int v19 = v131;
          uint64_t v2 = v132;
          Swift::Int v33 = (void (*)(void, void, void))v135;
          Swift::Int v13 = v150;
        }
      }
    }
    if (v35 < v13)
    {
      if (__OFSUB__(v35, v33)) {
        goto LABEL_137;
      }
      if (v35 - (uint64_t)v33 < v130) {
        break;
      }
    }
LABEL_55:
    if (v35 < (uint64_t)v33) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v146 = (char *)v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v19 = sub_10A934(0, *((void *)v19 + 2) + 1, 1, (uint64_t)v19);
    }
    unint64_t v72 = *((void *)v19 + 2);
    unint64_t v71 = *((void *)v19 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      Swift::Int v19 = sub_10A934((double *)(v71 > 1), v72 + 1, 1, (uint64_t)v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v73 = v19 + 4;
    uint64_t v74 = &v19[2 * v72 + 4];
    uint64_t v75 = v146;
    *(void *)uint64_t v74 = v33;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v81 = &v73[2 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_121;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_122;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[2 * v21 - 4];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_124;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_127;
          }
          if (v93 >= v84)
          {
            double v111 = &v73[2 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_131;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_92;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v19 + 4);
            uint64_t v106 = *((void *)v19 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_86;
          }
          uint64_t v78 = *((void *)v19 + 4);
          uint64_t v77 = *((void *)v19 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_123;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[2 * v21 - 4];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_126;
        }
        uint64_t v100 = &v73[2 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_129;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_130;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_92:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v99) {
          goto LABEL_125;
        }
        uint64_t v107 = &v73[2 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_128;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        double v117 = v19;
        uint64_t v118 = &v73[2 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v73[2 * v76];
        double v121 = v120[1];
        sub_109D24(v116 + v137[9] * *(void *)v118, v116 + v137[9] * *(void *)v120, v116 + v137[9] * *(void *)&v121, v136);
        if (v2) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v121 < v119) {
          goto LABEL_118;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v118 = v119;
        v73[2 * v115 + 1] = v121;
        unint64_t v122 = *((void *)v117 + 2);
        if (v76 >= v122) {
          goto LABEL_120;
        }
        Swift::Int v19 = v117;
        unint64_t v21 = v122 - 1;
        memmove(&v73[2 * v76], v120 + 2, 16 * (v122 - 1 - v76));
        *((void *)v117 + 2) = v122 - 1;
        a1 = v148;
        if (v122 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = a1[1];
    unint64_t v20 = v146;
    if ((uint64_t)v146 >= v13) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v33, v130)) {
    goto LABEL_140;
  }
  if ((uint64_t)v33 + v130 >= v13) {
    Swift::Int v52 = v13;
  }
  else {
    Swift::Int v52 = (Swift::Int)v33 + v130;
  }
  if (v52 >= (uint64_t)v33)
  {
    if (v35 != v52)
    {
      Swift::Int v131 = v19;
      uint64_t v132 = v2;
      uint64_t v53 = v137[9];
      uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      uint64_t v139 = v53;
      uint64_t v54 = v53 * (v35 - 1);
      Swift::Int v55 = v35 * v53;
      uint64_t v56 = v147;
      Swift::Int v133 = v52;
      do
      {
        uint64_t v58 = 0;
        uint64_t v146 = (char *)v35;
        Swift::Int v140 = v55;
        uint64_t v141 = v54;
        while (1)
        {
          uint64_t v59 = *a1;
          Swift::Int v150 = v55 + v58;
          uint64_t v151 = (uint64_t)v33;
          Swift::Int v60 = v55 + v58 + v59;
          char v61 = v145;
          unint64_t v62 = v138;
          v138(v145, v60, v56);
          uint64_t v63 = v54 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v144;
          v62(v144, v63, v56);
          LOBYTE(v62) = sub_145190();
          Swift::Int v66 = *v142;
          (*v142)(v65, v56);
          v66(v61, v56);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v67 = *v64;
          if (!*v64) {
            goto LABEL_142;
          }
          Swift::Int v55 = v140;
          uint64_t v54 = v141;
          uint64_t v68 = (char *)(v67 + v141 + v58);
          uint64_t v69 = *v152;
          uint64_t v56 = v147;
          (*v152)(v149, v67 + v140 + v58, v147);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v149, v56);
          v58 -= v139;
          Swift::Int v33 = (void (*)(void, void, void))(v151 + 1);
          uint64_t v57 = v146;
          a1 = v148;
          if (v146 == (char *)(v151 + 1)) {
            goto LABEL_48;
          }
        }
        uint64_t v57 = v146;
        uint64_t v56 = v147;
        a1 = v64;
        Swift::Int v55 = v140;
        uint64_t v54 = v141;
LABEL_48:
        Swift::Int v35 = (Swift::Int)(v57 + 1);
        v54 += v139;
        v55 += v139;
        Swift::Int v33 = (void (*)(void, void, void))v135;
      }
      while (v35 != v133);
      Swift::Int v35 = v133;
      Swift::Int v19 = v131;
      uint64_t v2 = v132;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_146900();
  __break(1u);
  return result;
}

Swift::Int sub_10831C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_145230();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  uint64_t v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_146B30(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_10948C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  Swift::Int v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    Swift::Int v19 = _swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          double v127 = v19[2 * v126 + 4];
          double v128 = v19[2 * v21 + 3];
          sub_10A2EC(v125 + v5[9] * *(void *)&v127, v125 + v5[9] * *(void *)&v19[2 * v21 + 2], v125 + v5[9] * *(void *)&v128, v138);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v128 < *(uint64_t *)&v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v19 = sub_10AC48((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[2 * v126 + 4];
          *uint64_t v129 = v127;
          v129[1] = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[2 * v21 + 2], &v19[2 * v21 + 4], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_145E30();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = (double *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  Swift::Int v19 = _swiftEmptyArrayStorage;
  uint64_t v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = sub_145A60();
    Swift::Int v32 = v13;
    Swift::Int v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      Swift::Int v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_145A60();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          Swift::Int v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      Swift::Int v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      Swift::Int v47 = v150;
      goto LABEL_38;
    }
    Swift::Int v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    Swift::Int v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        Swift::Int v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        Swift::Int v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    Swift::Int v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      Swift::Int v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      Swift::Int v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          unint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          Swift::Int v66 = v146;
          v64(v146, v65, v53);
          sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v60) = sub_145A60();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          Swift::Int v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        Swift::Int v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      Swift::Int v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v19 = sub_10A934(0, *((void *)v19 + 2) + 1, 1, (uint64_t)v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      Swift::Int v19 = sub_10A934((double *)(v73 > 1), v74 + 1, 1, (uint64_t)v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v75 = v19 + 4;
    unint64_t v76 = &v19[2 * v74 + 4];
    Swift::Int v77 = v148;
    *(void *)unint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[2 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[2 * v21 - 4];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[2 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[2 * v21 - 4];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[2 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[2 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[2 * v117];
        uint64_t v120 = *(void *)v119;
        double v121 = &v75[2 * v78];
        double v122 = v121[1];
        sub_10A2EC(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * *(void *)&v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (*(uint64_t *)&v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        v75[2 * v117 + 1] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        Swift::Int v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[2 * v78], v121 + 2, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_146900();
  __break(1u);
  return result;
}

uint64_t sub_108EDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v41 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v7 = __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v36 = (uint64_t)&v32 - v13;
  uint64_t v40 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v40 - 1);
    uint64_t v38 = v14;
    uint64_t v16 = v14 * v40;
    Swift::Int v35 = a4;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v34;
    uint64_t v39 = v16;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v16 + v17 + *a4;
      uint64_t v21 = v36;
      sub_106078(v20, v36, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v22 = v15 + v17 + v19;
      uint64_t v23 = v15;
      uint64_t v24 = v37;
      sub_106078(v22, v37, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v25 = *(int *)(v41 + 24);
      uint64_t v43 = *(void *)(v21 + v25);
      uint64_t v26 = *(void *)(v24 + v25);
      uint64_t v27 = v24;
      uint64_t v15 = v23;
      sub_1065D0(v27, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v28 = v21;
      uint64_t v16 = v39;
      uint64_t result = sub_1065D0(v28, type metadata accessor for InsightsDataManager.TopAssetCategory);
      BOOL v29 = v26 < v43;
      a4 = v35;
      if (!v29)
      {
LABEL_4:
        uint64_t v15 = v23 + v38;
        v16 += v38;
        if (++v40 == v33) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v35;
      if (!*v35) {
        break;
      }
      uint64_t v31 = v30 + v23 + v17;
      sub_1100C4(v30 + v16 + v17, v42, type metadata accessor for InsightsDataManager.TopAssetCategory);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1100C4(v42, v31, type metadata accessor for InsightsDataManager.TopAssetCategory);
      v17 -= v38;
      if (v40 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1091A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_145230();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v31 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v41 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    Swift::Int v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v36 = a4;
    uint64_t v37 = v15;
    uint64_t v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v41 - 1);
    uint64_t v40 = v17;
    uint64_t v45 = v17 * v41;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v44 = v33;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v45 + v18 + *a4;
      uint64_t v21 = v38;
      uint64_t v22 = v35;
      v35(v38, v20, v7);
      uint64_t v23 = v7;
      uint64_t v24 = v39;
      v22(v39, v46 + v18 + v19, v23);
      LOBYTE(v19) = sub_145190();
      uint64_t v25 = *v34;
      uint64_t v26 = v24;
      uint64_t v7 = v23;
      (*v34)(v26, v23);
      uint64_t v27 = v21;
      a4 = v36;
      uint64_t result = v25(v27, v23);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v46 += v40;
        v45 += v40;
        if (++v41 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      BOOL v29 = (char *)(v28 + v46 + v18);
      uint64_t v30 = *v42;
      (*v42)(v43, v28 + v45 + v18, v23);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v30(v29, (uint64_t)v43, v23);
      v18 -= v40;
      if (v41 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10948C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_145230();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      uint64_t v21 = v36;
      uint64_t v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
      LOBYTE(v22) = sub_145A60();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1097AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v51 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v44 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v18;
      unint64_t v52 = a4 + v18;
      unint64_t v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v13;
        unint64_t v48 = a4;
        unint64_t v45 = a1;
        uint64_t v46 = v8;
        uint64_t v34 = (uint64_t)v50;
        do
        {
          unint64_t v49 = a3 + v33;
          sub_106078(v31 + v33, v34, type metadata accessor for InsightsDataManager.TopAssetCategory);
          unint64_t v35 = a2 + v33;
          uint64_t v36 = v51;
          sub_106078(a2 + v33, v51, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v37 = *(int *)(v8 + 24);
          uint64_t v38 = *(void *)(v34 + v37);
          uint64_t v39 = *(void *)(v36 + v37);
          sub_1065D0(v36, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1065D0(v34, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v39 >= v38)
          {
            unint64_t v42 = v52;
            v52 += v33;
            unint64_t v40 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
            }
          }
          else
          {
            unint64_t v40 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v33;
          }
          unint64_t v31 = v52;
          if (v52 <= v41) {
            break;
          }
          a2 = v35;
          a3 = v40;
        }
        while (v35 > v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v47 = a3;
      uint64_t v20 = (uint64_t)v50;
      do
      {
        sub_106078(a2, v20, type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v21 = v51;
        sub_106078(a4, v51, type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v22 = *(int *)(v8 + 24);
        uint64_t v23 = *(void *)(v20 + v22);
        uint64_t v24 = *(void *)(v21 + v22);
        sub_1065D0(v21, type metadata accessor for InsightsDataManager.TopAssetCategory);
        sub_1065D0(v20, type metadata accessor for InsightsDataManager.TopAssetCategory);
        unint64_t v25 = v54;
        if (v24 >= v23)
        {
          unint64_t v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v29;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v13;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v13;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v28);
    }
LABEL_66:
    sub_10AB04(&v54, &v53, (uint64_t *)&v52, type metadata accessor for InsightsDataManager.TopAssetCategory);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_109D24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v61 = sub_145230();
  uint64_t v8 = *(void *)(v61 - 8);
  uint64_t v9 = __chkstk_darwin(v61);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v62 = a4 + v18;
      unint64_t v64 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v58 = v8 + 16;
        unint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v55 = v36;
        uint64_t v37 = -v13;
        unint64_t v52 = a4;
        uint64_t v53 = -v13;
        uint64_t v56 = (void (*)(void, void, void))a1;
        uint64_t v38 = v61;
        do
        {
          unint64_t v57 = a3 + v37;
          unint64_t v39 = a3;
          unint64_t v40 = v59;
          unint64_t v41 = v55;
          v55(v59, v34 + v37, v38);
          unint64_t v42 = a2 + v37;
          uint64_t v43 = v60;
          v41(v60, v42, v38);
          LOBYTE(v41) = sub_145190();
          uint64_t v44 = *v54;
          (*v54)(v43, v38);
          v44(v40, v38);
          if (v41)
          {
            uint64_t v37 = v53;
            a3 = v57;
            if (v39 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              BOOL v45 = v39 == a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
              if (!v45) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v37;
          }
          else
          {
            unint64_t v48 = v62;
            v62 += v53;
            a3 = v57;
            BOOL v49 = v39 < v48 || v57 >= v48;
            uint64_t v37 = v53;
            if (v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              unint64_t v47 = v56;
              if (v39 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v46 = v52;
            }
          }
          unint64_t v34 = v62;
          if (v62 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v47);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v57 = a4 + v17;
    unint64_t v62 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v58 = v8 + 16;
      uint64_t v55 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v56 = v20;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v59;
        unint64_t v24 = a4;
        uint64_t v25 = v61;
        unint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v56;
        v56(v59, a2, v61);
        uint64_t v27 = v60;
        v26(v60, v24, v25);
        LOBYTE(v24) = sub_145190();
        unint64_t v28 = *(void (**)(char *, uint64_t))v55;
        (*(void (**)(char *, uint64_t))v55)(v27, v25);
        v28(v23, v25);
        unint64_t v29 = v64;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v30 = a2 + v21;
          if (v64 < a2 || v64 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v32 = v63 + v21;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v64 = v29 + v13;
        a4 = v63;
        if (v63 >= v57) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_10AB04(&v64, &v63, (uint64_t *)&v62, (uint64_t (*)(void))&type metadata accessor for Date);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_10A2EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_145230();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        unint64_t v39 = v55;
        unint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          unint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v41) = sub_145A60();
          BOOL v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      unint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        unint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        unint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_10FD9C((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
        char v27 = sub_145A60();
        unint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_10AB04(&v60, &v59, (uint64_t *)&v58, (uint64_t (*)(void))&type metadata accessor for Date);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

double *sub_10A934(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19D970);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  int64_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10AA30(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10AB04(a1, a2, a3, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

char *sub_10AA48(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_146970();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_10AB04(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_146970();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

double *sub_10AC48(uint64_t a1)
{
  return sub_10A934(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10AC5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_7E3EC(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_145230() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_10AE00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_146930();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_146820();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10C178(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_146930();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_145E00();
}

uint64_t sub_10AFCC(void (*a1)(_OWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v32)(_OWORD *__return_ptr, char *);
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;

  unint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v5 = _s4YearVMa(0);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_A314(&qword_1A2558);
  uint64_t result = sub_146940();
  uint64_t v9 = (void *)result;
  int64_t v10 = 0;
  unint64_t v35 = a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v12 = a3 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v29 = v12;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v17 = result + 64;
  if ((v15 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    uint64_t v23 = *(void *)(*(void *)(v35 + 48) + 8 * i);
    sub_106078(*(void *)(v35 + 56) + *(void *)(v31 + 72) * i, (uint64_t)v7, _s4YearVMa);
    v32(v34, v7);
    if (v3)
    {
      swift_release();
      sub_1065D0((uint64_t)v7, _s4YearVMa);
      return (uint64_t)v9;
    }
    uint64_t result = sub_1065D0((uint64_t)v7, _s4YearVMa);
    *(void *)(v17 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v9[6] + 8 * i) = v23;
    unint64_t v24 = (_OWORD *)(v9[7] + 32 * i);
    long long v25 = v34[1];
    *unint64_t v24 = v34[0];
    v24[1] = v25;
    uint64_t v26 = v9[2];
    BOOL v20 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v27;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v20 = __OFADD__(v10++, 1);
    if (v20) {
      goto LABEL_27;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 2;
  if (v10 + 2 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 3;
  if (v10 + 3 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10B2AC(uint64_t a1)
{
  uint64_t v2 = _s5MonthVMa(0);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_A314(&qword_1A2558);
  uint64_t result = sub_146940();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  int64x2_t v28 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
  uint64_t v27 = result + 64;
  if ((v10 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v31 + 48) + 8 * i);
    sub_106078(*(void *)(v31 + 56) + *(void *)(v29 + 72) * i, (uint64_t)v4, _s5MonthVMa);
    uint64_t v18 = sub_145460();
    uint64_t v19 = *v4;
    uint64_t result = sub_1065D0((uint64_t)v4, _s5MonthVMa);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v17;
    uint64_t v20 = v6[7] + 32 * i;
    *(void *)uint64_t v20 = v18;
    *(void *)(v20 + 8) = v19;
    *(int64x2_t *)(v20 + 16) = v28;
    uint64_t v21 = v6[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v23;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v26) {
        return (uint64_t)v6;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v26) {
          return (uint64_t)v6;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v7);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v7 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10B584(uint64_t a1)
{
  sub_A314(&qword_1A2558);
  uint64_t result = (void *)sub_146940();
  int64_t v3 = 0;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  int64x2_t v9 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v3 << 6))
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    *(void *)((char *)result + ((i >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << i;
    *(void *)(result[6] + 8 * i) = v15;
    uint64_t v17 = result[7] + 32 * i;
    *(void *)uint64_t v17 = 1;
    *(void *)(v17 + 8) = v16;
    *(int64x2_t *)(v17 + 16) = v9;
    uint64_t v18 = result[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v20;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        return result;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          return result;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8) {
    return result;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10B720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v21[0] = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a2 + 56;
    do
    {
      Swift::UInt v7 = *(unsigned __int8 *)(a1 + 32 + v5++);
      sub_146C80();
      sub_146C90(v7);
      Swift::Int v8 = sub_146CD0();
      uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v10 = v8 & ~v9;
      if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
      {
        uint64_t v11 = *(void *)(v2 + 48);
        if (*(unsigned __int8 *)(v11 + v10) == v7)
        {
LABEL_9:
          v21[1] = v5;
          unint64_t v12 = (unint64_t)(63 - v9) >> 6;
          size_t v13 = 8 * v12;
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v12 < 0x81
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            uint64_t v16 = &v20[-v15];
            memcpy(&v20[-v15], (const void *)(v2 + 56), v13);
            Swift::Int v17 = sub_10BA00((Swift::Int)v16, v12, v2, v10, v21);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v18 = (void *)swift_slowAlloc();
            memcpy(v18, (const void *)(v2 + 56), v13);
            Swift::Int v17 = sub_10BA00((Swift::Int)v18, v12, v2, v10, v21);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return (void *)v17;
        }
        while (1)
        {
          unint64_t v10 = (v10 + 1) & ~v9;
          if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v11 + v10) == v7) {
            goto LABEL_9;
          }
        }
      }
    }
    while (v5 != v4);
  }
  return (void *)v2;
}

uint64_t sub_10B9AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_106304(a1, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, (uint64_t)type metadata accessor for InsightsDataManager.LastUpdate, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_106078, a2);
}

Swift::Int sub_10BA00(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v10 = *a5;
  unint64_t v9 = a5[1];
  unint64_t v11 = *(void *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_2:
    swift_retain();
    return sub_10BBB0(v6, a2, v8, a3);
  }
  else
  {
    uint64_t v13 = a3 + 56;
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= v11) {
        goto LABEL_20;
      }
      Swift::UInt v14 = *(unsigned __int8 *)(v10 + v9 + 32);
      a5[1] = v9 + 1;
      sub_146C80();
      sub_146C90(v14);
      uint64_t result = sub_146CD0();
      uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v16 = result & ~v15;
      uint64_t v17 = v16 >> 6;
      uint64_t v18 = 1 << v16;
      if (((1 << v16) & *(void *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        uint64_t v19 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v19 + v16) == v14)
        {
LABEL_15:
          uint64_t v22 = v17;
          unint64_t v23 = v6[v17];
          v6[v22] = v23 & ~v18;
          if ((v18 & v23) != 0)
          {
            if (__OFSUB__(v8--, 1)) {
              goto LABEL_21;
            }
            if (!v8) {
              return (Swift::Int)&_swiftEmptySetSingleton;
            }
          }
        }
        else
        {
          for (unint64_t i = v16 + 1; ; unint64_t i = v21 + 1)
          {
            unint64_t v21 = i & ~v15;
            if (((*(void *)(v13 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v19 + v21) == v14)
            {
              uint64_t v17 = v21 >> 6;
              uint64_t v18 = 1 << v21;
              goto LABEL_15;
            }
          }
        }
      }
      uint64_t v10 = *a5;
      unint64_t v9 = a5[1];
      unint64_t v11 = *(void *)(*a5 + 16);
      if (v9 == v11) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_10BBB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_A314(&qword_19C190);
  uint64_t result = sub_1467C0();
  unint64_t v9 = (unsigned char *)result;
  int64x2_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    sub_146C80();
    sub_146C90(v18);
    uint64_t result = sub_146CD0();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*((void *)v9 + 6) + v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10BE1C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10BE50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v4 = 0;
      uint64_t v5 = a1 + 32;
      uint64_t v6 = a2 + 56;
      do
      {
        if (*(void *)(a2 + 16))
        {
          Swift::UInt v7 = *(unsigned __int8 *)(v5 + v4);
          sub_146C80();
          sub_146C90(v7);
          Swift::Int v8 = sub_146CD0();
          uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v10 = v8 & ~v9;
          if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            uint64_t v11 = *(void *)(a2 + 48);
            if (*(unsigned __int8 *)(v11 + v10) == v7) {
              return 0;
            }
            uint64_t v12 = ~v9;
            while (1)
            {
              unint64_t v10 = (v10 + 1) & v12;
              if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v11 + v10) == v7) {
                return 0;
              }
            }
          }
        }
        ++v4;
      }
      while (v4 != v2);
    }
  }
  return 1;
}

uint64_t sub_10BF54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_146930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_122D8(&qword_1A25A0, &qword_1A2598);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_A314(&qword_1A2598);
          uint64_t v12 = sub_10C3AC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for JournalEntryAssetMO();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_10C178(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_146930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_122D8(&qword_1A2590, &qword_1A2588);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_A314(&qword_1A2588);
          uint64_t v12 = sub_10C418(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_C84C(0, (unint64_t *)&qword_1A2580);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t (*sub_10C3AC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10C4C8(v6, a2, a3);
  return sub_10C414;
}

uint64_t (*sub_10C418(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10C548(v6, a2, a3);
  return sub_10C414;
}

void sub_10C480(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_10C4C8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  int64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_146810();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)int64_t v3 = v4;
    return _s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10C548(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  int64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_146810();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)int64_t v3 = v4;
    return j__s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_10C5C8(unint64_t a1)
{
  return sub_2CD70(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10C5DC(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10C5F0(unint64_t a1)
{
  return sub_2DA5C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10C604(unint64_t a1)
{
  return sub_2DCC4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10C618(uint64_t a1)
{
  uint64_t v156 = sub_A314(&qword_1A24A0);
  uint64_t v136 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v162 = (uint64_t)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_A314(&qword_1A24B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v152 = (uint64_t)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v134 - v7);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v139 = (char *)&v134 - v10;
  __chkstk_darwin(v9);
  Swift::Int v153 = (char *)&v134 - v11;
  uint64_t v12 = sub_A314(&qword_19C150);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v138 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v145 = (char *)&v134 - v15;
  uint64_t v159 = sub_145230();
  uint64_t v16 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  BOOL v158 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_A314(&qword_1A24A8);
  __chkstk_darwin(v18);
  uint64_t v157 = (uint64_t *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_A314(&qword_19C938);
  __chkstk_darwin(v20);
  uint64_t v146 = (uint64_t)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_A314(&qword_1A2490);
  __chkstk_darwin(v154);
  char v23 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_A314(&qword_1A24B8);
  __chkstk_darwin(v151);
  uint64_t v161 = (uint64_t)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = v20;
  uint64_t v25 = *(void *)(a1 + *(int *)(v20 + 32));
  uint64_t v26 = sub_39840(v25);
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t v31 = sub_398E4(v26, v27, v29 & 1, 1 << *(unsigned char *)(v25 + 32), *(_DWORD *)(v25 + 36), 0);
  sub_262F8(v26, v28, v30);
  uint64_t v155 = v16;
  uint64_t v137 = v18;
  if (v31 <= 0)
  {
    uint64_t v39 = *(unsigned __int8 *)(v16 + 80);
    long long v160 = _swiftEmptyArrayStorage;
    unint64_t v37 = *(void *)&_swiftEmptyArrayStorage[3];
    uint64_t v135 = v39;
    uint64_t v140 = (v39 + 32) & ~v39;
  }
  else
  {
    sub_A314(&qword_19C550);
    uint64_t v32 = *(void *)(v16 + 72);
    uint64_t v33 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v34 = (v33 + 32) & ~v33;
    long long v160 = (double *)swift_allocObject();
    uint64_t result = j__malloc_size(v160);
    if (!v32) {
      goto LABEL_91;
    }
    if (result - v34 == 0x8000000000000000 && v32 == -1) {
      goto LABEL_93;
    }
    uint64_t v135 = v33;
    uint64_t v140 = (v33 + 32) & ~v33;
    unint64_t v37 = 2 * ((result - v34) / v32);
    uint64_t v38 = v160;
    *((void *)v160 + 2) = v31;
    *((void *)v38 + 3) = v37;
  }
  sub_12428(a1, (uint64_t)v23, &qword_1A2490);
  uint64_t v40 = v146;
  sub_2E4D0((uint64_t)v23, v146, &qword_19C938);
  unint64_t v41 = v157;
  sub_12428(v40, (uint64_t)v157, &qword_19C938);
  uint64_t v42 = sub_39840(*(void *)(v40 + *(int *)(v147 + 32)));
  uint64_t v44 = v43;
  char v46 = v45;
  sub_1248C(v40, &qword_19C938);
  unint64_t v47 = (char *)v41 + *(int *)(v137 + 36);
  *(void *)unint64_t v47 = v42;
  *((void *)v47 + 1) = v44;
  v47[16] = v46 & 1;
  uint64_t v48 = v161;
  uint64_t result = sub_2E4D0((uint64_t)v41, v161, &qword_1A24A8);
  long long v49 = *(_OWORD *)&v23[*(int *)(v154 + 44)];
  uint64_t v154 = v48 + *(int *)(v151 + 44);
  *(_OWORD *)uint64_t v154 = v49;
  uint64_t v50 = v156;
  uint64_t v51 = (uint64_t)v145;
  if ((v31 & 0x8000000000000000) == 0)
  {
    unint64_t v52 = (void *)v31;
    unint64_t v53 = (char *)v160 + v140;
    uint64_t v54 = (char *)(v37 >> 1);
    uint64_t v55 = v155;
    if (v31)
    {
      uint64_t v56 = v161 + *(int *)(v137 + 36);
      Swift::Int v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56);
      uint64_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
      uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*(int *)(v147 + 32);
      Swift::Int v148 = (char *)(v136 + 56);
      uint64_t v149 = v57;
      Swift::Int v142 = (uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
      uint64_t v141 = v155 + 32;
      v54 -= v31;
      Swift::Int v150 = v8;
      unint64_t v58 = v138;
      uint64_t v151 = v56;
      do
      {
        if (!v52) {
          goto LABEL_75;
        }
        if (*(unsigned char *)(v56 + 16)) {
          goto LABEL_94;
        }
        uint64_t v59 = *(uint64_t *)((char *)v149 + v161);
        if (*(_DWORD *)(v59 + 36) != *(_DWORD *)(v56 + 8)) {
          goto LABEL_76;
        }
        uint64_t v60 = *(void *)v56;
        uint64_t v61 = 1 << *(unsigned char *)(v59 + 32);
        uint64_t v157 = v52;
        if (v60 == v61)
        {
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))v148)(v8, 1, 1, v50);
        }
        else
        {
          if (v60 < 0 || v60 >= v61) {
            goto LABEL_84;
          }
          if (((*(void *)(v59 + 8 * ((unint64_t)v60 >> 6) + 64) >> v60) & 1) == 0)
          {
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v62 = *(void *)(*(void *)(v59 + 48) + 8 * v60);
          unint64_t v63 = (void *)(v162 + *(int *)(v50 + 48));
          unint64_t v64 = (uint64_t *)(*(void *)(v59 + 56) + 32 * v60);
          uint64_t v65 = *v64;
          uint64_t v66 = v64[1];
          uint64_t v67 = v50;
          uint64_t v68 = v64[2];
          uint64_t v69 = v64[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v70 = v62;
          uint64_t v71 = v161;
          sub_140334(v70, v162);
          *unint64_t v63 = v65;
          v63[1] = v66;
          v63[2] = v68;
          v63[3] = v69;
          sub_12428(v162, (uint64_t)v8, &qword_19C930);
          unint64_t v72 = (char *)v8 + *(int *)(v67 + 48);
          *(void *)unint64_t v72 = v65;
          *((void *)v72 + 1) = v66;
          *((void *)v72 + 2) = v68;
          *((void *)v72 + 3) = v69;
          swift_bridgeObjectRetain();
          uint64_t v73 = v151;
          swift_bridgeObjectRetain();
          sub_1248C(v162, &qword_1A24A0);
          uint64_t v74 = v146;
          sub_12428(v71, v146, &qword_19C938);
          uint64_t result = *(void *)v73;
          if ((*(void *)v73 & 0x8000000000000000) != 0) {
            goto LABEL_86;
          }
          uint64_t v75 = *(void *)(v74 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v75 + 32))) {
            goto LABEL_86;
          }
          if (((*(void *)(v75 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_87;
          }
          if (*(_DWORD *)(v75 + 36) != *(_DWORD *)(v73 + 8)) {
            goto LABEL_88;
          }
          uint64_t v76 = sub_1466E0();
          uint64_t v77 = *(unsigned int *)(v75 + 36);
          *(void *)uint64_t v73 = v76;
          *(void *)(v73 + 8) = v77;
          *(unsigned char *)(v73 + 16) = 0;
          sub_1248C(v74, &qword_19C938);
          uint64_t v8 = v150;
          uint64_t v50 = v156;
          (*(void (**)(void, void, uint64_t, uint64_t))v148)(v150, 0, 1, v156);
          uint64_t v51 = (uint64_t)v145;
          uint64_t v55 = v155;
          unint64_t v58 = v138;
        }
        unint64_t v78 = *(void (**)(uint64_t))v154;
        uint64_t v79 = v152;
        sub_2E4D0((uint64_t)v8, v152, &qword_1A24B0);
        uint64_t v80 = 1;
        uint64_t v81 = v79;
        uint64_t v82 = v50;
        if ((*v144)(v81, 1, v50) != 1)
        {
          uint64_t v83 = v162;
          sub_2E4D0(v152, v162, &qword_1A24A0);
          v78(v83);
          sub_1248C(v83, &qword_1A24A0);
          uint64_t v80 = 0;
        }
        uint64_t v84 = v159;
        (*v143)(v58, v80, 1, v159);
        uint64_t result = (*v142)(v58, 1, v84);
        if (result == 1) {
          goto LABEL_95;
        }
        uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v53, v58, v84);
        v53 += *(void *)(v55 + 72);
        unint64_t v52 = (void *)((char *)v157 - 1);
        uint64_t v50 = v82;
        uint64_t v8 = v150;
        uint64_t v56 = v151;
      }
      while (v157 != (void *)((char *)&def_94138 + 1));
    }
    uint64_t v85 = v161 + *(int *)(v137 + 36);
    uint64_t v86 = (uint64_t)v139;
    uint64_t v87 = (uint64_t)v153;
    if ((*(unsigned char *)(v85 + 16) & 1) == 0)
    {
      uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56);
      uint64_t v89 = *(int *)(v147 + 32);
      uint64_t v151 = v136 + 48;
      uint64_t v152 = v89;
      uint64_t v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
      Swift::Int v150 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56);
      uint64_t v157 = (void *)(v155 + 32);
      Swift::Int v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 | 7);
      uint64_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 56);
      while (1)
      {
        uint64_t v90 = *(void *)(v161 + v152);
        if (*(_DWORD *)(v90 + 36) != *(_DWORD *)(v85 + 8))
        {
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        uint64_t v91 = *(void *)v85;
        uint64_t v92 = 1 << *(unsigned char *)(v90 + 32);
        if (*(void *)v85 == v92)
        {
          (*v88)(v87, 1, 1, v50);
        }
        else
        {
          if (v91 < 0 || v91 >= v92) {
            goto LABEL_77;
          }
          if (((*(void *)(v90 + 8 * ((unint64_t)v91 >> 6) + 64) >> v91) & 1) == 0) {
            goto LABEL_78;
          }
          Swift::Int v148 = v54;
          uint64_t v93 = *(void *)(*(void *)(v90 + 48) + 8 * v91);
          uint64_t v94 = (void *)(v162 + *(int *)(v50 + 48));
          uint64_t v95 = (uint64_t *)(*(void *)(v90 + 56) + 32 * v91);
          uint64_t v96 = v85;
          uint64_t v98 = *v95;
          uint64_t v97 = v95[1];
          uint64_t v99 = v50;
          uint64_t v100 = v87;
          uint64_t v101 = v95[2];
          uint64_t v102 = v95[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v103 = v93;
          uint64_t v104 = v161;
          sub_140334(v103, v162);
          *uint64_t v94 = v98;
          v94[1] = v97;
          v94[2] = v101;
          v94[3] = v102;
          sub_12428(v162, v100, &qword_19C930);
          uint64_t v105 = (void *)(v100 + *(int *)(v99 + 48));
          *uint64_t v105 = v98;
          v105[1] = v97;
          uint64_t v85 = v96;
          v105[2] = v101;
          v105[3] = v102;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1248C(v162, &qword_1A24A0);
          uint64_t v106 = v146;
          sub_12428(v104, v146, &qword_19C938);
          uint64_t result = *(void *)v96;
          if ((*(void *)v96 & 0x8000000000000000) != 0) {
            goto LABEL_79;
          }
          uint64_t v107 = *(void *)(v106 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v107 + 32))) {
            goto LABEL_79;
          }
          if (((*(void *)(v107 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_80;
          }
          if (*(_DWORD *)(v107 + 36) != *(_DWORD *)(v96 + 8)) {
            goto LABEL_81;
          }
          uint64_t v108 = sub_1466E0();
          uint64_t v109 = *(unsigned int *)(v107 + 36);
          *(void *)uint64_t v96 = v108;
          *(void *)(v96 + 8) = v109;
          *(unsigned char *)(v96 + 16) = 0;
          sub_1248C(v106, &qword_19C938);
          uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v144;
          uint64_t v87 = (uint64_t)v153;
          uint64_t v50 = v156;
          ((void (*)(char *, void, uint64_t, uint64_t))*v144)(v153, 0, 1, v156);
          uint64_t v86 = (uint64_t)v139;
          uint64_t v51 = (uint64_t)v145;
          uint64_t v54 = v148;
        }
        uint64_t v110 = *(void (**)(uint64_t))v154;
        sub_2E4D0(v87, v86, &qword_1A24B0);
        uint64_t v111 = 1;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v151)(v86, 1, v50) != 1)
        {
          uint64_t v112 = v162;
          sub_2E4D0(v86, v162, &qword_1A24A0);
          v110(v112);
          sub_1248C(v112, &qword_1A24A0);
          uint64_t v111 = 0;
        }
        uint64_t v113 = v159;
        (*v150)(v51, v111, 1, v159);
        if ((*v149)(v51, 1, v113) == 1) {
          goto LABEL_69;
        }
        uint64_t v114 = (uint64_t (*)(char *, char *, uint64_t))*v157;
        uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))*v157)(v158, v51, v113);
        if (v54)
        {
          uint64_t v115 = v160;
          uint64_t v87 = (uint64_t)v153;
          BOOL v116 = __OFSUB__(v54--, 1);
          if (v116) {
            goto LABEL_74;
          }
          goto LABEL_67;
        }
        unint64_t v117 = *((void *)v160 + 3);
        if ((uint64_t)((v117 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_82;
        }
        int64_t v118 = v117 & 0xFFFFFFFFFFFFFFFELL;
        if (v118 <= 1) {
          uint64_t v119 = 1;
        }
        else {
          uint64_t v119 = v118;
        }
        sub_A314(&qword_19C550);
        uint64_t v120 = *(void *)(v155 + 72);
        uint64_t v121 = v140;
        uint64_t v115 = (double *)swift_allocObject();
        uint64_t result = j__malloc_size(v115);
        if (!v120) {
          goto LABEL_83;
        }
        uint64_t v122 = result - v121;
        if (result - v121 == 0x8000000000000000 && v120 == -1) {
          goto LABEL_89;
        }
        uint64_t v124 = v122 / v120;
        *((void *)v115 + 2) = v119;
        *((void *)v115 + 3) = 2 * (v122 / v120);
        uint64_t v125 = (char *)v115 + v121;
        unint64_t v126 = v160;
        uint64_t v127 = *((void *)v160 + 3) >> 1;
        uint64_t v128 = v127 * v120;
        if (*((void *)v160 + 2)) {
          break;
        }
LABEL_66:
        unint64_t v53 = &v125[v128];
        uint64_t v129 = (v124 & 0x7FFFFFFFFFFFFFFFLL) - v127;
        uint64_t result = swift_release();
        uint64_t v87 = (uint64_t)v153;
        uint64_t v113 = v159;
        BOOL v116 = __OFSUB__(v129, 1);
        uint64_t v54 = (char *)(v129 - 1);
        if (v116) {
          goto LABEL_74;
        }
LABEL_67:
        uint64_t result = v114(v53, v158, v113);
        uint64_t v50 = v156;
        v53 += *(void *)(v155 + 72);
        char v130 = *(unsigned char *)(v85 + 16);
        long long v160 = v115;
        if (v130) {
          goto LABEL_68;
        }
      }
      if (v115 < v160 || v125 >= (char *)v160 + v140 + v128)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v115 == v160)
        {
LABEL_65:
          v126[2] = 0.0;
          goto LABEL_66;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v126 = v160;
      goto LABEL_65;
    }
LABEL_68:
    __break(1u);
LABEL_69:
    sub_1248C(v161, &qword_1A24B8);
    sub_1248C(v51, &qword_19C150);
    uint64_t result = (uint64_t)v160;
    unint64_t v131 = *((void *)v160 + 3);
    if (v131 < 2) {
      return result;
    }
    unint64_t v132 = v131 >> 1;
    BOOL v116 = __OFSUB__(v132, v54);
    unint64_t v133 = v132 - (void)v54;
    if (!v116)
    {
      *((void *)v160 + 2) = v133;
      return result;
    }
    goto LABEL_92;
  }
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_10D454()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  void v23[4];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v14 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      uint64_t v18 = v0[1];
      uint64_t v19 = *(void *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        uint64_t v5 = (v19 - 1) & v19;
        unint64_t v6 = __clz(__rbit64(v19)) + (v16 << 6);
        int64_t v4 = v16;
        goto LABEL_3;
      }
      uint64_t v20 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          uint64_t v16 = v20;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            uint64_t v16 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v20 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v20);
            if (v19) {
              goto LABEL_10;
            }
            uint64_t v16 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              int64_t v4 = v17 - 1;
              uint64_t v21 = v3 + 6;
              while (v17 != v21)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v21++);
                if (v19)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_10D5F8()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18[8];
  uint64_t v19;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    uint64_t v8 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v18[0] = v7;
    uint64_t v19 = v8;
    v9(&v17, v18);
    return v17;
  }
  uint64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      uint64_t v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          uint64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          uint64_t v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            uint64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            uint64_t v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            uint64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              uint64_t v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              uint64_t v16 = v3 + 6;
              while (v12 != v16)
              {
                uint64_t v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  uint64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 9;
  }
  return result;
}

uint64_t sub_10D760@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)a2 = *(unsigned char *)result;
  *(void *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_10D774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_1463D0();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_145230();
  v3[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[12] = v6;
  v3[13] = *(void *)(v6 + 64);
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_145450();
  v3[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[16] = v8;
  v3[17] = *(void *)(v8 + 64);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10D900, 0, 0);
}

uint64_t sub_10D900()
{
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v25 = v0[17];
  uint64_t v4 = v0[11];
  uint64_t v23 = v0[12];
  uint64_t v24 = v0[14];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[8];
  uint64_t v29 = v0[10];
  uint64_t v21 = v0[6];
  uint64_t v22 = v0[7];
  uint64_t v26 = (void *)v0[5];
  uint64_t v19 = (void *)swift_allocObject();
  v0[19] = v19;
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = 0;
  v19[5] = _swiftEmptyArrayStorage;
  id v20 = [objc_allocWithZone((Class)NLTokenizer) initWithUnit:0];
  v0[20] = v20;
  sub_A314(&qword_1A2510);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1578A0;
  *(void *)(v5 + 32) = NLTagSchemeScript;
  id v6 = objc_allocWithZone((Class)NLTagger);
  type metadata accessor for NLTagScheme(0);
  uint64_t v7 = NLTagSchemeScript;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v6 initWithTagSchemes:isa];
  v0[21] = v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v21, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v11 = (v25 + *(unsigned __int8 *)(v23 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  v0[22] = v12;
  *((void *)v12 + 2) = v26;
  *((void *)v12 + 3) = v20;
  *((void *)v12 + 4) = v9;
  *((void *)v12 + 5) = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v12[v10], v1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v12[v11], v24, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v29, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v28);
  id v13 = v26;
  id v14 = v20;
  id v15 = v9;
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[23] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10DC2C;
  uint64_t v17 = v0[10];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v16, v17, sub_10F838, v12, (char *)&type metadata for () + 8);
}

uint64_t sub_10DC2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  uint64_t v3 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10DDA0, 0, 0);
}

uint64_t sub_10DDA0()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 152);

  swift_beginAccess();
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[5];
  swift_bridgeObjectRetain();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v7(v3, v4, v5, v6);
}

uint64_t sub_10DE80(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_145B70();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_1463D0();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_10DFAC, 0, 0);
}

uint64_t sub_10DFAC()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = (void *)v0[9];
  uint64_t v5 = swift_allocObject();
  v0[17] = v5;
  *(void *)(v5 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v6 = swift_allocObject();
  v0[18] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  id v7 = v4;
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[19] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10E100;
  uint64_t v9 = v0[16];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v8, v9, sub_10F4CC, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10E100()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[15] + 8))(v2[16], v2[14]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10E584;
  }
  else {
    uint64_t v3 = sub_10E284;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10E284()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v10 = v0[12];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  swift_beginAccess();
  v0[5] = *(void *)(v1 + 16);
  sub_A314(&qword_1A24C8);
  sub_A314(&qword_1A24D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1598D0;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_144CB0();
  swift_getKeyPath();
  sub_145B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v10, v2, v4);
  sub_144CA0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v0[6] = v5;
  sub_A314(&qword_1A24D8);
  sub_A314(&qword_1A24E0);
  sub_122D8(&qword_1A24E8, &qword_1A24D8);
  sub_122D8(&qword_1A24F0, &qword_1A24E0);
  sub_122D8(&qword_1A24F8, &qword_1A24D0);
  uint64_t v6 = sub_145D30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = sub_F55AC(v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(double *))v0[1];
  return v8(v7);
}

uint64_t sub_10E584()
{
  if (qword_19B030 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_1A2410);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v6;
    sub_146610();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Failed to fetch events for streaks: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  uint64_t v16 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[11];
  swift_beginAccess();
  v0[5] = *(void *)(v7 + 16);
  sub_A314(&qword_1A24C8);
  sub_A314(&qword_1A24D0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1598D0;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_144CB0();
  swift_getKeyPath();
  sub_145B60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v16, v8, v9);
  sub_144CA0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v0[6] = v11;
  sub_A314(&qword_1A24D8);
  sub_A314(&qword_1A24E0);
  sub_122D8(&qword_1A24E8, &qword_1A24D8);
  sub_122D8(&qword_1A24F0, &qword_1A24E0);
  sub_122D8(&qword_1A24F8, &qword_1A24D0);
  uint64_t v12 = sub_145D30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = sub_F55AC(v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(double *))v0[1];
  return v14(v13);
}

uint64_t sub_10EA0C(uint64_t a1)
{
  v1[4] = a1;
  sub_A314(&qword_1A2488);
  v1[5] = swift_task_alloc();
  v1[6] = sub_A314(&qword_1A2490);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_A314(&qword_1A2498);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_A314(&qword_1A24A0);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = sub_A314(&qword_19C938);
  v1[17] = swift_task_alloc();
  v1[18] = sub_A314(&qword_1A24A8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_10EC2C, 0, 0);
}

uint64_t sub_10EC2C()
{
  uint64_t v86 = v0;
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[4];
  uint64_t v66 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v67 = v6 + *(int *)(v66 + 28);
  sub_12428(v67, v3, &qword_19C938);
  sub_12428(v3, v1, &qword_19C938);
  uint64_t v71 = v5;
  uint64_t v7 = sub_39840(*(void *)(v3 + *(int *)(v5 + 32)));
  uint64_t v9 = v8;
  char v11 = v10;
  sub_1248C(v3, &qword_19C938);
  uint64_t v12 = v1 + *(int *)(v4 + 36);
  *(void *)uint64_t v12 = v7;
  *(void *)(v12 + 8) = v9;
  *(unsigned char *)(v12 + 16) = v11 & 1;
  uint64_t result = sub_2E4D0(v1, v2, &qword_1A24A8);
  uint64_t v69 = v2;
  uint64_t v14 = v2 + *(int *)(v4 + 36);
  if (*(unsigned char *)(v14 + 16)) {
    goto LABEL_34;
  }
  uint64_t v15 = 0;
  uint64_t v16 = *(int *)(v71 + 32);
  uint64_t v17 = v0[9];
  uint64_t v80 = v0[8];
  uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v18 = (uint64_t *)&_swiftEmptyDictionarySingleton;
  uint64_t v77 = v17;
  uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v75 = v14;
  uint64_t v76 = v0[13];
  uint64_t v68 = v16;
  while (1)
  {
    uint64_t v19 = *(void *)(v69 + v16);
    if (*(_DWORD *)(v19 + 36) != *(_DWORD *)(v14 + 8))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      return result;
    }
    uint64_t v20 = *(void *)v14;
    uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
    uint64_t v70 = v15;
    if (*(void *)v14 == v21) {
      break;
    }
    if (v20 < 0 || v20 >= v21) {
      goto LABEL_47;
    }
    if (((*(void *)(v19 + 8 * ((unint64_t)v20 >> 6) + 64) >> v20) & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v22 = v0[14];
    uint64_t v23 = (void *)(v22 + *(int *)(v76 + 48));
    uint64_t v78 = v0[20];
    uint64_t v72 = *(void *)(*(void *)(v19 + 48) + 8 * v20);
    uint64_t v73 = v0[15];
    uint64_t v24 = v0[17];
    uint64_t v25 = (uint64_t *)(*(void *)(v19 + 56) + 32 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v29 = v25[2];
    uint64_t v28 = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_140334(v72, v22);
    *uint64_t v23 = v27;
    v23[1] = v26;
    v23[2] = v29;
    v23[3] = v28;
    sub_12428(v22, v73, &qword_19C930);
    uint64_t v30 = (void *)(v73 + *(int *)(v76 + 48));
    *uint64_t v30 = v27;
    v30[1] = v26;
    _OWORD v30[2] = v29;
    v30[3] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1248C(v22, &qword_1A24A0);
    sub_12428(v78, v24, &qword_19C938);
    uint64_t result = *(void *)v75;
    if ((*(void *)v75 & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
    uint64_t v31 = *(void *)(v24 + *(int *)(v71 + 32));
    if (result >= -(-1 << *(unsigned char *)(v31 + 32))) {
      goto LABEL_49;
    }
    if (((*(void *)(v31 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
      goto LABEL_50;
    }
    if (*(_DWORD *)(v31 + 36) != *(_DWORD *)(v75 + 8)) {
      goto LABEL_51;
    }
    uint64_t v32 = v0[17];
    uint64_t v33 = sub_1466E0();
    uint64_t v34 = *(unsigned int *)(v31 + 36);
    *(void *)uint64_t v75 = v33;
    *(void *)(v75 + 8) = v34;
    *(unsigned char *)(v75 + 16) = 0;
    sub_1248C(v32, &qword_19C938);
    unint64_t v35 = (uint64_t *)v30[3];
    uint64_t v74 = v30[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85[0] = (uint64_t)v18;
    unint64_t v37 = v35[2];
    uint64_t v79 = v35;
    swift_bridgeObjectRetain();
    unint64_t v38 = 0;
    while (1)
    {
      if (v38 == v37)
      {
        uint64_t v43 = 1;
        unint64_t v38 = v37;
      }
      else
      {
        if (v38 >= v37) {
          goto LABEL_40;
        }
        sub_106078((uint64_t)v79+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v38, v0[12], type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v43 = 0;
        ++v38;
      }
      uint64_t v44 = v0[11];
      uint64_t v45 = v0[12];
      uint64_t v46 = v0[8];
      (*v83)(v45, v43, 1, v46);
      sub_2E4D0(v45, v44, &qword_1A2498);
      if ((*v81)(v44, 1, v46) == 1) {
        break;
      }
      uint64_t v47 = v0[10];
      sub_1100C4(v0[11], v47, type metadata accessor for InsightsDataManager.TopAssetCategory);
      unsigned __int8 v48 = *(unsigned char *)(v47 + *(int *)(v80 + 20));
      uint64_t v49 = *(void *)(v47 + *(int *)(v80 + 24));
      sub_1065D0(v47, type metadata accessor for InsightsDataManager.TopAssetCategory);
      unint64_t v35 = v18;
      unint64_t v51 = sub_137E14(v48);
      uint64_t v52 = v18[2];
      BOOL v53 = (v50 & 1) == 0;
      uint64_t v54 = v52 + v53;
      if (__OFADD__(v52, v53))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      char v55 = v50;
      if (v18[3] >= v54)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v50 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else
        {
          unint64_t v35 = v85;
          sub_13DF20();
          uint64_t v18 = (uint64_t *)v85[0];
          if ((v55 & 1) == 0) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        sub_13B300(v54, isUniquelyReferenced_nonNull_native & 1);
        uint64_t v18 = (uint64_t *)v85[0];
        unint64_t v35 = (uint64_t *)v85[0];
        unint64_t v56 = sub_137E14(v48);
        if ((v55 & 1) != (v57 & 1)) {
          goto LABEL_35;
        }
        unint64_t v51 = v56;
        if ((v55 & 1) == 0)
        {
LABEL_13:
          v18[(v51 >> 6) + 8] |= 1 << v51;
          *(unsigned char *)(v18[6] + v51) = v48;
          *(void *)(v18[7] + 8 * v51) = v49;
          uint64_t v39 = v18 + 2;
          uint64_t v40 = v18[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_41;
          }
          goto LABEL_14;
        }
      }
      uint64_t v39 = (uint64_t *)(v18[7] + 8 * v51);
      uint64_t v42 = *v39 + v49;
      if (__OFADD__(*v39, v49)) {
        goto LABEL_42;
      }
LABEL_14:
      *uint64_t v39 = v42;
      char isUniquelyReferenced_nonNull_native = 1;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = v70 + v74;
    if (__OFADD__(v70, v74)) {
      goto LABEL_52;
    }
    uint64_t result = sub_1248C(v0[15], &qword_19C930);
    uint64_t v14 = v75;
    uint64_t v16 = v68;
    if (*(unsigned char *)(v75 + 16))
    {
LABEL_34:
      __break(1u);
LABEL_35:
      return sub_146C20();
    }
  }
  sub_1248C(v0[20], &qword_1A24A8);
  uint64_t v58 = swift_bridgeObjectRetain();
  v85[0] = sub_F56B0(v58);
  swift_bridgeObjectRetain();
  sub_106CC4(v85, type metadata accessor for InsightsDataManager.TopAssetCategory, (uint64_t (*)(uint64_t))sub_10C5F0, sub_106D88);
  uint64_t v60 = v0[6];
  uint64_t v59 = v0[7];
  uint64_t v61 = v0[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v35 = (uint64_t *)v85[0];
  sub_12428(v67, v61, &qword_19C938);
  sub_12428(v61, v59, &qword_19C938);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v59 + *(int *)(v60 + 44));
  char *v62 = sub_103DF4;
  v62[1] = 0;
  sub_1248C(v61, &qword_1A2488);
  v85[0] = sub_10C618(v59);
  sub_106CC4(v85, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(uint64_t))sub_10C604, sub_107838);
LABEL_43:
  uint64_t v84 = v35;
  uint64_t v63 = v0[4];
  uint64_t v82 = v85[0];
  sub_1248C(v0[7], &qword_1A2490);
  uint64_t v64 = sub_F59F8(v63 + *(int *)(v66 + 24));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v0[1];
  return v65(v84, v82, v70, v64);
}

uint64_t sub_10F438()
{
  return sub_115C94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10F454()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10F48C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10F4CC()
{
  sub_103F4C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10F4E8()
{
  return sub_1228C((unint64_t *)&qword_19B748, &qword_19B750);
}

uint64_t sub_10F52C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if ((*(void *)a1 & 0xC000000000000001) != 0) {
    uint64_t result = sub_146710();
  }
  else {
    uint64_t result = *(void *)(*(void *)a1 + 16);
  }
  *a2 = result;
  return result;
}

const char *sub_10F574()
{
  return "poiCategory";
}

id sub_10F580@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 poiCategory];
  *a2 = result;
  return result;
}

uint64_t sub_10F5BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_145BC0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10F5E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10F620()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10F634()
{
  return sub_1056DC(*(void **)(v0 + 16));
}

uint64_t sub_10F650()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10F660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10F690()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10F6C8()
{
  uint64_t v1 = sub_145450();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_10F838()
{
  uint64_t v1 = *(void *)(sub_145450() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_145230() - 8);
  sub_FEF94(*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), v0 + v2, v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_10F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_993CC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_10F924()
{
  uint64_t v20 = sub_145230();
  uint64_t v1 = *(void *)(v20 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = (v2 + 16) & ~v2;
  unint64_t v16 = (*(void *)(v1 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = sub_145450();
  uint64_t v3 = *(void *)(v19 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v16 + v4 + 8) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = sub_144C60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v9 + 8) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v18 = v2 | v4 | v9 | 7;
  uint64_t v12 = (v11 + v9 + v10) & ~v9;
  uint64_t v13 = v12 + v11;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v17, v20);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v19);
  swift_release();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v14(v0 + v10, v7);
  v14(v0 + v12, v7);

  return _swift_deallocObject(v0, v13, v18);
}

void sub_10FB54()
{
  uint64_t v1 = *(void *)(sub_145230() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_145450() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_144C60() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  sub_FFD3C(v0 + v2, *(char **)(v0 + v3), (void (*)(char *, uint64_t))(v0 + v5), *(void *)(v0 + v6), v0 + ((v6 + v8 + 8) & ~v8), v0 + ((*(void *)(v7 + 64) + v8 + ((v6 + v8 + 8) & ~v8)) & ~v8));
}

const char *sub_10FCD4()
{
  return "createdDate";
}

uint64_t sub_10FCE0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_101F34(a1, (SEL *)&selRef_createdDate, a2);
}

void sub_10FD00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

const char *sub_10FD20()
{
  return "updatedDate";
}

uint64_t sub_10FD2C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_101F34(a1, (SEL *)&selRef_updatedDate, a2);
}

void sub_10FD4C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10FD6C()
{
  return sub_1451A0() & 1;
}

uint64_t sub_10FD9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10FDE4()
{
  uint64_t v1 = sub_145230();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_145450();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_10FF3C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_145230() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_145450() - 8);
  sub_FC110(*(void **)(v1 + 16), (void (*)(void, void, void))(v1 + v4), (void (**)(uint64_t, uint64_t))(v1+ ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))), a1);
}

uint64_t sub_110010@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_FED5C(a1, *(void *)(v2 + 16), a2);
}

uint64_t _s4YearVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2600);
}

uint64_t sub_110038@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_FEE90(a1, a2);
}

uint64_t _s5MonthVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2698);
}

const char *sub_110078()
{
  return "entryDate";
}

uint64_t sub_110084@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_101F34(a1, (SEL *)&selRef_entryDate, a2);
}

void sub_1100A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1100C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_11012C()
{
  return sub_115DFC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t *sub_110148(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_145490();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_110244(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_145490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1102D4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_110380(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_110444(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_1104E4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_110598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1105AC);
}

uint64_t sub_1105AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145490();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_110670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_110684);
}

uint64_t sub_110684(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_145490();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_110744()
{
  uint64_t result = sub_145490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1107F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_145490();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1108BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_145490();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_110924(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1109A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_110A1C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_110A98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_145490();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_110B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_110B28);
}

uint64_t sub_110B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_145490();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_110B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_110BAC);
}

uint64_t sub_110BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_145490();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_110C20()
{
  uint64_t result = sub_145490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_110CC4()
{
  return sub_39CC4();
}

uint64_t sub_110CDC()
{
  return sub_1069E4();
}

uint64_t sub_110CF4()
{
  return sub_106590();
}

uint64_t *sub_110D10(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145230();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_A314(&qword_19C150);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_A314(&qword_19C150);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_110FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145230();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_11113C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_1113AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_111738(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_1119A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_111D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_111D48);
}

uint64_t sub_111D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_111DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_111DCC);
}

uint64_t sub_111DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StreakSummary()
{
  uint64_t result = qword_1A2728;
  if (!qword_1A2728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_111E8C()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_111F28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v66 = sub_A314(&qword_1A2530);
  uint64_t v4 = __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v52 - v6;
  uint64_t v65 = sub_A314(&qword_1A2780);
  uint64_t v7 = __chkstk_darwin(v65);
  int v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v52 - v11;
  __chkstk_darwin(v10);
  uint64_t v64 = (uint64_t)&v52 - v12;
  uint64_t v13 = sub_A314(&qword_19C150);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  int v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = sub_145230();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v60 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v67 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v52 - v25;
  sub_12428(v2, (uint64_t)v18, &qword_19C150);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v27(v18, 1, v19) == 1)
  {
    uint64_t v28 = (uint64_t)v18;
LABEL_5:
    sub_1248C(v28, &qword_19C150);
    char v31 = 0;
    return v31 & 1;
  }
  uint64_t v58 = v9;
  uint64_t v59 = a1;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v29(v26, v18, v19);
  uint64_t v30 = type metadata accessor for StreakSummary();
  sub_12428(v2 + *(int *)(v30 + 24), (uint64_t)v16, &qword_19C150);
  if (v27(v16, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    uint64_t v28 = (uint64_t)v16;
    goto LABEL_5;
  }
  uint64_t v32 = v67;
  v29(v67, v16, v19);
  uint64_t v33 = sub_113784((unint64_t *)&qword_19C940);
  uint64_t result = sub_145A80();
  if (result)
  {
    unint64_t v35 = v26;
    uint64_t v36 = *(int *)(v66 + 48);
    uint64_t v37 = v66;
    uint64_t v54 = v29;
    unint64_t v38 = v62;
    uint64_t v39 = &v62[v36];
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    char v55 = v40;
    char v57 = v35;
    ((void (*)(char *))v40)(v62);
    uint64_t v56 = v33;
    BOOL v41 = v39;
    BOOL v53 = v39;
    v40(v39, (uint64_t)v32, v19);
    uint64_t v42 = v63;
    uint64_t v43 = &v63[*(int *)(v37 + 48)];
    v40(v63, (uint64_t)v38, v19);
    v40(v43, (uint64_t)v41, v19);
    uint64_t v44 = (uint64_t)v61;
    uint64_t v45 = v54;
    v54(v61, v42, v19);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
    v46(v43, v19);
    uint64_t v47 = &v42[*(int *)(v66 + 48)];
    v45(v42, v38, v19);
    v45(v47, v53, v19);
    v45((char *)(v44 + *(int *)(v65 + 36)), v47, v19);
    v46(v42, v19);
    uint64_t v48 = v64;
    sub_1137C8(v44, v64);
    uint64_t v49 = v59;
    LOBYTE(v38) = sub_145A80();
    char v50 = v60;
    v55(v60, v49, v19);
    uint64_t v51 = (uint64_t)v58;
    sub_12428(v48, (uint64_t)v58, &qword_1A2780);
    if (v38) {
      char v31 = sub_145A60();
    }
    else {
      char v31 = 0;
    }
    sub_1248C(v51, &qword_1A2780);
    v46(v50, v19);
    sub_1248C(v48, &qword_1A2780);
    v46(v67, v19);
    v46(v57, v19);
    return v31 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_112524(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A2778);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_113608();
  sub_146D10();
  char v12 = 0;
  sub_145230();
  sub_113784(&qword_19D0B8);
  sub_146AD0();
  if (!v1)
  {
    type metadata accessor for StreakSummary();
    char v11 = 1;
    sub_146AD0();
    char v10 = 2;
    sub_146AD0();
    char v9 = 3;
    sub_146B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_112738@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v30 - v7;
  __chkstk_darwin(v6);
  uint64_t v39 = (uint64_t)&v30 - v8;
  uint64_t v40 = sub_A314(&qword_1A2768);
  uint64_t v35 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StreakSummary();
  char v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_145230();
  int v16 = *(void (**)(void))(*(void *)(v15 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  uint64_t v34 = &v14[v12[7]];
  v16();
  uint64_t v17 = (uint64_t)&v14[v12[8]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(v17, 1, 1, v15);
  uint64_t v18 = v12[9];
  *(void *)&v14[v18] = 0;
  sub_2F114(a1, a1[3]);
  sub_113608();
  unint64_t v38 = v10;
  uint64_t v19 = v41;
  sub_146D00();
  uint64_t v20 = (uint64_t)a1;
  if (!v19)
  {
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    BOOL v41 = a1;
    uint64_t v22 = (uint64_t)v36;
    uint64_t v21 = (uint64_t)v37;
    uint64_t v23 = v35;
    char v45 = 0;
    uint64_t v24 = sub_113784(&qword_19D0A0);
    uint64_t v25 = v38;
    sub_146A20();
    sub_1136B8(v39, (uint64_t)v14);
    char v44 = 1;
    uint64_t v39 = v24;
    sub_146A20();
    sub_1136B8(v22, (uint64_t)v34);
    char v43 = 2;
    sub_146A20();
    sub_1136B8(v21, v31);
    char v42 = 3;
    uint64_t v27 = v40;
    uint64_t v28 = sub_146A50();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v27);
    uint64_t v29 = v33;
    uint64_t v20 = (uint64_t)v41;
    *(void *)&v14[v32] = v28;
    sub_113720((uint64_t)v14, v29);
  }
  sub_C7FC(v20);
  return sub_11365C((uint64_t)v14);
}

uint64_t sub_112B5C()
{
  uint64_t result = 0x7473726966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953718636;
      break;
    case 2:
      uint64_t result = 0x6E4F676E69646E65;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_112BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_113A3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_112C08(uint64_t a1)
{
  unint64_t v2 = sub_113608();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_112C44(uint64_t a1)
{
  unint64_t v2 = sub_113608();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_112C80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_112738(a1, a2);
}

uint64_t sub_112C98(void *a1)
{
  return sub_112524(a1);
}

BOOL sub_112CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145230();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v77 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_A314(&qword_19DCC0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v71 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v76 = &v66[-v11];
  __chkstk_darwin(v10);
  uint64_t v13 = &v66[-v12];
  uint64_t v14 = sub_A314(&qword_19C150);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v69 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v70 = &v66[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v72 = &v66[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v73 = &v66[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v79 = &v66[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v75 = &v66[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = &v66[-v28];
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = &v66[-v31];
  __chkstk_darwin(v30);
  uint64_t v34 = &v66[-v33];
  sub_12428(a1, (uint64_t)&v66[-v33], &qword_19C150);
  uint64_t v80 = a2;
  sub_12428(a2, (uint64_t)v32, &qword_19C150);
  uint64_t v78 = v7;
  uint64_t v35 = (uint64_t)&v13[*(int *)(v7 + 48)];
  sub_12428((uint64_t)v34, (uint64_t)v13, &qword_19C150);
  sub_12428((uint64_t)v32, v35, &qword_19C150);
  uint64_t v81 = v5;
  uint64_t v36 = *(unsigned int (**)(void, void, void))(v5 + 48);
  if (v36(v13, 1, v4) == 1)
  {
    sub_1248C((uint64_t)v32, &qword_19C150);
    sub_1248C((uint64_t)v34, &qword_19C150);
    if (v36(v35, 1, v4) == 1)
    {
      uint64_t v74 = v36;
      sub_1248C((uint64_t)v13, &qword_19C150);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v37 = (uint64_t)v13;
LABEL_21:
    sub_1248C(v37, &qword_19DCC0);
    return 0;
  }
  sub_12428((uint64_t)v13, (uint64_t)v29, &qword_19C150);
  if (v36(v35, 1, v4) == 1)
  {
    sub_1248C((uint64_t)v32, &qword_19C150);
    sub_1248C((uint64_t)v34, &qword_19C150);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v29, v4);
    goto LABEL_6;
  }
  uint64_t v74 = v36;
  uint64_t v38 = v81;
  uint64_t v39 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v35, v4);
  sub_113784((unint64_t *)&qword_19EB60);
  int v67 = sub_145AD0();
  uint64_t v68 = a1;
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  v40(v39, v4);
  sub_1248C((uint64_t)v32, &qword_19C150);
  sub_1248C((uint64_t)v34, &qword_19C150);
  v40(v29, v4);
  a1 = v68;
  sub_1248C((uint64_t)v13, &qword_19C150);
  if ((v67 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v41 = type metadata accessor for StreakSummary();
  char v42 = v75;
  sub_12428(a1 + *(int *)(v41 + 20), (uint64_t)v75, &qword_19C150);
  char v43 = v79;
  sub_12428(v80 + *(int *)(v41 + 20), (uint64_t)v79, &qword_19C150);
  char v44 = v76;
  uint64_t v45 = (uint64_t)&v76[*(int *)(v78 + 48)];
  sub_12428((uint64_t)v42, (uint64_t)v76, &qword_19C150);
  sub_12428((uint64_t)v43, v45, &qword_19C150);
  uint64_t v46 = v74;
  if (v74(v44, 1, v4) != 1)
  {
    uint64_t v68 = v41;
    uint64_t v47 = v73;
    sub_12428((uint64_t)v44, (uint64_t)v73, &qword_19C150);
    if (v46(v45, 1, v4) != 1)
    {
      uint64_t v74 = v46;
      uint64_t v48 = (uint64_t)v42;
      uint64_t v49 = v81;
      char v50 = v77;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v45, v4);
      sub_113784((unint64_t *)&qword_19EB60);
      char v51 = sub_145AD0();
      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
      v52(v50, v4);
      sub_1248C((uint64_t)v79, &qword_19C150);
      sub_1248C(v48, &qword_19C150);
      v52(v47, v4);
      sub_1248C((uint64_t)v44, &qword_19C150);
      uint64_t v41 = v68;
      if ((v51 & 1) == 0) {
        return 0;
      }
      goto LABEL_15;
    }
    sub_1248C((uint64_t)v79, &qword_19C150);
    sub_1248C((uint64_t)v42, &qword_19C150);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v47, v4);
    goto LABEL_13;
  }
  sub_1248C((uint64_t)v43, &qword_19C150);
  sub_1248C((uint64_t)v42, &qword_19C150);
  if (v46(v45, 1, v4) != 1)
  {
LABEL_13:
    uint64_t v37 = (uint64_t)v44;
    goto LABEL_21;
  }
  uint64_t v74 = v46;
  sub_1248C((uint64_t)v44, &qword_19C150);
LABEL_15:
  BOOL v53 = v72;
  sub_12428(a1 + *(int *)(v41 + 24), (uint64_t)v72, &qword_19C150);
  uint64_t v68 = v41;
  uint64_t v54 = v80 + *(int *)(v41 + 24);
  char v55 = v70;
  sub_12428(v54, (uint64_t)v70, &qword_19C150);
  uint64_t v56 = v71;
  uint64_t v57 = (uint64_t)&v71[*(int *)(v78 + 48)];
  sub_12428((uint64_t)v53, (uint64_t)v71, &qword_19C150);
  sub_12428((uint64_t)v55, v57, &qword_19C150);
  uint64_t v58 = v74;
  if (v74(v56, 1, v4) == 1)
  {
    sub_1248C((uint64_t)v55, &qword_19C150);
    sub_1248C((uint64_t)v53, &qword_19C150);
    if (v58(v57, 1, v4) == 1)
    {
      sub_1248C((uint64_t)v56, &qword_19C150);
      return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
    }
    goto LABEL_20;
  }
  uint64_t v59 = v69;
  sub_12428((uint64_t)v56, (uint64_t)v69, &qword_19C150);
  if (v58(v57, 1, v4) == 1)
  {
    sub_1248C((uint64_t)v55, &qword_19C150);
    sub_1248C((uint64_t)v53, &qword_19C150);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v59, v4);
LABEL_20:
    uint64_t v37 = (uint64_t)v56;
    goto LABEL_21;
  }
  uint64_t v61 = (uint64_t)v55;
  uint64_t v62 = v81;
  uint64_t v63 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v57, v4);
  sub_113784((unint64_t *)&qword_19EB60);
  char v64 = sub_145AD0();
  uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
  v65(v63, v4);
  sub_1248C(v61, &qword_19C150);
  sub_1248C((uint64_t)v72, &qword_19C150);
  v65(v59, v4);
  sub_1248C((uint64_t)v56, &qword_19C150);
  if (v64) {
    return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
  }
  return 0;
}

unint64_t sub_113608()
{
  unint64_t result = qword_1A2770;
  if (!qword_1A2770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2770);
  }
  return result;
}

uint64_t sub_11365C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1136B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_113720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_113784(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_145230();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1137C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_1A2780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StreakSummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1138FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreakSummary.CodingKeys()
{
  return &type metadata for StreakSummary.CodingKeys;
}

unint64_t sub_113938()
{
  unint64_t result = qword_1A2788;
  if (!qword_1A2788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2788);
  }
  return result;
}

unint64_t sub_113990()
{
  unint64_t result = qword_1A2790;
  if (!qword_1A2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2790);
  }
  return result;
}

unint64_t sub_1139E8()
{
  unint64_t result = qword_1A2798;
  if (!qword_1A2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2798);
  }
  return result;
}

uint64_t sub_113A3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953718636 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E4F676E69646E65 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_113BE0(unint64_t a1)
{
  int v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = sub_115670((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 4, v7 + 6, 16 * v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_113CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)(a3 + 40);
    do
    {
      if (*v7)
      {
        if (a2)
        {
          BOOL v8 = *(v7 - 1) == a1 && *v7 == a2;
          if (v8 || (sub_146B90() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v7 += 2;
      ++v6;
    }
    while (v3 != v6);
  }
  return 0;
}

uint64_t sub_113D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,double a23,unsigned __int8 a24,double a25,unsigned __int8 a26,uint64_t a27,unsigned __int8 a28)
{
  int v121 = a8;
  double v107 = *(double *)&a7;
  uint64_t v105 = a6;
  uint64_t v106 = a5;
  uint64_t v126 = a2;
  uint64_t v120 = a1;
  int v122 = a24;
  int v123 = a26;
  uint64_t v22 = sub_1452C0();
  __chkstk_darwin(v22 - 8);
  uint64_t v113 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_A314(&qword_1A27A0);
  __chkstk_darwin(v24 - 8);
  int64_t v118 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_A314(&qword_1A27A8);
  uint64_t v116 = *(void *)(v26 - 8);
  uint64_t v117 = v26;
  __chkstk_darwin(v26);
  uint64_t v115 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_A314(&qword_1A27B0);
  uint64_t v111 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v109 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_A314(&qword_1A27B8);
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_A314(&qword_1A27C0);
  uint64_t v119 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v124 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_A314(&qword_19C150);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v34 = (char *)&v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v104 - v35;
  uint64_t v37 = sub_145230();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v104 = (char *)&v104 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  char v42 = (char *)&v104 - v41;
  if ((a22 & 1) != 0 || a21 < 2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_19AD38 != -1) {
      swift_once();
    }
    sub_A314(&qword_1A0A00);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1578A0;
    *(void *)(v43 + 56) = &type metadata for Int;
    *(void *)(v43 + 64) = &protocol witness table for Int;
    *(void *)(v43 + 32) = a21;
    a3 = sub_145B90();
    a4 = v44;
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = sub_7E1CC(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v47 = *((void *)v45 + 2);
  unint64_t v46 = *((void *)v45 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v45 = sub_7E1CC((double *)(v46 > 1), v47 + 1, 1, v45);
  }
  *((void *)v45 + 2) = v47 + 1;
  uint64_t v48 = &v45[2 * v47];
  *((void *)v48 + 4) = a3;
  unsigned __int8 v49 = a28;
  *((void *)v48 + 5) = a4;
  uint64_t v129 = v45;
  if (v122)
  {
    sub_2647C(v106, (uint64_t)v36);
    char v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v55(v36, 1, v37) == 1)
    {
      sub_1248C((uint64_t)v36, &qword_19C150);
    }
    else
    {
      int v122 = a28;
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v56(v42, v36, v37);
      sub_2647C(v105, (uint64_t)v34);
      if (v55(v34, 1, v37) == 1)
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
        sub_1248C((uint64_t)v34, &qword_19C150);
        unsigned __int8 v49 = v122;
        char v57 = v123;
        if (v123) {
          goto LABEL_34;
        }
        goto LABEL_35;
      }
      v56(v104, v34, v37);
      sub_145130();
      if (qword_19AF98 != -1)
      {
        double v103 = v61;
        swift_once();
        double v61 = v103;
      }
      id v62 = [(id)qword_19FC68 stringFromTimeInterval:v61 + 0.5];
      unsigned __int8 v49 = v122;
      if (v62)
      {
        uint64_t v63 = v62;
        uint64_t v64 = sub_145BC0();
        uint64_t v66 = v65;
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v66 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v45 = sub_7E1CC(0, *((void *)v45 + 2) + 1, 1, v45);
      }
      unint64_t v68 = *((void *)v45 + 2);
      unint64_t v67 = *((void *)v45 + 3);
      if (v68 >= v67 >> 1) {
        uint64_t v45 = sub_7E1CC((double *)(v67 > 1), v68 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v68 + 1;
      uint64_t v69 = &v45[2 * v68];
      *((void *)v69 + 4) = v64;
      *((void *)v69 + 5) = v66;
      uint64_t v129 = v45;
      uint64_t v70 = *(void (**)(char *, uint64_t))(v38 + 8);
      v70(v104, v37);
      v70(v42, v37);
    }
  }
  else
  {
    if (qword_19AF98 != -1) {
      swift_once();
    }
    id v50 = [(id)qword_19FC68 stringFromTimeInterval:a23 + 0.5];
    if (v50)
    {
      char v51 = v50;
      uint64_t v52 = sub_145BC0();
      uint64_t v54 = v53;
    }
    else
    {
      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    unint64_t v59 = *((void *)v45 + 2);
    unint64_t v58 = *((void *)v45 + 3);
    if (v59 >= v58 >> 1) {
      uint64_t v45 = sub_7E1CC((double *)(v58 > 1), v59 + 1, 1, v45);
    }
    *((void *)v45 + 2) = v59 + 1;
    uint64_t v60 = &v45[2 * v59];
    *((void *)v60 + 4) = v52;
    *((void *)v60 + 5) = v54;
    uint64_t v129 = v45;
  }
  char v57 = v123;
  if (v123)
  {
LABEL_34:
    if (v121) {
      goto LABEL_46;
    }
  }
LABEL_35:
  if (v57) {
    a25 = v107;
  }
  if (a25 > 0.0)
  {
    id v72 = [self _quantityWithBeatsPerMinute:a25];
    id v73 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
    id v74 = [v73 localizedStringWithHeartRate:v72 unitStyle:3];
    if (v74)
    {
      uint64_t v75 = v74;
      uint64_t v76 = sub_145BC0();
      uint64_t v78 = v77;
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v78 = 0;
    }
    uint64_t v79 = v129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v79 = sub_7E1CC(0, *((void *)v79 + 2) + 1, 1, v79);
    }
    unint64_t v81 = *((void *)v79 + 2);
    unint64_t v80 = *((void *)v79 + 3);
    if (v81 >= v80 >> 1) {
      uint64_t v79 = sub_7E1CC((double *)(v80 > 1), v81 + 1, 1, v79);
    }
    *((void *)v79 + 2) = v81 + 1;
    uint64_t v82 = &v79[2 * v81];
    *((void *)v82 + 4) = v76;
    *((void *)v82 + 5) = v78;

    uint64_t v129 = v79;
  }
LABEL_46:
  if (v49 & 1) != 0 && (a18)
  {
    uint64_t v83 = v129;
  }
  else
  {
    id v84 = [self kilocalories];
    sub_115544();
    sub_144A30();
    uint64_t v85 = v109;
    sub_144A40();
    uint64_t v86 = v115;
    sub_144E00();
    sub_1452A0();
    sub_115584();
    uint64_t v87 = (uint64_t)v118;
    sub_144DD0();
    uint64_t v88 = sub_A314(&qword_1A27D8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
    uint64_t v89 = v108;
    sub_1449A0();
    sub_1248C(v87, &qword_1A27A0);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v86, v117);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v85, v114);
    sub_1155D8();
    uint64_t v90 = v112;
    sub_144A50();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v89, v90);
    uint64_t v91 = v127;
    uint64_t v92 = v128;
    uint64_t v83 = v129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v83 = sub_7E1CC(0, *((void *)v83 + 2) + 1, 1, v83);
    }
    unint64_t v94 = *((void *)v83 + 2);
    unint64_t v93 = *((void *)v83 + 3);
    if (v94 >= v93 >> 1) {
      uint64_t v83 = sub_7E1CC((double *)(v93 > 1), v94 + 1, 1, v83);
    }
    *((void *)v83 + 2) = v94 + 1;
    uint64_t v95 = &v83[2 * v94];
    *((void *)v95 + 4) = v91;
    *((void *)v95 + 5) = v92;
    uint64_t v129 = v83;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v124, v125);
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v83 = sub_7E1CC(0, *((void *)v83 + 2) + 1, 1, v83);
  }
  unint64_t v97 = *((void *)v83 + 2);
  unint64_t v96 = *((void *)v83 + 3);
  if (v97 >= v96 >> 1) {
    uint64_t v83 = sub_7E1CC((double *)(v96 > 1), v97 + 1, 1, v83);
  }
  *((void *)v83 + 2) = v97 + 1;
  uint64_t v98 = &v83[2 * v97];
  *((void *)v98 + 4) = a19;
  *((void *)v98 + 5) = a20;
  uint64_t v129 = v83;
  if (v126)
  {
    uint64_t v99 = sub_113CC0(v120, v126, (uint64_t)v83);
    if ((v100 & 1) == 0 && !v99)
    {
      sub_113BE0(0);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v101 = sub_64620(8236, 0xE200000000000000, (uint64_t)v129);
  swift_bridgeObjectRelease();
  return v101;
}

uint64_t sub_1149C8()
{
  uint64_t v1 = sub_A314(&qword_19C508);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_32174((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C508);
    return 0;
  }
  unint64_t v47 = _s16WorkoutIconAssetC15WorkoutIconDataVMa;
  sub_115684((uint64_t)v3, (uint64_t)v7, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v4[7];
  uint64_t v44 = (uint64_t)v7 + v4[6];
  uint64_t v45 = (uint64_t)v7 + v10;
  uint64_t v46 = v8;
  uint64_t v11 = v4[9];
  uint64_t v12 = (char *)v7 + v4[8];
  uint64_t v13 = *(void *)v12;
  int v43 = v12[8];
  uint64_t v41 = *(uint64_t *)((char *)v7 + v11);
  uint64_t v42 = v13;
  int v40 = *((unsigned __int8 *)v7 + v11 + 8);
  uint64_t v14 = (uint64_t *)((char *)v7 + v4[11]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = (char *)v7 + v4[12];
  uint64_t v38 = *(void *)v17;
  uint64_t v39 = v15;
  char v18 = v17[8];
  uint64_t v19 = (double *)((char *)v7 + v4[13]);
  double v20 = *v19;
  unsigned __int8 v21 = *((unsigned char *)v19 + 8);
  uint64_t v22 = v4[17];
  uint64_t v23 = (double *)((char *)v7 + v4[16]);
  double v24 = *v23;
  unsigned __int8 v25 = *((unsigned char *)v23 + 8);
  uint64_t v26 = *(uint64_t *)((char *)v7 + v22);
  unsigned __int8 v27 = *((unsigned char *)v7 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_113D60(0, 0, v46, v9, v44, v45, v42, v43, v28, v29, v30, v31, v32, v33, v34, v35, v41, v40, v39,
          v16,
          v38,
          v18,
          v20,
          v21,
          v24,
          v25,
          v26,
          v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1156EC((uint64_t)v7, v47);
  return v36;
}

uint64_t sub_114CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_A314(&qword_19C508);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)&v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  swift_retain();
  sub_32174((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v7, &qword_19C508);
    return 0;
  }
  uint64_t v53 = _s16WorkoutIconAssetC15WorkoutIconDataVMa;
  sub_115684((uint64_t)v7, (uint64_t)v11, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = v8[7];
  uint64_t v50 = (uint64_t)v11 + v8[6];
  uint64_t v51 = (uint64_t)v11 + v14;
  uint64_t v52 = v12;
  uint64_t v15 = v8[9];
  uint64_t v16 = (char *)v11 + v8[8];
  uint64_t v17 = *(void *)v16;
  int v49 = v16[8];
  uint64_t v47 = *(uint64_t *)((char *)v11 + v15);
  uint64_t v48 = v17;
  int v46 = *((unsigned __int8 *)v11 + v15 + 8);
  uint64_t v18 = v8[12];
  uint64_t v19 = (uint64_t *)((char *)v11 + v8[11]);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v44 = a2;
  uint64_t v45 = v20;
  uint64_t v43 = *(uint64_t *)((char *)v11 + v18);
  int v42 = *((unsigned __int8 *)v11 + v18 + 8);
  uint64_t v22 = (double *)((char *)v11 + v8[13]);
  double v23 = *v22;
  unsigned __int8 v24 = *((unsigned char *)v22 + 8);
  uint64_t v25 = v8[17];
  uint64_t v26 = (double *)((char *)v11 + v8[16]);
  double v27 = *v26;
  unsigned __int8 v28 = *((unsigned char *)v26 + 8);
  uint64_t v29 = *(uint64_t *)((char *)v11 + v25);
  unsigned __int8 v30 = *((unsigned char *)v11 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_113D60(a1, v44, v52, v13, v50, v51, v48, v49, v31, v32, v33, v34, v35, v36, v37, v38, v47, v46, v45,
          v21,
          v43,
          v42,
          v23,
          v24,
          v27,
          v28,
          v29,
          v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1156EC((uint64_t)v11, v53);
  return v39;
}

uint64_t sub_114F94(uint64_t a1, uint64_t a2)
{
  return sub_114CA4(a1, a2);
}

uint64_t sub_114FB8()
{
  return sub_1149C8();
}

uint64_t sub_114FDC()
{
  uint64_t v1 = sub_A314(&qword_19D0C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_3033C((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19D0C0);
    return 0;
  }
  sub_115684((uint64_t)v3, (uint64_t)v7, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v8 = *((void *)v7 + 2);
  uint64_t v9 = *((void *)v7 + 3);
  uint64_t v10 = v4[8];
  double v31 = &v7[v4[7]];
  double v32 = &v7[v10];
  uint64_t v33 = v8;
  uint64_t v11 = v4[10];
  uint64_t v12 = &v7[v4[9]];
  uint64_t v13 = *(void *)v12;
  int v14 = v12[8];
  uint64_t v15 = *(void *)&v7[v11];
  char v16 = v7[v11 + 8];
  uint64_t v17 = (uint64_t *)&v7[v4[12]];
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_113D60(0, 0, v33, v9, (uint64_t)v31, (uint64_t)v32, v13, v14, v20, v21, v22, v23, v24, v25, v26, v27, v15, v16, v18,
          v19,
          0,
          1,
          0.0,
          1u,
          0.0,
          1u,
          0,
          1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1156EC((uint64_t)v7, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  return v28;
}

uint64_t sub_115264(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_A314(&qword_19D0C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  swift_retain();
  sub_3033C((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v7, &qword_19D0C0);
    return 0;
  }
  int v40 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa;
  sub_115684((uint64_t)v7, (uint64_t)v11, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v12 = *((void *)v11 + 2);
  uint64_t v38 = a2;
  uint64_t v39 = v12;
  uint64_t v13 = *((void *)v11 + 3);
  uint64_t v14 = v8[8];
  double v36 = &v11[v8[7]];
  double v37 = &v11[v14];
  uint64_t v15 = v8[10];
  char v16 = &v11[v8[9]];
  uint64_t v17 = *(void *)v16;
  int v18 = v16[8];
  uint64_t v19 = *(void *)&v11[v15];
  char v20 = v11[v15 + 8];
  double v21 = (uint64_t *)&v11[v8[12]];
  uint64_t v22 = a1;
  uint64_t v24 = *v21;
  uint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_113D60(v22, v38, v39, v13, (uint64_t)v36, (uint64_t)v37, v17, v18, v25, v26, v27, v28, v29, v30, v31, v32, v19, v20, v24,
          v23,
          0,
          1,
          0.0,
          1u,
          0.0,
          1u,
          0,
          1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1156EC((uint64_t)v11, v40);
  return v33;
}

uint64_t sub_1154FC(uint64_t a1, uint64_t a2)
{
  return sub_115264(a1, a2);
}

uint64_t sub_115520()
{
  return sub_114FDC();
}

unint64_t sub_115544()
{
  unint64_t result = qword_1A27C8;
  if (!qword_1A27C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1A27C8);
  }
  return result;
}

unint64_t sub_115584()
{
  unint64_t result = qword_1A27D0;
  if (!qword_1A27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A27D0);
  }
  return result;
}

unint64_t sub_1155D8()
{
  unint64_t result = qword_1A27E0;
  if (!qword_1A27E0)
  {
    sub_12244(&qword_1A27B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A27E0);
  }
  return result;
}

double *sub_115634(uint64_t a1)
{
  return sub_7DA3C(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_115648(unint64_t a1)
{
  return sub_7DB4C(0, *(void *)(a1 + 16), 0, a1);
}

double *sub_11565C(uint64_t a1)
{
  return sub_7DB80(0, *(void *)(a1 + 16), 0, (double *)a1);
}

double *sub_115670(uint64_t a1)
{
  return sub_7E1CC(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_115684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1156EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_11574C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_145230();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(a1, 1, 1, v2);
  unint64_t v4 = (int *)type metadata accessor for StreakSummary();
  v3(a1 + v4[5], 1, 1, v2);
  v3(a1 + v4[6], 1, 1, v2);
  *(void *)(a1 + v4[7]) = 0;
  uint64_t v5 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v6 = a1 + v5[5];
  v3(v6, 1, 1, v2);
  v3(v6 + v4[5], 1, 1, v2);
  v3(v6 + v4[6], 1, 1, v2);
  *(void *)(v6 + v4[7]) = 0;
  uint64_t v7 = a1 + v5[6];
  v3(v7, 1, 1, v2);
  v3(v7 + v4[5], 1, 1, v2);
  v3(v7 + v4[6], 1, 1, v2);
  *(void *)(v7 + v4[7]) = 0;
  uint64_t v8 = a1 + v5[7];
  v3(v8, 1, 1, v2);
  v3(v8 + v4[5], 1, 1, v2);
  v3(v8 + v4[6], 1, 1, v2);
  *(void *)(v8 + v4[7]) = 0;
  uint64_t v9 = a1 + v5[8];
  v3(v9, 1, 1, v2);
  v3(v9 + v4[5], 1, 1, v2);
  v3(v9 + v4[6], 1, 1, v2);
  *(void *)(v9 + v4[7]) = 0;
  uint64_t v10 = a1 + v5[9];
  v3(v10, 1, 1, v2);
  v3(v10 + v4[5], 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v10 + v4[6], 1, 1, v2);
  *(void *)(v10 + v4[7]) = 0;
  return result;
}

uint64_t sub_115A44@<X0>(uint64_t a1@<X8>)
{
  return sub_116000(&OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate, a1);
}

uint64_t sub_115A6C(uint64_t a1, uint64_t a2)
{
  return sub_116108(a1, a2, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
}

id sub_115AA0()
{
  uint64_t v1 = OBJC_IVAR____TtC15JournalSettings19InsightsDataManager____lazy_storage___workContext;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager____lazy_storage___workContext);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager____lazy_storage___workContext);
  }
  else
  {
    id v4 = [*(id *)(v0 + 16) newBackgroundContext];
    NSString v5 = sub_145B80();
    [v4 setName:v5];

    id v6 = [self mergeByPropertyStoreTrumpMergePolicy];
    [v4 setMergePolicy:v6];

    [v4 setAutomaticallyMergesChangesFromParent:1];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_115B98@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_122A14(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v4 = sub_145450();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_115C94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v4 = sub_145450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_115D30@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_122A14(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate;
  swift_beginAccess();
  return sub_2647C(v3, a1);
}

uint64_t sub_115DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate;
  swift_beginAccess();
  sub_120024(a2, v3);
  return swift_endAccess();
}

uint64_t sub_115E68()
{
  swift_getKeyPath();
  sub_122A14(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_115F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v5 = (void *)(a1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount);
  *NSString v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_115F7C@<X0>(uint64_t a1@<X8>)
{
  return sub_116000(&OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup, a1);
}

uint64_t sub_115FA4(uint64_t a1, uint64_t a2)
{
  return sub_116108(a1, a2, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
}

uint64_t sub_115FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_116000(&OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks, a1);
}

uint64_t sub_116000@<X0>(void *a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_122A14(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_1215F0(v7, a3, a2);
}

uint64_t sub_1160D4(uint64_t a1, uint64_t a2)
{
  return sub_116108(a1, a2, &OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks);
}

uint64_t sub_116108(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_11F4C0(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_116178()
{
  swift_getKeyPath();
  sub_122A14(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_116250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v5 = (void *)(a1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime);
  *NSString v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1162D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_116384(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__places) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1163C8()
{
  sub_121678(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar;
  uint64_t v2 = sub_145450();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_36894(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate);
  swift_bridgeObjectRelease();
  sub_121678(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  sub_121678(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager___observationRegistrar;
  uint64_t v4 = sub_145540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_116578()
{
  sub_1163C8();

  return swift_deallocClassInstance();
}

uint64_t sub_1165D0()
{
  return type metadata accessor for InsightsDataManager(0);
}

uint64_t type metadata accessor for InsightsDataManager(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2868);
}

void sub_1165F8()
{
  type metadata accessor for InsightsDataManager.LastUpdate(319);
  if (v0 <= 0x3F)
  {
    sub_145450();
    if (v1 <= 0x3F)
    {
      sub_408C0();
      if (v2 <= 0x3F)
      {
        type metadata accessor for InsightsDataManager.EntrySummaryGroup(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for InsightsDataManager.Streaks(319);
          if (v4 <= 0x3F)
          {
            sub_145540();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for InsightsDataManager.LastUpdate(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2CE8);
}

uint64_t type metadata accessor for InsightsDataManager.EntrySummaryGroup(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A2C40);
}

uint64_t type metadata accessor for InsightsDataManager.Streaks(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2BA0);
}

ValueMetadata *type metadata accessor for InsightsDataManager.PlacesGroup()
{
  return &type metadata for InsightsDataManager.PlacesGroup;
}

uint64_t destroy for InsightsDataManager.AllTimeGroup()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InsightsDataManager.AllTimeGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.AllTimeGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InsightsDataManager.AllTimeGroup(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.AllTimeGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.AllTimeGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.AllTimeGroup()
{
  return &type metadata for InsightsDataManager.AllTimeGroup;
}

uint64_t destroy for InsightsDataManager.WordCountGroup()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InsightsDataManager.WordCountGroup(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.WordCountGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InsightsDataManager.WordCountGroup(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.WordCountGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.WordCountGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.WordCountGroup()
{
  return &type metadata for InsightsDataManager.WordCountGroup;
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.Option(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x116C90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.Option()
{
  return &type metadata for InsightsDataManager.Option;
}

uint64_t *sub_116CC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_145230();
    uint64_t v7 = *(void *)(v6 - 8);
    id v8 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v84 = v7;
    if (v8(a2, 1, v6))
    {
      uint64_t v9 = sub_A314(&qword_19C150);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v12 = (int *)type metadata accessor for StreakSummary();
    uint64_t v13 = v12[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (v8((uint64_t *)((char *)a2 + v13), 1, v6))
    {
      uint64_t v16 = sub_A314(&qword_19C150);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v14, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v14, 0, 1, v6);
    }
    uint64_t v17 = v12[6];
    int v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v8((uint64_t *)((char *)a2 + v17), 1, v6))
    {
      uint64_t v20 = sub_A314(&qword_19C150);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v18, 0, 1, v6);
    }
    *(uint64_t *)((char *)a1 + v12[7]) = *(uint64_t *)((char *)a2 + v12[7]);
    uint64_t v21 = a3[5];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v82 = a1;
    if (v8((uint64_t *)((char *)a2 + v21), 1, v6))
    {
      uint64_t v24 = sub_A314(&qword_19C150);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v22, v23, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v22, 0, 1, v6);
    }
    uint64_t v25 = v12[5];
    double v26 = &v22[v25];
    double v27 = &v23[v25];
    if (v8((uint64_t *)&v23[v25], 1, v6))
    {
      uint64_t v28 = sub_A314(&qword_19C150);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v26, v27, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v26, 0, 1, v6);
    }
    uint64_t v29 = v12[6];
    double v30 = &v22[v29];
    double v31 = &v23[v29];
    if (v8((uint64_t *)&v23[v29], 1, v6))
    {
      uint64_t v32 = sub_A314(&qword_19C150);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v30, 0, 1, v6);
    }
    *(void *)&v22[v12[7]] = *(void *)&v23[v12[7]];
    uint64_t v33 = a3[6];
    double v34 = (char *)v82 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v8((uint64_t *)((char *)a2 + v33), 1, v6))
    {
      uint64_t v36 = sub_A314(&qword_19C150);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v34, v35, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v34, 0, 1, v6);
    }
    uint64_t v37 = v12[5];
    uint64_t v38 = &v34[v37];
    uint64_t v39 = &v35[v37];
    if (v8((uint64_t *)&v35[v37], 1, v6))
    {
      uint64_t v40 = sub_A314(&qword_19C150);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v38, v39, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v38, 0, 1, v6);
    }
    uint64_t v41 = v12[6];
    int v42 = &v34[v41];
    uint64_t v43 = &v35[v41];
    if (v8((uint64_t *)&v35[v41], 1, v6))
    {
      uint64_t v44 = sub_A314(&qword_19C150);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v42, v43, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v42, 0, 1, v6);
    }
    *(void *)&v34[v12[7]] = *(void *)&v35[v12[7]];
    uint64_t v45 = a3[7];
    int v46 = (char *)v82 + v45;
    uint64_t v47 = (char *)a2 + v45;
    if (v8((uint64_t *)((char *)a2 + v45), 1, v6))
    {
      uint64_t v48 = sub_A314(&qword_19C150);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v46, 0, 1, v6);
    }
    uint64_t v49 = v12[5];
    uint64_t v50 = &v46[v49];
    uint64_t v51 = &v47[v49];
    if (v8((uint64_t *)&v47[v49], 1, v6))
    {
      uint64_t v52 = sub_A314(&qword_19C150);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v50, v51, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v6);
    }
    uint64_t v53 = v12[6];
    uint64_t v54 = &v46[v53];
    char v55 = &v47[v53];
    if (v8((uint64_t *)&v47[v53], 1, v6))
    {
      uint64_t v56 = sub_A314(&qword_19C150);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v54, v55, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v54, 0, 1, v6);
    }
    *(void *)&v46[v12[7]] = *(void *)&v47[v12[7]];
    uint64_t v57 = a3[8];
    unint64_t v58 = (char *)v82 + v57;
    unint64_t v59 = (char *)a2 + v57;
    if (v8((uint64_t *)((char *)a2 + v57), 1, v6))
    {
      uint64_t v60 = sub_A314(&qword_19C150);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v58, v59, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v58, 0, 1, v6);
    }
    uint64_t v61 = v12[5];
    id v62 = &v58[v61];
    uint64_t v63 = &v59[v61];
    if (v8((uint64_t *)&v59[v61], 1, v6))
    {
      uint64_t v64 = sub_A314(&qword_19C150);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = v12[6];
    uint64_t v66 = &v58[v65];
    unint64_t v67 = &v59[v65];
    if (v8((uint64_t *)&v59[v65], 1, v6))
    {
      uint64_t v68 = sub_A314(&qword_19C150);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v66, 0, 1, v6);
    }
    *(void *)&v58[v12[7]] = *(void *)&v59[v12[7]];
    uint64_t v11 = v82;
    uint64_t v69 = a3[9];
    uint64_t v70 = (char *)v82 + v69;
    uint64_t v71 = (char *)a2 + v69;
    if (v8((uint64_t *)v71, 1, v6))
    {
      uint64_t v72 = sub_A314(&qword_19C150);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v70, v71, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v70, 0, 1, v6);
    }
    uint64_t v73 = v12[5];
    id v74 = &v70[v73];
    uint64_t v75 = &v71[v73];
    if (v8((uint64_t *)&v71[v73], 1, v6))
    {
      uint64_t v76 = sub_A314(&qword_19C150);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v74, v75, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v74, 0, 1, v6);
    }
    uint64_t v77 = v12[6];
    uint64_t v78 = &v70[v77];
    uint64_t v79 = &v71[v77];
    if (v8((uint64_t *)&v71[v77], 1, v6))
    {
      uint64_t v80 = sub_A314(&qword_19C150);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v78, v79, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v78, 0, 1, v6);
    }
    *(void *)&v70[v12[7]] = *(void *)&v71[v12[7]];
  }
  return v11;
}

uint64_t sub_117958(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_145230();
  uint64_t v26 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v4);
  }
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + *(int *)(v6 + 24);
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[5];
  if (!v5(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v4);
  }
  uint64_t v10 = v9 + *(int *)(v6 + 20);
  if (!v5(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v10, v4);
  }
  uint64_t v11 = v9 + *(int *)(v6 + 24);
  if (!v5(v11, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v11, v4);
  }
  uint64_t v12 = a1 + a2[6];
  if (!v5(v12, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v4);
  }
  uint64_t v13 = v12 + *(int *)(v6 + 20);
  if (!v5(v13, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v13, v4);
  }
  uint64_t v14 = v12 + *(int *)(v6 + 24);
  if (!v5(v14, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v4);
  }
  uint64_t v15 = a1 + a2[7];
  if (!v5(v15, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v15, v4);
  }
  uint64_t v16 = v15 + *(int *)(v6 + 20);
  if (!v5(v16, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v16, v4);
  }
  uint64_t v17 = v15 + *(int *)(v6 + 24);
  if (!v5(v17, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v4);
  }
  uint64_t v18 = a1 + a2[8];
  if (!v5(v18, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v4);
  }
  uint64_t v19 = v18 + *(int *)(v6 + 20);
  if (!v5(v19, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v4);
  }
  uint64_t v20 = v18 + *(int *)(v6 + 24);
  if (!v5(v20, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v20, v4);
  }
  uint64_t v21 = a1 + a2[9];
  if (!v5(v21, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v4);
  }
  uint64_t v22 = v21 + *(int *)(v6 + 20);
  if (!v5(v22, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v4);
  }
  uint64_t v23 = v21 + *(int *)(v6 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v23, 1, v4);
  if (!result)
  {
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    return v25(v23, v4);
  }
  return result;
}

char *sub_117E9C(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v7(&a2[v10], 1, v5))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  uint64_t v14 = v9[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v81 = v6;
  if (v7(&a2[v14], 1, v5))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v15, v16, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v79 = a1;
  if (v7(&a2[v18], 1, v5))
  {
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v20, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = v9[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  if (v7(&v20[v22], 1, v5))
  {
    uint64_t v25 = sub_A314(&qword_19C150);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v23, v24, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  uint64_t v26 = v9[6];
  double v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  if (v7(&v20[v26], 1, v5))
  {
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v27, v28, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  *(void *)&v19[v9[7]] = *(void *)&v20[v9[7]];
  uint64_t v30 = a3[6];
  double v31 = &v79[v30];
  uint64_t v32 = &a2[v30];
  if (v7(&a2[v30], 1, v5))
  {
    uint64_t v33 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v31, v32, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  uint64_t v34 = v9[5];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  if (v7(&v32[v34], 1, v5))
  {
    uint64_t v37 = sub_A314(&qword_19C150);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v35, v36, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
  }
  uint64_t v38 = v9[6];
  uint64_t v39 = &v31[v38];
  uint64_t v40 = &v32[v38];
  if (v7(&v32[v38], 1, v5))
  {
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v40, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
  }
  *(void *)&v31[v9[7]] = *(void *)&v32[v9[7]];
  uint64_t v42 = a3[7];
  uint64_t v43 = &v79[v42];
  uint64_t v44 = &a2[v42];
  if (v7(&a2[v42], 1, v5))
  {
    uint64_t v45 = sub_A314(&qword_19C150);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v43, v44, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
  }
  uint64_t v46 = v9[5];
  uint64_t v47 = &v43[v46];
  uint64_t v48 = &v44[v46];
  if (v7(&v44[v46], 1, v5))
  {
    uint64_t v49 = sub_A314(&qword_19C150);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v47, v48, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  }
  uint64_t v50 = v9[6];
  uint64_t v51 = &v43[v50];
  uint64_t v52 = &v44[v50];
  if (v7(&v44[v50], 1, v5))
  {
    uint64_t v53 = sub_A314(&qword_19C150);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v51, v52, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v51, 0, 1, v5);
  }
  *(void *)&v43[v9[7]] = *(void *)&v44[v9[7]];
  uint64_t v54 = a3[8];
  char v55 = &v79[v54];
  uint64_t v56 = &a2[v54];
  if (v7(&a2[v54], 1, v5))
  {
    uint64_t v57 = sub_A314(&qword_19C150);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v55, v56, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v55, 0, 1, v5);
  }
  uint64_t v58 = v9[5];
  unint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  if (v7(&v56[v58], 1, v5))
  {
    uint64_t v61 = sub_A314(&qword_19C150);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v59, v60, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v59, 0, 1, v5);
  }
  uint64_t v62 = v9[6];
  uint64_t v63 = &v55[v62];
  uint64_t v64 = &v56[v62];
  if (v7(&v56[v62], 1, v5))
  {
    uint64_t v65 = sub_A314(&qword_19C150);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v63, v64, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v63, 0, 1, v5);
  }
  *(void *)&v55[v9[7]] = *(void *)&v56[v9[7]];
  uint64_t v66 = a3[9];
  unint64_t v67 = &v79[v66];
  uint64_t v68 = &a2[v66];
  if (v7(v68, 1, v5))
  {
    uint64_t v69 = sub_A314(&qword_19C150);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v67, v68, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v67, 0, 1, v5);
  }
  uint64_t v70 = v9[5];
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  if (v7(&v68[v70], 1, v5))
  {
    uint64_t v73 = sub_A314(&qword_19C150);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v71, v72, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v71, 0, 1, v5);
  }
  uint64_t v74 = v9[6];
  uint64_t v75 = &v67[v74];
  uint64_t v76 = &v68[v74];
  if (v7(&v68[v74], 1, v5))
  {
    uint64_t v77 = sub_A314(&qword_19C150);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v76, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v5);
  }
  *(void *)&v67[v9[7]] = *(void *)&v68[v9[7]];
  return v79;
}

char *sub_118AD4(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_145230();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
  int v7 = v6(a1, 1, v5);
  int v8 = v6(a2, 1, v5);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(a1, a2, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(a1, v5);
LABEL_6:
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(a1, a2, v5);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = v6(&a1[v11], 1, v5);
  int v15 = v6(v13, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v12, v13, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v12, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v5);
LABEL_12:
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v12, v13, v5);
LABEL_13:
  uint64_t v17 = v10[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v6(&a1[v17], 1, v5);
  int v21 = v6(v19, 1, v5);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v18, v19, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v18, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v18, v5);
LABEL_18:
    uint64_t v22 = sub_A314(&qword_19C150);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v18, v19, v5);
LABEL_19:
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v23 = a3[5];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  int v26 = v6(&a1[v23], 1, v5);
  int v27 = v6(v25, 1, v5);
  uint64_t v28 = a1;
  uint64_t v116 = a2;
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v24, v25, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v24, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v24, v5);
LABEL_24:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v24, v25, v5);
LABEL_25:
  uint64_t v30 = v10[5];
  double v31 = &v24[v30];
  uint64_t v32 = &v25[v30];
  int v33 = v6(&v24[v30], 1, v5);
  int v34 = v6(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v31, v32, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v31, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v31, v5);
LABEL_30:
    uint64_t v35 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v31, v32, v5);
LABEL_31:
  uint64_t v36 = v10[6];
  uint64_t v37 = &v24[v36];
  uint64_t v38 = &v25[v36];
  int v39 = v6(&v24[v36], 1, v5);
  int v40 = v6(v38, 1, v5);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v37, v38, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v37, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v37, v5);
LABEL_36:
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v37, v38, v5);
LABEL_37:
  *(void *)&v24[v10[7]] = *(void *)&v25[v10[7]];
  uint64_t v42 = a3[6];
  uint64_t v43 = &v28[v42];
  uint64_t v44 = &v116[v42];
  int v45 = v6(&v28[v42], 1, v5);
  int v46 = v6(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v43, v44, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v43, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v43, v5);
LABEL_42:
    uint64_t v47 = sub_A314(&qword_19C150);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v43, v44, v5);
LABEL_43:
  uint64_t v48 = v10[5];
  uint64_t v49 = &v43[v48];
  uint64_t v50 = &v44[v48];
  int v51 = v6(&v43[v48], 1, v5);
  int v52 = v6(v50, 1, v5);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v49, v50, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v49, v5);
LABEL_48:
    uint64_t v53 = sub_A314(&qword_19C150);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v49, v50, v5);
LABEL_49:
  uint64_t v54 = v10[6];
  char v55 = &v43[v54];
  uint64_t v56 = &v44[v54];
  int v57 = v6(&v43[v54], 1, v5);
  int v58 = v6(v56, 1, v5);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v55, v56, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v55, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v55, v5);
LABEL_54:
    uint64_t v59 = sub_A314(&qword_19C150);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v55, v56, v5);
LABEL_55:
  *(void *)&v43[v10[7]] = *(void *)&v44[v10[7]];
  uint64_t v60 = a3[7];
  uint64_t v61 = &v28[v60];
  uint64_t v62 = &v116[v60];
  int v63 = v6(&v28[v60], 1, v5);
  int v64 = v6(v62, 1, v5);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v61, v62, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v61, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v61, v5);
LABEL_60:
    uint64_t v65 = sub_A314(&qword_19C150);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v61, v62, v5);
LABEL_61:
  uint64_t v66 = v10[5];
  unint64_t v67 = &v61[v66];
  uint64_t v68 = &v62[v66];
  int v69 = v6(&v61[v66], 1, v5);
  int v70 = v6(v68, 1, v5);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v67, v68, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v67, 0, 1, v5);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v67, v5);
LABEL_66:
    uint64_t v71 = sub_A314(&qword_19C150);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v67, v68, v5);
LABEL_67:
  uint64_t v72 = v10[6];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  int v75 = v6(&v61[v72], 1, v5);
  int v76 = v6(v74, 1, v5);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v73, v74, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v73, 0, 1, v5);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v73, v5);
LABEL_72:
    uint64_t v77 = sub_A314(&qword_19C150);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v73, v74, v5);
LABEL_73:
  *(void *)&v61[v10[7]] = *(void *)&v62[v10[7]];
  uint64_t v78 = a3[8];
  uint64_t v79 = &v28[v78];
  uint64_t v80 = &v116[v78];
  int v81 = v6(&v28[v78], 1, v5);
  int v82 = v6(v80, 1, v5);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v79, v80, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v79, 0, 1, v5);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v79, v5);
LABEL_78:
    uint64_t v83 = sub_A314(&qword_19C150);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v79, v80, v5);
LABEL_79:
  uint64_t v84 = v10[5];
  uint64_t v85 = &v79[v84];
  uint64_t v86 = &v80[v84];
  int v87 = v6(&v79[v84], 1, v5);
  int v88 = v6(v86, 1, v5);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v85, v86, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v85, 0, 1, v5);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v5);
LABEL_84:
    uint64_t v89 = sub_A314(&qword_19C150);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v85, v86, v5);
LABEL_85:
  uint64_t v90 = v10[6];
  uint64_t v91 = &v79[v90];
  uint64_t v92 = &v80[v90];
  int v93 = v6(&v79[v90], 1, v5);
  int v94 = v6(v92, 1, v5);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v91, v92, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v91, 0, 1, v5);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v91, v5);
LABEL_90:
    uint64_t v95 = sub_A314(&qword_19C150);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v91, v92, v5);
LABEL_91:
  unint64_t v96 = v28;
  *(void *)&v79[v10[7]] = *(void *)&v80[v10[7]];
  uint64_t v97 = a3[9];
  uint64_t v98 = &v28[v97];
  uint64_t v99 = &v116[v97];
  int v100 = v6(v98, 1, v5);
  int v101 = v6(v99, 1, v5);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v98, v99, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v98, 0, 1, v5);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v98, v5);
LABEL_96:
    uint64_t v102 = sub_A314(&qword_19C150);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_97;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v98, v99, v5);
LABEL_97:
  uint64_t v103 = v10[5];
  uint64_t v104 = &v98[v103];
  uint64_t v105 = &v99[v103];
  int v106 = v6(&v98[v103], 1, v5);
  int v107 = v6(v105, 1, v5);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v104, v105, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v104, 0, 1, v5);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v104, v5);
LABEL_102:
    uint64_t v108 = sub_A314(&qword_19C150);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_103;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v104, v105, v5);
LABEL_103:
  uint64_t v109 = v10[6];
  uint64_t v110 = &v98[v109];
  uint64_t v111 = &v99[v109];
  int v112 = v6(&v98[v109], 1, v5);
  int v113 = v6(v111, 1, v5);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v110, v111, v5);
      goto LABEL_109;
    }
    (*(void (**)(char *, uint64_t))(v118 + 8))(v110, v5);
    goto LABEL_108;
  }
  if (v113)
  {
LABEL_108:
    uint64_t v114 = sub_A314(&qword_19C150);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_109;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v111, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v110, 0, 1, v5);
LABEL_109:
  *(void *)&v98[v10[7]] = *(void *)&v99[v10[7]];
  return v96;
}

char *sub_119E28(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v7(&a2[v10], 1, v5))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v12, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  uint64_t v14 = v9[6];
  int v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v81 = v6;
  if (v7(&a2[v14], 1, v5))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v16, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  int v20 = &a2[v18];
  uint64_t v79 = a1;
  if (v7(&a2[v18], 1, v5))
  {
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v20, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = v9[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  if (v7(&v20[v22], 1, v5))
  {
    uint64_t v25 = sub_A314(&qword_19C150);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v24, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  uint64_t v26 = v9[6];
  int v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  if (v7(&v20[v26], 1, v5))
  {
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v27, v28, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  *(void *)&v19[v9[7]] = *(void *)&v20[v9[7]];
  uint64_t v30 = a3[6];
  double v31 = &v79[v30];
  uint64_t v32 = &a2[v30];
  if (v7(&a2[v30], 1, v5))
  {
    uint64_t v33 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v31, v32, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  uint64_t v34 = v9[5];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  if (v7(&v32[v34], 1, v5))
  {
    uint64_t v37 = sub_A314(&qword_19C150);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v35, v36, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
  }
  uint64_t v38 = v9[6];
  int v39 = &v31[v38];
  int v40 = &v32[v38];
  if (v7(&v32[v38], 1, v5))
  {
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v39, v40, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
  }
  *(void *)&v31[v9[7]] = *(void *)&v32[v9[7]];
  uint64_t v42 = a3[7];
  uint64_t v43 = &v79[v42];
  uint64_t v44 = &a2[v42];
  if (v7(&a2[v42], 1, v5))
  {
    uint64_t v45 = sub_A314(&qword_19C150);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v43, v44, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
  }
  uint64_t v46 = v9[5];
  uint64_t v47 = &v43[v46];
  uint64_t v48 = &v44[v46];
  if (v7(&v44[v46], 1, v5))
  {
    uint64_t v49 = sub_A314(&qword_19C150);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v47, v48, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  }
  uint64_t v50 = v9[6];
  int v51 = &v43[v50];
  int v52 = &v44[v50];
  if (v7(&v44[v50], 1, v5))
  {
    uint64_t v53 = sub_A314(&qword_19C150);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v51, v52, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v51, 0, 1, v5);
  }
  *(void *)&v43[v9[7]] = *(void *)&v44[v9[7]];
  uint64_t v54 = a3[8];
  char v55 = &v79[v54];
  uint64_t v56 = &a2[v54];
  if (v7(&a2[v54], 1, v5))
  {
    uint64_t v57 = sub_A314(&qword_19C150);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v55, v56, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v55, 0, 1, v5);
  }
  uint64_t v58 = v9[5];
  uint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  if (v7(&v56[v58], 1, v5))
  {
    uint64_t v61 = sub_A314(&qword_19C150);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v59, v60, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v59, 0, 1, v5);
  }
  uint64_t v62 = v9[6];
  int v63 = &v55[v62];
  int v64 = &v56[v62];
  if (v7(&v56[v62], 1, v5))
  {
    uint64_t v65 = sub_A314(&qword_19C150);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v63, v64, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v63, 0, 1, v5);
  }
  *(void *)&v55[v9[7]] = *(void *)&v56[v9[7]];
  uint64_t v66 = a3[9];
  unint64_t v67 = &v79[v66];
  uint64_t v68 = &a2[v66];
  if (v7(v68, 1, v5))
  {
    uint64_t v69 = sub_A314(&qword_19C150);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v67, v68, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v67, 0, 1, v5);
  }
  uint64_t v70 = v9[5];
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  if (v7(&v68[v70], 1, v5))
  {
    uint64_t v73 = sub_A314(&qword_19C150);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v71, v72, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v71, 0, 1, v5);
  }
  uint64_t v74 = v9[6];
  int v75 = &v67[v74];
  int v76 = &v68[v74];
  if (v7(&v68[v74], 1, v5))
  {
    uint64_t v77 = sub_A314(&qword_19C150);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v75, v76, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v5);
  }
  *(void *)&v67[v9[7]] = *(void *)&v68[v9[7]];
  return v79;
}

char *sub_11AA60(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_145230();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
  int v7 = v6(a1, 1, v5);
  int v8 = v6(a2, 1, v5);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(a1, a2, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(a1, v5);
LABEL_6:
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(a1, a2, v5);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = v6(&a1[v11], 1, v5);
  int v15 = v6(v13, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v12, v13, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v12, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v5);
LABEL_12:
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v12, v13, v5);
LABEL_13:
  uint64_t v17 = v10[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v6(&a1[v17], 1, v5);
  int v21 = v6(v19, 1, v5);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v18, v19, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v18, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v18, v5);
LABEL_18:
    uint64_t v22 = sub_A314(&qword_19C150);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v18, v19, v5);
LABEL_19:
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v23 = a3[5];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  int v26 = v6(&a1[v23], 1, v5);
  int v27 = v6(v25, 1, v5);
  uint64_t v28 = a1;
  uint64_t v116 = a2;
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v24, v25, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v24, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v24, v5);
LABEL_24:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v24, v25, v5);
LABEL_25:
  uint64_t v30 = v10[5];
  double v31 = &v24[v30];
  uint64_t v32 = &v25[v30];
  int v33 = v6(&v24[v30], 1, v5);
  int v34 = v6(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v31, v32, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v31, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v31, v5);
LABEL_30:
    uint64_t v35 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v31, v32, v5);
LABEL_31:
  uint64_t v36 = v10[6];
  uint64_t v37 = &v24[v36];
  uint64_t v38 = &v25[v36];
  int v39 = v6(&v24[v36], 1, v5);
  int v40 = v6(v38, 1, v5);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v37, v38, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v37, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v37, v5);
LABEL_36:
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v37, v38, v5);
LABEL_37:
  *(void *)&v24[v10[7]] = *(void *)&v25[v10[7]];
  uint64_t v42 = a3[6];
  uint64_t v43 = &v28[v42];
  uint64_t v44 = &v116[v42];
  int v45 = v6(&v28[v42], 1, v5);
  int v46 = v6(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v43, v44, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v43, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v43, v5);
LABEL_42:
    uint64_t v47 = sub_A314(&qword_19C150);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v43, v44, v5);
LABEL_43:
  uint64_t v48 = v10[5];
  uint64_t v49 = &v43[v48];
  uint64_t v50 = &v44[v48];
  int v51 = v6(&v43[v48], 1, v5);
  int v52 = v6(v50, 1, v5);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v49, v50, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v49, v5);
LABEL_48:
    uint64_t v53 = sub_A314(&qword_19C150);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v49, v50, v5);
LABEL_49:
  uint64_t v54 = v10[6];
  char v55 = &v43[v54];
  uint64_t v56 = &v44[v54];
  int v57 = v6(&v43[v54], 1, v5);
  int v58 = v6(v56, 1, v5);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v55, v56, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v55, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v55, v5);
LABEL_54:
    uint64_t v59 = sub_A314(&qword_19C150);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v55, v56, v5);
LABEL_55:
  *(void *)&v43[v10[7]] = *(void *)&v44[v10[7]];
  uint64_t v60 = a3[7];
  uint64_t v61 = &v28[v60];
  uint64_t v62 = &v116[v60];
  int v63 = v6(&v28[v60], 1, v5);
  int v64 = v6(v62, 1, v5);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v61, v62, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v61, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v61, v5);
LABEL_60:
    uint64_t v65 = sub_A314(&qword_19C150);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v61, v62, v5);
LABEL_61:
  uint64_t v66 = v10[5];
  unint64_t v67 = &v61[v66];
  uint64_t v68 = &v62[v66];
  int v69 = v6(&v61[v66], 1, v5);
  int v70 = v6(v68, 1, v5);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v67, v68, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v67, 0, 1, v5);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v67, v5);
LABEL_66:
    uint64_t v71 = sub_A314(&qword_19C150);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v67, v68, v5);
LABEL_67:
  uint64_t v72 = v10[6];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  int v75 = v6(&v61[v72], 1, v5);
  int v76 = v6(v74, 1, v5);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v73, v74, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v73, 0, 1, v5);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v73, v5);
LABEL_72:
    uint64_t v77 = sub_A314(&qword_19C150);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v73, v74, v5);
LABEL_73:
  *(void *)&v61[v10[7]] = *(void *)&v62[v10[7]];
  uint64_t v78 = a3[8];
  uint64_t v79 = &v28[v78];
  uint64_t v80 = &v116[v78];
  int v81 = v6(&v28[v78], 1, v5);
  int v82 = v6(v80, 1, v5);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v79, v80, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v79, 0, 1, v5);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v79, v5);
LABEL_78:
    uint64_t v83 = sub_A314(&qword_19C150);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v79, v80, v5);
LABEL_79:
  uint64_t v84 = v10[5];
  uint64_t v85 = &v79[v84];
  uint64_t v86 = &v80[v84];
  int v87 = v6(&v79[v84], 1, v5);
  int v88 = v6(v86, 1, v5);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v85, v86, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v85, 0, 1, v5);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v5);
LABEL_84:
    uint64_t v89 = sub_A314(&qword_19C150);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v85, v86, v5);
LABEL_85:
  uint64_t v90 = v10[6];
  uint64_t v91 = &v79[v90];
  uint64_t v92 = &v80[v90];
  int v93 = v6(&v79[v90], 1, v5);
  int v94 = v6(v92, 1, v5);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v91, v92, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v91, 0, 1, v5);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v91, v5);
LABEL_90:
    uint64_t v95 = sub_A314(&qword_19C150);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v91, v92, v5);
LABEL_91:
  unint64_t v96 = v28;
  *(void *)&v79[v10[7]] = *(void *)&v80[v10[7]];
  uint64_t v97 = a3[9];
  uint64_t v98 = &v28[v97];
  uint64_t v99 = &v116[v97];
  int v100 = v6(v98, 1, v5);
  int v101 = v6(v99, 1, v5);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v98, v99, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v98, 0, 1, v5);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v98, v5);
LABEL_96:
    uint64_t v102 = sub_A314(&qword_19C150);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_97;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v98, v99, v5);
LABEL_97:
  uint64_t v103 = v10[5];
  uint64_t v104 = &v98[v103];
  uint64_t v105 = &v99[v103];
  int v106 = v6(&v98[v103], 1, v5);
  int v107 = v6(v105, 1, v5);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v104, v105, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v104, 0, 1, v5);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v104, v5);
LABEL_102:
    uint64_t v108 = sub_A314(&qword_19C150);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_103;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v104, v105, v5);
LABEL_103:
  uint64_t v109 = v10[6];
  uint64_t v110 = &v98[v109];
  uint64_t v111 = &v99[v109];
  int v112 = v6(&v98[v109], 1, v5);
  int v113 = v6(v111, 1, v5);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v110, v111, v5);
      goto LABEL_109;
    }
    (*(void (**)(char *, uint64_t))(v118 + 8))(v110, v5);
    goto LABEL_108;
  }
  if (v113)
  {
LABEL_108:
    uint64_t v114 = sub_A314(&qword_19C150);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_109;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v110, v111, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v110, 0, 1, v5);
LABEL_109:
  *(void *)&v98[v10[7]] = *(void *)&v99[v10[7]];
  return v96;
}

uint64_t sub_11BDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11BDC8);
}

uint64_t sub_11BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_11BE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11BE48);
}

uint64_t sub_11BE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_11BEB8()
{
  uint64_t result = type metadata accessor for StreakSummary();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_11BF4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    int v70 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v64 = v8;
    if (v70(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(qword_19E190);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_145430();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      int v14 = (char *)a2 + v12;
      uint64_t v15 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = type metadata accessor for UniformDateBins(0);
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
    uint64_t v68 = v20;
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 24));
    uint64_t v21 = sub_A314(&qword_19C938);
    uint64_t v22 = *(int *)(v21 + 28);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_145230();
    int v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    uint64_t v67 = sub_A314(&qword_19C930);
    v26(&v23[*(int *)(v67 + 36)], &v24[*(int *)(v67 + 36)], v25);
    uint64_t v69 = v21;
    *(uint64_t *)((char *)a1 + *(int *)(v21 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v21 + 32));
    uint64_t v27 = *(int *)(a3 + 20);
    uint64_t v28 = *(int *)(a3 + 24);
    uint64_t v66 = a3;
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    v29[8] = v30[8];
    *(void *)uint64_t v29 = *(void *)v30;
    double v31 = (char *)a1 + v28;
    uint64_t v32 = (char *)a2 + v28;
    swift_bridgeObjectRetain();
    uint64_t v65 = v7;
    if (v70((uint64_t *)v32, 1, v7))
    {
      uint64_t v33 = sub_A314(qword_19E190);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v31, v32, v34);
      v26(&v31[*(int *)(v7 + 20)], &v32[*(int *)(v7 + 20)], v25);
      uint64_t v35 = *(int *)(v7 + 24);
      uint64_t v36 = v7;
      uint64_t v37 = &v31[v35];
      uint64_t v38 = &v32[v35];
      uint64_t v39 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v31, 0, 1, v36);
    }
    *(void *)&v31[*(int *)(v68 + 20)] = *(void *)&v32[*(int *)(v68 + 20)];
    *(void *)&v31[*(int *)(v68 + 24)] = *(void *)&v32[*(int *)(v68 + 24)];
    uint64_t v40 = *(int *)(v69 + 28);
    uint64_t v41 = &v31[v40];
    uint64_t v42 = &v32[v40];
    v26(&v31[v40], &v32[v40], v25);
    v26(&v41[*(int *)(v67 + 36)], &v42[*(int *)(v67 + 36)], v25);
    *(void *)&v31[*(int *)(v69 + 32)] = *(void *)&v32[*(int *)(v69 + 32)];
    uint64_t v43 = v66;
    uint64_t v44 = *(int *)(v66 + 28);
    int v45 = (char *)a1 + v44;
    int v46 = (char *)a2 + v44;
    swift_bridgeObjectRetain();
    if (v70((uint64_t *)v46, 1, v65))
    {
      uint64_t v47 = sub_A314(qword_19E190);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
      v26(&v45[*(int *)(v65 + 20)], &v46[*(int *)(v65 + 20)], v25);
      uint64_t v49 = *(int *)(v65 + 24);
      uint64_t v50 = &v45[v49];
      int v51 = &v46[v49];
      uint64_t v52 = sub_145450();
      uint64_t v53 = v51;
      uint64_t v43 = v66;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v53, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v45, 0, 1, v65);
    }
    *(void *)&v45[*(int *)(v68 + 20)] = *(void *)&v46[*(int *)(v68 + 20)];
    *(void *)&v45[*(int *)(v68 + 24)] = *(void *)&v46[*(int *)(v68 + 24)];
    uint64_t v54 = *(int *)(v69 + 28);
    char v55 = &v45[v54];
    uint64_t v56 = &v46[v54];
    v26(&v45[v54], &v46[v54], v25);
    v26(&v55[*(int *)(v67 + 36)], &v56[*(int *)(v67 + 36)], v25);
    *(void *)&v45[*(int *)(v69 + 32)] = *(void *)&v46[*(int *)(v69 + 32)];
    uint64_t v57 = *(int *)(v43 + 32);
    uint64_t v58 = *(int *)(v43 + 36);
    uint64_t v59 = (char *)a1 + v57;
    uint64_t v60 = (char *)a2 + v57;
    v59[8] = v60[8];
    *(void *)uint64_t v59 = *(void *)v60;
    uint64_t v61 = (char *)a1 + v58;
    uint64_t v62 = (char *)a2 + v58;
    swift_bridgeObjectRetain();
    v26(v61, v62, v25);
  }
  return a1;
}

uint64_t sub_11C5E4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    uint64_t v6 = sub_145430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_145230();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = a1 + *(int *)(v4 + 24);
    uint64_t v10 = sub_145450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = sub_A314(&qword_19C938);
  uint64_t v12 = a1 + *(int *)(v11 + 28);
  uint64_t v13 = sub_145230();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v27)((void *)(v13 - 8), v12, v13);
  uint64_t v14 = sub_A314(&qword_19C930);
  v27(v12 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[6];
  if (!v5(v15, 1, v4))
  {
    uint64_t v16 = sub_145430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    v27(v15 + *(int *)(v4 + 20), v13);
    uint64_t v17 = v15 + *(int *)(v4 + 24);
    uint64_t v18 = sub_145450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = v15 + *(int *)(v11 + 28);
  v27(v19, v13);
  v27(v19 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + a2[7];
  if (!v5(v20, 1, v4))
  {
    uint64_t v21 = sub_145430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    v27(v20 + *(int *)(v4 + 20), v13);
    uint64_t v22 = v20 + *(int *)(v4 + 24);
    uint64_t v23 = sub_145450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  uint64_t v24 = v20 + *(int *)(v11 + 28);
  v27(v24, v13);
  v27(v24 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + a2[9];

  return ((uint64_t (*)(uint64_t, uint64_t))v27)(v25, v13);
}

char *sub_11C9E8(char *a1, char *a2, int *a3)
{
  uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v61 = v6;
  if (v64(a2, 1, v5))
  {
    uint64_t v7 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v5 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(v5 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v17 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v17 + 20)] = *(void *)&a2[*(int *)(v17 + 20)];
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&a2[*(int *)(v17 + 24)];
  uint64_t v18 = sub_A314(&qword_19C938);
  uint64_t v19 = *(int *)(v18 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_145230();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v62 = sub_A314(&qword_19C930);
  v23(&v20[*(int *)(v62 + 36)], &v21[*(int *)(v62 + 36)], v22);
  uint64_t v63 = v18;
  *(void *)&a1[*(int *)(v18 + 32)] = *(void *)&a2[*(int *)(v18 + 32)];
  uint64_t v24 = a3[5];
  uint64_t v25 = a3[6];
  int v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  v26[8] = v27[8];
  *(void *)int v26 = *(void *)v27;
  uint64_t v28 = &a1[v25];
  uint64_t v29 = &a2[v25];
  swift_bridgeObjectRetain();
  if (v64(v29, 1, v5))
  {
    uint64_t v30 = sub_A314(qword_19E190);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    uint64_t v31 = v5;
  }
  else
  {
    uint64_t v32 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    v23(&v28[*(int *)(v5 + 20)], &v29[*(int *)(v5 + 20)], v22);
    uint64_t v33 = *(int *)(v5 + 24);
    uint64_t v34 = &v28[v33];
    uint64_t v35 = &v29[v33];
    uint64_t v36 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    uint64_t v31 = v5;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v28, 0, 1, v5);
  }
  *(void *)&v28[*(int *)(v17 + 20)] = *(void *)&v29[*(int *)(v17 + 20)];
  *(void *)&v28[*(int *)(v17 + 24)] = *(void *)&v29[*(int *)(v17 + 24)];
  uint64_t v37 = *(int *)(v63 + 28);
  uint64_t v38 = &v28[v37];
  uint64_t v39 = &v29[v37];
  v23(&v28[v37], &v29[v37], v22);
  v23(&v38[*(int *)(v62 + 36)], &v39[*(int *)(v62 + 36)], v22);
  *(void *)&v28[*(int *)(v63 + 32)] = *(void *)&v29[*(int *)(v63 + 32)];
  uint64_t v40 = a3;
  uint64_t v41 = a3[7];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  swift_bridgeObjectRetain();
  if (v64(v43, 1, v31))
  {
    uint64_t v44 = sub_A314(qword_19E190);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v42, v43, v45);
    v23(&v42[*(int *)(v31 + 20)], &v43[*(int *)(v31 + 20)], v22);
    uint64_t v46 = *(int *)(v31 + 24);
    uint64_t v47 = &v42[v46];
    uint64_t v48 = &v43[v46];
    uint64_t v49 = sub_145450();
    uint64_t v50 = v48;
    uint64_t v40 = a3;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v50, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v42, 0, 1, v31);
  }
  *(void *)&v42[*(int *)(v17 + 20)] = *(void *)&v43[*(int *)(v17 + 20)];
  *(void *)&v42[*(int *)(v17 + 24)] = *(void *)&v43[*(int *)(v17 + 24)];
  uint64_t v51 = *(int *)(v63 + 28);
  uint64_t v52 = &v42[v51];
  uint64_t v53 = &v43[v51];
  v23(&v42[v51], &v43[v51], v22);
  v23(&v52[*(int *)(v62 + 36)], &v53[*(int *)(v62 + 36)], v22);
  *(void *)&v42[*(int *)(v63 + 32)] = *(void *)&v43[*(int *)(v63 + 32)];
  uint64_t v54 = v40[8];
  uint64_t v55 = v40[9];
  uint64_t v56 = &a1[v54];
  uint64_t v57 = &a2[v54];
  v56[8] = v57[8];
  *(void *)uint64_t v56 = *(void *)v57;
  uint64_t v58 = &a1[v55];
  uint64_t v59 = &a2[v55];
  swift_bridgeObjectRetain();
  v23(v58, v59, v22);
  return a1;
}

char *sub_11D03C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v82 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  int v8 = v7(a1, 1, v6);
  int v87 = v7;
  int v9 = v7(a2, 1, v6);
  uint64_t v89 = a3;
  if (v8)
  {
    if (!v9)
    {
      uint64_t v10 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v6 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = *(int *)(v6 + 24);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_121678((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
LABEL_6:
    uint64_t v19 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v62 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(a1, a2, v62);
  uint64_t v63 = *(int *)(v6 + 20);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  uint64_t v66 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  uint64_t v67 = *(int *)(v6 + 24);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  uint64_t v70 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 24))(v68, v69, v70);
LABEL_7:
  uint64_t v20 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
  uint64_t v84 = v20;
  *(void *)&a1[*(int *)(v20 + 24)] = *(void *)&a2[*(int *)(v20 + 24)];
  uint64_t v21 = sub_A314(&qword_19C938);
  uint64_t v22 = *(int *)(v21 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_145230();
  uint64_t v81 = *(void *)(v25 - 8);
  int v26 = *(void (**)(char *, char *, uint64_t))(v81 + 24);
  v26(v23, v24, v25);
  uint64_t v83 = sub_A314(&qword_19C930);
  int v88 = v26;
  v26(&v23[*(int *)(v83 + 36)], &v24[*(int *)(v83 + 36)], v25);
  uint64_t v86 = v21;
  *(void *)&a1[*(int *)(v21 + 32)] = *(void *)&a2[*(int *)(v21 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v89[5];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = v89[6];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  LODWORD(v26) = v87(&a1[v31], 1, v6);
  int v34 = v87(v33, 1, v6);
  uint64_t v85 = a1;
  if (v26)
  {
    if (!v34)
    {
      uint64_t v35 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v32, v33, v35);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(&v32[*(int *)(v6 + 20)], &v33[*(int *)(v6 + 20)], v25);
      uint64_t v36 = *(int *)(v6 + 24);
      uint64_t v37 = &v32[v36];
      uint64_t v38 = &v33[v36];
      uint64_t v39 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v32, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_121678((uint64_t)v32, type metadata accessor for CalendarBinningUnit);
LABEL_12:
    uint64_t v40 = sub_A314(qword_19E190);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v71 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v32, v33, v71);
  v88(&v32[*(int *)(v6 + 20)], &v33[*(int *)(v6 + 20)], v25);
  uint64_t v72 = *(int *)(v6 + 24);
  uint64_t v73 = &v32[v72];
  uint64_t v74 = &v33[v72];
  uint64_t v75 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
LABEL_13:
  *(void *)&v32[*(int *)(v84 + 20)] = *(void *)&v33[*(int *)(v84 + 20)];
  *(void *)&v32[*(int *)(v84 + 24)] = *(void *)&v33[*(int *)(v84 + 24)];
  uint64_t v41 = *(int *)(v86 + 28);
  uint64_t v42 = &v32[v41];
  uint64_t v43 = &v33[v41];
  v88(&v32[v41], &v33[v41], v25);
  v88(&v42[*(int *)(v83 + 36)], &v43[*(int *)(v83 + 36)], v25);
  *(void *)&v32[*(int *)(v86 + 32)] = *(void *)&v33[*(int *)(v86 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v89[7];
  uint64_t v45 = &v85[v44];
  uint64_t v46 = &a2[v44];
  LODWORD(v42) = v87(&v85[v44], 1, v6);
  int v47 = v87(v46, 1, v6);
  if (!v42)
  {
    if (!v47)
    {
      uint64_t v76 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 24))(v45, v46, v76);
      v88(&v45[*(int *)(v6 + 20)], &v46[*(int *)(v6 + 20)], v25);
      uint64_t v77 = *(int *)(v6 + 24);
      uint64_t v78 = &v45[v77];
      uint64_t v79 = &v46[v77];
      uint64_t v80 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
      goto LABEL_19;
    }
    sub_121678((uint64_t)v45, type metadata accessor for CalendarBinningUnit);
    goto LABEL_18;
  }
  if (v47)
  {
LABEL_18:
    uint64_t v53 = sub_A314(qword_19E190);
    memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v48 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(&v45[*(int *)(v6 + 20)], &v46[*(int *)(v6 + 20)], v25);
  uint64_t v49 = *(int *)(v6 + 24);
  uint64_t v50 = &v45[v49];
  uint64_t v51 = &v46[v49];
  uint64_t v52 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
LABEL_19:
  *(void *)&v45[*(int *)(v84 + 20)] = *(void *)&v46[*(int *)(v84 + 20)];
  *(void *)&v45[*(int *)(v84 + 24)] = *(void *)&v46[*(int *)(v84 + 24)];
  uint64_t v54 = *(int *)(v86 + 28);
  uint64_t v55 = &v45[v54];
  uint64_t v56 = &v46[v54];
  v88(&v45[v54], &v46[v54], v25);
  v88(&v55[*(int *)(v83 + 36)], &v56[*(int *)(v83 + 36)], v25);
  *(void *)&v45[*(int *)(v86 + 32)] = *(void *)&v46[*(int *)(v86 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v89[8];
  uint64_t v58 = &v85[v57];
  uint64_t v59 = &a2[v57];
  uint64_t v60 = *(void *)v59;
  v58[8] = v59[8];
  *(void *)uint64_t v58 = v60;
  v88(&v85[v89[9]], &a2[v89[9]], v25);
  return v85;
}

char *sub_11D9CC(char *a1, char *a2, int *a3)
{
  uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v65 = a1;
  uint64_t v60 = v6;
  if (v63(a2, 1, v5))
  {
    uint64_t v7 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(v5 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = *(int *)(v5 + 24);
    uint64_t v14 = &v65[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_145450();
    uint64_t v17 = v15;
    a1 = v65;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v17, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v65, 0, 1, v5);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = sub_A314(&qword_19C938);
  uint64_t v20 = *(int *)(v19 + 28);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_145230();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  uint64_t v61 = sub_A314(&qword_19C930);
  v24(&v21[*(int *)(v61 + 36)], &v22[*(int *)(v61 + 36)], v23);
  uint64_t v62 = v19;
  *(void *)&a1[*(int *)(v19 + 32)] = *(void *)&a2[*(int *)(v19 + 32)];
  uint64_t v25 = a3[5];
  uint64_t v26 = a3[6];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  v27[8] = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  uint64_t v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  if (v63(&a2[v26], 1, v5))
  {
    uint64_t v31 = sub_A314(qword_19E190);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v5;
  }
  else
  {
    uint64_t v33 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v29, v30, v33);
    v24(&v29[*(int *)(v5 + 20)], &v30[*(int *)(v5 + 20)], v23);
    uint64_t v34 = *(int *)(v5 + 24);
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    uint64_t v32 = v5;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v29, 0, 1, v5);
  }
  *(void *)&v29[*(int *)(v18 + 20)] = *(void *)&v30[*(int *)(v18 + 20)];
  *(void *)&v29[*(int *)(v18 + 24)] = *(void *)&v30[*(int *)(v18 + 24)];
  uint64_t v38 = *(int *)(v62 + 28);
  uint64_t v39 = &v29[v38];
  uint64_t v40 = &v30[v38];
  v24(&v29[v38], &v30[v38], v23);
  v24(&v39[*(int *)(v61 + 36)], &v40[*(int *)(v61 + 36)], v23);
  *(void *)&v29[*(int *)(v62 + 32)] = *(void *)&v30[*(int *)(v62 + 32)];
  uint64_t v41 = a3;
  uint64_t v42 = a3[7];
  uint64_t v43 = &v65[v42];
  uint64_t v44 = &a2[v42];
  if (v63(&a2[v42], 1, v32))
  {
    uint64_t v45 = sub_A314(qword_19E190);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    v24(&v43[*(int *)(v32 + 20)], &v44[*(int *)(v32 + 20)], v23);
    uint64_t v47 = *(int *)(v32 + 24);
    uint64_t v48 = &v43[v47];
    uint64_t v49 = &v44[v47];
    uint64_t v50 = sub_145450();
    uint64_t v51 = v49;
    uint64_t v41 = a3;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v51, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v43, 0, 1, v32);
  }
  *(void *)&v43[*(int *)(v18 + 20)] = *(void *)&v44[*(int *)(v18 + 20)];
  *(void *)&v43[*(int *)(v18 + 24)] = *(void *)&v44[*(int *)(v18 + 24)];
  uint64_t v52 = *(int *)(v62 + 28);
  uint64_t v53 = &v43[v52];
  uint64_t v54 = &v44[v52];
  v24(&v43[v52], &v44[v52], v23);
  v24(&v53[*(int *)(v61 + 36)], &v54[*(int *)(v61 + 36)], v23);
  *(void *)&v43[*(int *)(v62 + 32)] = *(void *)&v44[*(int *)(v62 + 32)];
  uint64_t v55 = v41[8];
  uint64_t v56 = v41[9];
  uint64_t v57 = &v65[v55];
  uint64_t v58 = &a2[v55];
  v57[8] = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  v24(&v65[v56], &a2[v56], v23);
  return v65;
}

char *sub_11E010(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
  int v8 = v7(a1, 1, v6);
  uint64_t v86 = v7;
  int v9 = v7(a2, 1, v6);
  int v88 = a3;
  if (v8)
  {
    if (!v9)
    {
      uint64_t v10 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = *(int *)(v6 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = *(int *)(v6 + 24);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_121678((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
LABEL_6:
    uint64_t v19 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v61 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(a1, a2, v61);
  uint64_t v62 = *(int *)(v6 + 20);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v65 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
  uint64_t v66 = *(int *)(v6 + 24);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
LABEL_7:
  uint64_t v20 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
  uint64_t v83 = v20;
  *(void *)&a1[*(int *)(v20 + 24)] = *(void *)&a2[*(int *)(v20 + 24)];
  uint64_t v21 = sub_A314(&qword_19C938);
  uint64_t v22 = *(int *)(v21 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_145230();
  uint64_t v80 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v80 + 40);
  v26(v23, v24, v25);
  uint64_t v82 = sub_A314(&qword_19C930);
  int v87 = v26;
  v26(&v23[*(int *)(v82 + 36)], &v24[*(int *)(v82 + 36)], v25);
  uint64_t v85 = v21;
  *(void *)&a1[*(int *)(v21 + 32)] = *(void *)&a2[*(int *)(v21 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v27 = v88[5];
  uint64_t v28 = v88[6];
  uint64_t v29 = &a1[v27];
  uint64_t v30 = &a2[v27];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = &a1[v28];
  uint64_t v32 = &a2[v28];
  LODWORD(v26) = v86(&a1[v28], 1, v6);
  int v33 = v86(v32, 1, v6);
  uint64_t v84 = a1;
  if (v26)
  {
    if (!v33)
    {
      uint64_t v34 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v31[*(int *)(v6 + 20)], &v32[*(int *)(v6 + 20)], v25);
      uint64_t v35 = *(int *)(v6 + 24);
      uint64_t v36 = &v31[v35];
      uint64_t v37 = &v32[v35];
      uint64_t v38 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v31, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_121678((uint64_t)v31, type metadata accessor for CalendarBinningUnit);
LABEL_12:
    uint64_t v39 = sub_A314(qword_19E190);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v70 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v31, v32, v70);
  v87(&v31[*(int *)(v6 + 20)], &v32[*(int *)(v6 + 20)], v25);
  uint64_t v71 = *(int *)(v6 + 24);
  uint64_t v72 = &v31[v71];
  uint64_t v73 = &v32[v71];
  uint64_t v74 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_13:
  *(void *)&v31[*(int *)(v83 + 20)] = *(void *)&v32[*(int *)(v83 + 20)];
  *(void *)&v31[*(int *)(v83 + 24)] = *(void *)&v32[*(int *)(v83 + 24)];
  uint64_t v40 = *(int *)(v85 + 28);
  uint64_t v41 = &v31[v40];
  uint64_t v42 = &v32[v40];
  v87(&v31[v40], &v32[v40], v25);
  v87(&v41[*(int *)(v82 + 36)], &v42[*(int *)(v82 + 36)], v25);
  *(void *)&v31[*(int *)(v85 + 32)] = *(void *)&v32[*(int *)(v85 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v43 = v88[7];
  uint64_t v44 = &v84[v43];
  uint64_t v45 = &a2[v43];
  LODWORD(v41) = v86(&v84[v43], 1, v6);
  int v46 = v86(v45, 1, v6);
  if (!v41)
  {
    if (!v46)
    {
      uint64_t v75 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v44, v45, v75);
      v87(&v44[*(int *)(v6 + 20)], &v45[*(int *)(v6 + 20)], v25);
      uint64_t v76 = *(int *)(v6 + 24);
      uint64_t v77 = &v44[v76];
      uint64_t v78 = &v45[v76];
      uint64_t v79 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
      goto LABEL_19;
    }
    sub_121678((uint64_t)v44, type metadata accessor for CalendarBinningUnit);
    goto LABEL_18;
  }
  if (v46)
  {
LABEL_18:
    uint64_t v52 = sub_A314(qword_19E190);
    memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v47 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v44[*(int *)(v6 + 20)], &v45[*(int *)(v6 + 20)], v25);
  uint64_t v48 = *(int *)(v6 + 24);
  uint64_t v49 = &v44[v48];
  uint64_t v50 = &v45[v48];
  uint64_t v51 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v44, 0, 1, v6);
LABEL_19:
  *(void *)&v44[*(int *)(v83 + 20)] = *(void *)&v45[*(int *)(v83 + 20)];
  *(void *)&v44[*(int *)(v83 + 24)] = *(void *)&v45[*(int *)(v83 + 24)];
  uint64_t v53 = *(int *)(v85 + 28);
  uint64_t v54 = &v44[v53];
  uint64_t v55 = &v45[v53];
  v87(&v44[v53], &v45[v53], v25);
  v87(&v54[*(int *)(v82 + 36)], &v55[*(int *)(v82 + 36)], v25);
  *(void *)&v44[*(int *)(v85 + 32)] = *(void *)&v45[*(int *)(v85 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v56 = v88[8];
  uint64_t v57 = v88[9];
  uint64_t v58 = &v84[v56];
  uint64_t v59 = &a2[v56];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  v87(&v84[v57], &a2[v57], v25);
  return v84;
}

uint64_t sub_11E980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11E994);
}

uint64_t sub_11E994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19C938);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_145230();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 36);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_11EA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11EAA4);
}

uint64_t sub_11EAA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_A314(&qword_19C938);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 36);
    return v13(v15, a2, a2, v14);
  }
}

void sub_11EBAC()
{
  sub_11EC84();
  if (v0 <= 0x3F)
  {
    sub_145230();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_11EC84()
{
  if (!qword_1A2C50)
  {
    unint64_t v0 = type metadata accessor for DateBinDictionary();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1A2C50);
    }
  }
}

uint64_t destroy for InsightsDataManager.TimeSummary()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InsightsDataManager.TimeSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.TimeSummary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for InsightsDataManager.TimeSummary(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.TimeSummary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.TimeSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.TimeSummary()
{
  return &type metadata for InsightsDataManager.TimeSummary;
}

uint64_t *sub_11EEA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145230();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_11EF80(uint64_t a1)
{
  uint64_t v2 = sub_145230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_11EFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_11F07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_11F114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_11F198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_11F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11F238);
}

uint64_t sub_11F238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_11F2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11F30C);
}

uint64_t sub_11F30C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_145230();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_11F3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_122928(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
}

unint64_t sub_11F3FC()
{
  unint64_t result = qword_1A2D28;
  if (!qword_1A2D28)
  {
    sub_12244(&qword_1A2D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2D28);
  }
  return result;
}

void sub_11F458(void *a1@<X8>)
{
  *a1 = &off_184D20;
}

unint64_t sub_11F46C()
{
  unint64_t result = qword_1A2D38;
  if (!qword_1A2D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2D38);
  }
  return result;
}

uint64_t sub_11F4C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_11F528(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F65646976;
      break;
    case 2:
      uint64_t result = 0x6F69647561;
      break;
    case 3:
      uint64_t result = 0x616964656DLL;
      break;
    case 4:
      uint64_t result = 0x6563616C70;
      break;
    case 5:
      uint64_t result = 0x61737265766E6F63;
      break;
    case 6:
      uint64_t result = 0x7974697669746361;
      break;
    case 7:
      uint64_t result = 0x697463656C666572;
      break;
    case 8:
      uint64_t result = 0x4D664F6574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_11F638(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A2EB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_122B64();
  sub_146D10();
  char v15 = 0;
  sub_145290();
  sub_122A14(&qword_19FD78, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_146B10();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for InsightsDataManager.EntrySummary(0);
    char v14 = 1;
    sub_145230();
    sub_122A14(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146B10();
    char v13 = 2;
    sub_146B10();
    v11[1] = *(void *)(v3 + *(int *)(v9 + 28));
    char v12 = 3;
    sub_A314(&qword_1A2E98);
    sub_122C0C(&qword_1A2EB8, (void (*)(void))sub_122C88);
    sub_146B10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_11F904@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v32 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - v7;
  uint64_t v9 = sub_145290();
  uint64_t v35 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_A314(&qword_1A2E88);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  char v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for InsightsDataManager.EntrySummary(0);
  __chkstk_darwin(v13);
  char v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_122B64();
  uint64_t v39 = v12;
  uint64_t v16 = (uint64_t)v40;
  sub_146D00();
  if (v16) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v30 = v13;
  uint64_t v17 = v15;
  uint64_t v40 = a1;
  char v45 = 0;
  sub_122A14(&qword_19C908, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v18 = v37;
  sub_146A60();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v17, v18, v9);
  char v44 = 1;
  sub_122A14(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v19 = v8;
  uint64_t v20 = v33;
  sub_146A60();
  v29[1] = v9;
  uint64_t v21 = v30;
  uint64_t v22 = &v17[*(int *)(v30 + 20)];
  uint64_t v37 = v17;
  uint64_t v23 = v19;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v24(v22, v23, v20);
  char v43 = 2;
  uint64_t v25 = v32;
  uint64_t v26 = v38;
  sub_146A60();
  v24(&v37[*(int *)(v21 + 24)], v25, v20);
  sub_A314(&qword_1A2E98);
  char v42 = 3;
  sub_122C0C(&qword_1A2EA0, (void (*)(void))sub_122BB8);
  sub_146A60();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v26);
  uint64_t v27 = (uint64_t)v37;
  *(void *)&v37[*(int *)(v21 + 28)] = v41;
  sub_1215F0(v27, v31, type metadata accessor for InsightsDataManager.EntrySummary);
  sub_C7FC((uint64_t)v40);
  return sub_121678(v27, type metadata accessor for InsightsDataManager.EntrySummary);
}

uint64_t sub_11FF28(unsigned __int8 *a1, char *a2)
{
  return sub_5609C(*a1, *a2);
}

Swift::Int sub_11FF34()
{
  return sub_146CD0();
}

uint64_t sub_11FF7C()
{
  return sub_56F08();
}

Swift::Int sub_11FF84()
{
  return sub_146CD0();
}

uint64_t sub_11FFC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_122CDC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_11FFF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_11F528(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_120024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_12008C()
{
  return sub_145DB0();
}

uint64_t sub_1200EC()
{
  return sub_145D70();
}

uint64_t sub_12013C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4464657461657263;
      break;
    case 2:
      uint64_t result = 0x7461447972746E65;
      break;
    case 3:
      uint64_t result = 0x7079547465737361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1201D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1230A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1201F8(uint64_t a1)
{
  unint64_t v2 = sub_122B64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_120234(uint64_t a1)
{
  unint64_t v2 = sub_122B64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_120270@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_11F904(a1, a2);
}

uint64_t sub_120288(void *a1)
{
  return sub_11F638(a1);
}

void sub_1202A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)v2;
  switch(*(void *)v2)
  {
    case 0:
      Swift::UInt v5 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v5 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v5 = 2;
      goto LABEL_7;
    case 3:
      Swift::UInt v5 = 3;
LABEL_7:
      sub_146C90(v5);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v6 = v4;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(v4);
      sub_BDF04(v4);
      break;
  }
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_146CA0(0);
  }
  else
  {
    Swift::UInt v7 = *(void *)(v2 + 8);
    sub_146CA0(1u);
    sub_146C90(v7);
  }
  uint64_t v8 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  sub_1209D0(a1, v8);
  swift_bridgeObjectRelease();
  id v9 = *(id *)(v2 + 32);
  sub_1464C0();
}

id sub_120404@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_BE044(v2);
}

Swift::Int sub_120410()
{
  sub_146C80();
  sub_1202A0((uint64_t)v1);
  return sub_146CD0();
}

Swift::Int sub_120454()
{
  sub_146C80();
  sub_1202A0((uint64_t)v1);
  return sub_146CD0();
}

uint64_t sub_120490(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_120C44((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1204DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_145290();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_120544(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_57;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_12087C(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_C84C(0, &qword_19B750);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        return;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          return;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v30) {
            return;
          }
          unint64_t v17 = *(void *)(v29 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = sub_1464A0(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v31 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = sub_1464B0();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = sub_1464B0();

        if (v28) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v30) {
    return;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __CocoaSet.isEqual(to:)(v6, v5);
}

void sub_12087C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_146710()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_146750();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

void sub_1209D0(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = sub_146CD0();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_146700();
    sub_C84C(0, &qword_19B750);
    sub_122D7C();
    sub_145FE0();
    a2 = v22;
    uint64_t v4 = v23;
    uint64_t v5 = v24;
    int64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v4 = a2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v6 = 0;
  }
  Swift::UInt v11 = 0;
  int64_t v12 = (unint64_t)(v5 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_146740()) {
      goto LABEL_26;
    }
    sub_C84C(0, &qword_19B750);
    swift_dynamicCast();
    int64_t v16 = v21;
    if (!v21) {
      goto LABEL_26;
    }
    int64_t v15 = v6;
    uint64_t v13 = v7;
LABEL_10:
    Swift::Int v18 = sub_1464A0(v3);

    v11 ^= v18;
    int64_t v6 = v15;
    unint64_t v7 = v13;
  }
  if (v7)
  {
    uint64_t v13 = (v7 - 1) & v7;
    unint64_t v14 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v15 = v6;
LABEL_9:
    int64_t v16 = *(void **)(*(void *)(a2 + 48) + 8 * v14);
    Swift::Int v21 = v16;
    id v17 = v16;
    if (!v16) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 >= v12) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v15);
    if (!v19)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v12) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v15);
      if (!v19)
      {
        int64_t v20 = v6 + 3;
        while (v12 != v20)
        {
          unint64_t v19 = *(void *)(v4 + 8 * v20++);
          if (v19)
          {
            int64_t v15 = v20 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1D050();
        sub_146C90(v11);
        return;
      }
    }
LABEL_22:
    uint64_t v13 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_120C44(uint64_t a1, uint64_t a2)
{
  sub_122DE4((void *)a1, &v14);
  sub_122DE4((void *)a2, &v13);
  sub_122DE4(&v14, &v15);
  switch(v15)
  {
    case 0:
      sub_122DE4(&v13, &v16);
      if (v16) {
        goto LABEL_23;
      }
      goto LABEL_15;
    case 1:
      sub_122DE4(&v13, &v16);
      if (v16 == 1) {
        goto LABEL_15;
      }
      goto LABEL_23;
    case 2:
      sub_122DE4(&v13, &v16);
      if (v16 == 2) {
        goto LABEL_15;
      }
      goto LABEL_23;
    case 3:
      sub_122DE4(&v13, &v16);
      if (v16 == 3) {
        goto LABEL_15;
      }
      goto LABEL_23;
    default:
      sub_122DE4(&v13, &v16);
      if (v16 < 4) {
        goto LABEL_23;
      }
      uint64_t v4 = sub_145BC0();
      uint64_t v6 = v5;
      if (v4 == sub_145BC0() && v6 == v7)
      {
        sub_122E40(&v14);
        sub_122E40(&v13);
        swift_bridgeObjectRelease_n();
        sub_122E6C(&v13);
        sub_122E6C(&v14);
      }
      else
      {
        char v8 = sub_146B90();
        sub_122E40(&v14);
        sub_122E40(&v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_122E6C(&v13);
        sub_122E6C(&v14);
        char v9 = 0;
        if ((v8 & 1) == 0) {
          return v9 & 1;
        }
      }
LABEL_15:
      char v10 = *(unsigned char *)(a2 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        if (!*(unsigned char *)(a2 + 16)) {
          goto LABEL_23;
        }
      }
      else
      {
        if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
          char v10 = 1;
        }
        if (v10) {
          goto LABEL_23;
        }
      }
      sub_120544(*(void *)(a1 + 24), *(void *)(a2 + 24));
      if (v11)
      {
        sub_C84C(0, (unint64_t *)&qword_19EAE0);
        char v9 = sub_1464B0();
        return v9 & 1;
      }
LABEL_23:
      char v9 = 0;
      return v9 & 1;
  }
}

uint64_t sub_120E84(void *a1, uint64_t a2)
{
  char v45 = a1;
  uint64_t v46 = a2;
  uint64_t v3 = type metadata accessor for UniformDateBins(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0) - 8;
  __chkstk_darwin(v44);
  char v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_145450();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  uint64_t v14 = Update - 8;
  __chkstk_darwin(Update);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_145110();
  *(void *)&v16[*(int *)(v14 + 28)] = 0;
  *(void *)&v16[*(int *)(v14 + 32)] = &_swiftEmptySetSingleton;
  sub_121568((uint64_t)v16, v2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
  *(void *)(v2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager____lazy_storage___workContext) = 0;
  sub_145380();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__calendar, v12, v9);
  uint64_t v17 = v2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__referenceDate;
  uint64_t v43 = v2;
  uint64_t v18 = sub_145230();
  unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  int64_t v20 = (void *)(v2 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount);
  *int64_t v20 = 0;
  v20[1] = 0;
  v20[2] = 0;
  v20[3] = _swiftEmptyArrayStorage;
  uint64_t v21 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_F69EC((uint64_t)v6, (uint64_t)v8);
  uint64_t v23 = v44;
  uint64_t v24 = &v8[*(int *)(v44 + 28)];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  uint64_t v25 = v23;
  char v42 = &v8[*(int *)(v23 + 32)];
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_F69EC((uint64_t)v6, (uint64_t)v42);
  char v42 = &v8[*(int *)(v25 + 36)];
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_F69EC((uint64_t)v6, (uint64_t)v42);
  unint64_t v26 = &v8[*(int *)(v25 + 40)];
  *(void *)unint64_t v26 = 0;
  v26[8] = 1;
  sub_145120();
  uint64_t v27 = v43;
  sub_121568((uint64_t)v8, v43 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v28 = v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks;
  v19(v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks, 1, 1, v18);
  uint64_t v29 = (int *)type metadata accessor for StreakSummary();
  v19(v28 + v29[5], 1, 1, v18);
  v19(v28 + v29[6], 1, 1, v18);
  *(void *)(v28 + v29[7]) = 0;
  int64_t v30 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v31 = v28 + v30[5];
  v19(v31, 1, 1, v18);
  v19(v31 + v29[5], 1, 1, v18);
  v19(v31 + v29[6], 1, 1, v18);
  *(void *)(v31 + v29[7]) = 0;
  uint64_t v32 = v28 + v30[6];
  v19(v32, 1, 1, v18);
  v19(v32 + v29[5], 1, 1, v18);
  v19(v32 + v29[6], 1, 1, v18);
  *(void *)(v32 + v29[7]) = 0;
  uint64_t v33 = v28 + v30[7];
  v19(v33, 1, 1, v18);
  v19(v33 + v29[5], 1, 1, v18);
  v19(v33 + v29[6], 1, 1, v18);
  *(void *)(v33 + v29[7]) = 0;
  uint64_t v34 = v28 + v30[8];
  v19(v34, 1, 1, v18);
  v19(v34 + v29[5], 1, 1, v18);
  v19(v34 + v29[6], 1, 1, v18);
  *(void *)(v34 + v29[7]) = 0;
  uint64_t v35 = v28 + v30[9];
  v19(v35, 1, 1, v18);
  v19(v35 + v29[5], 1, 1, v18);
  v19(v35 + v29[6], 1, 1, v18);
  *(void *)(v35 + v29[7]) = 0;
  uint64_t v36 = (void *)(v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__allTime);
  void *v36 = _swiftEmptyArrayStorage;
  v36[1] = _swiftEmptyArrayStorage;
  v36[2] = 0;
  v36[3] = _swiftEmptyArrayStorage;
  *(void *)(v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__places) = _swiftEmptyArrayStorage;
  *(void *)(v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__updateTask) = 0;
  sub_145530();
  uint64_t v37 = v45;
  uint64_t v38 = v46;
  *(void *)(v27 + 16) = v45;
  *(void *)(v27 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options) = v38;
  id v39 = v37;
  sub_38294();
  return v27;
}

uint64_t sub_121568(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1215F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_121678(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1216D8(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145290();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_145230();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_121820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145290();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_121900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1219F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_121AFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_121BF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_121CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_121D00);
}

uint64_t sub_121D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_121E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_121E28);
}

uint64_t sub_121E28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_145290();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_145230();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for InsightsDataManager.EntrySummary(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2D98);
}

uint64_t sub_121F58()
{
  uint64_t result = sub_145290();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_145230();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.AssetCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1220FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.AssetCategory()
{
  return &type metadata for InsightsDataManager.AssetCategory;
}

void destroy for InsightsDataManager.TopPlace(uint64_t a1)
{
  if (*(void *)a1 >= 4uLL) {

  }
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  if (*(void *)a2 >= 4uLL) {
    id v5 = v4;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }
    sub_121678(a1, (uint64_t (*)(void))type metadata accessor for MKPointOfInterestCategory);
    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v9 = *(void **)(a2 + 32);
  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v9;
  id v11 = v9;

  return a1;
}

uint64_t assignWithTake for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
    sub_121678(a1, (uint64_t (*)(void))type metadata accessor for MKPointOfInterestCategory);
  }
  *(void *)a1 = v5;
LABEL_6:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.TopPlace(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.TopPlace(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.TopPlace()
{
  return &type metadata for InsightsDataManager.TopPlace;
}

void *sub_1223F0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145290();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1224C4(uint64_t a1)
{
  uint64_t v2 = sub_145290();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_122528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1225AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_122634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1226B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_12273C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_122750);
}

uint64_t sub_122750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 9) {
      return v10 - 8;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_12280C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_122820);
}

uint64_t sub_122820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_145290();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 8;
  }
  return result;
}

uint64_t type metadata accessor for InsightsDataManager.TopAssetCategory(uint64_t a1)
{
  return sub_407CC(a1, qword_1A2E30);
}

uint64_t sub_1228FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_122928(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_122928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1229CC()
{
  return sub_122A14((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_122A14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_122A60()
{
  unint64_t result = qword_1A2E70;
  if (!qword_1A2E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2E70);
  }
  return result;
}

unint64_t sub_122AB8()
{
  unint64_t result = qword_1A2E78;
  if (!qword_1A2E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2E78);
  }
  return result;
}

unint64_t sub_122B10()
{
  unint64_t result = qword_1A2E80;
  if (!qword_1A2E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2E80);
  }
  return result;
}

unint64_t sub_122B64()
{
  unint64_t result = qword_1A2E90;
  if (!qword_1A2E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2E90);
  }
  return result;
}

unint64_t sub_122BB8()
{
  unint64_t result = qword_1A2EA8;
  if (!qword_1A2EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2EA8);
  }
  return result;
}

uint64_t sub_122C0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_1A2E98);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_122C88()
{
  unint64_t result = qword_1A2EC0;
  if (!qword_1A2EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2EC0);
  }
  return result;
}

uint64_t sub_122CDC(uint64_t a1, void *a2)
{
  v6._id countAndFlagsBits = a1;
  v3._rawValue = &off_184D48;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

unint64_t sub_122D28()
{
  unint64_t result = qword_1A2EC8;
  if (!qword_1A2EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2EC8);
  }
  return result;
}

unint64_t sub_122D7C()
{
  unint64_t result = qword_19B748;
  if (!qword_19B748)
  {
    sub_C84C(255, &qword_19B750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B748);
  }
  return result;
}

void *sub_122DE4(void *a1, void *a2)
{
  return a2;
}

id *sub_122E40(id *a1)
{
  return a1;
}

id *sub_122E6C(id *a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.EntrySummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x122F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.EntrySummary.CodingKeys()
{
  return &type metadata for InsightsDataManager.EntrySummary.CodingKeys;
}

unint64_t sub_122FA0()
{
  unint64_t result = qword_1A2ED0;
  if (!qword_1A2ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2ED0);
  }
  return result;
}

unint64_t sub_122FF8()
{
  unint64_t result = qword_1A2ED8;
  if (!qword_1A2ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2ED8);
  }
  return result;
}

unint64_t sub_123050()
{
  unint64_t result = qword_1A2EE0;
  if (!qword_1A2EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2EE0);
  }
  return result;
}

uint64_t sub_1230A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447972746E65 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7079547465737361 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_12327C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_A314(&qword_19C868);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_12336C, 0, 0);
}

uint64_t sub_12336C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = sub_12379C(v1);
  uint64_t v4 = v3;
  v0[8] = v3;
  uint64_t v5 = sub_AF778();
  unint64_t v7 = sub_2E1AC(v5, v6, 0xD000000000000029, (void *)0x8000000000151D60, 0, 0);
  uint64_t v9 = v8;
  v0[9] = v8;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata);
  if (v10)
  {
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[4];
    uint64_t v13 = v0[5];
    swift_retain();
    sub_31E40(v11);
    swift_release();
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    uint64_t v15 = v0[7];
    if (v14)
    {
      sub_123FD0(v0[7]);
      uint64_t v16 = 0;
      unint64_t v10 = 0;
    }
    else
    {
      uint64_t v17 = v0[6];
      sub_AFA74(v0[7], v17);
      sub_123FD0(v15);
      uint64_t v16 = sub_ADB00();
      unint64_t v10 = v18;
      sub_AFAD8(v17);
    }
  }
  else
  {
    uint64_t v16 = 0;
  }
  unint64_t v19 = sub_2E1AC(v16, v10, 0xD000000000000029, (void *)0x8000000000151AB0, 0, 0);
  v0[10] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[11] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_123578;
  uint64_t v22 = v0[2];
  return sub_543BC(v22, v2, v4, 0, 0, v7, v9, v19);
}

uint64_t sub_123578(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_123708, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_123708()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_12379C(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C868);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_31E40((uint64_t)v8);
  swift_release();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_AFA74((uint64_t)v8, (uint64_t)v5);
    sub_123FD0((uint64_t)v8);
    unint64_t v10 = (id *)sub_AD488();
    uint64_t result = sub_AFAD8((uint64_t)v5);
    if (!v10) {
      return 0;
    }
    if ((unint64_t)v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_146930();
      uint64_t result = swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_9:
        if (((unint64_t)v10 & 0xC000000000000001) != 0)
        {
          id v11 = (id)sub_146810();
        }
        else
        {
          if (!*(void *)((char *)&dword_10 + ((unint64_t)v10 & 0xFFFFFFFFFFFFFF8)))
          {
            __break(1u);
            return result;
          }
          id v11 = v10[4];
        }
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
        id v13 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v12];
        unint64_t v15 = 0;
        unint64_t v16 = 0xE000000000000000;
        sub_1467D0(20);
        swift_bridgeObjectRelease();
        unint64_t v15 = 0xD000000000000011;
        unint64_t v16 = 0x800000000014E8E0;
        v17._id countAndFlagsBits = sub_57C84();
        sub_145C90(v17);
        swift_bridgeObjectRelease();
        v18._id countAndFlagsBits = 59;
        v18._object = (void *)0xE100000000000000;
        sub_145C90(v18);

        return v15;
      }
    }
    else if (*(void *)((char *)&dword_10 + ((unint64_t)v10 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_123FD0((uint64_t)v8);
  return 0;
}

uint64_t sub_123A2C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_12327C(a1);
}

double sub_123AC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C868);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata))
  {
    swift_retain();
    sub_31E40((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_124030((uint64_t)v5, (uint64_t)v9);
      uint64_t v10 = sub_AD12C();
      uint64_t v12 = v11;
      uint64_t v13 = sub_AD2D8();
      uint64_t v15 = v14;
      *(void *)(a1 + 24) = &_s6ResultVN_1;
      *(void *)(a1 + 32) = sub_124094();
      *(void *)(a1 + 40) = sub_1240E8();
      unint64_t v16 = (void *)swift_allocObject();
      *(void *)a1 = v16;
      void v16[2] = v10;
      void v16[3] = v12;
      v16[4] = v13;
      v16[5] = v15;
      sub_AFAD8((uint64_t)v9);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_123FD0((uint64_t)v5);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_123CA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_A314(&qword_1A2F20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_124654();
  sub_146D10();
  char v14 = 0;
  sub_146AE0();
  if (!v5)
  {
    char v13 = 1;
    sub_146AE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_123E20(uint64_t a1)
{
  unint64_t result = sub_123E48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_123E48()
{
  unint64_t result = qword_1A2EE8;
  if (!qword_1A2EE8)
  {
    _s16StateOfMindAssetCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2EE8);
  }
  return result;
}

uint64_t sub_123EA0()
{
  if (*v0) {
    return 0x746169636F737361;
  }
  else {
    return 0x736C6562616CLL;
  }
}

uint64_t sub_123EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_124348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_123F08(uint64_t a1)
{
  unint64_t v2 = sub_124654();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_123F44(uint64_t a1)
{
  unint64_t v2 = sub_124654();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_123F80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_12444C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_123FB0(void *a1)
{
  return sub_123CA8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_123FD0(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C868);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_124030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_124094()
{
  unint64_t result = qword_1A2F00;
  if (!qword_1A2F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F00);
  }
  return result;
}

unint64_t sub_1240E8()
{
  unint64_t result = qword_1A2F08;
  if (!qword_1A2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F08);
  }
  return result;
}

uint64_t sub_12413C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t _s6ResultVwxx_1()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s6ResultVwcp_1(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca_1(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ResultVwta_1(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet_1(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ResultVwst_1(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa_9()
{
  return &_s6ResultVN_1;
}

uint64_t sub_124348(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_12444C(void *a1)
{
  uint64_t v3 = sub_A314(&qword_1A2F10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_2F114(a1, a1[3]);
  sub_124654();
  sub_146D00();
  if (v1)
  {
    sub_C7FC((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_146A30();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_146A30();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_C7FC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_124654()
{
  unint64_t result = qword_1A2F18;
  if (!qword_1A2F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F18);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_7(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x124774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_9()
{
  return &_s6ResultV10CodingKeysON_9;
}

unint64_t sub_1247B0()
{
  unint64_t result = qword_1A2F28;
  if (!qword_1A2F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F28);
  }
  return result;
}

unint64_t sub_124808()
{
  unint64_t result = qword_1A2F30;
  if (!qword_1A2F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F30);
  }
  return result;
}

unint64_t sub_124860()
{
  unint64_t result = qword_1A2F38;
  if (!qword_1A2F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A2F38);
  }
  return result;
}

void sub_1248BC(void *a1)
{
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for SubtitleValueDisclosureCell();
  objc_msgSendSuper2(&v21, "refreshCellContentsWithSpecifier:", a1);
  if ([v1 value])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_4FA08((uint64_t)&v17, (uint64_t)v19);
  if (v20)
  {
    if (swift_dynamicCast())
    {
      NSString v3 = sub_145B80();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    sub_C5BC((uint64_t)v19);
  }
  NSString v3 = 0;
LABEL_9:
  [v1 _setBadgeText:v3];

  *(void *)&long long v17 = sub_145BC0();
  *((void *)&v17 + 1) = v4;
  id v5 = [a1 objectForKeyedSubscript:sub_146C00()];
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_4FA08((uint64_t)&v17, (uint64_t)v19);
  if (v20)
  {
    if ((swift_dynamicCast() & 1) != 0 && (v16 & 1) == 0)
    {
      id v6 = [self tertiaryLabelColor];
      goto LABEL_18;
    }
  }
  else
  {
    sub_C5BC((uint64_t)v19);
  }
  id v6 = 0;
LABEL_18:
  [v1 _setBadgeColor:v6];

  id v7 = [v1 textLabel];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setNumberOfLines:0];
  }
  id v9 = [v1 detailTextLabel];
  if (v9)
  {
    char v10 = v9;
    *(void *)&long long v17 = sub_145BC0();
    *((void *)&v17 + 1) = v11;
    id v12 = [a1 objectForKeyedSubscript:sub_146C00()];
    swift_unknownObjectRelease();
    if (v12)
    {
      sub_1466A0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    sub_4FA08((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      if (swift_dynamicCast())
      {
        NSString v13 = sub_145B80();
        swift_bridgeObjectRelease();
LABEL_29:
        [v10 setText:v13];

        goto LABEL_30;
      }
    }
    else
    {
      sub_C5BC((uint64_t)v19);
    }
    NSString v13 = 0;
    goto LABEL_29;
  }
LABEL_30:
  id v14 = [v1 detailTextLabel];
  if (v14)
  {
    uint64_t v15 = v14;
    [v14 setNumberOfLines:0];
  }
}

uint64_t sub_124DE0()
{
  id v1 = [v0 detailTextLabel];
  if (!v1 || (BOOL v2 = v1, v3 = [v1 text], v2, !v3))
  {
    v7.receiver = v0;
    v7.super_class = (Class)type metadata accessor for SubtitleValueDisclosureCell();
    id v4 = objc_msgSendSuper2(&v7, "accessibilityHint");
    if (!v4) {
      return 0;
    }
    id v3 = v4;
  }
  uint64_t v5 = sub_145BC0();

  return v5;
}

void sub_124EA8(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  if (a3)
  {
    sub_145BC0();
    id v6 = a1;
    NSString v7 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a1;
    NSString v7 = 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for SubtitleValueDisclosureCell();
  objc_msgSendSuper2(&v9, *a4, v7);
}

id sub_124F38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    NSString v7 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for SubtitleValueDisclosureCell();
  id v8 = objc_msgSendSuper2(&v11, "initWithStyle:reuseIdentifier:specifier:", a1, v7, a4);

  id v9 = v8;
  if (v9) {

  }
  return v9;
}

id sub_125120()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SubtitleValueDisclosureCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SubtitleValueDisclosureCell()
{
  return self;
}

unint64_t sub_125178(char a1)
{
  unint64_t result = 0x707954616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 1735290739;
      break;
    case 2:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 3:
      unint64_t result = 0x614E747369747261;
      break;
    case 4:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 5:
      unint64_t result = 0x656D614E707061;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x726156726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_12529C(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A30B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_127C18();
  sub_146D10();
  LOBYTE(v14[0]) = *v3;
  char v16 = 0;
  sub_A7050();
  sub_146B10();
  if (!v2)
  {
    LOBYTE(v14[0]) = 1;
    sub_146A90();
    LOBYTE(v14[0]) = 2;
    sub_146A90();
    LOBYTE(v14[0]) = 3;
    sub_146A90();
    uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    LOBYTE(v14[0]) = 4;
    sub_144F60();
    sub_127BD0(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146AD0();
    LOBYTE(v14[0]) = 5;
    sub_146A90();
    LOBYTE(v14[0]) = 6;
    sub_145230();
    sub_127BD0(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    char v10 = &v3[*(int *)(v9 + 44)];
    char v11 = v10[32];
    long long v12 = *((_OWORD *)v10 + 1);
    v14[0] = *(_OWORD *)v10;
    v14[1] = v12;
    char v15 = v11;
    char v16 = 7;
    sub_A314(&qword_1A30A0);
    sub_127D24(&qword_1A30C0);
    sub_146AD0();
    LOBYTE(v14[0]) = v3[*(int *)(v9 + 48)];
    char v16 = 8;
    sub_127D6C();
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_12564C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  char v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_1A3090);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = &v14[*(int *)(v12 + 44)];
  *(_OWORD *)char v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[32] = 1;
  char v45 = (int *)v12;
  uint64_t v46 = a1;
  uint64_t v16 = *(int *)(v12 + 48);
  long long v17 = v14;
  v14[v16] = 3;
  sub_2F114(a1, a1[3]);
  sub_127C18();
  long long v18 = v47;
  sub_146D00();
  if (v18) {
    return sub_C7FC((uint64_t)v46);
  }
  uint64_t v19 = (uint64_t)v7;
  uint64_t v47 = v15;
  uint64_t v40 = v16;
  uint64_t v20 = v43;
  char v51 = 0;
  sub_A6F3C();
  uint64_t v21 = v44;
  sub_146A60();
  uint64_t v22 = (uint64_t)v17;
  *long long v17 = v48;
  LOBYTE(v48) = 1;
  uint64_t v23 = v20;
  *((void *)v17 + 1) = sub_1469E0();
  *((void *)v17 + 2) = v24;
  LOBYTE(v48) = 2;
  uint64_t v25 = sub_1469E0();
  uint64_t v26 = (uint64_t)v46;
  *((void *)v17 + 3) = v25;
  *((void *)v17 + 4) = v27;
  LOBYTE(v48) = 3;
  uint64_t v28 = sub_1469E0();
  uint64_t v29 = v45;
  *((void *)v17 + 5) = v28;
  *((void *)v17 + 6) = v30;
  sub_144F60();
  LOBYTE(v48) = 4;
  sub_127BD0(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146A20();
  sub_2E4D0(v19, (uint64_t)&v17[v29[8]], &qword_19EB20);
  LOBYTE(v48) = 5;
  uint64_t v31 = sub_1469E0();
  uint64_t v32 = (uint64_t *)&v17[v29[9]];
  *uint64_t v32 = v31;
  v32[1] = v33;
  sub_145230();
  LOBYTE(v48) = 6;
  sub_127BD0(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v34 = (uint64_t)v42;
  sub_146A20();
  sub_2E4D0(v34, v22 + v29[10], &qword_19C150);
  sub_A314(&qword_1A30A0);
  char v51 = 7;
  sub_127D24(&qword_1A30A8);
  sub_146A20();
  char v35 = v50;
  long long v36 = v49;
  uint64_t v37 = v47;
  *(_OWORD *)uint64_t v47 = v48;
  *((_OWORD *)v37 + 1) = v36;
  v37[32] = v35;
  char v51 = 8;
  sub_127C6C();
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v21);
  uint64_t v38 = v41;
  *(unsigned char *)(v22 + v40) = v48;
  sub_127CC0(v22, v38);
  sub_C7FC(v26);
  return sub_A2B4C(v22);
}

uint64_t sub_125D78(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = sub_A314(&qword_1A3130);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_1A3138);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_1A3140);
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_A314(&qword_1A3148);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_128AC4();
  sub_146D10();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_128B6C();
      sub_146A80();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_128B18();
      char v15 = v21;
      sub_146A80();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_128BC0();
    sub_146A80();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1260E4()
{
  return sub_125178(*v0);
}

uint64_t sub_1260EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_12803C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_126114(uint64_t a1)
{
  unint64_t v2 = sub_127C18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_126150(uint64_t a1)
{
  unint64_t v2 = sub_127C18();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_12618C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_12564C(a1, a2);
}

uint64_t sub_1261A4(void *a1)
{
  return sub_12529C(a1);
}

uint64_t sub_1261BC()
{
  uint64_t v1 = 1802658148;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B72614479726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_12620C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_128414(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_126234(uint64_t a1)
{
  unint64_t v2 = sub_128AC4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_126270(uint64_t a1)
{
  unint64_t v2 = sub_128AC4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1262AC(uint64_t a1)
{
  unint64_t v2 = sub_128B6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1262E8(uint64_t a1)
{
  unint64_t v2 = sub_128B6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_126324(uint64_t a1)
{
  unint64_t v2 = sub_128BC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_126360(uint64_t a1)
{
  unint64_t v2 = sub_128BC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_12639C(uint64_t a1)
{
  unint64_t v2 = sub_128B18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1263D8(uint64_t a1)
{
  unint64_t v2 = sub_128B18();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_126414@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_128554(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_126440(void *a1)
{
  return sub_125D78(a1, *v1);
}

uint64_t sub_12645C()
{
  uint64_t v1 = sub_A314(&qword_19C7B8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_327DC((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C7B8);
    return 0;
  }
  sub_A2BA8((uint64_t)v3, (uint64_t)v7);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15A590;
  *(void *)(inited + 32) = *((void *)v7 + 1);
  *(_OWORD *)(inited + 40) = *((_OWORD *)v7 + 1);
  uint64_t v9 = *((void *)v7 + 6);
  *(_OWORD *)(inited + 56) = *((_OWORD *)v7 + 2);
  *(void *)(inited + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_A2B4C((uint64_t)v7);
  return v10;
}

uint64_t sub_126698()
{
  return swift_release();
}

id sub_1266A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s20ThirdPartyMediaAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1266F0()
{
  return _s20ThirdPartyMediaAssetCMa(0);
}

uint64_t _s20ThirdPartyMediaAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A2F90);
}

uint64_t sub_126718()
{
  return swift_updateClassMetadata2();
}

void *sub_12675C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = a3[8];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v11 = sub_144F60();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19EB20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = sub_145230();
    uint64_t v24 = *(void *)(v23 - 8);
    char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = sub_A314(&qword_19C150);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = a3[11];
    uint64_t v28 = a3[12];
    uint64_t v29 = (char *)v4 + v27;
    uint64_t v30 = (char *)a2 + v27;
    long long v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v29[32] = v30[32];
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
  }
  return v4;
}

uint64_t sub_126A2C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_145230();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_126BB0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19EB20);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (const void *)(a2 + v15);
  uint64_t v21 = sub_145230();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

uint64_t sub_126E30(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_145230();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  long long v29 = (long long *)(a2 + v27);
  long long v30 = *v29;
  long long v31 = v29[1];
  *(unsigned char *)(v28 + 32) = *((unsigned char *)v29 + 32);
  *(_OWORD *)uint64_t v28 = v30;
  *(_OWORD *)(v28 + 16) = v31;
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1271A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_145230();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t sub_1273E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_144F60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19EB20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  int v24 = (void *)(a1 + v23);
  int v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_145230();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_A314(&qword_19C150);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  return a1;
}

uint64_t sub_12770C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_127720);
}

uint64_t sub_127720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19EB20);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_127860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_127874);
}

uint64_t sub_127874(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s20ThirdPartyMediaAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_407CC(a1, &qword_1A2FF8);
}

void sub_1279C8()
{
  sub_A6D70(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_A6D70(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_127AF4()
{
  return swift_retain();
}

uint64_t sub_127B04(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_127B1C()
{
  return sub_12645C();
}

uint64_t sub_127B40()
{
  return sub_127BD0(&qword_19C7C0, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_127B88()
{
  return sub_127BD0(&qword_1A3050, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_127BD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_127C18()
{
  unint64_t result = qword_1A3098;
  if (!qword_1A3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3098);
  }
  return result;
}

unint64_t sub_127C6C()
{
  unint64_t result = qword_1A30B0;
  if (!qword_1A30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30B0);
  }
  return result;
}

uint64_t sub_127CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_127D24(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_1A30A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_127D6C()
{
  unint64_t result = qword_1A30C8;
  if (!qword_1A30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30C8);
  }
  return result;
}

unsigned char *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x127E8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantON;
}

unint64_t sub_127EE0()
{
  unint64_t result = qword_1A30D0;
  if (!qword_1A30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30D0);
  }
  return result;
}

unint64_t sub_127F38()
{
  unint64_t result = qword_1A30D8;
  if (!qword_1A30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30D8);
  }
  return result;
}

unint64_t sub_127F90()
{
  unint64_t result = qword_1A30E0;
  if (!qword_1A30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30E0);
  }
  return result;
}

unint64_t sub_127FE8()
{
  unint64_t result = qword_1A30E8;
  if (!qword_1A30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A30E8);
  }
  return result;
}

uint64_t sub_12803C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000151E70 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726156726F6C6F63 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_128414(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B72614479726576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_128554(void *a1)
{
  uint64_t v2 = sub_A314(&qword_1A30F0);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  int v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_A314(&qword_1A30F8);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_1A3100);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_1A3108);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_128AC4();
  uint64_t v12 = (uint64_t)v30;
  sub_146D00();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  int v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_146A70();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_146840();
    swift_allocError();
    uint64_t v11 = v18;
    sub_A314(&qword_1A0D08);
    *uint64_t v11 = &_s20ThirdPartyMediaAssetC12ColorVariantON;
    sub_1469D0();
    sub_146830();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    sub_C7FC((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_128B6C();
      sub_1469C0();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_128B18();
      sub_1469C0();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_128BC0();
    sub_1469C0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  sub_C7FC((uint64_t)v30);
  return v11;
}

unint64_t sub_128AC4()
{
  unint64_t result = qword_1A3110;
  if (!qword_1A3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3110);
  }
  return result;
}

unint64_t sub_128B18()
{
  unint64_t result = qword_1A3118;
  if (!qword_1A3118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3118);
  }
  return result;
}

unint64_t sub_128B6C()
{
  unint64_t result = qword_1A3120;
  if (!qword_1A3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3120);
  }
  return result;
}

unint64_t sub_128BC0()
{
  unint64_t result = qword_1A3128;
  if (!qword_1A3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3128);
  }
  return result;
}

unsigned char *_s20ThirdPartyMediaAssetC12ColorVariantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x128CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysON;
}

unint64_t sub_128D4C()
{
  unint64_t result = qword_1A3150;
  if (!qword_1A3150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3150);
  }
  return result;
}

unint64_t sub_128DA4()
{
  unint64_t result = qword_1A3158;
  if (!qword_1A3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3158);
  }
  return result;
}

unint64_t sub_128DFC()
{
  unint64_t result = qword_1A3160;
  if (!qword_1A3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3160);
  }
  return result;
}

unint64_t sub_128E54()
{
  unint64_t result = qword_1A3168;
  if (!qword_1A3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3168);
  }
  return result;
}

unint64_t sub_128EAC()
{
  unint64_t result = qword_1A3170;
  if (!qword_1A3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3170);
  }
  return result;
}

unint64_t sub_128F04()
{
  unint64_t result = qword_1A3178;
  if (!qword_1A3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3178);
  }
  return result;
}

unint64_t sub_128F5C()
{
  unint64_t result = qword_1A3180;
  if (!qword_1A3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3180);
  }
  return result;
}

unint64_t sub_128FB4()
{
  unint64_t result = qword_1A3188;
  if (!qword_1A3188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3188);
  }
  return result;
}

unint64_t sub_12900C()
{
  unint64_t result = qword_1A3190;
  if (!qword_1A3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A3190);
  }
  return result;
}

uint64_t sub_12910C(void *a1)
{
  uint64_t v2 = sub_1457D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1458B0();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_145840();
  id v9 = [a1 name];
  if (v9)
  {
    uint64_t v10 = v9;
    sub_145BC0();
  }
  sub_145890();
  uint64_t v11 = enum case for UIListContentConfiguration.TextProperties.TextAlignment.center(_:);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v5, enum case for UIListContentConfiguration.TextProperties.TextAlignment.center(_:), v2);
  uint64_t v13 = (void (*)(uint64_t *, void))sub_1457F0();
  sub_1457E0();
  v13(v25, 0);
  if ([a1 propertyForKey:PSHeaderDetailTextGroupKey])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v28, 0, sizeof(v28));
  }
  sub_4FA08((uint64_t)v28, (uint64_t)v25);
  if (v26) {
    swift_dynamicCast();
  }
  else {
    sub_C5BC((uint64_t)v25);
  }
  sub_1457C0();
  v12(v5, v11, v2);
  uint64_t v14 = (void (*)(uint64_t *, void))sub_145800();
  sub_1457E0();
  v14(v25, 0);
  uint64_t v15 = (void (*)(uint64_t *, void))sub_145810();
  *uint64_t v16 = 0x4045000000000000;
  v15(v25, 0);
  uint64_t v17 = (void (*)(uint64_t *, void))sub_145810();
  *(void *)(v18 + 16) = 0x403E000000000000;
  v17(v25, 0);
  uint64_t v19 = v24;
  uint64_t v26 = v24;
  uint64_t v27 = &protocol witness table for UIListContentConfiguration;
  uint64_t v20 = sub_484D0(v25);
  uint64_t v21 = v23;
  (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(v20, v8, v19);
  sub_146120();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v19);
}

id sub_129530()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlacardHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlacardHeaderView()
{
  return self;
}

void sub_129588(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtC15JournalSettings23ScheduleDaySelectorCell_daySelector;
  type metadata accessor for ScheduleDaySelector();
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 init];

  if (a3)
  {
    NSString v11 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for ScheduleDaySelectorCell();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v18, "initWithStyle:reuseIdentifier:specifier:", a1, v11, a4);

  if (v12)
  {
    uint64_t v13 = OBJC_IVAR____TtC15JournalSettings23ScheduleDaySelectorCell_daySelector;
    uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC15JournalSettings23ScheduleDaySelectorCell_daySelector];
    *(void *)(v14 + OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_delegate + 8) = &off_18A8C0;
    swift_unknownObjectWeakAssign();
    uint64_t v15 = v12;
    id v16 = [v15 contentView];
    [v16 addSubview:v14];

    id v17 = *(id *)&v12[v13];
    sub_42068(0.0);

    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_129770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15JournalSettings23ScheduleDaySelectorCell_daySelector;
  type metadata accessor for ScheduleDaySelector();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];

  if (a3)
  {
    NSString v9 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for ScheduleDaySelectorCell();
  id v10 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v9);

  return v10;
}

uint64_t sub_129918(uint64_t a1)
{
  objc_super v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for ScheduleDaySelectorCell();
  objc_msgSendSuper2(&v10, "refreshCellContentsWithSpecifier:", a1);
  if ([v2 value])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_4FA08((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_C5BC((uint64_t)v8);
    goto LABEL_8;
  }
  sub_A314(&qword_19E230);
  if (!swift_dynamicCast())
  {
LABEL_8:
    uint64_t v4 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  uint64_t v4 = v6;
LABEL_9:
  sub_53BB8((uint64_t)v4);
  return swift_bridgeObjectRelease();
}

id sub_129A8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleDaySelectorCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScheduleDaySelectorCell()
{
  return self;
}

void sub_129AF4()
{
  if ([v0 cellTarget])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_4FA08((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    sub_129C38();
    if (swift_dynamicCast())
    {
      id v1 = [v0 cellAction];
      if (v1 && (id v2 = v1, (v3 = [v0 specifier]) != 0))
      {
        uint64_t v4 = v3;
        Class isa = sub_145FB0().super.isa;
        [v7 performSelector:v2 withObject:isa withObject:v4];

        id v6 = v7;
      }
      else
      {
      }
    }
  }
  else
  {
    sub_C5BC((uint64_t)v9);
  }
}

unint64_t sub_129C38()
{
  unint64_t result = qword_19EAE0;
  if (!qword_19EAE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19EAE0);
  }
  return result;
}

uint64_t sub_129CF4(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1458B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v25 - v9;
  sub_146240();
  uint64_t v11 = sub_1457B0();
  uint64_t v27 = v11;
  uint64_t v28 = &protocol witness table for UICellConfigurationState;
  objc_super v12 = sub_484D0(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, a1, v11);
  sub_1458A0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_C7FC((uint64_t)v26);
  id v14 = [v2 specifier];
  uint64_t v15 = v14;
  if (v14)
  {
    id v16 = [v14 name];

    if (v16)
    {
      sub_145BC0();
    }
  }
  sub_145890();
  if ([v2 value])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_4FA08((uint64_t)v25, (uint64_t)v26);
  if (v27) {
    swift_dynamicCast();
  }
  else {
    sub_C5BC((uint64_t)v26);
  }
  sub_1457C0();
  if ([v2 accessoryType])
  {
    id v17 = (void (*)(uint64_t *, void))sub_145810();
    *(void *)(v18 + 24) = 0;
    v17(v26, 0);
  }
  uint64_t v27 = v4;
  uint64_t v28 = &protocol witness table for UIListContentConfiguration;
  uint64_t v19 = sub_484D0(v26);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v19, v10, v4);
  sub_146230();
  id v20 = [v2 specifier];
  NSString v21 = v20;
  if (v20)
  {
    id v22 = [v20 identifier];

    if (v22)
    {
      sub_145BC0();

      NSString v21 = sub_145B80();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v21 = 0;
    }
  }
  [v2 setAccessibilityIdentifier:v21];

  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

id sub_12A178(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    NSString v7 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for AdaptiveValueTableCell();
  id v8 = objc_msgSendSuper2(&v11, "initWithStyle:reuseIdentifier:specifier:", a1, v7, a4);

  id v9 = v8;
  if (v9) {

  }
  return v9;
}

id sub_12A360()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdaptiveValueTableCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AdaptiveValueTableCell()
{
  return self;
}

void sub_12A3B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1458B0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack;
  id v10 = objc_allocWithZone((Class)UIStackView);
  objc_super v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_listContentView;
  sub_C84C(0, &qword_1A32B0);
  sub_145880();
  *(void *)&v11[v12] = sub_146360();

  if (a3)
  {
    NSString v13 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  v46.receiver = v11;
  v46.super_class = (Class)type metadata accessor for TimePickerCell();
  char v45 = a4;
  id v14 = (char *)objc_msgSendSuper2(&v46, "initWithStyle:reuseIdentifier:specifier:", a1, v13, a4);

  if (v14)
  {
    uint64_t v15 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack;
    id v16 = *(void **)&v14[OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack];
    id v17 = v14;
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v16 setLayoutMarginsRelativeArrangement:1];
    [v16 addArrangedSubview:*(void *)&v17[OBJC_IVAR____TtC15JournalSettings14TimePickerCell_listContentView]];
    id v18 = v16;
    id v19 = [v17 control];
    if (v19)
    {
      id v20 = v19;
      self;
      [v18 addArrangedSubview:swift_dynamicCastObjCClassUnconditional()];

      id v21 = [v17 contentView];
      [v21 addSubview:*(void *)&v14[v15]];

      uint64_t v44 = self;
      sub_A314(&qword_19C130);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_15BFF0;
      id v23 = [*(id *)&v14[v15] topAnchor];
      id v24 = [v17 contentView];
      id v25 = [v24 topAnchor];

      id v26 = [v23 constraintEqualToAnchor:v25];
      *(void *)(v22 + 32) = v26;
      id v27 = [*(id *)&v14[v15] leadingAnchor];
      id v28 = [v17 contentView];
      id v29 = [v28 layoutMarginsGuide];

      id v30 = [v29 leadingAnchor];
      id v31 = [v27 constraintEqualToAnchor:v30];

      *(void *)(v22 + 40) = v31;
      id v32 = [*(id *)&v14[v15] bottomAnchor];
      id v33 = [v17 contentView];
      id v34 = [v33 bottomAnchor];

      id v35 = [v32 constraintEqualToAnchor:v34];
      *(void *)(v22 + 48) = v35;
      id v36 = [*(id *)&v14[v15] trailingAnchor];
      id v37 = [v17 contentView];
      id v38 = [v37 layoutMarginsGuide];

      id v39 = [v38 trailingAnchor];
      id v40 = [v36 constraintEqualToAnchor:v39];

      *(void *)(v22 + 56) = v40;
      sub_145E00();
      sub_C84C(0, (unint64_t *)&qword_19D0E8);
      Class isa = sub_145DD0().super.isa;
      swift_bridgeObjectRelease();
      [v44 activateConstraints:isa];

      id v42 = [self defaultCenter];
      uint64_t v43 = v17;
      [v42 addObserver:v43 selector:"willResignActive:" name:UIApplicationWillResignActiveNotification object:0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_12A994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1458B0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack;
  id v8 = objc_allocWithZone((Class)UIStackView);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_listContentView;
  sub_C84C(0, &qword_1A32B0);
  sub_145880();
  *(void *)&v9[v10] = sub_146360();

  if (a3)
  {
    NSString v11 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for TimePickerCell();
  id v12 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", a1, v11);

  return v12;
}

uint64_t sub_12AB2C(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = sub_1458B0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack;
  id v6 = objc_allocWithZone((Class)UIStackView);
  uint64_t v7 = v1;
  *(void *)&v1[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC15JournalSettings14TimePickerCell_listContentView;
  sub_C84C(0, &qword_1A32B0);
  sub_145880();
  uint64_t v9 = sub_146360();

  *(void *)&v7[v8] = v9;
  uint64_t v10 = *(void **)&v7[v8];

  type metadata accessor for TimePickerCell();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_12AEB4(uint64_t a1)
{
  sub_41FE8(a1, (uint64_t)v11);
  uint64_t v2 = v12;
  if (v12)
  {
    id v3 = sub_2F114(v11, v12);
    uint64_t v4 = *(void *)(v2 - 8);
    __chkstk_darwin(v3);
    id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    sub_C7FC((uint64_t)v11);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (objc_class *)type metadata accessor for TimePickerCell();
  v10.receiver = v1;
  v10.super_class = v8;
  objc_msgSendSuper2(&v10, "setValue:", v7);
  swift_unknownObjectRelease();
  return [v1 setNeedsUpdateConfiguration];
}

id sub_12B108(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145230();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v50 = (char *)&v46 - v11;
  uint64_t v12 = sub_1458B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v46 - v17;
  sub_146240();
  uint64_t v19 = sub_1457B0();
  uint64_t v54 = v19;
  uint64_t v55 = &protocol witness table for UICellConfigurationState;
  id v20 = sub_484D0(v53);
  id v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  uint64_t v51 = a1;
  v21(v20, a1, v19);
  sub_1458A0();
  long long v49 = *(void (**)(char *, uint64_t))(v13 + 8);
  v49(v16, v12);
  sub_C7FC((uint64_t)v53);
  id result = [v2 specifier];
  if (!result)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v23 = result;
  uint64_t v48 = v13 + 8;
  id v24 = [result name];

  if (v24)
  {
    sub_145BC0();
  }
  sub_145890();
  uint64_t v25 = sub_145790();
  id v26 = [(id)v25 preferredContentSizeCategory];

  LOBYTE(v25) = sub_1463B0();
  id v27 = *(void **)&v2[OBJC_IVAR____TtC15JournalSettings14TimePickerCell_mainStack];
  if (v25)
  {
    [v27 setAxis:1];
    [v27 setDistribution:0];
    [v27 setAlignment:1];
    sub_145850();
    objc_msgSend(v27, "setSpacing:");
    sub_145820();
    double v29 = v28;
    sub_145820();
    objc_msgSend(v27, "setDirectionalLayoutMargins:", v29, 0.0);
  }
  else
  {
    [v27 setAxis:0];
    [v27 setAlignment:3];
    [v27 setDistribution:3];
    sub_145870();
    objc_msgSend(v27, "setSpacing:");
    objc_msgSend(v27, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  }
  id v30 = v50;
  sub_145830();
  sub_145860();
  uint64_t v54 = v12;
  uint64_t v55 = &protocol witness table for UIListContentConfiguration;
  id v31 = sub_484D0(v53);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v31, v18, v12);
  sub_146350();
  if ([v2 value])
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v52, 0, sizeof(v52));
  }
  sub_4FA08((uint64_t)v52, (uint64_t)v53);
  if (!v54)
  {
    sub_1248C((uint64_t)v53, &qword_19B1E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_16;
  }
  int v32 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v32 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_16:
    sub_1248C((uint64_t)v6, &qword_19C150);
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v30, v6, v7);
  id result = [v2 control];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v33 = result;
  id v34 = v30;
  self;
  id v35 = [(id)swift_dynamicCastObjCClassUnconditional() date];

  id v36 = v47;
  sub_1451E0();

  sub_12C1B0();
  LOBYTE(v33) = sub_145AD0();
  id v39 = *(void (**)(char *, uint64_t))(v8 + 8);
  id v37 = (char *)(v8 + 8);
  id v38 = v39;
  v39(v36, v7);
  if (v33)
  {
    v38(v34, v7);
    goto LABEL_19;
  }
  uint64_t v47 = v37;
  id result = [v2 control];
  if (result)
  {
    id v40 = result;
    self;
    uint64_t v41 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v42 = v50;
    Class isa = sub_145180().super.isa;
    [v41 setDate:isa];

    v38(v42, v7);
LABEL_19:
    id result = [v2 control];
    if (result)
    {
      uint64_t v44 = result;
      self;
      char v45 = (void *)swift_dynamicCastObjCClassUnconditional();
      [v45 setEnabled:(sub_145780() & 1) == 0];

      return (id)((uint64_t (*)(char *, uint64_t))v49)(v18, v12);
    }
    goto LABEL_22;
  }
LABEL_24:
  __break(1u);
  return result;
}

id sub_12B9B0()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TimePickerCell();
  id v1 = objc_msgSendSuper2(&v5, "accessibilityIdentifier");
  if (v1) {
    goto LABEL_4;
  }
  id result = [v0 specifier];
  if (result)
  {
    id v3 = result;
    id v1 = [result identifier];

    if (!v1) {
      return 0;
    }
LABEL_4:
    uint64_t v4 = sub_145BC0();

    return (id)v4;
  }
  __break(1u);
  return result;
}

id sub_12BB78(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

id sub_12BBF8()
{
  uint64_t v1 = sub_145020();
  uint64_t v25 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145060();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_145230();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for TimePickerCell();
  v26.receiver = v0;
  v26.super_class = v12;
  id v13 = objc_msgSendSuper2(&v26, "accessibilityValue");
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_145BC0();

    return (id)v15;
  }
  uint64_t v21 = v4;
  uint64_t v22 = v9;
  uint64_t v23 = v1;
  uint64_t v24 = v5;
  uint64_t v16 = v25;
  id result = [v0 control];
  if (result)
  {
    id v18 = result;
    self;
    id v19 = [(id)swift_dynamicCastObjCClassUnconditional() date];

    sub_1451E0();
    sub_145040();
    sub_145010();
    uint64_t v15 = sub_145200();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v23);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
    return (id)v15;
  }
  __break(1u);
  return result;
}

void sub_12BEEC(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  if (a3)
  {
    sub_145BC0();
    id v6 = a1;
    NSString v7 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a1;
    NSString v7 = 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for TimePickerCell();
  objc_msgSendSuper2(&v9, *a4, v7);
}

id sub_12C10C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimePickerCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TimePickerCell()
{
  return self;
}

unint64_t sub_12C1B0()
{
  unint64_t result = qword_19EB60;
  if (!qword_19EB60)
  {
    sub_145230();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EB60);
  }
  return result;
}

id sub_12C218(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v4);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v7 - 8);
  objc_super v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char *v6 = a3;
  swift_storeEnumTagMultiPayload();
  sub_48B00((uint64_t)v9);
  sub_12C434((uint64_t)v6);
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  id v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_144EB0(v12);
    id v13 = v14;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }

  return v13;
}

id sub_12C3DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsAppLaunchItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SettingsAppLaunchItem()
{
  return self;
}

uint64_t sub_12C434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12C490(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_12C4B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

double *sub_12C4E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    objc_super v9 = _swiftEmptyArrayStorage;
    sub_2CC58(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      v4 += 8;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2CC58(0, *((void *)v2 + 2) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *((void *)v2 + 2);
      unint64_t v5 = *((void *)v2 + 3);
      if (v6 >= v5 >> 1)
      {
        sub_2CC58(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *((void *)v2 + 2) = v6 + 1;
      sub_2A74C(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_12C600(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  id v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_2CC58(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        sub_146810();
        sub_1366EC();
        swift_dynamicCast();
        id v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2CC58(0, *((void *)v3 + 2) + 1, 1);
          id v3 = v13;
        }
        unint64_t v7 = *((void *)v3 + 2);
        unint64_t v6 = *((void *)v3 + 3);
        if (v7 >= v6 >> 1)
        {
          sub_2CC58(v6 > 1, v7 + 1, 1);
          id v3 = v13;
        }
        *((void *)v3 + 2) = v7 + 1;
        sub_2A74C(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      long long v8 = (id *)(a1 + 32);
      sub_1366EC();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        id v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2CC58(0, *((void *)v3 + 2) + 1, 1);
          id v3 = v13;
        }
        unint64_t v11 = *((void *)v3 + 2);
        unint64_t v10 = *((void *)v3 + 3);
        if (v11 >= v10 >> 1)
        {
          sub_2CC58(v10 > 1, v11 + 1, 1);
          id v3 = v13;
        }
        *((void *)v3 + 2) = v11 + 1;
        sub_2A74C(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_12C834(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  unint64_t v5 = (uint64_t (*)(double *))result;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  unint64_t v9 = 0;
  uint64_t v19 = a3 + 40;
  unint64_t v10 = _swiftEmptyArrayStorage;
  char v11 = 1;
  uint64_t v17 = (uint64_t (*)(double *))result;
  while (1)
  {
    if ((v11 & 1) != 0 || *(void *)&v6 == *(void *)&v7)
    {
      unint64_t v14 = *(void *)(v4 + 16);
      if (v9 <= v14) {
        unint64_t v15 = *(void *)(v4 + 16);
      }
      else {
        unint64_t v15 = v9;
      }
      uint64_t v16 = (double *)(v19 + 16 * v9);
      while (v14 != v9)
      {
        if (v15 == v9)
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v9;
        double v6 = *(v16 - 1);
        double v7 = *v16;
        v16 += 2;
        if (*(void *)&v6 != *(void *)&v7)
        {
          double v8 = v6;
          if (*(uint64_t *)&v7 < *(uint64_t *)&v6) {
            goto LABEL_27;
          }
          goto LABEL_18;
        }
      }
      goto LABEL_25;
    }
    if (*(uint64_t *)&v7 < *(uint64_t *)&v8) {
      break;
    }
LABEL_18:
    if (*(uint64_t *)&v6 < *(uint64_t *)&v8) {
      goto LABEL_28;
    }
    if (*(uint64_t *)&v6 >= *(uint64_t *)&v7) {
      goto LABEL_29;
    }
    double v20 = v6;
    uint64_t result = v5(&v20);
    if (v3)
    {
      swift_release();
LABEL_25:
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
    if (result)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v10;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2CBFC(0, *((void *)v10 + 2) + 1, 1);
        unint64_t v10 = v21;
      }
      unint64_t v13 = *((void *)v10 + 2);
      unint64_t v12 = *((void *)v10 + 3);
      if (v13 >= v12 >> 1)
      {
        uint64_t result = sub_2CBFC(v12 > 1, v13 + 1, 1);
        unint64_t v10 = v21;
      }
      *((void *)v10 + 2) = v13 + 1;
      v10[v13 + 4] = v6;
      uint64_t v4 = a3;
      unint64_t v5 = v17;
    }
    char v11 = 0;
    ++*(void *)&v6;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_12C9E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1366A4(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks;
  swift_beginAccess();
  return sub_13633C(v4, a2, type metadata accessor for InsightsDataManager.Streaks);
}

uint64_t sub_12CAC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v4 - 8);
  double v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_13633C(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.Streaks);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  char v11 = v6;
  uint64_t v12 = v7;
  sub_1366A4(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_1454F0();
  swift_release();
  return sub_136578((uint64_t)v6, type metadata accessor for InsightsDataManager.Streaks);
}

id sub_12CC18()
{
  uint64_t v1 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings);
  }
  else
  {
    if (qword_19AC90 != -1) {
      swift_once();
    }
    id v4 = [*(id *)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter) notificationSettings];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_12CCCC()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder);
  id v3 = (id)v2;
  if (v2 == 1)
  {
    if (qword_19AC90 != -1) {
      swift_once();
    }
    id v3 = [*(id *)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults) journalingScheduleData];
    if (v3)
    {
      uint64_t v4 = sub_144FA0();
      unint64_t v6 = v5;

      id v3 = (id)sub_345E8();
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      sub_C52C(v4, v6);
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    uint64_t v11 = *v1;
    *uint64_t v1 = (uint64_t)v3;
    v1[1] = v8;
    v1[2] = v10;
    swift_bridgeObjectRetain();
    sub_2C34C(v11);
  }
  sub_36078(v2);
  return v3;
}

uint64_t (*sub_12CE18(id *a1))(uint64_t a1, char a2)
{
  a1[3] = v1;
  *a1 = sub_12CCCC();
  a1[1] = v3;
  a1[2] = v4;
  return sub_12CE64;
}

uint64_t sub_12CE64(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = (uint64_t *)(*(void *)(a1 + 24)
                 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder);
  uint64_t v4 = *v3;
  *(_OWORD *)id v3 = *(_OWORD *)a1;
  v3[2] = v2;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_2C34C(v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_2C34C(v4);
  }
}

uint64_t sub_12CF0C()
{
  return sub_12D2C0(&OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___streakOnSpecifiers, sub_12CF2C);
}

uint64_t sub_12CF2C()
{
  uint64_t v1 = sub_1452C0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_145B50();
  __chkstk_darwin(v2 - 8);
  unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  sub_145AE0();
  id v3 = *(id *)&v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
  sub_1452B0();
  sub_145C10();
  uint64_t v17 = type metadata accessor for NotificationSettingsController();
  v16[0] = v0;
  uint64_t v4 = v0;
  NSString v5 = sub_145B80();
  swift_bridgeObjectRelease();
  uint64_t v6 = v17;
  if (v17)
  {
    uint64_t v7 = sub_2F114(v16, v17);
    uint64_t v8 = *(void *)(v6 - 8);
    __chkstk_darwin(v7);
    uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_C7FC((uint64_t)v16);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v5 target:v11 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:0 cell:-1 edit:0];

  uint64_t result = swift_unknownObjectRelease();
  if (v12)
  {
    NSString v14 = sub_145B80();
    objc_msgSend(v12, "setIdentifier:", v14, v16[0]);

    v16[0] = type metadata accessor for TimePickerCell();
    sub_A314(&qword_1A33B8);
    [v12 setProperty:sub_146C00() forKey:PSCellClassKey];
    swift_unknownObjectRelease();
    id v15 = v12;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                   + (v18 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_145E20();
    sub_145E50();
    sub_145E00();

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_12D2A0()
{
  return sub_12D2C0(&OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduleOnSpecifiers, (uint64_t (*)(void))sub_12D324);
}

uint64_t sub_12D2C0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2();
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

id sub_12D324()
{
  uint64_t v1 = sub_1452C0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_145B50();
  __chkstk_darwin(v2 - 8);
  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  sub_145AE0();
  id v3 = *(id *)&v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
  sub_1452B0();
  sub_145C10();
  uint64_t v24 = type metadata accessor for NotificationSettingsController();
  v23[0] = v0;
  uint64_t v22 = v0;
  NSString v4 = sub_145B80();
  swift_bridgeObjectRelease();
  uint64_t v5 = v24;
  if (v24)
  {
    uint64_t v6 = sub_2F114(v23, v24);
    uint64_t v7 = *(void *)(v5 - 8);
    __chkstk_darwin(v6);
    uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_C7FC((uint64_t)v23);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v4 target:v10 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:0 cell:-1 edit:0];

  id result = (id)swift_unknownObjectRelease();
  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  NSString v13 = sub_145B80();
  [v11 setIdentifier:v13];

  v23[0] = type metadata accessor for TimePickerCell();
  sub_A314(&qword_1A33B8);
  uint64_t v14 = sub_146C00();
  uint64_t v15 = PSCellClassKey;
  [v11 setProperty:v14 forKey:PSCellClassKey];
  swift_unknownObjectRelease();
  id v16 = v11;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (v25 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  sub_145E50();
  sub_145E00();
  id v17 = objc_allocWithZone((Class)PSSpecifier);
  id result = [v17 initWithName:0 target:v22 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:0 cell:-1 edit:0];
  if (!result) {
    goto LABEL_12;
  }
  unint64_t v18 = result;
  NSString v19 = sub_145B80();
  [v18 setIdentifier:v19];

  v23[0] = type metadata accessor for ScheduleDaySelectorCell();
  sub_A314(&qword_1A33C0);
  [v18 setProperty:sub_146C00() forKey:v15];
  swift_unknownObjectRelease();
  id v20 = v18;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (v25 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  sub_145E50();
  sub_145E00();

  return (id)v25;
}

uint64_t sub_12D7BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_144F60();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_144DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (objc_class **)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = sub_144DB0();
  uint64_t v46 = *(void *)(v51 - 8);
  uint64_t v9 = __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v43 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = sub_1452C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_145B50();
  __chkstk_darwin(v16 - 8);
  id v17 = (objc_class *)type metadata accessor for NotificationSettingsController();
  v54.receiver = v1;
  v54.super_class = v17;
  objc_msgSendSuper2(&v54, "viewDidLoad");
  sub_145AE0();
  id v18 = *(id *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
  sub_1452B0();
  sub_145C10();
  NSString v19 = sub_145B80();
  swift_bridgeObjectRelease();
  char v45 = v1;
  [v1 setTitle:v19];

  sub_145AE0();
  *uint64_t v8 = v17;
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.forClass(_:);
  uint64_t v21 = *(void (**)(objc_class **, uint64_t, uint64_t))(v6 + 104);
  v21(v8, enum case for LocalizedStringResource.BundleDescription.forClass(_:), v5);
  sub_1452B0();
  char v50 = v14;
  uint64_t v22 = v52;
  sub_144DC0();
  sub_145AE0();
  *uint64_t v8 = v17;
  v21(v8, v20, v5);
  sub_1452B0();
  sub_144DC0();
  sub_145AE0();
  *uint64_t v8 = v17;
  uint64_t v23 = v20;
  uint64_t v24 = v47;
  v21(v8, v23, v5);
  uint64_t v25 = (uint64_t)v48;
  sub_1452B0();
  uint64_t v26 = v49;
  sub_144DC0();
  sub_144F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v26) == 1)
  {
    id v27 = *(void (**)(char *, uint64_t))(v46 + 8);
    uint64_t v28 = v51;
    v27(v53, v51);
    v27(v22, v28);
    v27(v50, v28);
    return sub_1248C(v25, &qword_19EB20);
  }
  else
  {
    id v30 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v44, v25, v26);
    sub_A314(&qword_1A33D8);
    uint64_t v31 = v46;
    uint64_t v32 = *(void *)(v46 + 72);
    unint64_t v33 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1598D0;
    unint64_t v35 = v34 + v33;
    id v36 = *(void (**)(unint64_t, char *, uint64_t))(v31 + 16);
    id v37 = v22;
    uint64_t v38 = v51;
    v36(v34 + v33, v37, v51);
    unint64_t v39 = v35 + v32;
    id v40 = v53;
    v36(v39, v53, v38);
    uint64_t v41 = v50;
    sub_146280();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v26);
    id v42 = *(void (**)(char *, uint64_t))(v31 + 8);
    v42(v40, v38);
    v42(v52, v38);
    return ((uint64_t (*)(char *, uint64_t))v42)(v41, v38);
  }
}

void sub_12DF10(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NotificationSettingsController();
  objc_msgSendSuper2(&v5, "viewWillAppear:", a1 & 1);
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase];
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = 0x8000000000000000;
  sub_135C24(v3);
  [v1 reloadSpecifiers];
  id v4 = [self defaultCenter];
  [v4 addObserver:v1 selector:"saveIfNeeded" name:UIApplicationWillResignActiveNotification object:0];
}

void sub_12E0D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1452C0();
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145B50();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19AC90 != -1) {
    swift_once();
  }
  id v11 = [*(id *)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter) notificationSettings];
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings];
  *(void *)&v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings] = v11;

  id v13 = [*(id *)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults) journalingScheduleData];
  if (!v13) {
    goto LABEL_6;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_144FA0();
  unint64_t v17 = v16;

  uint64_t v18 = sub_345E8();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_C52C(v15, v17);
  if (v18)
  {
    uint64_t v23 = (uint64_t *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
    uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
    *uint64_t v23 = v18;
    v23[1] = v20;
    v23[2] = v22;
  }
  else
  {
LABEL_6:
    uint64_t v25 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase;
    if (!*(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase]
      && [*(id *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] isStreakReminderEnabled])
    {
      uint64_t v26 = sub_145F50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 1, 1, v26);
      sub_145F30();
      id v27 = v1;
      uint64_t v28 = sub_145F20();
      double v29 = (void *)swift_allocObject();
      void v29[2] = v28;
      v29[3] = &protocol witness table for MainActor;
      v29[4] = v27;
      uint64_t v30 = sub_76884((uint64_t)v10, (uint64_t)&unk_1A33D0, (uint64_t)v29);
      unint64_t v31 = *(void *)&v1[v25];
      *(void *)&v1[v25] = v30;
      sub_136834(v31);
      goto LABEL_11;
    }
    uint64_t v32 = &v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
    uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
    *((void *)v32 + 1) = 0;
    *((void *)v32 + 2) = 0;
    *(void *)uint64_t v32 = 0;
  }
  sub_2C34C(v24);
LABEL_11:
  unint64_t v146 = (unint64_t)_swiftEmptyArrayStorage;
  id v33 = sub_12CC18();
  id v34 = [v33 authorizationStatus];

  Swift::Int v142 = v7;
  Swift::Int v143 = v4;
  if (v34)
  {
    id v35 = sub_12CC18();
    id v36 = (char *)[v35 authorizationStatus];

    if (v36 == (unsigned char *)&def_94138 + 2
      && *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] >> 62 != 1)
    {
      goto LABEL_36;
    }
    id v37 = self;
    NSString v38 = sub_145B80();
    id v39 = [v37 groupSpecifierWithID:v38];

    if (!v39)
    {
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    sub_145AE0();
    id v40 = *(id *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
    sub_1452B0();
    sub_145C10();
    NSString v41 = sub_145B80();
    swift_bridgeObjectRelease();
    [v39 setName:v41];

    sub_145AE0();
    id v42 = v40;
    sub_1452B0();
    sub_145C10();
    NSString v43 = sub_145B80();
    swift_bridgeObjectRelease();
    [v39 setProperty:v43 forKey:PSHeaderDetailTextGroupKey];

    type metadata accessor for PlacardHeaderView();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    char v45 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v45)
    {
      sub_145BC0();
      char v45 = (NSString *)sub_145B80();
      swift_bridgeObjectRelease();
    }
    [v39 setProperty:v45 forKey:PSHeaderCellClassGroupKey];

    id v46 = v39;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_145E20();
    sub_145E50();
    sub_145E00();
    sub_145AE0();
    id v47 = v42;
    sub_1452B0();
    sub_145C10();
    uint64_t v145 = type metadata accessor for NotificationSettingsController();
    v144[0] = v1;
    uint64_t v48 = v1;
    NSString v49 = sub_145B80();
    swift_bridgeObjectRelease();
    uint64_t v50 = v145;
    if (v145)
    {
      uint64_t v51 = sub_2F114(v144, v145);
      uint64_t v52 = *(void *)(v50 - 8);
      __chkstk_darwin(v51);
      objc_super v54 = (char *)&v133 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v52 + 16))(v54);
      uint64_t v55 = sub_146B80();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
      sub_C7FC((uint64_t)v144);
    }
    else
    {
      uint64_t v55 = 0;
    }
    id v74 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v49 target:v55 set:0 get:0 detail:0 cell:13 edit:0];

    swift_unknownObjectRelease();
    if (!v74) {
      goto LABEL_75;
    }
  }
  else
  {
    uint64_t v56 = self;
    NSString v57 = sub_145B80();
    id v58 = [v56 groupSpecifierWithID:v57];

    if (!v58)
    {
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      return;
    }
    sub_145AE0();
    id v59 = *(id *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
    sub_1452B0();
    sub_145C10();
    NSString v60 = sub_145B80();
    swift_bridgeObjectRelease();
    [v58 setName:v60];

    sub_145AE0();
    id v61 = v59;
    sub_1452B0();
    sub_145C10();
    NSString v62 = sub_145B80();
    swift_bridgeObjectRelease();
    [v58 setProperty:v62 forKey:PSHeaderDetailTextGroupKey];

    type metadata accessor for PlacardHeaderView();
    uint64_t v63 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v64 = NSStringFromClass(v63);
    if (!v64)
    {
      sub_145BC0();
      uint64_t v64 = (NSString *)sub_145B80();
      swift_bridgeObjectRelease();
    }
    [v58 setProperty:v64 forKey:PSHeaderCellClassGroupKey];

    id v46 = v58;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_145E20();
    sub_145E50();
    sub_145E00();
    sub_145AE0();
    id v65 = v61;
    sub_1452B0();
    sub_145C10();
    uint64_t v145 = type metadata accessor for NotificationSettingsController();
    v144[0] = v1;
    uint64_t v66 = v1;
    NSString v67 = sub_145B80();
    swift_bridgeObjectRelease();
    uint64_t v68 = v145;
    if (v145)
    {
      uint64_t v69 = sub_2F114(v144, v145);
      uint64_t v70 = *(void *)(v68 - 8);
      __chkstk_darwin(v69);
      uint64_t v72 = (char *)&v133 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v70 + 16))(v72);
      uint64_t v73 = sub_146B80();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v68);
      sub_C7FC((uint64_t)v144);
    }
    else
    {
      uint64_t v73 = 0;
    }
    id v74 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v67 target:v73 set:0 get:0 detail:0 cell:13 edit:0];

    swift_unknownObjectRelease();
    if (!v74) {
      goto LABEL_77;
    }
  }
  NSString v75 = sub_145B80();
  [v74 setIdentifier:v75];

  [v74 setButtonAction:"onButtonActionFor:"];
  Class isa = sub_145EA0().super.super.isa;
  [v74 setProperty:isa forKey:PSAllowMultilineTitleKey];

  id v77 = v74;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  sub_145E50();
  sub_145E00();

LABEL_36:
  uint64_t v78 = self;
  NSString v79 = sub_145B80();
  id v80 = [v78 groupSpecifierWithID:v79];

  if (!v80)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  sub_12F868();
  if (v81)
  {
    NSString v82 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v82 = 0;
  }
  id v141 = v78;
  uint64_t v139 = PSFooterTextGroupKey;
  objc_msgSend(v80, "setProperty:forKey:", v82);
  swift_unknownObjectRelease();
  id v83 = v80;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  id v136 = v83;
  sub_145E50();
  sub_145E00();
  sub_145AE0();
  id v138 = *(id *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle];
  sub_1452B0();
  sub_145C00();
  uint64_t v84 = type metadata accessor for NotificationSettingsController();
  uint64_t v145 = v84;
  v144[0] = v1;
  uint64_t v85 = v1;
  NSString v86 = sub_145B80();
  swift_bridgeObjectRelease();
  uint64_t v87 = v145;
  if (v145)
  {
    int v88 = sub_2F114(v144, v145);
    uint64_t v89 = *(void *)(v87 - 8);
    __chkstk_darwin(v88);
    uint64_t v91 = (char *)&v133 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v89 + 16))(v91);
    uint64_t v92 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v91, v87);
    sub_C7FC((uint64_t)v144);
  }
  else
  {
    uint64_t v92 = 0;
  }
  id v93 = objc_allocWithZone((Class)PSSpecifier);
  uint64_t v140 = "specifierValueFor:";
  id v94 = [v93 initWithName:v86 target:v92 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:0 cell:6 edit:0];

  swift_unknownObjectRelease();
  if (!v94) {
    goto LABEL_71;
  }
  NSString v95 = sub_145B80();
  [v94 setIdentifier:v95];

  id v96 = sub_12CC18();
  [v96 authorizationStatus];

  Class v97 = sub_145EA0().super.super.isa;
  uint64_t v135 = PSEnabledKey;
  objc_msgSend(v94, "setProperty:forKey:", v97);

  Class v98 = sub_145EA0().super.super.isa;
  [v94 setProperty:v98 forKey:PSControlIsLoadingKey];

  Class v99 = sub_145EA0().super.super.isa;
  uint64_t v134 = PSAllowMultilineTitleKey;
  objc_msgSend(v94, "setProperty:forKey:", v99);

  id v100 = v94;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  sub_145E50();
  sub_145E00();
  id v101 = sub_12CC18();
  uint64_t v102 = (char *)[v101 authorizationStatus];

  if (v102 == (unsigned char *)&def_94138 + 2
    && *(void *)&v85[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] >> 62 != 1)
  {
    if ([*(id *)&v85[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] isJournalingScheduleEnabled])
    {
      id v103 = sub_12CCCC();
      swift_bridgeObjectRelease();
      if (v103)
      {
        unint64_t v104 = sub_12D2A0();
        sub_10AE00(v104);
      }
    }
  }
  uint64_t v137 = "setSpecifierValue:for:";
  NSString v105 = sub_145B80();
  id v106 = [v141 groupSpecifierWithID:v105];

  if (!v106) {
    goto LABEL_72;
  }
  sub_13097C();
  if (v107)
  {
    NSString v108 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v108 = 0;
  }
  [v106 setProperty:v108 forKey:v139];
  swift_unknownObjectRelease();
  id v109 = v106;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  id v141 = v109;
  sub_145E50();
  sub_145E00();
  sub_145AE0();
  id v110 = v138;
  sub_1452B0();
  sub_145C00();
  uint64_t v145 = v84;
  v144[0] = v85;
  uint64_t v111 = v85;
  NSString v112 = sub_145B80();
  swift_bridgeObjectRelease();
  uint64_t v113 = v145;
  if (v145)
  {
    uint64_t v114 = sub_2F114(v144, v145);
    uint64_t v115 = *(void *)(v113 - 8);
    __chkstk_darwin(v114);
    uint64_t v117 = (char *)&v133 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v115 + 16))(v117);
    uint64_t v118 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v113);
    sub_C7FC((uint64_t)v144);
  }
  else
  {
    uint64_t v118 = 0;
  }
  id v119 = objc_allocWithZone((Class)PSSpecifier);
  id v120 = [v119 initWithName:v112 target:v118 set:v137 get:v140 detail:0 cell:6 edit:0];

  swift_unknownObjectRelease();
  if (!v120) {
    goto LABEL_73;
  }
  NSString v121 = sub_145B80();
  [v120 setIdentifier:v121];

  id v122 = sub_12CC18();
  [v122 authorizationStatus];

  int v123 = v136;
  Class v124 = sub_145EA0().super.super.isa;
  [v120 setProperty:v124 forKey:v135];

  Class v125 = sub_145EA0().super.super.isa;
  [v120 setProperty:v125 forKey:v134];

  id v126 = v120;
  sub_145DC0();
  if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v146 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_145E20();
  sub_145E50();
  sub_145E00();
  id v127 = sub_12CC18();
  uint64_t v128 = (char *)[v127 authorizationStatus];

  if (v128 == (unsigned char *)&def_94138 + 2
    && *(void *)&v111[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] >> 62 != 1)
  {
    if ([*(id *)&v111[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] isStreakReminderEnabled])
    {
      unint64_t v129 = sub_12CF0C();
      sub_10AE00(v129);
    }
  }
  unint64_t v130 = v146;
  unint64_t v131 = swift_bridgeObjectRetain();
  sub_12C600(v131);
  swift_bridgeObjectRelease();
  Class v132 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v111 setSpecifiers:v132];

  sub_12C600(v130);
  swift_bridgeObjectRelease();
}

unint64_t sub_12F71C(char a1)
{
  unint64_t result = 0x72476465696E6564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75426465696E6564;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
    case 5:
    case 6:
      unint64_t result = 0x656C756465686373;
      break;
    case 7:
      unint64_t result = 0x72476B6165727473;
      break;
    case 8:
      unint64_t result = 0x6F546B6165727473;
      break;
    case 9:
      unint64_t result = 0x69546B6165727473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_12F868()
{
  uint64_t v1 = v0;
  uint64_t v95 = sub_A314(&qword_1A3380);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_A314(&qword_1A3388);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v87 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_A314(&qword_1A3390);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  int v88 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1452C0();
  uint64_t v115 = *(double **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v113 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145B50();
  __chkstk_darwin(v7 - 8);
  NSString v112 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1450E0();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  NSString v105 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1450B0();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  Class v97 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1450C0();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  Class v98 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_145100();
  uint64_t v108 = *(void *)(v109 - 8);
  uint64_t v12 = __chkstk_darwin(v109);
  id v96 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  id v103 = (char *)&v84 - v15;
  __chkstk_darwin(v14);
  unint64_t v104 = (char *)&v84 - v16;
  uint64_t v17 = sub_145B30();
  __chkstk_darwin(v17 - 8);
  uint64_t v116 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_A314(&qword_1A3398);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1452D0();
  uint64_t v114 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_145450();
  uint64_t v110 = *(void *)(v25 - 8);
  uint64_t v111 = v25;
  __chkstk_darwin(v25);
  id v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_A314(&qword_19C150);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_145230();
  uint64_t v118 = *(void *)(v31 - 8);
  uint64_t v119 = v31;
  __chkstk_darwin(v31);
  uint64_t v117 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = sub_12CC18();
  id v34 = (char *)[v33 authorizationStatus];

  uint64_t v35 = 0;
  if (v34 != (unsigned char *)&def_94138 + 2) {
    return v35;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) >> 62 == 1) {
    return 0;
  }
  uint64_t v36 = v1;
  if (![*(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults) isJournalingScheduleEnabled])return 0; {
  id v37 = sub_12CCCC();
  }
  if (!v37) {
    return 0;
  }
  if (!v37[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v40 = v38;
  NSString v41 = v37;
  sub_67550(v38, v39, (uint64_t)v30);
  uint64_t v42 = v118;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v30, 1, v119) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1248C((uint64_t)v30, &qword_19C150);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v117, v30, v119);
  uint64_t v44 = v114;
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v24, enum case for Calendar.Identifier.gregorian(_:), v22);
  sub_1452E0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v22);
  sub_1452B0();
  (*((void (**)(char *, void, uint64_t, uint64_t))v115 + 7))(v21, 0, 1, v5);
  sub_145400();
  uint64_t v45 = sub_145350();
  uint64_t v46 = v41[2];
  uint64_t v47 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  NSString v86 = v27;
  uint64_t v85 = (double *)v40;
  if (v46 == v47)
  {
    swift_bridgeObjectRelease();
    sub_145B20();
    v121._id countAndFlagsBits = 0xD000000000000023;
    v121._object = (void *)0x80000000001522F0;
    sub_145B10(v121);
    uint64_t v48 = v96;
    sub_144990();
    NSString v49 = v97;
    sub_145090();
    uint64_t v50 = v98;
    sub_145080();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v49, v100);
    uint64_t v51 = v103;
    sub_145070();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v50, v102);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v53 = v109;
    v52(v48, v109);
    objc_super v54 = v105;
    sub_1450D0();
    uint64_t v55 = v104;
    sub_1450F0();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v54, v107);
    v52(v51, v53);
    sub_1366A4(&qword_1A33B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    sub_12060();
    uint64_t v56 = v117;
    uint64_t v57 = v119;
    sub_145AF0();
    v52(v55, v53);
    v122._id countAndFlagsBits = 10272;
    v122._object = (void *)0xE200000000000000;
    sub_145B10(v122);
    id v120 = v85;
    sub_145B00();
    v123._id countAndFlagsBits = 11817;
    v123._object = (void *)0xE200000000000000;
    sub_145B10(v123);
    sub_145B40();
    id v58 = *(id *)(v36 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
    sub_1452B0();
    uint64_t v35 = sub_145C10();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v86, v111);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v56, v57);
    return v35;
  }
  uint64_t result = sub_145310();
  uint64_t v59 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_A314(&qword_19D970);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_1598D0;
  if (v59 > 7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)(result + 32) = v59;
  *(void *)(result + 40) = 7;
  if ((v59 & 0x8000000000000000) == 0)
  {
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = v59;
    __chkstk_darwin(result);
    *(&v84 - 2) = (uint64_t)v41;
    uint64_t v61 = sub_12C834((uint64_t)sub_13667C, (uint64_t)(&v84 - 4), v60);
    uint64_t v62 = swift_bridgeObjectRelease();
    __chkstk_darwin(v62);
    *(&v84 - 2) = v36;
    uint64_t v63 = sub_13640C(v61, sub_13669C);
    uint64_t v115 = v63;
    swift_bridgeObjectRelease();
    sub_145B20();
    v124._object = (void *)0x8000000000152230;
    v124._id countAndFlagsBits = 0xD000000000000016;
    sub_145B10(v124);
    id v120 = v63;
    uint64_t v64 = v89;
    id v65 = v87;
    uint64_t v66 = v90;
    (*(void (**)(char *, void, uint64_t))(v89 + 104))(v87, enum case for ListFormatStyle.ListType.and<A, B>(_:), v90);
    uint64_t v67 = v94;
    uint64_t v68 = v91;
    uint64_t v69 = v95;
    (*(void (**)(char *, void, uint64_t))(v94 + 104))(v91, enum case for ListFormatStyle.Width.standard<A, B>(_:), v95);
    sub_A314(&qword_19C708);
    sub_122D8(&qword_1A33A0, &qword_19C708);
    uint64_t v70 = v88;
    sub_1449B0();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    sub_122D8(&qword_1A33A8, &qword_1A3390);
    sub_12060();
    uint64_t v71 = v93;
    sub_145AF0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v70, v71);
    swift_bridgeObjectRelease();
    v125._id countAndFlagsBits = 544497952;
    v125._object = (void *)0xE400000000000000;
    sub_145B10(v125);
    uint64_t v72 = v96;
    sub_144990();
    uint64_t v73 = v97;
    sub_145090();
    id v74 = v98;
    sub_145080();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v73, v100);
    NSString v75 = v103;
    sub_145070();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v74, v102);
    uint64_t v76 = *(void (**)(char *, uint64_t))(v108 + 8);
    id v77 = v72;
    uint64_t v78 = v109;
    v76(v77, v109);
    NSString v79 = v105;
    sub_1450D0();
    id v80 = v104;
    sub_1450F0();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v79, v107);
    v76(v75, v78);
    sub_1366A4(&qword_1A33B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    uint64_t v81 = v117;
    uint64_t v82 = v119;
    sub_145AF0();
    v76(v80, v78);
    v126._id countAndFlagsBits = 10272;
    v126._object = (void *)0xE200000000000000;
    sub_145B10(v126);
    id v120 = v85;
    sub_145B00();
    v127._id countAndFlagsBits = 11817;
    v127._object = (void *)0xE200000000000000;
    sub_145B10(v127);
    sub_145B40();
    id v83 = *(id *)(v36 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
    sub_1452B0();
    uint64_t v35 = sub_145C10();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v86, v111);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v81, v82);
    return v35;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_13097C()
{
  uint64_t v1 = sub_145B50();
  __chkstk_darwin(v1 - 8);
  uint64_t v71 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1450E0();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145B30();
  __chkstk_darwin(v4 - 8);
  uint64_t v70 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1452C0();
  __chkstk_darwin(v6 - 8);
  uint64_t v81 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_19F0F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v72 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1450B0();
  uint64_t v85 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  id v74 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1450C0();
  uint64_t v84 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v73 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_145100();
  uint64_t v75 = *(void *)(v80 - 8);
  uint64_t v12 = __chkstk_darwin(v80);
  uint64_t v66 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v62 - v15;
  __chkstk_darwin(v14);
  id v77 = (char *)&v62 - v16;
  uint64_t v17 = sub_145450();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_A314(&qword_19C150);
  __chkstk_darwin(v21 - 8);
  id v83 = (void (*)(char *, uint64_t))((char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_145230();
  uint64_t v86 = *(void *)(v23 - 8);
  uint64_t v87 = v23;
  __chkstk_darwin(v23);
  uint64_t v82 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_A314(&qword_19C910);
  __chkstk_darwin(v25 - 8);
  id v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_A314(&qword_19C918);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_144C60();
  uint64_t v88 = *(void *)(v31 - 8);
  uint64_t v89 = v31;
  __chkstk_darwin(v31);
  id v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v30, 1, 1, v17);
  uint64_t v34 = sub_1454A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 1, 1, v34);
  uint64_t v35 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults);
  [v35 streakReminderHour];
  [v35 streakReminderMinute];
  uint64_t v36 = v0;
  sub_144C50();
  id v37 = sub_12CC18();
  uint64_t v38 = (char *)[v37 authorizationStatus];

  if (v38 == (unsigned char *)&def_94138 + 2
    && *(void *)(v36 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) >> 62 != 1
    && [v35 isStreakReminderEnabled])
  {
    sub_145410();
    uint64_t v39 = (uint64_t)v83;
    sub_1453C0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v41 = v86;
    uint64_t v40 = v87;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v39, 1, v87) != 1)
    {
      id v65 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v82, v39, v40);
      uint64_t v44 = v76;
      sub_144990();
      uint64_t v45 = v74;
      sub_1450A0();
      uint64_t v46 = v73;
      sub_145080();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v85 + 8);
      v85 += 8;
      uint64_t v64 = v47;
      v47(v45, v79);
      uint64_t v48 = v77;
      sub_145070();
      NSString v49 = *(void (**)(char *, uint64_t))(v84 + 8);
      v84 += 8;
      uint64_t v63 = v49;
      v49(v46, v78);
      uint64_t v50 = *(void (**)(char *, uint64_t))(v75 + 8);
      uint64_t v51 = v44;
      uint64_t v52 = v80;
      v50(v51, v80);
      uint64_t v75 = sub_1366A4(&qword_1A33B0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
      sub_145210();
      id v83 = v50;
      v50(v48, v52);
      sub_1452A0();
      sub_8BC7C();
      sub_144CD0();
      sub_146690();
      uint64_t v72 = v91;
      sub_145B20();
      v92._object = (void *)0x8000000000152430;
      v92._id countAndFlagsBits = 0xD000000000000010;
      sub_145B10(v92);
      uint64_t v53 = v66;
      sub_144990();
      sub_145090();
      sub_145080();
      v64(v45, v79);
      objc_super v54 = v76;
      sub_145070();
      v63(v46, v78);
      uint64_t v55 = v80;
      uint64_t v56 = v83;
      v83(v53, v80);
      uint64_t v57 = v67;
      sub_1450D0();
      id v58 = v77;
      sub_1450F0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v69);
      v56(v54, v55);
      sub_12060();
      uint64_t v59 = v82;
      uint64_t v60 = v87;
      sub_145AF0();
      v56(v58, v55);
      v93._id countAndFlagsBits = 10272;
      v93._object = (void *)0xE200000000000000;
      sub_145B10(v93);
      uint64_t v90 = v72;
      sub_145B00();
      v94._id countAndFlagsBits = 0xD000000000000043;
      v94._object = (void *)0x8000000000152450;
      sub_145B10(v94);
      sub_145B40();
      id v61 = *(id *)(v36 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
      sub_1452B0();
      uint64_t v42 = sub_145C10();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v59, v60);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v65, v89);
      return v42;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v33, v89);
    sub_1248C(v39, &qword_19C150);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v33, v89);
  }
  return 0;
}

uint64_t sub_1316D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_A314(&qword_1A3380);
  uint64_t v60 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v57 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_A314(&qword_1A3388);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_1A3390);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  objc_super v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1452C0();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_145B50();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  id v15 = sub_12CC18();
  uint64_t v16 = (char *)[v15 authorizationStatus];

  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if (v16 == (unsigned char *)&def_94138 + 2)
  {
    if (*(void *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) >> 62 == 1
      || ![*(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults) isJournalingScheduleEnabled])
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      sub_145AE0();
      id v19 = *(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
      sub_1452B0();
      uint64_t v17 = sub_145C00();
      uint64_t v18 = v20;
    }
  }
  uint64_t v52 = v17;
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  id v21 = sub_12CC18();
  uint64_t v22 = (char *)[v21 authorizationStatus];

  if (v22 == (unsigned char *)&def_94138 + 2
    && *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) >> 62 != 1
    && [*(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults) isStreakReminderEnabled])
  {
    sub_145AE0();
    id v23 = *(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
    sub_1452B0();
    uint64_t v24 = sub_145C00();
    uint64_t v26 = v25;
    *(void *)(inited + 48) = v24;
    *(void *)(inited + 56) = v25;
    if (!v18)
    {
LABEL_10:
      id v27 = _swiftEmptyArrayStorage;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    if (!v18) {
      goto LABEL_10;
    }
  }
  uint64_t v49 = v24;
  uint64_t v28 = v13;
  uint64_t v29 = v2;
  uint64_t v30 = v10;
  uint64_t v31 = v1;
  swift_bridgeObjectRetain();
  id v27 = sub_7DB80(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v33 = *((void *)v27 + 2);
  unint64_t v32 = *((void *)v27 + 3);
  if (v33 >= v32 >> 1) {
    id v27 = sub_7DB80((double *)(v32 > 1), v33 + 1, 1, v27);
  }
  *((void *)v27 + 2) = v33 + 1;
  uint64_t v34 = &v27[2 * v33];
  *((void *)v34 + 4) = v52;
  *((void *)v34 + 5) = v18;
  uint64_t v1 = v31;
  uint64_t v10 = v30;
  uint64_t v2 = v29;
  uint64_t v13 = v28;
  uint64_t v24 = v49;
LABEL_15:
  uint64_t v51 = v10;
  uint64_t v50 = v13;
  if (v26)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v27 = sub_7DB80(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v36 = *((void *)v27 + 2);
    unint64_t v35 = *((void *)v27 + 3);
    if (v36 >= v35 >> 1) {
      id v27 = sub_7DB80((double *)(v35 > 1), v36 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v36 + 1;
    id v37 = &v27[2 * v36];
    *((void *)v37 + 4) = v24;
    *((void *)v37 + 5) = v26;
  }
  swift_release();
  id v61 = v27;
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  uint64_t v40 = v53;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v53, enum case for ListFormatStyle.ListType.and<A, B>(_:), v56);
  uint64_t v41 = v60;
  uint64_t v42 = v57;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v57, enum case for ListFormatStyle.Width.narrow<A, B>(_:), v2);
  sub_A314(&qword_19C708);
  sub_122D8(&qword_1A33A0, &qword_19C708);
  NSString v43 = v54;
  sub_1449B0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v2);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
  sub_122D8(&qword_1A33A8, &qword_1A3390);
  uint64_t v44 = v59;
  sub_145D40();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v44);
  swift_bridgeObjectRelease();
  uint64_t result = v62;
  uint64_t v46 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v46 = v62 & 0xFFFFFFFFFFFFLL;
  }
  if (!v46)
  {
    swift_bridgeObjectRelease();
    sub_145AE0();
    id v47 = *(id *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
    sub_1452B0();
    return sub_145C00();
  }
  return result;
}

id sub_131E80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults;
  uint64_t v7 = qword_19ADA8;
  uint64_t v8 = v3;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1A3B70;
  *(void *)&v3[v6] = qword_1A3B70;
  uint64_t v10 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle;
  uint64_t v11 = (objc_class *)type metadata accessor for NotificationSettingsController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  id v14 = v9;
  *(void *)&v8[v10] = [v13 bundleForClass:ObjCClassFromMetadata];
  *(void *)&v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings] = 0;
  id v15 = &v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
  *(void *)id v15 = 1;
  *((void *)v15 + 1) = 0;
  *((void *)v15 + 2) = 0;
  *(void *)&v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___streakOnSpecifiers] = 0;
  *(void *)&v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduleOnSpecifiers] = 0;
  v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule] = 0;
  v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks] = 0;
  *(void *)&v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = 0x8000000000000000;
  *(void *)&v8[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase] = 0;

  if (a2)
  {
    NSString v16 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = v11;
  id v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v16, a3);

  return v17;
}

id sub_13208C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults;
  uint64_t v4 = qword_19ADA8;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1A3B70;
  *(void *)&v5[v3] = qword_1A3B70;
  uint64_t v7 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle;
  uint64_t v8 = (objc_class *)type metadata accessor for NotificationSettingsController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v10 = self;
  id v11 = v6;
  *(void *)&v5[v7] = [v10 bundleForClass:ObjCClassFromMetadata];
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___notificationSettings] = 0;
  uint64_t v12 = &v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
  *uint64_t v12 = 1;
  v12[1] = 0;
  _OWORD v12[2] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___streakOnSpecifiers] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduleOnSpecifiers] = 0;
  v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule] = 0;
  v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = 0x8000000000000000;
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase] = 0;

  v15.receiver = v5;
  v15.super_class = v8;
  id v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

id sub_132224()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationSettingsController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NotificationSettingsController()
{
  return self;
}

uint64_t sub_132330(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_12F71C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_12F71C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1323BC()
{
  char v1 = *v0;
  sub_146C80();
  sub_12F71C(v1);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_132420()
{
  sub_12F71C(*v0);
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_132474()
{
  char v1 = *v0;
  sub_146C80();
  sub_12F71C(v1);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_1324D4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_13652C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_132504@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_12F71C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_132530()
{
  type metadata accessor for CoreDataStackShared();
  uint64_t result = sub_6B884();
  qword_1A32E0 = result;
  return result;
}

void sub_132564()
{
  if (qword_19B038 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1A32E0;
  if (qword_1A32E0)
  {
    char v1 = *(void **)(qword_1A32E0 + OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container);
    id v6 = (id)qword_1A32E0;
    Swift::Int v2 = sub_27390((uint64_t)&off_184F50);
    type metadata accessor for InsightsDataManager(0);
    swift_allocObject();
    id v3 = v6;
    id v4 = v1;
    uint64_t v5 = sub_120E84(v4, v2);

    uint64_t v0 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  qword_1A32E8 = v5;
}

uint64_t sub_132658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1452C0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_145B50();
  __chkstk_darwin(v7 - 8);
  if (a1)
  {
    switch(a2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        goto LABEL_5;
      default:
        goto LABEL_4;
    }
  }
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
LABEL_5:
      sub_145AE0();
      id v9 = *(id *)(a3 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_bundle);
      sub_1452B0();
      uint64_t result = sub_145C10();
      break;
    default:
LABEL_4:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_132A00(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_145430();
  uint64_t v71 = *(void (***)(char *, uint64_t))(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145450();
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v70 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_145230();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  id v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  NSString v16 = (char *)&v65 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  objc_super v19 = (char *)&v65 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v65 - v20;
  uint64_t v68 = a2;
  id v22 = [a2 identifier];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_145BC0();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = (void *)0xE000000000000000;
  }
  char v27 = sub_13652C(v24, v26);
  char v78 = v27;
  sub_41FE8(a1, (uint64_t)v79);
  switch(v27)
  {
    case 4:
      if (!v80) {
        goto LABEL_27;
      }
      sub_41FE8((uint64_t)v79, (uint64_t)v77);
      if (!swift_dynamicCast()) {
        goto LABEL_26;
      }
      int v28 = LOBYTE(v76[0]);
      uint64_t v29 = v75;
      [*(id *)&v75[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] setIsJournalingScheduleEnabled:LOBYTE(v76[0])];
      int64x2_t v30 = 0uLL;
      if (v28 == 1)
      {
        uint64_t v31 = sub_261E0((uint64_t)&off_184F78);
        int64x2_t v30 = vdupq_n_s64(0x14uLL);
        v30.i64[0] = v31;
      }
      unint64_t v32 = (int64x2_t *)&v29[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
      uint64_t v33 = *(void *)&v29[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
      *unint64_t v32 = v30;
      v32[1].i64[0] = 0;
      sub_2C34C(v33);
      [v29 beginUpdates];
      sub_1334F8(1, &OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule, 0x656C756465686373, 0xED000070756F7247, (void (*)(void))sub_12F868);
      unint64_t v34 = sub_12D2A0();
      sub_12C600(v34);
      swift_bridgeObjectRelease();
      v35.super.Class isa = sub_145DD0().super.isa;
      swift_bridgeObjectRelease();
      if (v28) {
        [v29 insertContiguousSpecifiers:v35.super.isa afterSpecifier:v68 animated:1];
      }
      else {
        [v29 removeContiguousSpecifiers:v35.super.isa animated:1];
      }

      goto LABEL_32;
    case 5:
      if (!v80) {
        goto LABEL_27;
      }
      sub_41FE8((uint64_t)v79, (uint64_t)v77);
      uint64_t v36 = v74;
      if (!swift_dynamicCast()) {
        goto LABEL_26;
      }
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v19, v21, v36);
      uint64_t v38 = sub_12CE18(v76);
      if (*v37)
      {
        uint64_t v39 = v37;
        sub_145410();
        uint64_t v40 = v71;
        uint64_t v41 = v72;
        ((void (*)(char *, void, uint64_t))v71[13])(v6, enum case for Calendar.Component.hour(_:), v72);
        uint64_t v42 = sub_145440();
        v40[1](v6, v41);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v70);
        v39[1] = v42;
      }
      v38((uint64_t)v76, 0);
      uint64_t v59 = sub_12CE18(v76);
      if (*v58)
      {
        uint64_t v60 = v58;
        sub_145410();
        id v61 = v71;
        uint64_t v62 = v72;
        ((void (*)(char *, void, uint64_t))v71[13])(v6, enum case for Calendar.Component.minute(_:), v72);
        uint64_t v63 = sub_145440();
        v61[1](v6, v62);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v70);
        v60[2] = v63;
      }
      v59((uint64_t)v76, 0);
      sub_1334F8(0, &OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule, 0x656C756465686373, 0xED000070756F7247, (void (*)(void))sub_12F868);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v19, v74);
      goto LABEL_37;
    case 6:
      if (!v80) {
        goto LABEL_27;
      }
      sub_41FE8((uint64_t)v79, (uint64_t)v77);
      sub_A314(&qword_19E230);
      if (!swift_dynamicCast()) {
        goto LABEL_26;
      }
      id v43 = v76[4];
      uint64_t v45 = sub_12CE18(v76);
      if (*v44) {
        void *v44 = v43;
      }
      swift_bridgeObjectRelease();
      v45((uint64_t)v76, 0);
      sub_1334F8(0, &OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule, 0x656C756465686373, 0xED000070756F7247, (void (*)(void))sub_12F868);
      goto LABEL_37;
    case 8:
      if (!v80) {
        goto LABEL_27;
      }
      sub_41FE8((uint64_t)v79, (uint64_t)v77);
      if (!swift_dynamicCast()) {
        goto LABEL_26;
      }
      int v46 = LOBYTE(v76[0]);
      uint64_t v29 = v75;
      [*(id *)&v75[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] setIsStreakReminderEnabled:LOBYTE(v76[0])];
      [v29 beginUpdates];
      sub_1334F8(1, &OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks, 0x72476B6165727473, 0xEB0000000070756FLL, (void (*)(void))sub_13097C);
      unint64_t v47 = sub_12CF0C();
      sub_12C600(v47);
      swift_bridgeObjectRelease();
      v48.super.Class isa = sub_145DD0().super.isa;
      swift_bridgeObjectRelease();
      if (v46 == 1) {
        [v29 insertContiguousSpecifiers:v48.super.isa afterSpecifier:v68 animated:1];
      }
      else {
        [v29 removeContiguousSpecifiers:v48.super.isa animated:1];
      }

LABEL_32:
      [v29 endUpdates];
LABEL_37:
      sub_C7FC((uint64_t)v77);
      uint64_t v56 = &qword_19B1E0;
      uint64_t v57 = v79;
      break;
    case 9:
      if (!v80) {
        goto LABEL_27;
      }
      sub_41FE8((uint64_t)v79, (uint64_t)v77);
      uint64_t v49 = v74;
      if (swift_dynamicCast())
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v13, v16, v49);
        id v67 = *(id *)&v75[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults];
        sub_145410();
        uint64_t v50 = v71;
        uint64_t v68 = v71[13];
        uint64_t v51 = v72;
        ((void (*)(char *, void, uint64_t))v68)(v6, enum case for Calendar.Component.hour(_:), v72);
        uint64_t v52 = sub_145440();
        uint64_t v66 = v50[1];
        v66(v6, v51);
        uint64_t v71 = (void (**)(char *, uint64_t))v79;
        uint64_t v53 = v70;
        uint64_t v69 = *(void *)(v69 + 8);
        ((void (*)(char *, uint64_t))v69)(v9, v70);
        id v54 = v67;
        [v67 setStreakReminderHour:v52];
        sub_145410();
        ((void (*)(char *, void, uint64_t))v68)(v6, enum case for Calendar.Component.minute(_:), v51);
        uint64_t v55 = sub_145440();
        v66(v6, v51);
        ((void (*)(char *, uint64_t))v69)(v9, v53);
        [v54 setStreakReminderMinute:v55];
        sub_1334F8(0, &OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks, 0x72476B6165727473, 0xEB0000000070756FLL, (void (*)(void))sub_13097C);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v74);
        sub_C7FC((uint64_t)v77);
        uint64_t v56 = &qword_19B1E0;
        uint64_t v57 = (char *)v71;
      }
      else
      {
LABEL_26:
        sub_C7FC((uint64_t)v77);
LABEL_27:
        uint64_t v56 = (uint64_t *)&unk_1A3378;
        uint64_t v57 = &v78;
      }
      break;
    default:
      goto LABEL_27;
  }
  return sub_1248C((uint64_t)v57, v56);
}

void sub_1334F8(char a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  v5[*a2] = 1;
  unint64_t v8 = *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase];
  *(void *)&v5[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = 0x8000000000000000;
  sub_135C24(v8);
  NSString v9 = sub_145B80();
  id v11 = [v5 specifierForID:v9];

  if (v11)
  {
    a5();
    NSString v10 = sub_145B80();
    swift_bridgeObjectRelease();
    [v11 setProperty:v10 forKey:PSFooterTextGroupKey];

    sub_1342C8(v11, a1 & 1);
  }
}

void sub_1336B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_145360();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  id v61 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_145370();
  uint64_t v60 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145320();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin(v7);
  NSString v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_145230();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_145450();
  uint64_t v59 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_A314(&qword_19C150);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  objc_super v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)v58 - v20;
  id v22 = [a1 identifier];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_145BC0();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = (void *)0xE000000000000000;
  }
  switch(sub_13652C(v24, v26))
  {
    case 4u:
      int v28 = v69;
      id v29 = sub_12CC18();
      int64x2_t v30 = (char *)[v29 authorizationStatus];

      if (v30 == (unsigned char *)&def_94138 + 2
        && *(void *)&v28[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] >> 62 != 1
        && [*(id *)&v28[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] isJournalingScheduleEnabled]&& sub_12CCCC())
      {
        swift_bridgeObjectRelease();
        char v31 = 1;
      }
      else
      {
        char v31 = 0;
      }
      uint64_t v52 = (char *)v70;
      *(void *)(v70 + 24) = &type metadata for Bool;
      char *v52 = v31;
      break;
    case 5u:
      if (!sub_12CCCC()) {
        goto LABEL_5;
      }
      sub_67550(v32, v33, (uint64_t)v21);
      swift_bridgeObjectRelease();
      uint64_t v35 = v64;
      uint64_t v34 = v65;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v21, 1, v65) == 1)
      {
        sub_1248C((uint64_t)v21, &qword_19C150);
        goto LABEL_5;
      }
      uint64_t v55 = (uint64_t *)v70;
      *(void *)(v70 + 24) = v34;
      uint64_t v56 = sub_484D0(v55);
      (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(v56, v21, v34);
      break;
    case 6u:
      id v36 = sub_12CCCC();
      if (!v36) {
        goto LABEL_5;
      }
      id v37 = v36;
      uint64_t v38 = sub_A314(&qword_19E230);
      uint64_t v39 = (void *)v70;
      *(void *)(v70 + 24) = v38;
      *uint64_t v39 = v37;
      break;
    case 8u:
      uint64_t v40 = v69;
      id v41 = sub_12CC18();
      uint64_t v42 = (char *)[v41 authorizationStatus];

      if (v42 == (unsigned char *)&def_94138 + 2
        && *(void *)&v40[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] >> 62 != 1)
      {
        unsigned __int8 v43 = [*(id *)&v40[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults] isStreakReminderEnabled];
      }
      else
      {
        unsigned __int8 v43 = 0;
      }
      uint64_t v57 = (unsigned __int8 *)v70;
      *(void *)(v70 + 24) = &type metadata for Bool;
      unsigned __int8 *v57 = v43;
      break;
    case 9u:
      sub_145410();
      uint64_t v44 = *(void **)&v69[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults];
      uint64_t v69 = (char *)[v44 streakReminderHour];
      v58[1] = [v44 streakReminderMinute];
      sub_1451F0();
      (*(void (**)(char *, void, uint64_t))(v66 + 104))(v9, enum case for Calendar.MatchingPolicy.nextTime(_:), v67);
      uint64_t v45 = v60;
      (*(void (**)(char *, void, uint64_t))(v60 + 104))(v6, enum case for Calendar.RepeatedTimePolicy.first(_:), v68);
      int v46 = v61;
      uint64_t v47 = v62;
      uint64_t v48 = v63;
      (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for Calendar.SearchDirection.forward(_:), v63);
      sub_1453B0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v68);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v67);
      uint64_t v49 = v64;
      uint64_t v50 = v12;
      uint64_t v51 = v65;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v65);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v19, 1, v51) == 1)
      {
        sub_1248C((uint64_t)v19, &qword_19C150);
        goto LABEL_5;
      }
      uint64_t v53 = (uint64_t *)v70;
      *(void *)(v70 + 24) = v51;
      id v54 = sub_484D0(v53);
      (*(void (**)(uint64_t *, char *, uint64_t))(v49 + 32))(v54, v19, v51);
      break;
    default:
LABEL_5:
      uint64_t v27 = v70;
      *(_OWORD *)uint64_t v70 = 0u;
      *(_OWORD *)(v27 + 16) = 0u;
      break;
  }
}

void sub_133F40(void *a1)
{
  Swift::Int v2 = v1;
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19EB20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  id v13 = [a1 identifier];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_145BC0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = (void *)0xE000000000000000;
  }
  int v18 = sub_13652C(v15, v17);
  if ((v18 - 3) < 8 || !v18) {
    return;
  }
  if (v18 == 1)
  {
    id v19 = [self defaultWorkspace];
    if (v19)
    {
      uint64_t v20 = v19;
      sub_144F20();
      uint64_t v21 = sub_144F60();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v24 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) != 1)
      {
        sub_144EB0(v23);
        uint64_t v24 = v25;
        (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
      }
      [v20 openSensitiveURL:v24 withOptions:0];

      return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  unsigned char *v6 = 0;
  swift_storeEnumTagMultiPayload();
  sub_48B00((uint64_t)v10);
  sub_136578((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  id v26 = [v2 view];
  if (!v26) {
    goto LABEL_18;
  }
  uint64_t v27 = v26;
  id v28 = [v26 window];

  if (v28)
  {
    id v29 = [v28 windowScene];
  }
  else
  {
    id v29 = 0;
  }
  sub_139424((uint64_t)v10, v29, 0, 0);

  sub_1248C((uint64_t)v10, &qword_19EB20);
}

void sub_1342C8(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v20 = -1;
  if ([v2 getGroup:&v20 row:0 ofSpecifier:a1])
  {
    uint64_t v6 = v20;
    if ((v20 & 0x8000000000000000) == 0)
    {
      id v7 = [v2 table];
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = [v7 footerViewForSection:v6];
        if (!v9)
        {
LABEL_7:

          return;
        }
        uint64_t v10 = v9;
        if (a2)
        {
          sub_136108(v3, v9, a1);

          goto LABEL_7;
        }
        uint64_t v11 = self;
        uint64_t v12 = (void *)swift_allocObject();
        _OWORD v12[2] = v3;
        v12[3] = v10;
        v12[4] = a1;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = sub_136620;
        *(void *)(v13 + 24) = v12;
        v19[4] = sub_13663C;
        v19[5] = v13;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 1107296256;
        v19[2] = sub_12C4B8;
        v19[3] = &unk_18AA68;
        uint64_t v14 = _Block_copy(v19);
        id v15 = v3;
        id v16 = v10;
        id v17 = a1;
        swift_retain();
        swift_release();
        [v11 performWithoutAnimation:v14];

        _Block_release(v14);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          __break(1u);
        }
      }
    }
  }
}

void sub_134518()
{
  char v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule] & 1) != 0
    || v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks] == 1)
  {
    uint64_t v6 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase;
    unint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase];
    unint64_t v8 = v7 >> 62;
    BOOL v10 = v7 == 0x8000000000000000 && v8 == 2;
    if (v8 == 1 || v10)
    {
      id v12 = sub_12CC18();
      uint64_t v13 = (char *)[v12 authorizationStatus];

      if (v13 == (unsigned char *)&def_94138 + 2)
      {
        id v14 = [self sharedApplication];
        NSString v15 = sub_145B80();
        id v16 = [v14 beginBackgroundTaskWithName:v15 expirationHandler:0];

        uint64_t v17 = sub_145F50();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
        sub_145F30();
        int v18 = v1;
        uint64_t v19 = sub_145F20();
        uint64_t v20 = (void *)swift_allocObject();
        v20[2] = v19;
        v20[3] = &protocol witness table for MainActor;
        v20[4] = v18;
        v20[5] = v16;
        v20[6] = ObjectType;
        uint64_t v21 = sub_76884((uint64_t)v5, (uint64_t)&unk_1A3370, (uint64_t)v20);
        unint64_t v22 = *(void *)&v1[v6];
        *(void *)&v1[v6] = v21;
        sub_135C24(v22);
      }
    }
  }
}

uint64_t sub_13473C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[9] = type metadata accessor for StreakSummary();
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for InsightsDataManager.Streaks(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_145F30();
  v5[17] = sub_145F20();
  uint64_t v7 = sub_145EB0();
  v5[18] = v7;
  v5[19] = v6;
  return _swift_task_switch(sub_13486C, v7, v6);
}

uint64_t sub_13486C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule;
  v0[20] = OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveSchedule;
  if (*(unsigned char *)(v1 + v2) == 1)
  {
    if (qword_19AC90 != -1) {
      swift_once();
    }
    id v3 = sub_12CCCC();
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    v0[21] = v3;
    id v8 = sub_12CC18();
    uint64_t v9 = (char *)[v8 authorizationStatus];

    if (v9 == (unsigned char *)&def_94138 + 2
      && (uint64_t v10 = v0[7],
          *(void *)(v10 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) >> 62 != 1))
    {
      char v11 = [*(id *)(v10 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults) isJournalingScheduleEnabled];
    }
    else
    {
      char v11 = 0;
    }
    unint64_t v22 = (void *)swift_task_alloc();
    v0[22] = v22;
    *unint64_t v22 = v0;
    v22[1] = sub_134C54;
    return sub_22588((uint64_t)v3, v5, v7, v11);
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks) == 1)
  {
    if (qword_19B040 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_1A32E8;
    v0[24] = qword_1A32E8;
    if (v12)
    {
      uint64_t v13 = *(void **)(v0[7] + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults);
      swift_retain();
      if ([v13 isStreakReminderEnabled])
      {
        id v14 = (void *)swift_task_alloc();
        v0[25] = v14;
        void *v14 = v0;
        v14[1] = sub_135014;
        return sub_F6FA4();
      }
      swift_release();
      if (qword_19AC90 != -1) {
        swift_once();
      }
      uint64_t v23 = *(void **)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter);
      Class isa = sub_145DD0().super.isa;
      [v23 removePendingNotificationRequestsWithIdentifiers:isa];
    }
  }
  swift_release();
  uint64_t v16 = v0[20];
  uint64_t v17 = v0[7];
  unint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase);
  *(void *)(v17 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) = 0x8000000000000008;
  sub_135C24(v18);
  *(unsigned char *)(v17 + v16) = 0;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks) = 0;
  uint64_t v19 = v0[8];
  id v20 = [self sharedApplication];
  [v20 endBackgroundTask:v19];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_134C54()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_1356E0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_134D70;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_134D70()
{
  uint64_t v1 = v0[7];
  if ((*(unsigned char *)(v1 + v0[20]) & 1) != 0
    || *(unsigned char *)(v1 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks) == 1)
  {
    if (qword_19B040 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_1A32E8;
    v0[24] = qword_1A32E8;
    if (v2)
    {
      uint64_t v3 = *(void **)(v0[7] + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_defaults);
      swift_retain();
      if ([v3 isStreakReminderEnabled])
      {
        uint64_t v4 = (void *)swift_task_alloc();
        v0[25] = v4;
        *uint64_t v4 = v0;
        v4[1] = sub_135014;
        return sub_F6FA4();
      }
      swift_release();
      if (qword_19AC90 != -1) {
        swift_once();
      }
      uint64_t v6 = *(void **)(qword_1A3A18 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter);
      Class isa = sub_145DD0().super.isa;
      [v6 removePendingNotificationRequestsWithIdentifiers:isa];
    }
  }
  swift_release();
  uint64_t v8 = v0[20];
  uint64_t v9 = v0[7];
  unint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase);
  *(void *)(v9 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) = 0x8000000000000008;
  sub_135C24(v10);
  *(unsigned char *)(v9 + v8) = 0;
  *(unsigned char *)(v9 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks) = 0;
  uint64_t v11 = v0[8];
  id v12 = [self sharedApplication];
  [v12 endBackgroundTask:v11];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_135014()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_135134, v3, v2);
}

uint64_t sub_135134()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v20 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  swift_getKeyPath();
  v0[5] = v1;
  sub_1366A4(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_145500();
  swift_release();
  uint64_t v6 = v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_13633C(v6, v3, type metadata accessor for InsightsDataManager.Streaks);
  sub_13633C(v3, v2, type metadata accessor for InsightsDataManager.Streaks);
  uint64_t v7 = *(void *)(v2 + *(int *)(v4 + 20) + *(int *)(v5 + 28));
  sub_1363A4(v2, v20, type metadata accessor for InsightsDataManager.Streaks);
  uint64_t v8 = v0[14];
  if (v7 >= 2)
  {
    uint64_t v10 = *(void *)(v8 + *(int *)(v5 + 28));
    sub_136578(v8, type metadata accessor for InsightsDataManager.Streaks);
    char v9 = v10 < 3;
  }
  else
  {
    sub_136578(v8, type metadata accessor for InsightsDataManager.Streaks);
    char v9 = 0;
  }
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[13];
  sub_136578(v0[16], type metadata accessor for InsightsDataManager.Streaks);
  swift_getKeyPath();
  v0[6] = v11;
  sub_145500();
  swift_release();
  sub_13633C(v6, v12, type metadata accessor for InsightsDataManager.Streaks);
  uint64_t v13 = v0[13];
  uint64_t v14 = v13;
  if (v9) {
    uint64_t v14 = v13 + *(int *)(v4 + 20);
  }
  uint64_t v16 = v0[10];
  uint64_t v15 = v0[11];
  sub_13633C(v14, v16, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  sub_1363A4(v16, v15, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  sub_136578(v13, type metadata accessor for InsightsDataManager.Streaks);
  if (qword_19AC90 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)swift_task_alloc();
  v0[26] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_135454;
  uint64_t v18 = v0[11];
  return sub_23DB8(v18, v9);
}

uint64_t sub_135454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_135820;
  }
  else {
    uint64_t v5 = sub_135590;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_135590()
{
  uint64_t v1 = v0[11];
  swift_release();
  swift_release();
  sub_136578(v1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[7];
  unint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase);
  *(void *)(v3 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase) = 0x8000000000000008;
  sub_135C24(v4);
  *(unsigned char *)(v3 + v2) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_needsSaveStreaks) = 0;
  uint64_t v5 = v0[8];
  id v6 = [self sharedApplication];
  [v6 endBackgroundTask:v5];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1356E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0[7];
  unint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase];
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = v0[23] | 0x4000000000000000;
  swift_errorRetain();
  sub_135C24(v2);
  [v1 reloadSpecifiers];
  swift_errorRelease();
  uint64_t v3 = v0[8];
  id v4 = [self sharedApplication];
  [v4 endBackgroundTask:v3];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_135820()
{
  uint64_t v1 = v0[11];
  swift_release();
  swift_release();
  sub_136578(v1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v2 = (char *)v0[7];
  unint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase];
  *(void *)&v2[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_savePhase] = v0[27] | 0x4000000000000000;
  swift_errorRetain();
  sub_135C24(v3);
  [v2 reloadSpecifiers];
  swift_errorRelease();
  uint64_t v4 = v0[8];
  id v5 = [self sharedApplication];
  [v5 endBackgroundTask:v4];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t *initializeBufferWithCopyOfBuffer for NotificationSettingsController.ScheduleRecoveryPhase(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for NotificationSettingsController.ScheduleRecoveryPhase(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for NotificationSettingsController.ScheduleRecoveryPhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_retain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for NotificationSettingsController.ScheduleRecoveryPhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsController.ScheduleRecoveryPhase(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsController.ScheduleRecoveryPhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsController.ScheduleRecoveryPhase()
{
  return &type metadata for NotificationSettingsController.ScheduleRecoveryPhase;
}

unint64_t *initializeBufferWithCopyOfBuffer for NotificationSettingsController.SavePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_135BFC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_135BFC(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRetain();
  }
  if (!(result >> 62)) {
    return swift_retain();
  }
  return result;
}

unint64_t destroy for NotificationSettingsController.SavePhase(unint64_t *a1)
{
  return sub_135C24(*a1);
}

unint64_t sub_135C24(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRelease();
  }
  if (!(result >> 62)) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for NotificationSettingsController.SavePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_135BFC(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_135C24(v4);
  return a1;
}

unint64_t *assignWithTake for NotificationSettingsController.SavePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_135C24(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsController.SavePhase(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsController.SavePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_135D60(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_135D7C(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_135D8C(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsController.SavePhase()
{
  return &type metadata for NotificationSettingsController.SavePhase;
}

uint64_t sub_135DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_145F30();
  v4[3] = sub_145F20();
  uint64_t v6 = sub_145EB0();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_135E60, v6, v5);
}

uint64_t sub_135E60()
{
  if (qword_19AC90 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_135F24;
  return sub_232B0();
}

uint64_t sub_135F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[7] = a1;
  v5[8] = a2;
  v5[9] = a3;
  swift_task_dealloc();
  uint64_t v6 = v4[5];
  uint64_t v7 = v4[4];
  return _swift_task_switch(sub_136050, v7, v6);
}

uint64_t sub_136050()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  unint64_t v4 = (char *)v0[2];
  swift_release();
  uint64_t v5 = &v4[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController____lazy_storage___scheduledReminder];
  *(void *)uint64_t v5 = v3;
  *((void *)v5 + 1) = v2;
  *((void *)v5 + 2) = v1;
  sub_2C34C(v6);
  unint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase];
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings30NotificationSettingsController_scheduleRecoveryPhase] = 1;
  sub_136834(v7);
  [v4 reloadSpecifiers];
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

id sub_136108(void *a1, void *a2, void *a3)
{
  [a1 beginUpdates];
  id v6 = [a2 textLabel];
  if (v6)
  {
    unint64_t v7 = v6;
    if ([a3 propertyForKey:PSFooterTextGroupKey])
    {
      sub_1466A0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v10, 0, sizeof(v10));
    }
    sub_4FA08((uint64_t)v10, (uint64_t)v11);
    if (v12)
    {
      if (swift_dynamicCast())
      {
        NSString v8 = sub_145B80();
        swift_bridgeObjectRelease();
LABEL_10:
        [v7 setText:v8];

        goto LABEL_11;
      }
    }
    else
    {
      sub_1248C((uint64_t)v11, &qword_19B1E0);
    }
    NSString v8 = 0;
    goto LABEL_10;
  }
LABEL_11:
  [a2 setNeedsLayout];
  return [a1 endUpdates];
}

uint64_t sub_136264()
{
  return sub_136734(56);
}

uint64_t sub_13626C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  NSString v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *NSString v8 = v2;
  v8[1] = sub_21598;
  return sub_13473C(a1, v4, v5, v6, v7);
}

uint64_t sub_13633C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1363A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double *sub_13640C(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = a2(v4, *(void *)(a1 + 8 * v4 + 32));
    if (v8)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_7DB80(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v12 = *((void *)v5 + 2);
      unint64_t v11 = *((void *)v5 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_7DB80((double *)(v11 > 1), v12 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v12 + 1;
      uint64_t v6 = &v5[2 * v12];
      *((void *)v6 + 4) = v9;
      *((void *)v6 + 5) = v10;
    }
    ++v4;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_13652C(uint64_t a1, void *a2)
{
  v6._id countAndFlagsBits = a1;
  v3._rawValue = &off_184E40;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t sub_136578(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1365D8()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_136620()
{
  return sub_136108(v0[2], v0[3], v0[4]);
}

uint64_t sub_13662C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_13663C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_136664(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_136674()
{
  return swift_release();
}

BOOL sub_13667C(uint64_t *a1)
{
  return sub_E9418(a1, *(void *)(v1 + 16));
}

uint64_t sub_13669C(uint64_t a1, uint64_t a2)
{
  return sub_132658(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1366A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1366EC()
{
  unint64_t result = qword_1A2580;
  if (!qword_1A2580)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1A2580);
  }
  return result;
}

uint64_t sub_13672C()
{
  return sub_136734(40);
}

uint64_t sub_136734(uint64_t a1)
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_136780(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_216D4;
  return sub_135DC8(a1, v4, v5, v6);
}

unint64_t sub_136834(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationSettingsController.SpecifierID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x136910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsController.SpecifierID()
{
  return &type metadata for NotificationSettingsController.SpecifierID;
}

unint64_t sub_13694C()
{
  unint64_t result = qword_1A33E0;
  if (!qword_1A33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A33E0);
  }
  return result;
}

unint64_t sub_1369A8(uint64_t a1)
{
  return sub_137040(a1, &qword_1A3418, &qword_1A3420, (uint64_t (*)(uint64_t))sub_137818);
}

unint64_t sub_1369D0(uint64_t a1)
{
  return sub_137040(a1, &qword_1A33F0, &qword_1A33F8, (uint64_t (*)(uint64_t))sub_137818);
}

unint64_t sub_1369F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_19DC08);
  uint64_t v2 = sub_146960();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_12428(v6, (uint64_t)v15, &qword_1A33E8);
    unint64_t result = sub_1378A8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_2A74C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_136B3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_1A3468);
  uint64_t v2 = (void *)sub_146960();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_1378EC((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_136C3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_1A3450);
  uint64_t v2 = sub_146960();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_12428(v6, (uint64_t)&v13, &qword_1A3458);
    uint64_t v7 = v13;
    unint64_t result = sub_1378EC(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_2A74C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_136D6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_1A3440);
  uint64_t v2 = (void *)sub_146960();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_137A88(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_136E90(uint64_t a1)
{
  return sub_137040(a1, &qword_1A3488, &qword_1A3490, (uint64_t (*)(uint64_t))sub_137B00);
}

unint64_t sub_136EB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_1A3400);
  uint64_t v2 = sub_146960();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_12428(v6, (uint64_t)&v15, &qword_1A3408);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_137A88(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2A74C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_136FF0(uint64_t a1)
{
  return sub_137040(a1, &qword_1A3470, &qword_1A3478, (uint64_t (*)(uint64_t))sub_137818);
}

unint64_t sub_137018(uint64_t a1)
{
  return sub_137040(a1, &qword_1A3430, &qword_1A3438, (uint64_t (*)(uint64_t))sub_137818);
}

unint64_t sub_137040(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(a2);
  uint64_t v7 = sub_146960();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_12428(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_2A74C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_137170(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_A314(&qword_1A3428);
  uint64_t v2 = (void *)sub_146960();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_137C74(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_137274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v10 = sub_145B80();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      NSString v11 = sub_145B80();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  NSString v11 = 0;
LABEL_6:
  type metadata accessor for JurassicAlertController();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  if (qword_19AD28 != -1) {
    swift_once();
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v14 = sub_145B80();
  swift_bridgeObjectRelease();
  v18[4] = sub_13663C;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  void v18[2] = sub_538EC;
  v18[3] = &unk_18AB70;
  uint64_t v15 = _Block_copy(v18);
  swift_release();
  id v16 = [self actionWithTitle:v14 style:0 handler:v15];
  _Block_release(v15);

  [v12 addAction:v16];
  [v6 presentViewController:v12 animated:1 completion:0];
  return v12;
}

Swift::Void __swiftcall UIAlertController.setMessageAlignment(_:)(NSTextAlignment a1)
{
  id v3 = [self defaultParagraphStyle];
  [v3 mutableCopy];

  sub_1466A0();
  swift_unknownObjectRelease();
  uint64_t v4 = sub_C84C(0, &qword_19C470);
  swift_dynamicCast();
  [v23 setAlignment:a1];
  id v5 = [v1 message];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_145BC0();
  }
  sub_A314(&qword_19BE40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15A590;
  *(void *)(inited + 32) = NSParagraphStyleAttributeName;
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = NSFontAttributeName;
  char v8 = self;
  uint64_t v9 = NSParagraphStyleAttributeName;
  id v10 = v23;
  NSString v11 = NSFontAttributeName;
  id v12 = [v8 systemFontOfSize:12.0];
  uint64_t v13 = sub_C84C(0, &qword_19C460);
  *(void *)(inited + 80) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 112) = NSForegroundColorAttributeName;
  NSString v14 = self;
  uint64_t v15 = NSForegroundColorAttributeName;
  id v16 = [v14 blackColor];
  *(void *)(inited + 144) = sub_C84C(0, (unint64_t *)&qword_1A0A40);
  *(void *)(inited + 120) = v16;
  sub_137040(inited, &qword_1A3488, &qword_1A3490, (uint64_t (*)(uint64_t))sub_137B00);
  id v17 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v18 = sub_145B80();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_139264((unint64_t *)&qword_19B190, type metadata accessor for Key);
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v17 initWithString:v18 attributes:isa];

  id v21 = v20;
  NSString v22 = sub_145B80();
  [v1 setValue:v21 forKey:v22];
}

unint64_t sub_137818(uint64_t a1)
{
  sub_145BC0();
  sub_146C80();
  sub_145C70();
  Swift::Int v2 = sub_146CD0();
  swift_bridgeObjectRelease();
  return sub_138368(a1, v2);
}

unint64_t sub_1378A8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_146760(*(void *)(v2 + 40));

  return sub_137F90(a1, v4);
}

unint64_t sub_1378EC(uint64_t a1)
{
  sub_146C80();
  type metadata accessor for CFString(0);
  sub_139264(&qword_1A3460, type metadata accessor for CFString);
  sub_1455C0();
  Swift::Int v2 = sub_146CD0();

  return sub_1380B4(a1, v2);
}

uint64_t sub_1379A0(double a1, double a2)
{
  return sub_1379F8((void (*)(unsigned char *, double, double))CLLocationCoordinate2D.hash(into:), (uint64_t (*)(Swift::Int, __n128, __n128))sub_138210, a1, a2);
}

uint64_t sub_1379CC(double a1, double a2)
{
  return sub_1379F8((void (*)(unsigned char *, double, double))CLLocationCoordinate2D.hash(into:), (uint64_t (*)(Swift::Int, __n128, __n128))sub_138210, a1, a2);
}

uint64_t sub_1379F8(void (*a1)(unsigned char *, double, double), uint64_t (*a2)(Swift::Int, __n128, __n128), double a3, double a4)
{
  sub_146C80();
  a1(v12, a3, a4);
  Swift::Int v7 = sub_146CD0();
  v8.n128_f64[0] = a3;
  v9.n128_f64[0] = a4;

  return a2(v7, v8, v9);
}

unint64_t sub_137A88(uint64_t a1, uint64_t a2)
{
  sub_146C80();
  sub_145C70();
  Swift::Int v4 = sub_146CD0();

  return sub_138284(a1, a2, v4);
}

unint64_t sub_137B00(uint64_t a1)
{
  sub_145BC0();
  sub_146C80();
  sub_145C70();
  Swift::Int v2 = sub_146CD0();
  swift_bridgeObjectRelease();

  return sub_138368(a1, v2);
}

unint64_t sub_137B94(uint64_t a1)
{
  uint64_t v2 = sub_146C70();

  return sub_1384E0(a1, v2);
}

unint64_t sub_137BDC(uint64_t a1)
{
  sub_145290();
  sub_139264((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_145A10();

  return sub_13857C(a1, v2);
}

unint64_t sub_137C74(unsigned __int8 a1)
{
  sub_146C80();
  sub_145C70();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_146CD0();

  return sub_13873C(a1, v2);
}

unint64_t sub_137DA4(char a1)
{
  char v2 = a1 & 1;
  sub_146C80();
  sub_146C90(a1 & 1);
  Swift::Int v3 = sub_146CD0();

  return sub_1389B4(v2, v3);
}

unint64_t sub_137E14(unsigned __int8 a1)
{
  sub_146C80();
  sub_56F08();
  Swift::Int v2 = sub_146CD0();

  return sub_138A70(a1, v2);
}

unint64_t sub_137E80(void *a1)
{
  sub_146C80();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_146C90(v2);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v3 = a1;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(a1);
      break;
  }
  Swift::Int v4 = sub_146CD0();

  return sub_138D8C((char *)a1, v4);
}

unint64_t sub_137F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_138058(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_146770();
      sub_884F8((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_138058(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1380B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    char v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_139264(&qword_1A3460, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1455B0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1455B0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_138210(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      id v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_138284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_146B90() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_146B90() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_138368(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_145BC0();
    uint64_t v8 = v7;
    if (v6 == sub_145BC0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_146B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_145BC0();
          uint64_t v15 = v14;
          if (v13 == sub_145BC0() && v15 == v16) {
            break;
          }
          char v18 = sub_146B90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1384E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_13857C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_145290();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_139264((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = sub_145AD0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_13873C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x656772614C78;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x69576D756964656DLL;
          unint64_t v7 = 0xEA00000000006564;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        case 3:
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006E65;
          uint64_t v8 = 0x657263536C6C7566;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656772614C78;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA00000000006564;
          if (v8 == 0x69576D756964656DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656772616CLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6C6C616D73;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000006E65;
          if (v8 != 0x657263536C6C7566) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_146B90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1389B4(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_138A70(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x6F746F6870;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6F65646976;
          break;
        case 2:
          uint64_t v8 = 0x6F69647561;
          break;
        case 3:
          uint64_t v8 = 0x616964656DLL;
          break;
        case 4:
          uint64_t v8 = 0x6563616C70;
          break;
        case 5:
          uint64_t v8 = 0x61737265766E6F63;
          unint64_t v7 = 0xEC0000006E6F6974;
          break;
        case 6:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7974697669746361;
          break;
        case 7:
          uint64_t v8 = 0x697463656C666572;
          unint64_t v7 = 0xEA00000000006E6FLL;
          break;
        case 8:
          uint64_t v8 = 0x4D664F6574617473;
          unint64_t v7 = 0xEB00000000646E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x6F746F6870;
      switch(v6)
      {
        case 1:
          uint64_t v11 = 1701079414;
          goto LABEL_15;
        case 2:
          uint64_t v11 = 1768191329;
LABEL_15:
          if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 3:
          if (v8 != 0x616964656DLL) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4:
          if (v8 != 0x6563616C70) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 5:
          unint64_t v9 = 0xEC0000006E6F6974;
          if (v8 != 0x61737265766E6F63) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 6:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7974697669746361) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 7:
          uint64_t v10 = 0x697463656C666572;
          unint64_t v9 = 0xEA00000000006E6FLL;
          goto LABEL_26;
        case 8:
          unint64_t v9 = 0xEB00000000646E69;
          if (v8 != 0x4D664F6574617473) {
            goto LABEL_28;
          }
          goto LABEL_27;
        default:
LABEL_26:
          if (v8 != v10) {
            goto LABEL_28;
          }
LABEL_27:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_28:
          char v12 = sub_146B90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_138D8C(char *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (2)
    {
      unint64_t v7 = *(void **)(*(void *)(v2 + 48) + 8 * v4);
      switch((unint64_t)v7)
      {
        case 0uLL:
          if (a1) {
            goto LABEL_4;
          }
          break;
        case 1uLL:
          if (a1 != (unsigned char *)&def_94138 + 1) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (a1 != (unsigned char *)&def_94138 + 2) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          if (a1 != (unsigned char *)&def_94138 + 3) {
            goto LABEL_4;
          }
          break;
        default:
          if ((unint64_t)a1 >= 4)
          {
            uint64_t v8 = sub_145BC0();
            uint64_t v10 = v9;
            if (v8 == sub_145BC0() && v10 == v11)
            {
              sub_BE044(v7);
              sub_BE044(v7);
              sub_BE044(a1);
              swift_bridgeObjectRelease_n();
              sub_BDF04(a1);
              sub_BDF04(v7);
              sub_BDF04(v7);
              return v4;
            }
            char v13 = sub_146B90();
            sub_BE044(v7);
            sub_BE044(v7);
            sub_BE044(a1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_BDF04(a1);
            sub_BDF04(v7);
            sub_BDF04(v7);
            if (v13) {
              return v4;
            }
          }
LABEL_4:
          unint64_t v4 = (v4 + 1) & v6;
          if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
            continue;
          }
          break;
      }
      break;
    }
  }
  return v4;
}

unint64_t sub_138F64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_A314(&qword_1A3410);
    uint64_t v3 = (void *)sub_146960();
    for (unint64_t i = (double *)(a1 + 144); ; i += 15)
    {
      uint64_t v24 = v1;
      double v5 = *(i - 14);
      double v6 = *(i - 13);
      long long v25 = *((_OWORD *)i - 6);
      long long v26 = *((_OWORD *)i - 5);
      char v7 = *((unsigned char *)i - 64);
      uint64_t v9 = *((void *)i - 7);
      uint64_t v8 = *((void *)i - 6);
      char v10 = *((unsigned char *)i - 40);
      uint64_t v12 = *((void *)i - 4);
      uint64_t v11 = *((void *)i - 3);
      uint64_t v13 = *((void *)i - 2);
      uint64_t v14 = *((void *)i - 1);
      double v15 = *i;
      unint64_t result = sub_1379F8((void (*)(unsigned char *, double, double))CLLocationCoordinate2D.hash(into:), (uint64_t (*)(Swift::Int, __n128, __n128))sub_138210, v5, v6);
      if (v17) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v18 = (double *)(v3[6] + 16 * result);
      *uint64_t v18 = v5;
      v18[1] = v6;
      uint64_t v19 = v3[7] + 104 * result;
      *(_OWORD *)uint64_t v19 = v25;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v7;
      *(void *)(v19 + 40) = v9;
      *(void *)(v19 + 48) = v8;
      *(unsigned char *)(v19 + 56) = v10;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 72) = v11;
      *(void *)(v19 + 80) = v13;
      *(void *)(v19 + 88) = v14;
      *(double *)(v19 + 96) = v15;
      uint64_t v20 = v3[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_10;
      }
      v3[2] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = (id)v26;
      swift_bridgeObjectRetain();
      uint64_t v1 = v24 - 1;
      if (v24 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_139104()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_13913C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_13914C()
{
  return swift_release();
}

unint64_t sub_139154(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_A314(&qword_1A3448);
  uint64_t v3 = (void *)sub_146960();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_137B94(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    char v10 = (void *)(v3[7] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_137B94(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_139264(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1392AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_A314(&qword_1A3480);
  uint64_t v3 = (void *)sub_146960();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t result = sub_137DA4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_137DA4(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ForModuleLookup()
{
  return self;
}

id sub_1393CC()
{
  type metadata accessor for ForModuleLookup();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_1A3EB0 = (uint64_t)result;
  return result;
}

void sub_139424(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v8 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v8 - 8);
  BOOL v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultWorkspace];
  if (v11)
  {
    BOOL v12 = v11;
    sub_12428(a1, (uint64_t)v10, &qword_19EB20);
    uint64_t v13 = sub_144F60();
    uint64_t v14 = *(void *)(v13 - 8);
    id v16 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
    {
      sub_144EB0(v15);
      id v16 = v17;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
    id v18 = sub_1395B4(a2, a3, a4 & 1);
    [v12 openURL:v16 configuration:v18 completionHandler:0];
  }
  else
  {
    __break(1u);
  }
}

id sub_1395B4(void *a1, void *a2, char a3)
{
  id v6 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  [v6 setSensitive:1];
  id v7 = sub_139730(a1, a2);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 _currentOpenApplicationEndpoint];
  }
  else
  {
    id v9 = 0;
  }
  [v6 setTargetConnectionEndpoint:v9];

  uint64_t v10 = sub_145BC0();
  uint64_t v12 = v11;
  id v18 = &type metadata for Bool;
  LOBYTE(v17) = a3 & 1;
  sub_2A74C(&v17, v16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_13CC48(v16, v10, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  [v6 setFrontBoardOptions:isa];

  return v6;
}

id sub_139730(void *a1, id a2)
{
  id v3 = a1;
  if (!a1)
  {
    if (a2)
    {
      if ([a2 sender])
      {
        sub_1466A0();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v9, 0, sizeof(v9));
      }
      sub_4FA08((uint64_t)v9, (uint64_t)&v10);
      if (*((void *)&v11 + 1))
      {
        sub_12428((uint64_t)&v10, (uint64_t)v9, &qword_19B1E0);
        sub_C84C(0, &qword_1A3558);
        if (swift_dynamicCast())
        {
          id v3 = v8;
LABEL_18:
          sub_C7FC((uint64_t)v9);
          goto LABEL_19;
        }
        sub_C84C(0, &qword_1A3560);
        if (swift_dynamicCast())
        {
          id v3 = [v8 windowScene];

          goto LABEL_18;
        }
        sub_C84C(0, &qword_19D968);
        if (swift_dynamicCast())
        {
          id v4 = [v8 window];
          if (v4)
          {
            uint64_t v5 = v4;
            id v3 = [v4 windowScene];
          }
          else
          {

            id v3 = 0;
          }
          goto LABEL_18;
        }
        sub_C7FC((uint64_t)v9);
        id v3 = 0;
      }
      else
      {
        id v3 = 0;
      }
    }
    else
    {
      id v3 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
    }
LABEL_19:
    sub_1248C((uint64_t)&v10, &qword_19B1E0);
  }
  id v6 = a1;
  return v3;
}

id sub_139AB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsOpenSensitiveURLAction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SettingsOpenSensitiveURLAction()
{
  return self;
}

uint64_t sub_139B08(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A35A8);
  uint64_t result = sub_146950();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v23 >= v12) {
          goto LABEL_39;
        }
        unint64_t v24 = v33[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_39;
          }
          unint64_t v24 = v33[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v32;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v33[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v24 = v33[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v22);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      sub_146C80();
      if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = v34;
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_146CB0(v14);
      if ((*((void *)&v34 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = *((void *)&v34 + 1);
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      sub_146CB0(v15);
      uint64_t result = sub_146CD0();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v34;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v34;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *id v3 = v7;
  return result;
}

uint64_t sub_139E04(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3410);
  char v43 = a2;
  uint64_t result = sub_146950();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v41 = (void *)(v5 + 64);
    uint64_t v42 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v23 >= v40) {
          goto LABEL_39;
        }
        unint64_t v24 = v41[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_39;
          }
          unint64_t v24 = v41[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_39:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
              if (v39 >= 64) {
                bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v41 = -1 << v39;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v40) {
                  goto LABEL_39;
                }
                unint64_t v24 = v41[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v31 = *(void *)(v5 + 56) + 104 * v22;
      long long v47 = *(_OWORD *)v31;
      long long v48 = *(_OWORD *)(v31 + 16);
      long long v49 = v30;
      char v32 = *(unsigned char *)(v31 + 32);
      uint64_t v33 = *(void *)(v31 + 40);
      uint64_t v34 = *(void *)(v31 + 48);
      char v46 = *(unsigned char *)(v31 + 56);
      uint64_t v35 = *(void *)(v31 + 72);
      uint64_t v36 = *(void *)(v31 + 80);
      uint64_t v37 = *(void *)(v31 + 96);
      uint64_t v44 = *(void *)(v31 + 88);
      uint64_t v45 = *(void *)(v31 + 64);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = (id)v48;
        swift_bridgeObjectRetain();
      }
      sub_146C80();
      if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v49;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      sub_146CB0(v13);
      if ((*((void *)&v49 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = *((void *)&v49 + 1);
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_146CB0(v14);
      uint64_t result = sub_146CD0();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v19 = v49;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        long long v19 = v49;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
      uint64_t v20 = *(void *)(v7 + 56) + 104 * v18;
      *(_OWORD *)uint64_t v20 = v47;
      *(_OWORD *)(v20 + 16) = v48;
      *(unsigned char *)(v20 + 32) = v32;
      *(void *)(v20 + 40) = v33;
      *(void *)(v20 + 48) = v34;
      *(unsigned char *)(v20 + 56) = v46;
      *(void *)(v20 + 64) = v45;
      *(void *)(v20 + 72) = v35;
      *(void *)(v20 + 80) = v36;
      *(void *)(v20 + 88) = v44;
      *(void *)(v20 + 96) = v37;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *id v3 = v7;
  return result;
}

uint64_t sub_13A1A4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3598);
  char v38 = a2;
  uint64_t v6 = sub_146950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          id v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_146C80();
    sub_145C70();
    uint64_t result = sub_146CD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_13A4B4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3440);
  char v42 = a2;
  uint64_t v6 = sub_146950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          id v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    char v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_146C80();
    sub_145C70();
    uint64_t result = sub_146CD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_13A7DC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3488);
  char v35 = a2;
  uint64_t v6 = sub_146950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_2A74C(v22, v36);
    }
    else
    {
      sub_C738((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_145BC0();
    sub_146C80();
    sub_145C70();
    Swift::Int v24 = sub_146CD0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_2A74C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_13AB18(uint64_t a1, char a2, uint64_t *a3)
{
  id v4 = v3;
  uint64_t v6 = *v3;
  sub_A314(a3);
  char v36 = a2;
  uint64_t v7 = sub_146950();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    unint64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    id v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_2A74C(v23, v37);
    }
    else
    {
      sub_C738((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    sub_145BC0();
    sub_146C80();
    sub_145C70();
    Swift::Int v25 = sub_146CD0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_2A74C(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v4 = v8;
  return result;
}

unint64_t sub_13AE50(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A35A0);
  uint64_t v6 = (void *)sub_146950();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_13CD9C(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *id v3 = v6;
  return result;
}

uint64_t sub_13B034(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3480);
  uint64_t result = sub_146950();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v31 = -1 << v29;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_146C80();
      sub_146C90(v26);
      uint64_t result = sub_146CD0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *id v3 = v7;
  return result;
}

uint64_t sub_13B300(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3568);
  uint64_t v6 = sub_146950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  char v33 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    sub_146C80();
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v14 = sub_146CD0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v15) >> 6;
    while (++v17 != v26 || (v25 & 1) == 0)
    {
      BOOL v27 = v17 == v26;
      if (v17 == v26) {
        unint64_t v17 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v12 + 8 * v17);
      if (v28 != -1)
      {
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
        *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
        *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
        ++*(void *)(v7 + 16);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x13B6CCLL);
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_40;
  }
  if (v21 >= v11)
  {
    swift_release();
    id v3 = v34;
    char v22 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_35:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *char v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_32;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_41;
          }
          if (v13 >= v11) {
            goto LABEL_32;
          }
          unint64_t v23 = *(void *)(v35 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_32:
    swift_release();
    id v3 = v34;
    if (v33) {
      goto LABEL_35;
    }
  }
LABEL_39:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_13B6F0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3578);
  uint64_t result = sub_146950();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    int64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              id v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_146C70();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *id v3 = v7;
  return result;
}

uint64_t sub_13B998(uint64_t a1, int a2)
{
  return sub_13BA00(a1, a2, _s4YearVMa, &qword_1A3588, _s4YearVMa);
}

uint64_t sub_13B9CC(uint64_t a1, int a2)
{
  return sub_13BA00(a1, a2, _s5MonthVMa, &qword_1A3580, _s5MonthVMa);
}

uint64_t sub_13BA00(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  int64_t v8 = v5;
  uint64_t v10 = a3(0);
  uint64_t v43 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v5;
  sub_A314(a4);
  int v44 = a2;
  uint64_t result = sub_146950();
  uint64_t v15 = result;
  if (*(void *)(v13 + 16))
  {
    int64_t v40 = v8;
    int64_t v16 = 0;
    uint64_t v17 = *(void *)(v13 + 64);
    char v42 = (void *)(v13 + 64);
    uint64_t v18 = 1 << *(unsigned char *)(v13 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v17;
    int64_t v41 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v21 = result + 64;
    while (1)
    {
      if (v20)
      {
        unint64_t v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v24 = v23 | (v16 << 6);
      }
      else
      {
        int64_t v25 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v25 >= v41) {
          goto LABEL_34;
        }
        unint64_t v26 = v42[v25];
        ++v16;
        if (!v26)
        {
          int64_t v16 = v25 + 1;
          if (v25 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v26 = v42[v16];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_34:
              if ((v44 & 1) == 0)
              {
                uint64_t result = swift_release();
                int64_t v8 = v40;
                goto LABEL_41;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v13 + 32);
              if (v38 >= 64) {
                bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v42 = -1 << v38;
              }
              int64_t v8 = v40;
              *(void *)(v13 + 16) = 0;
              break;
            }
            unint64_t v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v16 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_43;
                }
                if (v16 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v26 = v42[v16];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v27;
          }
        }
LABEL_21:
        unint64_t v20 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v16 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v13 + 48) + 8 * v24);
      uint64_t v29 = *(void *)(v43 + 72);
      uint64_t v30 = *(void *)(v13 + 56) + v29 * v24;
      if (v44) {
        sub_13E92C(v30, (uint64_t)v12, a5);
      }
      else {
        sub_13E8C4(v30, (uint64_t)v12, a5);
      }
      uint64_t result = sub_146C70();
      uint64_t v31 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v21 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v22 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v15 + 48) + 8 * v22) = v28;
      uint64_t result = sub_13E92C((uint64_t)v12, *(void *)(v15 + 56) + v29 * v22, a5);
      ++*(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *int64_t v8 = v15;
  return result;
}

unint64_t sub_13BD68(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3570);
  uint64_t v6 = (void *)sub_146950();
  if (*(void *)(v5 + 16))
  {
    int64_t v25 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              id v3 = v25;
              if (a2)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
                if (v24 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v24;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
      uint64_t v20 = *(void *)(v5 + 56) + 16 * v15;
      uint64_t v21 = *(void **)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      if ((a2 & 1) == 0)
      {
        sub_BE044(v19);
        id v23 = v21;
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_13CF10(v19, (uint64_t)v21, v22, v6);
    }
  }
  unint64_t result = swift_release();
  *id v3 = v6;
  return result;
}

uint64_t sub_13BF70(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_A314(&qword_1A3400);
  uint64_t v6 = sub_146950();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              id v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_2A74C(v24, v35);
      }
      else
      {
        sub_C738((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_146C80();
      sub_145C70();
      uint64_t result = sub_146CD0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_2A74C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

void sub_13C270(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1379A0(a3, a4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_13D2D4();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = (double *)(v18[6] + 16 * v12);
    *uint64_t v22 = a3;
    v22[1] = a4;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_139B08(v15, a2 & 1);
  uint64_t v20 = sub_1379A0(a3, a4);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    int64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  sub_146C20();
  __break(1u);
}

void sub_13C3B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_137A88(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_13D690();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_13A1A4(v15, a4 & 1);
  unint64_t v20 = sub_137A88(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_146C20();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_13C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_137A88(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_13D844();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_13A4B4(v17, a5 & 1);
  unint64_t v23 = sub_137A88(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_146C20();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  unint64_t v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_13C6A8(_OWORD *a1, void *a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_137B00((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_13DA18(&qword_1A3488);
      goto LABEL_7;
    }
    sub_13A7DC(v12, a3 & 1);
    unint64_t v18 = sub_137B00((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_146C20();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_C7FC((uint64_t)v16);
    return sub_2A74C(a1, v16);
  }
LABEL_13:
  sub_13D074(v9, (uint64_t)a2, a1, v15);

  return a2;
}

_OWORD *sub_13C7F4(_OWORD *a1, void *a2, char a3)
{
  return sub_13C828(a1, a2, a3, (uint64_t (*)(void *))sub_137BD8, &qword_1A3590, type metadata accessor for AttributeName);
}

_OWORD *sub_13C828(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), uint64_t *a5, void (*a6)(void))
{
  uint64_t v10 = (void **)v6;
  char v13 = (void *)*v6;
  unint64_t v15 = a4(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 < v18 || (a3 & 1) == 0)
  {
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_13DA18(a5);
      goto LABEL_7;
    }
    sub_13AB18(v18, a3 & 1, a5);
    uint64_t v24 = a4(a2);
    if ((v19 & 1) == (v25 & 1))
    {
      unint64_t v15 = v24;
      char v21 = *v10;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a6(0);
    uint64_t result = (_OWORD *)sub_146C20();
    __break(1u);
    return result;
  }
LABEL_7:
  char v21 = *v10;
  if (v19)
  {
LABEL_8:
    uint64_t v22 = (_OWORD *)(v21[7] + 32 * v15);
    sub_C7FC((uint64_t)v22);
    return sub_2A74C(a1, v22);
  }
LABEL_13:
  sub_13D074(v15, (uint64_t)a2, a1, v21);

  return a2;
}

_OWORD *sub_13C9A4(_OWORD *a1, void *a2, char a3)
{
  return sub_13C828(a1, a2, a3, (uint64_t (*)(void *))sub_137BD8, &qword_1A3430, type metadata accessor for TraitKey);
}

uint64_t sub_13C9D8(uint64_t a1, unsigned __int8 a2, char a3)
{
  id v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_137C74(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_13DBD8();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_13AE50(result, a3 & 1);
  uint64_t result = sub_137C74(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_146C20();
  __break(1u);
  return result;
}

void sub_13CB10(uint64_t a1, char a2, char a3)
{
  id v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_137DA4(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_13DD7C();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      _OWORD v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_13B034(v13, a3 & 1);
  unint64_t v18 = sub_137DA4(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_146C20();
  __break(1u);
}

_OWORD *sub_13CC48(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_137A88(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_13E6DC();
      goto LABEL_7;
    }
    sub_13BF70(v15, a4 & 1);
    unint64_t v21 = sub_137A88(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_146C20();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_C7FC((uint64_t)v19);
    return sub_2A74C(a1, v19);
  }
LABEL_13:
  sub_13D268(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_13CD9C(char a1, uint64_t a2, void *a3)
{
  sub_146C80();
  sub_145C70();
  swift_bridgeObjectRelease();
  sub_146CD0();
  unint64_t result = sub_1466F0();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_13CF10(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_146C80();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v8 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v8 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v8 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v8 = 3;
LABEL_7:
      sub_146C90(v8);
      break;
    default:
      sub_146C90(4uLL);
      sub_145BC0();
      id v9 = a1;
      sub_145C70();
      swift_bridgeObjectRelease();
      sub_BDF04(a1);
      break;
  }
  sub_146CD0();
  unint64_t result = sub_1466F0();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a1;
  char v11 = (void *)(a4[7] + 16 * result);
  *char v11 = a2;
  v11[1] = a3;
  ++a4[2];
  return result;
}

_OWORD *sub_13D074(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = sub_2A74C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_13D0DC(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_13D120(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_13D168(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_13D1C0(a1, a2, a3, a4, _s4YearVMa, _s4YearVMa);
}

uint64_t sub_13D194(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_13D1C0(a1, a2, a3, a4, _s5MonthVMa, _s5MonthVMa);
}

uint64_t sub_13D1C0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_13E92C(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_13D268(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_2A74C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

id sub_13D2D4()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A35A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13D47C()
{
  sub_A314(&qword_1A3410);
  unint64_t v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_146940();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *unint64_t v35 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v5 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 104 * v14;
    uint64_t v17 = *(void *)(v1 + 56) + v16;
    char v18 = *(unsigned char *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v20 = *(void *)(v17 + 48);
    char v21 = *(unsigned char *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v22 = *(void *)(v17 + 72);
    uint64_t v24 = *(void *)(v17 + 80);
    uint64_t v25 = *(void *)(v17 + 88);
    uint64_t v26 = *(void *)(v17 + 96);
    long long v28 = *(_OWORD *)v17;
    long long v27 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    uint64_t v29 = *(void *)(v3 + 56) + v16;
    *(_OWORD *)uint64_t v29 = v28;
    *(_OWORD *)(v29 + 16) = v27;
    *(unsigned char *)(v29 + 32) = v18;
    *(void *)(v29 + 40) = v19;
    *(void *)(v29 + 48) = v20;
    *(unsigned char *)(v29 + 56) = v21;
    *(void *)(v29 + 64) = v23;
    *(void *)(v29 + 72) = v22;
    *(void *)(v29 + 80) = v24;
    *(void *)(v29 + 88) = v25;
    *(void *)(v29 + 96) = v26;
    BOOL v30 = (void *)v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v30;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v5 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_13D690()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3598);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13D844()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3440);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_13DA00()
{
  return sub_13DA18(&qword_1A3488);
}

id sub_13DA0C()
{
  return sub_13DA18(&qword_1A3590);
}

id sub_13DA18(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_A314(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_146940();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_C738(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_2A74C(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13DBD8()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A35A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_13DD7C()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3480);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13DF20()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3568);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13E0B0()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3578);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13E240()
{
  return sub_13E2A8(_s4YearVMa, &qword_1A3588, _s4YearVMa);
}

void *sub_13E274()
{
  return sub_13E2A8(_s5MonthVMa, &qword_1A3580, _s5MonthVMa);
}

void *sub_13E2A8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  sub_A314(a2);
  uint64_t v10 = *v3;
  uint64_t v11 = sub_146940();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v6 = v12;
    return result;
  }
  BOOL v30 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v31 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v16);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 8 * v22;
    uint64_t v24 = *(void *)(*(void *)(v10 + 48) + 8 * v22);
    unint64_t v25 = *(void *)(v32 + 72) * v22;
    sub_13E8C4(*(void *)(v10 + 56) + v25, (uint64_t)v9, a3);
    *(void *)(*(void *)(v12 + 48) + v23) = v24;
    id result = (void *)sub_13E92C((uint64_t)v9, *(void *)(v12 + 56) + v25, a3);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v16);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_13E510()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3570);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v23;
    sub_BE044(v17);
    id v19 = (id)v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_13E6DC()
{
  uint64_t v1 = v0;
  sub_A314(&qword_1A3400);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_146940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_C738(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_2A74C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_13E8C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_13E92C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_13E994(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(qword_19E190);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_145430();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      int64_t v13 = (char *)a1 + v12;
      unint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  }
  return a1;
}

uint64_t type metadata accessor for CalendarBinningUnit(uint64_t a1)
{
  return sub_407CC(a1, qword_1A36A8);
}

uint64_t sub_13EBE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_145430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 20);
    uint64_t v6 = sub_145230();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v2 + 24);
    uint64_t v8 = sub_145450();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  return result;
}

char *sub_13ED28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  return a1;
}

char *sub_13EF0C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v22 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
      uint64_t v23 = *(int *)(v6 + 20);
      int64_t v24 = &a1[v23];
      unint64_t v25 = &a2[v23];
      uint64_t v26 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
      uint64_t v27 = *(int *)(v6 + 24);
      int64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_1432D0((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_13F204(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  return a1;
}

char *sub_13F3E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v23 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(a1, a2, v23);
      uint64_t v24 = *(int *)(v6 + 20);
      unint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
      uint64_t v28 = *(int *)(v6 + 24);
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
      goto LABEL_7;
    }
    sub_1432D0((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

uint64_t sub_13F6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13F6F0);
}

uint64_t sub_13F6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(qword_19E190);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_13F760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13F774);
}

uint64_t sub_13F774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(qword_19E190);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UniformDateBins(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A3608);
}

void sub_13F808()
{
  sub_13F8A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_13F8A4()
{
  if (!qword_1A3618)
  {
    type metadata accessor for CalendarBinningUnit(255);
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1A3618);
    }
  }
}

uint64_t *sub_13F8FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145430();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_13FA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_145230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_145450();
  int v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_13FB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_145450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_13FC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_145450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_13FD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_145450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_13FE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_145230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_145450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_13FF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13FF78);
}

uint64_t sub_13FF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145430();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_145450();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1400C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1400D8);
}

uint64_t sub_1400D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_145430();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_145450();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_140230()
{
  uint64_t result = sub_145430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_145230();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_145450();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_140334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v39 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = sub_A314(&qword_1A2530);
  uint64_t v4 = __chkstk_darwin(v45);
  char v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v41 = (char *)&v38 - v6;
  uint64_t v7 = sub_A314(&qword_19C930);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_145230();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = sub_A314(qword_19E190);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_A314(&qword_1A3720);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12428(v3, (uint64_t)v18, qword_19E190);
  uint64_t v22 = type metadata accessor for CalendarBinningUnit(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v18, 1, v22) == 1)
  {
    sub_1248C((uint64_t)v18, qword_19E190);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
LABEL_5:
    sub_144FD0();
    sub_144FD0();
    sub_142218((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v25 = v10;
    uint64_t result = sub_145A80();
    if (result)
    {
      uint64_t v38 = v7;
      uint64_t v39 = (uint64_t)v21;
      uint64_t v26 = v45;
      uint64_t v28 = v40;
      uint64_t v27 = v41;
      uint64_t v29 = &v41[*(int *)(v45 + 48)];
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
      v30(v41, v15, v25);
      v30(v29, v13, v25);
      uint64_t v31 = *(int *)(v26 + 48);
      uint64_t v32 = v42;
      unint64_t v33 = &v42[v31];
      int64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      v34(v42, v27, v25);
      v34(v33, v29, v25);
      uint64_t v35 = (uint64_t)v43;
      v30(v43, v32, v25);
      BOOL v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v33, v25);
      uint64_t v37 = &v32[*(int *)(v45 + 48)];
      v30(v32, v27, v25);
      v30(v37, v29, v25);
      v30((char *)(v35 + *(int *)(v38 + 36)), v37, v25);
      v36(v32, v25);
      sub_2E4D0(v35, v44, &qword_19C930);
      return sub_1248C(v39, &qword_1A3720);
    }
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v23 = *(void *)(v3 + *(int *)(type metadata accessor for UniformDateBins(0) + 20));
  uint64_t result = v23 + v39;
  if (!__OFADD__(v23, v39))
  {
    sub_14185C(result, v21);
    sub_1432D0((uint64_t)v18, type metadata accessor for CalendarBinningUnit);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) != 1) {
      return sub_2E4D0((uint64_t)v21, v44, &qword_19C930);
    }
    goto LABEL_5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1408A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v7 = sub_144C60();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  __chkstk_darwin(v7);
  uint64_t v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(&qword_19C930);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_A314(&qword_19BE88);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_A314(&qword_19C150);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_145230();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  __chkstk_darwin(v21);
  uint64_t v70 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);
  uint64_t v67 = v9;
  uint64_t v58 = v23;
  uint64_t v59 = v10 + 56;
  v23(a4, 1, 1, v9);
  uint64_t v24 = type metadata accessor for UniformDateBins(0);
  uint64_t v57 = *(int *)(v24 + 20);
  *(void *)(a4 + v57) = 0;
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v60 = a4;
  uint64_t v56 = v25;
  *(void *)(a4 + v25) = 1;
  uint64_t v26 = a1;
  sub_145300();
  uint64_t v27 = sub_144AB0();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v27) == 1)
  {
    sub_1248C((uint64_t)v17, &qword_19BE88);
    uint64_t v29 = 1;
  }
  else
  {
    sub_144AA0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
    uint64_t v29 = 0;
  }
  uint64_t v30 = v68;
  uint64_t v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v20, v29, 1, v69);
  sub_12428(a2, (uint64_t)v14, &qword_19C930);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v20, 1, v31);
  unint64_t v33 = v70;
  uint64_t v66 = a2;
  if (v32 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v70, v14, v31);
    sub_1248C((uint64_t)v14, &qword_19C930);
    sub_1248C((uint64_t)v20, &qword_19C150);
  }
  else
  {
    sub_1248C((uint64_t)v14, &qword_19C930);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v33, v20, v31);
  }
  uint64_t v34 = v30;
  uint64_t v35 = sub_145430();
  uint64_t v36 = *(void *)(v35 - 8);
  id v61 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v37 = (uint64_t)v65;
  v61(v65, v26, v35);
  uint64_t v38 = v67;
  uint64_t v39 = *(int *)(v67 + 20);
  uint64_t v54 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v37 + v39, v70, v31);
  uint64_t v40 = v37 + *(int *)(v38 + 24);
  uint64_t v41 = sub_145450();
  uint64_t v42 = *(void *)(v41 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, v71, v41);
  sub_A314(&qword_1A2280);
  uint64_t v55 = v36;
  unint64_t v43 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1578A0;
  v61((char *)(v44 + v43), v37, v35);
  sub_26B0C(v44);
  swift_setDeallocating();
  uint64_t v45 = v35;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v46 = v62;
  uint64_t v47 = v66;
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_144C10();
  char v50 = v49;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v46, v64);
  if (v50)
  {
    __break(1u);
  }
  else
  {
    uint64_t v52 = sub_14144C(v47);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v71, v41);
    sub_1248C(v47, &qword_19C930);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v45);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
    uint64_t v53 = v60;
    sub_1248C(v60, qword_19E190);
    sub_143A8C(v37, v53, type metadata accessor for CalendarBinningUnit);
    uint64_t result = v58(v53, 0, 1, v67);
    *(void *)(v53 + v57) = v48;
    *(void *)(v53 + v56) = v52;
  }
  return result;
}

uint64_t sub_140FF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_144C60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(qword_19E190);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12428(v1, (uint64_t)v8, qword_19E190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1248C((uint64_t)v8, qword_19E190);
    return 0;
  }
  uint64_t v23 = v1;
  sub_143A8C((uint64_t)v8, (uint64_t)v12, type metadata accessor for CalendarBinningUnit);
  sub_A314(&qword_1A2280);
  uint64_t v14 = sub_145430();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = v2;
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1578A0;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v18 + v17, v12, v14);
  sub_26B0C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_144C10();
  char v21 = v20;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  if (v21) {
    goto LABEL_7;
  }
  sub_1432D0((uint64_t)v12, type metadata accessor for CalendarBinningUnit);
  uint64_t v22 = *(void *)(v23 + *(int *)(type metadata accessor for UniformDateBins(0) + 20));
  uint64_t result = v19 - v22;
  if (__OFSUB__(v19, v22))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  return result;
}

uint64_t sub_141370(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      int64x2_t v9 = (int64x2_t)(unint64_t)result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip2q_s64(v9, v8), vzip1q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    uint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_14144C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v40 = sub_A314(&qword_19C930);
  uint64_t v3 = __chkstk_darwin(v40);
  int v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v30 - v5;
  uint64_t v43 = sub_144C60();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  int64x2_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v42 = v2 + *(int *)(v9 + 24);
  uint64_t v10 = sub_A314(&qword_1A2280);
  uint64_t v11 = sub_145430();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v37 = v14 + *(void *)(v12 + 72);
  uint64_t v38 = v10;
  uint64_t v36 = v13 | 7;
  uint64_t v15 = swift_allocObject();
  long long v34 = xmmword_1578A0;
  *(_OWORD *)(v15 + 16) = xmmword_1578A0;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v35(v15 + v14, v2, v11);
  sub_26B0C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v33 = v2 + *(int *)(v9 + 20);
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_144C10();
  LOBYTE(v9) = v17;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v39 = v6 + 8;
  uint64_t result = v18(v8, v43);
  if (v9) {
    goto LABEL_14;
  }
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v34;
  v35(v20 + v14, v2, v11);
  sub_26B0C(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_145330();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_144C10();
  char v23 = v22;
  uint64_t result = v18(v8, v43);
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = v31;
    sub_14185C(v16, v31);
    uint64_t v25 = v32;
    uint64_t result = sub_14185C(v21, v32);
    uint64_t v26 = v21 - v16;
    if (__OFSUB__(v21, v16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v27 = v26 + 1;
      if (!__OFADD__(v26, 1))
      {
        uint64_t result = sub_1451D0();
        if ((result & 1) == 0 || (BOOL v28 = __OFSUB__(v27, 1), --v27, !v28))
        {
          char v29 = sub_1451D0();
          sub_1248C((uint64_t)v25, &qword_19C930);
          uint64_t result = sub_1248C((uint64_t)v24, &qword_19C930);
          if ((v29 & 1) == 0) {
            return v27;
          }
          BOOL v28 = __OFSUB__(v27--, 1);
          if (!v28) {
            return v27;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_14185C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v44 = sub_A314(&qword_1A2530);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v37 - v6;
  uint64_t v7 = sub_A314(&qword_19C150);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v42 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v17 = (char *)&v37 - v16;
  type metadata accessor for CalendarBinningUnit(0);
  uint64_t v43 = v2;
  uint64_t v18 = a1;
  sub_1453E0();
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t result = v19(v11, 1, v12);
  if (result == 1) {
    goto LABEL_8;
  }
  uint64_t v37 = v13;
  uint64_t v21 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t result = v21(v17, v11, v12);
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v22 = v42;
  sub_1453E0();
  uint64_t result = v19(v22, 1, v12);
  if (result != 1)
  {
    char v23 = v41;
    v21(v41, v22, v12);
    sub_142218((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_145A80();
    if (result)
    {
      uint64_t v24 = v44;
      uint64_t v25 = v38;
      uint64_t v26 = &v38[*(int *)(v44 + 48)];
      v21(v38, v17, v12);
      uint64_t v27 = (void (*)(char *, char *, uint64_t))v21;
      BOOL v28 = v26;
      v27(v26, v23, v12);
      char v29 = v39;
      uint64_t v30 = &v39[*(int *)(v24 + 48)];
      uint64_t v31 = v37;
      int v32 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v32(v39, v25, v12);
      v32(v30, v28, v12);
      uint64_t v33 = v40;
      v27(v40, v29, v12);
      long long v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v30, v12);
      uint64_t v35 = &v29[*(int *)(v44 + 48)];
      v27(v29, v25, v12);
      v27(v35, v28, v12);
      uint64_t v36 = sub_A314(&qword_19C930);
      v27(&v33[*(int *)(v36 + 36)], v35, v12);
      return ((uint64_t (*)(char *, uint64_t))v34)(v29, v12);
    }
    goto LABEL_7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_141CA0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 24));
  return result;
}

void (*sub_141CB0(void *a1, uint64_t *a2))(uint64_t *a1)
{
  uint64_t v4 = sub_A314(&qword_19C930);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  *a1 = v5;
  sub_140334(*a2, (uint64_t)v5);
  return sub_141D30;
}

void sub_141D30(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_1248C(*a1, &qword_19C930);

  free(v1);
}

uint64_t *sub_141D74@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + *(int *)(a2 + 24));
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = *result;
  if (*result < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = result[1];
  if (v5 >= v7)
  {
    uint64_t v8 = sub_A314(&qword_1A3718);
    uint64_t result = (uint64_t *)sub_143AF4(v3, (uint64_t)a3 + *(int *)(v8 + 40), type metadata accessor for UniformDateBins);
    *a3 = v6;
    a3[1] = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_141DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_143AF4(v2, a2, type metadata accessor for UniformDateBins);
  uint64_t result = sub_A314(&qword_1A3708);
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  *(void *)(a2 + *(int *)(result + 40)) = *(void *)(v2 + *(int *)(a1 + 24));
  return result;
}

BOOL sub_141E6C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 24)) == 0;
}

void sub_141E84(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_141E94@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_141ECC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_141370(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_141F04(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_141F5C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_141F78(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_141F94(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_141FB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_141FC8(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_141FE0@<X0>(uint64_t a1@<X8>)
{
  sub_143A8C(v1, a1, type metadata accessor for UniformDateBins);
  uint64_t result = sub_A314(&qword_1A36F0);
  *(void *)(a1 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_142034(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 24));
  if (result < 0) {
    __break(1u);
  }
  return result;
}

double *sub_142048()
{
  uint64_t v1 = sub_142260(v0);
  sub_1432D0(v0, type metadata accessor for UniformDateBins);
  return v1;
}

uint64_t sub_142094()
{
  if ((sub_145420() & 1) == 0 || (sub_1451D0() & 1) == 0) {
    return 0;
  }

  return sub_1453A0();
}

uint64_t sub_142110()
{
  return sub_122D8(&qword_1A36E8, &qword_1A36F0);
}

uint64_t sub_14214C()
{
  return sub_142218(&qword_1A36F8, (void (*)(uint64_t))type metadata accessor for UniformDateBins);
}

void *sub_142194()
{
  return &protocol witness table for Int;
}

uint64_t sub_1421A0()
{
  return sub_122D8(&qword_1A3700, &qword_1A3708);
}

uint64_t sub_1421DC()
{
  return sub_122D8(&qword_1A3710, &qword_1A3718);
}

uint64_t sub_142218(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *sub_142260(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UniformDateBins(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_1A36F0);
  uint64_t result = (double *)__chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + *(int *)(v3 + 32));
  if (v10 < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v10) {
    return _swiftEmptyArrayStorage;
  }
  sub_A314(&qword_1A3728);
  uint64_t v11 = *(void *)(sub_A314(&qword_19C930) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v14);
  if (!v12) {
    goto LABEL_13;
  }
  if ((double *)((char *)result - v13) != (double *)0x8000000000000000 || v12 != -1)
  {
    _OWORD v14[2] = v10;
    v14[3] = 2 * ((uint64_t)((uint64_t)result - v13) / v12);
    uint64_t v16 = *(void *)(sub_A314(&qword_19C930) - 8);
    uint64_t v17 = (uint64_t)v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    sub_143AF4(a1, (uint64_t)v5, type metadata accessor for UniformDateBins);
    uint64_t v18 = sub_1426D4((uint64_t)v9, v17, v10);
    sub_1248C((uint64_t)v9, &qword_1A36F0);
    if (v18 == v10) {
      return (double *)v14;
    }
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
LABEL_14:
  __break(1u);
  return result;
}

double *sub_142488(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_A314((uint64_t *)&unk_19EB40);
  uint64_t v3 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v6);
  if (v4)
  {
    if ((double *)((char *)result - v5) != (double *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_143330(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1D050();
      if (v9 == v1) {
        return (double *)v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1425DC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_A314(&qword_19C130);
      uint64_t v3 = (double *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      *((void *)v3 + 2) = v2;
      *((void *)v3 + 3) = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10BF54((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

uint64_t sub_1426D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v114 = sub_A314(&qword_1A2530);
  uint64_t v6 = __chkstk_darwin(v114);
  NSString v112 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v113 = (char *)&v87 - v8;
  uint64_t v9 = sub_A314(&qword_19C150);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  Swift::String v94 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v87 - v12;
  uint64_t v14 = sub_145230();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v99 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  Class v98 = (char *)&v87 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::String v93 = (char *)&v87 - v21;
  __chkstk_darwin(v20);
  char v23 = (char *)&v87 - v22;
  uint64_t v24 = sub_A314(qword_19E190);
  __chkstk_darwin(v24 - 8);
  uint64_t v118 = (uint64_t)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_A314(&qword_1A3720);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  char v29 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v107 = (char *)&v87 - v30;
  uint64_t v120 = sub_A314(&qword_19C930);
  uint64_t v108 = *(void *)(v120 - 8);
  uint64_t v31 = __chkstk_darwin(v120);
  uint64_t v111 = (char *)&v87 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v106 = (uint64_t)&v87 - v34;
  __chkstk_darwin(v33);
  uint64_t v105 = (uint64_t)&v87 - v35;
  uint64_t v36 = sub_A314(&qword_1A36F0);
  uint64_t v37 = v36 - 8;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v87 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_143A8C(v121, (uint64_t)v39, type metadata accessor for UniformDateBins);
  uint64_t v41 = *(int *)(v37 + 44);
  uint64_t v115 = v39;
  *(void *)&v39[v41] = 0;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_28;
  }
  if (!a3)
  {
LABEL_28:
    sub_2E4D0((uint64_t)v115, a1, &qword_1A36F0);
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_34;
  }
  uint64_t v100 = v41;
  uint64_t v89 = a1;
  uint64_t v92 = type metadata accessor for UniformDateBins(0);
  uint64_t v42 = *(int *)(v92 + 24);
  uint64_t v119 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56);
  uint64_t v97 = v42;
  if (!*(void *)&v115[v42])
  {
    uint64_t v117 = 0;
LABEL_25:
    uint64_t v81 = (uint64_t)v107;
    (*v119)(v107, 1, 1, v120);
LABEL_26:
    a1 = v89;
    a3 = v117;
    sub_1248C(v81, &qword_1A3720);
    goto LABEL_28;
  }
  uint64_t v91 = v13;
  uint64_t v117 = 0;
  uint64_t v43 = 0;
  uint64_t v90 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v102 = (void (**)(char *, uint64_t))(v15 + 8);
  id v103 = (void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v110 = (unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
  uint64_t v88 = a3;
  uint64_t v96 = a3 - 1;
  uint64_t v95 = v23;
  uint64_t v45 = v118;
  unint64_t v104 = v29;
  uint64_t v46 = (uint64_t)v115;
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v121 = v14;
  while (1)
  {
    uint64_t v116 = a2;
    sub_12428(v46, v45, qword_19E190);
    uint64_t v47 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v45, 1, v47);
    if (result == 1)
    {
      sub_1248C(v45, qword_19E190);
      uint64_t v48 = *v119;
      (*v119)(v29, 1, 1, v120);
    }
    else
    {
      uint64_t v49 = *(void *)(v46 + *(int *)(v92 + 20));
      uint64_t v50 = v49 + v43;
      if (__OFADD__(v49, v43)) {
        goto LABEL_31;
      }
      uint64_t v51 = v91;
      sub_1453E0();
      uint64_t v52 = *v90;
      uint64_t result = (*v90)(v51, 1, v14);
      if (result == 1) {
        goto LABEL_35;
      }
      uint64_t v53 = *v44;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))*v44)(v23, v51, v14);
      if (__OFADD__(v50, 1)) {
        goto LABEL_32;
      }
      uint64_t v54 = v94;
      sub_1453E0();
      uint64_t result = v52(v54, 1, v14);
      if (result == 1) {
        goto LABEL_36;
      }
      uint64_t v55 = v93;
      v53(v93, v54, v14);
      sub_142218((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t result = sub_145A80();
      if ((result & 1) == 0) {
        goto LABEL_33;
      }
      uint64_t v56 = v113;
      uint64_t v57 = v114;
      uint64_t v58 = &v113[*(int *)(v114 + 48)];
      v53(v113, v23, v14);
      v53(v58, v55, v14);
      uint64_t v59 = v112;
      uint64_t v60 = &v112[*(int *)(v57 + 48)];
      id v61 = *v103;
      (*v103)(v112, v56, v14);
      v61(v60, v58, v14);
      uint64_t v62 = (uint64_t)v111;
      v53(v111, v59, v14);
      uint64_t v109 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v102;
      ((void (*)(char *, uint64_t))v109)(v60, v14);
      uint64_t v63 = &v59[*(int *)(v57 + 48)];
      v53(v59, v56, v14);
      v53(v63, v58, v14);
      uint64_t v64 = v120;
      v53((char *)(v62 + *(int *)(v120 + 36)), v63, v14);
      ((void (*)(char *, uint64_t))v109)(v59, v14);
      char v29 = v104;
      sub_2E4D0(v62, (uint64_t)v104, &qword_19C930);
      uint64_t v45 = v118;
      sub_1432D0(v118, type metadata accessor for CalendarBinningUnit);
      uint64_t v48 = *v119;
      (*v119)(v29, 0, 1, v64);
      if ((*v110)(v29, 1, v64) != 1)
      {
        uint64_t v79 = v106;
        sub_2E4D0((uint64_t)v29, v106, &qword_19C930);
        uint64_t v80 = v116;
        uint64_t v81 = (uint64_t)v107;
        uint64_t v14 = v121;
        goto LABEL_18;
      }
      uint64_t v44 = v101;
      uint64_t v14 = v121;
    }
    uint64_t v65 = v98;
    sub_144FD0();
    uint64_t v66 = v99;
    sub_144FD0();
    sub_142218((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_145A80();
    if ((result & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v68 = v113;
    uint64_t v67 = v114;
    uint64_t v69 = &v113[*(int *)(v114 + 48)];
    uint64_t v70 = *v44;
    (*v44)(v113, v65, v14);
    v70(v69, v66, v14);
    uint64_t v71 = v112;
    uint64_t v72 = &v112[*(int *)(v67 + 48)];
    uint64_t v109 = v48;
    uint64_t v73 = *v103;
    (*v103)(v112, v68, v14);
    v73(v72, v69, v14);
    uint64_t v74 = v111;
    v70(v111, v71, v14);
    uint64_t v75 = *v102;
    (*v102)(v72, v121);
    uint64_t v76 = *(int *)(v67 + 48);
    char v29 = v104;
    id v77 = &v71[v76];
    v70(v71, v68, v121);
    v70(v77, v69, v121);
    v70(&v74[*(int *)(v120 + 36)], v77, v121);
    uint64_t v14 = v121;
    v75(v71, v121);
    uint64_t v78 = (uint64_t)v74;
    uint64_t v48 = v109;
    uint64_t v79 = v106;
    sub_2E4D0(v78, v106, &qword_19C930);
    sub_1248C((uint64_t)v29, &qword_1A3720);
    uint64_t v80 = v116;
    uint64_t v45 = v118;
    uint64_t v81 = (uint64_t)v107;
LABEL_18:
    uint64_t result = sub_2E4D0(v79, v81, &qword_19C930);
    uint64_t v46 = (uint64_t)v115;
    uint64_t v82 = *(void *)&v115[v100];
    uint64_t v43 = v82 + 1;
    if (__OFADD__(v82, 1)) {
      break;
    }
    *(void *)&v115[v100] = v43;
    uint64_t v83 = v120;
    v48((char *)v81, 0, 1, v120);
    if ((*v110)((char *)v81, 1, v83) == 1) {
      goto LABEL_26;
    }
    uint64_t v84 = v81;
    uint64_t v85 = v105;
    sub_2E4D0(v84, v105, &qword_19C930);
    sub_2E4D0(v85, v80, &qword_19C930);
    if (v96 == v117)
    {
      a1 = v89;
      a3 = v88;
      goto LABEL_28;
    }
    a2 = v80 + *(void *)(v108 + 72);
    uint64_t v86 = *(void *)(v46 + v97);
    ++v117;
    char v23 = v95;
    uint64_t v44 = v101;
    if (v43 == v86) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1432D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_143330(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_143AF4(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    sub_143A8C((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    uint64_t result = sub_143A8C((uint64_t)v15, a2, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

BOOL sub_143654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_A314(&qword_1A3730);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(qword_19E190);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - v16;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v28 - v18;
  uint64_t v29 = a1;
  sub_12428(a1, (uint64_t)&v28 - v18, qword_19E190);
  uint64_t v30 = a2;
  sub_12428(a2, (uint64_t)v17, qword_19E190);
  uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_12428((uint64_t)v19, (uint64_t)v11, qword_19E190);
  sub_12428((uint64_t)v17, v20, qword_19E190);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v11, 1, v4) != 1)
  {
    uint64_t v24 = v31;
    sub_12428((uint64_t)v11, v31, qword_19E190);
    if (v21(v20, 1, v4) != 1)
    {
      sub_143A8C(v20, (uint64_t)v7, type metadata accessor for CalendarBinningUnit);
      if (sub_145420() & 1) != 0 && (sub_1451D0())
      {
        char v27 = sub_1453A0();
        sub_1432D0((uint64_t)v7, type metadata accessor for CalendarBinningUnit);
        sub_1248C((uint64_t)v17, qword_19E190);
        sub_1248C((uint64_t)v19, qword_19E190);
        sub_1432D0(v24, type metadata accessor for CalendarBinningUnit);
        sub_1248C((uint64_t)v11, qword_19E190);
        if ((v27 & 1) == 0) {
          return 0;
        }
        goto LABEL_4;
      }
      sub_1432D0((uint64_t)v7, type metadata accessor for CalendarBinningUnit);
      sub_1248C((uint64_t)v17, qword_19E190);
      sub_1248C((uint64_t)v19, qword_19E190);
      sub_1432D0(v24, type metadata accessor for CalendarBinningUnit);
      uint64_t v26 = (uint64_t)v11;
      unint64_t v25 = qword_19E190;
LABEL_14:
      sub_1248C(v26, v25);
      return 0;
    }
    sub_1248C((uint64_t)v17, qword_19E190);
    sub_1248C((uint64_t)v19, qword_19E190);
    sub_1432D0(v24, type metadata accessor for CalendarBinningUnit);
LABEL_8:
    unint64_t v25 = &qword_1A3730;
    uint64_t v26 = (uint64_t)v11;
    goto LABEL_14;
  }
  sub_1248C((uint64_t)v17, qword_19E190);
  sub_1248C((uint64_t)v19, qword_19E190);
  if (v21(v20, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_1248C((uint64_t)v11, qword_19E190);
LABEL_4:
  uint64_t v22 = type metadata accessor for UniformDateBins(0);
  if (*(void *)(v29 + *(int *)(v22 + 20)) == *(void *)(v30 + *(int *)(v22 + 20))) {
    return *(void *)(v29 + *(int *)(v22 + 24)) == *(void *)(v30 + *(int *)(v22 + 24));
  }
  return 0;
}

uint64_t sub_143A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_143AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_143C30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalPrintPageRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for JournalPrintPageRenderer()
{
  return self;
}

id SyncDataMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id JournalEntryAssetAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetAttachmentMO()
{
  return self;
}

id JournalEntryAssetAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static JournalEntryAssetAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void *sub_143E60()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_143E6C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for JournalEntryAssetAttachmentMO();
  uint64_t result = sub_1467F0();
  *a1 = result;
  return result;
}

id JournalEntryAssetFileAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetFileAttachmentMO()
{
  return self;
}

id JournalEntryAssetFileAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static JournalEntryAssetFileAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

unint64_t sub_144034()
{
  unint64_t result = qword_1A37B0;
  if (!qword_1A37B0)
  {
    sub_12244(&qword_19B730);
    sub_1440A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A37B0);
  }
  return result;
}

unint64_t sub_1440A8()
{
  unint64_t result = qword_19EB50;
  if (!qword_19EB50)
  {
    sub_145290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EB50);
  }
  return result;
}

uint64_t sub_144100@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 id];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_145270();

    uint64_t v5 = sub_145290();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_145290();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id JournalEntryAssetMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetMO()
{
  return self;
}

id JournalEntryAssetMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static JournalEntryAssetMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalEntryMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for JournalEntryMO()
{
  return self;
}

id JournalEntryMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static JournalEntryMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for JournalMO()
{
  return self;
}

id JournalMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static JournalMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id SyncDataMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SyncDataMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for SyncDataMO()
{
  return self;
}

id SyncDataMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncDataMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static SyncDataMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1447D0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SyncDataMO();
  uint64_t result = sub_1467F0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

id sub_144838()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_1A3858 = (uint64_t)result;
  return result;
}

uint64_t sub_144890(uint64_t a1)
{
  return sub_1448DC(a1, qword_1A3EB8);
}

uint64_t sub_1448B8(uint64_t a1)
{
  return sub_1448DC(a1, qword_1A3ED0);
}

uint64_t sub_1448DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_145610();
  sub_C61C(v3, a2);
  sub_C584(v3, (uint64_t)a2);
  if (qword_19B050 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1A3858;
  return sub_145600();
}

uint64_t sub_144980()
{
  return static FormatStyle<>.iso8601.getter();
}

uint64_t sub_144990()
{
  return static FormatStyle<>.dateTime.getter();
}

uint64_t sub_1449A0()
{
  return static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
}

uint64_t sub_1449B0()
{
  return static FormatStyle.list<A>(type:width:)();
}

uint64_t sub_1449C0()
{
  return static FormatStyle<>.time(pattern:)();
}

uint64_t sub_1449D0()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1449E0()
{
  return JSONDecoder.init()();
}

uint64_t sub_1449F0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_144A00()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_144A10()
{
  return JSONEncoder.init()();
}

uint64_t sub_144A20()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_144A30()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_144A40()
{
  return static Measurement<>.FormatStyle.UnitWidth.wide.getter();
}

uint64_t sub_144A50()
{
  return Measurement<>.formatted<A>(_:)();
}

uint64_t sub_144A60()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_144A70()
{
  return CharacterSet.union(_:)();
}

uint64_t sub_144A80()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_144A90()
{
  return DateInterval.end.getter();
}

uint64_t sub_144AA0()
{
  return DateInterval.start.getter();
}

uint64_t sub_144AB0()
{
  return type metadata accessor for DateInterval();
}

uint64_t sub_144AC0()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_144AD0()
{
  return Notification.object.getter();
}

uint64_t sub_144AE0()
{
  return Notification.userInfo.getter();
}

uint64_t sub_144AF0()
{
  return type metadata accessor for Notification();
}

uint64_t sub_144B00()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_144B10()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_144B20()
{
  return URLComponents.queryItems.modify();
}

uint64_t sub_144B30()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_144B40()
{
  return URLComponents.url.getter();
}

uint64_t sub_144B50()
{
  return URLComponents.host.setter();
}

uint64_t sub_144B60()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_144B70()
{
  return URLComponents.init()();
}

uint64_t sub_144B80()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_144B90()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_144BA0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_144BB0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_144BC0()
{
  return DateComponents.weekOfYear.getter();
}

NSDateComponents sub_144BD0()
{
  return DateComponents._bridgeToObjectiveC()();
}

uint64_t sub_144BE0()
{
  return DateComponents.day.getter();
}

uint64_t sub_144BF0()
{
  return DateComponents.day.setter();
}

uint64_t sub_144C00()
{
  return DateComponents.hour.setter();
}

uint64_t sub_144C10()
{
  return DateComponents.value(for:)();
}

uint64_t sub_144C20()
{
  return DateComponents.minute.setter();
}

uint64_t sub_144C30()
{
  return DateComponents.second.getter();
}

uint64_t sub_144C40()
{
  return DateComponents.second.setter();
}

uint64_t sub_144C50()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_144C60()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_144C70()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_144C80()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_144C90()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_144CA0()
{
  return SortDescriptor.init(_:comparator:)();
}

uint64_t sub_144CB0()
{
  return SortDescriptor.init<A>(_:order:)();
}

uint64_t sub_144CC0(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_144CD0()
{
  return IntegerFormatStyle.init(locale:)();
}

NSPresentationIntent sub_144CE0()
{
  return PresentationIntent._bridgeToObjectiveC()();
}

uint64_t sub_144CF0()
{
  return type metadata accessor for PresentationIntent.Kind();
}

uint64_t sub_144D00()
{
  return type metadata accessor for PresentationIntent();
}

uint64_t sub_144D10()
{
  return PresentationIntent.init(_:identity:parent:)();
}

uint64_t sub_144D20()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_144D30()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_144D40()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_144D50()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_144D60()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_144D70()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_144D80()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_144D90()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_144DA0()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_144DB0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_144DC0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_144DD0()
{
  return FloatingPointFormatStyle.init(locale:)();
}

uint64_t sub_144DE0()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t sub_144DF0()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_144E00()
{
  return static MeasurementFormatUnitUsage<>.workout.getter();
}

uint64_t sub_144E10()
{
  return URL.relativePath.getter();
}

uint64_t sub_144E20()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_144E30()
{
  return URL.pathExtension.getter();
}

uint64_t sub_144E40()
{
  return URL.absoluteString.getter();
}

uint64_t sub_144E60()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t sub_144E70()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_144E80()
{
  return static URL.libraryDirectory.getter();
}

uint64_t sub_144E90()
{
  return URL.lastPathComponent.getter();
}

uint64_t sub_144EA0()
{
  return static URL.temporaryDirectory.getter();
}

void sub_144EB0(NSURL *retstr@<X8>)
{
}

uint64_t sub_144EC0()
{
  return URL.deletingPathExtension()();
}

uint64_t sub_144ED0()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_144EE0()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t sub_144EF0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_144F00(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_144F10()
{
  return URL.path.getter();
}

uint64_t sub_144F20()
{
  return URL.init(string:)();
}

uint64_t sub_144F30()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_144F40()
{
  return URL.appending<A>(components:directoryHint:)();
}

uint64_t sub_144F50()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_144F60()
{
  return type metadata accessor for URL();
}

uint64_t sub_144F70()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_144F80()
{
  return Data._copyContents(initializing:)();
}

NSData sub_144F90()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_144FA0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_144FB0()
{
  return Data.write(to:options:)();
}

uint64_t sub_144FC0()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t sub_144FD0()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_144FE0()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_144FF0()
{
  return static Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_145000()
{
  return static Date.FormatStyle.TimeStyle.omitted.getter();
}

uint64_t sub_145010()
{
  return static Date.FormatStyle.TimeStyle.shortened.getter();
}

uint64_t sub_145020()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_145030()
{
  return static Date.FormatStyle.DateStyle.abbreviated.getter();
}

uint64_t sub_145040()
{
  return static Date.FormatStyle.DateStyle.omitted.getter();
}

uint64_t sub_145050()
{
  return static Date.FormatStyle.DateStyle.complete.getter();
}

uint64_t sub_145060()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_145070()
{
  return Date.FormatStyle.hour(_:)();
}

uint64_t sub_145080()
{
  return static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
}

uint64_t sub_145090()
{
  return static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
}

uint64_t sub_1450A0()
{
  return static Date.FormatStyle.Symbol.Hour.AMPMStyle.omitted.getter();
}

uint64_t sub_1450B0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
}

uint64_t sub_1450C0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour();
}

uint64_t sub_1450D0()
{
  return static Date.FormatStyle.Symbol.Minute.defaultDigits.getter();
}

uint64_t sub_1450E0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Minute();
}

uint64_t sub_1450F0()
{
  return Date.FormatStyle.minute(_:)();
}

uint64_t sub_145100()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t sub_145110()
{
  return static Date.distantPast.getter();
}

uint64_t sub_145120()
{
  return static Date.distantFuture.getter();
}

uint64_t sub_145130()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_145140()
{
  return Date.ISO8601FormatStyle.day()();
}

uint64_t sub_145150()
{
  return Date.ISO8601FormatStyle.year()();
}

uint64_t sub_145160()
{
  return Date.ISO8601FormatStyle.month()();
}

uint64_t sub_145170()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

NSDate sub_145180()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_145190()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1451A0()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1451B0()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_1451C0()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_1451D0()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_1451E0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1451F0()
{
  return static Date.now.getter();
}

uint64_t sub_145200()
{
  return Date.formatted(date:time:)();
}

uint64_t sub_145210()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_145220()
{
  return Date.init()();
}

uint64_t sub_145230()
{
  return type metadata accessor for Date();
}

uint64_t sub_145240()
{
  return UUID.uuidString.getter();
}

uint64_t sub_145260()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_145270()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_145280()
{
  return UUID.init()();
}

uint64_t sub_145290()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1452A0()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_1452B0()
{
  return static Locale.current.getter();
}

uint64_t sub_1452C0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1452D0()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_1452E0()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_1452F0()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_145300()
{
  return Calendar.dateInterval(of:for:)();
}

uint64_t sub_145310()
{
  return Calendar.firstWeekday.getter();
}

uint64_t sub_145320()
{
  return type metadata accessor for Calendar.MatchingPolicy();
}

uint64_t sub_145330()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t sub_145340()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_145350()
{
  return Calendar.weekdaySymbols.getter();
}

uint64_t sub_145360()
{
  return type metadata accessor for Calendar.SearchDirection();
}

uint64_t sub_145370()
{
  return type metadata accessor for Calendar.RepeatedTimePolicy();
}

uint64_t sub_145380()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_145390()
{
  return Calendar.veryShortWeekdaySymbols.getter();
}

uint64_t sub_1453A0()
{
  return static Calendar.== infix(_:_:)();
}

uint64_t sub_1453B0()
{
  return Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t sub_1453C0()
{
  return Calendar.date(from:)();
}

uint64_t sub_1453D0()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t sub_1453E0()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_1453F0()
{
  return Calendar.isDate(_:equalTo:toGranularity:)();
}

uint64_t sub_145400()
{
  return Calendar.locale.setter();
}

uint64_t sub_145410()
{
  return static Calendar.current.getter();
}

uint64_t sub_145420()
{
  return static Calendar.Component.== infix(_:_:)();
}

uint64_t sub_145430()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_145440()
{
  return Calendar.component(_:from:)();
}

uint64_t sub_145450()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_145460()
{
  return IndexSet.count.getter();
}

uint64_t sub_145470(Swift::Int a1)
{
  return *(_OWORD *)&IndexSet.insert(_:)(a1);
}

uint64_t sub_145480()
{
  return IndexSet.init()();
}

uint64_t sub_145490()
{
  return type metadata accessor for IndexSet();
}

uint64_t sub_1454A0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1454B0()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1454C0()
{
  return IndexPath.row.getter();
}

uint64_t sub_1454D0()
{
  return IndexPath.section.getter();
}

uint64_t sub_1454E0()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_1454F0()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_145500()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_145510()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t sub_145520()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t sub_145530()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_145540()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_145550()
{
  return static AVPartialAsyncProperty<A>.duration.getter();
}

uint64_t sub_145570()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_145580()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_145590()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1455A0()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_1455B0()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_1455C0()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_1455D0()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_1455E0()
{
  return Regex.init(_regexString:version:)();
}

uint64_t sub_1455F0()
{
  return Regex.Match.output.getter();
}

uint64_t sub_145600()
{
  return ColorResource.init(name:bundle:)();
}

uint64_t sub_145610()
{
  return type metadata accessor for ColorResource();
}

uint64_t sub_145620()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t sub_145630()
{
  return static UTType.data.getter();
}

uint64_t sub_145640()
{
  return static UTType.image.getter();
}

uint64_t sub_145650()
{
  return static UTType.movie.getter();
}

uint64_t sub_145660()
{
  return static UTType.video.getter();
}

uint64_t sub_145670()
{
  return UTType.conforms(to:)();
}

uint64_t sub_145680()
{
  return type metadata accessor for UTType();
}

uint64_t sub_145690()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1456A0()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_1456B0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1456C0()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_1456D0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1456E0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1456F0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_145700()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_145710()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_145720()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_145730()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_145740()
{
  return Logger.logObject.getter();
}

uint64_t sub_145750()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_145760()
{
  return type metadata accessor for Logger();
}

uint64_t sub_145770()
{
  return UIMutableTraits.userInterfaceStyle.setter();
}

uint64_t sub_145780()
{
  return UICellConfigurationState.isDisabled.getter();
}

uint64_t sub_145790()
{
  return UICellConfigurationState.traitCollection.getter();
}

uint64_t sub_1457A0()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1457B0()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t sub_1457C0()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t sub_1457D0()
{
  return type metadata accessor for UIListContentConfiguration.TextProperties.TextAlignment();
}

uint64_t sub_1457E0()
{
  return UIListContentConfiguration.TextProperties.alignment.setter();
}

uint64_t sub_1457F0()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t sub_145800()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t sub_145810()
{
  return UIListContentConfiguration.directionalLayoutMargins.modify();
}

uint64_t sub_145820()
{
  return UIListContentConfiguration.directionalLayoutMargins.getter();
}

uint64_t sub_145830()
{
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

uint64_t sub_145840()
{
  return static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
}

uint64_t sub_145850()
{
  return UIListContentConfiguration.textToSecondaryTextVerticalPadding.getter();
}

uint64_t sub_145860()
{
  return UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
}

uint64_t sub_145870()
{
  return UIListContentConfiguration.textToSecondaryTextHorizontalPadding.getter();
}

uint64_t sub_145880()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t sub_145890()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_1458A0()
{
  return UIListContentConfiguration.updated(for:)();
}

uint64_t sub_1458B0()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t sub_1458C0()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_1458D0()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1458E0()
{
  return PassthroughSubject.init()();
}

uint64_t sub_1458F0()
{
  return Publisher.collect<A>(_:options:)();
}

uint64_t sub_145900()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_145910()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t sub_145920()
{
  return AppStorage.wrappedValue.getter();
}

uint64_t sub_145930()
{
  return static Animation.easeIn(duration:)();
}

uint64_t sub_145940()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_145950()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_145960()
{
  return DispatchQoS.relativePriority.getter();
}

uint64_t sub_145970()
{
  return static DispatchQoS.default.getter();
}

uint64_t sub_145980()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_145990()
{
  return WidgetFamily.rawValue.getter();
}

uint64_t sub_1459A0()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_1459B0()
{
  return Array.init()();
}

uint64_t sub_1459C0()
{
  return CancellationError.init()();
}

NSDictionary sub_1459D0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1459E0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1459F0()
{
  return Dictionary.index(after:)();
}

uint64_t sub_145A00()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_145A10()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_145A20()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_145A30()
{
  return Character.hash(into:)();
}

uint64_t sub_145A40()
{
  return BidirectionalCollection<>.firstMatch<A, B>(of:)();
}

uint64_t sub_145A50()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_145A60()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_145A70()
{
  return dispatch thunk of static Comparable.>= infix(_:_:)();
}

uint64_t sub_145A80()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_145A90()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_145AA0()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_145AB0()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_145AC0()
{
  return type metadata accessor for ClosedRange();
}

uint64_t sub_145AD0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_145AE0()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_145AF0()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
}

uint64_t sub_145B00()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_145B10(Swift::String a1)
{
}

uint64_t sub_145B20()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_145B30()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_145B40()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_145B50()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_145B60()
{
  return static String.StandardComparator.localizedStandard.getter();
}

uint64_t sub_145B70()
{
  return type metadata accessor for String.StandardComparator();
}

NSString sub_145B80()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_145B90()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_145BA0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_145BB0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_145BC0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_145BD0()
{
  return String.init(format:_:)();
}

uint64_t sub_145BE0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_145BF0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_145C00()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_145C10()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_145C20()
{
  return String.init<A>(describing:)();
}

uint64_t sub_145C30()
{
  return String.utf8CString.getter();
}

uint64_t sub_145C40()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_145C50()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t sub_145C60()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_145C70()
{
  return String.hash(into:)();
}

uint64_t sub_145C80()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_145C90(Swift::String a1)
{
}

uint64_t sub_145CA0()
{
  return String.init(cString:)();
}

Swift::Int sub_145CB0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_145CC0()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_145CD0()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_145CF0()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_145D00()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_145D10()
{
  return String.init<A>(_:)();
}

uint64_t sub_145D20()
{
  return String.subscript.getter();
}

uint64_t sub_145D30()
{
  return Sequence.sorted<A, B>(using:)();
}

uint64_t sub_145D40()
{
  return Sequence.formatted<A>(_:)();
}

uint64_t sub_145D50()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t sub_145D60()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_145D70()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_145DB0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_145DC0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_145DD0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_145DE0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_145DF0()
{
  return Array.description.getter();
}

uint64_t sub_145E00()
{
  return specialized Array._endMutation()();
}

uint64_t sub_145E10()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_145E20()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_145E30()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_145E40()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_145E50()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_145E60()
{
  return Array.append(_:)();
}

uint64_t sub_145E70()
{
  return Array.endIndex.getter();
}

void sub_145E80(Swift::Bool keepingCapacity)
{
}

uint64_t sub_145E90()
{
  return type metadata accessor for Array();
}

NSNumber sub_145EA0()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_145EB0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_145EC0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_145ED0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_145EE0()
{
  return type metadata accessor for CancellationError();
}

uint64_t sub_145EF0()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t sub_145F20()
{
  return static MainActor.shared.getter();
}

uint64_t sub_145F30()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_145F40()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_145F50()
{
  return type metadata accessor for TaskPriority();
}

void sub_145F60()
{
}

uint64_t sub_145F70()
{
  return static Task<>.checkCancellation()();
}

uint64_t sub_145F80()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t sub_145F90()
{
  return Double.write<A>(to:)();
}

NSSet sub_145FB0()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_145FC0()
{
  return Set.description.getter();
}

uint64_t sub_145FD0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_145FE0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_146000()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_146010()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_146020()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_146040()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t sub_146050()
{
  return Collection<>.uniqued()();
}

uint64_t sub_146070()
{
  return Collection.count.getter();
}

uint64_t sub_146080()
{
  return Collection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_146090()
{
  return Collection.index(_:offsetBy:)();
}

uint64_t sub_1460A0()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_1460B0()
{
  return Collection.distance(from:to:)();
}

uint64_t sub_1460C0()
{
  return Collection<>.indices.getter();
}

uint64_t sub_1460D0()
{
  return Collection<>.subscript.getter();
}

uint64_t sub_1460E0()
{
  return RangeReplaceableCollection<>.replace<A, B, C>(_:maxReplacements:with:)();
}

uint64_t sub_1460F0()
{
  return RangeReplaceableCollection<>.replace<A, B>(_:with:maxReplacements:)();
}

uint64_t sub_146100()
{
  return RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
}

uint64_t sub_146110()
{
  return type metadata accessor for Range();
}

uint64_t sub_146120()
{
  return UITableViewHeaderFooterView.contentConfiguration.setter();
}

uint64_t sub_146150()
{
  return NLTokenizer.enumerateTokens(in:using:)();
}

uint64_t sub_146160()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_146170()
{
  return NSExpression.init(format:_:)();
}

uint64_t sub_146180()
{
  return CSSearchQuery.Results.Item.item.getter();
}

uint64_t sub_146190()
{
  return type metadata accessor for CSSearchQuery.Results.Item();
}

uint64_t sub_1461A0()
{
  return type metadata accessor for CSSearchQuery.Results.Iterator();
}

uint64_t sub_1461B0()
{
  return type metadata accessor for CSSearchQuery.Results();
}

uint64_t sub_1461C0()
{
  return CSSearchQuery.results.getter();
}

uint64_t sub_1461D0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1461E0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1461F0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_146200()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_146210()
{
  return static os_log_type_t.default.getter();
}

UIBarButtonItem sub_146220(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return UIBarButtonItem.init(title:image:primaryAction:menu:)(title, image, primaryAction, menu);
}

uint64_t sub_146230()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t sub_146240()
{
  return UITableViewCell.defaultContentConfiguration()();
}

void sub_146250(CGPoint to, CGAffineTransform *transform)
{
}

void sub_146260(CGPoint to, CGAffineTransform *transform)
{
}

uint64_t sub_146270()
{
  return NSSortDescriptor.init<A, B>(keyPath:ascending:)();
}

uint64_t sub_146280()
{
  return PSViewController.emitNavigationEventForApplicationSetting(applicationBundleIdentifier:title:localizedNavigationComponents:deepLink:)();
}

uint64_t sub_146290()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_1462A0()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t sub_1462B0()
{
  return static NSKeyedUnarchiver.unarchivedArrayOfObjects<A>(ofClass:from:)();
}

uint64_t sub_1462C0()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t sub_1462D0()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1462E0()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_1462F0()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t sub_146300()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_146310()
{
  return OS_dispatch_queue.qos.getter();
}

uint64_t sub_146320()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_146330()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_146340()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_146350()
{
  return UIListContentView.configuration.setter();
}

uint64_t sub_146360()
{
  return UIListContentView.init(configuration:)();
}

uint64_t sub_146370()
{
  return UITraitCollection.modifyingTraits(_:)();
}

uint64_t sub_146380()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_146390()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_1463B0()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t sub_1463C0()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_1463D0()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t sub_1463E0()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t sub_1463F0()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_146420()
{
  return NSSet.init(arrayLiteral:)();
}

uint64_t sub_146430()
{
  return NSSet.makeIterator()();
}

unint64_t sub_146440(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  return (unint64_t)CMTime.init(seconds:preferredTimescale:)(seconds, preferredTimescale);
}

uint64_t sub_146450()
{
  return static UIView.animate(_:changes:completion:)();
}

uint64_t sub_146460()
{
  return UIColor.init(resource:)();
}

uint64_t sub_146470()
{
  return CKRecord.subscript.getter();
}

uint64_t sub_146480()
{
  return NLTagger.tag(at:unit:scheme:)();
}

NSNumber sub_146490(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

Swift::Int sub_1464A0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_1464B0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1464C0()
{
  return NSObject.hash(into:)();
}

uint64_t sub_1464D0()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1464E0()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t sub_1464F0()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t sub_146500()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t sub_146510()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t sub_146520()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t sub_146530()
{
  return static UIButton.Configuration.gray()();
}

uint64_t sub_146540()
{
  return UIButton.Configuration.title.setter();
}

uint64_t sub_146550()
{
  return static UIButton.Configuration.tinted()();
}

uint64_t sub_146560()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t sub_146570()
{
  return UIButton.configuration.setter();
}

uint64_t sub_146580()
{
  return CGPathRef.copy(dashingWithPhase:lengths:transform:)();
}

uint64_t sub_146590()
{
  return CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
}

uint64_t sub_1465A0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_1465B0()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_1465C0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1465D0()
{
  return Optional<A>.hashValue.getter();
}

uint64_t sub_1465E0()
{
  return Substring.index(before:)();
}

uint64_t sub_1465F0()
{
  return Substring.distance(from:to:)();
}

uint64_t sub_146600()
{
  return Substring.subscript.getter();
}

uint64_t sub_146610()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_146620()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_146630()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_146640()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_146650()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_146660()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t sub_146670()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t sub_146680()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_146690()
{
  return BinaryInteger.init(_:format:lenient:)();
}

uint64_t sub_1466A0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1466C0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1466D0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1466E0()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t sub_1466F0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_146700()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_146710()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_146720()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_146740()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_146750()
{
  return __CocoaSet.contains(_:)();
}

Swift::Int sub_146760(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_146770()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_146780()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_146790()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1467A0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_1467B0()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_1467C0()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_1467D0(Swift::Int a1)
{
}

uint64_t sub_1467E0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1467F0()
{
  return Identifiable<>.id.getter();
}

uint64_t sub_146800()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_146810()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_146820()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_146830()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_146840()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_146850()
{
  return static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)();
}

uint64_t sub_146860()
{
  return type metadata accessor for ManagedBuffer();
}

uint64_t sub_146870()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_146890()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1468A0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1468B0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_1468C0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1468D0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1468E0()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1468F0()
{
  return type metadata accessor for IndexingIterator();
}

uint64_t sub_146900()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_146910()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_146920()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_146930()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_146940()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_146950()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_146960()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_146970()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_146980()
{
  return dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_146990()
{
  return dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter();
}

uint64_t sub_1469A0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_1469B0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1469C0()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1469D0()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_1469E0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1469F0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_146A00()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_146A10()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_146A20()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_146A30()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_146A40()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_146A50()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_146A60()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_146A70()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_146A80()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_146A90()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_146AA0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_146AB0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_146AC0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_146AD0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_146AE0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_146AF0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_146B00()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_146B10()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_146B30(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_146B40()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t sub_146B50()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_146B70()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_146B80()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_146B90()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_146BA0()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_146BB0()
{
  return == infix<A>(_:_:)();
}

uint64_t sub_146BC0()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_146BE0()
{
  return _copyCollectionToContiguousArray<A>(_:)();
}

uint64_t sub_146BF0()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_146C00()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_146C10()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_146C20()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_146C30()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_146C40()
{
  return Error._code.getter();
}

uint64_t sub_146C50()
{
  return Error._domain.getter();
}

uint64_t sub_146C60()
{
  return Error._userInfo.getter();
}

uint64_t sub_146C70()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_146C80()
{
  return Hasher.init(_seed:)();
}

void sub_146C90(Swift::UInt a1)
{
}

void sub_146CA0(Swift::UInt8 a1)
{
}

void sub_146CB0(Swift::UInt64 a1)
{
}

Swift::Int sub_146CC0()
{
  return Hasher.finalize()();
}

Swift::Int sub_146CD0()
{
  return Hasher._finalize()();
}

uint64_t sub_146CE0()
{
  return Hasher.init()();
}

uint64_t sub_146CF0()
{
  return type metadata accessor for Result();
}

uint64_t sub_146D00()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_146D10()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_146D20()
{
  return static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
}

uint64_t sub_146D30()
{
  return static Duration.TimeFormatStyle.Pattern.hourMinuteSecond.getter();
}

uint64_t sub_146D40()
{
  return type metadata accessor for Duration.TimeFormatStyle.Pattern();
}

uint64_t sub_146D70()
{
  return _typeName(_:qualified:)();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateThumbnailAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t HKStateOfMindDomainFromAssociation()
{
  return _HKStateOfMindDomainFromAssociation();
}

uint64_t HKStateOfMindReflectiveIntervalFromKind()
{
  return _HKStateOfMindReflectiveIntervalFromKind();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return _HKUILocalizedStringForStateOfMindDomain();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return _HKUILocalizedStringForStateOfMindLabel();
}

uint64_t HKUILocalizedStringForValenceClassificationAndReflectiveInterval()
{
  return _HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
}

uint64_t HKUIStandardMapGreenColor()
{
  return _HKUIStandardMapGreenColor();
}

uint64_t HKUIStandardMapRedColor()
{
  return _HKUIStandardMapRedColor();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectUnion(rect1, rect2);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  return _MKRoadWidthAtZoomScale(zoomScale);
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageHEICRepresentation(UIImage *image)
{
  return _UIImageHEICRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t container_copy_object()
{
  return _container_copy_object();
}

uint64_t container_error_copy_unlocalized_description()
{
  return _container_error_copy_unlocalized_description();
}

uint64_t container_get_identifier()
{
  return _container_get_identifier();
}

uint64_t container_get_path()
{
  return _container_get_path();
}

uint64_t container_query_create()
{
  return _container_query_create();
}

uint64_t container_query_free()
{
  return _container_query_free();
}

uint64_t container_query_get_last_error()
{
  return _container_query_get_last_error();
}

uint64_t container_query_get_single_result()
{
  return _container_query_get_single_result();
}

uint64_t container_query_operation_set_flags()
{
  return _container_query_operation_set_flags();
}

uint64_t container_query_set_class()
{
  return _container_query_set_class();
}

uint64_t container_query_set_group_identifiers()
{
  return _container_query_set_group_identifiers();
}

uint64_t container_query_set_identifiers()
{
  return _container_query_set_identifiers();
}

uint64_t container_query_set_persona_unique_string()
{
  return _container_query_set_persona_unique_string();
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

uint64_t lroundf(float a1)
{
  return _lroundf(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return _swift_getFunctionTypeMetadata1();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_task_getMainExecutor()
{
  return _swift_task_getMainExecutor();
}

uint64_t swift_task_isCurrentExecutor()
{
  return _swift_task_isCurrentExecutor();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

xpc_object_t xpc_string_create(const char *string)
{
  return _xpc_string_create(string);
}

id objc_msgSend_URLForAuthorizationManagementFromLocation_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForAuthorizationManagementFromLocation:bundleIdentifier:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_alwaysUseMomentDate(void *a1, const char *a2, ...)
{
  return _[a1 alwaysUseMomentDate];
}

id objc_msgSend_appPolicy(void *a1, const char *a2, ...)
{
  return _[a1 appPolicy];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_callAsFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callAsFunction:");
}

id objc_msgSend_canAppFeatureLockJournalBeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 canAppFeatureLockJournalBeEnabled];
}

id objc_msgSend_canEvaluatePolicy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canEvaluatePolicy:error:");
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOpenURL:");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_emptyGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 emptyGroupSpecifier];
}

id objc_msgSend_evaluatePolicy_options_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluatePolicy:options:reply:");
}

id objc_msgSend_exportButtonShouldBeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 exportButtonShouldBeEnabled];
}

id objc_msgSend_formattedValue(void *a1, const char *a2, ...)
{
  return _[a1 formattedValue];
}

id objc_msgSend_groupSpecifierWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithID:");
}

id objc_msgSend_groupSpecifierWithID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithID:name:");
}

id objc_msgSend_handleAuthenticationWithReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAuthenticationWithReason:completion:");
}

id objc_msgSend_hasSeenBothHealthTCCs(void *a1, const char *a2, ...)
{
  return _[a1 hasSeenBothHealthTCCs];
}

id objc_msgSend_healthAccessURL(void *a1, const char *a2, ...)
{
  return _[a1 healthAccessURL];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithKey_table_locale_bundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:table:locale:bundleURL:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_isAppFeatureLockJournalEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAppFeatureLockJournalEnabled];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isOSFeatureAppProtectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOSFeatureAppProtectionEnabled];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_navigationTitle(void *a1, const char *a2, ...)
{
  return _[a1 navigationTitle];
}

id objc_msgSend_notificationSettingsController(void *a1, const char *a2, ...)
{
  return _[a1 notificationSettingsController];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_onControllerContentWillAppear(void *a1, const char *a2, ...)
{
  return _[a1 onControllerContentWillAppear];
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_pe_emitNavigationEventForApplicationSettingsWithApplicationBundleIdentifier_title_localizedNavigationComponents_deepLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pe_emitNavigationEventForApplicationSettingsWithApplicationBundleIdentifier:title:localizedNavigationComponents:deepLink:");
}

id objc_msgSend_preferenceSpecifierNamed_target_set_get_detail_cell_edit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferenceSpecifierNamed:target:set:get:detail:cell:edit:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_saveToPhotos(void *a1, const char *a2, ...)
{
  return _[a1 saveToPhotos];
}

id objc_msgSend_setAlwaysUseMomentDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysUseMomentDate:");
}

id objc_msgSend_setAppPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppPolicy:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonAction:");
}

id objc_msgSend_setControllerLoadAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControllerLoadAction:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperties:");
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:");
}

id objc_msgSend_setSaveToPhotos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSaveToPhotos:");
}

id objc_msgSend_setShowEntryTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowEntryTitle:");
}

id objc_msgSend_setSkipSuggestionSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipSuggestionSheet:");
}

id objc_msgSend_setTitleDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleDictionary:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_settingsBundle(void *a1, const char *a2, ...)
{
  return _[a1 settingsBundle];
}

id objc_msgSend_settingsDefaults(void *a1, const char *a2, ...)
{
  return _[a1 settingsDefaults];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_showController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showController:");
}

id objc_msgSend_showController_animate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showController:animate:");
}

id objc_msgSend_showEntryTitle(void *a1, const char *a2, ...)
{
  return _[a1 showEntryTitle];
}

id objc_msgSend_skipSuggestionSheet(void *a1, const char *a2, ...)
{
  return _[a1 skipSuggestionSheet];
}

id objc_msgSend_specifiers(void *a1, const char *a2, ...)
{
  return _[a1 specifiers];
}

id objc_msgSend_startExportFromVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startExportFromVC:");
}