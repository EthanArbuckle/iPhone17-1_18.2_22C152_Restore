void sub_78E0(uint64_t a1, int a2)
{
  void *v2;
  _TtC15JournalSettings19LockJournalSettings *v3;
  uint64_t vars8;

  if (a2)
  {
    v2 = *(void **)(a1 + 32);
    v3 = objc_alloc_init(_TtC15JournalSettings19LockJournalSettings);
    [v2 showController:v3 animate:1];
  }
}

void sub_7944(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = +[SettingsExportManager shared];
    [v3 startExportFromVC:*(void *)(a1 + 32)];
  }
}

void sub_7B58(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_7C04;
  v7[3] = &unk_183D20;
  id v5 = *(id *)(a1 + 32);
  id v8 = v4;
  id v9 = v5;
  id v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_7C04(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32) == 0);
}

uint64_t sub_7D90()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19AC38);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19AC38);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_7E58(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 1:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v3._object = (void *)0xEA00000000006F74;
      v9._countAndFlagsBits = 0x800000000014A2E0;
      v3._countAndFlagsBits = 0x6F6870206576696CLL;
      goto LABEL_20;
    case 2:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A2A0;
      v3._countAndFlagsBits = 0x6F65646976;
      goto LABEL_22;
    case 3:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A260;
      v3._countAndFlagsBits = 0x636973756DLL;
      goto LABEL_22;
    case 4:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A220;
      uint64_t v4 = 0x736163646F70;
      goto LABEL_15;
    case 5:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A1E0;
      v3._countAndFlagsBits = 1802465122;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 6:
    case 18:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A1A0;
      v3._countAndFlagsBits = 0x6572206F69647561;
      v3._object = (void *)0xEF676E6964726F63;
      goto LABEL_23;
    case 7:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A160;
      v3._countAndFlagsBits = 0x7469736976;
      goto LABEL_22;
    case 8:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A160;
      v3._countAndFlagsBits = 0x6563616C70;
      goto LABEL_22;
    case 9:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A160;
      v3._countAndFlagsBits = 0x20676E696B6C6177;
      v3._object = (void *)0xEC00000061657261;
      goto LABEL_23;
    case 10:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A120;
      v3._countAndFlagsBits = 1802398060;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 11:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A0E0;
      uint64_t v4 = 0x6361746E6F63;
      goto LABEL_15;
    case 12:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A0A0;
      uint64_t v4 = 0x756F6B726F77;
LABEL_15:
      v3._countAndFlagsBits = v4 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_20;
    case 13:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A060;
      v3._countAndFlagsBits = 0x2074756F6B726F77;
      v3._object = (void *)0xED00006574756F72;
      goto LABEL_20;
    case 14:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A020;
      v3._countAndFlagsBits = 0x697463656C666572;
      v3._object = (void *)0xEA00000000006E6FLL;
      goto LABEL_20;
    case 15:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000000149FE0;
      v3._countAndFlagsBits = 0x666F206574617473;
      v3._object = (void *)0xED0000646E696D20;
      goto LABEL_20;
    case 16:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000000149FA0;
      v3._countAndFlagsBits = 0x61206E6F69746F6DLL;
      v3._object = (void *)0xEF79746976697463;
LABEL_20:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      goto LABEL_24;
    case 17:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000000149F60;
      v3._countAndFlagsBits = 0x616964656DLL;
      goto LABEL_22;
    case 19:
    case 20:
      return v1;
    default:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x800000000014A320;
      v3._countAndFlagsBits = 0x6F746F6870;
LABEL_22:
      v3._object = (void *)0xE500000000000000;
LABEL_23:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
LABEL_24:
      uint64_t v1 = sub_144CC0(v3, v5, v6, v7, v9);

      return v1;
  }
}

unint64_t sub_855C(unsigned __int8 a1)
{
  int v1 = a1;
  unint64_t result = 0x6D726F6665766177;
  switch(v1)
  {
    case 1:
      unint64_t result = 0x746F68706576696CLL;
      break;
    case 2:
      unint64_t result = 0x6F65646976;
      break;
    case 3:
      unint64_t result = 0x636973756DLL;
      break;
    case 4:
      unint64_t result = 0x6F702E656C707061;
      break;
    case 5:
      unint64_t result = 1802465122;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0x6E697070616DLL;
      break;
    case 8:
    case 9:
      unint64_t result = 7364973;
      break;
    case 10:
      unint64_t result = 1802398060;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0x722E657275676966;
      break;
    case 13:
      unint64_t result = 0x6574756F72;
      break;
    case 15:
      unint64_t result = 0xD000000000000011;
      break;
    case 16:
      unint64_t result = 0x772E657275676966;
      break;
    case 17:
      unint64_t result = 0x6F6E2E636973756DLL;
      break;
    default:
      unint64_t result = 0x6F746F6870;
      break;
  }
  return result;
}

uint64_t sub_8758(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746F68506576696CLL;
      break;
    case 2:
      uint64_t result = 0x6F65646976;
      break;
    case 3:
      uint64_t result = 0x636973756DLL;
      break;
    case 4:
      uint64_t result = 0x74736163646F70;
      break;
    case 5:
      uint64_t result = 1802465122;
      break;
    case 6:
      uint64_t result = 0x6F69647561;
      break;
    case 7:
      uint64_t result = 0x7469736976;
      break;
    case 8:
      uint64_t result = 0x6E695069746C756DLL;
      break;
    case 9:
      uint64_t result = 0x4D636972656E6567;
      break;
    case 10:
      uint64_t result = 1802398060;
      break;
    case 11:
      uint64_t result = 0x746361746E6F63;
      break;
    case 12:
      uint64_t result = 0x4974756F6B726F77;
      break;
    case 13:
      uint64_t result = 0x5274756F6B726F77;
      break;
    case 14:
      uint64_t result = 0x697463656C666572;
      break;
    case 15:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 16:
      uint64_t result = 0x63416E6F69746F6DLL;
      break;
    case 17:
      uint64_t result = 0x7261506472696874;
      break;
    case 18:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 19:
      uint64_t result = 0x76456B6165727473;
      break;
    case 20:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_89EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_8CDC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_8758);
}

Swift::Int sub_8A04(uint64_t a1, uint64_t a2)
{
  return sub_8D8C(a1, a2, (void (*)(uint64_t))sub_8758);
}

uint64_t sub_8A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8E10(a1, a2, a3, (void (*)(void))sub_8758);
}

Swift::Int sub_8A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8E80(a1, a2, a3, (void (*)(uint64_t))sub_8758);
}

uint64_t sub_8A4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_B938();
  *a1 = result;
  return result;
}

uint64_t sub_8A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_8758(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_8AA8()
{
  return sub_7E58(*v0);
}

uint64_t sub_8AB0()
{
  return sub_145DB0();
}

uint64_t sub_8B10()
{
  return sub_145D70();
}

uint64_t sub_8B60(char a1)
{
  uint64_t result = 0x6974736567677573;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x50616964656DLL;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 0x506567616D69;
      goto LABEL_6;
    case 3:
      return 0x69506172656D6163;
    case 4:
      uint64_t v3 = 0x506F69647561;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6369000000000000;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      uint64_t result = 0x6568536572616873;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8CC4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_8CDC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_8B60);
}

uint64_t sub_8CDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_8D74(uint64_t a1, uint64_t a2)
{
  return sub_8D8C(a1, a2, (void (*)(uint64_t))sub_8B60);
}

Swift::Int sub_8D8C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_146C80();
  a3(v5);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_8DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8E10(a1, a2, a3, (void (*)(void))sub_8B60);
}

uint64_t sub_8E10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_8E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8E80(a1, a2, a3, (void (*)(uint64_t))sub_8B60);
}

Swift::Int sub_8E80(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_146C80();
  a4(v6);
  sub_145C70();
  swift_bridgeObjectRelease();
  return sub_146CD0();
}

uint64_t sub_8EE8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_B98C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_8F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_8B60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_8F44(unsigned __int8 *a1, char *a2)
{
  return sub_568C4(*a1, *a2);
}

Swift::Int sub_8F50()
{
  return sub_146CD0();
}

uint64_t sub_9038()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_9108()
{
  return sub_146CD0();
}

uint64_t sub_91EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_B9D8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_921C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746E656D6F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F746F6870;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461657263;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Journaling.deinit()
{
  return v0;
}

uint64_t Journaling.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_92E0()
{
  sub_A314(&qword_19B210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_157890;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = NSLinkAttributeName;
  *(void *)(inited + 48) = NSParagraphStyleAttributeName;
  *(void *)(inited + 56) = NSUnderlineStyleAttributeName;
  *(void *)(inited + 64) = NSStrikethroughStyleAttributeName;
  *(void *)(inited + 72) = NSStrikethroughColorAttributeName;
  *(void *)(inited + 80) = NSWritingDirectionAttributeName;
  *(void *)(inited + 88) = NSForegroundColorAttributeName;
  *(void *)(inited + 96) = NSAttachmentAttributeName;
  int v1 = NSFontAttributeName;
  unint64_t v2 = NSLinkAttributeName;
  uint64_t v3 = NSParagraphStyleAttributeName;
  uint64_t v4 = NSUnderlineStyleAttributeName;
  uint64_t v5 = NSStrikethroughStyleAttributeName;
  uint64_t v6 = NSStrikethroughColorAttributeName;
  uint64_t v7 = NSWritingDirectionAttributeName;
  uint64_t v8 = NSForegroundColorAttributeName;
  uint64_t v9 = NSAttachmentAttributeName;
  uint64_t v10 = sub_25FA4(inited);
  swift_setDeallocating();
  type metadata accessor for Key(0);
  uint64_t result = swift_arrayDestroy();
  qword_1A3938 = (uint64_t)v10;
  return result;
}

uint64_t sub_9424()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v0];
  unint64_t v3 = (unint64_t)[v2 length];
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = ObjectType;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = sub_C6CC;
  v6[3] = v5;
  aBlock[4] = sub_C6E4;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_9B8C;
  aBlock[3] = &unk_1852C0;
  uint64_t v7 = _Block_copy(aBlock);
  id v2 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v2, "enumerateAttributesInRange:options:usingBlock:", 0, v4, 0, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
  id v8 = [v0 length];
  sub_A314(&qword_19B1F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1578A0;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  v11 = NSDocumentTypeDocumentAttribute;
  char v12 = NSRTFTextDocumentType;
  sub_1369A8(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_C1FC((unint64_t *)&qword_19B1F8, type metadata accessor for DocumentAttributeKey);
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v14 = objc_msgSend(v0, "dataFromRange:documentAttributes:error:", 0, v8, isa, aBlock);

  id v15 = aBlock[0];
  if (v14)
  {
    uint64_t v16 = sub_144FA0();
    swift_release();

    return v16;
  }
  v17 = v15;
  sub_144D90();

  swift_willThrow();
  if (qword_19AC30 != -1) {
    goto LABEL_13;
  }
LABEL_6:
  uint64_t v18 = sub_145760();
  sub_C584(v18, (uint64_t)qword_19AC38);
  swift_errorRetain();
  swift_errorRetain();
  v19 = sub_145740();
  os_log_type_t v20 = sub_1461F0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (void *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    swift_errorRetain();
    v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
    aBlock[0] = v23;
    sub_146610();
    void *v22 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v19, v20, "WARNING: failed to turn NSAttributedString to Data: %@", v21, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  return 0;
}

void sub_98FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  int64_t v11 = 0;
  uint64_t v21 = swift_bridgeObjectRetain() + 104;
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_7:
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v13);
  id v15 = *(void **)&v25[0];
  sub_C738(v14 + 32 * v13, (uint64_t)v25 + 8);
  id v16 = v15;
  while (1)
  {
    sub_C794((uint64_t)v25, (uint64_t)&v27);
    os_log_type_t v20 = v27;
    if (!v27)
    {
      swift_release();
      return;
    }
    if (qword_19AC50 != -1) {
      swift_once();
    }
    if (sub_368F4(v20, qword_1A3938))
    {
      sub_C7FC((uint64_t)v28);

      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      objc_msgSend(a5, "removeAttribute:range:", v20, a2, a3);

      sub_C7FC((uint64_t)v28);
      if (v9) {
        goto LABEL_6;
      }
    }
LABEL_8:
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      int64_t v19 = v11;
    }
    else
    {
      unint64_t v18 = *(void *)(v22 + 8 * v17);
      if (v18) {
        goto LABEL_11;
      }
      int64_t v19 = v11 + 1;
      if (v11 + 2 < v10)
      {
        unint64_t v18 = *(void *)(v22 + 8 * (v11 + 2));
        if (v18)
        {
          int64_t v17 = v11 + 2;
LABEL_11:
          unint64_t v9 = (v18 - 1) & v18;
          unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
          int64_t v11 = v17;
          goto LABEL_7;
        }
        int64_t v19 = v11 + 2;
        if (v11 + 3 < v10)
        {
          unint64_t v18 = *(void *)(v22 + 8 * (v11 + 3));
          if (v18)
          {
            int64_t v17 = v11 + 3;
            goto LABEL_11;
          }
          int64_t v17 = v11 + 4;
          int64_t v19 = v11 + 3;
          if (v11 + 4 < v10)
          {
            unint64_t v18 = *(void *)(v22 + 8 * v17);
            if (v18) {
              goto LABEL_11;
            }
            while (v10 - 5 != v11)
            {
              unint64_t v18 = *(void *)(v21 + 8 * v11++);
              if (v18)
              {
                int64_t v17 = v11 + 4;
                goto LABEL_11;
              }
            }
            int64_t v19 = v10 - 1;
          }
        }
      }
    }
    unint64_t v9 = 0;
    uint64_t v26 = 0;
    int64_t v11 = v19;
    memset(v25, 0, sizeof(v25));
  }
  __break(1u);
}

uint64_t sub_9B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_9B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_C1FC((unint64_t *)&qword_19B190, type metadata accessor for Key);
  uint64_t v9 = sub_1459E0();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_9C5C(uint64_t a1, unint64_t a2)
{
  sub_A314((uint64_t *)&unk_19B1A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1578A0;
  *(void *)(inited + 32) = NSDocumentTypeDocumentOption;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  sub_C4D4(a1, a2);
  uint64_t v6 = NSDocumentTypeDocumentOption;
  uint64_t v7 = NSRTFTextDocumentType;
  unint64_t v8 = sub_1369D0(inited);
  id v9 = objc_allocWithZone((Class)NSAttributedString);
  id v10 = sub_BA5C(a1, a2, v8, 0);
  sub_C52C(a1, a2);
  return v10;
}

id sub_A16C()
{
  id v1 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  objc_msgSend(v1, "setAlignment:", objc_msgSend(v0, "alignment"));
  [v0 firstLineHeadIndent];
  objc_msgSend(v1, "setFirstLineHeadIndent:");
  [v0 headIndent];
  objc_msgSend(v1, "setHeadIndent:");
  objc_msgSend(v1, "setBaseWritingDirection:", objc_msgSend(v0, "baseWritingDirection"));
  Class isa = (Class)[v0 textLists];
  if (!isa)
  {
    sub_C84C(0, &qword_19B218);
    sub_145DE0();
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 setTextLists:isa];

  return v1;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.delegate()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.bundleId@<X0>(uint64_t a1@<X8>)
{
  return sub_A38C((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t variable initialization expression of Journaling.EntryViewModel.prompts()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.changeEventPublisher()
{
  return sub_1458E0();
}

uint64_t sub_A314(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.textChanged()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.dateSource()
{
  return 5;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.originalUpdatedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_A38C((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

void *variable initialization expression of Journaling.EntryViewModel.assetsAll()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_A38C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

id variable initialization expression of OperationsManager.mapTableAssetMetadataQueue()
{
  id v0 = [self strongToWeakObjectsMapTable];

  return v0;
}

uint64_t variable initialization expression of OperationBase.lock()
{
  sub_76CE8();
  type metadata accessor for OperationBase.Locked();
  uint64_t v0 = sub_BBA0();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_A4B4(uint64_t a1, uint64_t a2)
{
  return sub_B750(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_A4E0(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_A4E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_A4FC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_A510@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_A53C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_A560(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_A574@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_A588(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_A59C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_A5B0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_A5C4()
{
  return *v0 == 0;
}

uint64_t sub_A5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_A5EC(void *result)
{
  *v1 &= ~*result;
  return result;
}

NSNumber sub_A604()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_A60C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_145570();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_A660(uint64_t a1, uint64_t a2)
{
  char v3 = sub_145580();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_A6B8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_145590();
  *a1 = v3;
  return result;
}

BOOL sub_A6E0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_A6F4()
{
  return sub_1455D0();
}

uint64_t sub_A740()
{
  return sub_1455C0();
}

Swift::Int sub_A798()
{
  return sub_146CD0();
}

uint64_t sub_A804(uint64_t a1, uint64_t a2)
{
  return sub_B750(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void *sub_A81C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_A830(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_A860(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_A874(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_A888(uint64_t a1, id *a2)
{
  uint64_t result = sub_145BA0();
  *a2 = 0;
  return result;
}

uint64_t sub_A900(uint64_t a1, id *a2)
{
  char v3 = sub_145BB0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_A980@<X0>(void *a1@<X8>)
{
  sub_145BC0();
  NSString v2 = sub_145B80();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

NSNumber sub_A9C4()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_A9CC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_146000();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_AA20(uint64_t a1, uint64_t a2)
{
  char v3 = sub_146010();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_AA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_146020();
  *a1 = result;
  return result;
}

uint64_t sub_AAA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_BA24(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_AAE0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_AAEC()
{
  swift_getWitnessTable();

  return sub_1455B0();
}

uint64_t sub_AB58()
{
  sub_C1FC(&qword_19B178, type metadata accessor for FileProtectionType);
  sub_C1FC(&qword_19B180, type metadata accessor for FileProtectionType);

  return sub_1469A0();
}

void *sub_AC14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_AC20()
{
  sub_C1FC((unint64_t *)&qword_19B190, type metadata accessor for Key);
  sub_C1FC(&qword_19B198, type metadata accessor for Key);

  return sub_1469A0();
}

uint64_t sub_ACDC()
{
  sub_C1FC((unint64_t *)&qword_19B1F8, type metadata accessor for DocumentAttributeKey);
  sub_C1FC(&qword_19B488, type metadata accessor for DocumentAttributeKey);

  return sub_1469A0();
}

uint64_t sub_AD98()
{
  sub_C1FC(&qword_19B4B0, type metadata accessor for DocumentType);
  sub_C1FC(&qword_19B4B8, type metadata accessor for DocumentType);

  return sub_1469A0();
}

uint64_t sub_AE54()
{
  sub_C1FC(&qword_19B1E8, type metadata accessor for DocumentReadingOptionKey);
  sub_C1FC(&qword_19B4C0, type metadata accessor for DocumentReadingOptionKey);

  return sub_1469A0();
}

uint64_t sub_AF10()
{
  sub_C1FC(&qword_19B490, type metadata accessor for MONotificationSetupKey);
  sub_C1FC(&qword_19B498, type metadata accessor for MONotificationSetupKey);

  return sub_1469A0();
}

uint64_t sub_AFCC()
{
  sub_C1FC(&qword_19B4D8, type metadata accessor for MKPointOfInterestCategory);
  sub_C1FC(&qword_19B4E0, type metadata accessor for MKPointOfInterestCategory);

  return sub_1469A0();
}

void *sub_B088@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_B098@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_B0A4()
{
  return sub_1469A0();
}

uint64_t sub_B16C()
{
  sub_C1FC((unint64_t *)&qword_19B478, type metadata accessor for AttributeName);
  sub_C1FC(&qword_19B480, type metadata accessor for AttributeName);

  return sub_1469A0();
}

uint64_t sub_B228()
{
  sub_C1FC((unint64_t *)&qword_19B440, type metadata accessor for OptionKey);
  sub_C1FC(&qword_19B448, type metadata accessor for OptionKey);

  return sub_1469A0();
}

uint64_t sub_B2E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_145BC0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_B310()
{
  sub_C1FC(&qword_19B4C8, type metadata accessor for NLTagScheme);
  sub_C1FC(&qword_19B4D0, type metadata accessor for NLTagScheme);

  return sub_1469A0();
}

uint64_t sub_B3CC()
{
  sub_C1FC(&qword_19B4A0, type metadata accessor for NLTag);
  sub_C1FC(&qword_19B4A8, type metadata accessor for NLTag);

  return sub_1469A0();
}

uint64_t sub_B488()
{
  sub_C1FC(&qword_19B450, type metadata accessor for TraitKey);
  sub_C1FC(&qword_19B458, type metadata accessor for TraitKey);

  return sub_1469A0();
}

uint64_t sub_B544@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_145B80();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_B58C()
{
  sub_C1FC(&qword_19B4E8, type metadata accessor for GEOPOICategory);
  sub_C1FC(&qword_19B4F0, type metadata accessor for GEOPOICategory);

  return sub_1469A0();
}

uint64_t sub_B648()
{
  return sub_1469A0();
}

uint64_t sub_B704()
{
  return Double.hashValue.getter(*v0);
}

void sub_B70C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_146CB0(v1);
}

uint64_t sub_B740()
{
  return sub_146C70();
}

uint64_t sub_B750(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_145BC0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_B794()
{
  sub_145BC0();
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_B7E8()
{
  sub_145BC0();
  sub_146C80();
  sub_145C70();
  Swift::Int v0 = sub_146CD0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_B85C()
{
  return Int.hashValue.getter(*v0);
}

void sub_B864()
{
  sub_146C90(*v0);
}

uint64_t sub_B890()
{
  return sub_146C70();
}

BOOL sub_B898(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_B8AC()
{
  uint64_t v0 = sub_145BC0();
  uint64_t v2 = v1;
  if (v0 == sub_145BC0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_B938()
{
  unint64_t v0 = sub_146BC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_B98C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1840C0;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t sub_B9D8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1841D0;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_BA24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id sub_BA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = sub_144F90().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_C1FC(&qword_19B1E8, type metadata accessor for DocumentReadingOptionKey);
  Class v7 = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithData:isa options:v7 documentAttributes:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    sub_144D90();

    swift_willThrow();
  }
  return v8;
}

uint64_t sub_BBA0()
{
  return sub_146850();
}

uint64_t type metadata accessor for Journaling()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for Journaling.AssetSource(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBDB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_BDD8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_BDE4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetSource()
{
  return &type metadata for Journaling.AssetSource;
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for Journaling.AssetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xBF6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetType()
{
  return &type metadata for Journaling.AssetType;
}

uint64_t getEnumTagSinglePayload for Journaling.EntryDateSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.EntryDateSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.EntryDateSource()
{
  return &type metadata for Journaling.EntryDateSource;
}

__n128 _s9IconStyleVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_C16C()
{
  return sub_C1FC(&qword_19B130, type metadata accessor for Key);
}

uint64_t sub_C1B4()
{
  return sub_C1FC(&qword_19B138, type metadata accessor for Key);
}

uint64_t sub_C1FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_C248()
{
  unint64_t result = qword_19B140;
  if (!qword_19B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B140);
  }
  return result;
}

unint64_t sub_C2A0()
{
  unint64_t result = qword_19B148;
  if (!qword_19B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B148);
  }
  return result;
}

uint64_t sub_C2F4()
{
  return sub_C1FC(&qword_19B150, type metadata accessor for FileProtectionType);
}

uint64_t sub_C33C()
{
  return sub_C1FC(&qword_19B158, type metadata accessor for FileProtectionType);
}

uint64_t sub_C384()
{
  return sub_C1FC(&qword_19B160, type metadata accessor for FileProtectionType);
}

unint64_t sub_C3D0()
{
  unint64_t result = qword_19B168;
  if (!qword_19B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B168);
  }
  return result;
}

uint64_t sub_C424()
{
  return sub_C1FC(&qword_19B170, type metadata accessor for Key);
}

unint64_t sub_C46C()
{
  unint64_t result = qword_19B188;
  if (!qword_19B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B188);
  }
  return result;
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

uint64_t sub_C4D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_C52C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_C584(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_C5BC(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19B1E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_C61C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

uint64_t sub_C694()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_C6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_98FC(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_C6D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C6E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_C70C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_C71C()
{
  return swift_release();
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

uint64_t sub_C738(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_C794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C7FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_C84C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_C89C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4
                                                                             + class metadata base offset for ManagedBuffer)
                                                                 - 8)
                                                     + 16))(a2, v3);
}

uint64_t sub_C934(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_C954(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

uint64_t _s5VisitVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 _s15ReflectionAssetC14ReflectionDataVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_C9D0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_C9F0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for MONotificationSetupKey(uint64_t a1)
{
}

void type metadata accessor for NSMergePolicyType(uint64_t a1)
{
}

void type metadata accessor for NLTag(uint64_t a1)
{
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
}

void type metadata accessor for GEOPOICategory(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

__n128 sub_CB5C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_CB70(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_CB90(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_CBE4()
{
  return sub_C1FC(&qword_19B2D8, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_CC2C()
{
  return sub_C1FC(&qword_19B2E0, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_CC74()
{
  return sub_C1FC(&qword_19B2E8, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_CCBC()
{
  return sub_C1FC(&qword_19B2F0, type metadata accessor for GEOPOICategory);
}

uint64_t sub_CD04()
{
  return sub_C1FC(&qword_19B2F8, type metadata accessor for GEOPOICategory);
}

uint64_t sub_CD4C()
{
  return sub_C1FC(&qword_19B300, type metadata accessor for GEOPOICategory);
}

uint64_t sub_CD94()
{
  return sub_C1FC(&qword_19B308, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_CDDC()
{
  return sub_C1FC(&qword_19B310, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_CE24()
{
  return sub_C1FC(&qword_19B318, type metadata accessor for NLTagScheme);
}

uint64_t sub_CE6C()
{
  return sub_C1FC(&qword_19B320, type metadata accessor for NLTagScheme);
}

uint64_t sub_CEB4()
{
  return sub_C1FC(&qword_19B328, type metadata accessor for NLTagScheme);
}

uint64_t sub_CEFC()
{
  return sub_C1FC(&qword_19B330, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_CF44()
{
  return sub_C1FC(&qword_19B338, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_CF8C()
{
  return sub_C1FC(&qword_19B340, type metadata accessor for DocumentType);
}

uint64_t sub_CFD4()
{
  return sub_C1FC(&qword_19B348, type metadata accessor for DocumentType);
}

uint64_t sub_D01C()
{
  return sub_C1FC(&qword_19B350, type metadata accessor for DocumentType);
}

uint64_t sub_D064()
{
  return sub_C1FC(&qword_19B358, type metadata accessor for NLTag);
}

uint64_t sub_D0AC()
{
  return sub_C1FC(&qword_19B360, type metadata accessor for NLTag);
}

uint64_t sub_D0F4()
{
  return sub_C1FC(&qword_19B368, type metadata accessor for MONotificationSetupKey);
}

uint64_t sub_D13C()
{
  return sub_C1FC(&qword_19B370, type metadata accessor for MONotificationSetupKey);
}

uint64_t sub_D184()
{
  return sub_C1FC(&qword_19B378, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_D1CC()
{
  return sub_C1FC(&qword_19B380, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_D214()
{
  return sub_C1FC(&qword_19B388, type metadata accessor for AttributeName);
}

uint64_t sub_D25C()
{
  return sub_C1FC(&qword_19B390, type metadata accessor for AttributeName);
}

uint64_t sub_D2A4()
{
  return sub_C1FC(&qword_19B398, type metadata accessor for Weight);
}

uint64_t sub_D2EC()
{
  return sub_C1FC(&qword_19B3A0, type metadata accessor for Weight);
}

uint64_t sub_D334()
{
  return sub_C1FC(&qword_19B3A8, type metadata accessor for Weight);
}

uint64_t sub_D37C()
{
  return sub_C1FC(&qword_19B3B0, type metadata accessor for TraitKey);
}

uint64_t sub_D3C4()
{
  return sub_C1FC(&qword_19B3B8, type metadata accessor for TraitKey);
}

uint64_t sub_D40C()
{
  return sub_C1FC(&qword_19B3C0, type metadata accessor for TraitKey);
}

uint64_t sub_D454()
{
  return sub_C1FC(&qword_19B3C8, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_D49C()
{
  return sub_C1FC(&qword_19B3D0, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_D4E4()
{
  return sub_C1FC(&qword_19B3D8, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_D52C()
{
  return sub_C1FC(&qword_19B3E0, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_D574()
{
  return sub_C1FC(&qword_19B3E8, type metadata accessor for OptionKey);
}

uint64_t sub_D5BC()
{
  return sub_C1FC(&qword_19B3F0, type metadata accessor for OptionKey);
}

uint64_t sub_D604()
{
  return sub_C1FC(&qword_19B3F8, type metadata accessor for OptionKey);
}

uint64_t sub_D64C()
{
  return sub_C1FC((unint64_t *)&qword_19B400, type metadata accessor for CFString);
}

uint64_t sub_D694()
{
  return sub_C1FC(&qword_19B408, type metadata accessor for CFString);
}

uint64_t sub_D6DC()
{
  return sub_C1FC(&qword_19B410, type metadata accessor for AttributeName);
}

uint64_t sub_D724()
{
  return sub_C1FC(&qword_19B418, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_D76C()
{
  return sub_C1FC(&qword_19B420, type metadata accessor for MONotificationSetupKey);
}

uint64_t sub_D7B4()
{
  return sub_C1FC(&qword_19B428, type metadata accessor for NLTag);
}

uint64_t sub_D7FC()
{
  return sub_C1FC(&qword_19B430, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_D844()
{
  return sub_C1FC(&qword_19B438, type metadata accessor for MKPointOfInterestCategory);
}

unint64_t sub_D88C()
{
  unint64_t result = qword_19B470;
  if (!qword_19B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B470);
  }
  return result;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

void sub_D908(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_D990()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19B580);
  sub_C584(v0, (uint64_t)qword_19B580);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_DA8C(uint64_t a1)
{
  return sub_145770();
}

uint64_t sub_DACC()
{
  v1[4] = v0;
  sub_A314(&qword_19D0C0);
  v1[5] = swift_task_alloc();
  id v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  *id v2 = v1;
  v2[1] = sub_DB8C;
  return sub_42ECC();
}

uint64_t sub_DB8C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_DC8C, 0, 0);
}

uint64_t sub_DC8C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1)
  {
LABEL_13:
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v21(v1);
  }
  uint64_t v2 = *(void *)(v0 + 40);
  sub_E528(*(void *)(v0 + 32) + qword_1A3940, v2);
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 40);
  if (v4 == 1)
  {
    sub_E4C8(*(void *)(v0 + 40));
LABEL_8:
    if (qword_19AC58 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_145760();
    sub_C584(v17, (uint64_t)qword_19B580);
    unint64_t v18 = sub_145740();
    os_log_type_t v19 = sub_1461F0();
    if (os_log_type_enabled(v18, v19))
    {
      os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v20 = 0;
      _os_log_impl(&def_94138, v18, v19, "generateImage no route info in metadata", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  uint64_t v6 = sub_3E3A0();
  sub_E590(v5);
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v7 + qword_19D198;
  uint64_t v9 = *(void *)(v7 + qword_19D198);
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = *(void *)(v8 + 8);
  *(void *)(v0 + 72) = v10;
  int64_t v11 = (objc_class *)type metadata accessor for RouteMapGenerator();
  id v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_mapSnapshotter] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_lineWidth] = 0x4008000000000000;
  unint64_t v13 = &v12[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_id];
  *(void *)unint64_t v13 = v9;
  *((void *)v13 + 1) = v10;
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates] = v6;
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v11;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 80) = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  char v14 = *(unsigned char *)(v7 + qword_19D1C8);
  *(unsigned char *)(v0 + 104) = v14;
  id v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v15;
  *id v15 = v0;
  v15[1] = sub_DF6C;
  return sub_6E10C(v14);
}

uint64_t sub_DF6C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_E088, 0, 0);
}

uint64_t sub_E088()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    switch(*(unsigned char *)(v0 + 104))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v7 = sub_146B90();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          if (qword_19ADD0 != -1) {
            swift_once();
          }
          sub_E75DC(v1, *(void *)(v0 + 64), *(void *)(v0 + 72));
        }
        break;
    }
    uint64_t v6 = *(void *)(v0 + 96);
  }
  else
  {
    if (qword_19AC58 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_145760();
    sub_C584(v2, (uint64_t)qword_19B580);
    uint64_t v3 = sub_145740();
    os_log_type_t v4 = sub_1461F0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&def_94138, v3, v4, "error generating route map image", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = 0;
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v6);
}

uint64_t sub_E2E4()
{
  return sub_E4C8(v0 + qword_1A3940);
}

id sub_E2F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_E32C(uint64_t a1)
{
  return sub_E4C8(a1 + qword_1A3940);
}

uint64_t type metadata accessor for WorkoutRouteThumbnailCacheOperation()
{
  uint64_t result = qword_19B5C0;
  if (!qword_19B5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_E388()
{
  sub_E418();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_E418()
{
  if (!qword_19B5D8)
  {
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(255);
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19B5D8);
    }
  }
}

uint64_t sub_E470()
{
  return type metadata accessor for WorkoutRouteThumbnailCacheOperation();
}

uint64_t sub_E478(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_E4C8(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19D0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19D0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E590(uint64_t a1)
{
  uint64_t v2 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E5EC()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19B718);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19B718);
  if (qword_19AF40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D10);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_E6B4()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_E6E4()
{
  return v0;
}

BOOL sub_E6F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_E704()
{
  Swift::UInt v1 = *v0;
  sub_146C80();
  sub_146C90(v1);
  return sub_146CD0();
}

void sub_E74C()
{
  sub_146C90(*v0);
}

Swift::Int sub_E778()
{
  Swift::UInt v1 = *v0;
  sub_146C80();
  sub_146C90(v1);
  return sub_146CD0();
}

BOOL sub_E7BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

id Journaling.EntryViewModel.id.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id);
}

uint64_t (*variable initialization expression of Journaling.EntryViewModel.didChange())()
{
  return nullsub_1;
}

uint64_t sub_E800(void *a1, char a2, int a3, void *a4)
{
  uint64_t v5 = v4;
  id v162 = a1;
  id v163 = a4;
  int v164 = a3;
  int v166 = a2 & 1;
  uint64_t v6 = sub_A314(&qword_19BC50);
  __chkstk_darwin(v6 - 8);
  v143 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_A314(&qword_19BC58);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (uint64_t *)((char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_A314(&qword_19BC60);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_A314(&qword_19C150);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v161 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v160 = (char *)&v134 - v14;
  __chkstk_darwin(v13);
  v151 = (char *)&v134 - v15;
  uint64_t v16 = sub_145230();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  v165 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v150 = (char *)&v134 - v20;
  uint64_t v21 = sub_A314(&qword_19B730);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  v137 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v159 = (char *)&v134 - v25;
  __chkstk_darwin(v24);
  v148 = (char *)&v134 - v26;
  uint64_t v27 = sub_145290();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  v134 = (char *)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v32 = (char *)&v134 - v31;
  *(void *)(v4 + 56) = 0;
  swift_unknownObjectWeakInit();
  v33 = *(void (**)(void))(v28 + 56);
  uint64_t v147 = v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uuid;
  v33();
  v34 = (void *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_didChange);
  void *v34 = nullsub_1;
  v34[1] = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_cancelable) = 0;
  uint64_t v35 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_changeEventPublisher;
  uint64_t v139 = sub_A314(&qword_19B078);
  swift_allocObject();
  *(void *)(v4 + v35) = sub_1458E0();
  uint64_t v153 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title;
  *(void *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_textChanged) = 0;
  uint64_t v154 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text;
  *(void *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text) = 0;
  uint64_t v152 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_prompts;
  *(void *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_prompts) = 0;
  uint64_t v149 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_dateSource;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_dateSource) = 5;
  uint64_t v155 = v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleId;
  v167 = v33;
  uint64_t v168 = v28 + 56;
  v33();
  v36 = *(void (**)(void))(v17 + 56);
  uint64_t v156 = v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleDate;
  v36();
  uint64_t v158 = v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleEndDate;
  v36();
  *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assets) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsWithSlimAsset) = _swiftEmptyArrayStorage;
  uint64_t v37 = v16;
  v157 = v36;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalUpdatedDate, 1, 1, v16);
  sub_145280();
  uint64_t v136 = v28;
  v40 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v38 = (char *)(v28 + 32);
  v39 = v40;
  v135 = v32;
  uint64_t v41 = v27;
  v40((char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uniqueID), v32, v27);
  *(unsigned char *)(v5 + 16) = v166;
  id v42 = v162;
  id v43 = [v162 objectID];
  *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id) = v43;
  *(unsigned char *)(v5 + 40) = v164;
  id v44 = v163;
  *(void *)(v5 + 24) = v163;
  *(void *)(v5 + 32) = v42;
  id v163 = v44;
  id v162 = v42;
  id v45 = [v162 id];
  if (v45)
  {
    v46 = v45;
    v47 = v148;
    sub_145270();

    uint64_t v48 = 0;
    uint64_t v49 = (uint64_t)v47;
  }
  else
  {
    uint64_t v49 = (uint64_t)v148;
    uint64_t v48 = 1;
  }
  v138 = v39;
  v148 = v38;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v49, v48, 1, v41);
  uint64_t v50 = v147;
  swift_beginAccess();
  sub_121E0(v49, v50, &qword_19B730);
  swift_endAccess();
  id v51 = [*(id *)(v5 + 32) entryDate];
  if (v51)
  {
    v52 = v51;
    v53 = v165;
    sub_1451E0();

    v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v55 = (uint64_t)v151;
    uint64_t v56 = v37;
    v54(v151, v53, v37);
    uint64_t v57 = v37;
    v58 = v157;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v157)(v55, 0, 1, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v55, 1, v56) != 1)
    {
      v59 = v150;
      v54(v150, (unsigned char *)v55, v56);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v55 = (uint64_t)v151;
    uint64_t v56 = v37;
    uint64_t v60 = v37;
    v58 = v157;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v157)(v151, 1, 1, v60);
  }
  v59 = v150;
  sub_145220();
  sub_1248C(v55, &qword_19C150);
  v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
LABEL_9:
  v54((char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date), v59, v56);
  id v61 = [*(id *)(v5 + 32) dateSource];
  if (v61)
  {
    v62 = v61;
    uint64_t v63 = sub_145BC0();
    v65 = v64;
  }
  else
  {
    uint64_t v63 = 0;
    v65 = (void *)0xE000000000000000;
  }
  char v66 = sub_B9D8(v63, v65);
  *(unsigned char *)(v5 + v149) = v66;
  id v67 = *(id *)(v5 + 32);
  v68 = v165;
  sub_648E0(v165);

  v54((char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_displayDate), v68, v56);
  v69 = *(void **)(v5 + 32);
  unsigned __int8 v70 = [v69 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked) = v70;
  id v71 = [v69 prompt];
  if (v71)
  {
    uint64_t v72 = sub_144FA0();
    unint64_t v74 = v73;

    id v71 = sub_9C5C(v72, v74);
    sub_C52C(v72, v74);
  }
  uint64_t v75 = (uint64_t)v160;
  v76 = *(void **)(v5 + v152);
  *(void *)(v5 + v152) = v71;

  id v77 = [*(id *)(v5 + 32) title];
  if (v77)
  {
    uint64_t v78 = sub_144FA0();
    unint64_t v80 = v79;

    id v77 = sub_9C5C(v78, v80);
    sub_C52C(v78, v80);
  }
  v81 = *(void **)(v5 + v153);
  *(void *)(v5 + v153) = v77;

  id v82 = [*(id *)(v5 + 32) text];
  if (v82)
  {
    uint64_t v83 = sub_144FA0();
    unint64_t v85 = v84;

    id v82 = sub_9C5C(v83, v85);
    sub_C52C(v83, v85);
  }
  uint64_t v86 = (uint64_t)v161;
  uint64_t v87 = (uint64_t)v159;
  v88 = *(void **)(v5 + v154);
  *(void *)(v5 + v154) = v82;

  v89 = *(void **)(v5 + 32);
  unsigned __int8 v90 = [v89 showTitle];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showTitle) = v90;
  id v91 = [v89 bundleId];
  if (v91)
  {
    v92 = v91;
    sub_145270();

    uint64_t v93 = 0;
  }
  else
  {
    uint64_t v93 = 1;
  }
  uint64_t v94 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v87, v93, 1, v41);
  uint64_t v95 = v155;
  swift_beginAccess();
  sub_121E0(v87, v95, &qword_19B730);
  swift_endAccess();
  id v96 = [*(id *)(v5 + 32) bundleDate];
  if (v96)
  {
    v97 = v96;
    sub_1451E0();

    uint64_t v94 = 0;
  }
  uint64_t v98 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v75, v94, 1, v56);
  uint64_t v99 = v156;
  swift_beginAccess();
  sub_121E0(v75, v99, &qword_19C150);
  swift_endAccess();
  id v100 = [*(id *)(v5 + 32) bundleEndDate];
  if (v100)
  {
    v101 = v100;
    sub_1451E0();

    uint64_t v98 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v86, v98, 1, v56);
  uint64_t v102 = v158;
  swift_beginAccess();
  sub_121E0(v86, v102, &qword_19C150);
  swift_endAccess();
  v103 = *(void **)(v5 + 32);
  unsigned __int8 v104 = [v103 showPhotoMemoryBanner];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showPhotoMemoryBanner) = v104;
  unsigned __int8 v105 = [v103 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalBookmarkFromEntryMO) = v105;
  sub_4FF0C();
  if (v166)
  {
    if (v164) {
      [v103 setIsDraft:1];
    }
    id v106 = [v103 id];
    v107 = v138;
    if (v106)
    {
      v108 = v106;
      v109 = v135;
      sub_145270();

      uint64_t v110 = (uint64_t)v137;
      v107(v137, v109, v41);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v167)(v110, 0, 1, v41);
      uint64_t v111 = v136;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v110, 1, v41) != 1)
      {
        v112 = v134;
        v107(v134, (char *)v110, v41);
        uint64_t v113 = sub_145240();
        sub_89478(v113, v114);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v41);
LABEL_38:
        id v124 = [self defaultCenter];
        [v124 addObserver:v5 selector:"contextObjectsDidChangeWithNotification:" name:NSManagedObjectContextObjectsDidChangeNotification object:*(void *)(v5 + 24)];

        uint64_t v170 = *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_changeEventPublisher);
        sub_A314(&qword_19BC68);
        v125 = v140;
        sub_C84C(0, (unint64_t *)&qword_19BC70);
        swift_retain();
        uint64_t *v125 = sub_146320();
        sub_1462F0();
        uint64_t v126 = v141;
        uint64_t v127 = v142;
        (*(void (**)(uint64_t *, void, uint64_t))(v141 + 104))(v125, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v142);
        uint64_t v128 = sub_1462E0();
        uint64_t v129 = (uint64_t)v143;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v143, 1, 1, v128);
        sub_122D8(&qword_19BC78, &qword_19B078);
        sub_1228C(&qword_19BC80, (unint64_t *)&qword_19BC70);
        v130 = v144;
        sub_1458F0();
        sub_1248C(v129, &qword_19BC50);
        (*(void (**)(uint64_t *, uint64_t))(v126 + 8))(v125, v127);
        swift_release();
        swift_allocObject();
        swift_weakInit();
        sub_122D8(&qword_19BC88, &qword_19BC60);
        uint64_t v131 = v146;
        uint64_t v132 = sub_145900();

        swift_release();
        (*(void (**)(char *, uint64_t))(v145 + 8))(v130, v131);
        *(void *)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_cancelable) = v132;
        swift_release();
        return v5;
      }
    }
    else
    {
      uint64_t v110 = (uint64_t)v137;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v137, 1, 1, v41);
    }
    sub_1248C(v110, &qword_19B730);
    if (qword_19AC60 != -1) {
      swift_once();
    }
    uint64_t v115 = sub_145760();
    sub_C584(v115, (uint64_t)qword_19B718);
    swift_retain_n();
    v116 = sub_145740();
    os_log_type_t v117 = sub_1461F0();
    if (os_log_type_enabled(v116, v117))
    {
      v118 = (uint8_t *)swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      *(_DWORD *)v118 = 136315138;
      uint64_t v170 = v119;
      id v120 = [*(id *)(v5 + 32) debugDescription];
      uint64_t v121 = sub_145BC0();
      unint64_t v123 = v122;

      uint64_t v169 = sub_3D2B4(v121, v123, &v170);
      sub_146610();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_94138, v116, v117, "Error getting entry id for in-progress register %s", v118, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_38;
  }

  return v5;
}

uint64_t sub_FA18(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = &_swiftEmptySetSingleton;
    uint64_t v10 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v1 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v5; ++i)
      {
        uint64_t v7 = swift_bridgeObjectRetain();
        sub_FB58(v7);
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = v10;
    }
    if (v4[2])
    {
      uint64_t v8 = sub_145F30();
      __chkstk_darwin(v8);
      v9[2] = v3;
      v9[3] = v4;
      sub_FCB4((uint64_t)sub_1231C, (uint64_t)v9);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_FB58(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_E985C(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_FCB4(uint64_t a1, uint64_t a2)
{
  sub_145F20();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_1235C();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_1467D0(66);
    v8._object = (void *)0x800000000014A650;
    v8._countAndFlagsBits = 0xD00000000000003FLL;
    sub_145C90(v8);
    v9._countAndFlagsBits = sub_146D70();
    sub_145C90(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    sub_145C90(v10);
    uint64_t result = sub_146910();
    __break(1u);
  }
  return result;
}

uint64_t Journaling.EntryViewModel.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_118B0(v0 + 48);
  sub_1248C(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uuid, &qword_19B730);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uniqueID;
  uint64_t v3 = sub_145290();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
  uint64_t v5 = sub_145230();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_displayDate, v5);
  sub_1248C(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleId, &qword_19B730);
  sub_1248C(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleDate, &qword_19C150);
  sub_1248C(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bundleEndDate, &qword_19C150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1248C(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalUpdatedDate, &qword_19C150);
  return v0;
}

uint64_t Journaling.EntryViewModel.__deallocating_deinit()
{
  Journaling.EntryViewModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100DC(uint64_t a1)
{
  if (sub_369C4(1, a1) & 1) != 0 || (sub_369C4(4, a1))
  {
    swift_bridgeObjectRetain();
    sub_4FF0C();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if ((sub_369C4(0, a1) & 1) != 0 && (sub_104BC() & 1) == 0) {
    sub_10E3C(0);
  }
  uint64_t v3 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_didChange);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    int64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v7(v1, a1, ObjectType, v5);
    swift_bridgeObjectRelease_n();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_1024C()
{
  uint64_t v0 = sub_144A80();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = Strong;
  unint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
  if (!v6)
  {
LABEL_9:
    [*(id *)(v5 + 32) setTitle:0];
    sub_10B2C();
    swift_release();
    return;
  }
  id v7 = v6;
  id v8 = [v7 string];
  uint64_t v9 = sub_145BC0();
  uint64_t v11 = v10;

  v22[1] = v9;
  v22[2] = v11;
  sub_144A60();
  sub_12060();
  uint64_t v12 = sub_146640();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {

    goto LABEL_9;
  }
  id v16 = *(id *)(v5 + 32);
  uint64_t v17 = sub_9424();
  if (v18 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v20 = v17;
    unint64_t v21 = v18;
    Class isa = sub_144F90().super.isa;
    sub_120B4(v20, v21);
  }
  [v16 setTitle:isa];

  sub_10B2C();
  swift_release();
}

uint64_t sub_10478(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_104BC()
{
  uint64_t v1 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_textChanged;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_textChanged)) {
    return 0;
  }
  uint64_t v3 = v0;
  sub_A314(&qword_19BC90);
  sub_1463C0();
  uint64_t v4 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text);
  id v6 = v5;
  id v7 = (void *)sub_2A388(0, v5, 0, 0.0);

  id v8 = 0;
  if (v15 >> 60 != 15)
  {
    sub_C4D4(v14, v15);
    id v8 = sub_9C5C(v14, v15);
    sub_120B4(v14, v15);
  }
  uint64_t v9 = (void *)sub_2A388(0, v8, 0, 0.0);

  if (v9)
  {
    if (v7)
    {
      sub_C84C(0, &qword_19B1B8);
      id v10 = v7;
      id v11 = v9;
      char v12 = sub_1464B0();

      if (v12)
      {

LABEL_10:
        sub_120B4(v14, v15);
        return 0;
      }
    }
    else
    {
      id v11 = v9;
    }
    if (*(void *)(v3 + v4))
    {
      if ((objc_msgSend(v11, "isEqualToAttributedString:") & 1) == 0) {
        *(unsigned char *)(v3 + v1) = 1;
      }
    }
  }
  else if (!v7)
  {
    goto LABEL_10;
  }
  unint64_t v13 = *(void **)(v3 + v4);
  *(void *)(v3 + v4) = v9;

  sub_120B4(v14, v15);
  *(unsigned char *)(v3 + v1) = 0;
  return 1;
}

void sub_10698(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*(id *)(a1 + 32) text];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_144FA0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_10710(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text);
  id v4 = v3;
  uint64_t v5 = (void *)sub_2A388(0, v3, 0, 0.0);

  unint64_t v6 = (void *)sub_2A388(0, a1, 0, 0.0);
  unint64_t v7 = v6;
  if (!v5)
  {
    if (!v6)
    {
      char v10 = 0;
      return v10 & 1;
    }

    goto LABEL_7;
  }
  if (!v6)
  {

LABEL_7:
    char v10 = 1;
    return v10 & 1;
  }
  sub_C84C(0, &qword_19B1B8);
  id v8 = v5;
  char v9 = sub_1464B0();

  char v10 = v9 ^ 1;
  return v10 & 1;
}

uint64_t sub_107F0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    Class isa = *(Class *)(result + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_prompts);
    if (isa)
    {
      id v3 = v1;
      id v4 = isa;
      uint64_t v5 = sub_9424();
      unint64_t v7 = v6;

      if (v7 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = sub_144F90().super.isa;
        sub_120B4(v5, v7);
      }
    }
    else
    {
      id v8 = v1;
    }
    [v1 setPrompt:isa];

    sub_10B2C();
    return swift_release();
  }
  return result;
}

uint64_t sub_108E0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) setFlagged:*(unsigned __int8 *)(result + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked)];
    sub_10B2C();
    uint64_t v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_didChange);
    uint64_t v3 = swift_retain();
    v2(v3);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10988(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked) = result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_123EC;
    *(void *)(v5 + 24) = v4;
    void v7[4] = sub_12404;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_12C4B8;
    v7[3] = &unk_185AE8;
    unint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
    [v3 performBlockAndWait:v6];
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      v7[0] = sub_261D4((uint64_t)&off_1844D8);
      sub_1458D0();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_10B2C()
{
  uint64_t v1 = sub_145230();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_A314(&qword_19C150);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = &v21[-v10];
  __chkstk_darwin(v9);
  unint64_t v13 = &v21[-v12];
  uint64_t v14 = *(void **)(v0 + 32);
  [v14 setIsUploadedToCloud:0];
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    uint64_t v15 = v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalUpdatedDate;
    swift_beginAccess();
    sub_12428(v15, (uint64_t)v13, &qword_19C150);
    int v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1);
    sub_1248C((uint64_t)v13, &qword_19C150);
    if (v16 == 1)
    {
      id v17 = [v14 updatedDate];
      if (v17)
      {
        unint64_t v18 = v17;
        sub_1451E0();

        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 1;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, v19, 1, v1);
      sub_12384((uint64_t)v11, (uint64_t)v8);
      swift_beginAccess();
      sub_121E0((uint64_t)v8, v15, &qword_19C150);
      swift_endAccess();
    }
  }
  sub_1451F0();
  Class isa = sub_145180().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  [v14 setUpdatedDate:isa];
}

uint64_t sub_10DD8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Journaling.EntryViewModel();
  uint64_t result = sub_1458C0();
  *a1 = result;
  return result;
}

id sub_10E18@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id);
  *a1 = v2;
  return v2;
}

uint64_t sub_10E30(uint64_t *a1, uint64_t *a2)
{
  return _s15JournalSettings10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_10E3C(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  sub_146C80();
  sub_146C90(a1);
  Swift::Int v4 = sub_146CD0();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 11;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 11;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_F0500();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_10F60(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_10F60(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1466D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        sub_146C80();
        sub_146C90(v10);
        unint64_t v11 = sub_146CD0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t _s15JournalSettings10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = sub_145230();
  uint64_t v67 = *(void *)(v64 - 8);
  uint64_t v4 = __chkstk_darwin(v64);
  char v66 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v65 = (char *)&v64 - v6;
  uint64_t v7 = sub_145290();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v68 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_A314(&qword_19BC98);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_A314(&qword_19B730);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v64 - v18;
  uint64_t v69 = a1;
  uint64_t v20 = a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_12428(v20, (uint64_t)v19, &qword_19B730);
  uint64_t v70 = a2;
  uint64_t v21 = a2 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  uint64_t v22 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_12428((uint64_t)v19, (uint64_t)v13, &qword_19B730);
  sub_12428(v21, v22, &qword_19B730);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v13, 1, v7) != 1)
  {
    sub_12428((uint64_t)v13, (uint64_t)v17, &qword_19B730);
    if (v23(v22, 1, v7) != 1)
    {
      uint64_t v24 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v68, v22, v7);
      sub_124E8();
      char v25 = sub_145AD0();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
      v26(v24, v7);
      sub_1248C((uint64_t)v19, &qword_19B730);
      v26(v17, v7);
      sub_1248C((uint64_t)v13, &qword_19B730);
      if ((v25 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_1248C((uint64_t)v19, &qword_19B730);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
LABEL_6:
    sub_1248C((uint64_t)v13, &qword_19BC98);
    goto LABEL_15;
  }
  sub_1248C((uint64_t)v19, &qword_19B730);
  if (v23(v22, 1, v7) != 1) {
    goto LABEL_6;
  }
  sub_1248C((uint64_t)v13, &qword_19B730);
LABEL_8:
  sub_C84C(0, (unint64_t *)&qword_19EAE0);
  uint64_t v28 = v69;
  uint64_t v27 = v70;
  if (sub_1464B0())
  {
    uint64_t v29 = *(void **)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
    uint64_t v30 = *(void **)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
    if (v29)
    {
      v32 = v66;
      uint64_t v31 = v67;
      v33 = v65;
      if (!v30) {
        goto LABEL_15;
      }
      sub_C84C(0, &qword_19B1B8);
      id v34 = v30;
      id v35 = v29;
      char v36 = sub_1464B0();

      if ((v36 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      v32 = v66;
      uint64_t v31 = v67;
      v33 = v65;
      if (v30) {
        goto LABEL_15;
      }
    }
    if (*(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showTitle) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showTitle))
    {
      v39 = *(void **)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text);
      v40 = *(void **)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text);
      if (v39)
      {
        if (!v40) {
          goto LABEL_15;
        }
        sub_C84C(0, &qword_19B1B8);
        id v41 = v40;
        id v42 = v39;
        char v43 = sub_1464B0();

        if ((v43 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v40)
      {
        goto LABEL_15;
      }
      id v44 = *(void **)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_prompts);
      id v45 = *(void **)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_prompts);
      if (v44)
      {
        if (!v45) {
          goto LABEL_15;
        }
        sub_C84C(0, &qword_19B1B8);
        id v46 = v45;
        id v47 = v44;
        char v48 = sub_1464B0();

        if ((v48 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v45)
      {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v28
                              + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showPhotoMemoryBanner) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showPhotoMemoryBanner))
      {
        uint64_t v49 = OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll;
        unint64_t v50 = *(void *)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll);
        uint64_t v51 = *(void *)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v52 = sub_4CC34(v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v52)
        {
          v68 = (char *)v49;
          uint64_t v53 = v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
          swift_beginAccess();
          v54 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
          uint64_t v55 = v53;
          uint64_t v56 = v64;
          v54(v33, v55, v64);
          uint64_t v57 = v56;
          uint64_t v58 = v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
          swift_beginAccess();
          v54(v32, v58, v57);
          LOBYTE(v58) = sub_1451D0();
          v59 = v33;
          uint64_t v60 = *(void (**)(char *, uint64_t))(v31 + 8);
          v60(v32, v57);
          v60(v59, v57);
          if (v58)
          {
            v54(v59, v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_displayDate, v57);
            v54(v32, v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_displayDate, v57);
            char v61 = sub_1451D0();
            v60(v32, v57);
            v60(v59, v57);
            if ((v61 & 1) != 0
              && *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_bookmarked)
              && *(unsigned __int8 *)(v28
                                    + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalBookmarkFromEntryMO) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_originalBookmarkFromEntryMO))
            {
              unint64_t v62 = *(void *)&v68[v28];
              uint64_t v63 = *(void *)&v68[v27];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unsigned __int8 v37 = sub_4CC34(v62, v63);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v37 & 1;
            }
          }
        }
      }
    }
  }
LABEL_15:
  unsigned __int8 v37 = 0;
  return v37 & 1;
}

uint64_t sub_118B0(uint64_t a1)
{
  return a1;
}

void *sub_118D8()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_118E4()
{
  return sub_1228C((unint64_t *)&qword_19B748, &qword_19B750);
}

uint64_t type metadata accessor for EntryCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_1194C()
{
  return type metadata accessor for Journaling.EntryViewModel();
}

uint64_t type metadata accessor for Journaling.EntryViewModel()
{
  uint64_t result = qword_19B820;
  if (!qword_19B820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_119A0()
{
  sub_11BA8(319, (unint64_t *)&qword_19B830, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_145290();
    if (v1 <= 0x3F)
    {
      sub_145230();
      if (v2 <= 0x3F)
      {
        sub_11BA8(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_11BA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s14EntryViewModelC4ModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EntryViewModelC4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11D58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_11D80(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *_s14EntryViewModelC4ModeOMa()
{
  return &_s14EntryViewModelC4ModeON;
}

uint64_t _s14EntryViewModelC15EntryPropertiesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EntryViewModelC15EntryPropertiesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x11EF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC15EntryPropertiesOMa()
{
  return &_s14EntryViewModelC15EntryPropertiesON;
}

unint64_t sub_11F34()
{
  unint64_t result = qword_19BC40;
  if (!qword_19BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BC40);
  }
  return result;
}

unint64_t sub_11F8C()
{
  unint64_t result = qword_19BC48;
  if (!qword_19BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BC48);
  }
  return result;
}

void sub_11FE0(void *a1)
{
}

uint64_t sub_12008()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_12040()
{
}

uint64_t sub_12048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_12058()
{
  return swift_release();
}

unint64_t sub_12060()
{
  unint64_t result = qword_19EAF0;
  if (!qword_19EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EAF0);
  }
  return result;
}

uint64_t sub_120B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_C52C(a1, a2);
  }
  return a1;
}

void sub_120C8(void *a1)
{
}

void sub_120F0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = *(void **)(v4 + *a2);
  *(void *)(v4 + *a2) = a1;
  id v8 = a1;

  uint64_t v9 = *(void **)(v4 + 24);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10478;
  v12[3] = a4;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [v9 performBlock:v11];
  _Block_release(v11);
}

uint64_t sub_121D8()
{
  return sub_107F0();
}

uint64_t sub_121E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_A314(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_12244(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1228C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_C84C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_122D0(uint64_t *a1)
{
  return sub_FA18(a1);
}

uint64_t sub_122D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1231C()
{
  return sub_100DC(*(void *)(v0 + 24));
}

uint64_t sub_1234C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1235C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_12384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_123EC()
{
  return sub_108E0();
}

uint64_t sub_123F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_12404()
{
  return sub_12C490(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1240C(uint64_t *a1@<X8>)
{
  sub_10698(v1, a1);
}

uint64_t sub_12428(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_A314(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1248C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_A314(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_124E8()
{
  unint64_t result = qword_19BCA0;
  if (!qword_19BCA0)
  {
    sub_145290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BCA0);
  }
  return result;
}

id sub_12550()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ExportManager()) init];
  qword_1A39F8 = (uint64_t)result;
  return result;
}

uint64_t sub_12584()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ExportOptions();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314((uint64_t *)&unk_1A1B70);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportOptions;
  swift_beginAccess();
  sub_129E4(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_12A4C((uint64_t)v8);
  }
  else
  {
    sub_12AAC((uint64_t)v8, (uint64_t)v5);
    sub_12A4C((uint64_t)v8);
    sub_E1F44();
    sub_12B10((uint64_t)v5);
  }
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController);
  *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings13ExportManager_progressAlertController) = 0;

  swift_unknownObjectWeakAssign();
  *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings13ExportManager_currentExportTask) = 0;
  return swift_release();
}

id sub_127EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExportManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_12890()
{
  return type metadata accessor for ExportManager();
}

uint64_t type metadata accessor for ExportManager()
{
  uint64_t result = qword_19BCD8;
  if (!qword_19BCD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_128E4()
{
  sub_1298C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1298C()
{
  if (!qword_19BCE8)
  {
    type metadata accessor for ExportOptions();
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19BCE8);
    }
  }
}

uint64_t sub_129E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314((uint64_t *)&unk_1A1B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_12A4C(uint64_t a1)
{
  uint64_t v2 = sub_A314((uint64_t *)&unk_1A1B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_12B10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12B70()
{
  sub_1465C0();
  uint64_t result = sub_1465C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s8MetadataC5InputOMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_12C60()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19BCF0);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19BCF0);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_12D28(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_12D68(a1);
  return v2;
}

uint64_t sub_12D68(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v4 = sub_1465C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_OWORD *)(v1 + *(void *)(*(void *)v1 + 112)) = xmmword_159810;
  uint64_t v5 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v6 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

uint64_t sub_12EB0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_1465C0();
  uint64_t v2 = sub_1465C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_14590(*(void *)(v0 + *(void *)(*(void *)v0 + 112)), *(void *)(v0 + *(void *)(*(void *)v0 + 112) + 8));
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_12FEC()
{
  sub_12EB0();

  return swift_deallocClassInstance();
}

uint64_t _s8MetadataCMa()
{
  return sub_145A4();
}

uint64_t _s8MetadataC5InputOMa()
{
  return sub_145A4();
}

uint64_t sub_13074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1307C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_13114(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *((void *)a2 + 1);
      sub_C4D4(*(void *)a2, v15);
      *uint64_t v3 = v14;
      v3[1] = v15;
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_132A0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return sub_C52C(*(void *)a1, *((void *)a1 + 1));
  }
}

void *sub_133A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    unint64_t v12 = *((void *)a2 + 1);
    sub_C4D4(*(void *)a2, v12);
    char v10 = 0;
    *a1 = v11;
    a1[1] = v12;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_134F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_C52C(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v20 = *(void *)a2;
      unint64_t v19 = *((void *)a2 + 1);
      sub_C4D4(v20, v19);
      char v18 = 0;
      *(void *)a1 = v20;
      *((void *)a1 + 1) = v19;
    }
    a1[v7] = v18;
  }
  return a1;
}

_OWORD *sub_13714(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1384C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_C52C(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_13A64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_13B98(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x13D60);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_13D88(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_13E40(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

BOOL sub_13F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v2) {
    swift_release();
  }
  return v2 == 0;
}

uint64_t sub_13F60(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = (void *)(*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v2)))();
  if (v5)
  {
    unsigned int v6 = v5;
    id v7 = [v5 assetMetaData];

    if (v7)
    {
      uint64_t v9 = sub_144FA0();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    uint64_t v16 = v9;
    unint64_t v17 = v11;
    __chkstk_darwin(v8);
    v15[2] = a1;
    v15[3] = a2;
    sub_A314(&qword_19BC90);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v12 = _s8MetadataCMa();
    sub_142C8((void (*)(char *, char *))sub_14570, (uint64_t)v15, (uint64_t)&type metadata for Never, v12, v13, (uint64_t)&v18);
    sub_120B4(v16, v17);
    unsigned int v5 = v18;
  }
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 40))(v5, a1, a2);
}

uint64_t sub_14158@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s8MetadataC5InputOMa();
  __chkstk_darwin(v4);
  unsigned int v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  _s8MetadataCMa();
  *unsigned int v6 = v8;
  v6[1] = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = swift_allocObject();
  sub_12D68((uint64_t)v6);
  *a2 = v9;
  return sub_C4D4(v8, v7);
}

uint64_t sub_142C8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  char v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_14570@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_14158(a1, a2);
}

uint64_t sub_14590(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_120B4(a1, a2);
  }
  return a1;
}

uint64_t sub_145A4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_145D4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19BE08);
  sub_C584(v0, (uint64_t)qword_19BE08);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_146D8(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1463D0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_145F30();
  v2[8] = sub_145F20();
  uint64_t v5 = sub_145EB0();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_147CC, v5, v4);
}

uint64_t sub_147CC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_task_dealloc();
    id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v2(v1);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 40);
    id v7 = [*(id *)(v0 + 32) newBackgroundContext];
    *(void *)(v0 + 88) = v7;
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 96) = v8;
    *(void *)(v8 + 16) = v7;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    v7;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v9;
    uint64_t v10 = sub_A314(&qword_19BE80);
    *uint64_t v9 = v0;
    v9[1] = sub_14974;
    uint64_t v11 = *(void *)(v0 + 56);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 16, v11, sub_1D090, v8, v10);
  }
}

uint64_t sub_14974()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_14B14, v6, v5);
}

uint64_t sub_14B14()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_14B90@<X0>(double **a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19BE88);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144AB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  unint64_t v7 = sub_28B50((uint64_t)v5);
  sub_1D0AC((uint64_t)v5);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
    if (v8) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_14:
    *a1 = v14;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_146930();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1468B0();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = a1;
    uint64_t v16 = v1;
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)sub_146810();
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, "managedObjectContext", v15, v16);
      if (!v13) {
        id v13 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      ++v10;
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      sub_E800(v12, 0, 0, v13);
      sub_146890();
      sub_1468C0();
      sub_1468D0();
      sub_1468A0();
    }
    while (v8 != v10);
    uint64_t v14 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v15;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_14DE8(double a1)
{
  if (qword_19AC78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_145760();
  sub_C584(v2, (uint64_t)qword_19BE08);
  oslog = sub_145740();
  os_log_type_t v3 = sub_1461E0();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_A314(&qword_1A0A00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = sub_145BD0();
    sub_3D2B4(v7, v8, &v10);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, oslog, v3, "ExportManager.export executed in %ss", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_14FEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  v64._object = a3;
  v65 = a5;
  uint64_t v63 = a1;
  v64._countAndFlagsBits = a2;
  uint64_t v5 = sub_144A80();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  v59 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v55 - v9;
  __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v55 - v10;
  uint64_t v57 = sub_A314(&qword_19BE50);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_145170();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v55 - v23;
  uint64_t v25 = sub_145230();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v63 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v29, v25);
  sub_144980();
  sub_145150();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v16, v12);
  sub_145160();
  v30(v19, v12);
  sub_145140();
  v30(v22, v12);
  sub_1D008((unint64_t *)&qword_19BE58, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
  sub_145210();
  v30(v24, v12);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v31 = *(void **)(v63 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
  if (v31)
  {
    id v32 = [v31 string];
    uint64_t v33 = sub_145BC0();
    unint64_t v35 = v34;

    uint64_t v36 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0) {
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
    }
    if (v36)
    {
      v66._countAndFlagsBits = v33;
      v66._object = (void *)v35;
      unsigned __int8 v37 = v55;
      sub_1455E0();
      uint64_t v69 = (_UNKNOWN **)(&stru_20 + 63);
      unint64_t v70 = 0xE100000000000000;
      sub_1CF60();
      sub_1CFB4();
      sub_122D8((unint64_t *)&qword_1A0A30, &qword_19BE50);
      uint64_t v38 = v57;
      sub_146100();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      Swift::String v66 = v68;
      v39 = v58;
      sub_144A60();
      uint64_t v69 = &off_184550;
      sub_1D008(&qword_19BE68, (void (*)(uint64_t))&type metadata accessor for CharacterSet);
      sub_A314(&qword_19BE70);
      sub_122D8(&qword_19BE78, &qword_19BE70);
      v40 = v59;
      uint64_t v41 = v62;
      sub_1466C0();
      id v42 = v60;
      sub_144A70();
      char v43 = *(void (**)(char *, uint64_t))(v61 + 8);
      v43(v40, v41);
      v43(v39, v41);
      sub_12060();
      sub_146640();
      v43(v42, v41);
      swift_bridgeObjectRelease();
      sub_15C94(200);
      swift_bridgeObjectRelease();
      v68._countAndFlagsBits = 95;
      v68._object = (void *)0xE100000000000000;
      v73._countAndFlagsBits = sub_145C40();
      sub_145C90(v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_145C90(v68);
    }
    swift_bridgeObjectRelease();
  }
  id v45 = v71;
  unint64_t v44 = v72;
  id v46 = v65;
  swift_beginAccess();
  uint64_t v69 = v45;
  unint64_t v70 = v44;
  swift_bridgeObjectRetain();
  v66._countAndFlagsBits = 46;
  v66._object = (void *)0xE100000000000000;
  sub_145C90(v64);
  sub_145C90(v66);
  swift_bridgeObjectRelease();
  uint64_t v47 = *v46;
  uint64_t v49 = (uint64_t)v69;
  uint64_t v48 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v50 = sub_3706C(v49, v48, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50)
  {
    swift_bridgeObjectRelease();
    for (Swift::Int i = 1; ; ++i)
    {
      uint64_t v69 = v45;
      unint64_t v70 = v44;
      v66._countAndFlagsBits = 10335;
      v66._object = (void *)0xE200000000000000;
      Swift::Int v67 = i;
      swift_bridgeObjectRetain();
      v74._countAndFlagsBits = sub_146B50();
      sub_145C90(v74);
      swift_bridgeObjectRelease();
      v75._countAndFlagsBits = 41;
      v75._object = (void *)0xE100000000000000;
      sub_145C90(v75);
      sub_145C90(v66);
      swift_bridgeObjectRelease();
      v66._countAndFlagsBits = 46;
      v66._object = (void *)0xE100000000000000;
      sub_145C90(v64);
      sub_145C90(v66);
      swift_bridgeObjectRelease();
      uint64_t v52 = *v65;
      uint64_t v49 = (uint64_t)v69;
      uint64_t v48 = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v53 = sub_3706C(v49, v48, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFADD__(i, 1))
      {
        __break(1u);
        return result;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_EA098(&v67, v49, v48);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_158FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_10D454();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v10;
  uint64_t v63 = v9;
  uint64_t v14 = (void *)*a5;
  unint64_t v16 = sub_137A88(v7, v8);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      uint64_t v23 = (void *)*a5;
      if (v15) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_13D844();
      uint64_t v23 = (void *)*a5;
      if (v20) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v23[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v28 = (uint64_t *)(v23[6] + 16 * v16);
    *uint64_t v28 = v11;
    v28[1] = v12;
    uint64_t v29 = (void *)(v23[7] + 16 * v16);
    *uint64_t v29 = v63;
    v29[1] = v13;
    uint64_t v30 = v23[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v23[2] = v32;
LABEL_13:
    uint64_t v33 = sub_10D454();
    if (v34)
    {
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      uint64_t v39 = v35;
      uint64_t v40 = v36;
      do
      {
        uint64_t v49 = (void *)*a5;
        unint64_t v50 = sub_137A88(v37, v38);
        uint64_t v52 = v49[2];
        BOOL v53 = (v51 & 1) == 0;
        BOOL v31 = __OFADD__(v52, v53);
        uint64_t v54 = v52 + v53;
        if (v31) {
          goto LABEL_24;
        }
        char v55 = v51;
        if (v49[3] < v54)
        {
          sub_13A4B4(v54, 1);
          unint64_t v50 = sub_137A88(v37, v38);
          if ((v55 & 1) != (v56 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v57 = (void *)*a5;
        if (v55)
        {
          uint64_t v41 = 16 * v50;
          id v42 = (uint64_t *)(v57[7] + 16 * v50);
          uint64_t v44 = *v42;
          uint64_t v43 = v42[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v45 = (void *)(v57[7] + v41);
          swift_bridgeObjectRelease();
          *id v45 = v44;
          v45[1] = v43;
        }
        else
        {
          v57[(v50 >> 6) + 8] |= 1 << v50;
          uint64_t v58 = (uint64_t *)(v57[6] + 16 * v50);
          *uint64_t v58 = v37;
          v58[1] = v38;
          v59 = (void *)(v57[7] + 16 * v50);
          void *v59 = v39;
          v59[1] = v40;
          uint64_t v60 = v57[2];
          BOOL v31 = __OFADD__(v60, 1);
          uint64_t v61 = v60 + 1;
          if (v31) {
            goto LABEL_25;
          }
          v57[2] = v61;
        }
        uint64_t v37 = sub_10D454();
        uint64_t v38 = v46;
        uint64_t v39 = v47;
        uint64_t v40 = v48;
      }
      while (v46);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D050();
    return swift_release();
  }
  sub_13A4B4(v19, a4 & 1);
  unint64_t v21 = sub_137A88(v11, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    uint64_t v23 = (void *)*a5;
    if ((v20 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v24 = (uint64_t *)(v23[7] + 16 * v16);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)(v23[7] + 16 * v16);
    swift_bridgeObjectRelease();
    void *v27 = v26;
    v27[1] = v25;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_146C20();
  __break(1u);
  return result;
}

uint64_t sub_15C4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_15C94(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_145C80();
    return sub_145D20();
  }
  return result;
}

uint64_t sub_15D30(uint64_t a1, uint64_t a2)
{
  v2[49] = a1;
  v2[50] = a2;
  uint64_t v3 = sub_145BF0();
  v2[51] = v3;
  v2[52] = *(void *)(v3 - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  uint64_t v4 = sub_144E20();
  v2[56] = v4;
  v2[57] = *(void *)(v4 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v5 = sub_144F60();
  v2[59] = v5;
  v2[60] = *(void *)(v5 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  sub_1452C0();
  v2[70] = swift_task_alloc();
  sub_145B50();
  v2[71] = swift_task_alloc();
  sub_145B30();
  v2[72] = swift_task_alloc();
  uint64_t v6 = sub_145020();
  v2[73] = v6;
  v2[74] = *(void *)(v6 - 8);
  v2[75] = swift_task_alloc();
  uint64_t v7 = sub_145060();
  v2[76] = v7;
  v2[77] = *(void *)(v7 - 8);
  v2[78] = swift_task_alloc();
  uint64_t v8 = sub_145230();
  v2[79] = v8;
  v2[80] = *(void *)(v8 - 8);
  v2[81] = swift_task_alloc();
  sub_145F30();
  v2[82] = sub_145F20();
  uint64_t v10 = sub_145EB0();
  v2[83] = v10;
  v2[84] = v9;
  return _swift_task_switch(sub_160F8, v10, v9);
}

uint64_t sub_160F8()
{
  sub_144FF0();
  double v2 = v1;
  *(double *)(v0 + 680) = v1;
  sub_145F70();
  unint64_t v5 = *(void *)(v0 + 392);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_146930();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 688) = v40;
    if (v40) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    *(void *)(v0 + 688) = v6;
    if (v6)
    {
LABEL_7:
      unint64_t v50 = v5 >> 62;
      unint64_t v51 = v5;
      sub_E2978();
      if (qword_19B048 != -1) {
        swift_once();
      }
      uint64_t v7 = *(void *)(v0 + 648);
      uint64_t v8 = *(void *)(v0 + 640);
      uint64_t v9 = *(void *)(v0 + 624);
      uint64_t v10 = *(void *)(v0 + 616);
      uint64_t v48 = *(void *)(v0 + 608);
      uint64_t v49 = *(void *)(v0 + 632);
      uint64_t v11 = *(void *)(v0 + 600);
      uint64_t v12 = *(void *)(v0 + 592);
      uint64_t v47 = *(void *)(v0 + 584);
      v54._countAndFlagsBits = 0xD000000000000017;
      v13.super.Class isa = (Class)qword_1A3EB0;
      v46._countAndFlagsBits = 0x800000000014A7E0;
      v54._object = (void *)0x800000000014A7A0;
      v59._object = (void *)0x800000000014A7C0;
      v58.value._countAndFlagsBits = 0;
      v58.value._object = 0;
      v59._countAndFlagsBits = 0xD000000000000013;
      sub_144CC0(v54, v58, v13, v59, v46);
      *(void *)(v0 + 696) = sub_A314(&qword_1A0A00);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1578A0;
      sub_145220();
      sub_145030();
      sub_145000();
      uint64_t v15 = sub_145200();
      uint64_t v17 = v16;
      BOOL v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      *(void *)(v0 + 704) = v18;
      *(void *)(v0 + 712) = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v18(v11, v47);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      *(void *)(v0 + 720) = v19;
      *(void *)(v0 + 728) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v19(v9, v48);
      char v20 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      *(void *)(v0 + 736) = v20;
      *(void *)(v0 + 744) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v20(v7, v49);
      *(void *)(v14 + 56) = &type metadata for String;
      unint64_t v21 = sub_1CEB8();
      *(void *)(v0 + 752) = v21;
      *(void *)(v14 + 64) = v21;
      *(void *)(v14 + 32) = v15;
      *(void *)(v14 + 40) = v17;
      sub_145BD0();
      swift_bridgeObjectRelease();
      id v22 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v23 = sub_145B80();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 760) = [v22 initWithString:v23];

      if (v50)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_146930();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFFF8));
      }
      *(void *)(v0 + 768) = v24;
      uint64_t v25 = *(void *)(v0 + 400);
      uint64_t v26 = self;
      *(void *)(v0 + 776) = v26;
      id v27 = [v26 progressWithTotalUnitCount:v24];
      *(void *)(v0 + 784) = v27;
      uint64_t v28 = type metadata accessor for ExportOptions();
      *(void *)(v0 + 792) = v28;
      uint64_t v29 = *(int *)(v28 + 52);
      *(_DWORD *)(v0 + 1128) = v29;
      uint64_t v30 = *(void **)(v25 + v29);
      [v30 setTotalUnitCount:100];
      uint64_t v31 = *(int *)(v28 + 20);
      *(_DWORD *)(v0 + 1132) = v31;
      [v30 addChild:v27 withPendingUnitCount:qword_159998[*(char *)(v25 + v31)]];
      sub_145F70();
      *(void *)(v0 + 800) = [objc_allocWithZone((Class)NSMutableAttributedString) init];
      unint64_t v32 = sub_136D6C((uint64_t)_swiftEmptyArrayStorage);
      *(void *)(v0 + 384) = &_swiftEmptySetSingleton;
      *(_DWORD *)(v0 + 1136) = enum case for URL.DirectoryHint.inferFromPath(_:);
      *(void *)(v0 + 808) = NSLinkAttributeName;
      *(void *)(v0 + 832) = _swiftEmptyArrayStorage;
      *(void *)(v0 + 824) = 0;
      *(void *)(v0 + 816) = v32;
      uint64_t v33 = *(void *)(v0 + 392);
      swift_bridgeObjectRetain();
      if ((v33 & 0xC000000000000001) != 0)
      {
        uint64_t v34 = sub_146810();
      }
      else
      {
        uint64_t v34 = *(void *)(v33 + 32);
        swift_retain();
      }
      *(void *)(v0 + 840) = v34;
      *(void *)(v0 + 848) = 1;
      sub_145F70();
      uint64_t v35 = *(void *)(v0 + 768);
      id v52 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      sub_145B20();
      v55._countAndFlagsBits = 0x207972746E45;
      v55._object = (void *)0xE600000000000000;
      sub_145B10(v55);
      *(void *)(v0 + 368) = 1;
      sub_145B00();
      v56._countAndFlagsBits = 543584032;
      v56._object = (void *)0xE400000000000000;
      sub_145B10(v56);
      *(void *)(v0 + 360) = v35;
      sub_145B00();
      v57._countAndFlagsBits = 0;
      v57._object = (void *)0xE000000000000000;
      sub_145B10(v57);
      sub_145B40();
      id v36 = (id)qword_1A3EB0;
      sub_1452B0();
      sub_145C10();
      NSString v37 = sub_145B80();
      swift_bridgeObjectRelease();
      [v52 setLocalizedAdditionalDescription:v37];

      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v38;
      void *v38 = v0;
      v38[1] = sub_169BC;
      uint64_t v39 = *(void *)(v0 + 400);
      return sub_B01DC(v39);
    }
  }
  swift_release();
  if (qword_19AC78 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_145760();
  sub_C584(v41, (uint64_t)qword_19BE08);
  id v42 = sub_145740();
  os_log_type_t v43 = sub_1461E0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&def_94138, v42, v43, "ExportTask nothing to export", v44, 2u);
    swift_slowDealloc();
  }

  sub_1CF0C();
  swift_allocError();
  *id v45 = 3;
  swift_willThrow();
  sub_14DE8(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_169BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[108] = a1;
  v4[109] = a2;
  v4[110] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[84];
    uint64_t v6 = v4[83];
    uint64_t v7 = sub_1A758;
  }
  else
  {
    uint64_t v5 = v4[84];
    uint64_t v6 = v4[83];
    uint64_t v7 = sub_16AFC;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_16AFC()
{
  uint64_t v1 = *(void *)(v0 + 880);
  sub_145F70();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 848);
    uint64_t v3 = *(void **)(v0 + 800);
    uint64_t v4 = *(void **)(v0 + 784);
    uint64_t v5 = *(void **)(v0 + 760);
    double v6 = *(double *)(v0 + 680);

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v4 setCompletedUnitCount:v2];

    swift_release();
    swift_bridgeObjectRelease();
    sub_14DE8(v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v9 = *(void *)(v0 + 400);
  if (*(unsigned __int8 *)(v9 + *(int *)(v0 + 1132)) - 1 >= 2)
  {
    uint64_t v18 = *(void *)(v0 + 840);
    unsigned int v80 = *(_DWORD *)(v0 + 1136);
    uint64_t v19 = *(void *)(v0 + 792);
    uint64_t v20 = *(void *)(v0 + 552);
    uint64_t v22 = *(void *)(v0 + 472);
    uint64_t v21 = *(void *)(v0 + 480);
    uint64_t v84 = v22;
    uint64_t v23 = *(void *)(v0 + 456);
    uint64_t v77 = *(void *)(v0 + 448);
    uint64_t v79 = *(void *)(v0 + 464);
    id v89 = (id)v20;
    sub_E3098(v20);
    sub_14FEC(v18, 1819112552, (void *)0xE400000000000000, v20, (uint64_t *)(v0 + 384));
    id v82 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(void *)(v0 + 888) = v82;
    *(void *)(v0 + 896) = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v82(v20, v22);
    uint64_t v24 = v19;
    id v25 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    NSString v26 = sub_145B80();
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithString:v26];

    NSString v28 = sub_145B80();
    id v29 = [v27 stringByAppendingPathComponent:v28];

    uint64_t v30 = sub_145BC0();
    uint64_t v73 = v31;
    uint64_t v75 = v30;
    uint64_t v32 = v31;

    swift_bridgeObjectRelease();
    *(void *)(v0 + 904) = v30;
    *(void *)(v0 + 912) = v32;
    uint64_t v33 = (void *)(v9 + *(int *)(v24 + 28));
    uint64_t v34 = v33[1];
    *(void *)(v0 + 280) = *v33;
    *(void *)(v0 + 288) = v34;
    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t))(v23 + 104);
    *(void *)(v0 + 920) = v35;
    *(void *)(v0 + 928) = (v23 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v35(v79, v80, v77);
    *(void *)(v0 + 936) = sub_12060();
    swift_bridgeObjectRetain();
    sub_144F50();
    id v36 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    *(void *)(v0 + 944) = v36;
    *(void *)(v0 + 952) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v36(v79, v77);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 296) = v75;
    *(void *)(v0 + 304) = v73;
    v35(v79, v80, v77);
    sub_144F50();
    v36(v79, v77);
    v82((uint64_t)v89, v84);
    NSString v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v37;
    *NSString v37 = v0;
    v37[1] = sub_1792C;
    uint64_t v38 = *(void *)(v0 + 872);
    uint64_t v39 = *(void *)(v0 + 864);
LABEL_10:
    return sub_BB690(v39, v38);
  }
  if (*(void *)(v0 + 824))
  {
    uint64_t v10 = *(void **)(v0 + 800);
    id v11 = objc_allocWithZone((Class)NSAttributedString);
    id v12 = v10;
    NSString v13 = sub_145B80();
    id v14 = [v11 initWithString:v13];

    [v12 appendAttributedString:v14];
  }
  uint64_t v15 = *(void *)(v0 + 872);
  uint64_t v16 = *(void *)(v0 + 816);
  [*(id *)(v0 + 800) appendAttributedString:*(void *)(v0 + 864)];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 376) = v16;
  sub_158FC(v15, (uint64_t)sub_15C4C, 0, isUniquelyReferenced_nonNull_native, (void *)(v0 + 376));
  uint64_t v40 = *(void **)(v0 + 864);
  uint64_t v41 = *(void *)(v0 + 376);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v0 + 832);
  *(void *)(v0 + 1008) = v41;
  uint64_t v43 = *(void *)(v0 + 848);
  uint64_t v44 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v43];
  swift_release();
  if (v43 == v44)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_145F70();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 < 2)
    {
      uint64_t v48 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v49 = v48;
      swift_bridgeObjectRetain();
      unint64_t v50 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v50;
      *unint64_t v50 = v0;
      v50[1] = sub_198C0;
      uint64_t v39 = *(void *)(v0 + 800);
      uint64_t v38 = v41;
      goto LABEL_10;
    }
    if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
    {
      Swift::String v57 = *(void **)(v0 + 784);
      Swift::String_optional v58 = *(void **)(v0 + 760);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
      id v56 = sub_9855C();
      uint64_t v86 = v60;
      uint64_t v87 = *(void *)(v0 + 552);
      id v91 = *(void **)(v0 + 480);
      uint64_t v61 = *(void *)(v0 + 464);
      uint64_t v83 = *(void *)(v0 + 472);
      uint64_t v62 = *(void *)(v0 + 456);
      uint64_t v72 = *(void *)(v0 + 448);
      uint64_t v63 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
      uint64_t v64 = v63[1];
      *(void *)(v0 + 232) = *v63;
      *(void *)(v0 + 240) = v64;
      unsigned int v76 = enum case for URL.DirectoryHint.inferFromPath(_:);
      Swift::String v74 = *(void (**)(uint64_t))(v62 + 104);
      id v81 = v56;
      v74(v61);
      sub_12060();
      swift_bridgeObjectRetain();
      sub_144F50();
      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v78(v61, v72);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = 0x74682E7865646E69;
      *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
      ((void (*)(uint64_t, void, uint64_t))v74)(v61, v76, v72);
      uint64_t v65 = v87;
      sub_144F50();
      v78(v61, v72);
      swift_bridgeObjectRelease();
      v88 = (void (*)(uint64_t, uint64_t))v91[1];
      v88(v65, v83);
      *(void *)(v0 + 104) = v81;
      *(void *)(v0 + 112) = v86;
      sub_145BE0();
      sub_146670();
      unint64_t v85 = *(void **)(v0 + 800);
      Swift::String v66 = *(void **)(v0 + 760);
      uint64_t v67 = *(void *)(v0 + 512);
      uint64_t v68 = *(void *)(v0 + 472);
      uint64_t v69 = *(void *)(v0 + 432);
      uint64_t v71 = *(void *)(v0 + 408);
      uint64_t v70 = *(void *)(v0 + 416);

      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
      v88(v67, v68);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_14DE8(*(double *)(v0 + 680));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v59 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v59(v42);
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v42;
    *(void *)(v0 + 824) = v45;
    *(void *)(v0 + 816) = v41;
    uint64_t v46 = *(void *)(v0 + 392);
    if ((v46 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_146810();
      uint64_t v47 = result;
    }
    else
    {
      uint64_t v47 = *(void *)(v46 + 8 * v45 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v47;
    *(void *)(v0 + 848) = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
    }
    else
    {
      sub_145F70();
      uint64_t v51 = *(void *)(v0 + 768);
      id v90 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      sub_145B20();
      v93._countAndFlagsBits = 0x207972746E45;
      v93._object = (void *)0xE600000000000000;
      sub_145B10(v93);
      *(void *)(v0 + 368) = v45 + 1;
      sub_145B00();
      v94._countAndFlagsBits = 543584032;
      v94._object = (void *)0xE400000000000000;
      sub_145B10(v94);
      *(void *)(v0 + 360) = v51;
      sub_145B00();
      v95._countAndFlagsBits = 0;
      v95._object = (void *)0xE000000000000000;
      sub_145B10(v95);
      sub_145B40();
      id v52 = (id)qword_1A3EB0;
      sub_1452B0();
      sub_145C10();
      NSString v53 = sub_145B80();
      swift_bridgeObjectRelease();
      [v90 setLocalizedAdditionalDescription:v53];

      Swift::String v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v54;
      *Swift::String v54 = v0;
      v54[1] = sub_169BC;
      uint64_t v55 = *(void *)(v0 + 400);
      return sub_B01DC(v55);
    }
  }
  return result;
}

uint64_t sub_1792C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[121] = a2;
  v5[122] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v5[84];
    uint64_t v7 = v5[83];
    uint64_t v8 = sub_1A934;
  }
  else
  {
    v5[123] = a1;
    uint64_t v6 = v5[84];
    uint64_t v7 = v5[83];
    uint64_t v8 = sub_17A64;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_17A64()
{
  uint64_t v1 = *(void *)(v0 + 976);
  uint64_t v2 = *(void *)(v0 + 968);
  *(void *)(v0 + 328) = *(void *)(v0 + 984);
  *(void *)(v0 + 336) = v2;
  sub_145BE0();
  sub_146670();
  if (v1)
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
    uint64_t v4 = *(void *)(v0 + 544);
    uint64_t v5 = *(void *)(v0 + 472);
    uint64_t v6 = *(void *)(v0 + 440);
    uint64_t v7 = *(void *)(v0 + 408);
    uint64_t v8 = *(void *)(v0 + 416);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v3(v4, v5);
    swift_bridgeObjectRelease();
    if (qword_19AC78 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_145760();
    sub_C584(v9, (uint64_t)qword_19BE08);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v10 = sub_145740();
    os_log_type_t v11 = sub_1461E0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 840);
    if (v12)
    {
      v133 = *(void **)(v0 + 864);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412546;
      uint64_t v16 = *(void **)(v13 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id);
      *(void *)(v0 + 352) = v16;
      id v17 = v16;
      sub_146610();
      *uint64_t v15 = v16;
      swift_release_n();
      *(_WORD *)(v14 + 12) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 344) = v18;
      sub_146610();
      v15[1] = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_94138, v10, v11, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v14, 0x16u);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_19;
  }
  uint64_t v19 = *(int *)(v0 + 1132);
  uint64_t v20 = *(void *)(v0 + 400);
  (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 408));
  swift_bridgeObjectRelease();
  if (!*(unsigned char *)(v20 + v19))
  {
    uint64_t v33 = *(void **)(*(void *)(v0 + 840) + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_title);
    if (v33)
    {
      id v34 = [v33 string];
      uint64_t v35 = sub_145BC0();
      unint64_t v37 = v36;

      uint64_t v38 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0) {
        uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
      }
      if (v38)
      {
        unint64_t v122 = *(void **)(v0 + 936);
        uint64_t v117 = *(void *)(v0 + 752);
        uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
        v107 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
        uint64_t v39 = *(void *)(v0 + 648);
        uint64_t v108 = *(void *)(v0 + 632);
        uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
        uint64_t v40 = *(void *)(v0 + 624);
        uint64_t v41 = *(void *)(v0 + 600);
        uint64_t v105 = *(void *)(v0 + 584);
        uint64_t v106 = *(void *)(v0 + 608);
        v42.super.Class isa = (Class)qword_1A3EB0;
        v102._countAndFlagsBits = 0x800000000014A870;
        v137._object = (void *)0x800000000014A850;
        v137._countAndFlagsBits = 0x1000000000000018;
        v141.value._countAndFlagsBits = 0;
        v141.value._object = 0;
        v142._countAndFlagsBits = 0x25209480E2204025;
        v142._object = (void *)0xA900000000000040;
        sub_144CC0(v137, v141, v42, v142, v102);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1598D0;
        sub_145220();
        sub_145030();
        sub_145000();
        uint64_t v44 = sub_145200();
        uint64_t v46 = v45;
        v107(v41, v105);
        v110(v40, v106);
        v114(v39, v108);
        *(void *)(v43 + 56) = &type metadata for String;
        *(void *)(v43 + 64) = v117;
        *(void *)(v43 + 32) = v44;
        *(void *)(v43 + 40) = v46;
        *(void *)(v0 + 264) = v35;
        *(void *)(v0 + 272) = v37;
        *(void *)(v0 + 248) = 10;
        *(void *)(v0 + 256) = 0xE100000000000000;
        *(void *)(v0 + 120) = 32;
        *(void *)(v0 + 128) = 0xE100000000000000;
        v103 = v122;
        unsigned __int8 v104 = v122;
        v102._countAndFlagsBits = (uint64_t)&type metadata for String;
        v102._object = v122;
        uint64_t v47 = sub_146650();
        uint64_t v49 = v48;
        swift_bridgeObjectRelease();
        *(void *)(v43 + 96) = &type metadata for String;
        *(void *)(v43 + 104) = v117;
        *(void *)(v43 + 72) = v47;
        *(void *)(v43 + 80) = v49;
        sub_145BD0();
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v56 = *(void *)(v0 + 912);
        uint64_t v57 = *(void *)(v0 + 904);
        uint64_t v129 = *(void (**)(os_log_t, uint64_t))(v0 + 888);
        Swift::String_optional v58 = *(void **)(v0 + 864);
        Swift::String v59 = *(void **)(v0 + 808);
        uint64_t v60 = *(void **)(v0 + 760);
        uint64_t v124 = *(void *)(v0 + 472);
        os_log_t log = *(os_log_t *)(v0 + 544);
        sub_A314(&qword_19BE40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1578A0;
        *(void *)(inited + 64) = &type metadata for String;
        *(void *)(inited + 32) = v59;
        *(void *)(inited + 40) = v57;
        *(void *)(inited + 48) = v56;
        id v62 = v59;
        sub_136E90(inited);
        id v63 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v64 = sub_145B80();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1D008((unint64_t *)&qword_19B190, type metadata accessor for Key);
        Class isa = sub_1459D0().super.isa;
        swift_bridgeObjectRelease();
        id v66 = [v63 initWithString:v64 attributes:isa];

        id v67 = objc_allocWithZone((Class)NSAttributedString);
        NSString v68 = sub_145B80();
        id v69 = [v67 initWithString:v68];

        [v60 appendAttributedString:v69];
        [v60 appendAttributedString:v66];

        swift_bridgeObjectRelease();
        v129(log, v124);
LABEL_19:
        uint64_t v70 = *(void *)(v0 + 832);
        uint64_t v71 = *(void *)(v0 + 816);
        *(void *)(v0 + 1008) = v71;
        uint64_t v72 = *(void *)(v0 + 848);
        uint64_t v73 = *(void *)(v0 + 688);
        objc_msgSend(*(id *)(v0 + 784), "setCompletedUnitCount:", v72, v102, v103, v104);
        swift_release();
        if (v72 == v73)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_145F70();
          if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
          {
            if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
            {
              uint64_t v87 = *(void **)(v0 + 784);
              v88 = *(void **)(v0 + 760);

              swift_bridgeObjectRelease();
              swift_release();
            }
            else
            {
              swift_release();
              id v86 = sub_9855C();
              uint64_t v131 = *(void *)(v0 + 552);
              uint64_t v135 = *(void *)(v0 + 480);
              uint64_t v90 = *(void *)(v0 + 464);
              uint64_t v121 = *(void *)(v0 + 472);
              uint64_t v91 = *(void *)(v0 + 456);
              uint64_t v130 = v92;
              uint64_t v109 = *(void *)(v0 + 448);
              Swift::String v93 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
              uint64_t v94 = v93[1];
              *(void *)(v0 + 232) = *v93;
              *(void *)(v0 + 240) = v94;
              unsigned int v112 = enum case for URL.DirectoryHint.inferFromPath(_:);
              uint64_t v111 = *(void (**)(uint64_t))(v91 + 104);
              id v118 = v86;
              v111(v90);
              sub_12060();
              swift_bridgeObjectRetain();
              sub_144F50();
              uint64_t v115 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
              v115(v90, v109);
              swift_bridgeObjectRelease();
              *(void *)(v0 + 88) = 0x74682E7865646E69;
              *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
              ((void (*)(uint64_t, void, uint64_t))v111)(v90, v112, v109);
              uint64_t v95 = v131;
              sub_144F50();
              v115(v90, v109);
              swift_bridgeObjectRelease();
              uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
              v132(v95, v121);
              *(void *)(v0 + 104) = v118;
              *(void *)(v0 + 112) = v130;
              sub_145BE0();
              sub_146670();
              os_log_t loga = *(os_log_t *)(v0 + 800);
              id v96 = *(void **)(v0 + 760);
              uint64_t v97 = *(void *)(v0 + 512);
              uint64_t v98 = *(void *)(v0 + 472);
              uint64_t v99 = *(void *)(v0 + 432);
              uint64_t v101 = *(void *)(v0 + 408);
              uint64_t v100 = *(void *)(v0 + 416);

              (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
              v132(v97, v98);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_14DE8(*(double *)(v0 + 680));
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            id v89 = *(uint64_t (**)(uint64_t))(v0 + 8);
            return v89(v70);
          }
          else
          {
            uint64_t v77 = *(void **)(v0 + 800);
            swift_bridgeObjectRelease();
            id v78 = v77;
            swift_bridgeObjectRetain();
            uint64_t v79 = (void *)swift_task_alloc();
            *(void *)(v0 + 1016) = v79;
            *uint64_t v79 = v0;
            v79[1] = sub_198C0;
            uint64_t v80 = *(void *)(v0 + 800);
            return sub_BB690(v80, v71);
          }
        }
        else
        {
          uint64_t v74 = *(void *)(v0 + 848);
          *(void *)(v0 + 832) = v70;
          *(void *)(v0 + 824) = v74;
          *(void *)(v0 + 816) = v71;
          uint64_t v75 = *(void *)(v0 + 392);
          if ((v75 & 0xC000000000000001) != 0)
          {
            uint64_t result = sub_146810();
            uint64_t v76 = result;
          }
          else
          {
            uint64_t v76 = *(void *)(v75 + 8 * v74 + 32);
            uint64_t result = swift_retain();
          }
          *(void *)(v0 + 840) = v76;
          *(void *)(v0 + 848) = v74 + 1;
          if (__OFADD__(v74, 1))
          {
            __break(1u);
          }
          else
          {
            sub_145F70();
            uint64_t v81 = *(void *)(v0 + 768);
            v134 = *(void **)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
            sub_145B20();
            v138._countAndFlagsBits = 0x207972746E45;
            v138._object = (void *)0xE600000000000000;
            sub_145B10(v138);
            *(void *)(v0 + 368) = v74 + 1;
            sub_145B00();
            v139._countAndFlagsBits = 543584032;
            v139._object = (void *)0xE400000000000000;
            sub_145B10(v139);
            *(void *)(v0 + 360) = v81;
            sub_145B00();
            v140._countAndFlagsBits = 0;
            v140._object = (void *)0xE000000000000000;
            sub_145B10(v140);
            sub_145B40();
            id v82 = (id)qword_1A3EB0;
            sub_1452B0();
            sub_145C10();
            NSString v83 = sub_145B80();
            swift_bridgeObjectRelease();
            [v134 setLocalizedAdditionalDescription:v83];

            uint64_t v84 = (void *)swift_task_alloc();
            *(void *)(v0 + 856) = v84;
            *uint64_t v84 = v0;
            v84[1] = sub_169BC;
            uint64_t v85 = *(void *)(v0 + 400);
            return sub_B01DC(v85);
          }
        }
        return result;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v128 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
    unint64_t v123 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
    unint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
    uint64_t v51 = *(void *)(v0 + 648);
    uint64_t v120 = *(void *)(v0 + 632);
    uint64_t v52 = *(void *)(v0 + 624);
    uint64_t v53 = *(void *)(v0 + 608);
    uint64_t v54 = *(void *)(v0 + 600);
    uint64_t v55 = *(void *)(v0 + 584);
    sub_145220();
    sub_145030();
    sub_145000();
    sub_145200();
    v50(v54, v55);
    v123(v52, v53);
    v128(v51, v120);
    goto LABEL_18;
  }
  uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v0 + 944);
  uint64_t v119 = *(void (**)(uint64_t, void, uint64_t))(v0 + 920);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  unsigned int v116 = *(_DWORD *)(v0 + 1136);
  uint64_t v22 = *(void *)(v0 + 552);
  uint64_t v23 = *(void *)(v0 + 528);
  uint64_t v25 = *(void *)(v0 + 464);
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v113 = *(void *)(v0 + 448);
  swift_bridgeObjectRelease();
  sub_144EC0();
  uint64_t v26 = sub_144E90();
  uint64_t v28 = v27;
  v21(v22, v24);
  sub_E3098(v23);
  *(void *)(v0 + 312) = v26;
  *(void *)(v0 + 320) = v28;
  v119(v25, v116, v113);
  sub_144F50();
  v127(v25, v113);
  v21(v23, v24);
  swift_bridgeObjectRelease();
  sub_144EE0();
  v21(v22, v24);
  id v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 992) = v29;
  *id v29 = v0;
  v29[1] = sub_18D08;
  uint64_t v30 = *(void *)(v0 + 544);
  uint64_t v31 = *(void *)(v0 + 536);
  return sub_E32EC(v30, v31);
}

uint64_t sub_18D08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1000) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 672);
  uint64_t v4 = *(void *)(v2 + 664);
  if (v0) {
    uint64_t v5 = sub_1B4F4;
  }
  else {
    uint64_t v5 = sub_18E44;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_18E44()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 480) + 16))(*(void *)(v0 + 520), *(void *)(v0 + 536), *(void *)(v0 + 472));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = *(void *)(v0 + 832);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v2 = sub_7DDA0(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_7DDA0(v3 > 1, v4 + 1, 1, v2);
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  uint64_t v6 = *(void **)(v0 + 864);
  uint64_t v7 = *(void *)(v0 + 544);
  uint64_t v8 = *(void *)(v0 + 536);
  uint64_t v9 = *(void *)(v0 + 520);
  uint64_t v11 = *(void *)(v0 + 472);
  uint64_t v10 = *(void *)(v0 + 480);
  *(void *)(v2 + 16) = v4 + 1;
  unint64_t v12 = v2
      + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(void *)(v10 + 72) * v4;
  unint64_t v13 = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v9, v11);

  swift_bridgeObjectRelease();
  v5(v8, v11);
  v5(v7, v11);
  uint64_t v14 = *(void *)(v0 + 1000);
  uint64_t v15 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v15;
  uint64_t v16 = *(void *)(v0 + 848);
  uint64_t v17 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v16];
  swift_release();
  if (v16 == v17)
  {
    unint64_t v18 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_145F70();
    if (v14)
    {
      uint64_t v19 = *(void **)(v0 + 800);
      uint64_t v20 = *(void **)(v0 + 784);
      uint64_t v21 = *(void **)(v0 + 760);
      double v22 = *(double *)(v0 + 680);
      swift_release();

      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_14DE8(v22);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v34 = *(uint64_t (**)(void))(v0 + 8);
      return v34();
    }
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v41 = *(void **)(v0 + 784);
        NSBundle v42 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v40 = sub_9855C();
        uint64_t v63 = *(void *)(v0 + 552);
        id v67 = *(void **)(v0 + 480);
        uint64_t v44 = *(void *)(v0 + 464);
        uint64_t v61 = *(void *)(v0 + 472);
        uint64_t v45 = *(void *)(v0 + 456);
        uint64_t v57 = *(void *)(v0 + 448);
        uint64_t v46 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v47 = v46[1];
        *(void *)(v0 + 232) = *v46;
        *(void *)(v0 + 240) = v47;
        unsigned int v59 = enum case for URL.DirectoryHint.inferFromPath(_:);
        Swift::String_optional v58 = *(void (**)(uint64_t, void))(v45 + 104);
        id v60 = v40;
        uint64_t v65 = v48;
        v58(v44, enum case for URL.DirectoryHint.inferFromPath(_:));
        sub_12060();
        swift_bridgeObjectRetain();
        sub_144F50();
        uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v49(v44, v57);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v58)(v44, v59, v57);
        uint64_t v50 = v63;
        sub_144F50();
        v49(v44, v57);
        swift_bridgeObjectRelease();
        NSString v64 = (void (*)(uint64_t, uint64_t))v67[1];
        v64(v50, v61);
        *(void *)(v0 + 104) = v60;
        *(void *)(v0 + 112) = v65;
        sub_145BE0();
        sub_146670();
        id v62 = *(void **)(v0 + 800);
        uint64_t v51 = *(void **)(v0 + 760);
        uint64_t v52 = *(void *)(v0 + 512);
        uint64_t v53 = *(void *)(v0 + 472);
        uint64_t v54 = *(void *)(v0 + 432);
        uint64_t v56 = *(void *)(v0 + 408);
        uint64_t v55 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
        v64(v52, v53);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_14DE8(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v43 = *(uint64_t (**)(unint64_t))(v0 + 8);
      return v43(v18);
    }
    else
    {
      uint64_t v27 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v28 = v27;
      swift_bridgeObjectRetain();
      id v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v29;
      *id v29 = v0;
      v29[1] = sub_198C0;
      uint64_t v30 = *(void *)(v0 + 800);
      return sub_BB690(v30, v15);
    }
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v13;
    *(void *)(v0 + 824) = v23;
    *(void *)(v0 + 816) = v15;
    uint64_t v24 = *(void *)(v0 + 392);
    if ((v24 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_146810();
      uint64_t v26 = result;
    }
    else
    {
      uint64_t v26 = *(void *)(v24 + 8 * v23 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v26;
    *(void *)(v0 + 848) = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      return result;
    }
    sub_145F70();
    if (v14)
    {
      uint64_t v31 = *(void **)(v0 + 800);
      uint64_t v32 = *(void **)(v0 + 784);
      uint64_t v33 = *(void **)(v0 + 760);
      double v22 = *(double *)(v0 + 680);
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_18;
    }
    uint64_t v35 = *(void *)(v0 + 768);
    id v66 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
    sub_145B20();
    v69._countAndFlagsBits = 0x207972746E45;
    v69._object = (void *)0xE600000000000000;
    sub_145B10(v69);
    *(void *)(v0 + 368) = v23 + 1;
    sub_145B00();
    v70._countAndFlagsBits = 543584032;
    v70._object = (void *)0xE400000000000000;
    sub_145B10(v70);
    *(void *)(v0 + 360) = v35;
    sub_145B00();
    v71._countAndFlagsBits = 0;
    v71._object = (void *)0xE000000000000000;
    sub_145B10(v71);
    sub_145B40();
    id v36 = (id)qword_1A3EB0;
    sub_1452B0();
    sub_145C10();
    NSString v37 = sub_145B80();
    swift_bridgeObjectRelease();
    [v66 setLocalizedAdditionalDescription:v37];

    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 856) = v38;
    void *v38 = v0;
    v38[1] = sub_169BC;
    uint64_t v39 = *(void *)(v0 + 400);
    return sub_B01DC(v39);
  }
}

uint64_t sub_198C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(v5 + 1024) = a2;
  *(void *)(v5 + 1032) = v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 672);
    uint64_t v7 = *(void *)(v5 + 664);
    uint64_t v8 = sub_1C0C8;
  }
  else
  {
    *(void *)(v5 + 1040) = a1;
    uint64_t v6 = *(void *)(v5 + 672);
    uint64_t v7 = *(void *)(v5 + 664);
    uint64_t v8 = sub_19A2C;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_19A2C()
{
  uint64_t v1 = v0;
  v0[17] = v0[130];
  uint64_t v57 = v0[129];
  uint64_t v2 = v0[128];
  uint64_t v3 = v0[99];
  uint64_t v4 = v1[69];
  uint64_t v55 = v1[60];
  uint64_t v5 = v1[58];
  uint64_t v58 = v1[59];
  uint64_t v7 = v1[56];
  uint64_t v6 = v1[57];
  uint64_t v8 = v1[50];
  v1[18] = v2;
  sub_E3098(v4);
  uint64_t v9 = (void *)(v8 + *(int *)(v3 + 40));
  uint64_t v10 = v9[1];
  uint64_t v51 = v9;
  v1[19] = *v9;
  v1[20] = v10;
  unsigned int v11 = enum case for URL.DirectoryHint.inferFromPath(_:);
  *((_DWORD *)v1 + 285) = enum case for URL.DirectoryHint.inferFromPath(_:);
  unint64_t v12 = *(void (**)(void))(v6 + 104);
  v1[131] = v12;
  v1[132] = (v6 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  unsigned int v52 = v11;
  uint64_t v53 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v5);
  v1[133] = sub_12060();
  swift_bridgeObjectRetain();
  sub_144F50();
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v1[134] = v13;
  v1[135] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v1[136] = v14;
  v1[137] = (v55 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v15 = v58;
  unsigned int v59 = v14;
  v14(v4, v15);
  sub_145BE0();
  sub_146670();
  if (v57)
  {
    uint64_t v16 = (void *)v1[100];
    uint64_t v17 = (void *)v1[98];
    unint64_t v18 = (void *)v1[95];
    double v19 = *((double *)v1 + 85);
    uint64_t v20 = v1[63];
    uint64_t v21 = v1[59];
    uint64_t v22 = v1[52];
    uint64_t v23 = v1[53];
    uint64_t v24 = v1[51];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    v59(v20, v21);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_14DE8(v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v1[1];
    return v25();
  }
  else
  {
    uint64_t v56 = v13;
    uint64_t v27 = *((int *)v1 + 283);
    uint64_t v28 = v1[63];
    uint64_t v29 = v1[59];
    uint64_t v30 = v1[50];
    (*(void (**)(void, void))(v1[52] + 8))(v1[53], v1[51]);
    v59(v28, v29);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v30 + v27) == 2)
    {
      uint64_t v31 = *((int *)v1 + 282);
      uint64_t v32 = v1[69];
      uint64_t v33 = v1[58];
      uint64_t v34 = v1[56];
      uint64_t v35 = v1[50];
      uint64_t v50 = v1[59];
      id v36 = [(id)v1[97] progressWithTotalUnitCount:100];
      v1[138] = v36;
      [*(id *)(v35 + v31) addChild:v36 withPendingUnitCount:10];
      sub_E3098(v32);
      uint64_t v37 = v51[1];
      v1[23] = *v51;
      v1[24] = v37;
      v53(v33, v52, v34);
      swift_bridgeObjectRetain();
      sub_144F50();
      v56(v33, v34);
      swift_bridgeObjectRelease();
      v59(v32, v50);
      sub_E3098(v32);
      v1[25] = 0x2E6C616E72756F4ALL;
      v1[26] = 0xEB00000000666470;
      v53(v33, v52, v34);
      sub_144F50();
      v56(v33, v34);
      swift_bridgeObjectRelease();
      v59(v32, v50);
      uint64_t v38 = (void *)swift_task_alloc();
      v1[139] = v38;
      void *v38 = v1;
      v38[1] = sub_1A2B4;
      uint64_t v39 = v1[61];
      uint64_t v40 = v1[62];
      return sub_E32EC(v40, v39);
    }
    else
    {
      uint64_t v49 = (void *)v1[100];
      uint64_t v41 = (void *)v1[98];
      uint64_t v48 = (void *)v1[95];
      uint64_t v42 = v1[69];
      uint64_t v43 = v1[59];
      uint64_t v44 = v1[58];
      uint64_t v45 = v1[56];
      swift_release();
      sub_A314(&qword_19EB70);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1578A0;
      sub_E3098(v42);
      uint64_t v46 = v51[1];
      v1[21] = *v51;
      v1[22] = v46;
      v53(v44, v52, v45);
      swift_bridgeObjectRetain();
      sub_144F50();
      v56(v44, v45);
      swift_bridgeObjectRelease();
      v59(v42, v43);

      swift_bridgeObjectRelease();
      sub_14DE8(*((double *)v1 + 85));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v47 = (uint64_t (*)(uint64_t))v1[1];
      return v47(v54);
    }
  }
}

uint64_t sub_1A2B4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1120) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v2[136];
  uint64_t v4 = v2[62];
  uint64_t v5 = v2[59];
  v3(v2[61], v5);
  v3(v4, v5);
  uint64_t v6 = v2[84];
  uint64_t v7 = v2[83];
  if (v0) {
    uint64_t v8 = sub_1C280;
  }
  else {
    uint64_t v8 = sub_1A478;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1A478()
{
  uint64_t v1 = *(void **)(v0 + 1104);
  unsigned int v11 = *(void (**)(uint64_t, uint64_t))(v0 + 1088);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
  uint64_t v3 = *(unsigned int *)(v0 + 1140);
  uint64_t v14 = *(void **)(v0 + 800);
  unint64_t v12 = *(void **)(v0 + 784);
  unint64_t v13 = *(void **)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 552);
  uint64_t v9 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 448);
  swift_release();
  sub_A314(&qword_19EB70);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1578A0;
  sub_E3098(v4);
  *(void *)(v0 + 216) = 0x2E6C616E72756F4ALL;
  *(void *)(v0 + 224) = 0xEB00000000666470;
  v2(v5, v3, v6);
  sub_144F50();
  v10(v5, v6);
  swift_bridgeObjectRelease();
  v11(v4, v9);
  [v1 setCompletedUnitCount:100];

  swift_bridgeObjectRelease();
  sub_14DE8(*(double *)(v0 + 680));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v15);
}

uint64_t sub_1A758()
{
  uint64_t v1 = *((void *)v0 + 106);
  uint64_t v2 = (void *)*((void *)v0 + 100);
  uint64_t v3 = (void *)*((void *)v0 + 98);
  uint64_t v4 = (void *)*((void *)v0 + 95);
  double v5 = v0[85];
  swift_release();
  [v3 setCompletedUnitCount:v1];

  swift_release();
  swift_bridgeObjectRelease();
  sub_14DE8(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v6();
}

uint64_t sub_1A934()
{
  (*(void (**)(void, void))(v0 + 888))(*(void *)(v0 + 544), *(void *)(v0 + 472));
  if (qword_19AC78 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19BE08);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461E0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 840);
  if (v4)
  {
    id v54 = *(id *)(v0 + 864);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412546;
    uint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id);
    *(void *)(v0 + 352) = v8;
    id v9 = v8;
    sub_146610();
    *uint64_t v7 = v8;
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v10;
    sub_146610();
    v7[1] = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v6, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 832);
  uint64_t v12 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v12;
  uint64_t v13 = *(void *)(v0 + 848);
  uint64_t v14 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v13];
  swift_release();
  if (v13 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_145F70();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v29 = *(void **)(v0 + 784);
        uint64_t v30 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v28 = sub_9855C();
        uint64_t v51 = v32;
        uint64_t v52 = *(void *)(v0 + 552);
        uint64_t v56 = *(void **)(v0 + 480);
        uint64_t v33 = *(void *)(v0 + 464);
        uint64_t v49 = *(void *)(v0 + 472);
        uint64_t v34 = *(void *)(v0 + 456);
        uint64_t v44 = *(void *)(v0 + 448);
        uint64_t v35 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v36 = v35[1];
        *(void *)(v0 + 232) = *v35;
        *(void *)(v0 + 240) = v36;
        unsigned int v46 = enum case for URL.DirectoryHint.inferFromPath(_:);
        uint64_t v45 = *(void (**)(uint64_t))(v34 + 104);
        id v48 = v28;
        v45(v33);
        sub_12060();
        swift_bridgeObjectRetain();
        sub_144F50();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v47(v33, v44);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v45)(v33, v46, v44);
        uint64_t v37 = v52;
        sub_144F50();
        v47(v33, v44);
        swift_bridgeObjectRelease();
        uint64_t v53 = (void (*)(uint64_t, uint64_t))v56[1];
        v53(v37, v49);
        *(void *)(v0 + 104) = v48;
        *(void *)(v0 + 112) = v51;
        sub_145BE0();
        sub_146670();
        os_log_t log = *(os_log_t *)(v0 + 800);
        uint64_t v38 = *(void **)(v0 + 760);
        uint64_t v39 = *(void *)(v0 + 512);
        uint64_t v40 = *(void *)(v0 + 472);
        uint64_t v41 = *(void *)(v0 + 432);
        uint64_t v43 = *(void *)(v0 + 408);
        uint64_t v42 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
        v53(v39, v40);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_14DE8(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v31 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v31(v11);
    }
    else
    {
      double v19 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v20 = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v21;
      void *v21 = v0;
      v21[1] = sub_198C0;
      uint64_t v22 = *(void *)(v0 + 800);
      return sub_BB690(v22, v12);
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v11;
    *(void *)(v0 + 824) = v15;
    *(void *)(v0 + 816) = v12;
    uint64_t v16 = *(void *)(v0 + 392);
    if ((v16 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_146810();
      uint64_t v18 = result;
    }
    else
    {
      uint64_t v18 = *(void *)(v16 + 8 * v15 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v18;
    *(void *)(v0 + 848) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      sub_145F70();
      uint64_t v23 = *(void *)(v0 + 768);
      id v55 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      sub_145B20();
      v58._countAndFlagsBits = 0x207972746E45;
      v58._object = (void *)0xE600000000000000;
      sub_145B10(v58);
      *(void *)(v0 + 368) = v15 + 1;
      sub_145B00();
      v59._countAndFlagsBits = 543584032;
      v59._object = (void *)0xE400000000000000;
      sub_145B10(v59);
      *(void *)(v0 + 360) = v23;
      sub_145B00();
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      sub_145B10(v60);
      sub_145B40();
      id v24 = (id)qword_1A3EB0;
      sub_1452B0();
      sub_145C10();
      NSString v25 = sub_145B80();
      swift_bridgeObjectRelease();
      [v55 setLocalizedAdditionalDescription:v25];

      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_169BC;
      uint64_t v27 = *(void *)(v0 + 400);
      return sub_B01DC(v27);
    }
  }
  return result;
}

uint64_t sub_1B4F4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 472);
  v1(*(void *)(v0 + 536), v3);
  v1(v2, v3);
  if (qword_19AC78 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_145760();
  sub_C584(v4, (uint64_t)qword_19BE08);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v5 = sub_145740();
  os_log_type_t v6 = sub_1461E0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 840);
  if (v7)
  {
    id v57 = *(id *)(v0 + 864);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    uint64_t v11 = *(void **)(v8 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_id);
    *(void *)(v0 + 352) = v11;
    id v12 = v11;
    sub_146610();
    *uint64_t v10 = v11;
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    sub_146610();
    v10[1] = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v5, v6, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v9, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v14 = *(void *)(v0 + 832);
  uint64_t v15 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v15;
  uint64_t v16 = *(void *)(v0 + 848);
  uint64_t v17 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v16];
  swift_release();
  if (v16 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_145F70();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v32 = *(void **)(v0 + 784);
        uint64_t v33 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v31 = sub_9855C();
        uint64_t v54 = v35;
        uint64_t v55 = *(void *)(v0 + 552);
        Swift::String v59 = *(void **)(v0 + 480);
        uint64_t v36 = *(void *)(v0 + 464);
        uint64_t v52 = *(void *)(v0 + 472);
        uint64_t v37 = *(void *)(v0 + 456);
        uint64_t v47 = *(void *)(v0 + 448);
        uint64_t v38 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v39 = v38[1];
        *(void *)(v0 + 232) = *v38;
        *(void *)(v0 + 240) = v39;
        unsigned int v49 = enum case for URL.DirectoryHint.inferFromPath(_:);
        id v48 = *(void (**)(uint64_t))(v37 + 104);
        id v51 = v31;
        v48(v36);
        sub_12060();
        swift_bridgeObjectRetain();
        sub_144F50();
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        v50(v36, v47);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v48)(v36, v49, v47);
        uint64_t v40 = v55;
        sub_144F50();
        v50(v36, v47);
        swift_bridgeObjectRelease();
        uint64_t v56 = (void (*)(uint64_t, uint64_t))v59[1];
        v56(v40, v52);
        *(void *)(v0 + 104) = v51;
        *(void *)(v0 + 112) = v54;
        sub_145BE0();
        sub_146670();
        os_log_t log = *(os_log_t *)(v0 + 800);
        uint64_t v41 = *(void **)(v0 + 760);
        uint64_t v42 = *(void *)(v0 + 512);
        uint64_t v43 = *(void *)(v0 + 472);
        uint64_t v44 = *(void *)(v0 + 432);
        uint64_t v46 = *(void *)(v0 + 408);
        uint64_t v45 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
        v56(v42, v43);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_14DE8(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v34(v14);
    }
    else
    {
      uint64_t v22 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v23 = v22;
      swift_bridgeObjectRetain();
      id v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v24;
      *id v24 = v0;
      v24[1] = sub_198C0;
      uint64_t v25 = *(void *)(v0 + 800);
      return sub_BB690(v25, v15);
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v14;
    *(void *)(v0 + 824) = v18;
    *(void *)(v0 + 816) = v15;
    uint64_t v19 = *(void *)(v0 + 392);
    if ((v19 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_146810();
      uint64_t v21 = result;
    }
    else
    {
      uint64_t v21 = *(void *)(v19 + 8 * v18 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v21;
    *(void *)(v0 + 848) = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
    }
    else
    {
      sub_145F70();
      uint64_t v26 = *(void *)(v0 + 768);
      id v58 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      sub_145B20();
      v61._countAndFlagsBits = 0x207972746E45;
      v61._object = (void *)0xE600000000000000;
      sub_145B10(v61);
      *(void *)(v0 + 368) = v18 + 1;
      sub_145B00();
      v62._countAndFlagsBits = 543584032;
      v62._object = (void *)0xE400000000000000;
      sub_145B10(v62);
      *(void *)(v0 + 360) = v26;
      sub_145B00();
      v63._countAndFlagsBits = 0;
      v63._object = (void *)0xE000000000000000;
      sub_145B10(v63);
      sub_145B40();
      id v27 = (id)qword_1A3EB0;
      sub_1452B0();
      sub_145C10();
      NSString v28 = sub_145B80();
      swift_bridgeObjectRelease();
      [v58 setLocalizedAdditionalDescription:v28];

      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_169BC;
      uint64_t v30 = *(void *)(v0 + 400);
      return sub_B01DC(v30);
    }
  }
  return result;
}

uint64_t sub_1C0C8()
{
  uint64_t v1 = (void *)*((void *)v0 + 100);
  uint64_t v2 = (void *)*((void *)v0 + 98);
  uint64_t v3 = (void *)*((void *)v0 + 95);
  double v4 = v0[85];
  swift_release();

  swift_bridgeObjectRelease();
  sub_14DE8(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v5();
}

uint64_t sub_1C280()
{
  uint64_t v1 = (void *)*((void *)v0 + 138);
  uint64_t v2 = (void *)*((void *)v0 + 100);
  uint64_t v3 = (void *)*((void *)v0 + 98);
  double v4 = (void *)*((void *)v0 + 95);
  double v5 = v0[85];
  swift_release();
  [v1 setCompletedUnitCount:100];

  swift_bridgeObjectRelease();
  sub_14DE8(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v6();
}

uint64_t sub_1C454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_1452C0();
  v3[5] = swift_task_alloc();
  sub_145B50();
  v3[6] = swift_task_alloc();
  sub_145F30();
  v3[7] = sub_145F20();
  uint64_t v5 = sub_145EB0();
  v3[8] = v5;
  v3[9] = v4;
  return _swift_task_switch(sub_1C548, v5, v4);
}

uint64_t sub_1C548()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(int *)(type metadata accessor for ExportOptions() + 52);
  *(_DWORD *)(v0 + 144) = v2;
  uint64_t v3 = *(void **)(v1 + v2);
  sub_145AE0();
  if (qword_19B048 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1A3EB0;
  sub_1452B0();
  sub_145C10();
  NSString v5 = sub_145B80();
  swift_bridgeObjectRelease();
  [v3 setLocalizedAdditionalDescription:v5];

  sub_145F70();
  *(void *)(v0 + 80) = 0;
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *os_log_type_t v6 = v0;
  v6[1] = sub_1C730;
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  return sub_146D8(v8, v7);
}

uint64_t sub_1C730(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_1C858, v4, v3);
}

uint64_t sub_1C858()
{
  uint64_t v1 = v0[10];
  sub_145F70();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_19BE30 + dword_19BE30);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C974;
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[3];
    return v7(v5, v6);
  }
}

uint64_t sub_1C974()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_1CBE4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_1CAA8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1CAA8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_145F70();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(int *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 24);
    id v6 = [self progressWithTotalUnitCount:100];
    *(void *)(v0 + 120) = v6;
    [*(id *)(v5 + v4) addChild:v6 withPendingUnitCount:10];
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1CC64;
    return sub_E2374();
  }
}

uint64_t sub_1CBE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1CC64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_1CE3C;
  }
  else {
    uint64_t v5 = sub_1CDA0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1CDA0()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();
  [v1 setCompletedUnitCount:100];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1CE3C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_1CEB8()
{
  unint64_t result = qword_19BE38;
  if (!qword_19BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BE38);
  }
  return result;
}

unint64_t sub_1CF0C()
{
  unint64_t result = qword_19BE48;
  if (!qword_19BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BE48);
  }
  return result;
}

unint64_t sub_1CF60()
{
  unint64_t result = qword_1A0A20;
  if (!qword_1A0A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0A20);
  }
  return result;
}

unint64_t sub_1CFB4()
{
  unint64_t result = qword_19BE60;
  if (!qword_19BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BE60);
  }
  return result;
}

uint64_t sub_1D008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D050()
{
  return swift_release();
}

uint64_t sub_1D058()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1D090@<X0>(double **a1@<X8>)
{
  return sub_14B90(a1);
}

uint64_t sub_1D0AC(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19BE88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExportError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExportError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExportError()
{
  return &type metadata for ExportError;
}

unint64_t sub_1D2A4()
{
  unint64_t result = qword_19BE90;
  if (!qword_19BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BE90);
  }
  return result;
}

uint64_t sub_1D2F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = sub_144F60();
  uint64_t v10 = *(void *)(v75 - 8);
  uint64_t v11 = __chkstk_darwin(v75);
  Swift::String v71 = &v65[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v65[-v13];
  swift_bridgeObjectRetain_n();
  uint64_t v74 = a4;
  uint64_t v15 = sub_145740();
  os_log_type_t v16 = sub_146210();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v72 = v14;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v73 = a5;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v77 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_3D2B4(a1, a2, &v77);
    sub_146610();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&def_94138, v15, v16, "(getContainerURL) identifier: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v73;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (!container_query_create())
  {
    uint64_t v21 = sub_145740();
    os_log_type_t v22 = sub_1461F0();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      id v24 = "(getContainerURL) container_query_create() failure";
LABEL_9:
      _os_log_impl(&def_94138, v21, v22, v24, v23, 2u);
      swift_slowDealloc();
    }
LABEL_10:

    uint64_t v25 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v75);
  }
  if (a3)
  {
    uint64_t v20 = sub_145C30();
    xpc_string_create((const char *)(v20 + 32));
    swift_release();
    container_query_set_identifiers();
    swift_unknownObjectRelease();
    container_query_set_class();
  }
  else
  {
    container_query_set_class();
    uint64_t v26 = sub_145C30();
    xpc_string_create((const char *)(v26 + 32));
    swift_release();
    container_query_set_group_identifiers();
    swift_unknownObjectRelease();
  }
  container_query_set_persona_unique_string();
  container_query_operation_set_flags();
  if (!container_query_get_single_result())
  {
    uint64_t v41 = sub_145740();
    os_log_type_t v42 = sub_1461F0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&def_94138, v41, v42, "(getContainerURL) container_query_get_single_result() failure", v43, 2u);
      swift_slowDealloc();
    }

    container_query_get_last_error();
    if (container_error_copy_unlocalized_description())
    {
      uint64_t v44 = sub_145740();
      os_log_type_t v45 = sub_1461F0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 136315138;
        uint64_t v47 = sub_145CA0();
        uint64_t v76 = sub_3D2B4(v47, v48, &v77);
        sub_146610();
        swift_bridgeObjectRelease();
        _os_log_impl(&def_94138, v44, v45, "(getContainerURL) container_error: %s", v46, 0xCu);
        uint64_t v25 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v75);
      }
    }
    uint64_t v25 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v75);
  }
  uint64_t v27 = container_copy_object();
  container_query_free();
  if (v27)
  {
    uint64_t v73 = a1;
    if (container_get_path())
    {
      uint64_t v28 = sub_145CA0();
      unint64_t v30 = v29;
      if (!container_get_identifier())
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_145740();
        os_log_type_t v22 = sub_1461F0();
        if (!os_log_type_enabled(v21, v22)) {
          goto LABEL_10;
        }
        id v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v23 = 0;
        id v24 = "(getContainerURL) Unable to get container identifier";
        goto LABEL_9;
      }
      uint64_t v32 = sub_145CA0();
      unint64_t v33 = v31;
      if (v32 == v73 && v31 == a2 || (sub_146B90() & 1) != 0)
      {
        uint64_t v70 = v28;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_145740();
        os_log_type_t v35 = sub_146210();
        int v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v37 = swift_slowAlloc();
          uint64_t v68 = swift_slowAlloc();
          uint64_t v77 = v68;
          *(_DWORD *)uint64_t v37 = 136315650;
          int v66 = v36;
          swift_bridgeObjectRetain();
          os_log_t v67 = v34;
          uint64_t v76 = sub_3D2B4(v70, v30, &v77);
          sub_146610();
          swift_bridgeObjectRelease_n();
          unint64_t v69 = a2;
          *(_WORD *)(v37 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_3D2B4(v32, v33, &v77);
          sub_146610();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v37 + 22) = 2080;
          a2 = v69;
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_3D2B4(v73, a2, &v77);
          sub_146610();
          swift_bridgeObjectRelease_n();
          os_log_t v38 = v67;
          _os_log_impl(&def_94138, v67, (os_log_type_t)v66, "(getContainerURL) path: %s for id:%s  for identifier: %s", (uint8_t *)v37, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v40 = v71;
        uint64_t v39 = v72;
        sub_144E60();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v40, v39, v75);
        swift_bridgeObjectRetain_n();
        uint64_t v56 = sub_145740();
        os_log_type_t v57 = sub_146210();
        int v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v59 = swift_slowAlloc();
          LODWORD(v71) = v58;
          uint64_t v60 = v59;
          uint64_t v74 = swift_slowAlloc();
          uint64_t v77 = v74;
          *(_DWORD *)uint64_t v60 = 136315394;
          sub_1E014();
          uint64_t v61 = v75;
          uint64_t v62 = sub_146B50();
          uint64_t v76 = sub_3D2B4(v62, v63, &v77);
          uint64_t v39 = v72;
          sub_146610();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v40, v61);
          *(_WORD *)(v60 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_3D2B4(v73, a2, &v77);
          sub_146610();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&def_94138, v56, (os_log_type_t)v71, "(getContainerURL) final url: %s  for identifier: %s", (uint8_t *)v60, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v40, v75);
          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 32))(a5, v39, v75);
        uint64_t v25 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v75);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_145740();
      os_log_type_t v22 = sub_1461F0();
      if (os_log_type_enabled(v21, v22))
      {
        id v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v23 = 0;
        id v24 = "(getContainerURL) path for wrong container";
        goto LABEL_9;
      }
      goto LABEL_10;
    }
    uint64_t v52 = a5;
    swift_bridgeObjectRetain_n();
    uint64_t v53 = sub_145740();
    os_log_type_t v54 = sub_1461F0();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_3D2B4(v73, a2, &v77);
      sub_146610();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&def_94138, v53, v54, "(getContainerURL) Unable to get path from %s", v55, 0xCu);
      uint64_t v25 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v25 = 1;
    }
    a5 = v52;
  }
  else
  {
    uint64_t v73 = a5;
    swift_bridgeObjectRetain_n();
    unsigned int v49 = sub_145740();
    os_log_type_t v50 = sub_1461F0();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)id v51 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_3D2B4(a1, a2, &v77);
      sub_146610();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&def_94138, v49, v50, "(getContainerURL) Unable to get container for %s", v51, 0xCu);
      uint64_t v25 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v25 = 1;
    }
    a5 = v73;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, v25, 1, v75);
}

uint64_t type metadata accessor for QueryContainer()
{
  return self;
}

unint64_t sub_1E014()
{
  unint64_t result = qword_1A1B90;
  if (!qword_1A1B90)
  {
    sub_144F60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A1B90);
  }
  return result;
}

uint64_t sub_1E06C()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19BF38);
  sub_C584(v0, (uint64_t)qword_19BF38);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E210()
{
  v1[2] = v0;
  sub_A314(&qword_19BF98);
  v1[3] = swift_task_alloc();
  uint64_t v2 = sub_146190();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1461B0();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = sub_1461A0();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_1E3C8, 0, 0);
}

uint64_t sub_1E3C8()
{
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[10], v0[2], v0[8]);
  sub_20BA0(&qword_19BFA0, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results);
  sub_145F80();
  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v1 = sub_20BA0(&qword_19BFA8, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E528;
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[3];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_1E528()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v6 = v2 + 88;
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = *(void *)(v6 + 8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    BOOL v7 = sub_1E914;
  }
  else
  {
    BOOL v7 = sub_1E668;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1E668()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    sub_20BE8(v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v5 = v0[14];
    return v4(v5);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v9(v7, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v8, v7, v1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = v0[14];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = sub_7E054(0, *(void *)(v11 + 16) + 1, 1, v0[14]);
    }
    unint64_t v13 = *(void *)(v11 + 16);
    unint64_t v12 = *(void *)(v11 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t v11 = sub_7E054(v12 > 1, v13 + 1, 1, v11);
    }
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[7];
    uint64_t v16 = v0[4];
    uint64_t v17 = v0[5];
    *(void *)(v11 + 16) = v13 + 1;
    v9(v11+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v13, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v0[14] = v11;
    uint64_t v18 = sub_20BA0(&qword_19BFA8, (void (*)(uint64_t))&type metadata accessor for CSSearchQuery.Results.Iterator);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[15] = v19;
    void *v19 = v0;
    v19[1] = sub_1E528;
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[3];
    return dispatch thunk of AsyncIteratorProtocol.next()(v21, v20, v18);
  }
}

uint64_t sub_1E914()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1EB1C(char a1, void *aBlock)
{
  *(void *)(v2 + 16) = _Block_copy(aBlock);
  uint64_t v6 = (uint64_t (*)(char))((char *)&dword_19BF78 + dword_19BF78);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1EBD0;
  return v6(a1);
}

uint64_t sub_1EBD0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1EE50(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_19C000 + dword_19C000);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1EEF8;
  return v4();
}

uint64_t sub_1EEF8()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v2)
  {
    uint64_t v7 = (void *)sub_144D80();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

void sub_1F05C(const char *a1, double a2)
{
  if (qword_19AC80 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_145760();
  sub_C584(v4, (uint64_t)qword_19BF38);
  osos_log_t log = sub_145740();
  os_log_type_t v5 = sub_146210();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_A314(&qword_1A0A00);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v7 + 32) = Current - a2;
    uint64_t v9 = sub_145BD0();
    sub_3D2B4(v9, v10, &v12);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, oslog, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1F26C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_A314(&qword_19BFD8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v8 = sub_145B80();
  NSString v9 = sub_145B80();
  id v10 = [v7 initWithName:v8 bundleIdentifier:v9];

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_20F6C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  aBlock[3] = &unk_185DA8;
  unint64_t v13 = _Block_copy(aBlock);
  swift_release();
  [a2 searchableIndex:v10 reindexAllSearchableItemsWithAcknowledgementHandler:v13];
  _Block_release(v13);
}

uint64_t sub_1F60C(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  v2[4] = swift_getObjCClassMetadata();
  id v4 = a1;
  return _swift_task_switch(sub_1F698, 0, 0);
}

uint64_t sub_1F698()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  sub_144FF0();
  v0[5] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[6] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1F798;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1F798()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1F8B0, 0, 0);
}

uint64_t sub_1F8B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void (***)(void, void))(v0 + 24);
  sub_1F05C("SpotlightUtilities.reindexAllSearchableItems completed in %s seconds.", *(double *)(v0 + 40));

  v2[2](v2, 0);
  _Block_release(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_1F97C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SpotlightUtilities()
{
  return self;
}

uint64_t sub_1F9D4(char a1)
{
  *(unsigned char *)(v1 + 308) = a1;
  uint64_t v2 = sub_146190();
  *(void *)(v1 + 160) = v2;
  *(void *)(v1 + 168) = *(void *)(v2 - 8);
  *(void *)(v1 + 176) = swift_task_alloc();
  uint64_t v3 = sub_1461B0();
  *(void *)(v1 + 184) = v3;
  *(void *)(v1 + 192) = *(void *)(v3 - 8);
  *(void *)(v1 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_1FAF0, 0, 0);
}

uint64_t sub_1FAF0()
{
  sub_144FF0();
  *(void *)(v0 + 208) = v1;
  if (qword_19AC80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_145760();
  *(void *)(v0 + 216) = sub_C584(v2, (uint64_t)qword_19BF38);
  uint64_t v3 = sub_145740();
  os_log_type_t v4 = sub_146210();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = *(unsigned __int8 *)(v0 + 308);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    *(_DWORD *)(v0 + 304) = v5;
    sub_146610();
    _os_log_impl(&def_94138, v3, v4, "SpotlightUtilities.setDisableSearchInSpotlightFlag disableSearchInSpotlight: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }

  sub_1467D0(44);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v8 = sub_145B80();
  *(void *)(v0 + 224) = [v7 initWithQueryString:v8 queryContext:0];

  sub_1461C0();
  unint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_19BF80 + dword_19BF80);
  NSString v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v9;
  *NSString v9 = v0;
  v9[1] = sub_1FD18;
  return v11();
}

uint64_t sub_1FD18(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  os_log_type_t v4 = (void *)*v2;
  v4[30] = a1;
  v4[31] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[24] + 8))(v3[25], v3[23]);
  if (v1) {
    int v5 = sub_207BC;
  }
  else {
    int v5 = sub_1FE88;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1FE88()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_146210();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 134217984;
    *(void *)(v0 + 152) = *(void *)(v3 + 16);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag found %ld searchable items", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = *(void *)(v0 + 240);
  id v40 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v0 + 308)];
  *(void *)(v0 + 256) = v40;
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v39 = *(void (**)(void, unint64_t, void))(v7 + 16);
    unint64_t v8 = *(void *)(v0 + 240)
       + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    NSString v9 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v38 = *(void *)(v7 + 72);
    v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    while (1)
    {
      id v10 = (void *)sub_146180();
      id v11 = [v10 attributeSet];
      id v12 = [v11 disableSearchInSpotlight];

      if (!v12) {
        goto LABEL_11;
      }
      sub_C84C(0, &qword_19BF90);
      id v13 = v40;
      id v14 = v12;
      char v15 = sub_1464B0();

      if (v15)
      {
        (*v9)(*(void *)(v0 + 176), *(void *)(v0 + 160));
      }
      else
      {
LABEL_11:
        id v16 = [v10 attributeSet];
        [v16 setDisableSearchInSpotlight:v40];

        [v10 setIsUpdate:1];
        id v17 = v10;
        sub_145DC0();
        if (*(void *)((char *)&dword_10 + (*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8)) >> 1) {
          sub_145E20();
        }
        uint64_t v18 = *(void *)(v0 + 176);
        uint64_t v19 = *(void *)(v0 + 160);
        sub_145E50();
        sub_145E00();

        (*v9)(v18, v19);
      }
      v8 += v38;
      if (!--v6) {
        break;
      }
      v39(*(void *)(v0 + 176), v8, *(void *)(v0 + 160));
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_145740();
  os_log_type_t v21 = sub_146210();
  p_name = (char **)(&stru_190FF8 + 8);
  if (os_log_type_enabled(v20, v21))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    *(_DWORD *)id v23 = 138412290;
    id v25 = objc_allocWithZone((Class)CSSearchableIndex);
    NSString v26 = sub_145B80();
    NSString v27 = sub_145B80();
    id v28 = [v25 initWithName:v26 bundleIdentifier:v27];

    *(void *)(v0 + 144) = v28;
    p_name = &stru_190FF8.name;
    sub_146610();
    *id v24 = v28;
    _os_log_impl(&def_94138, v20, v21, "SpotlightUtilities.setDisableSearchInSpotlightFlag searchableIndex = %@", v23, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v29 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v30 = sub_145B80();
  NSString v31 = sub_145B80();
  id v32 = objc_msgSend(v29, p_name[498], v30, v31);
  *(void *)(v0 + 264) = v32;

  sub_C84C(0, &qword_19BF88);
  swift_bridgeObjectRetain();
  Class isa = sub_145DD0().super.isa;
  *(void *)(v0 + 272) = isa;
  swift_bridgeObjectRelease();
  sub_145BC0();
  NSString v34 = sub_145B80();
  *(void *)(v0 + 280) = v34;
  swift_bridgeObjectRelease();
  NSString v35 = sub_145B80();
  *(void *)(v0 + 288) = v35;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_204D4;
  uint64_t v36 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_219D0;
  *(void *)(v0 + 104) = &unk_185CF0;
  *(void *)(v0 + 112) = v36;
  [v32 indexSearchableItems:isa deleteSearchableItemsWithIdentifiers:0 clientState:0 clientStateName:0 protectionClass:v34 forBundleID:v35 options:256 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_204D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_20998;
  }
  else
  {
    os_log_type_t v2 = sub_205EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_205EC()
{
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);

  unint64_t v4 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_145740();
  os_log_type_t v6 = sub_146210();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_146930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    }
    NSString v9 = *(NSObject **)(v0 + 256);
    id v10 = *(void **)(v0 + 224);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 136) = v8;
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v5, v6, "SpotlightUtilities.setDisableSearchInSpotlightFlag update of %ld items was successful", v7, 0xCu);
    swift_slowDealloc();
    id v11 = v5;
    uint64_t v5 = v9;
  }
  else
  {
    id v10 = *(void **)(v0 + 256);
    id v11 = *(NSObject **)(v0 + 224);
    swift_bridgeObjectRelease_n();
  }

  sub_1F05C("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_207BC()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_1461F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    unint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v5;
    sub_146610();
    *unint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v1, v2, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v3, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1F05C("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_20998()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void **)(v0 + 272);
  os_log_type_t v2 = *(void **)(v0 + 280);
  uint64_t v5 = *(void **)(v0 + 256);
  unint64_t v4 = *(void **)(v0 + 264);
  os_log_type_t v6 = *(void **)(v0 + 224);
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_145740();
  os_log_type_t v8 = sub_1461F0();
  if (os_log_type_enabled(v7, v8))
  {
    NSString v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)NSString v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v11;
    sub_146610();
    *id v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v7, v8, "SpotlightUtilities.setDisableSearchInSpotlightFlag error %@", v9, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1F05C("SpotlightUtilities.setDisableSearchInSpotlightFlag completed in %s seconds.", *(double *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_20BA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20BE8(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19BF98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20C48()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_20C88()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_216D4;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_19BFB8 + dword_19BFB8);
  return v5(v2, v3);
}

uint64_t sub_20D40()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_216D4;
  os_log_type_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_19C1E0 + dword_19C1E0);
  return v6(v2, v3, v4);
}

uint64_t sub_20E04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  os_log_type_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_216D4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_19C1F0 + dword_19C1F0);
  return v8(a1, v4, v5, v6);
}

void sub_20ED0(uint64_t a1)
{
  sub_1F26C(a1, *(void **)(v1 + 16));
}

uint64_t sub_20ED8()
{
  uint64_t v1 = sub_A314(&qword_19BFD8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_20F6C()
{
  return sub_145ED0();
}

uint64_t sub_20FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_20FE4()
{
  return swift_release();
}

uint64_t sub_20FEC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_21024()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_216D4;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_19BFE0 + dword_19BFE0);
  return v4(v2);
}

uint64_t sub_210D8()
{
  return _swift_task_switch(sub_210F4, 0, 0);
}

uint64_t sub_210F4()
{
  sub_144FF0();
  v0[15] = v1;
  id v2 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v3 = sub_145B80();
  NSString v4 = sub_145B80();
  id v5 = [v2 initWithName:v3 bundleIdentifier:v4];
  v0[16] = v5;

  Class isa = sub_145DD0().super.isa;
  v0[17] = isa;
  v0[2] = v0;
  v0[3] = sub_2128C;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_219D0;
  v0[13] = &unk_185E48;
  v0[14] = v7;
  [v5 deleteSearchableItemsWithDomainIdentifiers:isa completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_2128C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    id v2 = sub_21418;
  }
  else {
    id v2 = sub_2139C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_2139C()
{
  uint64_t v1 = *(void **)(v0 + 136);
  double v2 = *(double *)(v0 + 120);

  sub_1F05C("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v2);
  NSString v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_21418()
{
  uint64_t v1 = (void *)*((void *)v0 + 17);
  double v2 = (void *)*((void *)v0 + 16);
  double v3 = v0[15];
  swift_willThrow();

  sub_1F05C("SpotlightUtilities.deleteAllSearchableItems completed in %s seconds.", v3);
  uint64_t v4 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v4();
}

uint64_t sub_214AC()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_214E4()
{
  char v2 = *(unsigned char *)(v0 + 16);
  double v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_21598;
  uint64_t v5 = (uint64_t (*)(char, void *))((char *)&dword_19C008 + dword_19C008);
  return v5(v2, v3);
}

uint64_t sub_21598()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21694()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_216D8()
{
  sub_144A20();
  swift_allocObject();
  sub_144A10();
  sub_26304();
  uint64_t v0 = sub_144A00();
  swift_release();
  return v0;
}

uint64_t sub_219D0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_A314(&qword_19C160);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

uint64_t sub_21A68()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19C030);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19C030);
  if (qword_19AF60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_21B30(char *a1, char *a2)
{
  return sub_56B20(*a1, *a2);
}

Swift::Int sub_21B3C()
{
  return sub_56BCC();
}

uint64_t sub_21B44()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_21BB8()
{
  return sub_571C8();
}

uint64_t sub_21BC0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_184738;
  v8._object = v3;
  Swift::Int v5 = sub_1469B0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_21C20(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v2 = 0xD00000000000001ALL;
  }
  unint64_t v3 = 0x8000000000149CC0;
  if (*v1) {
    unint64_t v3 = 0x8000000000149CE0;
  }
  *a1 = v2;
  a1[1] = v3;
}

id sub_21C64()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for JournalNotificationsManager()) init];
  qword_1A3A18 = (uint64_t)result;
  return result;
}

objc_class *sub_21C94()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = sub_1452C0();
  __chkstk_darwin(v1 - 8);
  uint64_t v73 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_145B50();
  __chkstk_darwin(v3 - 8);
  uint64_t v72 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v5 = (void *)sub_144F60();
  uint64_t v6 = *(v5 - 1);
  id v69 = v5;
  uint64_t v70 = v6;
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_promptManager;
  id v10 = objc_allocWithZone((Class)MOPromptManager);
  uint64_t v11 = v0;
  *(void *)&v0[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults;
  if (qword_19ADA8 != -1) {
    swift_once();
  }
  id v13 = (void *)qword_1A3B70;
  *(void *)&v11[v12] = qword_1A3B70;
  uint64_t v14 = &v11[OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_actionHandler];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  char v15 = self;
  id v16 = v13;
  id v17 = [v15 mainBundle];
  id v18 = [v17 bundleIdentifier];

  if (v18)
  {
    uint64_t v19 = sub_145BC0();
    uint64_t v21 = v20;

    if (v19 == 0xD000000000000011 && v21 == 0x800000000014AA20)
    {
      swift_bridgeObjectRelease();
LABEL_8:
      id v23 = [self currentNotificationCenter];
      *(void *)&v11[OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter] = v23;
      id v24 = [v15 mainBundle];
      *(void *)&v11[OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_bundle] = v24;
      goto LABEL_10;
    }
    char v22 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
  }
  id v25 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v26 = sub_145B80();
  id v27 = [v25 initWithBundleIdentifier:v26];

  *(void *)&v11[OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter] = v27;
  id v28 = objc_allocWithZone((Class)LSApplicationRecord);
  id v29 = sub_2582C(0xD000000000000011, 0x800000000014AA20, 0);
  id v30 = [v29 URL];

  sub_144EF0();
  id v31 = objc_allocWithZone((Class)NSBundle);
  sub_144EB0(v32);
  NSString v34 = v33;
  id v35 = [v31 initWithURL:v33];

  (*(void (**)(char *, id))(v70 + 8))(v8, v69);
  *(void *)&v11[OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_bundle] = v35;
LABEL_10:

  v75.receiver = v11;
  v75.super_class = ObjectType;
  uint64_t v36 = (objc_class *)objc_msgSendSuper2(&v75, "init");
  uint64_t v70 = OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter;
  uint64_t v37 = *(void **)((char *)v36 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter);
  sub_A314(&qword_19C130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_159A20;
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_159A30;
  uint64_t ObjectType = v36;
  uint64_t v38 = v36;
  id v69 = v37;
  unint64_t v67 = 0xD000000000000010;
  sub_145AE0();
  uint64_t v65 = OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_bundle;
  id v39 = *(id *)((char *)v38 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_bundle);
  sub_1452B0();
  sub_145C10();
  NSString v40 = sub_145B80();
  uint64_t v41 = self;
  id v42 = [v41 iconWithSystemImageName:v40];

  NSString v43 = sub_145B80();
  NSString v44 = sub_145B80();
  swift_bridgeObjectRelease();
  os_log_type_t v45 = self;
  id v46 = [v45 actionWithIdentifier:v43 title:v44 options:5 icon:v42];

  uint64_t v47 = v66;
  *(void *)(v66 + 32) = v46;
  sub_145AE0();
  id v48 = *(id *)((char *)v38 + v65);
  sub_1452B0();
  sub_145C10();
  NSString v49 = sub_145B80();
  id v50 = [v41 iconWithSystemImageName:v49];

  NSString v51 = sub_145B80();
  NSString v52 = sub_145B80();
  swift_bridgeObjectRelease();
  id v53 = [v45 actionWithIdentifier:v51 title:v52 options:1 icon:v50];

  *(void *)(v47 + 40) = v53;
  unint64_t v74 = v47;
  sub_145E00();
  NSString v54 = sub_145B80();
  sub_C84C(0, &qword_19C238);
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  Class v56 = sub_145DD0().super.isa;
  id v57 = [self categoryWithIdentifier:v54 actions:isa intentIdentifiers:v56 options:0];

  uint64_t v58 = inited;
  *(void *)(inited + 32) = v57;
  unint64_t v74 = v58;
  sub_145E00();
  unint64_t v59 = v74;
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v60) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (*(void *)((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFFF8))) {
LABEL_12:
  }
    sub_2702C(v59, &qword_19C250, &qword_19C240);
LABEL_14:
  swift_bridgeObjectRelease();
  sub_C84C(0, &qword_19C240);
  sub_278B8();
  Class v61 = sub_145FB0().super.isa;
  swift_bridgeObjectRelease();
  id v62 = v69;
  [v69 setNotificationCategories:v61];

  id v63 = *(id *)((char *)ObjectType + v70);
  [v63 setDelegate:v38];

  return v38;
}

uint64_t sub_22588(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 144) = a4;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return _swift_task_switch(sub_225B0, 0, 0);
}

uint64_t sub_225B0()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void **)(*(void *)(v0 + 56) + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults);
  *(void *)(v0 + 64) = v3;
  [v3 setIsJournalingScheduleEnabled:v1];
  if (v2)
  {
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    id v7 = [v3 journalingScheduleData];
    if (!v7) {
      goto LABEL_5;
    }
    Swift::String v8 = v7;
    uint64_t v9 = sub_144FA0();
    unint64_t v11 = v10;

    uint64_t v6 = sub_345E8();
    uint64_t v5 = v12;
    uint64_t v4 = v13;
    sub_C52C(v9, v11);
    if (!v6)
    {
LABEL_5:
      uint64_t v6 = sub_261E0((uint64_t)&off_184788);
      swift_bridgeObjectRelease();
      uint64_t v4 = 0;
      uint64_t v5 = 20;
    }
  }
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 72) = v6;
  int v14 = *(unsigned __int8 *)(v0 + 144);
  id v15 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain();
  double v16 = COERCE_DOUBLE([v15 initWithInteger:v5]);
  *(double *)(v0 + 96) = v16;
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v4];
  id v18 = v17;
  *(void *)(v0 + 104) = v17;
  if (v14 == 1)
  {
    uint64_t v19 = *(void *)(v6 + 16);
    if (v19)
    {
      id v44 = v17;
      double v45 = v16;
      uint64_t v46 = v0;
      swift_bridgeObjectRetain();
      sub_1468B0();
      int64_t v20 = sub_25E20(v6);
      int v22 = v21;
      char v24 = v23 & 1;
      id v25 = (char *)(v6 + 56);
      uint64_t v0 = 1;
      while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << *(unsigned char *)(v6 + 32))
      {
        if (((*(void *)&v25[((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v20) & 1) == 0) {
          goto LABEL_28;
        }
        if (*(_DWORD *)(v6 + 36) != v22) {
          goto LABEL_29;
        }
        uint64_t v26 = *(void *)(*(void *)(v6 + 48) + 8 * v20);
        if (__OFADD__(v26, 1)) {
          goto LABEL_30;
        }
        [objc_allocWithZone((Class)NSNumber) initWithInteger:v26 + 1];
        sub_146890();
        double v16 = _swiftEmptyArrayStorage[2];
        sub_1468C0();
        sub_1468D0();
        sub_1468A0();
        int64_t v27 = sub_25EC0(v20, v22, v24 & 1, v6);
        int64_t v20 = v27;
        int v22 = v28;
        char v24 = v29 & 1;
        if (!--v19)
        {
          sub_262F8(v27, v28, v29 & 1);
          swift_bridgeObjectRelease();
          double v16 = v45;
          uint64_t v0 = v46;
          id v18 = v44;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      swift_once();
      goto LABEL_21;
    }
  }
LABEL_16:
  id v30 = objc_allocWithZone((Class)MONotificationScheduleItem);
  sub_C84C(0, &qword_19BF90);
  double v16 = COERCE_DOUBLE(*(id *)&v16);
  id v25 = v18;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v32 = [v30 initScheduleWithHour:*(void *)&v16 minute:v25 weekdays:isa];
  *(void *)(v0 + 112) = v32;

  if (v32)
  {
    uint64_t v33 = *(void *)(v0 + 56);
    uint64_t v34 = swift_task_alloc();
    *(void *)(v0 + 120) = v34;
    *(void *)(v34 + 16) = v33;
    *(void *)(v34 + 24) = v32;
    id v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v35;
    uint64_t v36 = sub_A314((uint64_t *)&unk_19C110);
    *id v35 = v0;
    v35[1] = sub_22AD0;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000028, 0x800000000014ABC0, sub_262F0, v34, v36);
  }
  swift_bridgeObjectRelease();
  if (qword_19AC88 != -1) {
    goto LABEL_31;
  }
LABEL_21:
  uint64_t v37 = sub_145760();
  sub_C584(v37, (uint64_t)qword_19C030);
  *(double *)&uint64_t v38 = COERCE_DOUBLE(sub_145740());
  os_log_type_t v39 = sub_1461F0();
  if (os_log_type_enabled(v38, v39))
  {
    NSString v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v40 = 0;
    _os_log_impl(&def_94138, v38, v39, "Invalid notification schedule components", v40, 2u);
    swift_slowDealloc();
    double v41 = *(double *)&v38;
  }
  else
  {
    double v41 = v16;
    double v16 = *(double *)&v38;
  }

  id v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_22AD0()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_22DD0;
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_22C0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_22C0C()
{
  if (qword_19AC88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19C030);
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&def_94138, v2, v3, "Notification registered successfully", v4, 2u);
    swift_slowDealloc();
  }
  int v5 = *(unsigned __int8 *)(v0 + 144);

  if (v5 == 1)
  {
    uint64_t v6 = sub_216D8();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    if (v8 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = sub_144F90().super.isa;
      sub_120B4(v6, v8);
    }
    uint64_t v13 = *(void **)(v0 + 104);
    uint64_t v12 = *(void **)(v0 + 112);
    int v14 = *(void **)(v0 + 96);
    [*(id *)(v0 + 64) setJournalingScheduleData:isa];
  }
  else
  {
    unint64_t v11 = *(void **)(v0 + 104);
    unint64_t v10 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_22DD0()
{
  if (qword_19AC88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19C030);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    int v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    sub_146610();
    *int v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Error registering notification: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v8 = (void *)v0[13];
  unint64_t v7 = (void *)v0[14];
  uint64_t v9 = (void *)v0[12];

  swift_willThrow();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_22FE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_A314(&qword_19C128);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_promptManager);
  sub_A314(&qword_19C130);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_159A20;
  *(void *)(v10 + 32) = a3;
  aBlock[0] = v10;
  sub_145E00();
  sub_C84C(0, &qword_19C138);
  id v11 = a3;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_26364;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_26428;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23244;
  aBlock[3] = &unk_185FB8;
  double v16 = _Block_copy(aBlock);
  swift_release();
  [v9 setupMomentsNotificationsWithSchedule:isa options:0 handler:v16];
  _Block_release(v16);
}

void sub_23244(uint64_t a1, void *a2)
{
  os_log_type_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_232B0()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_232D0, 0, 0);
}

uint64_t sub_232D0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  uint64_t v4 = sub_A314(&qword_19C1A0);
  *os_log_type_t v3 = v0;
  v3[1] = sub_233D4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000020, 0x800000000014AD10, sub_274DC, v2, v4);
}

uint64_t sub_233D4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_23850;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_234F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_234F0()
{
  uint64_t v26 = v0;
  uint64_t v1 = (double **)v0[2];
  if ((unint64_t)v1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_146930();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v14 = 0;
    uint64_t v6 = 0;
    goto LABEL_26;
  }
  if (!*(void *)((char *)&dword_10 + ((unint64_t)v1 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_24;
  }
LABEL_3:
  if (((unint64_t)v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = (double *)sub_146810();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + ((unint64_t)v1 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    uint64_t v2 = v1[4];
  }
  os_log_type_t v3 = v2;
  swift_bridgeObjectRelease();
  id v4 = [v3 weekdays];
  sub_C84C(0, &qword_19BF90);
  unint64_t v5 = sub_145DE0();

  uint64_t v6 = sub_5076C(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    int64_t v7 = *((void *)v6 + 2);
    if (v7)
    {
      char v24 = _swiftEmptyArrayStorage;
      uint64_t v1 = &v24;
      sub_2CBFC(0, v7, 0);
      uint64_t v8 = 0;
      uint64_t v9 = (uint64_t)v24;
      do
      {
        double v10 = v6[v8 + 4];
        uint64_t v11 = *(void *)&v10 - 1;
        if (__OFSUB__(*(void *)&v10, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        char v24 = (double *)v9;
        unint64_t v13 = *(void *)(v9 + 16);
        unint64_t v12 = *(void *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          uint64_t v1 = &v24;
          sub_2CBFC(v12 > 1, v13 + 1, 1);
          uint64_t v9 = (uint64_t)v24;
        }
        ++v8;
        *(void *)(v9 + 16) = v13 + 1;
        *(void *)(v9 + 8 * v13 + 32) = v11;
      }
      while (v7 != v8);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_F36B4(v9);
      swift_release();
      id v15 = [v3 hour];
      char v24 = 0;
      char v25 = 1;
      sub_146010();

      if ((v25 & 1) != 0
        || (uint64_t v6 = v24,
            id v16 = [v3 minute],
            char v24 = 0,
            char v25 = 1,
            sub_146010(),
            v16,
            v25 == 1))
      {
        swift_bridgeObjectRelease();

        goto LABEL_25;
      }
      int64_t v7 = (int64_t)v24;
      uint64_t v17 = *(void **)(v0[4] + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults);
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_216D8();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      if (v20 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = sub_144F90().super.isa;
        sub_120B4(v18, v20);
      }
      [v17 setJournalingScheduleData:isa];
    }
    else
    {
      swift_bridgeObjectRelease();

      uint64_t v14 = 0;
      uint64_t v6 = 0;
    }
    goto LABEL_27;
  }

  uint64_t v14 = 0;
LABEL_26:
  int64_t v7 = 0;
LABEL_27:
  char v23 = (void (*)(uint64_t, double *, int64_t))v0[1];
  v23(v14, v6, v7);
}

uint64_t sub_23850()
{
  swift_task_dealloc();
  if (qword_19AC88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19C030);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    unint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)id v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v6;
    sub_146610();
    *unint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Could not fetch notification schedule: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  int64_t v7 = *(uint64_t (**)(void, void, void))(v0 + 8);
  return v7(0, 0, 0);
}

void sub_23A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314((uint64_t *)&unk_19C1A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  int64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_promptManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_2757C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CA0;
  aBlock[3] = &unk_186020;
  double v10 = _Block_copy(aBlock);
  swift_release();
  [v7 getMomentsNotificationsSchedule:v10];
  _Block_release(v10);
}

uint64_t sub_23C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_errorRetain();
    sub_A314((uint64_t *)&unk_19C1A8);
    return sub_145EC0();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_A314((uint64_t *)&unk_19C1A8);
    return sub_145ED0();
  }
}

uint64_t sub_23CA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  int64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_C84C(0, &qword_19C138);
    uint64_t v6 = sub_145DE0();
  }
  if (a3)
  {
    type metadata accessor for MONotificationSetupKey(0);
    sub_26E24(&qword_19B490, type metadata accessor for MONotificationSetupKey);
    a3 = sub_1459E0();
  }
  swift_retain();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23DB8(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 384) = a2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = v2;
  uint64_t v4 = sub_145450();
  *(void *)(v3 + 192) = v4;
  *(void *)(v3 + 200) = *(void *)(v4 - 8);
  *(void *)(v3 + 208) = swift_task_alloc();
  uint64_t v5 = sub_144C60();
  *(void *)(v3 + 216) = v5;
  *(void *)(v3 + 224) = *(void *)(v5 - 8);
  *(void *)(v3 + 232) = swift_task_alloc();
  sub_145B30();
  *(void *)(v3 + 240) = swift_task_alloc();
  sub_1452C0();
  *(void *)(v3 + 248) = swift_task_alloc();
  sub_145B50();
  *(void *)(v3 + 256) = swift_task_alloc();
  sub_A314(&qword_19C150);
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = swift_task_alloc();
  uint64_t v6 = sub_145230();
  *(void *)(v3 + 280) = v6;
  *(void *)(v3 + 288) = *(void *)(v6 - 8);
  *(void *)(v3 + 296) = swift_task_alloc();
  *(void *)(v3 + 304) = swift_task_alloc();
  return _swift_task_switch(sub_24008, 0, 0);
}

uint64_t sub_24008()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for StreakSummary();
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 28));
  if (v3 < 2)
  {
LABEL_4:
    uint64_t v8 = *(void **)(*(void *)(v0 + 184)
                  + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter);
    Class isa = sub_145DD0().super.isa;
    [v8 removePendingNotificationRequestsWithIdentifiers:isa];

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 272);
  sub_2647C(v1 + *(int *)(v2 + 24), v6);
  int64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 312) = v7;
  *(void *)(v0 + 320) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v7(v6, 1, v4) == 1)
  {
    sub_1248C(*(void *)(v0 + 272), &qword_19C150);
    goto LABEL_4;
  }
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 280);
  uint64_t v14 = *(void *)(v0 + 288);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 184);
  char v17 = *(unsigned char *)(v0 + 384);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  *(void *)(v0 + 328) = v18;
  *(void *)(v0 + 336) = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v18(v12, v15, v13);
  id v19 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  *(void *)(v0 + 344) = v19;
  sub_145AE0();
  id v20 = *(id *)(v16 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_bundle);
  sub_1452B0();
  sub_145C10();
  NSString v21 = sub_145B80();
  swift_bridgeObjectRelease();
  [v19 setTitle:v21];

  NSString v22 = sub_145B80();
  [v19 setCategoryIdentifier:v22];

  sub_145B20();
  v49._object = (void *)0x800000000014AC40;
  v49._countAndFlagsBits = 0x1000000000000017;
  sub_145B10(v49);
  if (v17)
  {
    *(void *)(v0 + 152) = v3;
    sub_145B00();
    v23._countAndFlagsBits = 0xD00000000000003CLL;
    char v24 = " weeks in a row. Keep your streak going by journaling today.";
  }
  else
  {
    *(void *)(v0 + 168) = v3;
    sub_145B00();
    v23._countAndFlagsBits = 0xD00000000000003BLL;
    char v24 = " days in a row. Keep your streak going by journaling today.";
  }
  v23._object = (void *)((unint64_t)(v24 - 32) | 0x8000000000000000);
  sub_145B10(v23);
  sub_145B40();
  id v25 = v20;
  sub_1452B0();
  sub_145C10();
  NSString v26 = sub_145B80();
  swift_bridgeObjectRelease();
  [v19 setBody:v26];

  if (qword_19B020 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v27 = *(void *)(v0 + 208);
  uint64_t v29 = *(void *)(v0 + 192);
  uint64_t v30 = sub_C584(v29, (uint64_t)qword_1A3E78);
  *(void *)(v0 + 352) = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v30, v29);
  if (qword_19B028 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 200);
  uint64_t v31 = *(void *)(v0 + 208);
  uint64_t v33 = *(void *)(v0 + 192);
  sub_145340();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  uint64_t v34 = sub_144BE0();
  if ((v35 & 1) == 0 && (v36 = __OFSUB__(v34, 1), uint64_t v37 = v34 - 1, v36))
  {
    __break(1u);
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 184);
    sub_144BF0();
    os_log_type_t v39 = *(void **)(v38 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_defaults);
    [v39 streakReminderHour];
    sub_144C00();
    [v39 streakReminderMinute];
    sub_144C20();
    Class v40 = sub_144BD0().super.isa;
    id v41 = [self triggerWithDateMatchingComponents:v40 repeats:0];
    *(void *)(v0 + 360) = v41;

    id v42 = v19;
    id v43 = v41;
    NSString v44 = sub_145B80();
    id v45 = [self requestWithIdentifier:v44 content:v42 trigger:v43];
    *(void *)(v0 + 368) = v45;

    uint64_t v46 = *(void **)(v38 + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_notificationCenter);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_246C4;
    uint64_t v47 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_219D0;
    *(void *)(v0 + 104) = &unk_185FE0;
    *(void *)(v0 + 112) = v47;
    [v46 addNotificationRequest:v45 withCompletionHandler:v0 + 80];
    uint64_t v37 = v0 + 16;
  }
  return _swift_continuation_await(v37);
}

uint64_t sub_246C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 376) = v1;
  if (v1) {
    uint64_t v2 = sub_24BA0;
  }
  else {
    uint64_t v2 = sub_247D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_247D4()
{
  uint64_t v35 = v0;
  if (qword_19AC88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19C030);
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461E0();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v33 = v3;
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 264);
    int64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)int64_t v7 = 136315138;
    swift_beginAccess();
    sub_1453C0();
    if (v4(v6, 1, v5) == 1)
    {
      uint64_t v8 = *(void *)(v0 + 264);
      sub_145120();
      sub_1248C(v8, &qword_19C150);
    }
    else
    {
      (*(void (**)(void, void, void))(v0 + 328))(*(void *)(v0 + 296), *(void *)(v0 + 264), *(void *)(v0 + 280));
    }
    uint64_t v27 = *(void **)(v0 + 368);
    uint64_t v28 = *(void **)(v0 + 360);
    uint64_t v17 = *(void *)(v0 + 296);
    uint64_t v29 = *(void **)(v0 + 344);
    uint64_t v30 = *(void *)(v0 + 304);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 232);
    sub_26E24(&qword_19C158, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v21 = sub_146B50();
    unint64_t v23 = v22;
    char v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v24(v17, v19);
    *(void *)(v0 + 160) = sub_3D2B4(v21, v23, &v34);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v2, v33, "Scheduled next streak reminder notification for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v24(v30, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v32, v31);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 360);
    double v10 = *(void **)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 304);
    uint64_t v12 = *(void *)(v0 + 280);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_24BA0()
{
  swift_willThrow();
  if (qword_19AC88 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19C030);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v6;
    sub_146610();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "Failed to schedule streak reminder: %@", v4, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  int64_t v7 = v2;
  uint64_t v8 = (void *)v0[46];
  uint64_t v9 = (void *)v0[45];
  double v10 = (void *)v0[43];
  uint64_t v11 = v0[38];
  uint64_t v12 = v0[36];
  uint64_t v18 = v0[35];
  uint64_t v13 = v0[29];
  uint64_t v15 = v0[27];
  uint64_t v14 = v0[28];

  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_24FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_145F30();
  v4[6] = sub_145F20();
  uint64_t v6 = sub_145EB0();
  return _swift_task_switch(sub_25088, v6, v5);
}

uint64_t sub_25088()
{
  uint64_t v1 = (void *)v0[5];
  os_log_type_t v3 = (void *)v0[3];
  uint64_t v2 = (const void *)v0[4];
  uint64_t v4 = (void *)v0[2];
  swift_release();
  v0[7] = _Block_copy(v2);
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_19C230 + dword_19C230);
  id v5 = v4;
  id v6 = v3;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_2516C;
  uint64_t v9 = v0[3];
  return v11(v9);
}

uint64_t sub_2516C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 56);
  uint64_t v2 = *(void **)(*v0 + 40);
  os_log_type_t v3 = *(void **)(*v0 + 24);
  uint64_t v4 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  id v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_25460(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  id v10 = a4;
  return _swift_task_switch(sub_254F8, 0, 0);
}

uint64_t sub_254F8()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void (**)(void, void))v0[5];
  uint64_t v4 = (void *)v0[2];
  os_log_type_t v3 = (void *)v0[3];
  id v5 = [v3 request];
  id v6 = [v5 content];

  id v7 = [v6 categoryIdentifier];
  uint64_t v8 = sub_145BC0();
  id v10 = v9;

  v11._rawValue = &off_1846E8;
  v17._countAndFlagsBits = v8;
  v17._object = v10;
  Swift::Int v12 = sub_1469B0(v11, v17);
  swift_bridgeObjectRelease();

  if (v12 == 1) {
    uint64_t v13 = 26;
  }
  else {
    uint64_t v13 = 0;
  }
  v1[2](v1, v13);
  _Block_release(v1);
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t type metadata accessor for JournalNotificationsManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JournalNotificationsManager.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2579CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalNotificationsManager.Action()
{
  return &type metadata for JournalNotificationsManager.Action;
}

unint64_t sub_257D8()
{
  unint64_t result = qword_19C0F8;
  if (!qword_19C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_19C0F8);
  }
  return result;
}

id sub_2582C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_145B80();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_144D90();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_25908(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *unsigned int v4 = v3;
  v4[1] = sub_216D4;
  return v6();
}

uint64_t sub_259D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  NSString v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *NSString v5 = v4;
  v5[1] = sub_216D4;
  return v7();
}

uint64_t sub_25AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145F50();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_145F40();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1248C(a1, &qword_19BFB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_145EB0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25C4C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25D28;
  return v6(a1);
}

uint64_t sub_25D28()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25E20(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_25EC0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void *sub_25FA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_A314(&qword_19C1B8);
    uint64_t v3 = sub_1467C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_145BC0();
      sub_146C80();
      id v7 = v6;
      sub_145C70();
      Swift::Int v8 = sub_146CD0();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_145BC0();
        uint64_t v17 = v16;
        if (v15 == sub_145BC0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_146B90();
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_145BC0();
          uint64_t v24 = v23;
          if (v22 == sub_145BC0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_146B90();
          swift_bridgeObjectRelease();
          unint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_261D4(uint64_t a1)
{
  return sub_2739C(a1, &qword_19C258);
}

uint64_t sub_261E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_A314(&qword_19C140);
    uint64_t v3 = sub_1467C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = sub_146C70();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

void sub_262F0(uint64_t a1)
{
  sub_22FE0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_262F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_26304()
{
  unint64_t result = qword_19C120;
  if (!qword_19C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C120);
  }
  return result;
}

uint64_t sub_26358()
{
  return sub_274F0(&qword_19C128);
}

uint64_t sub_26364()
{
  return sub_145ED0();
}

uint64_t sub_263F0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_26428(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 16);
  swift_errorRetain();
  return v3(a1);
}

uint64_t sub_26464(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_26474()
{
  return swift_release();
}

uint64_t sub_2647C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_264E4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_145F30();
  v2[4] = sub_145F20();
  uint64_t v4 = sub_145EB0();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_2657C, v4, v3);
}

uint64_t sub_2657C()
{
  uint64_t v1 = *(void *)(v0 + 24) + OBJC_IVAR____TtC15JournalSettings27JournalNotificationsManager_actionHandler;
  uint64_t v2 = *(int **)v1;
  *(void *)(v0 + 56) = *(void *)v1;
  *(void *)(v0 + 64) = *(void *)(v1 + 8);
  if (!v2)
  {
    swift_release();
    if (qword_19AC88 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_145760();
    sub_C584(v17, (uint64_t)qword_19C030);
    uint64_t v18 = sub_145740();
    os_log_type_t v19 = sub_1461F0();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v20 = 0;
      _os_log_impl(&def_94138, v18, v19, "Received a notification response from outside the main app; ignoring.",
        v20,
        2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  uint64_t v3 = *(void **)(v0 + 16);
  swift_retain();
  id v4 = [v3 actionIdentifier];
  uint64_t v5 = sub_145BC0();
  uint64_t v7 = v6;

  v8._rawValue = &off_184738;
  v36._countAndFlagsBits = v5;
  v36._object = v7;
  unint64_t v9 = sub_1469B0(v8, v36);
  swift_bridgeObjectRelease();
  if (v9 >= 2)
  {
    id v10 = [*(id *)(v0 + 16) actionIdentifier];
    uint64_t v11 = sub_145BC0();
    uint64_t v13 = v12;

    if (v11 == sub_145BC0() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        goto LABEL_20;
      }
    }
    id v21 = [*(id *)(v0 + 16) notification];
    id v22 = [v21 request];

    id v23 = [v22 content];
    id v24 = [v23 categoryIdentifier];

    uint64_t v25 = sub_145BC0();
    char v27 = v26;

    v28._rawValue = &off_1846E8;
    v37._countAndFlagsBits = v25;
    v37._object = v27;
    Swift::Int v29 = sub_1469B0(v28, v37);
    swift_bridgeObjectRelease();
    if (v29 != 1)
    {
LABEL_20:
      sub_278A8((uint64_t)v2);
      swift_release();
LABEL_21:
      os_log_type_t v33 = *(uint64_t (**)(void))(v0 + 8);
      return v33();
    }
    unint64_t v9 = 0;
  }
  id v30 = [*(id *)(v0 + 16) notification];
  *(void *)(v0 + 72) = v30;
  uint64_t v34 = (uint64_t (*)(id, unint64_t))((char *)v2 + *v2);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_26960;
  return v34(v30, v9);
}

uint64_t sub_26960()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 72);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_26AA0, v4, v3);
}

uint64_t sub_26AA0()
{
  sub_278A8(*(void *)(v0 + 56));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_26B0C(uint64_t a1)
{
  uint64_t v2 = sub_145430();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_A314(&qword_19C168);
    uint64_t v9 = sub_1467C0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_26E24(&qword_19C170, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_145A10();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_26E24(&qword_19C178, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_145AD0();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_26E24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_26E6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_A314((uint64_t *)&unk_19C1C0);
    uint64_t v3 = sub_1467C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_146C80();
      swift_bridgeObjectRetain();
      sub_145C70();
      Swift::Int result = sub_146CD0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_146B90(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_146B90();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_27010(unint64_t a1)
{
}

void sub_2702C(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_146930();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_A314(a2);
      uint64_t v6 = (void *)sub_1467C0();
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v5) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_146930();
      swift_bridgeObjectRelease();
      if (!v8) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_3;
  }
  uint64_t v6 = &_swiftEmptySetSingleton;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return;
  }
LABEL_9:
  uint64_t v10 = (char *)(v6 + 7);
  uint64_t v46 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v12 = sub_146810();
      BOOL v13 = __OFADD__(v11++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v14 = v12;
      Swift::Int v15 = sub_1464A0(v6[5]);
      uint64_t v16 = -1 << *((unsigned char *)v6 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        sub_C84C(0, a3);
        id v21 = *(id *)(v6[6] + 8 * v17);
        char v22 = sub_1464B0();

        if (v22)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v23 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v23;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)&v10[8 * (v17 >> 6)];
          uint64_t v20 = 1 << v17;
          if ((v19 & (1 << v17)) == 0) {
            break;
          }
          id v24 = *(id *)(v6[6] + 8 * v17);
          char v25 = sub_1464B0();

          if (v25) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v10[8 * v18] = v20 | v19;
      *(void *)(v6[6] + 8 * v17) = v14;
      uint64_t v26 = v6[2];
      BOOL v13 = __OFADD__(v26, 1);
      uint64_t v27 = v26 + 1;
      if (v13) {
        goto LABEL_37;
      }
      v6[2] = v27;
LABEL_12:
      if (v11 == v46) {
        return;
      }
    }
  }
  uint64_t v28 = 0;
  uint64_t v44 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (v28 != v44)
  {
    Swift::Int v29 = v6[5];
    id v30 = *(id *)(a1 + 32 + 8 * v28);
    Swift::Int v31 = sub_1464A0(v29);
    uint64_t v32 = -1 << *((unsigned char *)v6 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
    uint64_t v36 = 1 << v33;
    if (((1 << v33) & v35) != 0)
    {
      sub_C84C(0, a3);
      id v37 = *(id *)(v6[6] + 8 * v33);
      char v38 = sub_1464B0();

      if (v38) {
        goto LABEL_23;
      }
      uint64_t v39 = ~v32;
      unint64_t v33 = (v33 + 1) & v39;
      unint64_t v34 = v33 >> 6;
      uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
      uint64_t v36 = 1 << v33;
      if ((v35 & (1 << v33)) != 0)
      {
        while (1)
        {
          id v40 = *(id *)(v6[6] + 8 * v33);
          char v41 = sub_1464B0();

          if (v41) {
            break;
          }
          unint64_t v33 = (v33 + 1) & v39;
          unint64_t v34 = v33 >> 6;
          uint64_t v35 = *(void *)&v10[8 * (v33 >> 6)];
          uint64_t v36 = 1 << v33;
          if ((v35 & (1 << v33)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v8 = v46;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v8 = v46;
    }
    *(void *)&v10[8 * v34] = v36 | v35;
    *(void *)(v6[6] + 8 * v33) = v30;
    uint64_t v42 = v6[2];
    BOOL v13 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v13) {
      goto LABEL_38;
    }
    v6[2] = v43;
LABEL_24:
    if (++v28 == v8) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

Swift::Int sub_27390(uint64_t a1)
{
  return sub_2739C(a1, &qword_19C190);
}

Swift::Int sub_2739C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_A314(a2);
    uint64_t v4 = sub_1467C0();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v7 = a1 + 32;
    while (1)
    {
      Swift::UInt v8 = *(unsigned __int8 *)(v7 + v5);
      sub_146C80();
      sub_146C90(v8);
      Swift::Int result = sub_146CD0();
      uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v15 + v11) == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v8;
      uint64_t v17 = *(void *)(v4 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2) {
        return v4;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_274DC(uint64_t a1)
{
  sub_23A68(a1, *(void *)(v1 + 16));
}

uint64_t sub_274E4()
{
  return sub_274F0((uint64_t *)&unk_19C1A8);
}

uint64_t sub_274F0(uint64_t *a1)
{
  uint64_t v2 = sub_A314(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_2757C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_A314((uint64_t *)&unk_19C1A8);

  return sub_23C1C(a1, a2, a3);
}

uint64_t sub_2760C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_216D4;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_19C1D0 + dword_19C1D0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_276D4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21598;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_19C200 + dword_19C200);
  return v6(a1, v4);
}

uint64_t sub_27790()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_277E0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_21598;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_19C210 + dword_19C210);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_278A8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_278B8()
{
  unint64_t result = qword_19C248;
  if (!qword_19C248)
  {
    sub_C84C(255, &qword_19C240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C248);
  }
  return result;
}

uint64_t sub_2792C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_146930();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  _s15ReflectionAssetCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_146810();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if ([v5 isKindOfClass:ObjCClassFromMetadata]) {
      break;
    }

    ++v4;
    if (v7 == v2) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

uint64_t sub_27A6C(void *a1)
{
  sub_2B758(&v10);
  unint64_t v2 = v13;
  if (v13 >> 60 == 11)
  {
    id v3 = objc_allocWithZone((Class)NSAttributedString);
    NSString v4 = sub_145B80();
    [v3 initWithString:v4];

    return 0;
  }
  else
  {
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    if (v11) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = v10;
    }
    if (v13 >> 60 == 15)
    {
    }
    else
    {
      sub_27BC0(v12, v13);
      sub_9C5C(v8, v2);

      sub_27BA4(v6, v7, v8, v2);
    }
    sub_27BA4(v6, v7, v8, v2);
  }
  return v5;
}

uint64_t sub_27BA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_120B4(a3, a4);
  }
  return result;
}

uint64_t sub_27BC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_C4D4(a1, a2);
  }
  return a1;
}

uint64_t sub_27BD4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19C2C0);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19C2C0);
  if (qword_19AF48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D28);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_1463D0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_A314(&qword_19BE88) - 8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 + 64);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_27DC8, 0, 0);
}

uint64_t sub_27DC8()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];
  uint64_t v7 = v0[5];
  sub_2858C(v0[3], v1);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  v0[12] = v10;
  *(void *)(v10 + 16) = v7;
  sub_28730(v1, v10 + v9);
  *(void *)(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v12;
  *uint64_t v12 = v0;
  v12[1] = sub_27F40;
  uint64_t v13 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v13, sub_28798, v10, &type metadata for Int);
}

uint64_t sub_27F40()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_2814C;
  }
  else {
    uint64_t v5 = sub_280D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_280D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2814C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_281BC(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4 = sub_28838(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = sub_1463E0();

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1)
{
  id v1 = sub_28838(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v2 = sub_1463E0();

  return v2;
}

uint64_t _sSo11NSPredicateC15JournalSettingsE17entryDateInterval8intervalAB10Foundation0eF0V_tFZ_0()
{
  uint64_t v25 = sub_145450();
  uint64_t v0 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v27 = sub_C84C(0, (unint64_t *)&qword_19C2E8);
  sub_A314(&qword_1A0A00);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1598D0;
  sub_144AA0();
  sub_145410();
  sub_1452F0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v25);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v14, v3);
  Class isa = sub_145180().super.isa;
  v16(v12, v3);
  uint64_t v18 = sub_C84C(0, &qword_19C2F0);
  *(void *)(v15 + 56) = v18;
  unint64_t v19 = sub_28E40();
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 32) = isa;
  sub_144A90();
  uint64_t v20 = v26;
  sub_36364(v26);
  v16(v9, v3);
  uint64_t v21 = v20;
  Class v22 = sub_145180().super.isa;
  v16((char *)v21, v3);
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 104) = v19;
  *(void *)(v15 + 72) = v22;
  return sub_146160();
}

uint64_t sub_2858C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19BE88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_285F4()
{
  uint64_t v1 = *(void *)(sub_A314(&qword_19BE88) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_144AB0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_28730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19BE88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_28798(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_A314(&qword_19BE88) - 8);
  sub_281BC(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_28838(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19BE88);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_144AB0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = sub_145B80();
  id v11 = [v9 initWithEntityName:v10];

  sub_2858C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D0AC((uint64_t)v4);
    if (qword_19AEE0 != -1) {
      swift_once();
    }
    [v11 setPredicate:static NSPredicate.validEntries];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_A314(&qword_19C130);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_159A30;
    if (qword_19AEE0 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)static NSPredicate.validEntries;
    *(void *)(v12 + 32) = static NSPredicate.validEntries;
    id v14 = v13;
    *(void *)(v12 + 40) = _sSo11NSPredicateC15JournalSettingsE17entryDateInterval8intervalAB10Foundation0eF0V_tFZ_0();
    v18[1] = v12;
    sub_145E00();
    sub_C84C(0, (unint64_t *)&qword_19C2E8);
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [self andPredicateWithSubpredicates:isa];

    [v11 setPredicate:v16];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t sub_28B50(uint64_t a1)
{
  id v1 = sub_28838(a1);
  [v1 setReturnsObjectsAsFaults:1];
  sub_A314(&qword_19C130);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_159A20;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = sub_145B80();
  id v5 = [v3 initWithKey:v4 ascending:0];

  *(void *)(v2 + 32) = v5;
  sub_145E00();
  sub_C84C(0, &qword_19C2E0);
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v1 setSortDescriptors:isa];

  type metadata accessor for JournalEntryMO();
  uint64_t v7 = sub_1463F0();

  return v7;
}

unint64_t sub_28E40()
{
  unint64_t result = qword_19C2F8;
  if (!qword_19C2F8)
  {
    sub_C84C(255, &qword_19C2F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C2F8);
  }
  return result;
}

uint64_t sub_28EA8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_28EE0()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19C300);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19C300);
  if (qword_19AF70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3DA0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for PersistentCache()
{
  return sub_145A4();
}

NSString sub_28FC0()
{
  NSString result = sub_145B80();
  qword_1A3A20 = (uint64_t)result;
  return result;
}

NSString sub_28FFC()
{
  NSString result = sub_145B80();
  qword_1A3A28 = (uint64_t)result;
  return result;
}

uint64_t _s4KeysCMa()
{
  return self;
}

uint64_t sub_29058@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_A314(&qword_19EB20);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  if (a2)
  {
    id v16 = [self defaultManager];
    NSString v17 = sub_145B80();
    id v18 = [v16 containerURLForSecurityApplicationGroupIdentifier:v17];

    if (v18)
    {
      sub_144EF0();

      unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v19(v13, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v13, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    }
    sub_296E0((uint64_t)v13);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1467D0(109);
    v23._countAndFlagsBits = 0xD00000000000006BLL;
    v23._object = (void *)0x800000000014AEB0;
    sub_145C90(v23);
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    sub_145C90(v24);
    goto LABEL_11;
  }
  uint64_t v21 = NSHomeDirectory();
  sub_145BC0();

  sub_144F20();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_296E0((uint64_t)v15);
LABEL_11:
    uint64_t result = sub_146910();
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v15, v6);
}

uint64_t sub_293F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = sub_144E20();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  NSString v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  if (qword_19AE00 != -1) {
    swift_once();
  }
  if (qword_1A3BB0)
  {
    sub_29058(qword_1A3BA8, (void *)qword_1A3BB0, (uint64_t)v9);
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v13(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
    sub_12060();
    sub_144F40();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    sub_144E80();
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  }
  v13(v4, v12, v1);
  sub_12060();
  uint64_t v14 = v17;
  sub_144F40();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
}

uint64_t sub_296E0(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19EB20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_29740(void *a1, void *a2)
{
  if (!a2)
  {
    id v8 = [self systemFontOfSize:0.0];
    goto LABEL_9;
  }
  NSString v4 = self;
  id v5 = a2;
  id v6 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
  id v7 = [v6 fontDescriptorWithSymbolicTraits:0x8000];

  if (!v7)
  {

LABEL_7:
    id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
    goto LABEL_8;
  }
  id v8 = [self fontWithDescriptor:v7 size:0.0];

  if (!v8) {
    goto LABEL_7;
  }
LABEL_8:

LABEL_9:
  id v9 = [v8 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [a1 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  uint64_t v13 = v12 | v10;
  id v14 = [v8 fontDescriptor];
  id v15 = [v14 fontDescriptorWithSymbolicTraits:v13];

  if (v15)
  {
    id v16 = [self fontWithDescriptor:v15 size:0.0];

    id v8 = v15;
  }
  else
  {
    id v16 = a1;
  }

  return v16;
}

uint64_t sub_29960(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  double v12 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v89 = a1 + 64;
  double v94 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v91 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v24 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v25 = v24 | (v17 << 6);
LABEL_8:
      uint64_t v26 = *(void *)(a1 + 56);
      *(void *)&v98[0] = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      uint64_t v27 = *(void **)&v98[0];
      sub_C738(v26 + 32 * v25, (uint64_t)v98 + 8);
      id v28 = v27;
      goto LABEL_27;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
    }
    if (v29 < v91)
    {
      unint64_t v30 = *(void *)(v89 + 8 * v29);
      if (v30) {
        goto LABEL_12;
      }
      int64_t v31 = v17 + 2;
      ++v17;
      if (v29 + 1 < v91)
      {
        unint64_t v30 = *(void *)(v89 + 8 * v31);
        if (v30) {
          goto LABEL_15;
        }
        int64_t v17 = v29 + 1;
        if (v29 + 2 < v91)
        {
          unint64_t v30 = *(void *)(v89 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          int64_t v31 = v29 + 3;
          int64_t v17 = v29 + 2;
          if (v29 + 3 < v91)
          {
            unint64_t v30 = *(void *)(v89 + 8 * v31);
            if (v30)
            {
LABEL_15:
              int64_t v29 = v31;
LABEL_12:
              unint64_t v16 = (v30 - 1) & v30;
              unint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
              int64_t v17 = v29;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v29 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_76;
              }
              if (v29 >= v91) {
                break;
              }
              unint64_t v30 = *(void *)(v89 + 8 * v29);
              ++v31;
              if (v30) {
                goto LABEL_12;
              }
            }
            int64_t v17 = v91 - 1;
          }
        }
      }
    }
    unint64_t v16 = 0;
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
LABEL_27:
    sub_C794((uint64_t)v98, (uint64_t)&v100);
    uint64_t v32 = (void *)v100;
    if (!(void)v100) {
      break;
    }
    sub_2A74C((long long *)((char *)&v100 + 8), v98);
    uint64_t v33 = sub_145BC0();
    uint64_t v35 = v34;
    if (v33 == sub_145BC0() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_33;
      }
    }
    sub_C738((uint64_t)v98, (uint64_t)&v96);
    uint64_t v38 = sub_C84C(0, &qword_19C460);
    if (swift_dynamicCast())
    {
      id v18 = v95[0];
      id v19 = sub_29740(v95[0], a6);
      uint64_t v97 = v38;
      *(void *)&long long v96 = v19;
      sub_2A74C(&v96, v95);
      id v20 = v32;
      id v21 = v19;
      double v22 = v94;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v93 = v22;
      sub_13C6A8(v95, v20, isUniquelyReferenced_nonNull_native);
      double v12 = v93;
      double v94 = v93;

      goto LABEL_5;
    }
LABEL_33:
    uint64_t v39 = sub_145BC0();
    uint64_t v41 = v40;
    if (v39 == sub_145BC0() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v43 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0) {
        goto LABEL_45;
      }
    }
    sub_C738((uint64_t)v98, (uint64_t)&v96);
    uint64_t v44 = sub_C84C(0, (unint64_t *)&qword_1A0A40);
    if (swift_dynamicCast())
    {
      id v45 = v95[0];
      *(void *)&long long v96 = 0;
      v95[0] = 0;
      uint64_t v92 = 0;
      double v93 = 0.0;
      [v45 getRed:&v96 green:v95 blue:&v93 alpha:&v92];
      double v46 = *(double *)&v96;
      if (*(double *)&v96 <= 0.001 && (double v46 = *(double *)v95, *(double *)v95 <= 0.001) && (double v46 = v93, v93 <= 0.001)
        || (*(void *)&long long v96 = 0,
            v95[0] = 0,
            uint64_t v92 = 0,
            double v93 = 0.0,
            objc_msgSend(v45, "getRed:green:blue:alpha:", &v96, v95, &v93, &v92, v46),
            *(double *)&v96 >= 0.99)
        && *(double *)v95 >= 0.99
        && v93 >= 0.99)
      {
        uint64_t v97 = v44;
        *(void *)&long long v96 = a7;
        sub_2A74C(&v96, v95);
        id v53 = NSForegroundColorAttributeName;
        id v60 = a7;
        double v61 = v94;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        double v93 = v61;
        sub_13C6A8(v95, v53, v62);
        double v12 = v93;
        double v94 = v93;

        goto LABEL_53;
      }
    }
LABEL_45:
    uint64_t v47 = sub_145BC0();
    uint64_t v49 = v48;
    if (v47 == sub_145BC0() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v51 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0) {
        goto LABEL_51;
      }
    }
    sub_C738((uint64_t)v98, (uint64_t)&v96);
    sub_C84C(0, &qword_19C468);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_51:
      sub_C738((uint64_t)v98, (uint64_t)&v96);
      id v57 = v32;
      double v58 = v94;
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v95[0] = *(id *)&v58;
      sub_13C6A8(&v96, v57, v59);
      double v12 = *(double *)v95;
      double v94 = *(double *)v95;

      goto LABEL_5;
    }
    id v45 = v95[0];
    id v52 = sub_A16C();
    [v52 setParagraphSpacingBefore:a4];
    sub_98E5C();
    uint64_t v97 = sub_C84C(0, &qword_19C470);
    *(void *)&long long v96 = v52;
    sub_2A74C(&v96, v95);
    id v53 = NSParagraphStyleAttributeName;
    id v54 = v52;
    double v55 = v94;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    double v93 = v55;
    sub_13C6A8(v95, v53, v56);
    double v12 = v93;
    double v94 = v93;

LABEL_53:
LABEL_5:
    swift_bridgeObjectRelease();
    sub_C7FC((uint64_t)v98);
  }
  swift_release();
  if (!*(void *)(*(void *)&v12 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
    uint64_t v65 = a8;
LABEL_62:
    sub_C5BC((uint64_t)&v100);
    *((void *)&v101 + 1) = sub_C84C(0, (unint64_t *)&qword_1A0A40);
    *(void *)&long long v100 = a7;
    sub_2A74C(&v100, v98);
    id v68 = a7;
    id v69 = NSForegroundColorAttributeName;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v12;
    sub_13C6A8(v98, v69, v70);
    double v67 = *(double *)&v96;
    double v94 = *(double *)&v96;

    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v67 + 16)) {
      goto LABEL_63;
    }
LABEL_61:
    long long v100 = 0u;
    long long v101 = 0u;
    goto LABEL_68;
  }
  id v63 = NSForegroundColorAttributeName;
  unint64_t v64 = sub_137B00((uint64_t)v63);
  uint64_t v65 = a8;
  if (v66)
  {
    sub_C738(*(void *)(*(void *)&v12 + 56) + 32 * v64, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (!*((void *)&v101 + 1)) {
    goto LABEL_62;
  }
  sub_C5BC((uint64_t)&v100);
  double v67 = v94;
  if (!*(void *)(*(void *)&v94 + 16)) {
    goto LABEL_61;
  }
LABEL_63:
  Swift::String v71 = NSFontAttributeName;
  unint64_t v72 = sub_137B00((uint64_t)v71);
  if (v73)
  {
    sub_C738(*(void *)(*(void *)&v67 + 56) + 32 * v72, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (*((void *)&v101 + 1))
  {
LABEL_67:
    sub_C5BC((uint64_t)&v100);
    goto LABEL_73;
  }
LABEL_68:
  sub_C5BC((uint64_t)&v100);
  if (v65)
  {
    *((void *)&v101 + 1) = sub_C84C(0, &qword_19C460);
    *(void *)&long long v100 = v65;
    sub_2A74C(&v100, v98);
    id v74 = v65;
    objc_super v75 = NSFontAttributeName;
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_13C6A8(v98, v75, v76);
    double v94 = *(double *)&v96;
  }
  else
  {
    if (!a9)
    {
      NSString v83 = NSFontAttributeName;
      sub_E5678((uint64_t)v83, &v100);

      goto LABEL_67;
    }
    *((void *)&v101 + 1) = sub_C84C(0, &qword_19C460);
    *(void *)&long long v100 = a9;
    sub_2A74C(&v100, v98);
    uint64_t v77 = NSFontAttributeName;
    id v78 = a9;
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_13C6A8(v98, v77, v79);
    double v94 = *(double *)&v96;
  }
  swift_bridgeObjectRelease();
LABEL_73:
  id v80 = NSAdaptiveImageGlyphAttributeName;
  sub_E5678((uint64_t)v80, &v100);

  sub_C5BC((uint64_t)&v100);
  type metadata accessor for Key(0);
  sub_2A75C();
  swift_bridgeObjectRetain();
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a10, "setAttributes:range:", isa, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2A388(void *a1, void *a2, void *a3, double a4)
{
  if (!a2) {
    return 0;
  }
  id v7 = a2;
  id v8 = [v7 string];
  sub_145BC0();

  id v9 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v10 = sub_145B80();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  id v12 = [self labelColor];
  id v13 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v14 = [v13 fontDescriptorWithSymbolicTraits:0x8000];

  if (v14)
  {
    id v15 = [self fontWithDescriptor:v14 size:0.0];
  }
  else
  {
    id v15 = 0;
  }
  uint64_t result = (uint64_t)[v7 length];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = v12;
    *(double *)(v18 + 32) = a4;
    *(void *)(v18 + 40) = a3;
    *(void *)(v18 + 48) = v15;
    *(void *)(v18 + 56) = v11;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_2A6E8;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_2A72C;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_9B8C;
    aBlock[3] = &unk_186290;
    id v20 = _Block_copy(aBlock);
    id v21 = v15;
    id v16 = v11;
    swift_retain();
    id v22 = a1;
    id v23 = v12;
    id v24 = a3;
    swift_release();
    objc_msgSend(v7, "enumerateAttributesInRange:options:usingBlock:", 0, v26, 0, v20);

    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2A690()
{
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_2A6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_29960(a1, a2, a3, *(double *)(v4 + 32), a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 40), *(void **)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_2A71C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2A72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9B64(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_2A734(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2A744()
{
  return swift_release();
}

_OWORD *sub_2A74C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_2A75C()
{
  unint64_t result = qword_19B190;
  if (!qword_19B190)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B190);
  }
  return result;
}

BOOL static CLLocationCoordinate2D.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

void CLLocationCoordinate2D.hash(into:)(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_146CB0(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_146CB0(v4);
}

Swift::Int CLLocationCoordinate2D.hashValue.getter(double a1, double a2)
{
  sub_146C80();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_146CB0(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_146CB0(v5);
  return sub_146CD0();
}

Swift::Int sub_2A884()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_146C80();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_146CD0();
}

void sub_2A8D8()
{
  CLLocationCoordinate2D.hash(into:)(*v0, v0[1]);
}

Swift::Int sub_2A8E0()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_146C80();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_146CD0();
}

BOOL sub_2A930(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t static FloatingPoint.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a3 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_146BF0();
  sub_146B70();
  sub_146040();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

unint64_t sub_2AB14()
{
  unint64_t result = qword_19C478;
  if (!qword_19C478)
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C478);
  }
  return result;
}

uint64_t sub_2AB6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C510);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C518);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19D0C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C510);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_3033C(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2AD94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4C8);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C4D0);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19C4D8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C4C8);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_307D4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s10AudioAssetC9AudioDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2AFBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C528);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C530);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19C538);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C528);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_314A4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s12ContactAssetC11ContactDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2B1E4()
{
  uint64_t v1 = OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_6;
  }
  double v2 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v2)
  {
    id v3 = [v2 assetMetaData];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_144FA0();
      uint64_t v7 = v6;

      sub_A314(&qword_19C4A0);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 64) = v5;
      *(void *)(v8 + 72) = v7;
      *(void *)(v8 + 80) = 0;
      *(_WORD *)(v8 + 88) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 0;
      *(void *)(v8 + 16) = 2;
      *(unsigned char *)(v8 + 40) = 0;
      *(_OWORD *)(v8 + 48) = xmmword_159810;
      *(void *)(v0 + v1) = v8;
      swift_release();
    }
  }
  if (!*(void *)(v0 + v1)) {
    return 1;
  }
LABEL_6:
  swift_retain();
  uint64_t v9 = sub_30670();
  swift_release();
  return v9;
}

uint64_t sub_2B308@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4F8);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C500);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19C508);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C4F8);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_32174(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2B530@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4E0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C4E8);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19C4F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C4E0);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_324A8(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

id sub_2B758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtCC15JournalSettings10Journaling15ReflectionAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling15ReflectionAsset_metadata)) {
    goto LABEL_6;
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (result)
  {
    id result = [result assetMetaData];
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_144FA0();
      uint64_t v8 = v7;

      sub_A314(&qword_19C5A8);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 80) = 0;
      *(void *)(v9 + 88) = 0;
      *(void *)(v9 + 64) = v6;
      *(void *)(v9 + 72) = v8;
      *(unsigned char *)(v9 + 96) = 0;
      *(_OWORD *)(v9 + 40) = xmmword_159C30;
      *(void *)(v9 + 56) = 0xB000000000000000;
      *(void *)(v1 + v3) = v9;
      id result = (id)swift_release();
    }
  }
  if (*(void *)(v1 + v3))
  {
LABEL_6:
    swift_retain();
    sub_33178(a1);
    return (id)swift_release();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0xB000000000000000;
  }
  return result;
}

uint64_t sub_2B87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C590);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC15JournalSettings10Journaling15GenericMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling15GenericMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_144FA0();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_A314(&qword_19C598);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_A314(&qword_19C5A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_159810;
      sub_2E4D0((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_19C590);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_332AC(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_2BAA4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_2BAC4, 0, 0);
}

uint64_t sub_2BAC4()
{
  uint64_t v1 = sub_2B1E4();
  if (v1 == 1)
  {
    sub_1CF0C();
    swift_allocError();
    *uint64_t v2 = 5;
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v6 = sub_2BE6C(v1);
    unint64_t v8 = v7;
    sub_2C34C(v5);
    unint64_t v9 = sub_2E37C(v6, v8, 0xD000000000000015, (void *)0x800000000014AF80, 0xD000000000000020, (void *)0x800000000014AFA0);
    v0[4] = v10;
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[5] = v11;
    void *v11 = v0;
    v11[1] = sub_2BC9C;
    uint64_t v12 = v0[2];
    return sub_543BC(v12, 0, 0, 0, 0, 0, 0, v9);
  }
}

uint64_t sub_2BC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_2BE08, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_2BE08()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2BE6C(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C498);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    uint64_t v5 = (double *)a1;
  }
  else {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_34864((uint64_t)v5);
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (a1)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if (v10)
      {
        sub_2E1B0(a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
      _s10VisitAssetC9VisitDataVMa(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) != 1)
      {
        uint64_t v6 = *((void *)v4 + 2);
        swift_bridgeObjectRetain();
        sub_2E274((uint64_t)v4);
        return v6;
      }
      sub_2E214((uint64_t)v4);
    }
    return 0;
  }
  return v6;
}

uint64_t sub_2C058(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_2C104;
  return _swift_task_switch(sub_2BAC4, 0, 0);
}

uint64_t sub_2C104(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

void sub_2C214(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata)
    && (swift_retain(), uint64_t v3 = sub_30670(), swift_release(), v3 != 1))
  {
    uint64_t v4 = sub_2DF2C(v3);
    *(void *)(a1 + 24) = &_s6ResultVN;
    *(void *)(a1 + 32) = sub_2E2D0();
    *(void *)(a1 + 40) = sub_2E324();
    *(void *)a1 = v4;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

unint64_t sub_2C2CC(uint64_t a1)
{
  unint64_t result = sub_2C2F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2C2F4()
{
  unint64_t result = qword_19C480;
  if (!qword_19C480)
  {
    _s16MultiPinMapAssetCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C480);
  }
  return result;
}

uint64_t sub_2C34C(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2C35C()
{
  uint64_t result = 0x6D614E6563616C70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2037672291;
      break;
    case 2:
      uint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2C408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2E980(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2C430()
{
  return 0;
}

void sub_2C43C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2C448(uint64_t a1)
{
  unint64_t v2 = sub_2F2C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2C484(uint64_t a1)
{
  unint64_t v2 = sub_2F2C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_2C4C0(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19C610);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_2F2C4();
  sub_146D10();
  v8[15] = 0;
  sub_146A90();
  if (!v1)
  {
    v8[14] = 1;
    sub_146A90();
    v8[13] = 2;
    sub_146A90();
    v8[12] = 3;
    sub_146AB0();
    v8[11] = 4;
    sub_146AB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 sub_2C6A0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2EBC0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2C6EC(void *a1)
{
  return sub_2C4C0(a1);
}

uint64_t sub_2C730(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C5E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_2F158();
  sub_146D10();
  v9[1] = a2;
  sub_A314(&qword_19C5D0);
  sub_2F200(&qword_19C5F0, (void (*)(void))sub_2F270);
  sub_146AD0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OperationBase.isAsynchronous.getter()
{
  return 1;
}

Swift::Int sub_2C8B8()
{
  return sub_146CD0();
}

void sub_2C8FC()
{
}

Swift::Int sub_2C924()
{
  return sub_146CD0();
}

uint64_t sub_2C964()
{
  return 0x737469736976;
}

uint64_t sub_2C978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x737469736976 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_146B90();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_2CA08(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2CA14(uint64_t a1)
{
  unint64_t v2 = sub_2F158();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2CA50(uint64_t a1)
{
  unint64_t v2 = sub_2F158();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_2CA8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2EF6C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2CAB8(void *a1)
{
  return sub_2C730(a1, *v1);
}

uint64_t sub_2CAD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2CF18(a1, a2, a3, *v3, &qword_19C5B8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2CAFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DCE4(a1, a2, a3, *v3, (uint64_t *)&unk_19EB40, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CB38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2CD90(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CB58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2CF18(a1, a2, a3, *v3, (uint64_t *)&unk_19EB00);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2CB80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D074(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CBA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D1E0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CBC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DCE4(a1, a2, a3, *v3, &qword_19C520, _s10RoutePointVMa);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CBFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D358(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CC1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DCE4(a1, a2, a3, *v3, &qword_19C588, type metadata accessor for AssetAttachment.AssetType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CC58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D4B8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CC78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D628(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2CC98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D788(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CCB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2D8D8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CCD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DCE4(a1, a2, a3, *v3, &qword_19C558, type metadata accessor for InsightsDataManager.TopAssetCategory);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CD14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DA7C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CD34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2DCE4(a1, a2, a3, *v3, &qword_19C550, (uint64_t (*)(void))&type metadata accessor for Date);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2CD70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2DCE4(a1, a2, a3, a4, (uint64_t *)&unk_19EB40, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_2CD90(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C578);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2CF18(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_A314(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D074(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C4C0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D1E0(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C4B8);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  size_t v14 = 80 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D358(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C568);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D4B8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C570);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D628(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C5B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D788(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C580);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2D8D8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19C560);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2DA5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2DCE4(a1, a2, a3, a4, &qword_19C558, type metadata accessor for InsightsDataManager.TopAssetCategory);
}

uint64_t sub_2DA7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_A314(&qword_19C540);
  uint64_t v10 = *(void *)(sub_A314(&qword_19C548) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (double *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_A314(&qword_19C548) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  unint64_t v19 = a4 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || (unint64_t)v18 >= v19 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = v19 + v20;
  if (v19 >= (unint64_t)v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_2DCC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2DCE4(a1, a2, a3, a4, &qword_19C550, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_2DCE4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_A314(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = a4 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || (unint64_t)v21 >= v22 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

double *sub_2DF2C(uint64_t a1)
{
  uint64_t v27 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v2 = *(void *)(v27 - 8);
  uint64_t v3 = __chkstk_darwin(v27);
  char v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v24 - v6;
  if (!a1) {
    return 0;
  }
  int64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_2CBA0(0, v7, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    uint64_t v24 = a1;
    uint64_t v25 = v9;
    int64_t v10 = v34;
    do
    {
      uint64_t v11 = v26;
      sub_2E1B0(v8, v26);
      sub_2E1B0(v11, (uint64_t)v5);
      uint64_t v12 = *v5;
      uint64_t v13 = v5[1];
      uint64_t v14 = v5[3];
      uint64_t v32 = v5[2];
      uint64_t v33 = v12;
      uint64_t v15 = v5[5];
      uint64_t v31 = v5[4];
      uint64_t v16 = (char *)v5 + *(int *)(v27 + 40);
      uint64_t v17 = *(void *)v16;
      int v18 = v16[8];
      uint64_t v19 = (char *)v5 + *(int *)(v27 + 44);
      uint64_t v28 = *(void *)v19;
      LODWORD(v19) = v19[8];
      int v29 = v18;
      int v30 = (int)v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2E274((uint64_t)v5);
      sub_2E274(v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2CBA0(0, *((void *)v10 + 2) + 1, 1);
        int64_t v10 = v34;
      }
      unint64_t v21 = *((void *)v10 + 2);
      unint64_t v20 = *((void *)v10 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_2CBA0(v20 > 1, v21 + 1, 1);
        int64_t v10 = v34;
      }
      *((void *)v10 + 2) = v21 + 1;
      unint64_t v22 = &v10[10 * v21];
      *((void *)v22 + 4) = v33;
      *((void *)v22 + 5) = v13;
      *((void *)v22 + 6) = v32;
      *((void *)v22 + 7) = v14;
      *((void *)v22 + 8) = v31;
      *((void *)v22 + 9) = v15;
      *((void *)v22 + 10) = v17;
      *((unsigned char *)v22 + 88) = v29;
      *((void *)v22 + 12) = v28;
      *((unsigned char *)v22 + 104) = v30;
      v8 += v25;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

uint64_t sub_2E1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2E214(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C498);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2E274(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2E2D0()
{
  unint64_t result = qword_19C4A8;
  if (!qword_19C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C4A8);
  }
  return result;
}

unint64_t sub_2E324()
{
  unint64_t result = qword_19C4B0;
  if (!qword_19C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C4B0);
  }
  return result;
}

unint64_t sub_2E37C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (!a2) {
    return 0;
  }
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v9 = (void *)0xE000000000000000;
  if (!v8) {
    return 0;
  }
  sub_1467D0(39);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = a3;
  v15._object = a4;
  sub_145C90(v15);
  v16._countAndFlagsBits = 0x3D656C7974732022;
  v16._object = (void *)0xE900000000000022;
  sub_145C90(v16);
  if (a6) {
    uint64_t v9 = a6;
  }
  else {
    a5 = 0;
  }
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = a5;
  v17._object = v9;
  sub_145C90(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 15906;
  v18._object = (void *)0xE200000000000000;
  sub_145C90(v18);
  v19._countAndFlagsBits = a1;
  v19._object = (void *)a2;
  sub_145C90(v19);
  v20._countAndFlagsBits = 0x3E7669642F3CLL;
  v20._object = (void *)0xE600000000000000;
  sub_145C90(v20);
  return 0xD000000000000010;
}

uint64_t sub_2E4D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_A314(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s5VisitVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s5VisitVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5VisitVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

__n128 _s5VisitVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5VisitVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t _s5VisitVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s5VisitVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s5VisitVMa()
{
  return &_s5VisitVN;
}

void *_s6ResultVwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ResultVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s6ResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ResultVwtk(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void *_s6ResultVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6ResultVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa()
{
  return &_s6ResultVN;
}

uint64_t sub_2E980(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2EBC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_A314(&qword_19C600);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_2F2C4();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  char v37 = 0;
  uint64_t v9 = sub_1469E0();
  uint64_t v11 = v10;
  uint64_t v31 = v9;
  char v36 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1469E0();
  uint64_t v32 = v13;
  uint64_t v28 = v12;
  char v35 = 2;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  uint64_t v27 = sub_1469E0();
  char v34 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_146A00();
  uint64_t v29 = v15;
  HIDWORD(v25) = v17;
  uint64_t v26 = v16;
  char v33 = 4;
  uint64_t v18 = sub_146A00();
  Swift::String v19 = v8;
  char v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  sub_C7FC((uint64_t)a1);
  uint64_t v22 = v29;
  swift_bridgeObjectRelease();
  uint64_t v23 = v32;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v23;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = BYTE4(v25) & 1;
  *(void *)(a2 + 64) = v18;
  *(unsigned char *)(a2 + 72) = v21 & 1;
  return result;
}

void *sub_2EF6C(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19C5C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2F114(a1, a1[3]);
  sub_2F158();
  sub_146D00();
  if (v1)
  {
    sub_C7FC((uint64_t)a1);
  }
  else
  {
    sub_A314(&qword_19C5D0);
    sub_2F200(&qword_19C5D8, (void (*)(void))sub_2F1AC);
    sub_146A20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_C7FC((uint64_t)a1);
  }
  return v7;
}

void *sub_2F114(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2F158()
{
  unint64_t result = qword_19C5C8;
  if (!qword_19C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C5C8);
  }
  return result;
}

unint64_t sub_2F1AC()
{
  unint64_t result = qword_19C5E0;
  if (!qword_19C5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C5E0);
  }
  return result;
}

uint64_t sub_2F200(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19C5D0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2F270()
{
  unint64_t result = qword_19C5F8;
  if (!qword_19C5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C5F8);
  }
  return result;
}

unint64_t sub_2F2C4()
{
  unint64_t result = qword_19C608;
  if (!qword_19C608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C608);
  }
  return result;
}

unsigned char *_s5VisitV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2F3E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5VisitV10CodingKeysOMa()
{
  return &_s5VisitV10CodingKeysON;
}

uint64_t _s6ResultV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s6ResultV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2F50CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa()
{
  return &_s6ResultV10CodingKeysON;
}

unint64_t sub_2F548()
{
  unint64_t result = qword_19C618;
  if (!qword_19C618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C618);
  }
  return result;
}

unint64_t sub_2F5A0()
{
  unint64_t result = qword_19C620;
  if (!qword_19C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C620);
  }
  return result;
}

unint64_t sub_2F5F8()
{
  unint64_t result = qword_19C628;
  if (!qword_19C628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C628);
  }
  return result;
}

unint64_t sub_2F650()
{
  unint64_t result = qword_19C630;
  if (!qword_19C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C630);
  }
  return result;
}

unint64_t sub_2F6A8()
{
  unint64_t result = qword_19C638;
  if (!qword_19C638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C638);
  }
  return result;
}

unint64_t sub_2F700()
{
  unint64_t result = qword_19C640;
  if (!qword_19C640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C640);
  }
  return result;
}

uint64_t sub_2F758()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19C648);
  sub_C584(v0, (uint64_t)qword_19C648);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

id sub_2F854(void *a1, char a2, char a3, char a4, void *a5)
{
  if (!a1)
  {
LABEL_16:
    if ((a2 & 1) != 0
      && (id v30 = [self workStyleAttributes]) != 0)
    {
      id v20 = v30;
      if (qword_19ACB8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_145760();
      sub_C584(v31, (uint64_t)qword_19C648);
      uint64_t v32 = sub_145740();
      os_log_type_t v33 = sub_146210();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      char v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v34 = 0;
      char v35 = "[POIClustering] [RENDERING] Work";
    }
    else
    {
      if ((a3 & 1) != 0
        || (a4 & 1) == 0
        || (v36 = [objc_allocWithZone((Class)GEOPlace) initWithLatitude:4 longitude:0.0 placeType:0.0], id v20 = objc_msgSend(self, "styleAttributesForPlace:", v36), v36, !v20))
      {
        if (qword_19ACB8 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_145760();
        sub_C584(v53, (uint64_t)qword_19C648);
        id v54 = a1;
        double v55 = sub_145740();
        os_log_type_t v56 = sub_146210();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = 7104878;
          uint64_t v58 = swift_slowAlloc();
          v72[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v58 = 136315394;
          if (a1 && (id v59 = [v54 name]) != 0)
          {
            id v60 = v59;
            uint64_t v61 = sub_145BC0();
            unint64_t v63 = v62;
          }
          else
          {
            unint64_t v63 = 0xE300000000000000;
            uint64_t v61 = 7104878;
          }
          uint64_t v73 = sub_3D2B4(v61, v63, v72);
          sub_146610();

          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2080;
          if (a1 && (id v64 = [v54 pointOfInterestCategory]) != 0)
          {
            uint64_t v65 = v64;
            uint64_t v57 = sub_145BC0();
            unint64_t v67 = v66;
          }
          else
          {
            unint64_t v67 = 0xE300000000000000;
          }
          uint64_t v73 = sub_3D2B4(v57, v67, v72);
          sub_146610();

          swift_bridgeObjectRelease();
          _os_log_impl(&def_94138, v55, v56, "[POIClustering] [RENDERING] Fallback, mkMapItem.name=%s, mkMapItem.poiCategory=%s", (uint8_t *)v58, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        return 0;
      }
      if (qword_19ACB8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_145760();
      sub_C584(v37, (uint64_t)qword_19C648);
      uint64_t v32 = sub_145740();
      os_log_type_t v33 = sub_146210();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      char v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v34 = 0;
      char v35 = "[POIClustering] [RENDERING] City";
    }
    _os_log_impl(&def_94138, v32, v33, v35, v34, 2u);
    swift_slowDealloc();
LABEL_30:

    goto LABEL_31;
  }
  id v10 = a1;
  id v11 = [v10 pointOfInterestCategory];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_145BC0();
    uint64_t v15 = v14;
    if (v13 == sub_145BC0() && v15 == v16)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    char v18 = sub_146B90();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_15;
    }
  }
  id v19 = [v10 _styleAttributes];
  if (!v19)
  {
LABEL_15:

    goto LABEL_16;
  }
  id v20 = v19;
  if (qword_19ACB8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_145760();
  sub_C584(v21, (uint64_t)qword_19C648);
  id v22 = v10;
  uint64_t v23 = sub_145740();
  os_log_type_t v24 = sub_146210();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218242;
    id v26 = [v22 name];
    if (v26)
    {
      uint64_t v27 = v26;
      sub_145BC0();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v29 = 0;
    }
    v72[1] = v29;
    sub_A314((uint64_t *)&unk_19EB10);
    sub_1465D0();

    swift_bridgeObjectRelease();
    sub_146610();

    *(_WORD *)(v25 + 12) = 2080;
    id v68 = [v22 pointOfInterestCategory];
    sub_A314(&qword_19C660);
    uint64_t v69 = sub_1465B0();
    unint64_t v71 = v70;

    v72[0] = sub_3D2B4(v69, v71, &v73);
    sub_146610();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v23, v24, "[POIClustering] [RENDERING] POI mapItemName=%ld, mapItemPOICategory=%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_31:
  [a5 displayScale];
  double v39 = v38;
  id v40 = [objc_allocWithZone((Class)VKIconModifiers) init];
  objc_msgSend(v40, "setNightMode:", objc_msgSend(a5, "userInterfaceStyle") == (char *)&def_94138 + 2);
  id result = [self iconManager];
  if (!result)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v42 = result;
  float v43 = v39;
  id v44 = v20;
  NSString v45 = sub_145B80();
  *(float *)&double v46 = v43;
  id v47 = [v42 imageForStyleAttributes:v44 withStylesheetName:v45 contentScale:7 sizeGroup:v40 modifiers:v46];

  if (!v47)
  {

    return v47;
  }
  id v48 = v47;
  id result = [v48 fillColor];
  if (!result) {
    goto LABEL_56;
  }
  id v49 = result;
  id v47 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v49];

  id v50 = v48;
  id result = [v50 image];
  if (result)
  {
    id v51 = result;
    [v50 contentScale];
    [objc_allocWithZone((Class)UIImage) initWithCGImage:v51 scale:0 orientation:v52];

    return v47;
  }
LABEL_57:
  __break(1u);
  return result;
}

void *_s9IconStyleVwCP(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void _s9IconStyleVwxx(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t _s9IconStyleVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s9IconStyleVwta(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t _s9IconStyleVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IconStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9IconStyleVMa()
{
  return &_s9IconStyleVN;
}

uint64_t sub_3033C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C510);
  __chkstk_darwin(v3);
  id v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C7D8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C7D8);
  uint64_t v13 = sub_A314(&qword_19D0C0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19D0C0);
  }
  sub_1248C((uint64_t)v11, &qword_19C7D8);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C510);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    uint64_t v15 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, &qword_19C7E0, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19D0C0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C7D8);
  return swift_endAccess();
}

uint64_t sub_30670()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1;
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    unint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    if (*(unsigned char *)(v0 + 89))
    {
      char v5 = *(unsigned char *)(v0 + 88) & 1;
      uint64_t v6 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      uint64_t v14 = 2;
    }
    else
    {
      unsigned int v15 = *(unsigned __int8 *)(v0 + 88);
      sub_C4D4(*(void *)(v0 + 64), *(void *)(v0 + 72));
      uint64_t v7 = sub_33E7C();
      uint64_t v12 = v8;
      uint64_t v13 = v7;
      uint64_t v6 = v9;
      char v5 = v10;
      sub_360A8(v2, v3, v4, v15, 0);
      uint64_t v14 = *(void *)(v0 + 16);
      uint64_t v4 = v12;
      uint64_t v2 = v13;
    }
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v4;
    *(unsigned char *)(v0 + 40) = v5;
    sub_36078(v2);
    sub_36088(v14);
  }
  sub_36098(v1);
  return v2;
}

uint64_t sub_307D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4C8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C788);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C788);
  uint64_t v13 = sub_A314(&qword_19C4D8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C4D8);
  }
  sub_1248C((uint64_t)v11, &qword_19C788);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C4C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s10AudioAssetC9AudioDataVMa);
    uint64_t v15 = _s10AudioAssetC9AudioDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s10AudioAssetC9AudioDataVMa, &qword_19C790, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C4D8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C788);
  return swift_endAccess();
}

uint64_t sub_30B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C7E8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C7F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C7F0);
  uint64_t v13 = sub_A314(&qword_19C7F8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C7F8);
  }
  sub_1248C((uint64_t)v11, &qword_19C7F0);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C7E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s10MusicAssetC9MusicDataVMa);
    uint64_t v15 = _s10MusicAssetC9MusicDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s10MusicAssetC9MusicDataVMa, &qword_19C800, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C7F8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C7F0);
  return swift_endAccess();
}

uint64_t sub_30E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C748);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C750);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C750);
  uint64_t v13 = sub_A314(&qword_19C758);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C758);
  }
  sub_1248C((uint64_t)v11, &qword_19C750);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C748);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s10PhotoAssetC9PhotoDataVMa);
    uint64_t v15 = _s10PhotoAssetC9PhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s10PhotoAssetC9PhotoDataVMa, &qword_19C760, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C758);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C750);
  return swift_endAccess();
}

uint64_t sub_31170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C728);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C730);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C730);
  uint64_t v13 = sub_A314(&qword_19C738);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C738);
  }
  sub_1248C((uint64_t)v11, &qword_19C730);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C728);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s10VideoAssetC9VideoDataVMa);
    uint64_t v15 = _s10VideoAssetC9VideoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s10VideoAssetC9VideoDataVMa, &qword_19C740, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C738);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C730);
  return swift_endAccess();
}

uint64_t sub_314A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C528);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C848);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C848);
  uint64_t v13 = sub_A314(&qword_19C538);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C538);
  }
  sub_1248C((uint64_t)v11, &qword_19C848);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s12ContactAssetC11ContactDataVMa);
    uint64_t v15 = _s12ContactAssetC11ContactDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s12ContactAssetC11ContactDataVMa, &qword_19C850, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C538);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C848);
  return swift_endAccess();
}

uint64_t sub_317D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C808);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C810);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C810);
  uint64_t v13 = sub_A314(&qword_19C818);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C818);
  }
  sub_1248C((uint64_t)v11, &qword_19C810);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C808);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s12PodcastAssetC11PodcastDataVMa);
    uint64_t v15 = _s12PodcastAssetC11PodcastDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s12PodcastAssetC11PodcastDataVMa, &qword_19C820, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C818);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C810);
  return swift_endAccess();
}

uint64_t sub_31B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C768);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C770);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C770);
  uint64_t v13 = sub_A314(&qword_19C778);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C778);
  }
  sub_1248C((uint64_t)v11, &qword_19C770);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C768);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v15 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s14LivePhotoAssetC13LivePhotoDataVMa, &qword_19C780, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C778);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C770);
  return swift_endAccess();
}

uint64_t sub_31E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C858);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C860);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C860);
  uint64_t v13 = sub_A314(&qword_19C868);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C868);
  }
  sub_1248C((uint64_t)v11, &qword_19C860);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C858);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s16StateOfMindAssetC15StateOfMindDataVMa);
    uint64_t v15 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s16StateOfMindAssetC15StateOfMindDataVMa, &qword_19C870, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C868);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C860);
  return swift_endAccess();
}

uint64_t sub_32174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4F8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C7C8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C7C8);
  uint64_t v13 = sub_A314(&qword_19C508);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C508);
  }
  sub_1248C((uint64_t)v11, &qword_19C7C8);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C4F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    uint64_t v15 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s16WorkoutIconAssetC15WorkoutIconDataVMa, &qword_19C7D0, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C508);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C7C8);
  return swift_endAccess();
}

uint64_t sub_324A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4E0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C798);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C798);
  uint64_t v13 = sub_A314(&qword_19C4F0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C4F0);
  }
  sub_1248C((uint64_t)v11, &qword_19C798);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C4E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s19MotionActivityAssetC18MotionActivityDataVMa);
    uint64_t v15 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s19MotionActivityAssetC18MotionActivityDataVMa, &qword_19C7A0, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C4F0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C798);
  return swift_endAccess();
}

uint64_t sub_327DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C7A8);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C7B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C7B0);
  uint64_t v13 = sub_A314(&qword_19C7B8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C7B8);
  }
  sub_1248C((uint64_t)v11, &qword_19C7B0);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C7A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
    uint64_t v15 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s20ThirdPartyMediaAssetC12MetadataTypeVMa, &qword_19C7C0, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C7B8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C7B0);
  return swift_endAccess();
}

uint64_t sub_32B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C828);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C830);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C830);
  uint64_t v13 = sub_A314(&qword_19C838);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C838);
  }
  sub_1248C((uint64_t)v11, &qword_19C830);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C828);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s9BookAssetC8BookDataVMa);
    uint64_t v15 = _s9BookAssetC8BookDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s9BookAssetC8BookDataVMa, &qword_19C840, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C838);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C830);
  return swift_endAccess();
}

uint64_t sub_32E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C8C0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C8C8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C8C8);
  uint64_t v13 = sub_A314(&qword_19C8D0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C8D0);
  }
  sub_1248C((uint64_t)v11, &qword_19C8C8);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C8C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s9LinkAssetC8LinkDataVMa);
    uint64_t v15 = _s9LinkAssetC8LinkDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s9LinkAssetC8LinkDataVMa, &qword_19C8D8, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C8D0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C8C8);
  return swift_endAccess();
}

uint64_t sub_33178@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  unint64_t v6 = *(void *)(v1 + 40);
  if (v6 >> 60 == 7)
  {
    uint64_t v17 = *(void *)(v1 + 32);
    uint64_t v18 = *(void *)(v1 + 24);
    uint64_t v19 = *(void *)(v1 + 16);
    uint64_t v7 = *(void *)(v1 + 64);
    unint64_t v8 = *(void *)(v1 + 72);
    uint64_t v9 = *(void *)(v1 + 80);
    unint64_t v10 = *(void *)(v1 + 88);
    if (*(unsigned char *)(v1 + 96))
    {
      uint64_t v11 = *(void *)(v1 + 72) & 1;
      *a1 = v7;
      a1[1] = v11;
      a1[2] = v9;
      a1[3] = v10;
      sub_27BC0(v9, v10);
    }
    else
    {
      sub_C4D4(*(void *)(v1 + 64), *(void *)(v1 + 72));
      sub_343B8();
      sub_36208(v7, v8, v9, v10, 0);
      uint64_t v7 = *a1;
      uint64_t v11 = a1[1];
      uint64_t v9 = a1[2];
      unint64_t v10 = a1[3];
    }
    uint64_t v13 = *(void *)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 24);
    uint64_t v14 = *(void *)(v1 + 32);
    unint64_t v15 = *(void *)(v1 + 40);
    *(void *)(v1 + 16) = v7;
    *(void *)(v1 + 24) = v11;
    *(void *)(v1 + 32) = v9;
    *(void *)(v1 + 40) = v10;
    sub_361C4(v7, v11, v9, v10);
    sub_361E0(v13, v12, v14, v15);
    uint64_t v4 = v18;
    uint64_t v3 = v19;
    uint64_t v5 = v17;
  }
  else
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return sub_361F4(v3, v4, v5, v6);
}

uint64_t sub_332AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C590);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C8E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C8E0);
  uint64_t v13 = sub_A314(&qword_19C5A0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C5A0);
  }
  sub_1248C((uint64_t)v11, &qword_19C8E0);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C590);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s15GenericMapAssetC14GenericMapDataVMa);
    uint64_t v15 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s15GenericMapAssetC14GenericMapDataVMa, &qword_19C8E8, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C5A0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C8E0);
  return swift_endAccess();
}

uint64_t sub_335E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C8B0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C8B8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C8B8);
  uint64_t v13 = sub_A314(&qword_19C498);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C498);
  }
  sub_1248C((uint64_t)v11, &qword_19C8B8);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C8B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s10VisitAssetC9VisitDataVMa);
    uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s10VisitAssetC9VisitDataVMa, &qword_19C880, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C498);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C8B8);
  return swift_endAccess();
}

uint64_t sub_33914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C890);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C898);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_12428(v12, (uint64_t)v11, &qword_19C898);
  uint64_t v13 = sub_A314(&qword_19C8A0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_2E4D0((uint64_t)v11, a1, &qword_19C8A0);
  }
  sub_1248C((uint64_t)v11, &qword_19C898);
  sub_12428(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_19C890);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_3615C((uint64_t)v5, a1, _s16StreakEventAssetC12MetadataTypeVMa);
    uint64_t v15 = _s16StreakEventAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_340CC(_s16StreakEventAssetC12MetadataTypeVMa, &qword_19C8A8, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa, a1);
    sub_C52C(v17, v18);
  }
  sub_12428(a1, (uint64_t)v9, &qword_19C8A0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_121E0((uint64_t)v9, v12, &qword_19C898);
  return swift_endAccess();
}

uint64_t sub_33C48()
{
  sub_1449F0();
  swift_allocObject();
  sub_1449E0();
  sub_A314(&qword_19C8F8);
  sub_36270();
  sub_1449D0();
  swift_release();
  return v1;
}

uint64_t sub_33E7C()
{
  sub_1449F0();
  swift_allocObject();
  sub_1449E0();
  sub_360B4();
  sub_1449D0();
  swift_release();
  return v1;
}

uint64_t sub_340CC@<X0>(uint64_t (*a1)(void)@<X2>, unint64_t *a2@<X3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  sub_1449F0();
  swift_allocObject();
  sub_1449E0();
  uint64_t v8 = a1(0);
  sub_3631C(a2, a3);
  sub_1449D0();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a4, 0, 1, v8);
}

uint64_t sub_343B8()
{
  return swift_release();
}

uint64_t sub_345E8()
{
  sub_1449F0();
  swift_allocObject();
  sub_1449E0();
  sub_36108();
  sub_1449D0();
  swift_release();
  return v1;
}

uint64_t sub_3481C@<X0>(uint64_t a1@<X8>)
{
  return sub_340CC(_s10VisitAssetC9VisitDataVMa, &qword_19C880, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
}

uint64_t sub_34864(uint64_t a1)
{
  uint64_t v3 = sub_A314(&qword_19C498);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v134 = (uint64_t)v126 - v8;
  __chkstk_darwin(v7);
  uint64_t v135 = (void *)((char *)v126 - v9);
  uint64_t v10 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v136 = *((void *)v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = sub_C6434(a1);
  uint64_t v137 = OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata;
  uint64_t v138 = v1;
  if (!*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_7;
  }
  char v14 = v13;
  swift_retain();
  uint64_t v15 = sub_30670();
  swift_release();
  if (v15 == 1) {
    goto LABEL_7;
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_2C34C(v16);
  if (!v15) {
    goto LABEL_7;
  }
  uint64_t v130 = (double *)v15;
  unint64_t v17 = *(void *)(v15 + 16);
  if (v17 < 2 || (v14 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    goto LABEL_8;
  }
  v126[0] = v6;
  unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = (char *)v130 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80));
  id v26 = *(char **)(v136 + 72);
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  *(void *)&long long v28 = 136315394;
  long long v127 = v28;
  v126[1] = (char *)&type metadata for Any + 8;
  uint64_t v131 = v10;
  uint64_t v132 = v26;
  do
  {
    sub_2E1B0((uint64_t)v6, (uint64_t)v12);
    id v30 = (uint64_t *)&v12[v10[13]];
    unint64_t v31 = v30[1];
    if (v31 >> 60 == 15) {
      goto LABEL_17;
    }
    uint64_t v32 = v10;
    uint64_t v33 = *v30;
    sub_C84C(0, &qword_19C718);
    sub_C84C(0, (unint64_t *)&unk_19D010);
    sub_27BC0(v33, v31);
    uint64_t v29 = v27;
    char v34 = (void *)sub_146290();
    sub_120B4(v33, v31);
    id v26 = v132;
    if (!v34)
    {
      uint64_t v10 = v32;
LABEL_17:
      sub_2E274((uint64_t)v12);
      uint64_t v29 = v27;
      goto LABEL_18;
    }
    id v35 = [v34 placemark];

    sub_2E274((uint64_t)v12);
    uint64_t v10 = v32;
    if (v35)
    {
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + (v139 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v139 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_145E20();
      sub_145E50();
      sub_145E00();
      id v26 = v132;
    }
LABEL_18:
    uint64_t v6 = &v26[(void)v6];
    uint64_t v27 = v29;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  unint64_t v36 = v139;
  swift_bridgeObjectRelease();
  unint64_t v37 = v36 >> 62;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    double v38 = (double **)sub_146930();
    v133 = (double **)(v36 >> 62);
    if (!v38) {
      goto LABEL_71;
    }
LABEL_28:
    if ((uint64_t)v38 >= 1)
    {
      double v39 = 0;
      id v40 = _swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          uint64_t v41 = (char *)sub_146810();
        }
        else {
          uint64_t v41 = (char *)*(id *)(v36 + 8 * (void)v39 + 32);
        }
        id v26 = v41;
        id v42 = [v41 country];
        if (v42)
        {
          float v43 = v42;
          uint64_t v44 = sub_145BC0();
          uint64_t v46 = v45;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v40 = sub_7DB80(0, *((void *)v40 + 2) + 1, 1, v40);
          }
          unint64_t v17 = *((void *)v40 + 2);
          unint64_t v47 = *((void *)v40 + 3);
          id v26 = (char *)(v17 + 1);
          if (v17 >= v47 >> 1) {
            id v40 = sub_7DB80((double *)(v47 > 1), v17 + 1, 1, v40);
          }
          *((void *)v40 + 2) = v26;
          id v48 = &v40[2 * v17];
          *((void *)v48 + 4) = v44;
          *((void *)v48 + 5) = v46;
        }
        else
        {
        }
        double v39 = (double **)((char *)v39 + 1);
      }
      while (v38 != v39);
      goto LABEL_72;
    }
    __break(1u);
LABEL_175:
    __break(1u);
    __break(1u);
    goto LABEL_176;
  }
  double v38 = *(double ***)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  v133 = 0;
  if (v38) {
    goto LABEL_28;
  }
LABEL_71:
  id v40 = _swiftEmptyArrayStorage;
LABEL_72:
  swift_bridgeObjectRelease();
  unint64_t v67 = (double **)*((void *)v40 + 2);
  if (v133)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v68 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v6 = (char *)v126[0];
  uint64_t v10 = v131;
  if (v67 != (double **)v68) {
    goto LABEL_91;
  }
  v133 = v67;
  unint64_t v139 = (unint64_t)v40;
  uint64_t v69 = sub_A314(&qword_19C708);
  unint64_t v70 = sub_3601C();
  unint64_t v37 = (unint64_t)&v139;
  uint64_t v132 = (char *)v69;
  uint64_t v130 = (double *)v70;
  unint64_t v71 = (void *)sub_146050();
  swift_bridgeObjectRelease();
  uint64_t v72 = v71[2];
  if (!v72) {
    goto LABEL_91;
  }
  if (v72 != 1)
  {
    unint64_t v17 = v71[4];
    unint64_t v31 = v71[5];
    id v26 = (char *)v71[6];
    unint64_t v37 = v71[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = (int *)&unk_159000;
    double v38 = (double **)&type metadata for String;
    if (v72 == 2)
    {
      if (qword_19AD48 == -1) {
        goto LABEL_97;
      }
    }
    else if (qword_19AD40 == -1)
    {
LABEL_97:
      sub_A314(&qword_1A0A00);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = *((_OWORD *)v10 + 141);
      *(void *)(v81 + 56) = v38;
      unint64_t v82 = sub_1CEB8();
      *(void *)(v81 + 32) = v17;
      *(void *)(v81 + 40) = v31;
      *(void *)(v81 + 96) = v38;
      *(void *)(v81 + 104) = v82;
      *(void *)(v81 + 64) = v82;
      *(void *)(v81 + 72) = v26;
      *(void *)(v81 + 80) = v37;
      uint64_t v18 = sub_145B90();
      unint64_t v19 = v83;
      swift_bridgeObjectRelease();
      uint64_t v10 = v131;
      goto LABEL_8;
    }
LABEL_176:
    swift_once();
    goto LABEL_97;
  }
  if (v38)
  {
    unint64_t v129 = (unint64_t)v71;
    swift_bridgeObjectRetain();
    unint64_t v37 = 0;
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v73 = (id)sub_146810();
      }
      else {
        id v73 = *(id *)(v36 + 8 * v37 + 32);
      }
      unint64_t v17 = (unint64_t)v73;
      id v74 = [v73 administrativeArea];
      if (v74)
      {
        objc_super v75 = v74;
        uint64_t v76 = sub_145BC0();
        id v26 = v77;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = (unint64_t)sub_7DB80(0, *(void *)(v31 + 16) + 1, 1, (double *)v31);
        }
        unint64_t v79 = *(void *)(v31 + 16);
        unint64_t v78 = *(void *)(v31 + 24);
        unint64_t v17 = v79 + 1;
        if (v79 >= v78 >> 1) {
          unint64_t v31 = (unint64_t)sub_7DB80((double *)(v78 > 1), v79 + 1, 1, (double *)v31);
        }
        *(void *)(v31 + 16) = v17;
        id v80 = (double *)(v31 + 16 * v79);
        *((void *)v80 + 4) = v76;
        *((void *)v80 + 5) = v26;
      }
      else
      {
      }
      ++v37;
      uint64_t v10 = v131;
    }
    while (v38 != (double **)v37);
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)v126[0];
    unint64_t v71 = (void *)v129;
  }
  else
  {
    unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (*(double ***)(v31 + 16) != v133)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v71[2])
    {
      uint64_t v18 = v71[4];
      unint64_t v19 = v71[5];
      swift_bridgeObjectRetain();
      goto LABEL_118;
    }
    goto LABEL_175;
  }
  unint64_t v139 = v31;
  unint64_t v37 = (unint64_t)&v139;
  uint64_t v84 = (double *)sub_146050();
  swift_bridgeObjectRelease();
  if (!*((void *)v84 + 2))
  {
    unint64_t v31 = (unint64_t)v84;
    goto LABEL_116;
  }
  unint64_t v129 = *((void *)v84 + 2);
  swift_bridgeObjectRelease();
  unint64_t v85 = *((void *)v84 + 2);
  if (v85 > 1)
  {
    unint64_t v17 = *((void *)v84 + 4);
    long long v96 = (double **)*((void *)v84 + 5);
    unint64_t v31 = *((void *)v84 + 6);
    uint64_t v97 = (double *)*((void *)v84 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v129 >= 3)
    {
      if (qword_19AD40 == -1) {
        goto LABEL_149;
      }
      goto LABEL_179;
    }
    if (v129 == 2)
    {
      if (qword_19AD48 == -1)
      {
LABEL_149:
        sub_A314(&qword_1A0A00);
        uint64_t v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = xmmword_1598D0;
        *(void *)(v112 + 56) = &type metadata for String;
        unint64_t v113 = sub_1CEB8();
        *(void *)(v112 + 32) = v17;
        *(void *)(v112 + 40) = v96;
        *(void *)(v112 + 96) = &type metadata for String;
        *(void *)(v112 + 104) = v113;
        *(void *)(v112 + 64) = v113;
        *(void *)(v112 + 72) = v31;
        *(void *)(v112 + 80) = v97;
        uint64_t v18 = sub_145B90();
        unint64_t v19 = v114;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
LABEL_179:
      swift_once();
      goto LABEL_149;
    }
LABEL_91:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v128 = v84;
  *(void *)&long long v127 = v85;
  if (v38)
  {
    swift_bridgeObjectRetain();
    id v86 = 0;
    uint64_t v87 = _swiftEmptyArrayStorage;
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        v88 = (double *)sub_146810();
      }
      else {
        v88 = (double *)*(id *)(v36 + 8 * (void)v86 + 32);
      }
      unint64_t v31 = (unint64_t)v88;
      id v89 = [v88 subLocality];
      if (v89)
      {
        uint64_t v90 = v89;
        uint64_t v91 = sub_145BC0();
        uint64_t v93 = v92;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v87 = sub_7DB80(0, *((void *)v87 + 2) + 1, 1, v87);
        }
        unint64_t v17 = *((void *)v87 + 2);
        unint64_t v94 = *((void *)v87 + 3);
        unint64_t v31 = v17 + 1;
        if (v17 >= v94 >> 1) {
          uint64_t v87 = sub_7DB80((double *)(v94 > 1), v17 + 1, 1, v87);
        }
        *((void *)v87 + 2) = v31;
        uint64_t v95 = &v87[2 * v17];
        *((void *)v95 + 4) = v91;
        *((void *)v95 + 5) = v93;
      }
      else
      {
      }
      id v86 = (double **)((char *)v86 + 1);
    }
    while (v38 != v86);
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)v126[0];
    uint64_t v10 = v131;
  }
  else
  {
    uint64_t v87 = _swiftEmptyArrayStorage;
  }
  uint64_t v98 = v133;
  if (*((double ***)v87 + 2) != v133) {
    goto LABEL_128;
  }
  unint64_t v139 = (unint64_t)v87;
  uint64_t v99 = (void *)sub_146050();
  swift_bridgeObjectRelease();
  if (v99[2] != 1)
  {
    uint64_t v98 = v133;
LABEL_128:
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRetain();
      long long v100 = 0;
      long long v101 = _swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          Swift::String v102 = (double *)sub_146810();
        }
        else {
          Swift::String v102 = (double *)*(id *)(v36 + 8 * (void)v100 + 32);
        }
        unint64_t v31 = (unint64_t)v102;
        id v103 = [v102 locality];
        if (v103)
        {
          unsigned __int8 v104 = v103;
          uint64_t v105 = sub_145BC0();
          uint64_t v107 = v106;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v101 = sub_7DB80(0, *((void *)v101 + 2) + 1, 1, v101);
          }
          unint64_t v17 = *((void *)v101 + 2);
          unint64_t v108 = *((void *)v101 + 3);
          unint64_t v31 = v17 + 1;
          if (v17 >= v108 >> 1) {
            long long v101 = sub_7DB80((double *)(v108 > 1), v17 + 1, 1, v101);
          }
          *((void *)v101 + 2) = v31;
          uint64_t v109 = &v101[2 * v17];
          *((void *)v109 + 4) = v105;
          *((void *)v109 + 5) = v107;
        }
        else
        {
        }
        long long v100 = (double **)((char *)v100 + 1);
      }
      while (v38 != v100);
      swift_bridgeObjectRelease();
      uint64_t v6 = (char *)v126[0];
      uint64_t v10 = v131;
      uint64_t v98 = v133;
    }
    else
    {
      long long v101 = _swiftEmptyArrayStorage;
    }
    if (*((double ***)v101 + 2) == v98)
    {
      unint64_t v139 = (unint64_t)v101;
      unint64_t v31 = (unint64_t)v130;
      uint64_t v110 = sub_146050();
      swift_bridgeObjectRelease();
      if (*(void *)(v110 + 16) == 1)
      {
        unint64_t v139 = v110;
        uint64_t v111 = (void *)sub_146050();
        swift_bridgeObjectRelease();
        if (v111[2])
        {
          uint64_t v18 = v111[4];
          unint64_t v19 = v111[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
      }
    }
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRetain();
      uint64_t v115 = 0;
      unsigned int v116 = _swiftEmptyArrayStorage;
      do
      {
        if ((v36 & 0xC000000000000001) != 0) {
          uint64_t v117 = (double *)sub_146810();
        }
        else {
          uint64_t v117 = (double *)*(id *)(v36 + 8 * (void)v115 + 32);
        }
        unint64_t v31 = (unint64_t)v117;
        id v118 = [v117 subAdministrativeArea];
        if (v118)
        {
          uint64_t v119 = v118;
          uint64_t v120 = sub_145BC0();
          uint64_t v122 = v121;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v116 = sub_7DB80(0, *((void *)v116 + 2) + 1, 1, v116);
          }
          unint64_t v17 = *((void *)v116 + 2);
          unint64_t v123 = *((void *)v116 + 3);
          unint64_t v31 = v17 + 1;
          if (v17 >= v123 >> 1) {
            unsigned int v116 = sub_7DB80((double *)(v123 > 1), v17 + 1, 1, v116);
          }
          *((void *)v116 + 2) = v31;
          uint64_t v124 = &v116[2 * v17];
          *((void *)v124 + 4) = v120;
          *((void *)v124 + 5) = v122;
        }
        else
        {
        }
        uint64_t v115 = (double **)((char *)v115 + 1);
      }
      while (v38 != v115);
      swift_bridgeObjectRelease();
      uint64_t v6 = (char *)v126[0];
      uint64_t v10 = v131;
    }
    else
    {
      unsigned int v116 = _swiftEmptyArrayStorage;
    }
    long long v96 = (double **)*((void *)v116 + 2);
    swift_bridgeObjectRelease();
    if (v96 == v133)
    {
      unint64_t v139 = (unint64_t)v116;
      long long v96 = (double **)&v139;
      v125 = (void *)sub_146050();
      swift_bridgeObjectRelease();
      if (v125[2] == 1)
      {
        uint64_t v18 = v125[4];
        unint64_t v19 = v125[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    if (!(void)v127) {
      goto LABEL_6;
    }
    uint64_t v97 = v128;
    if (*((void *)v128 + 2))
    {
      uint64_t v18 = *((void *)v128 + 4);
      unint64_t v19 = *((void *)v128 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v129 == 1) {
        goto LABEL_8;
      }
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_179;
  }
  uint64_t v18 = v99[4];
  unint64_t v19 = v99[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_118:
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0) {
    uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
    if (!*(void *)(v138 + v137)) {
      goto LABEL_68;
    }
    swift_retain();
    uint64_t v21 = sub_30670();
    swift_release();
    if (v21 == 1) {
      goto LABEL_45;
    }
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_2C34C(v22);
    if (!v21) {
      goto LABEL_45;
    }
    if (*(void *)(v21 + 16))
    {
      os_log_type_t v24 = v135;
      uint64_t v23 = v136;
      sub_2E1B0(v21 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), (uint64_t)v135);
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v25 = 1;
      os_log_type_t v24 = v135;
      uint64_t v23 = v136;
    }
    (*(void (**)(uint64_t *, uint64_t, uint64_t, int *))(v23 + 56))(v24, v25, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v23 + 48))(v24, 1, v10) == 1)
    {
      sub_1248C((uint64_t)v24, &qword_19C498);
      goto LABEL_45;
    }
    uint64_t v18 = *v24;
    uint64_t v49 = v24[1];
    swift_bridgeObjectRetain();
    sub_2E274((uint64_t)v24);
    if (!v49)
    {
LABEL_45:
      if (*(void *)(v138 + v137))
      {
        swift_retain();
        uint64_t v50 = sub_30670();
        swift_release();
        if (v50 != 1)
        {
          uint64_t v51 = swift_bridgeObjectRetain();
          sub_2C34C(v51);
          if (v50)
          {
            if (*(void *)(v50 + 16))
            {
              uint64_t v52 = v136;
              uint64_t v53 = v134;
              sub_2E1B0(v50 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), v134);
              uint64_t v54 = 0;
            }
            else
            {
              uint64_t v54 = 1;
              uint64_t v52 = v136;
              uint64_t v53 = v134;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v52 + 56))(v53, v54, 1, v10);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v52 + 48))(v53, 1, v10) == 1)
            {
              sub_1248C(v53, &qword_19C498);
              goto LABEL_58;
            }
            uint64_t v55 = v53 + v10[13];
            unint64_t v56 = *(void *)(v55 + 8);
            if (v56 >> 60 == 15)
            {
              sub_2E274(v53);
              goto LABEL_58;
            }
            uint64_t v57 = *(void *)v55;
            sub_C4D4(*(void *)v55, *(void *)(v55 + 8));
            uint64_t v58 = (void *)sub_35D80(v57, v56, &qword_19C718);
            sub_120B4(v57, v56);
            sub_2E274(v53);
            if (v58)
            {
              id v59 = [v58 placemark];

              id v60 = [v59 name];
              if (v60)
              {
                uint64_t v18 = sub_145BC0();
                swift_bridgeObjectRelease();

                return v18;
              }
            }
          }
        }
LABEL_58:
        if (*(void *)(v138 + v137))
        {
          swift_retain();
          uint64_t v61 = sub_30670();
          swift_release();
          if (v61 != 1)
          {
            uint64_t v62 = swift_bridgeObjectRetain();
            sub_2C34C(v62);
            if (v61)
            {
              if (*(void *)(v61 + 16))
              {
                uint64_t v63 = v136;
                sub_2E1B0(v61 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), (uint64_t)v6);
                uint64_t v64 = 0;
              }
              else
              {
                uint64_t v64 = 1;
                uint64_t v63 = v136;
              }
              (*(void (**)(char *, uint64_t, uint64_t, int *))(v63 + 56))(v6, v64, 1, v10);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v6, 1, v10) == 1)
              {
                sub_1248C((uint64_t)v6, &qword_19C498);
              }
              else
              {
                uint64_t v18 = *((void *)v6 + 2);
                uint64_t v65 = *((void *)v6 + 3);
                swift_bridgeObjectRetain();
                sub_2E274((uint64_t)v6);
                if (v65)
                {
                  swift_bridgeObjectRelease();
                  return v18;
                }
              }
            }
          }
        }
      }
LABEL_68:
      swift_bridgeObjectRelease_n();
      return 32;
    }
  }
  return v18;
}

uint64_t type metadata accessor for MapAssetCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_35D58(uint64_t a1, uint64_t a2)
{
  return sub_35D80(a1, a2, &qword_19C718);
}

uint64_t sub_35D6C(uint64_t a1, uint64_t a2)
{
  return sub_35D80(a1, a2, (unint64_t *)&qword_19C888);
}

uint64_t sub_35D80(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_146290();
}

unint64_t sub_3601C()
{
  unint64_t result = qword_19C710;
  if (!qword_19C710)
  {
    sub_12244(&qword_19C708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C710);
  }
  return result;
}

uint64_t sub_36078(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_36088(uint64_t result)
{
  if (result != 2) {
    return sub_2C34C(result);
  }
  return result;
}

uint64_t sub_36098(uint64_t result)
{
  if (result != 2) {
    return sub_36078(result);
  }
  return result;
}

uint64_t sub_360A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_C52C(a1, a2);
  }
}

unint64_t sub_360B4()
{
  unint64_t result = qword_19C720;
  if (!qword_19C720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C720);
  }
  return result;
}

unint64_t sub_36108()
{
  unint64_t result = qword_19C878;
  if (!qword_19C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C878);
  }
  return result;
}

uint64_t sub_3615C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_361C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 11) {
    return sub_27BC0(a3, a4);
  }
  return result;
}

uint64_t sub_361E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_27BA4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_361F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 7) {
    return sub_361C4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_36208(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    return sub_120B4(a3, a4);
  }
  else {
    return sub_C52C(a1, a2);
  }
}

unint64_t sub_3621C()
{
  unint64_t result = qword_19C8F0;
  if (!qword_19C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C8F0);
  }
  return result;
}

unint64_t sub_36270()
{
  unint64_t result = qword_19C900;
  if (!qword_19C900)
  {
    sub_12244(&qword_19C8F8);
    sub_3631C(&qword_19C908, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C900);
  }
  return result;
}

uint64_t sub_3631C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_36364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_145230();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v1 = __chkstk_darwin(v37);
  unint64_t v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_145450();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_A314(&qword_19C150);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_A314(&qword_19C910);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_A314(&qword_19C918);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_144C60();
  uint64_t v33 = *(void *)(v21 - 8);
  uint64_t v34 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
  uint64_t v24 = sub_1454A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
  sub_144C50();
  sub_144BF0();
  sub_144C40();
  sub_145410();
  sub_145410();
  sub_1452F0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v9, v5);
  sub_1453D0();
  uint64_t v26 = v35;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v28 = v37;
  v27(v4, v37);
  v25(v11, v5);
  uint64_t v29 = v23;
  id v30 = v36;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v30, v39, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v28) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v30, v28);
    return sub_36894((uint64_t)v14);
  }
  else
  {
    v27(v30, v28);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v14, v28);
  }
}

uint64_t sub_36894(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C150);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_368F8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_146C70();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_369C8(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_146C80();
    sub_8758(a1);
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_146CD0();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x6F746F6870;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            uint64_t v10 = 0x746F68506576696CLL;
            unint64_t v9 = 0xE90000000000006FLL;
            break;
          case 2:
            uint64_t v10 = 0x6F65646976;
            break;
          case 3:
            uint64_t v10 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1802465122;
            break;
          case 6:
            uint64_t v10 = 0x6F69647561;
            break;
          case 7:
            uint64_t v10 = 0x7469736976;
            break;
          case 8:
            uint64_t v10 = 0x6E695069746C756DLL;
            unint64_t v9 = 0xEB0000000070614DLL;
            break;
          case 9:
            unint64_t v9 = 0xEA00000000007061;
            uint64_t v10 = 0x4D636972656E6567;
            break;
          case 0xA:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1802398060;
            break;
          case 0xB:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x746361746E6F63;
            break;
          case 0xC:
            uint64_t v10 = 0x4974756F6B726F77;
            unint64_t v9 = 0xEB000000006E6F63;
            break;
          case 0xD:
            uint64_t v10 = 0x5274756F6B726F77;
            unint64_t v9 = 0xEC0000006574756FLL;
            break;
          case 0xE:
            uint64_t v10 = 0x697463656C666572;
            unint64_t v9 = 0xEA00000000006E6FLL;
            break;
          case 0xF:
            uint64_t v10 = 0x4D664F6574617473;
            unint64_t v9 = 0xEB00000000646E69;
            break;
          case 0x10:
            uint64_t v10 = 0x63416E6F69746F6DLL;
            unint64_t v9 = 0xEE00797469766974;
            break;
          case 0x11:
            uint64_t v10 = 0x7261506472696874;
            unint64_t v9 = 0xEF616964654D7974;
            break;
          case 0x12:
            uint64_t v10 = 0x6C6F686563616C70;
            unint64_t v9 = 0xEB00000000726564;
            break;
          case 0x13:
            uint64_t v10 = 0x76456B6165727473;
            unint64_t v9 = 0xEB00000000746E65;
            break;
          case 0x14:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6F746F6870;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE90000000000006FLL;
            if (v10 == 0x746F68506576696CLL) {
              goto LABEL_62;
            }
            goto LABEL_63;
          case 2:
            uint64_t v13 = 1701079414;
            goto LABEL_35;
          case 3:
            if (v10 != 0x636973756DLL) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v14 = 0x736163646F70;
            goto LABEL_45;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1802465122) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 6:
            uint64_t v13 = 1768191329;
LABEL_35:
            if (v10 != (v13 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 7:
            if (v10 != 0x7469736976) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 8:
            uint64_t v15 = 0x6E695069746C756DLL;
            uint64_t v16 = 7364941;
            goto LABEL_58;
          case 9:
            unint64_t v11 = 0xEA00000000007061;
            if (v10 != 0x4D636972656E6567) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 10:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1802398060) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 11:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v14 = 0x6361746E6F63;
LABEL_45:
            if (v10 != (v14 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 12:
            uint64_t v15 = 0x4974756F6B726F77;
            uint64_t v16 = 7237475;
            goto LABEL_58;
          case 13:
            unint64_t v11 = 0xEC0000006574756FLL;
            if (v10 != 0x5274756F6B726F77) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 14:
            unint64_t v11 = 0xEA00000000006E6FLL;
            if (v10 != 0x697463656C666572) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 15:
            uint64_t v15 = 0x4D664F6574617473;
            uint64_t v16 = 6581865;
            goto LABEL_58;
          case 16:
            unint64_t v11 = 0xEE00797469766974;
            if (v10 != 0x63416E6F69746F6DLL) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 17:
            unint64_t v11 = 0xEF616964654D7974;
            if (v10 != 0x7261506472696874) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 18:
            uint64_t v15 = 0x6C6F686563616C70;
            uint64_t v16 = 7497060;
LABEL_58:
            unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            if (v10 != v15) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 19:
            uint64_t v12 = 0x76456B6165727473;
            unint64_t v11 = 0xEB00000000746E65;
            goto LABEL_61;
          case 20:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x6E776F6E6B6E75) {
              goto LABEL_63;
            }
            goto LABEL_62;
          default:
LABEL_61:
            if (v10 != v12) {
              goto LABEL_63;
            }
LABEL_62:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v17 = 1;
              return v17 & 1;
            }
LABEL_63:
            char v17 = sub_146B90();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              return v17 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v17 & 1;
            }
            break;
        }
      }
    }
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_3706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_146C80();
    sub_145C70();
    Swift::Int v6 = sub_146CD0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_146B90() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_146B90() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_371A4(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_146C80();
  sub_146C90(v3);
  Swift::Int v4 = sub_146CD0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_37294(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_145BC0();
    sub_146C80();
    sub_145C70();
    Swift::Int v3 = sub_146CD0();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_145BC0();
      uint64_t v9 = v8;
      if (v7 == sub_145BC0() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_145BC0();
          uint64_t v17 = v16;
          if (v15 == sub_145BC0() && v17 == v18) {
            break;
          }
          char v20 = sub_146B90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_3745C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_146C80();
    sub_145A30();
    Swift::Int v6 = sub_146CD0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_146B90() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_146B90() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_37594(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_146C80();
    sub_DB5A0(a1);
    sub_145C70();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_146CD0();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1954047348;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x64724F7465737361;
            unint64_t v9 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v10 = 0xD000000000000015;
            unint64_t v9 = 0x8000000000149BF0;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x656C746974;
            break;
          case 4:
            unint64_t v10 = 0x7461447972746E65;
            unint64_t v9 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v9 = 0xE800000000000000;
            unint64_t v10 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v9 = 0xEA00000000006574;
            unint64_t v10 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v10 = 0x72756F5365746164;
            unint64_t v9 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v9 = 0xE700000000000000;
            unint64_t v10 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v9 = 0x8000000000149C40;
            unint64_t v10 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xED0000676E697265;
            if (v10 == 0x64724F7465737361) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v11 = 0x8000000000149BF0;
            if (v10 != 0xD000000000000015) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x656C746974) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            unint64_t v11 = 0xE900000000000065;
            if (v10 != 0x7461447972746E65) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x6449656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            if (v10 != 0x6144656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v11 = 0xEA00000000006563;
            if (v10 != 0x72756F5365746164) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x64656767616C66) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x74706D6F7270) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 10:
            unint64_t v11 = 0x8000000000149C40;
            unint64_t v12 = 0xD000000000000011;
            goto LABEL_36;
          case 11:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x726568746FLL) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v12) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_38:
            char v13 = sub_146B90();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_37A04(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19C9F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_3BD58();
  sub_146D10();
  char v13 = 0;
  type metadata accessor for StreakSummary();
  sub_3BDAC(&qword_19CA08, (void (*)(uint64_t))type metadata accessor for StreakSummary);
  sub_146B10();
  if (!v1)
  {
    _s8SnapshotVMa();
    char v12 = 1;
    sub_146B10();
    char v11 = 2;
    sub_146B00();
    char v10 = 3;
    sub_146B00();
    char v9 = 4;
    sub_146B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_37C50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = (int *)type metadata accessor for StreakSummary();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v33 = (uint64_t)&v25 - v6;
  uint64_t v34 = sub_A314(&qword_19CA10);
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unint64_t v36 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s8SnapshotVMa();
  char v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_145230();
  char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(&v11[v3[5]], 1, 1, v12);
  v13(&v11[v3[6]], 1, 1, v12);
  *(void *)&v11[v3[7]] = 0;
  uint64_t v14 = (uint64_t)&v11[v9[7]];
  v13((char *)v14, 1, 1, v12);
  v13((char *)(v14 + v3[5]), 1, 1, v12);
  v13((char *)(v14 + v3[6]), 1, 1, v12);
  unint64_t v31 = v3;
  *(void *)(v14 + v3[7]) = 0;
  uint64_t v15 = v9[8];
  *(void *)&v11[v15] = 0;
  uint64_t v16 = v9[9];
  *(void *)&v11[v16] = 0;
  uint64_t v17 = v9[10];
  *(void *)&v11[v17] = 0;
  sub_2F114(a1, a1[3]);
  sub_3BD58();
  uint64_t v18 = v35;
  sub_146D00();
  if (!v18)
  {
    uint64_t v27 = v15;
    uint64_t v28 = v14;
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    uint64_t v35 = a1;
    uint64_t v19 = (uint64_t)v32;
    char v41 = 0;
    sub_3BDAC(&qword_19CA18, (void (*)(uint64_t))type metadata accessor for StreakSummary);
    char v20 = v36;
    sub_146A60();
    sub_3BDF4(v33, (uint64_t)v11);
    char v40 = 1;
    sub_146A60();
    sub_3BDF4(v19, v28);
    char v39 = 2;
    *(void *)&v11[v27] = sub_146A50();
    char v38 = 3;
    *(void *)&v11[v25] = sub_146A50();
    char v37 = 4;
    uint64_t v22 = v34;
    uint64_t v23 = sub_146A50();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v22);
    uint64_t v24 = v29;
    a1 = v35;
    *(void *)&v11[v26] = v23;
    sub_3BE58((uint64_t)v11, v24, (uint64_t (*)(void))_s8SnapshotVMa);
  }
  sub_C7FC((uint64_t)a1);
  return sub_39CE0((uint64_t)v11, (uint64_t (*)(void))_s8SnapshotVMa);
}

uint64_t sub_380FC()
{
  uint64_t result = 0x6144657669746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6557657669746361;
      break;
    case 2:
      uint64_t result = 0x6E756F4364726F77;
      break;
    case 3:
      uint64_t result = 0x746E756F43796164;
      break;
    case 4:
      uint64_t result = 0x5473656972746E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_381C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_3C0CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_381EC(uint64_t a1)
{
  unint64_t v2 = sub_3BD58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_38228(uint64_t a1)
{
  unint64_t v2 = sub_3BD58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_38264@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_37C50(a1, a2);
}

uint64_t sub_3827C(void *a1)
{
  return sub_37A04(a1);
}

void sub_38294()
{
  uint64_t v1 = v0;
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  __chkstk_darwin(Update);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19C948);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)_s8SnapshotVMa();
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options;
  if (sub_371A4(5u, *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options)))
  {
    id v13 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v14 = sub_145B80();
    id v37 = [v13 initWithSuiteName:v14];

    if (v37)
    {
      NSString v15 = sub_145B80();
      id v16 = [v37 dataForKey:v15];

      if (v16)
      {
        uint64_t v34 = Update;
        uint64_t v17 = sub_144FA0();
        unint64_t v19 = v18;

        sub_144D40();
        swift_allocObject();
        sub_144D30();
        sub_3BDAC(&qword_19C950, (void (*)(uint64_t))_s8SnapshotVMa);
        uint64_t v35 = v17;
        unint64_t v36 = v19;
        sub_144D20();
        swift_release();
        (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v7, 0, 1, v8);
        sub_39BF8((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))_s8SnapshotVMa);
        swift_getKeyPath();
        uint64_t v33 = 0;
        uint64_t v39 = v1;
        sub_3BDAC(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
        sub_145500();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145520();
        swift_release();
        uint64_t v21 = v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks;
        swift_beginAccess();
        sub_39C60((uint64_t)v11, v21);
        swift_endAccess();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145510();
        swift_release();
        uint64_t v32 = &v11[v8[5]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_145500();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145520();
        swift_release();
        swift_beginAccess();
        uint64_t v22 = type metadata accessor for InsightsDataManager.Streaks(0);
        sub_39C60((uint64_t)v32, v21 + *(int *)(v22 + 20));
        swift_endAccess();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145510();
        swift_release();
        uint64_t v23 = *(void *)&v11[v8[6]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_145500();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145520();
        swift_release();
        *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount) = v23;
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145510();
        swift_release();
        uint64_t v24 = *(void *)&v11[v8[7]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_145500();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_145520();
        swift_release();
        uint64_t v25 = v1 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate;
        swift_beginAccess();
        uint64_t v32 = (char *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
        uint64_t v26 = v25 + *((int *)v32 + 5);
        *(void *)uint64_t v26 = v24;
        *(unsigned char *)(v26 + 8) = 0;
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_145510();
        swift_release();
        uint64_t v31 = *(void *)&v11[v8[8]];
        swift_getKeyPath();
        uint64_t v38 = v1;
        sub_145500();
        swift_release();
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_145520();
        swift_release();
        uint64_t v27 = v25 + *((int *)v32 + 8);
        *(void *)uint64_t v27 = v31;
        *(unsigned char *)(v27 + 8) = 0;
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_145510();
        swift_release();
        sub_1451F0();
        uint64_t v28 = *(void *)(v1 + v12);
        uint64_t v29 = v34;
        *(void *)&v4[*(int *)(v34 + 20)] = 0;
        *(void *)&v4[*(int *)(v29 + 24)] = v28;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(&v31 - 2) = v1;
        *(&v31 - 1) = (uint64_t)v4;
        uint64_t v38 = v1;
        swift_bridgeObjectRetain();
        sub_1454F0();
        swift_release();
        sub_39CE0((uint64_t)v4, type metadata accessor for InsightsDataManager.LastUpdate);

        sub_C52C(v35, v36);
        sub_39CE0((uint64_t)v11, (uint64_t (*)(void))_s8SnapshotVMa);
      }
      else
      {
        id v20 = v37;
      }
    }
  }
}

uint64_t sub_38AA4()
{
  uint64_t v1 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - v4;
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v43 - v10;
  uint64_t v48 = _s8SnapshotVMa();
  __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v43 - v18;
  uint64_t v50 = v0;
  uint64_t result = sub_371A4(5u, *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager_options));
  if (result)
  {
    swift_getKeyPath();
    uint64_t v21 = v50;
    uint64_t v22 = v50 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager___observationRegistrar;
    uint64_t v54 = v50;
    uint64_t v45 = sub_3BDAC(&qword_19C920, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    uint64_t v46 = v22;
    sub_145500();
    swift_release();
    uint64_t v23 = v21 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__lastUpdated;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v23, v13);
    sub_145110();
    sub_3BDAC((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
    LOBYTE(v22) = sub_145AD0();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v17, v13);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v19, v13);
    if ((v22 & 1) == 0)
    {
      swift_getKeyPath();
      uint64_t v53 = v50;
      sub_145500();
      swift_release();
      uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
      uint64_t result = sub_371A4(5u, *(void *)(v23 + *(int *)(Update + 24)));
      if ((result & 1) == 0)
      {
        swift_getKeyPath();
        uint64_t v26 = v50;
        uint64_t v53 = v50;
        sub_145500();
        swift_release();
        uint64_t v27 = v26 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__streaks;
        swift_beginAccess();
        sub_3BE58(v27, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_145500();
        swift_release();
        uint64_t v28 = type metadata accessor for InsightsDataManager.Streaks(0);
        sub_3BE58(v27 + *(int *)(v28 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_145500();
        swift_release();
        uint64_t v44 = *(void *)(v26 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__wordCount);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_145500();
        swift_release();
        uint64_t v29 = v26 + OBJC_IVAR____TtC15JournalSettings19InsightsDataManager__byEntryDate;
        swift_beginAccess();
        sub_3BE58(v29, (uint64_t)v5, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v43 = sub_39214();
        sub_39CE0((uint64_t)v5, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        swift_getKeyPath();
        uint64_t v51 = v26;
        sub_145500();
        swift_release();
        uint64_t v30 = v29;
        uint64_t v31 = v47;
        sub_3BE58(v30, v47, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v32 = sub_393B4();
        sub_39CE0(v31, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v33 = v49;
        sub_39BF8((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        uint64_t v34 = (int *)v48;
        sub_39BF8((uint64_t)v9, v33 + *(int *)(v48 + 20), (uint64_t (*)(void))type metadata accessor for StreakSummary);
        *(void *)(v33 + v34[6]) = v44;
        *(void *)(v33 + v34[7]) = v43;
        *(void *)(v33 + v34[8]) = v32;
        id v35 = objc_allocWithZone((Class)NSUserDefaults);
        NSString v36 = sub_145B80();
        id v37 = [v35 initWithSuiteName:v36];

        if (v37)
        {
          sub_144D70();
          swift_allocObject();
          sub_144D60();
          sub_3BDAC(&qword_19C928, (void (*)(uint64_t))_s8SnapshotVMa);
          uint64_t v38 = sub_144D50();
          unint64_t v40 = v39;
          swift_release();
          Class isa = sub_144F90().super.isa;
          NSString v42 = sub_145B80();
          [v37 setObject:isa forKey:v42];

          sub_C52C(v38, v40);
        }
        return sub_39CE0(v33, (uint64_t (*)(void))_s8SnapshotVMa);
      }
    }
  }
  return result;
}

uint64_t sub_39214()
{
  uint64_t v1 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + *(int *)(sub_A314(&qword_19C938) + 32));
  uint64_t result = sub_39844(v4);
  if (v7) {
    goto LABEL_10;
  }
  unsigned int v8 = *(_DWORD *)(v4 + 36);
  if (v8 != v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (result == v9)
  {
    sub_3BE58(v0, (uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v10 = &v3[*(int *)(v1 + 20)];
    uint64_t v11 = *(void *)v10;
    int v12 = v10[8];
    sub_39CE0((uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    if (v12) {
      return 0;
    }
    else {
      return v11;
    }
  }
  else
  {
    uint64_t v13 = sub_39844(v4);
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    uint64_t v18 = sub_398E4(v13, v14, v16 & 1, v9, v8, 0);
    sub_262F8(v13, v15, v17);
    sub_3BE58(v0, (uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_39CE0((uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    return v18;
  }
}

uint64_t sub_393B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1451F0();
  uint64_t v9 = sub_395AC((uint64_t)v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v13)
  {
    sub_39B4C(v9, v11, v13);
    sub_3BE58(v1, (uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_39CE0((uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  }
  else
  {
    sub_3BE58(v1, (uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v14 = &v4[*(int *)(v2 + 32)];
    uint64_t v11 = *(void *)v14;
    int v15 = v14[8];
    sub_39CE0((uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    if (v15) {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_395AC(uint64_t a1)
{
  uint64_t v23 = sub_A314(&qword_19C930);
  __chkstk_darwin(v23);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_19C938);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v22 = v1;
  uint64_t v11 = v1 + v10;
  sub_3BDAC((unint64_t *)&qword_19C940, (void (*)(uint64_t))&type metadata accessor for Date);
  char v12 = sub_145A70();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v21[1] = a1;
  v13(v8, a1, v5);
  sub_39B90(v11, (uint64_t)v4);
  if ((v12 & 1) == 0)
  {
    sub_1248C((uint64_t)v4, &qword_19C930);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  char v14 = sub_145A80();
  sub_1248C((uint64_t)v4, &qword_19C930);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v14 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = *(void *)(v22 + *(int *)(v9 + 32));
  uint64_t v16 = sub_140FF8();
  if (!*(void *)(v15 + 16)) {
    return 0;
  }
  unint64_t v17 = sub_137B94(v16);
  if ((v18 & 1) == 0) {
    return 0;
  }
  uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 32 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v19;
}

uint64_t sub_39844(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 88);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_398E4(uint64_t result, uint64_t a2, char a3, uint64_t a4, unsigned int a5, char a6)
{
  if (a6 & 1) != 0 || (a3) {
    goto LABEL_38;
  }
  unint64_t v8 = result;
  if (a4 < result) {
    goto LABEL_36;
  }
  uint64_t v9 = a2;
  if (a5 != a2)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (result != a4)
  {
    uint64_t result = sub_A314(&qword_19C938);
    unsigned int v11 = a5;
    uint64_t v12 = *(void *)(v6 + *(int *)(result + 32));
    uint64_t v13 = v12 + 64;
    uint64_t v14 = v12 + 96;
    uint64_t v10 = 1;
    while (1)
    {
      if ((v8 & 0x8000000000000000) != 0 || (uint64_t v15 = 1 << *(unsigned char *)(v12 + 32), (uint64_t)v8 >= v15))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      unint64_t v16 = v8 >> 6;
      unint64_t v17 = *(void *)(v13 + 8 * (v8 >> 6));
      if (((v17 >> v8) & 1) == 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(v12 + 36) != v9) {
        goto LABEL_34;
      }
      unint64_t v18 = v17 & (-2 << (v8 & 0x3F));
      if (v18)
      {
        unint64_t v8 = __clz(__rbit64(v18)) | v8 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v19 = v16 + 1;
        unint64_t v20 = (unint64_t)(v15 + 63) >> 6;
        if (v16 + 1 >= v20) {
          goto LABEL_26;
        }
        unint64_t v21 = *(void *)(v13 + 8 * v19);
        if (!v21)
        {
          unint64_t v19 = v16 + 2;
          if (v16 + 2 >= v20) {
            goto LABEL_26;
          }
          unint64_t v21 = *(void *)(v13 + 8 * v19);
          if (!v21)
          {
            unint64_t v19 = v16 + 3;
            if (v16 + 3 >= v20) {
              goto LABEL_26;
            }
            unint64_t v21 = *(void *)(v13 + 8 * v19);
            if (!v21)
            {
              while (v20 - 4 != v16)
              {
                unint64_t v21 = *(void *)(v14 + 8 * v16++);
                if (v21)
                {
                  uint64_t v22 = v14;
                  uint64_t result = sub_262F8(v8, v9, 0);
                  uint64_t v14 = v22;
                  unsigned int v11 = a5;
                  unint64_t v19 = v16 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t v23 = v14;
              uint64_t result = sub_262F8(v8, v9, 0);
              uint64_t v14 = v23;
              unsigned int v11 = a5;
LABEL_26:
              unint64_t v8 = v15;
              goto LABEL_27;
            }
          }
        }
LABEL_17:
        unint64_t v8 = __clz(__rbit64(v21)) + (v19 << 6);
      }
LABEL_27:
      if (v9 != v11) {
        goto LABEL_35;
      }
      if (v8 == a4) {
        return v10;
      }
      uint64_t v9 = a5;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
    }
  }
  return 0;
}

uint64_t _s8SnapshotVMa()
{
  uint64_t result = qword_19C9B0;
  if (!qword_19C9B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_39B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_39B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_39BF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_39C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_39CC4()
{
  return sub_115A6C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_39CE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_39D40(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145230();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_A314(&qword_19C150);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = (int *)type metadata accessor for StreakSummary();
    uint64_t v13 = v12[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (v9((uint64_t *)((char *)a2 + v13), 1, v7))
    {
      uint64_t v16 = sub_A314(&qword_19C150);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v15, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    }
    uint64_t v17 = v12[6];
    unint64_t v18 = (char *)a1 + v17;
    unint64_t v19 = (char *)a2 + v17;
    if (v9((uint64_t *)((char *)a2 + v17), 1, v7))
    {
      uint64_t v20 = sub_A314(&qword_19C150);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v18, v19, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + v12[7]) = *(uint64_t *)((char *)a2 + v12[7]);
    uint64_t v21 = a3[5];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v35 = v8;
    NSString v36 = a3;
    if (v9((uint64_t *)((char *)a2 + v21), 1, v7))
    {
      uint64_t v24 = sub_A314(&qword_19C150);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v22, v23, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
    }
    uint64_t v25 = v12[5];
    uint64_t v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    if (v9((uint64_t *)&v23[v25], 1, v7))
    {
      uint64_t v28 = sub_A314(&qword_19C150);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v27, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v7);
    }
    uint64_t v29 = v12[6];
    uint64_t v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    if (v9((uint64_t *)&v23[v29], 1, v7))
    {
      uint64_t v32 = sub_A314(&qword_19C150);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v31, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v7);
    }
    *(void *)&v22[v12[7]] = *(void *)&v23[v12[7]];
    uint64_t v33 = v36[7];
    *(uint64_t *)((char *)a1 + v36[6]) = *(uint64_t *)((char *)a2 + v36[6]);
    *(uint64_t *)((char *)a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v36[8]) = *(uint64_t *)((char *)a2 + v36[8]);
  }
  return a1;
}

uint64_t sub_3A234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_145230();
  uint64_t v14 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v4);
  }
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + *(int *)(v6 + 24);
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  if (!v5(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v4);
  }
  uint64_t v10 = v9 + *(int *)(v6 + 20);
  if (!v5(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v4);
  }
  uint64_t v11 = v9 + *(int *)(v6 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v11, 1, v4);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v11, v4);
  }
  return result;
}

char *sub_3A478(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v8(&a2[v11], 1, v6))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v15 = v10[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v8(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v19 = a3[5];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v34 = a3;
  uint64_t v22 = v8;
  if (v8(&a2[v19], 1, v6))
  {
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = v10[5];
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  if (v22(&v21[v24], 1, v6))
  {
    uint64_t v27 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v10[6];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  if (v22(&v21[v28], 1, v6))
  {
    uint64_t v31 = sub_A314(&qword_19C150);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  *(void *)&v20[v10[7]] = *(void *)&v21[v10[7]];
  uint64_t v32 = v34[7];
  *(void *)&a1[v34[6]] = *(void *)&a2[v34[6]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
  return a1;
}

char *sub_3A918(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for StreakSummary();
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v7(&a1[v12], 1, v6);
  int v16 = v7(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = v11[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v7(&a1[v18], 1, v6);
  int v22 = v7(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
  uint64_t v24 = a3[5];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v7(&a1[v24], 1, v6);
  int v28 = v7(v26, 1, v6);
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = v11[5];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  int v33 = v7(&v25[v30], 1, v6);
  int v34 = v7(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = v11[6];
  id v37 = &v25[v36];
  uint64_t v38 = &v26[v36];
  int v39 = v7(&v25[v36], 1, v6);
  int v40 = v7(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v37, v38, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v37, 0, 1, v6);
LABEL_37:
  *(void *)&v25[v11[7]] = *(void *)&v26[v11[7]];
  *(void *)&a1[v43[6]] = *(void *)&v44[v43[6]];
  *(void *)&a1[v43[7]] = *(void *)&v44[v43[7]];
  *(void *)&a1[v43[8]] = *(void *)&v44[v43[8]];
  return a1;
}

char *sub_3B018(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v8(&a2[v11], 1, v6))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v15 = v10[6];
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v8(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v19 = a3[5];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  int v34 = a3;
  int v22 = v8;
  if (v8(&a2[v19], 1, v6))
  {
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = v10[5];
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  if (v22(&v21[v24], 1, v6))
  {
    uint64_t v27 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v10[6];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  if (v22(&v21[v28], 1, v6))
  {
    uint64_t v31 = sub_A314(&qword_19C150);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  *(void *)&v20[v10[7]] = *(void *)&v21[v10[7]];
  uint64_t v32 = v34[7];
  *(void *)&a1[v34[6]] = *(void *)&a2[v34[6]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
  return a1;
}

char *sub_3B4B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for StreakSummary();
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v7(&a1[v12], 1, v6);
  int v16 = v7(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = v11[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v7(&a1[v18], 1, v6);
  int v22 = v7(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
  uint64_t v24 = a3[5];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v7(&a1[v24], 1, v6);
  int v28 = v7(v26, 1, v6);
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = v11[5];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  int v33 = v7(&v25[v30], 1, v6);
  int v34 = v7(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_A314(&qword_19C150);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = v11[6];
  id v37 = &v25[v36];
  uint64_t v38 = &v26[v36];
  int v39 = v7(&v25[v36], 1, v6);
  int v40 = v7(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v37, v38, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_A314(&qword_19C150);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v37, 0, 1, v6);
LABEL_37:
  *(void *)&v25[v11[7]] = *(void *)&v26[v11[7]];
  uint64_t v42 = v44[7];
  *(void *)&a1[v44[6]] = *(void *)&v45[v44[6]];
  *(void *)&a1[v42] = *(void *)&v45[v42];
  *(void *)&a1[v44[8]] = *(void *)&v45[v44[8]];
  return a1;
}

uint64_t sub_3BBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3BBC8);
}

uint64_t sub_3BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_3BC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3BC48);
}

uint64_t sub_3BC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_3BCB8()
{
  uint64_t result = type metadata accessor for StreakSummary();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_3BD58()
{
  unint64_t result = qword_19CA00;
  if (!qword_19CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19CA00);
  }
  return result;
}

uint64_t sub_3BDAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3BDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_3BE58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *_s8SnapshotV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3BF8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8SnapshotV10CodingKeysOMa()
{
  return &_s8SnapshotV10CodingKeysON;
}

unint64_t sub_3BFC8()
{
  unint64_t result = qword_19CA20;
  if (!qword_19CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19CA20);
  }
  return result;
}

unint64_t sub_3C020()
{
  unint64_t result = qword_19CA28;
  if (!qword_19CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19CA28);
  }
  return result;
}

unint64_t sub_3C078()
{
  unint64_t result = qword_19CA30;
  if (!qword_19CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19CA30);
  }
  return result;
}

uint64_t sub_3C0CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144657669746361 && a2 == 0xEA00000000007379;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6557657669746361 && a2 == 0xEB00000000736B65 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E756F4364726F77 && a2 == 0xE900000000000074 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F43796164 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5473656972746E65 && a2 == 0xEF72616559736968)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_3C340()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19CA38);
  sub_C584(v0, (uint64_t)qword_19CA38);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t AttachmentDownloadOperation.main@Sendable ()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_A314(&qword_19EB20);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_144F60();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_3C53C, 0, 0);
}

uint64_t sub_3C53C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + qword_19CA60);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  unsigned int v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  unint64_t v5 = sub_3D02C();
  *unsigned int v4 = v0;
  v4[1] = sub_3C644;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_19CA70, v3, v5);
}

uint64_t sub_3C644()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_3CC14;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_3C760;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_3C760()
{
  int v34 = v0;
  uint64_t v1 = v0[2];
  if (!sub_146470()) {
    goto LABEL_7;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_7:
    if (qword_19ACC0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_145760();
    sub_C584(v17, (uint64_t)qword_19CA38);
    uint64_t v18 = v1;
    uint64_t v19 = sub_145740();
    os_log_type_t v20 = sub_146200();
    if (os_log_type_enabled(v19, v20))
    {
      int v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)int v21 = 136315138;
      id v22 = [v18 debugDescription];
      uint64_t v23 = sub_145BC0();
      unint64_t v25 = v24;

      v0[3] = sub_3D2B4(v23, v25, &v33);
      sub_146610();
      swift_bridgeObjectRelease();

      _os_log_impl(&def_94138, v19, v20, "error getting DataConfig.JournalEntryAssetFileAttachment.file: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_19;
  }
  id v3 = [v2 fileURL];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    sub_144EF0();

    int v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      uint64_t v10 = v0[10];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[7];
      uint64_t v13 = v0[4];
      swift_unknownObjectRelease();
      v9(v10, v11, v12);
      uint64_t v14 = sub_A314(&qword_19CA80);
      uint64_t v15 = *(int *)(v14 + 48);
      v9(v13, v10, v12);
      uint64_t v16 = 0;
      *(void *)(v13 + v15) = v1;
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
  }
  sub_296E0(v0[6]);
  if (qword_19ACC0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_145760();
  sub_C584(v26, (uint64_t)qword_19CA38);
  int v27 = sub_145740();
  os_log_type_t v28 = sub_146200();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&def_94138, v27, v28, "ckAsset.fileURL is nil", v29, 2u);
    swift_slowDealloc();
    uint64_t v30 = v1;
  }
  else
  {
    uint64_t v30 = v27;
    int v27 = v1;
  }
  swift_unknownObjectRelease();

LABEL_19:
  uint64_t v14 = sub_A314(&qword_19CA80);
  uint64_t v16 = 1;
LABEL_20:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v0[4], v16, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_3CC14()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3CCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_3CCC4, 0, 0);
}

uint64_t sub_3CCC4()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_19CA88);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_3CDD0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_6F3C0;
  v0[13] = &unk_186620;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_3CDD0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_3CF00;
  }
  else {
    uint64_t v2 = sub_3CEE0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_3CEE0()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3CF00()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3CF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_21598;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_3CCC4, 0, 0);
}

unint64_t sub_3D02C()
{
  unint64_t result = qword_19CA78;
  if (!qword_19CA78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19CA78);
  }
  return result;
}

id AssetMetadataDownloadOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void AttachmentDownloadOperation.init()()
{
}

void sub_3D0D0()
{
}

void sub_3D100()
{
  id v1 = *(void **)(v0 + qword_19CA60);
}

id AttachmentDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttachmentDownloadOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_3D198(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_19CA60);
}

unsigned char **sub_3D204(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_3D214(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_3D23C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_3D2B4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_146610();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_3D2B4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_3D428(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_C738((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_C738((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_C7FC((uint64_t)v12);
  return v7;
}

uint64_t type metadata accessor for AttachmentDownloadOperation()
{
  uint64_t result = qword_19CAC0;
  if (!qword_19CAC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3D3D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3D420()
{
  return type metadata accessor for AttachmentDownloadOperation();
}

uint64_t sub_3D428(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_146620();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_3D5E4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_146870();
  if (!v8)
  {
    sub_146900();
    __break(1u);
LABEL_17:
    uint64_t result = sub_146970();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_3D5E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_3D67C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_3D7F4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_3D7F4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_3D67C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_90444(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1467E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_146900();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_145CB0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_146970();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_146900();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_3D7F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_A314(&qword_19CBB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

id sub_3D944(uint64_t a1)
{
  return sub_3D96C(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_1A3A30);
}

id sub_3D958(uint64_t a1)
{
  return sub_3D96C(a1, (SEL *)&selRef_systemIndigoColor, &qword_1A3A38);
}

id sub_3D96C(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

void sub_3D9B0()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  id v1 = sub_E5258(UIFontWeightBold);

  qword_1A3A40 = (uint64_t)v1;
}

void sub_3DA1C()
{
  qword_1A3A48 = 0x4042000000000000;
}

void sub_3DA2C()
{
  qword_1A3A50 = 0x4034000000000000;
}

void sub_3DA3C()
{
  qword_1A3A58 = 0x4034000000000000;
}

void sub_3DA4C()
{
  qword_1A3A60 = 0x4028000000000000;
}

void sub_3DA5C()
{
  qword_1A3A68 = 0x4020000000000000;
}

void sub_3DA6C()
{
  qword_1A3A70 = 0x4010000000000000;
}

double sub_3DA7C()
{
  if (qword_19AD08 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1A3A70 * 0.5;
  *(double *)&qword_1A3A78 = *(double *)&qword_1A3A70 * 0.5;
  return result;
}

void sub_3DAD8()
{
  qword_1A3A80 = 0x4010000000000000;
}

void sub_3DAE8()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B650;
  v6._countAndFlagsBits = 8236;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3A88 = v2;
  unk_1A3A90 = v4;
}

void sub_3DB8C()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B690;
  v6._countAndFlagsBits = 19279;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3A98 = v2;
  unk_1A3AA0 = v4;
}

void sub_3DC30()
{
  id v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000038;
  v5._countAndFlagsBits = 0x800000000014B610;
  v6._object = (void *)0x800000000014B5D0;
  v8._object = (void *)0x800000000014B490;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000010;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AA8 = v2;
  unk_1A3AB0 = v4;
}

void sub_3DCFC()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B590;
  v6._object = (void *)0x800000000014B570;
  v6._countAndFlagsBits = 0xD000000000000014;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AB8 = v2;
  unk_1A3AC0 = v4;
}

void sub_3DDB4()
{
  id v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000038;
  v5._countAndFlagsBits = 0x800000000014B4B0;
  v6._object = (void *)0x800000000014B450;
  v8._object = (void *)0x800000000014B490;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000010;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AC8 = v2;
  unk_1A3AD0 = v4;
}

void sub_3DE7C()
{
  id v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000031;
  v5._countAndFlagsBits = 0x800000000014B520;
  v6._object = (void *)0x800000000014B4E0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x2520646E61204025;
  v8._object = (void *)0xE900000000000040;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AD8 = v2;
  unk_1A3AE0 = v4;
}

void sub_3DF44()
{
  id v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD00000000000001ELL;
  v5._countAndFlagsBits = 0x800000000014B6F0;
  v6._object = (void *)0x800000000014B6D0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AE8 = v2;
  unk_1A3AF0 = v4;
}

void sub_3DFFC()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B7C0;
  v6._object = (void *)0x800000000014B790;
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3AF8 = v2;
  unk_1A3B00 = v4;
}

void sub_3E0B4()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B750;
  v6._countAndFlagsBits = 6710895;
  v6._object = (void *)0xE300000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3B08 = v2;
  unk_1A3B10 = v4;
}

void sub_3E15C()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x800000000014B710;
  v6._countAndFlagsBits = 28271;
  v6._object = (void *)0xE200000000000000;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_144CC0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1A3B18 = v2;
  unk_1A3B20 = v4;
}

void sub_3E200(uint64_t a1)
{
}

void sub_3E228(uint64_t a1)
{
}

void sub_3E254(uint64_t a1)
{
}

void sub_3E280(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, void *a5)
{
  NSString v7 = sub_145B80();
  id v8 = objc_msgSend(self, *a4, v7);

  *a5 = v8;
}

uint64_t type metadata accessor for JurassicTheme()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Colors()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Fonts()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Sizes()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Styles()
{
  return self;
}

uint64_t sub_3E3A0()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >> 60 == 15) {
    return 0;
  }
  uint64_t v2 = *(void *)v0;
  sub_C4D4(*(void *)v0, *(void *)(v0 + 8));
  unint64_t v3 = sub_3E5DC();
  if (!v3)
  {
    sub_120B4(v2, v1);
    return 0;
  }
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    id v8 = &_swiftEmptyArrayStorage;
    sub_120B4(v2, v1);
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_146930();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_5:
  if (v5 >= 1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        sub_146810();
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_145DC0();
          if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
            sub_145E20();
          }
          sub_145E50();
          sub_145E00();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      unint64_t v9 = v4 + 32;
      do
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRetain();
          sub_145DC0();
          if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
            sub_145E20();
          }
          sub_145E50();
          sub_145E00();
        }
        v9 += 8;
        --v5;
      }
      while (v5);
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_3E5DC()
{
  sub_C84C(0, &qword_19D000);
  sub_C84C(0, &qword_19D008);
  sub_C84C(0, (unint64_t *)&unk_19D010);
  unint64_t v0 = sub_1462B0();
  unint64_t v1 = v0;
  if (v0)
  {
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_A314(&qword_19D080);
      uint64_t v3 = sub_146920();
      swift_bridgeObjectRelease_n();
      return v3;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_146BA0();
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

unint64_t sub_3E90C(char a1)
{
  unint64_t result = 0x7461446574756F72;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 7:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 8:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_3EA28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_19D0A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_40C68();
  sub_146D10();
  long long v10 = *v3;
  char v11 = 0;
  sub_40D74();
  sub_146AD0();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_146A90();
    LOBYTE(v10) = 2;
    sub_146AB0();
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    LOBYTE(v10) = 3;
    sub_145230();
    sub_409A8(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v10) = 4;
    sub_146AD0();
    LOBYTE(v10) = 5;
    sub_146AB0();
    LOBYTE(v10) = 6;
    sub_146AB0();
    LOBYTE(v10) = 7;
    sub_146A90();
    LOBYTE(v10) = 8;
    sub_146A90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_3ED58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v40 - v8;
  uint64_t v43 = sub_A314(&qword_19D088);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  __chkstk_darwin(v44);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v45 = a1;
  sub_2F114(a1, v14);
  sub_40C68();
  uint64_t v15 = v11;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v45);
  }
  uint64_t v16 = (uint64_t)v9;
  uint64_t v17 = (uint64_t)v7;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  char v47 = 0;
  sub_40CBC();
  uint64_t v20 = v43;
  int v21 = v15;
  sub_146A20();
  *(_OWORD *)uint64_t v13 = v46;
  LOBYTE(v46) = 1;
  *((void *)v13 + 2) = sub_1469E0();
  *((void *)v13 + 3) = v22;
  LOBYTE(v46) = 2;
  *((void *)v13 + 4) = sub_146A00();
  v13[40] = v23 & 1;
  uint64_t v24 = sub_145230();
  LOBYTE(v46) = 3;
  sub_409A8(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v40 = v24;
  sub_146A20();
  sub_2E4D0(v16, (uint64_t)&v13[*(int *)(v44 + 28)], &qword_19C150);
  LOBYTE(v46) = 4;
  sub_146A20();
  unint64_t v25 = (int *)v44;
  sub_2E4D0(v17, (uint64_t)&v13[*(int *)(v44 + 32)], &qword_19C150);
  LOBYTE(v46) = 5;
  uint64_t v26 = sub_146A00();
  int v27 = &v13[v25[9]];
  *(void *)int v27 = v26;
  v27[8] = v28 & 1;
  LOBYTE(v46) = 6;
  uint64_t v29 = sub_146A00();
  uint64_t v30 = &v13[v25[10]];
  *(void *)uint64_t v30 = v29;
  v30[8] = v31 & 1;
  LOBYTE(v46) = 7;
  uint64_t v32 = sub_1469E0();
  uint64_t v33 = (uint64_t *)&v13[v25[11]];
  uint64_t *v33 = v32;
  v33[1] = v34;
  LOBYTE(v46) = 8;
  uint64_t v35 = sub_1469E0();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v20);
  uint64_t v38 = (uint64_t *)&v13[v25[12]];
  uint64_t *v38 = v35;
  v38[1] = v37;
  sub_40D10((uint64_t)v13, v19);
  sub_C7FC((uint64_t)v45);
  return sub_E590((uint64_t)v13);
}

unint64_t sub_3F2F8()
{
  return sub_3E90C(*v0);
}

uint64_t sub_3F300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_41064(a1, a2);
  *a3 = result;
  return result;
}

void sub_3F328(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_3F334(uint64_t a1)
{
  unint64_t v2 = sub_40C68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3F370(uint64_t a1)
{
  unint64_t v2 = sub_40C68();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_3F3AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3ED58(a1, a2);
}

uint64_t sub_3F3C4(void *a1)
{
  return sub_3EA28(a1);
}

id sub_3F3DC(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v24 = a4;
  int v11 = a3 & 1;
  uint64_t v12 = sub_A314(&qword_19D0C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone((Class)type metadata accessor for WorkoutRouteThumbnailCacheOperation());
  id v16 = v6;
  swift_bridgeObjectRetain();
  id v17 = a6;
  id v18 = v15;
  sub_2AB6C((uint64_t)v14);
  sub_2E4D0((uint64_t)v14, (uint64_t)v18 + qword_1A3940, &qword_19D0C0);

  uint64_t v19 = (void *)sub_146370();
  uint64_t v20 = v16;
  id v21 = sub_42A2C(v20, a1, a2, v11, v24, a5, v19);

  return v21;
}

uint64_t sub_3F53C(uint64_t a1, char a2)
{
  return sub_4C58C(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id, a1, 2, 0, 0, 1, a2);
}

uint64_t sub_3F568()
{
  return swift_release();
}

id sub_3F578()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s17WorkoutRouteAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_3F5C0()
{
  return _s17WorkoutRouteAssetCMa(0);
}

uint64_t _s17WorkoutRouteAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19CEE8);
}

uint64_t sub_3F5E8()
{
  return swift_updateClassMetadata2();
}

_OWORD *sub_3F62C(_OWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_C4D4(*(void *)a2, *(void *)(a2 + 8));
      *(void *)uint64_t v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    *((void *)v4 + 2) = *(void *)(a2 + 16);
    *((void *)v4 + 3) = v10;
    *((void *)v4 + 4) = *(void *)(a2 + 32);
    *((unsigned char *)v4 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = sub_145230();
    uint64_t v15 = *(void *)(v14 - 8);
    id v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_A314(&qword_19C150);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (const void *)(a2 + v18);
    if (v16((const void *)(a2 + v18), 1, v14))
    {
      uint64_t v21 = sub_A314(&qword_19C150);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = (char *)v4 + v23;
    uint64_t v27 = a2 + v23;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    uint64_t v30 = (void *)((char *)v4 + v28);
    char v31 = (void *)(a2 + v28);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (void *)((char *)v4 + v29);
    uint64_t v34 = (void *)(a2 + v29);
    uint64_t v35 = v34[1];
    void *v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_3F8F0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_C52C(*a1, v4);
  }
  swift_bridgeObjectRelease();
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (char *)a1 + *(int *)(a2 + 32);
  if (!v8(v9, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_3FA34(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_C4D4(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  if (v14((char *)a2 + v16, 1, v12))
  {
    uint64_t v19 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = (uint64_t)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = (uint64_t)a2 + v21;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (uint64_t *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  char v31 = (void *)(a1 + v27);
  uint64_t v32 = (uint64_t *)((char *)a2 + v27);
  uint64_t v33 = v32[1];
  *char v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_3FCA8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_C4D4(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_40058(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_C4D4(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v6;
  sub_C52C(v9, v10);
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_145230();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_13:
    uint64_t v20 = sub_A314(&qword_19C150);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v17((void *)(a1 + v21), 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v22, v23, v15);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_19;
  }
  if (v25)
  {
LABEL_19:
    uint64_t v26 = sub_A314(&qword_19C150);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_20:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  int v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_40058(uint64_t a1)
{
  return a1;
}

uint64_t sub_400AC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t sub_402CC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_40058(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_C52C(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_11:
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_12:
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  int v22 = v15((void *)(a1 + v19), 1, v13);
  int v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v20, v21, v13);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_17;
  }
  if (v23)
  {
LABEL_17:
    uint64_t v24 = sub_A314(&qword_19C150);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v20, v21, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
LABEL_18:
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_40618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4062C);
}

uint64_t sub_4062C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_406EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_40700);
}

uint64_t sub_40700(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19CF58);
}

uint64_t sub_407CC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_40804()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_408C0()
{
  if (!qword_19EA30)
  {
    sub_145230();
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19EA30);
    }
  }
}

uint64_t sub_40918()
{
  return sub_409A8(&qword_19C7E0, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_40960()
{
  return sub_409A8(&qword_19CFC0, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_409A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_409F0()
{
  return swift_retain();
}

uint64_t sub_40A00(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata) = a1;
  return swift_release();
}

double sub_40A18(char a1)
{
  objc_super v2 = self;
  id v3 = [v2 mainScreen];
  [v3 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v29.origin.x = v5;
  v29.origin.y = v7;
  v29.size.width = v9;
  v29.size.height = v11;
  double Width = CGRectGetWidth(v29);
  if (qword_19ACE8 != -1) {
    swift_once();
  }
  double v13 = Width - (*(double *)&qword_1A3A50 + *(double *)&qword_1A3A50);
  if (qword_19AD18 != -1) {
    swift_once();
  }
  double v14 = *(double *)&qword_1A3A80;
  double v15 = v13 - *(double *)&qword_1A3A80;
  double v28 = v15 * 0.5;
  double v16 = *(double *)&qword_1A3A80 * 0.5;
  id v17 = [v2 mainScreen];
  [v17 bounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;

  v30.origin.x = v19;
  v30.origin.y = v21;
  v30.size.width = v23;
  v30.size.height = v25;
  double v26 = CGRectGetWidth(v30);
  if (qword_19ACF0 != -1) {
    swift_once();
  }
  switch(a1)
  {
    case 2:
      double v15 = v28 - v14;
      break;
    case 3:
      double v15 = v28 - v14;
      break;
    case 4:
      double v15 = v15 * 0.25 - v16;
      break;
    case 5:
      double v15 = v26 - (*(double *)&qword_1A3A58 + *(double *)&qword_1A3A58);
      break;
    default:
      return v15;
  }
  return v15;
}

unint64_t sub_40C68()
{
  unint64_t result = qword_19D090;
  if (!qword_19D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D090);
  }
  return result;
}

unint64_t sub_40CBC()
{
  unint64_t result = qword_19D098;
  if (!qword_19D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D098);
  }
  return result;
}

uint64_t sub_40D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_40D74()
{
  unint64_t result = qword_19D0B0;
  if (!qword_19D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D0B0);
  }
  return result;
}

uint64_t _s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x40F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOMa()
{
  return &_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysON;
}

unint64_t sub_40F60()
{
  unint64_t result = qword_19D0C8;
  if (!qword_19D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D0C8);
  }
  return result;
}

unint64_t sub_40FB8()
{
  unint64_t result = qword_19D0D0;
  if (!qword_19D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D0D0);
  }
  return result;
}

unint64_t sub_41010()
{
  unint64_t result = qword_19D0D8;
  if (!qword_19D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D0D8);
  }
  return result;
}

uint64_t sub_41064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446574756F72 && a2 == 0xE900000000000061;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000014B8E0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

void sub_41420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v31 = a5;
  uint64_t v8 = sub_A314(&qword_19D0E0);
  __chkstk_darwin(v8 - 8);
  double v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_144CF0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_144D00();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_41FE8(a1, (uint64_t)v33);
  if (v34)
  {
    uint64_t v30 = a2;
    sub_C84C(0, &qword_19C468);
    if (swift_dynamicCast())
    {
      uint64_t v29 = a3;
      id v19 = v32;
      [v32 mutableCopy];
      sub_1466A0();
      swift_unknownObjectRelease();
      sub_C84C(0, &qword_19C470);
      if (swift_dynamicCast())
      {
        id v20 = v32;
        [v19 firstLineHeadIndent];
        double v22 = fmod(v21, 1.0) + -0.1;
        [v19 headIndent];
        double v24 = fmod(v23, 1.0);
        if (fabs(v22) >= 0.01 || fabs(v24 + -0.1) >= 0.01)
        {
          uint64_t v28 = v29;
          uint64_t v26 = v30;
          id v27 = v31;
        }
        else
        {
          [v20 setFirstLineHeadIndent:0.0];
          [v20 setHeadIndent:0.0];
          (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for PresentationIntent.Kind.blockQuote(_:), v11);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, 1, 1, v15);
          sub_144D10();
          Class isa = sub_144CE0().super.isa;
          uint64_t v26 = v30;
          id v27 = v31;
          uint64_t v28 = v29;
          objc_msgSend(v31, "addAttribute:value:range:", NSPresentationIntentAttributeName, isa, v30, v29);

          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        }
        [v20 setParagraphSpacingBefore:10.0];
        objc_msgSend(v27, "addAttribute:value:range:", NSParagraphStyleAttributeName, v20, v26, v28);
      }
      else
      {
      }
    }
  }
  else
  {
    sub_C5BC((uint64_t)v33);
  }
}

uint64_t sub_41814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_C5BC((uint64_t)&v11);
}

void sub_418A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_41FE8(a1, (uint64_t)v10);
  if (v11)
  {
    sub_C84C(0, (unint64_t *)&qword_1A0A40);
    if (swift_dynamicCast())
    {
      if (sub_57BE4())
      {
        id v8 = [self blackColor];
        objc_msgSend(a5, "addAttribute:value:range:", NSForegroundColorAttributeName, v8, a2, a3);
      }
    }
  }
  else
  {
    sub_C5BC((uint64_t)v10);
  }
}

void sub_419A0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  sub_41FE8(a1, (uint64_t)v12);
  if (v13)
  {
    sub_C84C(0, &qword_19C460);
    if (swift_dynamicCast())
    {
      id v10 = [v11 fontWithSize:a4];
      objc_msgSend(a6, "addAttribute:value:range:", NSFontAttributeName, v10, a2, a3);
    }
  }
  else
  {
    sub_C5BC((uint64_t)v12);
  }
}

uint64_t sub_41A98(void *a1, double a2)
{
  id v4 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:a1];
  id v5 = [a1 length];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_41F24;
  *(void *)(v7 + 24) = v6;
  uint64_t v28 = sub_41F3C;
  uint64_t v29 = v7;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_41814;
  id v27 = &unk_186728;
  id v8 = _Block_copy(&v24);
  id v9 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", NSParagraphStyleAttributeName, 0, v5, 0, v8);
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v12 = [a1 length];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v9;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_41F7C;
  *(void *)(v14 + 24) = v13;
  uint64_t v28 = sub_42050;
  uint64_t v29 = v14;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_41814;
  id v27 = &unk_1867A0;
  uint64_t v15 = _Block_copy(&v24);
  id v16 = v9;
  swift_retain();
  swift_release();
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", NSForegroundColorAttributeName, 0, v12, 0, v15);
  _Block_release(v15);
  char v17 = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v18 = [a1 length];
  uint64_t v19 = swift_allocObject();
  *(double *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v16;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_41FCC;
  *(void *)(v20 + 24) = v19;
  uint64_t v28 = sub_42050;
  uint64_t v29 = v20;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_41814;
  id v27 = &unk_186818;
  long double v21 = _Block_copy(&v24);
  id v22 = v16;
  swift_retain();
  swift_release();
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", NSFontAttributeName, 0, v18, 0, v21);
  _Block_release(v21);
  char v23 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0) {
    return (uint64_t)v22;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_41EEC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_41F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_41420(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_41F2C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_41F3C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_41F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_41F74()
{
  return swift_release();
}

void sub_41F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_418A4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_41F84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_41F94()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_41FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_419A0(a1, a2, a3, *(double *)(v4 + 16), a4, *(void **)(v4 + 24));
}

uint64_t sub_41FD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_41FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double *sub_42068(double a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 superview];
  if (v4)
  {
    id v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:a1];
    if (v8)
    {
      id v9 = v8;
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_145E20();
      }
      sub_145E50();
      sub_145E00();
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    id v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-a1];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];

      id v11 = v15;
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_145E20();
      }
      sub_145E50();
      sub_145E00();
    }
  }
  id v16 = [v2 superview];
  if (v16)
  {
    char v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 topAnchor];
    id v19 = [v17 topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:a1];
    if (v20)
    {
      id v21 = v20;
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_145E20();
      }
      sub_145E50();
      sub_145E00();
    }
  }
  id v22 = [v2 superview];
  if (v22)
  {
    id v23 = v22;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v2 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-a1];

      id v23 = v26;
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
        sub_145E20();
      }
      sub_145E50();
      sub_145E00();
    }
  }
  id v27 = self;
  sub_C84C(0, (unint64_t *)&qword_19D0E8);
  swift_bridgeObjectRetain();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  return _swiftEmptyArrayStorage;
}

id sub_42540(char a1, char a2, double a3)
{
  id v4 = v3;
  id v8 = [v4 superview];
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v10 = [v4 bottomAnchor];
    if (a1 == 1)
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];
    }
    else
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintLessThanOrEqualToAnchor:v11];
    }
  }
  else
  {
    id v10 = [v4 bottomAnchor];
    id v11 = [v9 bottomAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
  }
  id v13 = v12;

  if (v13)
  {
    [v13 setConstant:-a3];
    if (a2)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  else if (a2)
  {
    id v13 = 0;
  }

  return v13;
}

Swift::Void __swiftcall UIView.removeAllConstraints()()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v3 = v2;
    do
    {
      id v4 = v3;
      id v5 = [v4 constraints];
      sub_C84C(0, (unint64_t *)&qword_19D0E8);
      unint64_t v6 = sub_145DE0();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_146930();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
        if (!v7) {
          goto LABEL_3;
        }
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)sub_146810();
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        id v10 = v9;
        if ([v9 firstItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_C84C(0, (unint64_t *)&qword_19EAE0);
            if (sub_1464B0()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
        if ([v10 secondItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_C84C(0, (unint64_t *)&qword_19EAE0);
            if (sub_1464B0()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v3 = [v4 superview];
    }
    while (v3);
  }
  Class isa = (Class)[v1 constraints];
  if (!isa)
  {
    sub_C84C(0, (unint64_t *)&qword_19D0E8);
    sub_145DE0();
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 removeConstraints:isa];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:1];
}

uint64_t type metadata accessor for Cropping()
{
  return self;
}

id sub_42A2C(unsigned char *a1, int a2, uint64_t a3, int a4, uint64_t a5, void *a6, void *a7)
{
  id v8 = v7;
  uint64_t v41 = a3;
  uint64_t v42 = a5;
  LODWORD(v43) = a4;
  int v40 = a2;
  uint64_t v12 = sub_1456E0();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  uint64_t v45 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = sub_145760();
  uint64_t v14 = *(void *)(v44 - 8);
  uint64_t v15 = __chkstk_darwin(v44);
  char v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  id v19 = &v39[-v18];
  v8[qword_19D1A0] = a1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type];
  *(void *)&v8[qword_19D1A8] = *(void *)&a1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments];
  *(void *)&v8[qword_19D1B0] = *(void *)&a1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_sourceAttachments];
  id v20 = *(void **)&a1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO];
  id v21 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20) {
    id v22 = [v20 objectID];
  }
  else {
    id v22 = 0;
  }
  *(void *)&v8[qword_19D1B8] = v22;
  id v23 = *(void **)&a1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context];
  *(void *)&v8[qword_19D1C0] = v23;
  v8[qword_19D1C8] = v40;
  id v24 = &v8[qword_19D1D0];
  uint64_t v25 = v42;
  *(void *)id v24 = v41;
  v24[8] = v43 & 1;
  id v26 = (uint64_t *)&v8[qword_19D198];
  *id v26 = v25;
  v26[1] = (uint64_t)a6;
  *(void *)&v8[qword_19D1D8] = a7;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  id v27 = v23;
  swift_bridgeObjectRetain();
  id v43 = a7;
  sub_1467D0(26);
  swift_bridgeObjectRelease();
  unint64_t v49 = 0xD000000000000018;
  unint64_t v50 = 0x800000000014BA50;
  v51._countAndFlagsBits = v25;
  v51._object = a6;
  sub_145C90(v51);
  swift_bridgeObjectRelease();
  id v28 = [self mainBundle];
  id v29 = [v28 bundleIdentifier];

  if (v29)
  {
    sub_145BC0();
  }
  sub_145750();
  uint64_t v30 = &v8[qword_19D1E0];
  uint64_t v31 = v44;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(&v8[qword_19D1E0], v19, v44);
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v17, v30, v31);
  id v32 = v45;
  sub_1456C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(&v8[qword_19D1E8], v32, v47);

  uint64_t v33 = (objc_class *)type metadata accessor for ThumbnailCacheOperation();
  v48.receiver = v8;
  v48.super_class = v33;
  id v34 = objc_msgSendSuper2(&v48, "init");
  uint64_t v35 = sub_145740();
  os_log_type_t v36 = sub_1461E0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&def_94138, v35, v36, "Initialized", v37, 2u);
    swift_slowDealloc();
  }

  return v34;
}

uint64_t sub_42ECC()
{
  v1[6] = v0;
  uint64_t v2 = sub_1456F0();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_1463D0();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_1456B0();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_43060, 0, 0);
}

uint64_t sub_43060()
{
  v0[18] = qword_19D1E8;
  sub_1456A0();
  uint64_t v1 = sub_1456D0();
  os_signpost_type_t v2 = sub_146390();
  if (sub_1465A0())
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[17], v4);
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    os_signpost_id_t v9 = sub_145690();
    _os_signpost_emit_with_name_impl(&def_94138, v1, v2, v9, "Image attachment loading", "", v8, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[14];

    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[14];
  v0[19] = v6;
  v0[20] = v7;
  v6(v11, v12, v13);
  sub_145720();
  swift_allocObject();
  v0[21] = sub_145710();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[22] = v15;
  v0[23] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v12, v13);
  if (qword_19ADD0 != -1) {
    swift_once();
  }
  uint64_t v16 = (uint64_t *)(v0[6] + qword_19D198);
  uint64_t v17 = *v16;
  v0[24] = *v16;
  uint64_t v18 = v16[1];
  v0[25] = v18;
  id v19 = sub_78EAC(v17, v18);
  id v20 = (UIImage *)[v19 imageByPreparingForDisplay];

  if (v20)
  {
    id v21 = sub_145740();
    os_log_type_t v22 = sub_146210();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&def_94138, v21, v22, "Cache hit.", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  id v25 = sub_44CD4();
  uint64_t v26 = v0[6];
  if (v25)
  {
    id v27 = v25;
    sub_456C4();
    id v20 = sub_46928(v27);
    switch(*(unsigned char *)(v26 + qword_19D1C8))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v42 = sub_146B90();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          sub_E75DC(v20, v17, v18);
        }
        break;
    }
    id v43 = sub_145740();
    os_log_type_t v44 = sub_146210();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&def_94138, v43, v44, "Image file attachment found.", v45, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  if (sub_8758(*(unsigned char *)(v26 + qword_19D1A0)) == 0x6F746F6870 && v28 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = sub_146B90();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      id v46 = (id)v0[6];
      uint64_t v47 = sub_145740();
      os_log_type_t v48 = sub_1461F0();
      BOOL v49 = os_log_type_enabled(v47, v48);
      unint64_t v50 = (char *)v0[6];
      if (v49)
      {
        Swift::String v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)Swift::String v51 = 134217984;
        unint64_t v52 = *(void *)&v50[qword_19D1A8];
        if (v52 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_146930();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v53 = *(void *)((char *)&dword_10 + (v52 & 0xFFFFFFFFFFFFFF8));
        }
        uint64_t v54 = (void *)v0[6];
        v0[4] = v53;
        sub_146610();

        _os_log_impl(&def_94138, v47, v48, "did not find image file attachment, attachments.count=%ld", v51, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      id v20 = 0;
      uint64_t v24 = v0[6];
      goto LABEL_45;
    }
  }
  v0[26] = qword_19D1E0;
  uint64_t v30 = sub_145740();
  os_log_type_t v31 = sub_146210();
  if (os_log_type_enabled(v30, v31))
  {
    id v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v32 = 0;
    _os_log_impl(&def_94138, v30, v31, "Will try to get image from Core Data (legacy support)", v32, 2u);
    swift_slowDealloc();
  }
  uint64_t v33 = v0[6];

  id v34 = *(void **)(v33 + qword_19D1C0);
  v0[27] = v34;
  if (!v34)
  {
    uint64_t v39 = sub_145740();
    os_log_type_t v40 = sub_1461F0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&def_94138, v39, v40, "context is nil", v41, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];
    goto LABEL_38;
  }
  uint64_t v35 = *(void **)(v0[6] + qword_19D1B8);
  v0[28] = v35;
  if (!v35)
  {
    uint64_t v39 = v34;
    uint64_t v55 = sub_145740();
    os_log_type_t v56 = sub_1461F0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl(&def_94138, v55, v56, "assetID is nil", v57, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

LABEL_38:
    id v20 = 0;
LABEL_45:
    sub_449B0(v24, (unint64_t)"Image attachment loading", 24, 2);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = (uint64_t (*)(UIImage *))v0[1];
    return v65(v20);
  }
  id v36 = v34;
  id v37 = v35;
  if ([v36 concurrencyType] == (char *)&def_94138 + 1)
  {
    id v38 = v36;
  }
  else
  {
    id v38 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
    [v38 setParentContext:v36];
  }
  v0[29] = v38;
  uint64_t v58 = (void *)v0[6];
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[10]);
  id v59 = (void *)swift_allocObject();
  v0[30] = v59;
  v59[2] = v38;
  v59[3] = v37;
  v59[4] = v58;
  id v60 = v37;
  v38;
  id v61 = v58;
  uint64_t v62 = (void *)swift_task_alloc();
  v0[31] = v62;
  uint64_t v63 = sub_A314(&qword_19BC90);
  void *v62 = v0;
  v62[1] = sub_439E0;
  uint64_t v64 = v0[12];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v64, sub_45984, v59, v63);
}

uint64_t sub_439E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_43B54, 0, 0);
}

uint64_t sub_43B54()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void **)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 48);

    uint64_t v6 = v5;
LABEL_24:
    sub_449B0(v6, (unint64_t)"Image attachment loading", 24, 2);
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  id v7 = objc_allocWithZone((Class)UIImage);
  sub_C4D4(v2, v1);
  Class isa = sub_144F90().super.isa;
  id v9 = [v7 initWithData:isa];
  sub_120B4(v2, v1);

  if (!v9)
  {
    sub_C4D4(v2, v1);
    uint64_t v12 = sub_145740();
    uint64_t v13 = sub_1461F0();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      uint64_t v15 = v14;
      uint64_t v16 = 0;
      switch(v1 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v2) - v2;
          if (__OFSUB__(HIDWORD(v2), v2))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            JUMPOUT(0x44138);
          }
          uint64_t v16 = (int)v16;
LABEL_22:
          id v37 = *(void **)(v0 + 224);
          id v36 = *(void **)(v0 + 232);
          id v38 = *(void **)(v0 + 216);
          *(void *)(v0 + 40) = v16;
          sub_146610();
          sub_120B4(v2, v1);
          _os_log_impl(&def_94138, v12, (os_log_type_t)v13, "can't create image from data (size: %{bytes}ld)", v15, 0xCu);
          swift_slowDealloc();

          sub_120B4(v2, v1);
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v2 + 16);
          uint64_t v33 = *(void *)(v2 + 24);
          BOOL v35 = __OFSUB__(v33, v34);
          uint64_t v16 = v33 - v34;
          if (!v35) {
            goto LABEL_22;
          }
          goto LABEL_29;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v16 = BYTE6(v1);
          goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = *(void **)(v0 + 224);
      uint64_t v18 = *(void **)(v0 + 216);

      sub_120B4(v2, v1);
      sub_120B4(v2, v1);
    }
    uint64_t v6 = *(void *)(v0 + 48);
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)(v0 + 48);
  sub_456C4();
  uint64_t v11 = sub_46928(v9);
  switch(*(unsigned char *)(v10 + qword_19D1C8))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v19 = sub_146B90();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        sub_E75DC(v11, *(void *)(v0 + 192), *(void *)(v0 + 200));
      }
      break;
  }
  id v20 = (void *)(v0 + 120);
  id v21 = sub_1456D0();
  sub_145700();
  os_signpost_type_t v22 = sub_146380();
  if (sub_1465A0())
  {
    os_signpost_type_t v47 = v22;
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v25 = *(void *)(v0 + 56);
    swift_retain();
    sub_145730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v26 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
      uint64_t v26 = "";
    }
    format = (char *)v26;
    id v20 = (void *)(v0 + 128);
    id v43 = *(void **)(v0 + 224);
    os_log_type_t v44 = *(void **)(v0 + 232);
    uint64_t v45 = *(void **)(v0 + 216);
    id v46 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    (*(void (**)(void, uint64_t))(v0 + 152))(*(void *)(v0 + 128), v29);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_145690();
    _os_signpost_emit_with_name_impl(&def_94138, v21, v47, v31, "Image attachment loading", format, v30, 2u);
    swift_slowDealloc();

    sub_120B4(v2, v1);
    v46(v29, v42);
  }
  else
  {
    id v27 = *(void **)(v0 + 224);
    uint64_t v28 = *(void **)(v0 + 216);

    sub_120B4(v2, v1);
  }
  uint64_t v32 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 176))(*v20, *(void *)(v0 + 104));
  sub_449B0(v32, (unint64_t)"Image attachment loading", 24, 2);
LABEL_25:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(UIImage *))(v0 + 8);
  return v39(v11);
}

uint64_t ThumbnailCacheOperation.main@Sendable ()()
{
  *(void *)(v1 + 128) = v0;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)((char *)&stru_B8.reloff + (swift_isaMask & *v0))
                         + **(int **)((char *)&stru_B8.reloff + (swift_isaMask & *v0)));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_44268;
  return v4();
}

uint64_t sub_44268(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_44368, 0, 0);
}

uint64_t sub_44368()
{
  uint64_t v13 = v0;
  sub_145F70();
  uint64_t v1 = *(os_unfair_lock_s **)(v0[16] + qword_19E780);
  uint64_t v2 = (void *)swift_task_alloc();
  *uint64_t v2 = sub_456C4();
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_45778;
  *(void *)(v4 + 24) = KeyPath;
  uint64_t v5 = (unsigned __int8 *)&v1[4];
  v1 += 10;
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_45780(v5, v12);
  os_unfair_lock_unlock(v1);
  char v6 = v12[0];
  swift_release_n();
  swift_task_dealloc();
  id v7 = (void *)v0[18];
  if ((v6 & 1) != 0 || !v7)
  {
    id v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = v0[18];
    return v9(v10);
  }
  else
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_445C8;
    uint64_t v8 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_44954;
    v0[13] = &unk_186840;
    v0[14] = v8;
    [v7 prepareForDisplayWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_445C8()
{
  return _swift_task_switch(sub_446A8, 0, 0);
}

uint64_t sub_446A8()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = *(void **)(v0 + 144);
  if (v1)
  {

    uint64_t v2 = v1;
  }
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_44720()
{
  sub_12244(&qword_19C160);
  sub_146CF0();
  swift_getFunctionTypeMetadata1();
  sub_145E90();

  return swift_getWitnessTable();
}

uint64_t sub_447B4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_44844;
  return ThumbnailCacheOperation.main@Sendable ()();
}

uint64_t sub_44844(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  char v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_44954(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_46454((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_449B0(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_1456F0();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1456B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_1456D0();
  sub_145700();
  int v24 = sub_146380();
  if ((sub_1465A0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_47A6C();
LABEL_10:
  swift_retain();
  sub_145730();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    char v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    char v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  id v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)id v20 = 0;
  os_signpost_id_t v21 = sub_145690();
  _os_signpost_emit_with_name_impl(&def_94138, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  os_signpost_type_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

id sub_44CD4()
{
  uint64_t v1 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v32 - v9;
  id v11 = v0;
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_459A4(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  if (!v13) {
    return 0;
  }
  sub_D2630(v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    switch(*((unsigned char *)v11 + qword_19D1C8))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v14 = sub_146B90();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0
          || (sub_4CB28(),
              double v16 = v15,
              id v17 = [self mainScreen],
              [v17 scale],
              double v19 = v18,
              v17,
              (id v20 = sub_68678(v16 * v19)) == 0))
        {
LABEL_9:
          sub_144F00(1);
          id v22 = objc_allocWithZone((Class)UIImage);
          NSString v23 = sub_145B80();
          swift_bridgeObjectRelease();
          id v21 = [v22 initWithContentsOfFile:v23 cache:1];

          if (!v21)
          {
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
            int v24 = sub_145740();
            os_log_type_t v25 = sub_1461F0();
            if (os_log_type_enabled(v24, v25))
            {
              unint64_t v26 = (uint8_t *)swift_slowAlloc();
              uint64_t v33 = swift_slowAlloc();
              uint64_t v35 = v33;
              *(_DWORD *)unint64_t v26 = 136315138;
              v32[1] = v26 + 4;
              sub_1E014();
              uint64_t v27 = sub_146B50();
              uint64_t v34 = sub_3D2B4(v27, v28, &v35);
              sub_146610();
              swift_bridgeObjectRelease();
              uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
              v29(v8, v4);
              _os_log_impl(&def_94138, v24, v25, "getImageStoredInFile can't create image from %s", v26, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_release();
              v29(v10, v4);
            }
            else
            {
              swift_release();
              uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
              v30(v8, v4);

              v30(v10, v4);
            }
            return 0;
          }
        }
        else
        {
          id v21 = v20;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        swift_release();
        return v21;
    }
  }
  swift_release();
  sub_1248C((uint64_t)v3, &qword_19EB20);
  return 0;
}

void sub_4521C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  type metadata accessor for JournalEntryAssetMO();
  if (!swift_dynamicCastClass())
  {

    char v14 = sub_145740();
    os_log_type_t v15 = sub_1461F0();
    if (os_log_type_enabled(v14, v15))
    {
      double v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v16 = 0;
      _os_log_impl(&def_94138, v14, v15, "Failed to retrieve assetMO based on NSManagedObjectID", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  id v5 = sub_7D454(0);
  if (!v5 || (uint64_t v6 = v5, v7 = [v5 data], v6, !v7))
  {
    id v11 = sub_145740();
    os_log_type_t v12 = sub_146210();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&def_94138, v11, v12, "data attachment [0] is nil", v13, 2u);
      swift_slowDealloc();
    }

LABEL_11:
    uint64_t v8 = 0;
    unint64_t v10 = 0xF000000000000000;
    goto LABEL_12;
  }
  uint64_t v8 = sub_144FA0();
  unint64_t v10 = v9;

LABEL_12:
  *a3 = v8;
  a3[1] = v10;
}

void ThumbnailCacheOperation.init()()
{
}

void sub_45414()
{
}

uint64_t sub_45444()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + qword_19D1E0;
  uint64_t v2 = sub_145760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_19D1E8;
  uint64_t v4 = sub_1456E0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

id ThumbnailCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThumbnailCacheOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_45590(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = a1 + qword_19D1E0;
  uint64_t v3 = sub_145760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_19D1E8;
  uint64_t v5 = sub_1456E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_456AC()
{
  return 8;
}

void *sub_456B8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_456C4()
{
  unint64_t result = qword_19D190;
  if (!qword_19D190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19D190);
  }
  return result;
}

uint64_t sub_45704()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_45778()
{
  return sub_45704();
}

uint64_t sub_45780@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for ThumbnailCacheOperation()
{
  uint64_t result = qword_19D218;
  if (!qword_19D218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_45818()
{
  uint64_t result = sub_145760();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1456E0();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_45934()
{
  return type metadata accessor for ThumbnailCacheOperation();
}

uint64_t sub_4593C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_45984(uint64_t *a1@<X8>)
{
  sub_4521C(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_459A4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_A314(&qword_19D360);
  __chkstk_darwin(v6 - 8);
  id v61 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_145680();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v60 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v63 = &v50[-v12];
  uint64_t v64 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v64);
  unint64_t v71 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  id v73 = &v50[-v15];
  uint64_t v16 = sub_A314(&qword_19EB20);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  id v59 = &v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v68 = &v50[-v19];
  uint64_t v76 = sub_144F60();
  uint64_t v20 = *(void *)(v76 - 8);
  uint64_t v21 = __chkstk_darwin(v76);
  uint64_t v55 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v67 = &v50[-v23];
  uint64_t v78 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v24 = __chkstk_darwin(v78);
  uint64_t v69 = (id *)&v50[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v27 = (id *)&v50[-v26];
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v28)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v58 = v8;
    uint64_t v54 = v3;
    unint64_t v77 = a1 & 0xC000000000000001;
    uint64_t v74 = *(void *)(a2 + qword_19D1D0);
    int v75 = *(unsigned __int8 *)(a2 + qword_19D1D0 + 8);
    unint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    uint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    unint64_t v66 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v53 = (void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32);
    unint64_t v52 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
    os_log_type_t v56 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    uint64_t v8 = 4;
    unint64_t v62 = a1;
    uint64_t v29 = (uint64_t)v71;
LABEL_7:
    uint64_t v20 = v28;
    a2 = v8 - 4;
    if (v77) {
      break;
    }
    uint64_t v9 = *(void *)(a1 + 8 * v8);
    swift_retain();
    uint64_t v3 = v8 - 3;
    if (!__OFADD__(a2, 1)) {
      goto LABEL_12;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_146930();
    if (!v28) {
      goto LABEL_41;
    }
  }
  uint64_t v9 = sub_146810();
  uint64_t v3 = v8 - 3;
  if (__OFADD__(a2, 1)) {
    goto LABEL_39;
  }
LABEL_12:
  uint64_t v30 = v9 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType;
  sub_463EC(v9 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v27, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (v75) {
        goto LABEL_38;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_4632C((uint64_t)v27);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v32 = v30;
      uint64_t v33 = v69;
      sub_463EC(v32, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t)v33;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v36 = (uint64_t)v68;
          uint64_t v37 = v76;
          (*v65)((uint64_t)v68, 1, 1, v76);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v35 = (uint64_t)v33 + *(int *)(sub_A314(&qword_19D368) + 48);
          goto LABEL_22;
        default:
LABEL_22:
          id v38 = v73;
          sub_46388(v35, (uint64_t)v73);
          sub_463EC((uint64_t)v38, v29, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v39 = v29;
            uint64_t v36 = (uint64_t)v68;
            uint64_t v37 = v76;
            (*v66)(v68, v39, v76);
            uint64_t v40 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v41 = v59;
            sub_621B8((uint64_t)v59);
            swift_bridgeObjectRelease();
            uint64_t v37 = v76;
            if ((*v70)((uint64_t)v41, 1, v76) == 1)
            {
              sub_1248C((uint64_t)v41, &qword_19EB20);
              uint64_t v40 = 1;
              a1 = v62;
              uint64_t v36 = (uint64_t)v68;
            }
            else
            {
              uint64_t v42 = *v66;
              id v43 = v55;
              (*v66)(v55, (uint64_t)v41, v76);
              os_log_type_t v44 = v68;
              v42(v68, (uint64_t)v43, v76);
              uint64_t v36 = (uint64_t)v44;
              uint64_t v37 = v76;
              uint64_t v40 = 0;
              a1 = v62;
            }
          }
          (*v65)(v36, v40, 1, v37);
          sub_4632C((uint64_t)v73);
          break;
      }
      uint64_t v72 = (uint64_t)v27 + *(int *)(sub_A314(&qword_19D368) + 48);
      if ((*v70)(v36, 1, v37) == 1)
      {
        sub_1248C(v36, &qword_19EB20);
LABEL_35:
        sub_4632C(v72);
        swift_release();
        uint64_t v29 = (uint64_t)v71;
        goto LABEL_6;
      }
      (*v66)(v67, v36, v37);
      sub_144E30();
      swift_bridgeObjectRetain();
      uint64_t v45 = v60;
      sub_145630();
      uint64_t v46 = (uint64_t)v61;
      sub_145620();
      uint64_t v47 = v58;
      if ((*v57)(v46, 1, v58) == 1)
      {
        sub_1248C(v46, &qword_19D360);
        swift_bridgeObjectRelease();
        (*v56)(v67, v76);
        a1 = v62;
        goto LABEL_35;
      }
      (*v53)(v63, v46, v47);
      sub_145640();
      int v51 = sub_145670();
      uint64_t v48 = *v52;
      (*v52)(v45, v47);
      v48(v63, v47);
      swift_bridgeObjectRelease();
      (*v56)(v67, v76);
      a1 = v62;
      if ((v51 & 1) == 0) {
        goto LABEL_35;
      }
      uint64_t v29 = (uint64_t)v71;
      if ((v75 & 1) == 0)
      {
        uint64_t v31 = *(void *)(v9 + 16);
        sub_4632C(v72);
LABEL_17:
        if (v31 == v74) {
          goto LABEL_38;
        }
LABEL_5:
        swift_release();
LABEL_6:
        ++v8;
        if (v3 == v28) {
          goto LABEL_41;
        }
        goto LABEL_7;
      }
      sub_4632C(v72);
LABEL_38:
      swift_bridgeObjectRelease();
      return v9;
    default:
      sub_4632C((uint64_t)v27);
      if (v75) {
        goto LABEL_38;
      }
LABEL_16:
      uint64_t v31 = *(void *)(v9 + 16);
      goto LABEL_17;
  }
}

uint64_t sub_4632C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_46388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_463EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_46454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19D370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_464BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStackConfiguration()
{
  return self;
}

uint64_t sub_46530()
{
  uint64_t v1 = sub_144F60();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self mainBundle];
  id v6 = [v5 bundleURL];

  sub_144EF0();
  uint64_t v7 = *(void *)(v0 + 24);
  v9[0] = *(void *)(v0 + 16);
  v9[1] = v7;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 0x646D6F6D2ELL;
  v10._object = (void *)0xE500000000000000;
  sub_145C90(v10);
  sub_144ED0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_46690()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_144E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v15 - v11;
  if (qword_19AE00 != -1) {
    swift_once();
  }
  if (qword_1A3BB0)
  {
    sub_29058(qword_1A3BA8, (void *)qword_1A3BB0, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
    sub_12060();
    sub_144F40();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    sub_144E80();
  }
  uint64_t v13 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 32);
  v15[1] = v13;
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = 0x6574696C71732ELL;
  v16._object = (void *)0xE700000000000000;
  sub_145C90(v16);
  sub_144ED0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

UIImage *sub_46928(void *a1)
{
  CFAbsoluteTimeGetCurrent();
  if (![a1 imageOrientation]
    || ([a1 size],
        UIGraphicsBeginImageContext(v4),
        objc_msgSend(a1, "drawAtPoint:", 0.0, 0.0),
        uint64_t v2 = UIGraphicsGetImageFromCurrentImageContext(),
        UIGraphicsEndImageContext(),
        !v2))
  {
    uint64_t v2 = a1;
  }
  sub_46A98();
  return v2;
}

uint64_t sub_469D0()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19D438);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19D438);
  if (qword_19AF58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_46A98()
{
  v4[1] = 0xE000000000000000;
  sub_1467D0(46);
  v5._countAndFlagsBits = sub_146D70();
  sub_145C90(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x800000000014BB60;
  v6._countAndFlagsBits = 0xD000000000000022;
  sub_145C90(v6);
  CFAbsoluteTimeGetCurrent();
  sub_145F90();
  v7._countAndFlagsBits = 0x73646E6F63657320;
  v7._object = (void *)0xE800000000000000;
  sub_145C90(v7);
  if (qword_19AD88 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_145760();
  sub_C584(v0, (uint64_t)qword_19D438);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_146210();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    v4[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    sub_3D2B4(0, 0xE000000000000000, v4);
    sub_146610();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&def_94138, v1, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_46CE0(double a1)
{
  sub_A314(&qword_19D458);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1578A0;
  *(void *)(inited + 32) = kCGImageSourceShouldCache;
  *(unsigned char *)(inited + 40) = 1;
  CFStringRef v3 = (id)kCGImageSourceShouldCache;
  sub_136B3C(inited);
  type metadata accessor for CFString(0);
  sub_47A7C();
  v4.super.Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  sub_144EB0(v5);
  CFURLRef v7 = v6;
  uint64_t v8 = CGImageSourceCreateWithURL(v6, v4.super.isa);

  if (!v8)
  {
    if (qword_19AD88 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_145760();
    sub_C584(v19, (uint64_t)qword_19D438);
    uint64_t v20 = sub_145740();
    os_log_type_t v21 = sub_1461F0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v23 = sub_146D70();
      sub_3D2B4(v23, v24, &v30);
      sub_146610();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_94138, v20, v21, "%s.createImage | Failed to create CGImageSource with URL", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

LABEL_14:
    return 0;
  }
  sub_A314(&qword_19D460);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1578B0;
  *(void *)(v9 + 32) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 64) = &type metadata for Bool;
  *(void *)(v9 + 72) = kCGImageSourceCreateThumbnailWithTransform;
  *(unsigned char *)(v9 + 80) = 1;
  Swift::String v10 = (void *)kCGImageSourceSkipMetadata;
  *(void *)(v9 + 104) = &type metadata for Bool;
  *(void *)(v9 + 112) = v10;
  *(unsigned char *)(v9 + 120) = 1;
  *(void *)(v9 + 144) = &type metadata for Bool;
  *(void *)(v9 + 152) = kCGImageSourceThumbnailMaxPixelSize;
  *(void *)(v9 + 184) = &type metadata for CGFloat;
  *(double *)(v9 + 160) = a1;
  CFStringRef v11 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  CFStringRef v12 = (id)kCGImageSourceCreateThumbnailWithTransform;
  id v13 = v10;
  CFStringRef v14 = (id)kCGImageSourceThumbnailMaxPixelSize;
  sub_136C3C(v9);
  v15.super.Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v8, 0, v15.super.isa);
  if (!ThumbnailAtIndex)
  {
    if (qword_19AD88 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_145760();
    sub_C584(v25, (uint64_t)qword_19D438);
    uint64_t v26 = sub_145740();
    os_log_type_t v27 = sub_1461F0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&def_94138, v26, v27, "Image downsample failed.", v28, 2u);
      swift_slowDealloc();

      return 0;
    }

    goto LABEL_14;
  }
  CGImageRef v17 = ThumbnailAtIndex;
  id v18 = [objc_allocWithZone((Class)UIImage) initWithCGImage:ThumbnailAtIndex];

  return v18;
}

uint64_t sub_47114(double a1)
{
  *(void *)(v2 + 136) = v1;
  *(double *)(v2 + 128) = a1;
  uint64_t v3 = sub_1456B0();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v4 = sub_145760();
  *(void *)(v2 + 176) = v4;
  *(void *)(v2 + 184) = *(void *)(v4 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v5 = sub_1456E0();
  *(void *)(v2 + 200) = v5;
  *(void *)(v2 + 208) = *(void *)(v5 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  return _swift_task_switch(sub_472A0, 0, 0);
}

uint64_t sub_472A0()
{
  if (qword_19AD88 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = sub_C584(v3, (uint64_t)qword_19D438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1456C0();
  sub_1456A0();
  uint64_t v5 = sub_1456D0();
  os_signpost_type_t v6 = sub_146390();
  if (sub_1465A0())
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    Swift::String v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, *(void *)(v0 + 168), v8);
    CFStringRef v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CFStringRef v11 = 0;
    os_signpost_id_t v12 = sub_145690();
    _os_signpost_emit_with_name_impl(&def_94138, v5, v6, v12, "createThumbnail", "", v11, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);

    Swift::String v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  CGImageRef v17 = *(void **)(v0 + 136);
  v10(*(void *)(v0 + 160), v14, v15);
  sub_145720();
  swift_allocObject();
  *(void *)(v0 + 224) = sub_145710();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  [v17 size];
  double v18 = *(double *)(v0 + 128);
  BOOL v21 = v20 < v19;
  double v22 = v20 / v19 * v18;
  double v23 = v19 / v20 * v18;
  if (v21) {
    double v24 = *(double *)(v0 + 128);
  }
  else {
    double v24 = v22;
  }
  if (v21) {
    double v25 = v23;
  }
  else {
    double v25 = *(double *)(v0 + 128);
  }
  uint64_t v26 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_47598;
  uint64_t v27 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_44954;
  *(void *)(v0 + 104) = &unk_186880;
  *(void *)(v0 + 112) = v27;
  objc_msgSend(v26, "prepareThumbnailOfSize:completionHandler:", v0 + 80, v25, v24);
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_47598()
{
  return _swift_task_switch(sub_47678, 0, 0);
}

uint64_t sub_47678()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[15];
  sub_4775C(v1, "createThumbnail", 15, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_4775C(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_1456F0();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1456B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_signpost_id_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_1456D0();
  sub_145700();
  int v24 = sub_146380();
  uint64_t result = sub_1465A0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    CGImageRef v17 = v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v26 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  CGImageRef v17 = &v27;
LABEL_10:
  swift_retain();
  sub_145730();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    double v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    double v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  double v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)double v20 = 0;
  os_signpost_id_t v21 = sub_145690();
  _os_signpost_emit_with_name_impl(&def_94138, v15, (os_signpost_type_t)v24, v21, v17, v19, v20, 2u);
  swift_slowDealloc();

  double v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

char *sub_47A6C()
{
  return &v1;
}

unint64_t sub_47A7C()
{
  unint64_t result = qword_19B400;
  if (!qword_19B400)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B400);
  }
  return result;
}

uint64_t sub_47AD4(uint64_t a1)
{
  return sub_47B7C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001ALL, 0x800000000014BC10, &qword_1A3B48);
}

uint64_t sub_47B0C(uint64_t a1)
{
  return sub_47B7C(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD00000000000001ELL, 0x800000000014BBF0, &qword_1A3B50);
}

uint64_t sub_47B44(uint64_t a1)
{
  return sub_47B7C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001BLL, 0x800000000014BBD0, &qword_1A3B58);
}

uint64_t sub_47B7C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_146300();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1462D0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_145980();
  __chkstk_darwin(v12 - 8);
  sub_48534();
  a2();
  sub_1462C0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_146340();
  *a5 = result;
  return result;
}

uint64_t sub_47D3C(char a1)
{
  uint64_t v2 = v1;
  int v51 = a1 & 1;
  uint64_t v3 = sub_145290();
  uint64_t v57 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v50 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19B730);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &unk_15A000;
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v2;
    if (sub_13F18(ObjectType, v8))
    {
      id v60 = [self defaultCenter];
      id v59 = sub_145B80();
      sub_A314(&qword_19D468);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_15A590;
      id v58 = v12;
      strcpy((char *)v61, "downloadIDKey");
      HIWORD(v61[1]) = -4864;
      sub_146780();
      uint64_t v14 = sub_145240();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v14;
      *(void *)(inited + 80) = v15;
      v61[0] = 0xD000000000000013;
      v61[1] = 0x800000000014BBB0;
      sub_146780();
      *(void *)(inited + 168) = &_s16DownloadPriorityON;
      *(unsigned char *)(inited + 144) = v51;
      v61[0] = 0x64616F6C6E776F64;
      v61[1] = 0xEF79654B65707954;
      sub_146780();
      *(void *)(inited + 240) = &_s12DownloadTypeON;
      *(unsigned char *)(inited + 216) = 1;
      sub_1369F8(inited);
      Class isa = sub_1459D0().super.isa;
      swift_bridgeObjectRelease();
      id v18 = v59;
      id v17 = v60;
      [v60 postNotificationName:v59 object:0 userInfo:isa];

      uint64_t v10 = (_OWORD *)&unk_15A000;
    }
    else
    {
    }
  }
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachmentIdsMissingFile];
  uint64_t v20 = *(void *)(v19 + 56);
  uint64_t v42 = v19 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v53 = v57 + 16;
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v52 = v57 + 48;
  uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v57 + 8);
  BOOL v49 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v56 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v47 = 0x800000000014BB90;
  long long v46 = v10[89];
  os_log_type_t v44 = (char *)&type metadata for Any + 8;
  unint64_t v45 = 0x800000000014BBB0;
  if (!v23) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v25 << 6);
  uint64_t v28 = v55;
  while (1)
  {
    uint64_t v32 = v57;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v33(v28, *(void *)(v56 + 48) + *(void *)(v57 + 72) * v27, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v3) == 1) {
      return swift_release();
    }
    uint64_t v34 = *v49;
    id v60 = (id)v25;
    uint64_t v35 = v50;
    v34(v50, v28, v3);
    id v59 = [self defaultCenter];
    id v58 = sub_145B80();
    sub_A314(&qword_19D468);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = v46;
    strcpy((char *)v61, "downloadIDKey");
    HIWORD(v61[1]) = -4864;
    sub_146780();
    *(void *)(v36 + 96) = v3;
    uint64_t v37 = sub_484D0((uint64_t *)(v36 + 72));
    v33((char *)v37, (unint64_t)v35, v3);
    v61[0] = 0xD000000000000013;
    v61[1] = v45;
    sub_146780();
    *(void *)(v36 + 168) = &_s16DownloadPriorityON;
    *(unsigned char *)(v36 + 144) = v51;
    v61[0] = 0x64616F6C6E776F64;
    v61[1] = 0xEF79654B65707954;
    sub_146780();
    *(void *)(v36 + 240) = &_s12DownloadTypeON;
    *(unsigned char *)(v36 + 216) = 0;
    sub_1369F8(v36);
    Class v38 = sub_1459D0().super.isa;
    swift_bridgeObjectRelease();
    id v40 = v58;
    id v39 = v59;
    [v59 postNotificationName:v58 object:0 userInfo:v38];

    uint64_t v41 = v35;
    int64_t v25 = (int64_t)v60;
    uint64_t result = (*v48)(v41, v3);
    if (v23) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v29 = v25 + 1;
    uint64_t v28 = v55;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v25;
    if (!v30)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v43) {
        goto LABEL_32;
      }
      unint64_t v30 = *(void *)(v42 + 8 * v25);
      if (!v30)
      {
        int64_t v25 = v29 + 2;
        if (v29 + 2 >= v43) {
          goto LABEL_32;
        }
        unint64_t v30 = *(void *)(v42 + 8 * v25);
        if (!v30) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v23 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v43)
  {
LABEL_32:
    (*v54)(v55, 1, 1, v3);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v42 + 8 * v31);
  if (v30)
  {
    int64_t v25 = v31;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_28;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t *sub_484D0(uint64_t *a1)
{
  char v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_48534()
{
  unint64_t result = qword_19BC70;
  if (!qword_19BC70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19BC70);
  }
  return result;
}

ValueMetadata *_s12DownloadTypeOMa()
{
  return &_s12DownloadTypeON;
}

unsigned char *_s12DownloadTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x48658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16DownloadPriorityOMa()
{
  return &_s16DownloadPriorityON;
}

unint64_t sub_48694()
{
  unint64_t result = qword_19D470;
  if (!qword_19D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D470);
  }
  return result;
}

unint64_t sub_486EC()
{
  unint64_t result = qword_19D478;
  if (!qword_19D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D478);
  }
  return result;
}

uint64_t sub_4874C(char *a1, char *a2)
{
  return sub_56520(*a1, *a2);
}

Swift::Int sub_48758()
{
  return sub_146CD0();
}

uint64_t sub_487E4()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_4885C()
{
  return sub_146CD0();
}

uint64_t sub_488E4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  int v3 = (void *)a1[1];
  v4._rawValue = &off_184820;
  v8._object = v3;
  Swift::Int v5 = sub_1469B0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_48944(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6163696669746F6ELL;
  if (*v1) {
    uint64_t v2 = 0x68746C616568;
  }
  unint64_t v3 = 0xED0000736E6F6974;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_4898C(char a1)
{
  uint64_t result = 0x6472616F6279656BLL;
  switch(a1)
  {
    case 2:
      uint64_t result = 0x6B63695065746164;
      break;
    case 3:
      uint64_t result = 0x6974736567677573;
      break;
    case 4:
      uint64_t result = 0x736F746F6870;
      break;
    case 5:
      uint64_t result = 0x6172656D6163;
      break;
    case 6:
      uint64_t result = 0x6C64496F69647561;
      break;
    case 7:
      uint64_t result = 0x7463416F69647561;
      break;
    case 8:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 9:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 10:
      uint64_t result = 0x7478655468636972;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_48B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v171 = a1;
  uint64_t v146 = sub_145170();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v142 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_A314(&qword_19C150);
  __chkstk_darwin(v2 - 8);
  uint64_t v158 = (uint64_t)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145230();
  uint64_t v163 = *(void *)(v4 - 8);
  uint64_t v164 = v4;
  __chkstk_darwin(v4);
  uint64_t v155 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19D480);
  __chkstk_darwin(v6 - 8);
  uint64_t v156 = (uint64_t)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1459A0();
  uint64_t v161 = *(void *)(v8 - 8);
  uint64_t v162 = v8;
  __chkstk_darwin(v8);
  uint64_t v154 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for CanvasStartingState();
  __chkstk_darwin(v165);
  uint64_t v167 = (uint64_t)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_145290();
  uint64_t v160 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v153 = (char *)&v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(&qword_19B730);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v166 = (uint64_t)&v142 - v16;
  uint64_t v17 = sub_144B10();
  uint64_t v168 = *(void *)(v17 - 8);
  uint64_t v169 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v147 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  v151 = (char *)&v142 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v150 = (char *)&v142 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v152 = (char *)&v142 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v143 = (char *)&v142 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v149 = (char *)&v142 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v142 - v31;
  __chkstk_darwin(v30);
  v148 = (char *)&v142 - v33;
  uint64_t v34 = sub_144F60();
  uint64_t v159 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v142 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_A314(&qword_19EB20);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  id v40 = (char *)&v142 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v142 - v41;
  uint64_t v43 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v43);
  unint64_t v45 = (char *)&v142 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_144B80();
  uint64_t v174 = *(void *)(v170 - 8);
  uint64_t v46 = __chkstk_darwin(v170);
  v173 = (char *)&v142 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  BOOL v49 = (char *)&v142 - v48;
  sub_144B70();
  sub_144B60();
  unint64_t v50 = v49;
  sub_144B30();
  sub_4A23C(v172, (uint64_t)v45);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v54 = *((void *)v45 + 1);
      int v51 = v49;
      sub_144B50();
      uint64_t v55 = v170;
      if (v54)
      {
        uint64_t v57 = (void (*)(char *, void))sub_144B20();
        if (*v56)
        {
          id v58 = v56;
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v59 = *v58;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *id v58 = v59;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v59 = sub_7E088(0, *(void *)(v59 + 16) + 1, 1, v59);
            *id v58 = v59;
          }
          unint64_t v62 = *(void *)(v59 + 16);
          unint64_t v61 = *(void *)(v59 + 24);
          if (v62 >= v61 >> 1)
          {
            unint64_t v59 = sub_7E088(v61 > 1, v62 + 1, 1, v59);
            *id v58 = v59;
          }
          *(void *)(v59 + 16) = v62 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v59+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v62, v32, v169);
          v57(v176, 0);
        }
        else
        {
          swift_bridgeObjectRelease();
          v57(v176, 0);
        }
      }
      goto LABEL_74;
    case 2u:
      uint64_t v63 = v166;
      sub_2E4D0((uint64_t)v45, v166, &qword_19B730);
      sub_144B50();
      sub_12428(v63, (uint64_t)v15, &qword_19B730);
      uint64_t v64 = v160;
      uint64_t v65 = v157;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v15, 1, v157) == 1)
      {
        sub_1248C(v63, &qword_19B730);
        sub_1248C((uint64_t)v15, &qword_19B730);
        uint64_t v55 = v170;
        int v51 = v49;
      }
      else
      {
        uint64_t v90 = v153;
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v153, v15, v65);
        uint64_t v92 = (void (*)(char *, void))sub_144B20();
        uint64_t v55 = v170;
        int v51 = v49;
        if (*v91)
        {
          uint64_t v93 = v91;
          sub_145240();
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v94 = *v93;
          char v95 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v93 = v94;
          uint64_t v96 = v169;
          if ((v95 & 1) == 0)
          {
            unint64_t v94 = sub_7E088(0, *(void *)(v94 + 16) + 1, 1, v94);
            *uint64_t v93 = v94;
          }
          unint64_t v98 = *(void *)(v94 + 16);
          unint64_t v97 = *(void *)(v94 + 24);
          if (v98 >= v97 >> 1)
          {
            unint64_t v94 = sub_7E088(v97 > 1, v98 + 1, 1, v94);
            *uint64_t v93 = v94;
          }
          *(void *)(v94 + 16) = v98 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v94+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v98, v149, v96);
          v92(v176, 0);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v153, v65);
        }
        else
        {
          v92(v176, 0);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v90, v65);
        }
        sub_1248C(v166, &qword_19B730);
      }
      goto LABEL_74;
    case 3u:
      uint64_t v66 = v167;
      sub_4A2A0((uint64_t)v45, v167);
      int v51 = v49;
      uint64_t v67 = v66;
      sub_144B50();
      uint64_t v68 = v66;
      uint64_t v69 = v156;
      sub_12428(v68, v156, &qword_19D480);
      uint64_t v71 = v161;
      uint64_t v70 = v162;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48))(v69, 1, v162) == 1)
      {
        sub_1248C(v69, &qword_19D480);
        uint64_t v55 = v170;
        uint64_t v72 = (int *)v165;
      }
      else
      {
        uint64_t v99 = v154;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v154, v69, v70);
        long long v101 = (void (*)(char *, void))sub_144B20();
        uint64_t v72 = (int *)v165;
        if (*v100)
        {
          Swift::String v102 = v100;
          uint64_t v175 = sub_145990();
          sub_146B50();
          id v103 = v143;
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v104 = *v102;
          char v105 = swift_isUniquelyReferenced_nonNull_native();
          *Swift::String v102 = v104;
          if ((v105 & 1) == 0)
          {
            unint64_t v104 = sub_7E088(0, *(void *)(v104 + 16) + 1, 1, v104);
            *Swift::String v102 = v104;
          }
          uint64_t v55 = v170;
          unint64_t v107 = *(void *)(v104 + 16);
          unint64_t v106 = *(void *)(v104 + 24);
          if (v107 >= v106 >> 1)
          {
            unint64_t v104 = sub_7E088(v106 > 1, v107 + 1, 1, v104);
            *Swift::String v102 = v104;
          }
          *(void *)(v104 + 16) = v107 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v104+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v107, v103, v169);
          v101(v176, 0);
          (*(void (**)(char *, uint64_t))(v161 + 8))(v154, v162);
          uint64_t v67 = v167;
        }
        else
        {
          v101(v176, 0);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v99, v70);
          uint64_t v55 = v170;
        }
      }
      if (*(void *)(v67 + v72[5] + 8))
      {
        swift_bridgeObjectRetain();
        uint64_t v109 = (void (*)(char *, void))sub_144B20();
        if (*v108)
        {
          uint64_t v110 = v108;
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v111 = *v110;
          char v112 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v110 = v111;
          if ((v112 & 1) == 0)
          {
            unint64_t v111 = sub_7E088(0, *(void *)(v111 + 16) + 1, 1, v111);
            *uint64_t v110 = v111;
          }
          uint64_t v67 = v167;
          unint64_t v114 = *(void *)(v111 + 16);
          unint64_t v113 = *(void *)(v111 + 24);
          if (v114 >= v113 >> 1)
          {
            unint64_t v111 = sub_7E088(v113 > 1, v114 + 1, 1, v111);
            *uint64_t v110 = v111;
          }
          *(void *)(v111 + 16) = v114 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v111+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v114, v152, v169);
          v109(v176, 0);
        }
        else
        {
          swift_bridgeObjectRelease();
          v109(v176, 0);
          uint64_t v67 = v167;
        }
      }
      uint64_t v115 = v158;
      sub_12428(v67 + v72[6], v158, &qword_19C150);
      uint64_t v116 = v163;
      uint64_t v117 = v164;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v115, 1, v164) == 1)
      {
        sub_1248C(v115, &qword_19C150);
      }
      else
      {
        id v118 = v155;
        (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v155, v115, v117);
        uint64_t v119 = v116;
        uint64_t v121 = (void (*)(char *, void))sub_144B20();
        if (*v120)
        {
          uint64_t v122 = v120;
          unint64_t v123 = v144;
          sub_144980();
          sub_4A398();
          uint64_t v124 = v146;
          sub_145210();
          (*(void (**)(char *, uint64_t))(v145 + 8))(v123, v124);
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v125 = *v122;
          char v126 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v122 = v125;
          if ((v126 & 1) == 0)
          {
            unint64_t v125 = sub_7E088(0, *(void *)(v125 + 16) + 1, 1, v125);
            *uint64_t v122 = v125;
          }
          uint64_t v72 = (int *)v165;
          unint64_t v128 = *(void *)(v125 + 16);
          unint64_t v127 = *(void *)(v125 + 24);
          if (v128 >= v127 >> 1)
          {
            unint64_t v125 = sub_7E088(v127 > 1, v128 + 1, 1, v125);
            *uint64_t v122 = v125;
          }
          *(void *)(v125 + 16) = v128 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v125+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v128, v150, v169);
          v121(v176, 0);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v155, v164);
        }
        else
        {
          v121(v176, 0);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v117);
          uint64_t v72 = (int *)v165;
        }
      }
      unsigned int v129 = *(unsigned __int8 *)(v67 + v72[7]);
      if (v129 < 0xFE)
      {
        char v130 = sub_4A304(v129);
        uint64_t v132 = (void (*)(char *, void))sub_144B20();
        if (*v131)
        {
          v133 = v131;
          sub_4898C(v130);
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v134 = *v133;
          char v135 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v133 = v134;
          if ((v135 & 1) == 0)
          {
            unint64_t v134 = sub_7E088(0, *(void *)(v134 + 16) + 1, 1, v134);
            unint64_t *v133 = v134;
          }
          unint64_t v137 = *(void *)(v134 + 16);
          unint64_t v136 = *(void *)(v134 + 24);
          if (v137 >= v136 >> 1)
          {
            unint64_t v134 = sub_7E088(v136 > 1, v137 + 1, 1, v134);
            unint64_t *v133 = v134;
          }
          *(void *)(v134 + 16) = v137 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v134+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v137, v151, v169);
          v132(v176, 0);
        }
        else
        {
          v132(v176, 0);
        }
      }
      sub_4B50C(v67, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      goto LABEL_74;
    case 4u:
      int v51 = v49;
      sub_144B50();
      uint64_t v74 = (void (*)(char *, void))sub_144B20();
      if (!*v73)
      {
        v74(v176, 0);
        goto LABEL_44;
      }
      int v75 = v73;
      uint64_t v76 = v147;
      sub_144B00();
      swift_bridgeObjectRelease();
      unint64_t v77 = *v75;
      char v78 = swift_isUniquelyReferenced_nonNull_native();
      *int v75 = v77;
      uint64_t v55 = v170;
      if ((v78 & 1) == 0)
      {
        unint64_t v77 = sub_7E088(0, *(void *)(v77 + 16) + 1, 1, v77);
        *int v75 = v77;
      }
      uint64_t v79 = v169;
      unint64_t v81 = *(void *)(v77 + 16);
      unint64_t v80 = *(void *)(v77 + 24);
      if (v81 >= v80 >> 1)
      {
        unint64_t v77 = sub_7E088(v80 > 1, v81 + 1, 1, v77);
        *int v75 = v77;
      }
      *(void *)(v77 + 16) = v81 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v77+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v81, v76, v79);
      v74(v176, 0);
      goto LABEL_74;
    case 5u:
      int v51 = v49;
      sub_144B50();
      goto LABEL_44;
    default:
      sub_2E4D0((uint64_t)v45, (uint64_t)v42, &qword_19EB20);
      int v51 = v49;
      sub_144B50();
      sub_12428((uint64_t)v42, (uint64_t)v40, &qword_19EB20);
      uint64_t v52 = v159;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v40, 1, v34) == 1)
      {
        sub_1248C((uint64_t)v42, &qword_19EB20);
        uint64_t v53 = (uint64_t)v40;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v36, v40, v34);
        unint64_t v83 = (void (*)(char *, void))sub_144B20();
        if (*v82)
        {
          uint64_t v84 = v82;
          sub_144E40();
          sub_144B00();
          swift_bridgeObjectRelease();
          unint64_t v85 = *v84;
          char v86 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v84 = v85;
          uint64_t v87 = v169;
          if ((v86 & 1) == 0)
          {
            unint64_t v85 = sub_7E088(0, *(void *)(v85 + 16) + 1, 1, v85);
            *uint64_t v84 = v85;
          }
          unint64_t v89 = *(void *)(v85 + 16);
          unint64_t v88 = *(void *)(v85 + 24);
          if (v89 >= v88 >> 1)
          {
            unint64_t v85 = sub_7E088(v88 > 1, v89 + 1, 1, v85);
            *uint64_t v84 = v85;
          }
          *(void *)(v85 + 16) = v89 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v85+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v89, v148, v87);
          v83(v176, 0);
          (*(void (**)(char *, uint64_t))(v159 + 8))(v36, v34);
          sub_1248C((uint64_t)v42, &qword_19EB20);
          uint64_t v55 = v170;
          int v51 = v50;
          goto LABEL_74;
        }
        v83(v176, 0);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v34);
        uint64_t v53 = (uint64_t)v42;
      }
      sub_1248C(v53, &qword_19EB20);
LABEL_44:
      uint64_t v55 = v170;
LABEL_74:
      uint64_t v138 = v173;
      uint64_t v139 = v174;
      (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v173, v51, v55);
      sub_144B40();
      Swift::String v140 = *(void (**)(char *, uint64_t))(v139 + 8);
      v140(v138, v55);
      return ((uint64_t (*)(char *, uint64_t))v140)(v51, v55);
  }
}

uint64_t type metadata accessor for AppLaunchAction()
{
  uint64_t result = qword_19D4F8;
  if (!qword_19D4F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4A23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4A2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CanvasStartingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4A304(unsigned __int8 a1)
{
  uint64_t v2 = a1 >> 5;
  uint64_t result = 10;
  switch(v2)
  {
    case 1:
      uint64_t result = a1 & 1 | 6u;
      break;
    case 2:
      if (a1 == 64) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 3;
      }
      break;
    case 3:
      if (a1 == 96) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 5;
      }
      break;
    case 4:
      if (a1 == 128) {
        uint64_t result = 8;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 5:
      return result;
    default:
      uint64_t result = a1 & 1;
      break;
  }
  return result;
}

unint64_t sub_4A398()
{
  unint64_t result = qword_19BE58;
  if (!qword_19BE58)
  {
    sub_145170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19BE58);
  }
  return result;
}

uint64_t *sub_4A3F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_144F60();
        uint64_t v8 = *(void *)(v7 - 8);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
          goto LABEL_13;
        }
        uint64_t v9 = sub_A314(&qword_19EB20);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_14;
      case 1u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v7 = sub_145290();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v13 = sub_A314(&qword_19B730);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
LABEL_13:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v14 = sub_1459A0();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          uint64_t v16 = sub_A314(&qword_19D480);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        uint64_t v17 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v18 = v17[5];
        uint64_t v19 = (uint64_t *)((char *)a1 + v18);
        uint64_t v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        void *v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v17[6];
        __dst = (char *)a1 + v22;
        uint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = sub_145230();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        if (v26(v23, 1, v24))
        {
          uint64_t v27 = sub_A314(&qword_19C150);
          memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_4A900(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_144F60();
      goto LABEL_7;
    case 1:
      return swift_bridgeObjectRelease();
    case 2:
      uint64_t v3 = sub_145290();
LABEL_7:
      uint64_t v4 = v3;
      uint64_t v9 = *(void *)(v3 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v3);
      if (result) {
        return result;
      }
      goto LABEL_12;
    case 3:
      uint64_t v5 = sub_1459A0();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      }
      uint64_t v7 = type metadata accessor for CanvasStartingState();
      swift_bridgeObjectRelease();
      a1 += *(int *)(v7 + 24);
      uint64_t v4 = sub_145230();
      uint64_t v9 = *(void *)(v4 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v4);
      if (!result)
      {
LABEL_12:
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        uint64_t result = v8(a1, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_4AB58(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_144F60();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_A314(&qword_19EB20);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_19;
    case 1u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 2u:
      uint64_t v10 = sub_145290();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_A314(&qword_19B730);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      goto LABEL_19;
    case 3u:
      uint64_t v13 = sub_1459A0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_A314(&qword_19D480);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      uint64_t v17 = v16[5];
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v16[6];
      __dst = (char *)a1 + v21;
      uint64_t v22 = (char *)a2 + v21;
      uint64_t v23 = sub_145230();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = sub_A314(&qword_19C150);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      *((unsigned char *)a1 + v16[7]) = *((unsigned char *)a2 + v16[7]);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_4B018(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_4B50C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_144F60();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_A314(&qword_19EB20);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_19;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 2u:
        uint64_t v9 = sub_145290();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = sub_A314(&qword_19B730);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        goto LABEL_19;
      case 3u:
        uint64_t v12 = sub_1459A0();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = sub_A314(&qword_19D480);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v16 = v15[5];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        void *v17 = *v18;
        v17[1] = v18[1];
        uint64_t v19 = v15[6];
        __dst = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = sub_145230();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        if (v23(v20, 1, v21))
        {
          uint64_t v24 = sub_A314(&qword_19C150);
          memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        *((unsigned char *)a1 + v15[7]) = *((unsigned char *)a2 + v15[7]);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_4B50C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_4B56C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v10 = sub_1459A0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_A314(&qword_19D480);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
      uint64_t v17 = v16[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_145230();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_A314(&qword_19C150);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      a1[v16[7]] = a2[v16[7]];
      goto LABEL_20;
    case 2:
      uint64_t v13 = sub_145290();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_A314(&qword_19B730);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      goto LABEL_20;
    case 0:
      uint64_t v7 = sub_144F60();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_A314(&qword_19EB20);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_4B9C0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_4B50C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v10 = sub_1459A0();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = sub_A314(&qword_19D480);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
        *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
        uint64_t v17 = v16[6];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = sub_145230();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_A314(&qword_19C150);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        a1[v16[7]] = a2[v16[7]];
        goto LABEL_20;
      case 2:
        uint64_t v13 = sub_145290();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = sub_A314(&qword_19B730);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        goto LABEL_20;
      case 0:
        uint64_t v7 = sub_144F60();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = sub_A314(&qword_19EB20);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_4BE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_4BE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_4BE8C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_4BE9C()
{
  sub_4BFE4(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_4BFE4(319, (unint64_t *)&qword_19B830, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CanvasStartingState();
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_4BFE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PermissionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4C104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PermissionType()
{
  return &type metadata for PermissionType;
}

unint64_t sub_4C140()
{
  unint64_t result = qword_19D538;
  if (!qword_19D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D538);
  }
  return result;
}

uint64_t type metadata accessor for CanvasGridManager()
{
  return self;
}

uint64_t sub_4C1B8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v8 = [self mainScreen];
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v23.origin.x = v10;
  v23.origin.y = v12;
  v23.size.width = v14;
  v23.size.height = v16;
  double Width = CGRectGetWidth(v23);
  if (qword_19AD18 != -1) {
    swift_once();
  }
  double v18 = Width - (*(double *)&qword_1A3A80 + *(double *)&qword_1A3A80);
  if (qword_19AD10 != -1) {
    swift_once();
  }
  double v19 = v18 - (*(double *)&qword_1A3A78 + *(double *)&qword_1A3A78);
  v24.origin.x = a1;
  v24.origin.y = a2;
  v24.size.width = a3;
  v24.size.height = a4;
  double v20 = CGRectGetWidth(v24);
  if (v19 * 0.5 >= v20)
  {
    if (v20 >= v19 * 0.5) {
      return 4;
    }
    double v22 = v19 * 0.25;
    if (v22 >= v20)
    {
      return 4;
    }
    else
    {
      v26.origin.x = a1;
      v26.origin.y = a2;
      v26.size.width = a3;
      v26.size.height = a4;
      if (CGRectGetHeight(v26) >= v22) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
  else
  {
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    if (v20 == CGRectGetHeight(v25))
    {
      return 5;
    }
    else
    {
      v27.origin.x = a1;
      v27.origin.y = a2;
      v27.size.width = a3;
      v27.size.height = a4;
      return v19 * 0.25 >= CGRectGetHeight(v27);
    }
  }
}

uint64_t getEnumTagSinglePayload for AssetSizeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetSizeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4C4F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSizeType()
{
  return &type metadata for AssetSizeType;
}

unint64_t sub_4C530()
{
  unint64_t result = qword_19D5D8;
  if (!qword_19D5D8)
  {
    sub_12244(&qword_19D5E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D5D8);
  }
  return result;
}

uint64_t sub_4C58C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7)
{
  CGFloat v10 = (void *)0xE600000000000000;
  sub_145290();
  sub_4CAD0();
  v13._countAndFlagsBits = sub_146B50();
  sub_145C90(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  sub_145C90(v14);
  v15._countAndFlagsBits = sub_146B50();
  sub_145C90(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 45;
  v16._object = (void *)0xE100000000000000;
  sub_145C90(v16);
  v11._countAndFlagsBits = 0x656772614C78;
  switch(a7)
  {
    case 1:
      v11._countAndFlagsBits = 0x69576D756964656DLL;
      CGFloat v10 = (void *)0xEA00000000006564;
      break;
    case 2:
      CGFloat v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x656772616CLL;
      break;
    case 3:
      v11._countAndFlagsBits = 0x6D756964656DLL;
      break;
    case 4:
      CGFloat v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x6C6C616D73;
      break;
    case 5:
      CGFloat v10 = (void *)0xEA00000000006E65;
      v11._countAndFlagsBits = 0x657263536C6C7566;
      break;
    default:
      break;
  }
  v11._object = v10;
  sub_145C90(v11);
  swift_bridgeObjectRelease();
  if ((a6 & 1) == 0)
  {
    v17._countAndFlagsBits = sub_146B50();
    sub_145C90(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    sub_145C90(v18);
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) == 0)
  {
    v19._countAndFlagsBits = sub_146B50();
    sub_145C90(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    sub_145C90(v20);
    swift_bridgeObjectRelease();
  }
  return 0x2D626D756874;
}

uint64_t sub_4C808(unsigned __int8 *a1, char *a2)
{
  return sub_565D0(*a1, *a2);
}

Swift::Int sub_4C814()
{
  return sub_56C54();
}

uint64_t sub_4C81C()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_4C910()
{
  return sub_572F0();
}

uint64_t sub_4C918@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_4CA84(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_4C948(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x656772614C78;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x69576D756964656DLL;
      unint64_t v2 = 0xEA00000000006564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656772616CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6C6C616D73;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x657263536C6C7566;
      a1[1] = 0xEA00000000006E65;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_4CA1C(void *a1@<X8>)
{
  *a1 = &off_184500;
}

unint64_t sub_4CA30()
{
  unint64_t result = qword_19D5E8;
  if (!qword_19D5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D5E8);
  }
  return result;
}

uint64_t sub_4CA84(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_184870;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_4CAD0()
{
  unint64_t result = qword_19D5F0;
  if (!qword_19D5F0)
  {
    sub_145290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D5F0);
  }
  return result;
}

void sub_4CB28()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  ceil(CGRectGetWidth(v9));
}

id sub_4CC34(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_146930();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)sub_146810())
  {
    Swift::String v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)sub_146810();
LABEL_22:
    Swift::String v13 = v12;
    _s5AssetCMa();
    char v14 = sub_1464B0();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)sub_146810();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        Swift::String v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_146810();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = sub_1464B0();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      CGRect v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        CGRect v27 = *v25++;
        CGRect v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_1464B0();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_4CF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  CGFloat v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_2E1B0(a1 + v12, (uint64_t)v10);
        sub_2E1B0(a2 + v12, (uint64_t)v7);
        char v15 = sub_B85E4((uint64_t)v10, v7);
        sub_2E274((uint64_t)v7);
        sub_2E274((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_4D070(uint64_t a1)
{
  sub_41FE8(a1, (uint64_t)v20);
  uint64_t v3 = v21;
  if (v21)
  {
    uint64_t v4 = sub_2F114(v20, v21);
    uint64_t v5 = *(void *)(v3 - 8);
    __chkstk_darwin(v4);
    uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_146B80();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_C7FC((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = (objc_class *)_s16MultiPinMapAssetCMa();
  v19.receiver = v1;
  v19.super_class = v9;
  unsigned int v10 = objc_msgSendSuper2(&v19, "isEqual:", v8);
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_17;
  }
  sub_41FE8(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_1248C((uint64_t)v20, &qword_19B1E0);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v16 = 0;
    return v16 & 1;
  }
  uint64_t v11 = (char *)v18[1];
  if (!*(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), unint64_t v12 = (double *)sub_30670(), swift_release(), v12 == (double *)((char *)&def_94138 + 1))
    || (uint64_t v13 = swift_bridgeObjectRetain(), sub_2C34C(v13), !v12))
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = _swiftEmptyArrayStorage;
  }
  if (!*(void *)&v11[OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), uint64_t v14 = (double *)sub_30670(), swift_release(), v14 == (double *)((char *)&def_94138 + 1))
    || (uint64_t v15 = swift_bridgeObjectRetain(), sub_2C34C(v15), !v14))
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  char v16 = sub_4CF10((uint64_t)v12, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_4D39C(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  v13[1] = a5;
  v13[2] = a3;
  uint64_t v8 = sub_A314(&qword_19D690);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_4E6B4();
  sub_146D10();
  uint64_t v17 = a2;
  char v16 = 0;
  sub_A314(&qword_19D680);
  sub_4E708(&qword_19D698, &qword_19D6A0);
  sub_146AD0();
  if (!v5)
  {
    char v15 = 1;
    sub_146AA0();
    char v14 = 2;
    sub_146AC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_4D590()
{
  uint64_t v1 = 0x6D696C537369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697369766572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144737469736976;
  }
}

uint64_t sub_4D5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_4E2DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_4D614(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_4D620(uint64_t a1)
{
  unint64_t v2 = sub_4E6B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_4D65C(uint64_t a1)
{
  unint64_t v2 = sub_4E6B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_4D698@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_4E438(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_4D6D4(void *a1)
{
  return sub_4D39C(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_4D6FC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata))
  {
    swift_retain();
    uint64_t v3 = sub_30670();
    char v5 = v4;
    a1 = swift_release();
    if (v3 != 1)
    {
      a1 = sub_2C34C(v3);
      if (v5) {
        return 1;
      }
    }
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v7 = v6;
  sub_A314(&qword_19D6A8);
  sub_1463C0();

  return v9 & 1;
}

uint64_t sub_4D828()
{
  uint64_t v1 = sub_A314(&qword_19C498);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v5 = sub_30670();
  swift_release();
  if (v5 == 1) {
    return 0;
  }
  if (!v5
    || !*(void *)(v5 + 16)
    || (uint64_t v7 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8),
        uint64_t v8 = (uint64_t *)(v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))),
        (uint64_t v9 = v8[1]) == 0)
    || !*(void *)(v0 + v4))
  {
LABEL_15:
    sub_A314(&qword_19D6B0);
    uint64_t inited = swift_initStackObject();
    uint64_t v17 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_1598D0;
    if (v5)
    {
      if (*(void *)(v5 + 16))
      {
        uint64_t v18 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
        uint64_t v19 = *(void *)(v5
                        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        uint64_t v20 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      v17[4] = v19;
      v17[5] = v20;
      uint64_t v22 = *(void *)(v5 + 16);
      uint64_t v23 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if (v22)
      {
        sub_2E1B0(v5+ ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)), (uint64_t)v3);
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 1;
      }
      uint64_t v21 = v17 + 6;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v3, v25, 1, v23);
      sub_2C34C(v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23) != 1)
      {
        uint64_t v27 = *((void *)v3 + 2);
        uint64_t v26 = *((void *)v3 + 3);
        swift_bridgeObjectRetain();
        sub_2E274((uint64_t)v3);
        void *v21 = v27;
        goto LABEL_27;
      }
      sub_1248C((uint64_t)v3, &qword_19C498);
    }
    else
    {
      uint64_t v21 = (void *)(inited + 48);
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = 0;
    }
    uint64_t v26 = 0;
    void *v21 = 0;
LABEL_27:
    v17[7] = v26;
    uint64_t v6 = sub_64620(8236, 0xE200000000000000, (uint64_t)v17);
    swift_setDeallocating();
    sub_A314((uint64_t *)&unk_19EB10);
    swift_arrayDestroy();
    return v6;
  }
  uint64_t v29 = *v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_30670();
  int v30 = v11;
  swift_release();
  if (v10 == 1
    || (uint64_t v12 = swift_bridgeObjectRetain(), sub_2C34C(v12), !v10)
    || (unint64_t v13 = *(void *)(v10 + 16), swift_bridgeObjectRelease(), v13 < 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_2C34C(v5);
  if (qword_19AD58 != -1) {
    swift_once();
  }
  sub_A314(&qword_1A0A00);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1598D0;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_1CEB8();
  *(void *)(v14 + 32) = v29;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v13 - 1;
  uint64_t v6 = sub_145B90();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_4DC74(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MultiPinMapThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  id v15 = a6;
  char v16 = (char *)v13;
  uint64_t v17 = sub_2B1E4();
  uint64_t v18 = &v16[qword_1A3BE8];
  *(void *)uint64_t v18 = v17;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v20;
  v18[24] = v21;

  return sub_42A2C(v14, a1, a2, v12, a4, a5, v15);
}

uint64_t sub_4DD38(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_145290();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id, v7);
  id v11 = [a3 userInterfaceStyle];
  if (*(void *)(v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata))
  {
    uint64_t v22 = a1;
    char v12 = a2;
    swift_retain();
    uint64_t v13 = sub_30670();
    uint64_t v15 = v14;
    char v17 = v16;
    swift_release();
    if (v13 == 1)
    {
      uint64_t v15 = 0;
      char v18 = 1;
    }
    else
    {
      char v18 = v17 & 1;
      sub_2C34C(v13);
    }
    a2 = v12;
    a1 = v22;
  }
  else
  {
    uint64_t v15 = 0;
    char v18 = 1;
  }
  uint64_t v19 = sub_4C58C((uint64_t)v10, a1, (uint64_t)v11, 0, v15, v18, a2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v19;
}

uint64_t sub_4DF08()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_4DF48()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16MultiPinMapAssetCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_4DFCC()
{
  return _s16MultiPinMapAssetCMa();
}

uint64_t _s16MultiPinMapAssetCMa()
{
  uint64_t result = qword_19D620;
  if (!qword_19D620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4E020()
{
  return swift_updateClassMetadata2();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 _s16MultiPinMapAssetC15MultiPinMapDataVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataVMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataVN;
}

uint64_t sub_4E234()
{
  return swift_retain();
}

uint64_t sub_4E244(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_4E25C()
{
  return sub_4D828();
}

unint64_t sub_4E288()
{
  unint64_t result = qword_19D630;
  if (!qword_19D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D630);
  }
  return result;
}

uint64_t sub_4E2DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144737469736976 && a2 == 0xEA00000000006174;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696C537369 && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_4E438(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19D670);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_2F114(a1, v7);
  sub_4E6B4();
  sub_146D00();
  if (v1)
  {
    sub_C7FC((uint64_t)a1);
  }
  else
  {
    sub_A314(&qword_19D680);
    v9[15] = 0;
    sub_4E708(&qword_19D688, &qword_19C880);
    sub_146A20();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_1469F0();
    v9[13] = 2;
    sub_146A10();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_C7FC((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_4E6B4()
{
  unint64_t result = qword_19D678;
  if (!qword_19D678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D678);
  }
  return result;
}

uint64_t sub_4E708(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19D680);
    sub_4E788(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4E788(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_4E7CC@<X0>(unsigned char *a1@<X8>)
{
  return sub_7B3A8(*(void *)(v1 + 16), a1);
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4E944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysON;
}

unint64_t sub_4E980()
{
  unint64_t result = qword_19D6B8;
  if (!qword_19D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D6B8);
  }
  return result;
}

unint64_t sub_4E9D8()
{
  unint64_t result = qword_19D6C0;
  if (!qword_19D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D6C0);
  }
  return result;
}

unint64_t sub_4EA30()
{
  unint64_t result = qword_19D6C8;
  if (!qword_19D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D6C8);
  }
  return result;
}

uint64_t sub_4EA84()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitStackConfiguration()
{
  return self;
}

uint64_t type metadata accessor for SettingsManager()
{
  return self;
}

id sub_4EB0C()
{
  id result = sub_4EB2C();
  qword_1A3B70 = (uint64_t)result;
  return result;
}

id sub_4EB2C()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_145B80();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    id v2 = [self standardUserDefaults];
  }
  sub_A314(&qword_19D828);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  *(void *)(inited + 32) = sub_145BC0();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 21;
  *(void *)(inited + 80) = sub_145BC0();
  *(void *)(inited + 88) = v5;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 1;
  sub_136EB8(inited);
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  [v2 registerDefaults:isa];

  return v2;
}

id sub_4EFB0(void *a1)
{
  sub_145BC0();
  id v2 = a1;
  NSString v3 = sub_145B80();
  swift_bridgeObjectRelease();
  id v4 = [v2 integerForKey:v3];

  return v4;
}

void sub_4F038(void *a1, uint64_t a2, uint64_t a3)
{
  sub_145BC0();
  id v5 = a1;
  NSString v6 = sub_145B80();
  swift_bridgeObjectRelease();
  [v5 setInteger:a3 forKey:v6];
}

id sub_4F0D8(void *a1)
{
  sub_145BC0();
  id v2 = a1;
  NSString v3 = sub_145B80();
  swift_bridgeObjectRelease();
  id v4 = [v2 BOOLForKey:v3];

  return v4;
}

void sub_4F1C0(char a1)
{
  sub_145BC0();
  NSString v3 = sub_145B80();
  swift_bridgeObjectRelease();
  [v1 setBool:a1 & 1 forKey:v3];

  if ((a1 & 1) == 0)
  {
    sub_145BC0();
    NSString v4 = sub_145B80();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v4];

    sub_145BC0();
    NSString v5 = sub_145B80();
    swift_bridgeObjectRelease();
    [v1 removeObjectForKey:v5];
  }
}

void sub_4F42C(uint64_t a1, unint64_t a2)
{
  NSString v3 = v2;
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_144F90().super.isa;
  }
  sub_145BC0();
  NSString v7 = sub_145B80();
  swift_bridgeObjectRelease();
  [v3 setObject:isa forKey:v7];
  swift_unknownObjectRelease();

  sub_145BC0();
  NSString v8 = sub_145B80();
  swift_bridgeObjectRelease();
  [v3 removeObjectForKey:v8];
  sub_120B4(a1, a2);
}

uint64_t sub_4F530(uint64_t result)
{
  if (result)
  {
    switch(result)
    {
      case 1:
        return 1;
      case 5:
        return 2;
      case 15:
        return 3;
      default:
        return 5;
    }
  }
  return result;
}

uint64_t sub_4F590()
{
  return 1;
}

uint64_t sub_4F620()
{
  if (qword_19ADA8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1A3B70;
  NSString v1 = sub_145B80();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_1466A0();
    swift_unknownObjectRelease();
    sub_C5BC((uint64_t)&v13);
    NSString v3 = sub_145B80();
    unsigned __int8 v4 = [v0 BOOLForKey:v3];

    if (v4)
    {
      NSString v5 = sub_145B80();
      id v6 = [v0 objectForKey:v5];

      if (v6)
      {
        sub_1466A0();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v11 = 0u;
        long long v12 = 0u;
      }
      sub_4FA08((uint64_t)&v11, (uint64_t)&v13);
      if (*((void *)&v14 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t result = sub_4F590();
          if (result != 4) {
            return result;
          }
        }
      }
      else
      {
        sub_C5BC((uint64_t)&v13);
      }
      return 1;
    }
    return 4;
  }
  long long v13 = 0u;
  long long v14 = 0u;
  sub_C5BC((uint64_t)&v13);
  sub_145BC0();
  NSString v7 = sub_145B80();
  swift_bridgeObjectRelease();
  id v8 = [v0 objectForKey:v7];

  if (v8)
  {
    sub_1466A0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_4FA08((uint64_t)&v11, (uint64_t)&v13);
  if (!*((void *)&v14 + 1))
  {
    sub_C5BC((uint64_t)&v13);
    return 4;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 4;
  }
  uint64_t result = sub_4F530(v10);
  if (result == 5) {
    return 4;
  }
  return result;
}

void sub_4F8D0(char a1)
{
  if (qword_19ADA8 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1A3B70;
  NSString v3 = sub_145B80();
  [v2 removeObjectForKey:v3];

  NSString v4 = sub_145B80();
  [v2 removeObjectForKey:v4];

  uint64_t v5 = qword_15AAE0[a1];
  sub_145BC0();
  NSString v6 = sub_145B80();
  swift_bridgeObjectRelease();
  [v2 setInteger:v5 forKey:v6];
}

uint64_t sub_4FA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_4FA70(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v4 = sub_144E20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_144F60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = sub_855C(*(unsigned char *)(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type));
  unint64_t v36 = v30;
  uint64_t v37 = v12;
  uint64_t v35 = v12;
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = 0x636965682ELL;
  v38._object = (void *)0xE500000000000000;
  sub_145C90(v38);
  unint64_t v13 = v36;
  uint64_t v14 = v37;
  uint64_t v31 = a2;
  sub_E3C18((uint64_t)v11);
  uint64_t v32 = v14;
  unint64_t v33 = v13;
  unint64_t v36 = v13;
  uint64_t v37 = v14;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_12060();
  sub_144F50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v15 = [self defaultManager];
  sub_144F10();
  NSString v16 = sub_145B80();
  swift_bridgeObjectRelease();
  LOBYTE(v9) = [v15 fileExistsAtPath:v16];

  if ((v9 & 1) == 0)
  {
    double v17 = *(double *)(v31 + *(int *)(type metadata accessor for ExportOptions() + 48));
    id v18 = [self configurationWithPointSize:v17];
    NSString v19 = sub_145B80();
    swift_bridgeObjectRelease();
    id v20 = [self _systemImageNamed:v19 withConfiguration:v18];

    if (v20)
    {
      id v21 = [self quaternaryLabelColor];
      uint64_t v22 = (UIImage *)[v20 imageWithTintColor:v21];

      if (v22)
      {
        uint64_t v23 = UIImageHEICRepresentation(v22);
        if (v23)
        {
          uint64_t v24 = v23;
          uint64_t v25 = sub_144FA0();
          unint64_t v27 = v26;

          sub_144FB0();
          sub_C52C(v25, v27);
          return v33;
        }
      }
    }

    return v33;
  }
  swift_bridgeObjectRelease();
  return v33;
}

id sub_4FE58()
{
  type metadata accessor for JournalFitnessUIFormattingManager();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  *(void *)(v0 + 112) = result;
  qword_1A3B78 = v0;
  return result;
}

uint64_t sub_4FEB0()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for JournalFitnessUIFormattingManager()
{
  return self;
}

uint64_t sub_4FF0C()
{
  unint64_t v1 = (unint64_t)sub_50AA8();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    NSString v3 = (void *)sub_146930();
    if (v3) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  NSString v3 = *(void **)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  if (!v3) {
    goto LABEL_22;
  }
LABEL_3:
  if ((uint64_t)v3 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v4 = 0;
  for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v8 = (id)sub_146810();
    }
    else {
      id v8 = *(id *)(v2 + 8 * (void)i + 32);
    }
    NSString v7 = v8;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
      sub_145E20();
    }
    sub_145E50();
    sub_145E00();
    _s15ReflectionAssetCMa();
    if (!swift_dynamicCastClass())
    {
      if ((*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v7) - 8])())
      {
        uint64_t v6 = v7;
        NSString v7 = v4;
        uint64_t v4 = v6;
      }
      else if ((*((unsigned char *)v7 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_isHidden) & 1) == 0)
      {
        NSString v7 = v7;
        sub_145DC0();
        if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
          sub_145E20();
        }
        sub_145E50();
        sub_145E00();
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  if (v4)
  {
    swift_bridgeObjectRetain();
    NSString v3 = v4;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1)
    {
LABEL_20:
      sub_145E50();
      sub_145E00();

      goto LABEL_24;
    }
LABEL_28:
    sub_145E20();
    goto LABEL_20;
  }
LABEL_23:
  swift_bridgeObjectRetain();
LABEL_24:
  *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assets) = v2;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsWithSlimAsset) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_assetsAll) = _swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

double *sub_50208()
{
  id v1 = [v0 assets];
  if (!v1
    || (unint64_t v2 = v1,
        id v3 = [v1 allObjects],
        v2,
        uint64_t v4 = sub_145DE0(),
        v3,
        uint64_t v5 = sub_50670(v4),
        id result = (double *)swift_bridgeObjectRelease(),
        !v5))
  {
    if (qword_19ADB8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_145760();
    sub_C584(v11, (uint64_t)qword_19D8E8);
    uint64_t v12 = sub_145740();
    os_log_type_t v13 = sub_1461F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v18 = (double *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      if (qword_19ADC0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_145290();
      sub_C584(v15, (uint64_t)qword_19D900);
      sub_4CAD0();
      uint64_t v16 = sub_146B50();
      sub_3D2B4(v16, v17, (uint64_t *)&v18);
      sub_146610();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_94138, v12, v13, "%s WARNING: JournalEntryMO assets is nil", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  id v18 = _swiftEmptyArrayStorage;
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + ((unint64_t)v5 & 0xFFFFFFFFFFFFFF8));
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_146930();
  id result = (double *)swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (((unint64_t)v5 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_146810();
      }
      else {
        id v9 = *(id *)&v5[i + 4];
      }
      uint64_t v10 = v9;
      if (([v9 isRemovedFromCloud] & 1) != 0
        || ([v10 isUndoablyDeleted] & 1) != 0)
      {
      }
      else
      {
        sub_146890();
        sub_1468C0();
        sub_1468D0();
        sub_1468A0();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_50558()
{
  id v1 = sub_50208();
  id v2 = [v0 assetOrdering];
  if (!v2 || (id v3 = v2, v4 = sub_144FA0(), v6 = v5, v3, v7 = (void *)sub_33C48(), sub_C52C(v4, v6), !v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
  }
  if (((unint64_t)v1 & 0x8000000000000000) != 0 || ((unint64_t)v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t)sub_1425DC(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (unint64_t)v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = v8;
  sub_52854(&v11, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v11;
}

double *sub_50670(uint64_t a1)
{
  unint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1468B0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_C738(i, (uint64_t)v5);
    type metadata accessor for JournalEntryAssetMO();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_146890();
    sub_1468C0();
    sub_1468D0();
    sub_1468A0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

double *sub_5076C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  sub_2CBFC(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v6) {
      return v4;
    }
  }
  else if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_146810();
    sub_146010();
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = *(id *)(a1 + 32);
    sub_146010();
  }
  swift_release();
  return 0;
}

uint64_t sub_50994()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19D8E8);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19D8E8);
  if (qword_19AF40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D10);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_50A5C()
{
  uint64_t v0 = sub_145290();
  sub_C61C(v0, qword_19D900);
  sub_C584(v0, (uint64_t)qword_19D900);
  return sub_145280();
}

double *sub_50AA8()
{
  unint64_t v0 = sub_50558();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8));
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = sub_146930();
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  id result = (double *)sub_1468B0();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_146810();
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      sub_79854();

      sub_146890();
      sub_1468C0();
      sub_1468D0();
      sub_1468A0();
    }
    while (v2 != v4);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

BOOL sub_50BDC(void **a1, id *a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19B730);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = sub_145290();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v40 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  NSString v19 = (char *)&v37 - v18;
  id v20 = *a1;
  id v37 = *a2;
  id v21 = [v20 id];
  if (!v21)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v24(v10, 1, 1, v11);
LABEL_6:
    sub_145280();
    sub_52900((uint64_t)v10);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  uint64_t v22 = v21;
  sub_145270();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v10, v17, v11);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    goto LABEL_6;
  }
  v23(v19, v10, v11);
  if (!*(void *)(a3 + 16)) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v25 = sub_137BDC((uint64_t)v19);
  if (v26)
  {
    uint64_t v38 = *(void *)(*(void *)(a3 + 56) + 8 * v25);
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v38 = 0;
LABEL_10:
  unint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v19, v11);
  id v28 = [v37 id];
  if (v28)
  {
    uint64_t v29 = v28;
    sub_145270();

    unint64_t v30 = *(void (**)(void))(v12 + 32);
    uint64_t v31 = (uint64_t)v39;
    v30();
    v24((char *)v31, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v31, 1, v11) != 1)
    {
      uint64_t v32 = (uint64_t)v40;
      ((void (*)(char *, uint64_t, uint64_t))v30)(v40, v31, v11);
      if (!*(void *)(a3 + 16)) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v31 = (uint64_t)v39;
    v24(v39, 1, 1, v11);
  }
  uint64_t v32 = (uint64_t)v40;
  sub_145280();
  sub_52900(v31);
  if (!*(void *)(a3 + 16))
  {
LABEL_18:
    uint64_t v35 = 0;
    goto LABEL_19;
  }
LABEL_16:
  unint64_t v33 = sub_137BDC(v32);
  if ((v34 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(*(void *)(a3 + 56) + 8 * v33);
LABEL_19:
  v27((char *)v32, v11);
  return v38 < v35;
}

uint64_t sub_50FD0(void **__src, void **a2, unint64_t a3, id *__dst, uint64_t a5)
{
  id v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v46 = __src;
  unint64_t v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst) {
        memmove(__dst, a2, 8 * v14);
      }
      unint64_t v25 = &v5[v14];
      uint64_t v44 = v25;
      uint64_t v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        char v26 = (void **)(a3 - 8);
        unint64_t v27 = v7;
        uint64_t v38 = v5;
        uint64_t v39 = v8;
        while (1)
        {
          unint64_t v28 = (unint64_t)v25;
          uint64_t v29 = v25 - 1;
          uint64_t v43 = *(v25 - 1);
          unint64_t v30 = *--v27;
          id v42 = v30;
          uint64_t v31 = v43;
          id v32 = v30;
          BOOL v33 = sub_50BDC(&v43, &v42, a5);
          if (v41) {
            break;
          }
          BOOL v34 = v33;
          uint64_t v41 = 0;
          uint64_t v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7) {
              *char v26 = *v27;
            }
            uint64_t v46 = v27;
            unint64_t v36 = v38;
            unint64_t v25 = (id *)v28;
            if (v27 <= v39) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (void **)v28) {
              *char v26 = *v29;
            }
            unint64_t v27 = v7;
            unint64_t v25 = v29;
            unint64_t v36 = v38;
            if (v7 <= v39) {
              goto LABEL_48;
            }
          }
          --v26;
          uint64_t v7 = v27;
          if (v25 <= v36) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v15 = &v5[v11];
    uint64_t v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        uint64_t v16 = v8;
        uint64_t v43 = *v7;
        unint64_t v17 = v5;
        id v42 = *v5;
        id v18 = v42;
        NSString v19 = v43;
        id v20 = v18;
        BOOL v21 = sub_50BDC(&v43, &v42, a5);
        if (v41) {
          break;
        }
        BOOL v22 = v21;

        if (v22)
        {
          uint64_t v23 = v7 + 1;
          uint64_t v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7) {
            *uint64_t v16 = *v7;
          }
          id v5 = v17;
        }
        else
        {
          uint64_t v24 = v16;
          if (v16 != v17) {
            *uint64_t v16 = *v17;
          }
          id v5 = v17 + 1;
          unint64_t v45 = v17 + 1;
          uint64_t v23 = v7;
        }
        uint64_t v41 = 0;
        uint64_t v8 = v24 + 1;
        uint64_t v46 = v8;
        if (v5 < v15)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_10AA48((void **)&v46, (const void **)&v45, &v44);
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

void sub_51334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v50 = a1;
  uint64_t v9 = sub_A314(&qword_19B730);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = sub_145290();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v57 = (char *)&v48 - v19;
  __chkstk_darwin(v18);
  uint64_t v63 = (char *)&v48 - v21;
  uint64_t v49 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    unint64_t v61 = (void (**)(uint64_t, uint64_t))(v20 + 8);
    unint64_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v54 = v22;
    uint64_t v24 = v22 + 8 * a3 - 8;
    uint64_t v52 = v14;
    id v58 = (void (**)(char *, char *, uint64_t))(v20 + 32);
LABEL_5:
    unint64_t v25 = *(void **)(v54 + 8 * a3);
    uint64_t v26 = v50;
    uint64_t v51 = v24;
    uint64_t v55 = a3;
    while (1)
    {
      unint64_t v27 = *(void **)v24;
      id v28 = v25;
      id v64 = v27;
      id v60 = v28;
      id v29 = [v28 id];
      if (!v29) {
        break;
      }
      unint64_t v30 = v29;
      uint64_t v31 = v57;
      sub_145270();

      id v32 = *v23;
      (*v23)(v14, v31, v15);
      BOOL v33 = *v62;
      (*v62)(v14, 0, 1, v15);
      if ((*v56)(v14, 1, v15) == 1) {
        goto LABEL_11;
      }
      v32(v63, v14, v15);
      if (!*(void *)(a5 + 16)) {
        goto LABEL_14;
      }
LABEL_12:
      unint64_t v34 = sub_137BDC((uint64_t)v63);
      if (v35)
      {
        uint64_t v59 = *(void *)(*(void *)(a5 + 56) + 8 * v34);
        goto LABEL_15;
      }
LABEL_14:
      uint64_t v59 = 0;
LABEL_15:
      unint64_t v36 = *v61;
      (*v61)((uint64_t)v63, v15);
      id v37 = [v64 id];
      if (!v37)
      {
        v33(v12, 1, 1, v15);
LABEL_20:
        uint64_t v41 = (uint64_t)v53;
        sub_145280();
        sub_52900((uint64_t)v12);
        if (!*(void *)(a5 + 16)) {
          goto LABEL_23;
        }
        goto LABEL_21;
      }
      uint64_t v38 = v37;
      uint64_t v39 = v57;
      sub_145270();

      id v40 = *v58;
      (*v58)(v12, v39, v15);
      v33(v12, 0, 1, v15);
      if ((*v56)(v12, 1, v15) == 1) {
        goto LABEL_20;
      }
      uint64_t v41 = (uint64_t)v53;
      v40(v53, v12, v15);
      if (!*(void *)(a5 + 16)) {
        goto LABEL_23;
      }
LABEL_21:
      unint64_t v42 = sub_137BDC(v41);
      if (v43)
      {
        uint64_t v44 = *(void *)(*(void *)(a5 + 56) + 8 * v42);
        goto LABEL_24;
      }
LABEL_23:
      uint64_t v44 = 0;
LABEL_24:
      v36(v41, v15);

      uint64_t v23 = v58;
      BOOL v45 = v59 < v44;
      uint64_t v46 = v55;
      uint64_t v14 = v52;
      if (!v45) {
        goto LABEL_4;
      }
      if (!v54)
      {
        __break(1u);
        return;
      }
      uint64_t v47 = *(void **)v24;
      unint64_t v25 = *(void **)(v24 + 8);
      *(void *)uint64_t v24 = v25;
      *(void *)(v24 + 8) = v47;
      v24 -= 8;
      if (v46 == ++v26)
      {
LABEL_4:
        a3 = v46 + 1;
        uint64_t v24 = v51 + 8;
        if (a3 == v49) {
          return;
        }
        goto LABEL_5;
      }
    }
    BOOL v33 = *v62;
    (*v62)(v14, 1, 1, v15);
LABEL_11:
    sub_145280();
    sub_52900((uint64_t)v14);
    if (!*(void *)(a5 + 16)) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
}

uint64_t sub_517F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_A314(&qword_19B730);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v189 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v189 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v189 - v16;
  v219 = (void **)sub_145290();
  uint64_t v18 = (uint64_t)*(v219 - 1);
  uint64_t v19 = __chkstk_darwin(v219);
  uint64_t v217 = (uint64_t)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v206 = (char *)&v189 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v202 = (uint64_t)&v189 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v211 = (char *)&v189 - v26;
  __chkstk_darwin(v25);
  v197 = (char *)&v189 - v27;
  v194 = a1;
  Swift::Int v28 = a1[1];
  uint64_t v216 = a2;
  swift_bridgeObjectRetain_n();
  Swift::Int v29 = sub_146B30(v28);
  if (v29 >= v28)
  {
    if (v28 < 0) {
      goto LABEL_180;
    }
    if (v28)
    {
      uint64_t v34 = v216;
      swift_bridgeObjectRetain();
      sub_51334(0, v28, 1, v194, v34);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v28 >= 0) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = v28 + 1;
  }
  if (v28 < -1) {
    goto LABEL_188;
  }
  v195 = v17;
  v196 = v15;
  Swift::Int v200 = v28;
  Swift::Int v193 = v29;
  if (v28 < 2)
  {
    unint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t v222 = (uint64_t)_swiftEmptyArrayStorage;
    v201 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    BOOL v33 = v219;
    if (v28 != 1)
    {
      unint64_t v120 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_144:
      if (v120 >= 2)
      {
        v177 = (char *)*v194;
        v218 = (char *)*v194;
        do
        {
          unint64_t v178 = v120 - 2;
          if (v120 < 2) {
            goto LABEL_174;
          }
          if (!v177) {
            goto LABEL_187;
          }
          uint64_t v179 = v3;
          v180 = v36;
          double v181 = v36[2 * v178 + 4];
          double v182 = v36[2 * v120 + 3];
          double v183 = v36[2 * v120 + 2];
          v219 = (void **)&v177[8 * *(void *)&v181];
          v184 = (void **)&v177[8 * *(void *)&v183];
          unint64_t v185 = (unint64_t)&v177[8 * *(void *)&v182];
          uint64_t v186 = v216;
          swift_bridgeObjectRetain();
          sub_50FD0(v219, v184, v185, v201, v186);
          if (v179) {
            break;
          }
          if (*(uint64_t *)&v182 < *(uint64_t *)&v181) {
            goto LABEL_176;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v180 = sub_10AC48((uint64_t)v180);
          }
          if (v178 >= *((void *)v180 + 2)) {
            goto LABEL_177;
          }
          v187 = &v180[2 * v178 + 4];
          double *v187 = v181;
          v187[1] = v182;
          unint64_t v188 = *((void *)v180 + 2);
          if (v120 > v188) {
            goto LABEL_178;
          }
          memmove(&v180[2 * v120 + 2], &v180[2 * v120 + 4], 16 * (v188 - v120));
          unint64_t v36 = v180;
          *((void *)v180 + 2) = v188 - 1;
          unint64_t v120 = v188 - 1;
          uint64_t v3 = 0;
          v177 = v218;
        }
        while (v188 > 2);
      }
LABEL_155:
      swift_bridgeObjectRelease();
LABEL_158:
      *(void *)((char *)&dword_10 + (v222 & 0xFFFFFFFFFFFFFF8)) = 0;
      sub_145E00();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v31 = v30 >> 1;
    type metadata accessor for JournalEntryAssetMO();
    uint64_t v32 = sub_145E30();
    *(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8)) = v31;
    v201 = (id *)((v32 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v222 = v32;
    BOOL v33 = v219;
  }
  unint64_t v37 = 0;
  uint64_t v38 = *v194;
  uint64_t v39 = (void (**)(void))(v18 + 32);
  v210 = (unsigned int (**)(uint64_t, uint64_t, void **))(v18 + 48);
  v214 = (void (**)(uint64_t, void **))(v18 + 8);
  v215 = (void (**)(char *, uint64_t, uint64_t, void **))(v18 + 56);
  uint64_t v191 = v38 + 16;
  uint64_t v205 = v38;
  uint64_t v192 = v38 - 8;
  unint64_t v36 = _swiftEmptyArrayStorage;
  v208 = v12;
  int64_t v40 = v200;
  v212 = (void (**)(void))(v18 + 32);
  v207 = v9;
  while (1)
  {
    int64_t v41 = v37;
    int64_t v42 = v37 + 1;
    v199 = v36;
    uint64_t v203 = v37;
    if ((uint64_t)(v37 + 1) >= v40)
    {
      Swift::Int v77 = v193;
      goto LABEL_54;
    }
    char v43 = v36;
    uint64_t v44 = *(void **)(v205 + 8 * v42);
    unint64_t v45 = v37;
    id v220 = *(id *)(v205 + 8 * v37);
    id v46 = v220;
    v221 = v44;
    id v47 = v44;
    id v48 = v46;
    LODWORD(v198) = sub_50BDC(&v221, &v220, v216);
    if (v3)
    {
      swift_bridgeObjectRelease();

      goto LABEL_158;
    }

    int64_t v42 = v45 + 2;
    int64_t v41 = v45;
    if ((uint64_t)(v45 + 2) >= v200)
    {
      uint64_t v39 = v212;
      unint64_t v36 = v43;
      goto LABEL_45;
    }
    uint64_t v49 = (id *)(v191 + 8 * v45);
    uint64_t v39 = v212;
    while (1)
    {
      int64_t v209 = v42;
      uint64_t v50 = *(v49 - 1);
      id v51 = *v49;
      v218 = v50;
      id v52 = [v51 id];
      if (!v52)
      {
        uint64_t v57 = *v215;
        uint64_t v56 = (uint64_t)v195;
        (*v215)(v195, 1, 1, v33);
LABEL_23:
        uint64_t v58 = (uint64_t)v197;
        sub_145280();
        sub_52900(v56);
        goto LABEL_24;
      }
      uint64_t v53 = v52;
      uint64_t v54 = v211;
      sub_145270();

      uint64_t v55 = *v39;
      uint64_t v56 = (uint64_t)v195;
      ((void (*)(char *, char *, void **))*v39)(v195, v54, v33);
      uint64_t v57 = *v215;
      (*v215)((char *)v56, 0, 1, v33);
      if ((*v210)(v56, 1, v33) == 1) {
        goto LABEL_23;
      }
      uint64_t v58 = (uint64_t)v197;
      v55();
LABEL_24:
      uint64_t v59 = v216;
      uint64_t v60 = *(void *)(v216 + 16);
      v213 = (void **)v51;
      if (v60 && (unint64_t v61 = sub_137BDC(v58), (v62 & 1) != 0)) {
        v204 = *(void ***)(*(void *)(v59 + 56) + 8 * v61);
      }
      else {
        v204 = 0;
      }
      uint64_t v63 = v3;
      id v64 = *v214;
      uint64_t v65 = v58;
      BOOL v33 = v219;
      (*v214)(v65, v219);
      id v66 = [v218 id];
      if (v66)
      {
        uint64_t v67 = v66;
        uint64_t v68 = v211;
        sub_145270();

        uint64_t v69 = *v212;
        uint64_t v70 = (uint64_t)v196;
        uint64_t v71 = v68;
        uint64_t v39 = v212;
        ((void (*)(char *, char *, void **))*v212)(v196, v71, v33);
        v57((char *)v70, 0, 1, v33);
        if ((*v210)(v70, 1, v33) != 1)
        {
          ((void (*)(uint64_t, uint64_t, void **))v69)(v202, v70, v33);
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)v196;
        v57(v196, 1, 1, v33);
      }
      sub_145280();
      sub_52900(v70);
LABEL_33:
      uint64_t v9 = v207;
      uint64_t v72 = v216;
      uint64_t v3 = v63;
      if (*(void *)(v216 + 16))
      {
        unint64_t v73 = sub_137BDC(v202);
        uint64_t v74 = v213;
        uint64_t v76 = (v75 & 1) != 0 ? *(void *)(*(void *)(v72 + 56) + 8 * v73) : 0;
        uint64_t v12 = v208;
      }
      else
      {
        uint64_t v76 = 0;
        uint64_t v74 = v213;
      }
      v64(v202, v33);

      if (((v198 ^ ((uint64_t)v204 >= v76)) & 1) == 0) {
        break;
      }
      int64_t v42 = v209 + 1;
      ++v49;
      unint64_t v36 = v199;
      if (v200 == v209 + 1)
      {
        int64_t v42 = v200;
        goto LABEL_44;
      }
    }
    unint64_t v36 = v199;
    int64_t v42 = v209;
LABEL_44:
    int64_t v41 = v203;
LABEL_45:
    Swift::Int v77 = v193;
    if (v198) {
      break;
    }
LABEL_54:
    if (v42 >= v200) {
      goto LABEL_89;
    }
    if (__OFSUB__(v42, v41)) {
      goto LABEL_179;
    }
    if (v42 - v41 >= v77) {
      goto LABEL_89;
    }
    if (__OFADD__(v41, v77)) {
      goto LABEL_181;
    }
    int64_t v83 = v200;
    if (v41 + v77 < v200) {
      int64_t v83 = v41 + v77;
    }
    if (v83 < v41)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    if (v42 == v83) {
      goto LABEL_89;
    }
    uint64_t v190 = v3;
    uint64_t v84 = (void **)(v192 + 8 * v42);
    uint64_t v85 = v205;
    int64_t v198 = v83;
    while (2)
    {
      uint64_t v87 = *(void **)(v85 + 8 * v42);
      int64_t v88 = v41;
      v204 = v84;
      int64_t v209 = v42;
      while (1)
      {
        unint64_t v89 = *v84;
        uint64_t v90 = v87;
        v218 = v89;
        v213 = v90;
        id v91 = [v90 id];
        if (!v91)
        {
          char v95 = *v215;
          (*v215)(v12, 1, 1, v33);
          uint64_t v97 = (uint64_t)v206;
LABEL_70:
          sub_145280();
          sub_52900((uint64_t)v12);
          goto LABEL_71;
        }
        uint64_t v92 = v91;
        uint64_t v93 = v211;
        sub_145270();

        unint64_t v94 = *v39;
        ((void (*)(char *, char *, void **))*v39)(v12, v93, v33);
        char v95 = *v215;
        (*v215)(v12, 0, 1, v33);
        unsigned int v96 = (*v210)((uint64_t)v12, 1, v33);
        uint64_t v97 = (uint64_t)v206;
        if (v96 == 1) {
          goto LABEL_70;
        }
        ((void (*)(char *, char *, void **))v94)(v206, v12, v33);
LABEL_71:
        uint64_t v98 = v216;
        if (*(void *)(v216 + 16) && (unint64_t v99 = sub_137BDC(v97), (v100 & 1) != 0)) {
          uint64_t v101 = *(void *)(*(void *)(v98 + 56) + 8 * v99);
        }
        else {
          uint64_t v101 = 0;
        }
        Swift::String v102 = *v214;
        uint64_t v103 = v97;
        unint64_t v104 = v219;
        (*v214)(v103, v219);
        id v105 = [v218 id];
        if (!v105)
        {
          uint64_t v109 = (uint64_t)v207;
          v95(v207, 1, 1, v104);
LABEL_79:
          sub_145280();
          sub_52900(v109);
          goto LABEL_80;
        }
        unint64_t v106 = v105;
        unint64_t v107 = v211;
        sub_145270();

        unint64_t v108 = *v39;
        uint64_t v109 = (uint64_t)v207;
        uint64_t v110 = v107;
        uint64_t v85 = v205;
        ((void (*)(char *, char *, void **))v108)(v207, v110, v104);
        v95((char *)v109, 0, 1, v104);
        if ((*v210)(v109, 1, v104) == 1) {
          goto LABEL_79;
        }
        ((void (*)(uint64_t, uint64_t, void **))v108)(v217, v109, v219);
LABEL_80:
        uint64_t v9 = (char *)v109;
        uint64_t v111 = v216;
        uint64_t v39 = v212;
        if (*(void *)(v216 + 16) && (unint64_t v112 = sub_137BDC(v217), (v113 & 1) != 0)) {
          uint64_t v114 = *(void *)(*(void *)(v111 + 56) + 8 * v112);
        }
        else {
          uint64_t v114 = 0;
        }
        v102(v217, v219);

        if (v101 >= v114) {
          break;
        }
        uint64_t v12 = v208;
        int64_t v86 = v209;
        if (!v85) {
          goto LABEL_184;
        }
        uint64_t v115 = *v84;
        uint64_t v87 = v84[1];
        *uint64_t v84 = v87;
        v84[1] = v115;
        --v84;
        ++v88;
        BOOL v33 = v219;
        if (v86 == v88) {
          goto LABEL_64;
        }
      }
      uint64_t v12 = v208;
      int64_t v86 = v209;
      BOOL v33 = v219;
LABEL_64:
      int64_t v42 = v86 + 1;
      int64_t v41 = v203;
      uint64_t v84 = v204 + 1;
      if (v42 != v198) {
        continue;
      }
      break;
    }
    int64_t v42 = v198;
    uint64_t v3 = v190;
    unint64_t v36 = v199;
LABEL_89:
    if (v42 < v41) {
      goto LABEL_175;
    }
    uint64_t v116 = (uint64_t)v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v209 = v42;
    if (isUniquelyReferenced_nonNull_native) {
      unint64_t v36 = (double *)v116;
    }
    else {
      unint64_t v36 = sub_10A934(0, *(void *)(v116 + 16) + 1, 1, v116);
    }
    unint64_t v119 = *((void *)v36 + 2);
    unint64_t v118 = *((void *)v36 + 3);
    unint64_t v120 = v119 + 1;
    if (v119 >= v118 >> 1) {
      unint64_t v36 = sub_10A934((double *)(v118 > 1), v119 + 1, 1, (uint64_t)v36);
    }
    *((void *)v36 + 2) = v120;
    uint64_t v121 = (char *)(v36 + 4);
    uint64_t v122 = &v36[2 * v119 + 4];
    int64_t v123 = v209;
    *(void *)uint64_t v122 = v203;
    *((void *)v122 + 1) = v123;
    if (v119)
    {
      v218 = (char *)(v36 + 4);
      while (1)
      {
        unint64_t v124 = v120 - 1;
        if (v120 >= 4)
        {
          unsigned int v129 = &v121[16 * v120];
          uint64_t v130 = *((void *)v129 - 8);
          uint64_t v131 = *((void *)v129 - 7);
          BOOL v135 = __OFSUB__(v131, v130);
          uint64_t v132 = v131 - v130;
          if (v135) {
            goto LABEL_163;
          }
          uint64_t v134 = *((void *)v129 - 6);
          uint64_t v133 = *((void *)v129 - 5);
          BOOL v135 = __OFSUB__(v133, v134);
          uint64_t v127 = v133 - v134;
          char v128 = v135;
          if (v135) {
            goto LABEL_164;
          }
          unint64_t v136 = v120 - 2;
          unint64_t v137 = &v121[16 * v120 - 32];
          uint64_t v139 = *(void *)v137;
          uint64_t v138 = *((void *)v137 + 1);
          BOOL v135 = __OFSUB__(v138, v139);
          uint64_t v140 = v138 - v139;
          if (v135) {
            goto LABEL_166;
          }
          BOOL v135 = __OFADD__(v127, v140);
          uint64_t v141 = v127 + v140;
          if (v135) {
            goto LABEL_169;
          }
          if (v141 >= v132)
          {
            uint64_t v159 = &v121[16 * v124];
            uint64_t v161 = *(void *)v159;
            uint64_t v160 = *((void *)v159 + 1);
            BOOL v135 = __OFSUB__(v160, v161);
            uint64_t v162 = v160 - v161;
            if (v135) {
              goto LABEL_173;
            }
            BOOL v152 = v127 < v162;
            goto LABEL_127;
          }
        }
        else
        {
          if (v120 != 3)
          {
            uint64_t v153 = *((void *)v36 + 4);
            uint64_t v154 = *((void *)v36 + 5);
            BOOL v135 = __OFSUB__(v154, v153);
            uint64_t v146 = v154 - v153;
            char v147 = v135;
            goto LABEL_121;
          }
          uint64_t v126 = *((void *)v36 + 4);
          uint64_t v125 = *((void *)v36 + 5);
          BOOL v135 = __OFSUB__(v125, v126);
          uint64_t v127 = v125 - v126;
          char v128 = v135;
        }
        if (v128) {
          goto LABEL_165;
        }
        unint64_t v136 = v120 - 2;
        uint64_t v142 = &v121[16 * v120 - 32];
        uint64_t v144 = *(void *)v142;
        uint64_t v143 = *((void *)v142 + 1);
        BOOL v145 = __OFSUB__(v143, v144);
        uint64_t v146 = v143 - v144;
        char v147 = v145;
        if (v145) {
          goto LABEL_168;
        }
        v148 = &v121[16 * v124];
        uint64_t v150 = *(void *)v148;
        uint64_t v149 = *((void *)v148 + 1);
        BOOL v135 = __OFSUB__(v149, v150);
        uint64_t v151 = v149 - v150;
        if (v135) {
          goto LABEL_171;
        }
        if (__OFADD__(v146, v151)) {
          goto LABEL_172;
        }
        if (v146 + v151 >= v127)
        {
          BOOL v152 = v127 < v151;
LABEL_127:
          if (v152) {
            unint64_t v124 = v136;
          }
          goto LABEL_129;
        }
LABEL_121:
        if (v147) {
          goto LABEL_167;
        }
        uint64_t v155 = &v121[16 * v124];
        uint64_t v157 = *(void *)v155;
        uint64_t v156 = *((void *)v155 + 1);
        BOOL v135 = __OFSUB__(v156, v157);
        uint64_t v158 = v156 - v157;
        if (v135) {
          goto LABEL_170;
        }
        if (v158 < v146) {
          goto LABEL_138;
        }
LABEL_129:
        unint64_t v163 = v124 - 1;
        if (v124 - 1 >= v120)
        {
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!v205) {
          goto LABEL_185;
        }
        uint64_t v164 = v36;
        uint64_t v165 = v9;
        uint64_t v166 = v3;
        uint64_t v167 = &v121[16 * v163];
        uint64_t v168 = *(void *)v167;
        unint64_t v169 = v124;
        uint64_t v170 = &v121[16 * v124];
        uint64_t v171 = *(void *)v170;
        uint64_t v172 = *((void *)v170 + 1);
        v213 = (void **)(v205 + 8 * *(void *)v167);
        uint64_t v203 = v205 + 8 * v172;
        v204 = (void **)(v205 + 8 * v171);
        uint64_t v173 = v216;
        swift_bridgeObjectRetain();
        sub_50FD0(v213, v204, v203, v201, v173);
        if (v166) {
          goto LABEL_155;
        }
        if (v172 < v168) {
          goto LABEL_160;
        }
        uint64_t v174 = v164;
        if (v169 > *((void *)v164 + 2)) {
          goto LABEL_161;
        }
        *(void *)uint64_t v167 = v168;
        *(void *)&v218[16 * v163 + 8] = v172;
        unint64_t v175 = *((void *)v164 + 2);
        if (v169 >= v175) {
          goto LABEL_162;
        }
        unint64_t v120 = v175 - 1;
        v176 = v174;
        memmove(v170, v170 + 16, 16 * (v175 - 1 - v169));
        unint64_t v36 = v176;
        uint64_t v121 = v218;
        BOOL v33 = v219;
        *((void *)v176 + 2) = v175 - 1;
        uint64_t v12 = v208;
        uint64_t v39 = v212;
        uint64_t v3 = 0;
        uint64_t v9 = v165;
        if (v175 <= 2) {
          goto LABEL_138;
        }
      }
    }
    unint64_t v120 = 1;
LABEL_138:
    int64_t v40 = v200;
    unint64_t v37 = v209;
    if (v209 >= v200) {
      goto LABEL_144;
    }
  }
  if (v42 >= v41)
  {
    if (v41 < v42)
    {
      char v78 = (uint64_t *)(v192 + 8 * v42);
      int64_t v79 = v42;
      int64_t v80 = v41;
      unint64_t v81 = (uint64_t *)(v205 + 8 * v41);
      while (1)
      {
        if (v80 != --v79)
        {
          if (!v205) {
            goto LABEL_186;
          }
          uint64_t v82 = *v81;
          uint64_t *v81 = *v78;
          *char v78 = v82;
        }
        ++v80;
        --v78;
        ++v81;
        if (v80 >= v79) {
          goto LABEL_54;
        }
      }
    }
    goto LABEL_54;
  }
LABEL_183:
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_188:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_146900();
  __break(1u);
  return result;
}

uint64_t sub_52854(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_10C5DC(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_517F4(v8, a2);
  swift_bridgeObjectRelease();
  sub_1468A0();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_52900(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19B730);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_52960(double a1, double a2, double a3, double a4)
{
  uint64_t v10 = &qword_19D000;
  uint64_t v11 = v4;
  sub_145380();
  uint64_t v12 = (uint64_t)&qword_19D000;
  uint64_t v13 = OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_dayButtonSize;
  if (qword_19ACE0 != -1) {
    goto LABEL_39;
  }
  while (1)
  {
    *(void *)&v11[v13] = qword_1A3A48;
    uint64_t v14 = OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView;
    *(void *)&v11[v14] = [objc_allocWithZone((Class)UIStackView) init];
    *(void *)&v11[OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_delegate + 8] = 0;
    swift_unknownObjectWeakInit();

    uint64_t v15 = (objc_class *)type metadata accessor for ScheduleDaySelector();
    v94.receiver = v11;
    v94.super_class = v15;
    uint64_t v16 = (char *)objc_msgSendSuper2(&v94, "initWithFrame:", a1, a2, a3, a4);
    uint64_t v86 = OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView;
    uint64_t v87 = v16;
    uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView];
    uint64_t v18 = v16;
    [v17 setAxis:0];
    [v17 setSpacing:5.0];
    [v17 setDistribution:3];
    [v17 setAlignment:3];
    [v17 setMaximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
    uint64_t v92 = v18;
    uint64_t v19 = &v18[v10[291]];
    uint64_t v84 = sub_145390();
    uint64_t v85 = sub_145350();
    uint64_t v20 = sub_145310();
    uint64_t v21 = v20 - 1;
    if (__OFSUB__(v20, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_once();
      goto LABEL_19;
    }
    sub_A314(&qword_19D970);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1598D0;
    if (v21 > 7) {
      goto LABEL_41;
    }
    uint64_t v19 = (char *)inited;
    *(void *)(inited + 32) = v21;
    *(void *)(inited + 40) = 7;
    if (v21 < 0) {
      goto LABEL_42;
    }
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = v21;
    uint64_t v23 = sub_5418C(inited, 0);
    swift_setDeallocating();
    uint64_t v13 = *(void *)(v23 + 16);
    if (!v13) {
      break;
    }
    sub_C84C(0, &qword_19D978);
    id v24 = 0;
    uint64_t v91 = *(void *)(v12 + 2336);
    uint64_t v25 = (unint64_t *)(v23 + 32);
    UIAccessibilityTraits v83 = UIAccessibilityTraitToggleButton;
    *(void *)&a3 = 1107296256;
    while (1)
    {
      uint64_t v90 = v24;
      unint64_t v29 = *v25;
      uint64_t v10 = v25 + 1;
      unint64_t v28 = v29;
      id v5 = [objc_allocWithZone((Class)UIButton) init];
      [v5 setTag:v29];
      [v5 setChangesSelectionAsPrimaryAction:1];
      uint64_t v30 = swift_allocObject();
      uint64_t v11 = (char *)v84;
      *(void *)(v30 + 16) = v84;
      *(void *)(v30 + 24) = v29;
      aBlock[4] = sub_5435C;
      aBlock[5] = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_538EC;
      aBlock[3] = &unk_186C38;
      uint64_t v31 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_release();
      [v5 setConfigurationUpdateHandler:v31];
      _Block_release(v31);
      [v5 setAccessibilityTraits:v83];
      if ((v29 & 0x8000000000000000) != 0) {
        break;
      }
      if (v28 >= *(void *)(v85 + 16)) {
        goto LABEL_38;
      }
      int64_t v88 = v10;
      uint64_t v89 = v13;
      id v24 = v5;
      swift_bridgeObjectRetain();
      NSString v32 = sub_145B80();
      swift_bridgeObjectRelease();
      [v24 setAccessibilityLabel:v32];

      double v33 = *(double *)&v92[v91];
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v34 = [v24 widthAnchor];
      id v35 = [v34 constraintEqualToConstant:v33];

      [v35 setActive:1];
      LODWORD(v36) = 1132068864;
      [v35 setPriority:v36];

      double v37 = *(double *)&v92[v91];
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v38 = [v24 heightAnchor];
      id v39 = [v38 constraintEqualToConstant:v37];

      [v39 setActive:1];
      if (v39)
      {
        LODWORD(v40) = 1144750080;
        [v39 setPriority:v40];
      }
      double v41 = *(double *)&v92[v91];
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v42 = [v24 widthAnchor];
      id v43 = [v42 constraintLessThanOrEqualToConstant:v41];

      [v43 setActive:1];
      LODWORD(v44) = 1148846080;
      [v43 setPriority:v44];

      a4 = *(double *)&v92[v91];
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v45 = [v24 heightAnchor];
      uint64_t v12 = 1148846080;
      id v46 = [v45 constraintLessThanOrEqualToConstant:a4];

      [v46 setActive:1];
      if (v46)
      {
        LODWORD(v47) = 1148846080;
        [v46 setPriority:v47];
      }
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v48 = [v24 heightAnchor];
      id v49 = [v24 widthAnchor];
      id v50 = [v48 constraintEqualToAnchor:v49 multiplier:1.0];

      [v50 setActive:1];
      LODWORD(v51) = 1148846080;
      [v50 setPriority:v51];

      [*(id *)&v87[v86] addArrangedSubview:v24];
      if (v90)
      {
        id v52 = v90;
        id v53 = [v24 widthAnchor];
        id v54 = [v52 widthAnchor];
        id v55 = [v53 constraintEqualToAnchor:v54];

        LODWORD(v56) = 1148846080;
        [v55 setPriority:v56];
        [v55 setActive:1];
      }
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v5 = v24;
      uint64_t v82 = v26;
      uint64_t v27 = (void *)sub_1464D0();
      objc_msgSend(v5, "addAction:forControlEvents:", v27, 0x2000, 0, 0, 0, sub_543B4, v82);

      uint64_t v25 = v88;
      --v13;
      if (v89 == 1) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once();
  }
  id v5 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void **)&v87[v86];
  [v92 addSubview:v57];
  uint64_t v58 = qword_19ACF8;
  uint64_t v19 = v57;
  if (v58 != -1) {
    goto LABEL_43;
  }
LABEL_19:
  double v59 = *(double *)&qword_1A3A60;
  uint64_t v60 = (char *)[v19 superview];
  if (v60)
  {
    unint64_t v61 = v60;
    [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v62 = [v19 leadingAnchor];
    id v63 = [v61 leadingAnchor];
    id v64 = (char *)[v62 constraintEqualToAnchor:v63];

    [v64 setConstant:v59 + v59];
    if (v64)
    {
      id v64 = v64;
      [v64 setActive:1];

      uint64_t v19 = v64;
    }
  }
  else
  {
    id v64 = 0;
    unint64_t v61 = v19;
  }

  double v65 = *(double *)&qword_1A3A60;
  id v66 = *(id *)&v87[v86];
  id v67 = [v66 superview];
  if (v67)
  {
    uint64_t v68 = v67;
    [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v69 = [v66 trailingAnchor];
    id v70 = [v68 trailingAnchor];
    id v71 = [v69 constraintEqualToAnchor:v70];

    [v71 setConstant:v65 * -2.0];
    if (v71)
    {
      id v71 = v71;
      [v71 setActive:1];

      id v66 = v71;
    }
  }
  else
  {
    id v71 = 0;
    uint64_t v68 = v66;
  }

  uint64_t v72 = qword_19AD08;
  id v73 = *(id *)&v87[v86];
  if (v72 != -1) {
    swift_once();
  }
  double v74 = *(double *)&qword_1A3A70;
  id v75 = [v73 superview];
  if (v75)
  {
    uint64_t v76 = v75;
    [v73 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v77 = [v73 topAnchor];
    id v78 = [v76 topAnchor];
    id v79 = [v77 constraintEqualToAnchor:v78];

    [v79 setConstant:v74];
    if (v79)
    {
      id v79 = v79;
      [v79 setActive:1];

      id v73 = v79;
    }
  }
  else
  {
    id v79 = 0;
    uint64_t v76 = v73;
  }

  id v80 = sub_42540(0, 1, *(double *)&qword_1A3A70);
  return v92;
}

uint64_t sub_53504(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19D980);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1464E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_146560();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 isSelected]) {
    sub_146550();
  }
  else {
    sub_146530();
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)(a2 + 16) <= a3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v25 = v13;
  swift_bridgeObjectRetain();
  sub_146540();
  unsigned int v17 = [a1 isSelected];
  uint64_t v18 = self;
  uint64_t v19 = &selRef_systemIndigoColor;
  if (!v17) {
    uint64_t v19 = &selRef_tertiarySystemFillColor;
  }
  id v20 = [v18 *v19];
  sub_146510();
  if (([a1 isSelected] & 1) == 0) {
    id v21 = [self secondaryLabelColor];
  }
  sub_146520();
  sub_146500();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v9);
  sub_1464F0();
  uint64_t v13 = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v8, v16, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  sub_146570();
  if ([a1 isSelected])
  {
    if (qword_19AD68 == -1) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  if (qword_19AD60 != -1) {
LABEL_17:
  }
    swift_once();
LABEL_14:
  swift_bridgeObjectRetain();
  NSString v22 = sub_145B80();
  swift_bridgeObjectRelease();
  [a1 setAccessibilityValue:v22];

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_538EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_53954()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_53E1C();
      sub_129AF4();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_53A14(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_calendar];
  id v4 = v1;
  sub_145380();
  uint64_t v5 = OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_dayButtonSize;
  if (qword_19ACE0 != -1) {
    swift_once();
  }
  *(void *)&v4[v5] = qword_1A3A48;
  uint64_t v6 = OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView;
  id v7 = [objc_allocWithZone((Class)UIStackView) init];

  *(void *)&v4[v6] = v7;
  uint64_t v8 = (uint64_t)&v4[OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_delegate];
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = sub_145450();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);

  sub_118B0(v8);
  type metadata accessor for ScheduleDaySelector();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_53BB8(uint64_t a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView) arrangedSubviews];
  sub_C84C(0, &qword_19D968);
  unint64_t v4 = sub_145DE0();

  if (v4 >> 62) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
  while (v5)
  {
    unint64_t v6 = 0;
    unint64_t v25 = v4 + 32;
    uint64_t v7 = a1 + 56;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v9 = (id)sub_146810();
      }
      else
      {
        if (v6 >= *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_24;
        }
        id v9 = *(id *)(v25 + 8 * v6);
      }
      uint64_t v10 = v9;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      self;
      uint64_t v12 = (void *)swift_dynamicCastObjCClass();
      if (!v12) {
        goto LABEL_6;
      }
      uint64_t v13 = v12;
      id v14 = [v12 tag];
      if (*(void *)(a1 + 16))
      {
        id v15 = v14;
        uint64_t v16 = sub_146C70();
        uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
        {
          uint64_t v19 = *(void *)(a1 + 48);
          if (*(id *)(v19 + 8 * v18) == v15) {
            goto LABEL_18;
          }
          uint64_t v20 = ~v17;
          unint64_t v21 = (v18 + 1) & v20;
          if ((*(void *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
          {
            if (*(id *)(v19 + 8 * v21) == v15)
            {
LABEL_18:
              BOOL v8 = 1;
              goto LABEL_5;
            }
            unint64_t v22 = (v21 + 1) & v20;
            if ((*(void *)(v7 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
            {
              do
              {
                id v23 = *(id *)(v19 + 8 * v22);
                BOOL v8 = v23 == v15;
                if (v23 == v15) {
                  break;
                }
                unint64_t v22 = (v22 + 1) & v20;
              }
              while (((*(void *)(v7 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
              goto LABEL_5;
            }
          }
        }
      }
      BOOL v8 = 0;
LABEL_5:
      objc_msgSend(v13, "setSelected:", v8, v25);
LABEL_6:

      if (v6 == v5) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_146930();
    swift_bridgeObjectRelease();
  }
LABEL_26:

  return swift_bridgeObjectRelease();
}

void sub_53E1C()
{
  v9[1] = (uint64_t)&_swiftEmptySetSingleton;
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC15JournalSettings19ScheduleDaySelector_daysStackView) arrangedSubviews];
  sub_C84C(0, &qword_19D968);
  unint64_t v2 = sub_145DE0();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_146930();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_146810();
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      unint64_t v6 = v5;
      self;
      uint64_t v7 = (void *)swift_dynamicCastObjCClass();
      if (v7)
      {
        BOOL v8 = v7;
        if ([v7 isSelected]) {
          sub_EA248(v9, (uint64_t)[v8 tag]);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

id sub_53FBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleDaySelector();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_54084()
{
  return type metadata accessor for ScheduleDaySelector();
}

uint64_t type metadata accessor for ScheduleDaySelector()
{
  uint64_t result = qword_19D958;
  if (!qword_19D958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_540D8()
{
  uint64_t result = sub_145450();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_5418C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = result;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  uint64_t v19 = result + 40;
  char v10 = 1;
  while ((v10 & 1) != 0 || v6 == v7)
  {
    unint64_t v12 = *(void *)(v5 + 16);
    if (v9 <= v12) {
      unint64_t v13 = *(void *)(v5 + 16);
    }
    else {
      unint64_t v13 = v9;
    }
    id v14 = (uint64_t *)(v19 + 16 * v9);
    do
    {
      if (v12 == v9) {
        return (uint64_t)_swiftEmptyArrayStorage;
      }
      if (v13 == v9)
      {
        __break(1u);
        goto LABEL_25;
      }
      ++v9;
      uint64_t v11 = *(v14 - 1);
      uint64_t v7 = *v14;
      v14 += 2;
    }
    while (v11 == v7);
    uint64_t v8 = v11;
    if (v7 < v11) {
      goto LABEL_25;
    }
LABEL_14:
    if (v11 < v8) {
      goto LABEL_26;
    }
    if (v11 >= v7) {
      goto LABEL_27;
    }
    uint64_t v6 = v11 + 1;
    if (a2)
    {
      uint64_t result = sub_368F8(v11, a2);
      char v10 = 0;
      if ((result & 1) == 0) {
        continue;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v3;
    if ((result & 1) == 0) {
      uint64_t result = sub_2CBFC(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
    }
    double v16 = _swiftEmptyArrayStorage[2];
    double v15 = _swiftEmptyArrayStorage[3];
    *(void *)&double v17 = *(void *)&v16 + 1;
    if (*(void *)&v16 >= *(void *)&v15 >> 1)
    {
      uint64_t result = sub_2CBFC(*(void *)&v15 > 1uLL, *(void *)&v16 + 1, 1);
      *(void *)&double v17 = *(void *)&v16 + 1;
    }
    char v10 = 0;
    _swiftEmptyArrayStorage[2] = v17;
    *(void *)&_swiftEmptyArrayStorage[*(void *)&v16 + 4] = v11;
    uint64_t v3 = v18;
  }
  uint64_t v11 = v6;
  if (v7 >= v8) {
    goto LABEL_14;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_54324()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_5435C(void *a1)
{
  return sub_53504(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_54364(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_54374()
{
  return swift_release();
}

uint64_t sub_5437C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_543B4()
{
}

uint64_t sub_543BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[18] = v14;
  v9[19] = v8;
  unsigned char v9[16] = a7;
  v9[17] = a8;
  v9[14] = a5;
  v9[15] = a6;
  v9[12] = a3;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  uint64_t v10 = sub_144E20();
  v9[20] = v10;
  v9[21] = *(void *)(v10 - 8);
  v9[22] = swift_task_alloc();
  sub_A314(&qword_19EB20);
  v9[23] = swift_task_alloc();
  uint64_t v11 = sub_144F60();
  v9[24] = v11;
  v9[25] = *(void *)(v11 - 8);
  v9[26] = swift_task_alloc();
  v9[27] = swift_task_alloc();
  v9[28] = swift_task_alloc();
  v9[29] = swift_task_alloc();
  v9[30] = swift_task_alloc();
  return _swift_task_switch(sub_54580, 0, 0);
}

uint64_t sub_54580()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(int *)(type metadata accessor for ExportOptions() + 20);
  if (*(unsigned char *)(v1 + v2)) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(char **)(v0 + 184);
  sub_55548(0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_1248C(*(void *)(v0 + 184), &qword_19EB20);
LABEL_16:
    int v41 = *(unsigned __int8 *)(v1 + v2);
    id v42 = [self traitCollectionWithUserInterfaceStyle:1];
    *(void *)(v0 + 248) = v42;
    if (qword_19AE70 != -1) {
      swift_once();
    }
    if (v41) {
      char v43 = 2;
    }
    else {
      char v43 = 5;
    }
    uint64_t v44 = *(void *)(v0 + 152);
    id v45 = (void *)qword_1A3C00;
    *(void *)(v0 + 256) = qword_1A3C00;
    id v46 = v45;
    uint64_t v47 = swift_task_alloc();
    *(void *)(v0 + 264) = v47;
    *(void *)(v47 + 16) = v44;
    *(unsigned char *)(v47 + 24) = v43;
    *(void *)(v47 + 32) = 0;
    *(unsigned char *)(v47 + 40) = 0;
    *(void *)(v47 + 48) = v46;
    *(void *)(v47 + 56) = v42;
    id v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v48;
    uint64_t v49 = sub_A314(&qword_19D370);
    *id v48 = v0;
    v48[1] = sub_54CD4;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 48, 0, 0, 0xD00000000000003BLL, 0x800000000014C150, sub_55F20, v47, v49);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 200) + 32))(*(void *)(v0 + 240), *(void *)(v0 + 184), *(void *)(v0 + 192));
  uint64_t v6 = sub_144E30();
  char v8 = sub_5C3CC(v6, v7);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 192));
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v50 = *(void *)(v0 + 224);
  uint64_t v56 = *(void *)(v0 + 200);
  uint64_t v51 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 160);
  sub_E3C18(v9);
  *(void *)(v0 + 32) = sub_145240();
  *(void *)(v0 + 40) = v13;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v12);
  sub_12060();
  sub_144F50();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  swift_bridgeObjectRelease();
  id v55 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v55(v9, v51);
  sub_144E30();
  sub_144EE0();
  swift_bridgeObjectRelease();
  v55(v50, v51);
  uint64_t v14 = sub_144E90();
  id v52 = v15;
  id v16 = [self defaultManager];
  sub_144EB0(v17);
  uint64_t v19 = v18;
  sub_144EB0(v20);
  unint64_t v22 = v21;
  *(void *)(v0 + 64) = 0;
  LODWORD(v12) = [v16 copyItemAtURL:v19 toURL:v21 error:v0 + 64];

  id v23 = *(id *)(v0 + 64);
  if (!v12)
  {
    NSString v32 = v23;
    swift_bridgeObjectRelease();
    sub_144D90();

    swift_willThrow();
    if (qword_19ADC8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_145760();
    sub_C584(v33, (uint64_t)qword_19D988);
    swift_errorRetain();
    swift_errorRetain();
    id v34 = sub_145740();
    os_log_type_t v35 = sub_1461F0();
    if (os_log_type_enabled(v34, v35))
    {
      double v36 = (uint8_t *)swift_slowAlloc();
      id v53 = (void *)swift_slowAlloc();
      buf = v36;
      *(_DWORD *)double v36 = 138412290;
      swift_errorRetain();
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v37;
      sub_146610();
      void *v53 = v37;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_94138, v34, v35, "Asset.createImageHTML error %@", buf, 0xCu);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v38 = *(void *)(v0 + 232);
    uint64_t v39 = *(void *)(v0 + 240);
    uint64_t v40 = *(void *)(v0 + 192);
    swift_errorRelease();
    v55(v38, v40);
    v55(v39, v40);
    goto LABEL_16;
  }
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = sub_6C958(v14, v52, *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144));
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  v55(v25, v26);
  v55(v24, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v30(v27, v29);
}

uint64_t sub_54CD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_54E18, 0, 0);
}

uint64_t sub_54E18()
{
  uint64_t v1 = *(void **)(v0 + 248);

  if (!*(void *)(v0 + 48))
  {
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v23 = *(void *)(v0 + 200);
    long long v52 = *(_OWORD *)(v0 + 128);
    uint64_t v24 = *(void **)(v0 + 112);
    uint64_t v58 = *(void *)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 104);
    id v54 = *(void **)(v0 + 144);
    uint64_t v56 = *(void **)(v0 + 96);
    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v51 = *(void *)(v0 + 88);
    unint64_t v27 = sub_4FA70(v21, v26);
    uint64_t v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    if (v24) {
      uint64_t v30 = v25;
    }
    else {
      uint64_t v30 = 0x6361626C6C616620;
    }
    if (v24) {
      uint64_t v31 = v24;
    }
    else {
      uint64_t v31 = (void *)0xEF74657373615F6BLL;
    }
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_6C958(v27, v29, v26, v51, v56, v30, v31, v58, (void *)v52, *((uint64_t *)&v52 + 1), v54);
    uint64_t v44 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v57 = *(UIImage **)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 160);
  sub_E3C18(v3);
  *(void *)(v0 + 16) = sub_145240();
  *(void *)(v0 + 24) = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v8);
  sub_12060();
  sub_144F50();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  sub_144EE0();
  v10(v2, v5);
  uint64_t v11 = sub_144E90();
  uint64_t v13 = v12;
  uint64_t v14 = UIImageHEICRepresentation(v57);
  if (v14)
  {
    double v15 = v14;
    id v55 = v10;
    uint64_t v16 = sub_144FA0();
    unint64_t v18 = v17;

    sub_144FB0();
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v42 = sub_6C958(v11, v13, *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144));
    uint64_t v44 = v43;
    sub_C52C(v16, v18);

    swift_bridgeObjectRelease();
    v55(v19, v20);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v45 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v45(v42, v44);
  }
  swift_bridgeObjectRelease();
  if (qword_19ADC8 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void **)(v0 + 152);
  uint64_t v34 = sub_145760();
  sub_C584(v34, (uint64_t)qword_19D988);
  id v35 = v33;
  double v36 = sub_145740();
  os_log_type_t v37 = sub_1461F0();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = *(void **)(v0 + 152);
  if (v38)
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    id v53 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    *(void *)(v0 + 56) = v39;
    id v41 = v39;
    sub_146610();
    void *v53 = v39;

    _os_log_impl(&def_94138, v36, v37, "getHTMLAssetGrid can't get image data for %@", v40, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    double v36 = *(NSObject **)(v0 + 152);
  }
  uint64_t v47 = *(void *)(v0 + 208);
  uint64_t v48 = *(void *)(v0 + 192);

  sub_1CF0C();
  swift_allocError();
  *uint64_t v49 = 6;
  swift_willThrow();

  v10(v47, v48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_55454()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19D988);
  sub_C584(v0, (uint64_t)qword_19D988);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_55548@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  unint64_t v61 = a3;
  uint64_t v6 = sub_A314(&qword_19D360);
  __chkstk_darwin(v6 - 8);
  double v65 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = sub_145680();
  uint64_t v8 = *(void *)(v64 - 8);
  uint64_t v9 = __chkstk_darwin(v64 - 8);
  id v63 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  id v62 = &v53[-v11];
  uint64_t v70 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v12 = __chkstk_darwin(v70);
  id v69 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  id v77 = &v53[-v14];
  uint64_t v15 = sub_A314(&qword_19EB20);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v60 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  id v79 = &v53[-v18];
  uint64_t v78 = sub_144F60();
  uint64_t v67 = *(void *)(v78 - 8);
  uint64_t v19 = __chkstk_darwin(v78);
  uint64_t v57 = &v53[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v22 = &v53[-v21];
  uint64_t v83 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v23 = __chkstk_darwin(v83);
  id v75 = (id *)&v53[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v26 = (id *)&v53[-v25];
  unint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments);
  if (v27 >> 62) {
    goto LABEL_41;
  }
  uint64_t v28 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
  if (!v28)
  {
LABEL_42:
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v61, 1, 1, v78);
  }
  while (1)
  {
    unint64_t v82 = v27 & 0xC000000000000001;
    double v74 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v67 + 48);
    uint64_t v72 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
    id v73 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v67 + 32);
    uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v56 = (void (**)(void))(v8 + 32);
    id v55 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
    uint64_t v58 = (void (**)(unsigned char *, uint64_t))(v67 + 8);
    uint64_t v29 = 4;
    int v68 = a2;
    uint64_t v71 = a1;
    uint64_t v80 = v28;
    unint64_t v81 = v27;
    id v66 = v22;
LABEL_7:
    uint64_t v30 = v29 - 4;
    if (v82) {
      break;
    }
    uint64_t v8 = *(void *)(v27 + 8 * v29);
    swift_retain();
    uint64_t v31 = v29 - 3;
    if (!__OFADD__(v30, 1)) {
      goto LABEL_12;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_146930();
    if (!v28) {
      goto LABEL_42;
    }
  }
  uint64_t v8 = sub_146810();
  uint64_t v31 = v29 - 3;
  if (__OFADD__(v30, 1)) {
    goto LABEL_40;
  }
LABEL_12:
  uint64_t v32 = v8 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType;
  sub_463EC(v8 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v26, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (a2) {
        goto LABEL_39;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_4632C((uint64_t)v26);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v33 = v75;
      sub_463EC(v32, (uint64_t)v75, type metadata accessor for AssetAttachment.AssetType);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = v78;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          (*v72)(v79, 1, 1, v35);
          break;
        case 4:
          double v36 = v75;
          swift_bridgeObjectRelease();
          uint64_t v33 = (id *)((char *)v36 + *(int *)(sub_A314(&qword_19D368) + 48));
          goto LABEL_21;
        default:
LABEL_21:
          uint64_t v37 = (uint64_t)v33;
          BOOL v38 = v77;
          sub_46388(v37, (uint64_t)v77);
          uint64_t v39 = (uint64_t)v38;
          uint64_t v40 = v69;
          sub_463EC(v39, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            (*v73)(v79, v40, v35);
            uint64_t v41 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v42 = v60;
            sub_621B8((uint64_t)v60);
            swift_bridgeObjectRelease();
            if ((*v74)(v42, 1, v35) == 1)
            {
              sub_1248C((uint64_t)v42, &qword_19EB20);
              uint64_t v41 = 1;
            }
            else
            {
              uint64_t v43 = *v73;
              uint64_t v44 = v57;
              (*v73)(v57, v42, v35);
              id v45 = v44;
              uint64_t v22 = v66;
              v43(v79, v45, v35);
              uint64_t v41 = 0;
            }
            a2 = v68;
          }
          (*v72)(v79, v41, 1, v35);
          sub_4632C((uint64_t)v77);
          break;
      }
      uint64_t v76 = (char *)v26 + *(int *)(sub_A314(&qword_19D368) + 48);
      if ((*v74)(v79, 1, v35) == 1)
      {
        sub_1248C((uint64_t)v79, &qword_19EB20);
        uint64_t v46 = (uint64_t)v76;
        goto LABEL_37;
      }
      (*v73)(v22, v79, v35);
      sub_144E30();
      swift_bridgeObjectRetain();
      uint64_t v47 = v63;
      sub_145630();
      uint64_t v48 = (uint64_t)v65;
      sub_145620();
      uint64_t v49 = v64;
      if ((*v59)(v48, 1, v64) == 1)
      {
        sub_1248C(v48, &qword_19D360);
        swift_bridgeObjectRelease();
        uint64_t v46 = (uint64_t)v76;
LABEL_36:
        uint64_t v22 = v66;
        (*v58)(v66, v78);
        a2 = v68;
LABEL_37:
        sub_4632C(v46);
        swift_release();
        a1 = v71;
        goto LABEL_6;
      }
      (*v56)();
      sub_145640();
      int v54 = sub_145670();
      uint64_t v50 = *v55;
      (*v55)(v47, v49);
      v50(v62, v49);
      swift_bridgeObjectRelease();
      uint64_t v46 = (uint64_t)v76;
      if ((v54 & 1) == 0) {
        goto LABEL_36;
      }
      a2 = v68;
      uint64_t v22 = v66;
      if ((v68 & 1) == 0)
      {
        uint64_t v51 = *(void *)(v8 + 16);
        (*v58)(v66, v78);
        sub_4632C(v46);
        a1 = v71;
        if (v51 == v71) {
          goto LABEL_39;
        }
LABEL_5:
        swift_release();
LABEL_6:
        unint64_t v27 = v81;
        ++v29;
        if (v31 == v80) {
          goto LABEL_42;
        }
        goto LABEL_7;
      }
      (*v58)(v66, v78);
      sub_4632C(v46);
LABEL_39:
      swift_bridgeObjectRelease_n();
      sub_D2630(v61);
      return swift_release();
    default:
      sub_4632C((uint64_t)v26);
      if (a2) {
        goto LABEL_39;
      }
LABEL_16:
      if (*(void *)(v8 + 16) == a1) {
        goto LABEL_39;
      }
      goto LABEL_5;
  }
}

uint64_t sub_55F20(uint64_t a1)
{
  return sub_7C2F4(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56));
}

unsigned char *storeEnumTagSinglePayload for AssetContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x56004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetContentType()
{
  return &type metadata for AssetContentType;
}

unint64_t sub_56040()
{
  unint64_t result = qword_19D9A8;
  if (!qword_19D9A8)
  {
    sub_12244(&qword_19D9B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D9A8);
  }
  return result;
}

uint64_t sub_5609C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6F746F6870;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F746F6870;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      uint64_t v5 = 0x6F69647561;
      break;
    case 3:
      uint64_t v5 = 0x616964656DLL;
      break;
    case 4:
      uint64_t v5 = 0x6563616C70;
      break;
    case 5:
      uint64_t v5 = 0x61737265766E6F63;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7974697669746361;
      break;
    case 7:
      uint64_t v5 = 0x697463656C666572;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 8:
      uint64_t v5 = 0x4D664F6574617473;
      unint64_t v3 = 0xEB00000000646E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 1701079414;
      goto LABEL_13;
    case 2:
      uint64_t v7 = 1768191329;
LABEL_13:
      if (v5 != (v7 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 0x616964656DLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 0x6563616C70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x61737265766E6F63) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7974697669746361) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x697463656C666572;
      unint64_t v6 = 0xEA00000000006E6FLL;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEB00000000646E69;
      if (v5 != 0x4D664F6574617473) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_28:
      }
        char v8 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_5633C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x636973756DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x636973756DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x74736163646F70;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x656C6369747261;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802465122;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 30324;
      break;
    case 5:
      unint64_t v3 = 0x8000000000149BD0;
      uint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x74736163646F70) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x656C6369747261) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802465122) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 30324;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x8000000000149BD0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_56520(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68746C616568;
  }
  else {
    uint64_t v3 = 0x6163696669746F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xED0000736E6F6974;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x68746C616568;
  }
  else {
    uint64_t v5 = 0x6163696669746F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED0000736E6F6974;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_565D0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656772614C78;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656772614C78;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x69576D756964656DLL;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v5 = 0x657263536C6C7566;
      unint64_t v3 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656772616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6C6C616D73;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006E65;
      if (v5 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_567CC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD00000000000002ALL;
  unint64_t v3 = 0x8000000000149DB0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000002ALL;
    }
    else {
      unint64_t v5 = 0xD000000000000031;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000000149DE0;
    }
    else {
      unint64_t v6 = 0x8000000000149E10;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD00000000000002ALL;
    unint64_t v6 = 0x8000000000149DB0;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v3 = 0x8000000000149DE0;
  }
  else
  {
    unint64_t v2 = 0xD000000000000031;
    unint64_t v3 = 0x8000000000149E10;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_568C4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746E656D6F6DLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E656D6F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F746F6870;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t v5 = 0x6D6F74737563;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F746F6870) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6D6F74737563;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_146B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_56A70(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v3 = 0x7461447972746E65;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEA00000000006574;
  }
  if (a2) {
    uint64_t v5 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v5 = 0x7461447972746E65;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006574;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_56B20(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v3 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v4 = 0x8000000000149CC0;
  }
  else {
    unint64_t v4 = 0x8000000000149CE0;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v6 = 0x8000000000149CE0;
  }
  else {
    unint64_t v6 = 0x8000000000149CC0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_146B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int sub_56BCC()
{
  return sub_146CD0();
}

Swift::Int sub_56C54()
{
  return sub_146CD0();
}

Swift::Int sub_56D60()
{
  return sub_146CD0();
}

Swift::Int sub_56E60()
{
  return sub_146CD0();
}

uint64_t sub_56F08()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

uint64_t sub_5704C()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

uint64_t sub_57138()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_571C8()
{
  return sub_146CD0();
}

Swift::Int sub_5724C()
{
  return sub_146CD0();
}

Swift::Int sub_572F0()
{
  return sub_146CD0();
}

Swift::Int sub_573F8()
{
  return sub_146CD0();
}

uint64_t sub_574F4(unsigned __int8 *a1, char *a2)
{
  return sub_5633C(*a1, *a2);
}

Swift::Int sub_57500()
{
  return sub_56D60();
}

uint64_t sub_57508()
{
  return sub_5704C();
}

Swift::Int sub_57510()
{
  return sub_573F8();
}

uint64_t sub_57518@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_57678(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_57548(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x636973756DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x74736163646F70;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C6369747261;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1802465122;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 30324;
      a1[1] = 0xE200000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000010;
      a1[1] = 0x8000000000149BD0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_57610(void *a1@<X8>)
{
  *a1 = &off_184948;
}

unint64_t sub_57624()
{
  unint64_t result = qword_19D9B8;
  if (!qword_19D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19D9B8);
  }
  return result;
}

uint64_t sub_57678(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_184428;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_576C4()
{
  return swift_initClassMetadata2();
}

char *sub_5770C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = qword_19D9C0;
  sub_A314(&qword_19DAD8);
  sub_57888();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  unint64_t v4 = v0;
  *(void *)&v0[v2] = [objc_allocWithZone(ObjCClassFromMetadata) init];

  v7.receiver = v4;
  v7.super_class = ObjectType;
  unint64_t v5 = (char *)objc_msgSendSuper2(&v7, "init");
  [*(id *)&v5[qword_19D9C0] setCountLimit:500];
  return v5;
}

char *sub_577CC()
{
  return sub_5770C();
}

uint64_t sub_577F0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_1466A0();

  swift_unknownObjectRelease();
  return sub_C7FC((uint64_t)&v7);
}

void sub_57860(uint64_t a1)
{
}

uint64_t type metadata accessor for MemoryCache()
{
  return sub_145A4();
}

unint64_t sub_57888()
{
  unint64_t result = qword_19DAE0[0];
  if (!qword_19DAE0[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_19DAE0);
  }
  return result;
}

uint64_t sub_578C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_57928()
{
  sub_A314(&qword_19DBA0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = [objc_allocWithZone((Class)sub_A314(&qword_19DBA8)) init];
  sub_A314(&qword_19DBB0);
  uint64_t result = swift_allocObject();
  v0[3] = result;
  v0[4] = 0xD000000000000011;
  v0[5] = 0x800000000014C1D0;
  qword_1A3B88 = (uint64_t)v0;
  return result;
}

uint64_t sub_579C0()
{
  uint64_t v0 = sub_146300();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::OpaquePointer v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1462D0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_145980();
  __chkstk_darwin(v5 - 8);
  sub_48534();
  sub_145970();
  sub_1462C0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = sub_146340();
  qword_1A3B90 = result;
  return result;
}

uint64_t sub_57B68()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_57B98()
{
  sub_57B68();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageCache()
{
  return sub_145A4();
}

BOOL sub_57BE4()
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];
  BOOL v1 = v6 >= 0.99;
  if (v5 < 0.99) {
    BOOL v1 = 0;
  }
  return v4 >= 0.99 && v1;
}

uint64_t sub_57C84()
{
  double v19 = 0.0;
  double v20 = 0.0;
  double v17 = 0.0;
  double v18 = 0.0;
  [v0 getRed:&v20 green:&v19 blue:&v18 alpha:&v17];
  sub_A314(&qword_1A0A00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_15A590;
  float v2 = v20 * 255.0;
  uint64_t v3 = lroundf(v2);
  *(void *)(v1 + 56) = &type metadata for Int;
  *(void *)(v1 + 64) = &protocol witness table for Int;
  *(void *)(v1 + 32) = v3;
  float v4 = v19 * 255.0;
  uint64_t v5 = lroundf(v4);
  *(void *)(v1 + 96) = &type metadata for Int;
  *(void *)(v1 + 104) = &protocol witness table for Int;
  *(void *)(v1 + 72) = v5;
  float v6 = v18 * 255.0;
  uint64_t v7 = lroundf(v6);
  *(void *)(v1 + 136) = &type metadata for Int;
  *(void *)(v1 + 144) = &protocol witness table for Int;
  *(void *)(v1 + 112) = v7;
  uint64_t v8 = sub_145BD0();
  double v9 = v17;
  if (v17 < 1.0)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1578A0;
    float v11 = v9 * 255.0;
    uint64_t v12 = lroundf(v11);
    *(void *)(v10 + 56) = &type metadata for Int;
    *(void *)(v10 + 64) = &protocol witness table for Int;
    *(void *)(v10 + 32) = v12;
    uint64_t v13 = sub_145BD0();
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v13;
    v21._object = v15;
    sub_145C90(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

id sub_57E74(void *a1)
{
  double v10 = 0.0;
  double v11 = 0.0;
  uint64_t v8 = 0;
  double v9 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  [v1 getRed:&v11 green:&v10 blue:&v9 alpha:&v8];
  [a1 getRed:&v7 green:&v6 blue:&v5 alpha:&v4];
  return [objc_allocWithZone((Class)UIColor) initWithRed:v4 * v7 + (1.0 - v4) * v11 green:v4 * v6 + (1.0 - v4) * v10 blue:v4 * v5 + (1.0 - v4) * v9 alpha:1.0];
}

uint64_t sub_58090()
{
  uint64_t v0 = sub_1452C0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_145B50();
  __chkstk_darwin(v1 - 8);
  sub_145AE0();
  if (qword_19B048 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1A3EB0;
  sub_1452B0();
  uint64_t result = sub_145C00();
  qword_1A3B98 = result;
  unk_1A3BA0 = v4;
  return result;
}

void sub_5834C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1452C0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_145B50();
  __chkstk_darwin(v3 - 8);
  unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
  CFStringRef v72 = @"com.apple.journal";
  id v73 = self;
  id v4 = objc_msgSend(v73, "applicationWithBundleIdentifier:");
  unsigned int v5 = [v4 isLocked];

  double v6 = &qword_19B000;
  if (v5)
  {
    double v7 = self;
    NSString v8 = sub_145B80();
    id v9 = [v7 groupSpecifierWithID:v8];

    if (!v9) {
      goto LABEL_49;
    }
    sub_145AE0();
    if (qword_19B048 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1A3EB0;
    sub_1452B0();
    sub_145C00();
    NSString v11 = sub_145B80();
    swift_bridgeObjectRelease();
    [v9 setName:v11];

    sub_145AE0();
    id v12 = (id)qword_1A3EB0;
    sub_1452B0();
    sub_145C00();
    NSString v13 = sub_145B80();
    swift_bridgeObjectRelease();
    [v9 setProperty:v13 forKey:PSHeaderDetailTextGroupKey];

    type metadata accessor for PlacardHeaderView();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v15 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v15)
    {
      sub_145BC0();
      uint64_t v15 = (NSString *)sub_145B80();
      swift_bridgeObjectRelease();
    }
    [v9 setProperty:v15 forKey:PSHeaderCellClassGroupKey];

    id v16 = v9;
    sub_145DC0();
    double v6 = &qword_19B000;
    if (*(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                  + (v78 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_8;
LABEL_34:
    sub_145E20();
LABEL_8:
    sub_145E50();
    sub_145E00();

LABEL_10:
    double v19 = self;
    NSString v20 = sub_145B80();
    id v21 = [v19 groupSpecifierWithID:v20];

    if (v21)
    {
      sub_145AE0();
      if (v6[9] != -1) {
        swift_once();
      }
      id v22 = (id)qword_1A3EB0;
      sub_1452B0();
      sub_145C00();
      NSString v23 = sub_145B80();
      swift_bridgeObjectRelease();
      [v21 setProperty:v23 forKey:PSFooterTextGroupKey];

      id v24 = v21;
      sub_145DC0();
      if (*(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                     + (v78 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_145E20();
      id v74 = v24;
      sub_145E50();
      sub_145E00();
      if (qword_19ADE0 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for LockJournalSettings();
      uint64_t v77 = v25;
      v76[0] = v1;
      swift_bridgeObjectRetain();
      id v75 = v1;
      NSString v26 = sub_145B80();
      swift_bridgeObjectRelease();
      if (v25)
      {
        unint64_t v27 = sub_2F114(v76, v25);
        uint64_t v28 = *(void *)(v25 - 8);
        __chkstk_darwin(v27);
        uint64_t v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v28 + 16))(v30);
        uint64_t v31 = sub_146B80();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v25);
        sub_C7FC((uint64_t)v76);
      }
      else
      {
        uint64_t v31 = 0;
      }
      id v32 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v26 target:v31 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:0 cell:6 edit:0];

      swift_unknownObjectRelease();
      if (v32)
      {
        NSString v33 = sub_145B80();
        [v32 setIdentifier:v33];

        id v34 = [objc_allocWithZone((Class)LAContext) init];
        unsigned int v35 = [v34 canEvaluatePolicy:2 error:0];

        if (v35)
        {
          id v36 = [v73 applicationWithBundleIdentifier:v72];
          [v36 isLocked];
        }
        Class isa = sub_145EA0().super.super.isa;
        uint64_t v38 = PSEnabledKey;
        [v32 setProperty:isa forKey:PSEnabledKey];

        id v39 = v32;
        sub_145DC0();
        if (*(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v78 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_145E20();
        sub_145E50();
        sub_145E00();
        if (!sub_5A714()) {
          goto LABEL_46;
        }
        uint64_t v71 = v38;
        sub_145AE0();
        id v40 = (id)qword_1A3EB0;
        sub_1452B0();
        sub_145C00();
        uint64_t v77 = v25;
        v76[0] = v75;
        id v41 = v75;
        NSString v42 = sub_145B80();
        swift_bridgeObjectRelease();
        uint64_t v43 = v77;
        if (v77)
        {
          uint64_t v44 = sub_2F114(v76, v77);
          uint64_t v45 = *(void *)(v43 - 8);
          __chkstk_darwin(v44);
          uint64_t v47 = (char *)&v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v45 + 16))(v47);
          uint64_t v48 = sub_146B80();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v43);
          sub_C7FC((uint64_t)v76);
        }
        else
        {
          uint64_t v48 = 0;
        }
        sub_5A904();
        id v58 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v42 target:v48 set:"setSpecifierValue:for:" get:"specifierValueFor:" detail:swift_getObjCClassFromMetadata() cell:2 edit:0];

        swift_unknownObjectRelease();
        if (v58)
        {
          NSString v59 = sub_145B80();
          [v58 setIdentifier:v59];

          uint64_t v60 = v71;
          if (qword_19ADE8 != -1) {
            swift_once();
          }
          sub_12C4E0(qword_19DBB8);
          Class v61 = sub_145DD0().super.isa;
          swift_bridgeObjectRelease();
          [v58 setValues:v61];

          if (qword_19ADF0 != -1) {
            swift_once();
          }
          sub_592F4(qword_19DBC0);
          Class v62 = sub_1459D0().super.isa;
          swift_bridgeObjectRelease();
          [v58 setTitleDictionary:v62];

          id v63 = [objc_allocWithZone((Class)LAContext) init];
          unsigned int v64 = [v63 canEvaluatePolicy:2 error:0];

          if (v64)
          {
            id v65 = [v73 applicationWithBundleIdentifier:v72];
            [v65 isLocked];
          }
          Class v66 = sub_145EA0().super.super.isa;
          [v58 setProperty:v66 forKey:v60];

          id v67 = v58;
          sub_145DC0();
          if (*(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v78 & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_145E20();
          sub_145E50();
          sub_145E00();

LABEL_46:
          unint64_t v68 = v78;
          unint64_t v69 = swift_bridgeObjectRetain();
          sub_12C600(v69);
          swift_bridgeObjectRelease();
          Class v70 = sub_145DD0().super.isa;
          swift_bridgeObjectRelease();
          [v75 setSpecifiers:v70];

          sub_12C600(v68);
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id v17 = [objc_allocWithZone((Class)LAContext) init];
  int v18 = [v17 canEvaluatePolicy:2 error:0];

  if (v18) {
    goto LABEL_10;
  }
  uint64_t v49 = self;
  NSString v50 = sub_145B80();
  id v51 = [v49 groupSpecifierWithID:v50];

  if (v51)
  {
    sub_145AE0();
    if (qword_19B048 != -1) {
      swift_once();
    }
    id v52 = (id)qword_1A3EB0;
    sub_1452B0();
    sub_145C00();
    NSString v53 = sub_145B80();
    swift_bridgeObjectRelease();
    [v51 setName:v53];

    sub_145AE0();
    id v54 = (id)qword_1A3EB0;
    sub_1452B0();
    sub_145C00();
    NSString v55 = sub_145B80();
    swift_bridgeObjectRelease();
    [v51 setProperty:v55 forKey:PSHeaderDetailTextGroupKey];

    type metadata accessor for PlacardHeaderView();
    uint64_t v56 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v57 = NSStringFromClass(v56);
    if (!v57)
    {
      sub_145BC0();
      uint64_t v57 = (NSString *)sub_145B80();
      swift_bridgeObjectRelease();
    }
    [v51 setProperty:v57 forKey:PSHeaderCellClassGroupKey];

    id v16 = v51;
    sub_145DC0();
    if (*(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                  + (v78 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_8;
    goto LABEL_34;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_592F4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_A314(&qword_19DC08);
    uint64_t v2 = (void *)sub_146960();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  double v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_2A74C(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_2A74C(v36, v37);
    sub_2A74C(v37, &v33);
    uint64_t result = sub_146760(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_2A74C(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D050();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_59714@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 identifier];
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x59828);
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_145BC0();
  double v7 = v6;

  uint64_t result = sub_5A7CC(v5, v7);
  if (result == 4)
  {
LABEL_6:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (result != 3)
  {
    if (result == 2)
    {
      uint64_t result = sub_4F620();
      *(void *)(a2 + 24) = &type metadata for Bool;
      *(unsigned char *)a2 = result != 4;
      return result;
    }
    goto LABEL_6;
  }
  uint64_t result = sub_4F620();
  uint64_t v9 = result;
  switch((char)result)
  {
    case 1:
      uint64_t v9 = 1;
      goto LABEL_11;
    case 2:
      uint64_t v9 = 5;
      goto LABEL_11;
    case 3:
      uint64_t v9 = 15;
      goto LABEL_11;
    case 4:
      *(void *)(a2 + 24) = &type metadata for Int;
      uint64_t v9 = 1;
      goto LABEL_12;
    default:
LABEL_11:
      *(void *)(a2 + 24) = &type metadata for Int;
LABEL_12:
      *(void *)a2 = v9;
      break;
  }
  return result;
}

unint64_t sub_5998C(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a2 identifier];
  if (!v8)
  {
    __break(1u);
    JUMPOUT(0x59E68);
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_145BC0();
  unint64_t v12 = v11;

  unsigned __int8 v13 = sub_5A7CC(v10, v12);
  uint64_t v14 = v13;
  unsigned __int8 v15 = v13;
  unint64_t result = 0xD000000000000013;
  switch(v14)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 4:
      return result;
    default:
      char v17 = sub_146B90();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        goto LABEL_13;
      }
LABEL_6:
      sub_41FE8(a1, (uint64_t)v32);
      if (v33)
      {
        if (swift_dynamicCast())
        {
          char v18 = v31;
          if ((_BYTE)v31) {
            char v19 = 1;
          }
          else {
            char v19 = 4;
          }
          sub_4F8D0(v19);
          [v2 reloadSpecifiers];
          uint64_t v20 = sub_145F50();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
          sub_145F30();
          uint64_t v21 = sub_145F20();
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v21;
          *(void *)(v22 + 24) = &protocol witness table for MainActor;
          *(unsigned char *)(v22 + 32) = v18;
          sub_76884((uint64_t)v7, (uint64_t)&unk_19DBF8, v22);
          return swift_release();
        }
      }
      else
      {
        sub_C5BC((uint64_t)v32);
      }
LABEL_13:
      switch(v15)
      {
        case 3u:
          swift_bridgeObjectRelease();
          goto LABEL_17;
        default:
          char v23 = sub_146B90();
          unint64_t result = swift_bridgeObjectRelease();
          if (v23)
          {
LABEL_17:
            sub_41FE8(a1, (uint64_t)v32);
            if (v33)
            {
              unint64_t result = swift_dynamicCast();
              if (result)
              {
                unint64_t result = sub_4F590();
                if (result != 4)
                {
                  char v24 = result;
                  if (qword_19ADA8 != -1) {
                    swift_once();
                  }
                  BOOL v25 = (void *)qword_1A3B70;
                  NSString v26 = sub_145B80();
                  [v25 removeObjectForKey:v26];

                  NSString v27 = sub_145B80();
                  [v25 removeObjectForKey:v27];

                  uint64_t v28 = qword_15ADB8[v24];
                  sub_145BC0();
                  NSString v29 = sub_145B80();
                  swift_bridgeObjectRelease();
                  [v25 setInteger:v28 forKey:v29];

                  unint64_t result = (unint64_t)[v2 reloadSpecifiers];
                }
              }
            }
            else
            {
              unint64_t result = sub_C5BC((uint64_t)v32);
            }
          }
          break;
      }
      return result;
  }
}

uint64_t sub_59E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = sub_145F30();
  v4[3] = sub_145F20();
  id v8 = (uint64_t (*)(uint64_t))((char *)&dword_19BF78 + dword_19BF78);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_59F50;
  return v8(a4);
}

uint64_t sub_59F50()
{
  swift_task_dealloc();
  uint64_t v1 = sub_145EB0();
  return _swift_task_switch(sub_5A08C, v1, v0);
}

uint64_t sub_5A08C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_5A260()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LockJournalSettings();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LockJournalSettings()
{
  return self;
}

void sub_5A2BC()
{
  qword_19DBB8 = (uint64_t)&off_184970;
}

uint64_t sub_5A2D0()
{
  uint64_t v0 = sub_1452C0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_145B50();
  __chkstk_darwin(v1 - 8);
  sub_A314(&qword_19DC10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1578B0;
  *(void *)(inited + 32) = 0;
  sub_145AE0();
  if (qword_19B048 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1A3EB0;
  sub_1452B0();
  *(void *)(inited + 40) = sub_145C00();
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = 1;
  sub_145AE0();
  id v5 = v3;
  sub_1452B0();
  *(void *)(inited + 64) = sub_145C00();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 5;
  sub_145AE0();
  id v7 = v5;
  sub_1452B0();
  *(void *)(inited + 88) = sub_145C00();
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = 15;
  sub_145AE0();
  id v9 = v7;
  sub_1452B0();
  *(void *)(inited + 112) = sub_145C00();
  *(void *)(inited + 120) = v10;
  unint64_t v11 = sub_139154((void *)inited);
  swift_setDeallocating();
  sub_A314(&qword_19DC18);
  uint64_t result = swift_arrayDestroy();
  qword_19DBC0 = v11;
  return result;
}

uint64_t sub_5A66C()
{
  id v0 = [objc_allocWithZone((Class)LAContext) init];
  unsigned int v1 = [v0 canEvaluatePolicy:2 error:0];

  if (!v1) {
    return 0;
  }
  id v2 = [self applicationWithBundleIdentifier:@"com.apple.journal"];
  unsigned int v3 = [v2 isLocked];

  return v3 ^ 1;
}

BOOL sub_5A714()
{
  id v0 = [objc_allocWithZone((Class)LAContext) init];
  unsigned int v1 = [v0 canEvaluatePolicy:2 error:0];

  if (v1
    && (id v2 = [self applicationWithBundleIdentifier:@"com.apple.journal"],
        unsigned __int8 v3 = [v2 isLocked],
        v2,
        (v3 & 1) == 0))
  {
    return sub_4F620() != 4;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_5A7CC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1849B0;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_5A818()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_5A850(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_21598;
  return sub_59E8C(a1, v4, v5, v6);
}

unint64_t sub_5A904()
{
  unint64_t result = qword_19DC00;
  if (!qword_19DC00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19DC00);
  }
  return result;
}

uint64_t *sub_5A944(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1459A0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(&qword_19D480);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    unsigned __int8 v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *unsigned __int8 v13 = *v14;
    v13[1] = v15;
    int64_t v16 = (char *)a1 + v12;
    char v17 = (char *)a2 + v12;
    uint64_t v18 = sub_145230();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_A314(&qword_19C150);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_5ABBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1459A0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_145230();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_5AD28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1459A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19D480);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = sub_145230();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_5AF50(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1459A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19D480);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_145230();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_5B244(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1459A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19D480);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_5B454(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1459A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19D480);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_145230();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_A314(&qword_19C150);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_5B738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5B74C);
}

uint64_t sub_5B74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19D480);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_5B890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5B8A4);
}

uint64_t sub_5B8A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_A314(&qword_19D480);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for CanvasStartingState()
{
  uint64_t result = qword_19DC78;
  if (!qword_19DC78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_5BA28()
{
  sub_5BB38(319, (unint64_t *)&unk_19DC88, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_5BB38(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_5BB38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_5BB90(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_A314(&qword_19DCC0);
  __chkstk_darwin(v62);
  Class v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19C150);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v60 - v11;
  __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_1459A0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_A314(&qword_19DCC8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_A314(&qword_19D480);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  int v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  NSString v27 = (char *)&v60 - v26;
  __chkstk_darwin(v25);
  NSString v29 = (char *)&v60 - v28;
  uint64_t v65 = a1;
  sub_12428(a1, (uint64_t)&v60 - v28, &qword_19D480);
  sub_12428(v69, (uint64_t)v27, &qword_19D480);
  uint64_t v30 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_12428((uint64_t)v29, (uint64_t)v20, &qword_19D480);
  sub_12428((uint64_t)v27, v30, &qword_19D480);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v31((uint64_t)v20, 1, v13) == 1)
  {
    sub_1248C((uint64_t)v27, &qword_19D480);
    sub_1248C((uint64_t)v29, &qword_19D480);
    if (v31(v30, 1, v13) == 1)
    {
      sub_1248C((uint64_t)v20, &qword_19D480);
      goto LABEL_11;
    }
LABEL_6:
    long long v32 = &qword_19DCC8;
    uint64_t v33 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_12428((uint64_t)v20, (uint64_t)v24, &qword_19D480);
  if (v31(v30, 1, v13) == 1)
  {
    sub_1248C((uint64_t)v27, &qword_19D480);
    sub_1248C((uint64_t)v29, &qword_19D480);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v30, v13);
  sub_5C384(&qword_19DCD0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v35 = sub_145AD0();
  id v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  sub_1248C((uint64_t)v27, &qword_19D480);
  sub_1248C((uint64_t)v29, &qword_19D480);
  v36(v24, v13);
  sub_1248C((uint64_t)v20, &qword_19D480);
  if ((v35 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v37 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v38 = v37[5];
  uint64_t v39 = v65;
  id v40 = (void *)(v65 + v38);
  uint64_t v41 = *(void *)(v65 + v38 + 8);
  uint64_t v42 = v69;
  uint64_t v43 = (void *)(v69 + v38);
  uint64_t v44 = v43[1];
  if (!v41)
  {
    uint64_t v45 = (uint64_t)v66;
    uint64_t v46 = v67;
    uint64_t v47 = v68;
    if (v44) {
      return 0;
    }
LABEL_18:
    sub_12428(v39 + v37[6], v46, &qword_19C150);
    sub_12428(v42 + v37[6], v47, &qword_19C150);
    uint64_t v49 = v45 + *(int *)(v62 + 48);
    sub_12428(v46, v45, &qword_19C150);
    sub_12428(v47, v49, &qword_19C150);
    uint64_t v50 = v63;
    id v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v51(v45, 1, v63) == 1)
    {
      sub_1248C(v47, &qword_19C150);
      sub_1248C(v46, &qword_19C150);
      if (v51(v49, 1, v50) == 1)
      {
        sub_1248C(v45, &qword_19C150);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v52 = v61;
      sub_12428(v45, v61, &qword_19C150);
      if (v51(v49, 1, v50) != 1)
      {
        uint64_t v53 = v52;
        uint64_t v54 = v64;
        NSString v55 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v60, v49, v50);
        sub_5C384((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
        LODWORD(v66) = sub_145AD0();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v54 + 8);
        v56(v55, v50);
        sub_1248C(v68, &qword_19C150);
        sub_1248C(v67, &qword_19C150);
        v56((char *)v53, v50);
        sub_1248C(v45, &qword_19C150);
        if (v66)
        {
LABEL_25:
          uint64_t v57 = v37[7];
          unsigned int v58 = *(unsigned __int8 *)(v39 + v57);
          unsigned int v59 = *(unsigned __int8 *)(v42 + v57);
          if (v58 <= 0xFD)
          {
            if (v59 <= 0xFD && (sub_C595C(v58, v59) & 1) != 0) {
              return 1;
            }
          }
          else if (v59 > 0xFD)
          {
            return 1;
          }
        }
        return 0;
      }
      sub_1248C(v68, &qword_19C150);
      sub_1248C(v46, &qword_19C150);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v50);
    }
    long long v32 = &qword_19DCC0;
    uint64_t v33 = v45;
LABEL_7:
    sub_1248C(v33, v32);
    return 0;
  }
  uint64_t v45 = (uint64_t)v66;
  uint64_t v46 = v67;
  uint64_t v47 = v68;
  if (!v44) {
    return 0;
  }
  if (*v40 == *v43 && v41 == v44) {
    goto LABEL_18;
  }
  char v48 = sub_146B90();
  uint64_t result = 0;
  if (v48) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_5C384(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5C3CC(uint64_t a1, uint64_t a2)
{
  return sub_5C6F4(a1, a2, (void (*)(uint64_t))&static UTType.image.getter);
}

uint64_t sub_5C3E4(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19D360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_5C444()
{
  uint64_t v0 = sub_A314(&qword_19D360);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_145680();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v17 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v17 - v11;
  swift_bridgeObjectRetain();
  sub_145630();
  sub_145620();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_5C3E4((uint64_t)v2);
    char v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
    sub_145660();
    char v14 = sub_145670();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v10, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v12, v3);
    if (v14)
    {
      v15(v7, v3);
      v15(v12, v3);
      char v13 = 1;
    }
    else
    {
      sub_145650();
      char v13 = sub_145670();
      v15(v10, v3);
      v15(v7, v3);
      v15(v12, v3);
    }
  }
  return v13 & 1;
}

uint64_t sub_5C6DC(uint64_t a1, uint64_t a2)
{
  return sub_5C6F4(a1, a2, (void (*)(uint64_t))&static UTType.audio.getter);
}

uint64_t sub_5C6F4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_A314(&qword_19D360);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_145680();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  sub_145630();
  sub_145620();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_5C3E4((uint64_t)v6);
    char v14 = 0;
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    a3(v15);
    char v14 = sub_145670();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16(v11, v7);
    v16(v13, v7);
  }
  return v14 & 1;
}

uint64_t sub_5C8E0(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = sub_144E20();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_145290();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  sub_A314(&qword_19EB20);
  v2[19] = swift_task_alloc();
  uint64_t v5 = sub_144F60();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_5CADC, 0, 0);
}

uint64_t sub_5CADC()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = (char *)v0[19];
  sub_5E2A0(0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1248C(v0[19], &qword_19EB20);
LABEL_9:
    sub_1CF0C();
    swift_allocError();
    *char v13 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  (*(void (**)(void, void, void))(v0[21] + 32))(v0[25], v0[19], v0[20]);
  sub_144E30();
  char v4 = sub_5C444();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v5 = self;
  v0[26] = v5;
  id v6 = [v5 defaultManager];
  sub_144F10();
  NSString v7 = sub_145B80();
  swift_bridgeObjectRelease();
  unsigned int v8 = [v6 fileExistsAtPath:v7];

  if (!v8)
  {
LABEL_8:
    (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
    goto LABEL_9;
  }
  uint64_t v9 = dword_1A0C98;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[27] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_5CDA8;
  uint64_t v11 = v0[25];
  return ((uint64_t (*)(uint64_t))((char *)&dword_1A0C98 + v9))(v11);
}

uint64_t sub_5CDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = sub_5D7C4;
  }
  else
  {
    v8[28] = a2;
    v8[29] = a3;
    v8[30] = a1;
    uint64_t v9 = sub_5CF10;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_5CF10()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  int v4 = *(_DWORD *)(v0 + 224);
  int v3 = *(_DWORD *)(v0 + 228);
  *(void *)(v0 + 16) = v2;
  *(_DWORD *)(v0 + 24) = v4;
  *(_DWORD *)(v0 + 28) = v3;
  *(void *)(v0 + 32) = v1;
  double Seconds = CMTimeGetSeconds((CMTime *)(v0 + 16));
  *(void *)(v0 + 40) = v2;
  *(_DWORD *)(v0 + 48) = v4;
  *(_DWORD *)(v0 + 52) = v3;
  *(void *)(v0 + 56) = v1;
  double v6 = CMTimeGetSeconds((CMTime *)(v0 + 40));
  id v7 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  unsigned int v8 = v7;
  if (v6 >= 60.0)
  {
    if (v6 <= 3600.0) {
      goto LABEL_6;
    }
    uint64_t v9 = &selRef_setAllowedUnits_;
    uint64_t v10 = 224;
  }
  else
  {
    [v7 setAllowedUnits:192];
    uint64_t v9 = &selRef_setZeroFormattingBehavior_;
    uint64_t v10 = 0x10000;
  }
  objc_msgSend(v8, *v9, v10);
LABEL_6:
  id v11 = [v8 stringFromTimeInterval:v6];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_145BC0();
    uint64_t v15 = v14;
  }
  else
  {

    uint64_t v13 = 0;
    uint64_t v15 = (void *)0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_60EF8(1uLL, v13, (unint64_t)v15);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_145C40();
    uint64_t v15 = v16;
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v17 + *(int *)(v18 + 20)))
  {
    sub_1467D0(38);
    swift_bridgeObjectRelease();
    v76._countAndFlagsBits = v13;
    v76._object = v15;
    sub_145C90(v76);
    v77._countAndFlagsBits = 0x3E7669642F3CLL;
    v77._object = (void *)0xE600000000000000;
    sub_145C90(v77);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = 0x800000000014C910;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v19;
    void *v19 = v0;
    v19[1] = sub_5DF14;
    uint64_t v20 = *(void *)(v0 + 88);
    return sub_543BC(v20, 0, 0, 0, 0, 0, 0, 0xD00000000000001ELL);
  }
  else
  {
    uint64_t v64 = v18;
    v65._countAndFlagsBits = v13;
    v65._object = v15;
    id v72 = *(id *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v67 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 168);
    uint64_t v68 = *(void **)(v0 + 160);
    uint64_t v25 = *(void *)(v0 + 136);
    uint64_t v24 = *(void *)(v0 + 144);
    uint64_t v27 = *(void *)(v0 + 120);
    uint64_t v26 = *(void *)(v0 + 128);
    uint64_t v28 = *(void *)(v0 + 112);
    uint64_t v66 = *(void *)(v0 + 104);
    sub_E3C18(v22);
    sub_145280();
    uint64_t v29 = sub_145240();
    uint64_t v31 = v30;
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    *(void *)(v0 + 64) = v29;
    *(void *)(v0 + 72) = v31;
    (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v27, enum case for URL.DirectoryHint.inferFromPath(_:), v66);
    sub_12060();
    sub_144F50();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v66);
    swift_bridgeObjectRelease();
    long long v32 = *(void (**)(uint64_t, id))(v23 + 8);
    uint64_t v33 = v68;
    v32(v22, v68);
    sub_144E30();
    sub_144EE0();
    swift_bridgeObjectRelease();
    uint64_t v69 = v32;
    v32(v67, v33);
    uint64_t v34 = sub_144E90();
    id v36 = v35;
    id v37 = [v72 defaultManager];
    sub_144EB0(v38);
    id v40 = v39;
    sub_144EB0(v41);
    uint64_t v43 = v42;
    *(void *)(v0 + 80) = 0;
    LODWORD(v31) = [v37 copyItemAtURL:v40 toURL:v42 error:v0 + 80];

    uint64_t v44 = *(void **)(v0 + 80);
    if (v31)
    {
      id v73 = *(id *)(v0 + 160);
      uint64_t v74 = *(void *)(v0 + 192);
      uint64_t v45 = *(void *)(v0 + 88);
      id v46 = v44;
      sub_1467D0(116);
      v78._countAndFlagsBits = 0xD00000000000003FLL;
      v78._object = (void *)0x800000000014C930;
      sub_145C90(v78);
      uint64_t v47 = (uint64_t *)(v45 + *(int *)(v64 + 36));
      uint64_t v48 = *v47;
      uint64_t v49 = (void *)v47[1];
      swift_bridgeObjectRetain();
      v79._countAndFlagsBits = v48;
      v79._object = v49;
      sub_145C90(v79);
      swift_bridgeObjectRelease();
      v80._countAndFlagsBits = 47;
      v80._object = (void *)0xE100000000000000;
      sub_145C90(v80);
      v81._countAndFlagsBits = v34;
      v81._object = v36;
      sub_145C90(v81);
      swift_bridgeObjectRelease();
      v82._countAndFlagsBits = 0xD00000000000001ALL;
      v82._object = (void *)0x800000000014C970;
      sub_145C90(v82);
      uint64_t v50 = (objc_class *)[self mainBundle];
      v83._countAndFlagsBits = 0xD000000000000034;
      v63._countAndFlagsBits = 0x800000000014C9D0;
      v83._object = (void *)0x800000000014C990;
      v88.value._countAndFlagsBits = 0;
      v88.value._object = 0;
      v51.super.Class isa = v50;
      v89._countAndFlagsBits = 0;
      v89._object = (void *)0xE000000000000000;
      uint64_t v52 = sub_144CC0(v83, v88, v51, v89, v63);
      uint64_t v54 = v53;

      v84._countAndFlagsBits = v52;
      v84._object = v54;
      sub_145C90(v84);
      swift_bridgeObjectRelease();
      v85._countAndFlagsBits = 0xD000000000000012;
      v85._object = (void *)0x800000000014CA20;
      sub_145C90(v85);
      sub_1467D0(38);
      swift_bridgeObjectRelease();
      sub_145C90(v65);
      v86._countAndFlagsBits = 0x3E7669642F3CLL;
      v86._object = (void *)0xE600000000000000;
      sub_145C90(v86);
      swift_bridgeObjectRelease();
      v87._countAndFlagsBits = 0xD00000000000001ELL;
      v87._object = (void *)0x800000000014C910;
      sub_145C90(v87);
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_6CAB0(0, (void *)0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0);
      uint64_t v70 = v56;
      uint64_t v71 = v55;
      swift_bridgeObjectRelease();
      v69(v74, v73);
      v69(*(void *)(v0 + 200), *(id *)(v0 + 160));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v57(v71, v70);
    }
    else
    {
      uint64_t v59 = *(void *)(v0 + 192);
      uint64_t v58 = *(void *)(v0 + 200);
      uint64_t v60 = *(void **)(v0 + 160);
      id v61 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_144D90();

      swift_willThrow();
      v69(v59, v60);
      v69(v58, v60);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v62 = *(uint64_t (**)(void))(v0 + 8);
      return v62();
    }
  }
}

uint64_t sub_5D7C4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v1 + *(int *)(v2 + 20)))
  {
    sub_1467D0(38);
    swift_bridgeObjectRelease();
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    sub_145C90(v58);
    v59._countAndFlagsBits = 0x3E7669642F3CLL;
    v59._object = (void *)0xE600000000000000;
    sub_145C90(v59);
    swift_bridgeObjectRelease();
    v0[31] = 0x800000000014C910;
    int v3 = (void *)swift_task_alloc();
    v0[32] = v3;
    *int v3 = v0;
    v3[1] = sub_5DF14;
    uint64_t v4 = v0[11];
    return sub_543BC(v4, 0, 0, 0, 0, 0, 0, 0xD00000000000001ELL);
  }
  else
  {
    id v55 = (id)v0[26];
    uint64_t v6 = v0[22];
    uint64_t v49 = v0[23];
    uint64_t v7 = v0[21];
    uint64_t v51 = v0[20];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[18];
    uint64_t v10 = v0[15];
    uint64_t v11 = v0[16];
    uint64_t v12 = v0[14];
    uint64_t v47 = v2;
    uint64_t v48 = v0[13];
    sub_E3C18(v6);
    sub_145280();
    uint64_t v13 = sub_145240();
    uint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v11);
    v0[8] = v13;
    v0[9] = v15;
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v48);
    sub_12060();
    sub_144F50();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v48);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(id, uint64_t))(v7 + 8);
    uint64_t v17 = v51;
    v16((id)v6, v51);
    sub_144E30();
    sub_144EE0();
    swift_bridgeObjectRelease();
    uint64_t v52 = v16;
    v16((id)v49, v17);
    uint64_t v18 = sub_144E90();
    uint64_t v20 = v19;
    id v21 = [v55 defaultManager];
    sub_144EB0(v22);
    uint64_t v24 = v23;
    sub_144EB0(v25);
    uint64_t v27 = v26;
    v0[10] = 0;
    LODWORD(v7) = [v21 copyItemAtURL:v24 toURL:v26 error:v0 + 10];

    uint64_t v28 = (void *)v0[10];
    if (v7)
    {
      uint64_t v54 = v0[20];
      id v56 = (id)v0[24];
      uint64_t v29 = v0[11];
      id v30 = v28;
      sub_1467D0(116);
      v60._countAndFlagsBits = 0xD00000000000003FLL;
      v60._object = (void *)0x800000000014C930;
      sub_145C90(v60);
      uint64_t v31 = (uint64_t *)(v29 + *(int *)(v47 + 36));
      uint64_t v32 = *v31;
      uint64_t v33 = (void *)v31[1];
      swift_bridgeObjectRetain();
      v61._countAndFlagsBits = v32;
      v61._object = v33;
      sub_145C90(v61);
      swift_bridgeObjectRelease();
      v62._countAndFlagsBits = 47;
      v62._object = (void *)0xE100000000000000;
      sub_145C90(v62);
      v63._countAndFlagsBits = v18;
      v63._object = v20;
      sub_145C90(v63);
      swift_bridgeObjectRelease();
      v64._countAndFlagsBits = 0xD00000000000001ALL;
      v64._object = (void *)0x800000000014C970;
      sub_145C90(v64);
      uint64_t v34 = (objc_class *)[self mainBundle];
      v65._countAndFlagsBits = 0xD000000000000034;
      v46._countAndFlagsBits = 0x800000000014C9D0;
      v65._object = (void *)0x800000000014C990;
      v71.value._countAndFlagsBits = 0;
      v71.value._object = 0;
      v35.super.Class isa = v34;
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      uint64_t v36 = sub_144CC0(v65, v71, v35, v72, v46);
      uint64_t v38 = v37;

      v66._countAndFlagsBits = v36;
      v66._object = v38;
      sub_145C90(v66);
      swift_bridgeObjectRelease();
      v67._countAndFlagsBits = 0xD000000000000012;
      v67._object = (void *)0x800000000014CA20;
      sub_145C90(v67);
      sub_1467D0(38);
      swift_bridgeObjectRelease();
      v68._countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      sub_145C90(v68);
      v69._countAndFlagsBits = 0x3E7669642F3CLL;
      v69._object = (void *)0xE600000000000000;
      sub_145C90(v69);
      swift_bridgeObjectRelease();
      v70._countAndFlagsBits = 0xD00000000000001ELL;
      v70._object = (void *)0x800000000014C910;
      sub_145C90(v70);
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_6CAB0(0, (void *)0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0);
      uint64_t v50 = v39;
      swift_bridgeObjectRelease();
      v52(v56, v54);
      v52((id)v0[25], v0[20]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v40 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
      return v40(v53, v50);
    }
    else
    {
      uint64_t v42 = (void *)v0[24];
      uint64_t v41 = (void *)v0[25];
      uint64_t v43 = v0[20];
      id v44 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_144D90();

      swift_willThrow();
      v52(v42, v43);
      v52(v41, v43);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = (uint64_t (*)(void))v0[1];
      return v45();
    }
  }
}

uint64_t sub_5DF14(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 264) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v7 = sub_5E1A4;
  }
  else
  {
    *(void *)(v6 + 272) = a2;
    *(void *)(v6 + 280) = a1;
    uint64_t v7 = sub_5E090;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_5E090()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_5E1A4()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_5E2A0@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v157 = a2;
  uint64_t v156 = a1;
  uint64_t v132 = a3;
  uint64_t v4 = sub_A314(&qword_19D360);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v137 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v134 = (char *)&v115 - v7;
  uint64_t v144 = sub_145680();
  unint64_t v136 = *(void (***)(char *, char *, uint64_t))(v144 - 8);
  uint64_t v8 = __chkstk_darwin(v144);
  uint64_t v127 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v126 = (char *)&v115 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v133 = (char *)&v115 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v143 = (char *)&v115 - v15;
  __chkstk_darwin(v14);
  unint64_t v124 = (char *)&v115 - v16;
  uint64_t v154 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v17 = __chkstk_darwin(v154);
  uint64_t v149 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v155 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v115 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v151 = (uint64_t)&v115 - v22;
  __chkstk_darwin(v21);
  uint64_t v152 = (uint64_t)&v115 - v23;
  uint64_t v24 = sub_A314(&qword_19EB20);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v135 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  char v147 = (char *)&v115 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v129 = (uint64_t)&v115 - v30;
  __chkstk_darwin(v29);
  uint64_t v139 = (char *)&v115 - v31;
  uint64_t v32 = sub_144F60();
  uint64_t v138 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v125 = (char *)&v115 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v146 = (char *)&v115 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  int64_t v123 = (char *)&v115 - v38;
  __chkstk_darwin(v37);
  uint64_t v140 = (char *)&v115 - v39;
  uint64_t v161 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v40 = __chkstk_darwin(v161);
  v148 = (id *)((char *)&v115 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (uint64_t)&v115 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v141 = (id *)((char *)&v115 - v46);
  __chkstk_darwin(v45);
  uint64_t v160 = (uint64_t *)((char *)&v115 - v47);
  uint64_t v128 = v3;
  unint64_t v48 = *(void *)(v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments);
  if (v48 >> 62) {
    goto LABEL_87;
  }
  uint64_t v49 = *(void *)((char *)&dword_10 + (v48 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
LABEL_3:
  uint64_t v153 = v32;
  if (v49)
  {
    unint64_t v159 = v48 & 0xC000000000000001;
    uint64_t v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56);
    uint64_t v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
    BOOL v145 = (void (**)(char *, uint64_t, uint64_t))(v138 + 32);
    uint64_t v131 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 6);
    unint64_t v118 = (void (**)(char *, uint64_t, uint64_t))(v136 + 4);
    uint64_t v116 = v136 + 2;
    uint64_t v50 = 4;
    unint64_t v158 = v48;
    uint64_t v130 = (void (**)(char *, uint64_t))(v138 + 8);
    uint64_t v117 = (void (**)(char *, uint64_t))(v136 + 1);
    while (1)
    {
      uint64_t v52 = v50 - 4;
      if (v159)
      {
        uint64_t v53 = sub_146810();
        uint64_t v54 = v50 - 3;
        if (__OFADD__(v52, 1)) {
          goto LABEL_85;
        }
      }
      else
      {
        uint64_t v53 = *(void *)(v48 + 8 * v50);
        swift_retain();
        uint64_t v54 = v50 - 3;
        if (__OFADD__(v52, 1))
        {
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          swift_bridgeObjectRetain_n();
          uint64_t v49 = sub_146930();
          goto LABEL_3;
        }
      }
      uint64_t v55 = v53 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType;
      sub_60FA8(v53 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, v44, type metadata accessor for AssetAttachment.AssetType);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v51 = *(void **)v44;
          swift_release();

          goto LABEL_6;
        case 2u:
          if (v157)
          {
            uint64_t v57 = (void *)v44;
            goto LABEL_83;
          }
          uint64_t v56 = *(void *)(v53 + 16);
          uint64_t v57 = (void *)v44;
          goto LABEL_16;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v58 = v55;
          Swift::String v59 = v148;
          sub_60FA8(v58, (uint64_t)v148, type metadata accessor for AssetAttachment.AssetType);
          uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v61 = (uint64_t)v59;
          uint64_t v62 = (uint64_t)v149;
          switch(EnumCaseMultiPayload)
          {
            case 1:

              uint64_t v63 = (uint64_t)v147;
              (*v142)(v147, 1, 1, v32);
              goto LABEL_28;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v61 = (uint64_t)v59 + *(int *)(sub_A314(&qword_19D368) + 48);
              goto LABEL_21;
            default:
LABEL_21:
              Swift::String v64 = v155;
              sub_610B0(v61, (uint64_t)v155, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              sub_60FA8((uint64_t)v64, v62, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v63 = (uint64_t)v147;
                (*v145)(v147, v62, v32);
              }
              else
              {
                type metadata accessor for Journaling();
                uint64_t v65 = v135;
                sub_621B8(v135);
                uint64_t v32 = v153;
                swift_bridgeObjectRelease();
                if ((*v150)(v65, 1, v32) == 1)
                {
                  sub_1248C(v65, &qword_19EB20);
                  uint64_t v66 = 1;
                  uint64_t v63 = (uint64_t)v147;
                  goto LABEL_27;
                }
                Swift::String v67 = *v145;
                Swift::String v68 = v125;
                (*v145)(v125, v65, v32);
                Swift::String v69 = v147;
                v67(v147, (uint64_t)v68, v32);
                uint64_t v63 = (uint64_t)v69;
              }
              uint64_t v66 = 0;
LABEL_27:
              (*v142)((char *)v63, v66, 1, v32);
              sub_61010((uint64_t)v155, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_28:
              uint64_t v57 = (void *)(v44 + *(int *)(sub_A314(&qword_19D368) + 48));
              if ((*v150)(v63, 1, v32) == 1)
              {
                sub_1248C(v63, &qword_19EB20);
                goto LABEL_33;
              }
              (*v145)(v146, v63, v32);
              sub_144E30();
              uint64_t v71 = v70;
              swift_bridgeObjectRetain();
              Swift::String v72 = v143;
              sub_145630();
              uint64_t v73 = (uint64_t)v137;
              sub_145620();
              uint64_t v74 = v144;
              if ((*v131)(v73, 1, v144) == 1)
              {
                sub_1248C(v73, &qword_19D360);
                swift_bridgeObjectRelease();
LABEL_32:
                uint64_t v32 = v153;
                (*v130)(v146, v153);
LABEL_33:
                sub_61010((uint64_t)v57, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                goto LABEL_34;
              }
              uint64_t v121 = v71;
              uint64_t v122 = v57;
              uint64_t v75 = v126;
              (*v118)(v126, v73, v74);
              sub_145660();
              int v119 = sub_145670();
              unint64_t v120 = *v117;
              v120(v72, v74);
              Swift::String v76 = v127;
              (*v116)(v127, v75, v74);
              if (v119)
              {
                Swift::String v77 = v75;
                Swift::String v78 = v120;
                v120(v77, v74);
                v78(v76, v74);
                swift_bridgeObjectRelease();
                uint64_t v57 = v122;
              }
              else
              {
                sub_145650();
                int v119 = sub_145670();
                Swift::String v79 = v72;
                Swift::String v80 = v120;
                v120(v79, v74);
                v80(v75, v74);
                v80(v76, v74);
                swift_bridgeObjectRelease();
                uint64_t v57 = v122;
                if ((v119 & 1) == 0) {
                  goto LABEL_32;
                }
              }
              Swift::String v81 = *v130;
              uint64_t v32 = v153;
              if (v157)
              {
                unint64_t v112 = v146;
                goto LABEL_82;
              }
              uint64_t v56 = *(void *)(v53 + 16);
              v81(v146, v153);
LABEL_16:
              sub_61010((uint64_t)v57, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (v56 == v156) {
                goto LABEL_84;
              }
LABEL_34:
              swift_release();
              unint64_t v48 = v158;
LABEL_6:
              ++v50;
              if (v54 == v49) {
                goto LABEL_40;
              }
              break;
          }
          break;
        default:
          sub_61010(v44, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          swift_release();
          goto LABEL_6;
      }
    }
  }
LABEL_40:
  swift_bridgeObjectRelease_n();
  unint64_t v48 = *(void *)(v128 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_sourceAttachments);
  if (!(v48 >> 62))
  {
    uint64_t v82 = *(void *)((char *)&dword_10 + (v48 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    if (v82) {
      goto LABEL_42;
    }
LABEL_89:
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v132, 1, 1, v32);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v82 = sub_146930();
  if (!v82) {
    goto LABEL_89;
  }
LABEL_42:
  unint64_t v159 = v48 & 0xC000000000000001;
  uint64_t v155 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
  uint64_t v149 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56);
  uint64_t v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 32);
  v148 = (id *)(v136 + 6);
  uint64_t v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 4);
  Swift::String v83 = (char *)(v136 + 1);
  v136 += 2;
  Swift::String v84 = (void (**)(char *, uint64_t))(v138 + 8);
  uint64_t v44 = 4;
  unint64_t v158 = v48;
  uint64_t v146 = (char *)(v138 + 8);
  char v147 = (char *)v82;
  unint64_t v137 = v83;
  while (2)
  {
    uint64_t v86 = v44 - 4;
    if (v159)
    {
      uint64_t v87 = sub_146810();
      uint64_t v88 = v44 - 3;
      if (__OFADD__(v86, 1)) {
        goto LABEL_86;
      }
    }
    else
    {
      uint64_t v87 = *(void *)(v48 + 8 * v44);
      swift_retain();
      uint64_t v88 = v44 - 3;
      if (__OFADD__(v86, 1)) {
        goto LABEL_86;
      }
    }
    uint64_t v89 = v87 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType;
    sub_60FA8(v87 + OBJC_IVAR____TtC15JournalSettings15AssetAttachment_assetType, (uint64_t)v160, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        Swift::String v85 = (void *)*v160;
        swift_release();

        goto LABEL_44;
      case 2u:
        if (v157)
        {
          uint64_t v57 = v160;
          goto LABEL_83;
        }
        uint64_t v90 = *(void *)(v87 + 16);
        uint64_t v57 = v160;
        goto LABEL_54;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t v91 = v89;
        uint64_t v92 = v141;
        sub_60FA8(v91, (uint64_t)v141, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v93 = swift_getEnumCaseMultiPayload();
        uint64_t v94 = (uint64_t)v92;
        switch(v93)
        {
          case 1:

            uint64_t v95 = (uint64_t)v139;
            (*v149)(v139, 1, 1, v32);
            goto LABEL_66;
          case 4:
            swift_bridgeObjectRelease();
            uint64_t v94 = (uint64_t)v92 + *(int *)(sub_A314(&qword_19D368) + 48);
            goto LABEL_59;
          default:
LABEL_59:
            uint64_t v96 = v152;
            sub_610B0(v94, v152, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            sub_60FA8(v96, v151, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v95 = (uint64_t)v139;
              (*v150)((uint64_t)v139, v151, v32);
            }
            else
            {
              type metadata accessor for Journaling();
              uint64_t v97 = v129;
              sub_621B8(v129);
              swift_bridgeObjectRelease();
              if ((*v155)(v97, 1, v32) == 1)
              {
                sub_1248C(v97, &qword_19EB20);
                uint64_t v98 = 1;
                uint64_t v95 = (uint64_t)v139;
                goto LABEL_65;
              }
              unint64_t v99 = *v150;
              char v100 = v123;
              (*v150)((uint64_t)v123, v97, v32);
              uint64_t v101 = v139;
              v99((uint64_t)v139, (uint64_t)v100, v32);
              Swift::String v84 = (void (**)(char *, uint64_t))v146;
              uint64_t v95 = (uint64_t)v101;
            }
            uint64_t v98 = 0;
LABEL_65:
            (*v149)((char *)v95, v98, 1, v32);
            sub_61010(v152, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_66:
            uint64_t v102 = sub_A314(&qword_19D368);
            uint64_t v57 = (void *)((char *)v160 + *(int *)(v102 + 48));
            if ((*v155)(v95, 1, v32) == 1)
            {
              sub_1248C(v95, &qword_19EB20);
              goto LABEL_76;
            }
            (*v150)((uint64_t)v140, v95, v32);
            sub_144E30();
            unint64_t v104 = v103;
            swift_bridgeObjectRetain();
            id v105 = v143;
            sub_145630();
            uint64_t v106 = v144;
            uint64_t v107 = (uint64_t)v134;
            sub_145620();
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v148)(v107, 1, v106) == 1)
            {
              sub_1248C(v107, &qword_19D360);
              swift_bridgeObjectRelease();
              uint64_t v82 = (uint64_t)v147;
LABEL_75:
              uint64_t v32 = v153;
              (*v84)(v140, v153);
LABEL_76:
              sub_61010((uint64_t)v57, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              goto LABEL_77;
            }
            BOOL v145 = v104;
            unint64_t v108 = v124;
            ((void (*)(char *, uint64_t, uint64_t))*v142)(v124, v107, v106);
            sub_145660();
            char v109 = sub_145670();
            uint64_t v110 = *(void (**)(char *, uint64_t))v137;
            (*(void (**)(char *, uint64_t))v137)(v105, v106);
            (*v136)(v133, v108, v106);
            if (v109)
            {
              v110(v108, v106);
              v110(v133, v106);
              swift_bridgeObjectRelease();
              Swift::String v84 = (void (**)(char *, uint64_t))v146;
              uint64_t v82 = (uint64_t)v147;
            }
            else
            {
              sub_145650();
              uint64_t v111 = v133;
              LODWORD(v135) = sub_145670();
              v110(v105, v106);
              v110(v108, v106);
              v110(v111, v106);
              swift_bridgeObjectRelease();
              Swift::String v84 = (void (**)(char *, uint64_t))v146;
              uint64_t v82 = (uint64_t)v147;
              if ((v135 & 1) == 0) {
                goto LABEL_75;
              }
            }
            Swift::String v81 = *v84;
            uint64_t v32 = v153;
            if ((v157 & 1) == 0)
            {
              uint64_t v90 = *(void *)(v87 + 16);
              v81(v140, v153);
LABEL_54:
              sub_61010((uint64_t)v57, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (v90 == v156) {
                goto LABEL_84;
              }
LABEL_77:
              swift_release();
              unint64_t v48 = v158;
LABEL_44:
              ++v44;
              if (v88 == v82) {
                goto LABEL_89;
              }
              continue;
            }
            unint64_t v112 = v140;
LABEL_82:
            v81(v112, v32);
LABEL_83:
            sub_61010((uint64_t)v57, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_84:
            char v113 = v132;
            swift_bridgeObjectRelease_n();
            sub_D2630(v113);
            return swift_release();
        }
      default:
        sub_61010((uint64_t)v160, type metadata accessor for AssetAttachment.AssetType.FilePathType);
        swift_release();
        goto LABEL_44;
    }
  }
}

uint64_t sub_5F718(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_5C8E0(a1);
}

double sub_5F7AC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C738);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10VideoAssetC9VideoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10VideoAsset_metadata))
  {
    swift_retain();
    sub_31170((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_610B0((uint64_t)v8, (uint64_t)v12, _s10VideoAssetC9VideoDataVMa);
      uint64_t v13 = (uint64_t *)&v12[*(int *)(v9 + 24)];
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      sub_2647C((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_61010((uint64_t)v12, _s10VideoAssetC9VideoDataVMa);
      uint64_t v16 = _s6ResultVMa_1(0);
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = sub_60B4C(&qword_19DD00, (void (*)(uint64_t))_s6ResultVMa_1);
      *(void *)(a1 + 40) = sub_60B4C(&qword_19DD08, (void (*)(uint64_t))_s6ResultVMa_1);
      uint64_t v17 = sub_484D0((uint64_t *)a1);
      uint64_t *v17 = v15;
      v17[1] = v14;
      sub_12384((uint64_t)v5, (uint64_t)v17 + *(int *)(v16 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1248C((uint64_t)v8, &qword_19C738);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

double sub_5FA70@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C758);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10PhotoAsset_metadata))
  {
    swift_retain();
    sub_30E3C((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_610B0((uint64_t)v8, (uint64_t)v12, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v13 = (uint64_t *)&v12[*(int *)(v9 + 24)];
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      sub_2647C((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_61010((uint64_t)v12, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v16 = _s6ResultVMa_0(0);
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = sub_60B4C(&qword_19DD10, (void (*)(uint64_t))_s6ResultVMa_0);
      *(void *)(a1 + 40) = sub_60B4C(&qword_19DD18, (void (*)(uint64_t))_s6ResultVMa_0);
      uint64_t v17 = sub_484D0((uint64_t *)a1);
      uint64_t *v17 = v15;
      v17[1] = v14;
      sub_12384((uint64_t)v5, (uint64_t)v17 + *(int *)(v16 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1248C((uint64_t)v8, &qword_19C758);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

double sub_5FD34@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C778);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_metadata))
  {
    swift_retain();
    sub_31B0C((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_610B0((uint64_t)v8, (uint64_t)v12, _s14LivePhotoAssetC13LivePhotoDataVMa);
      uint64_t v13 = (uint64_t *)&v12[*(int *)(v9 + 24)];
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      sub_2647C((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_61010((uint64_t)v12, _s14LivePhotoAssetC13LivePhotoDataVMa);
      uint64_t v16 = _s11descr182F89C6ResultVMa(0);
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = sub_60B4C(&qword_19DD20, (void (*)(uint64_t))_s11descr182F89C6ResultVMa);
      *(void *)(a1 + 40) = sub_60B4C(&qword_19DD28, (void (*)(uint64_t))_s11descr182F89C6ResultVMa);
      uint64_t v17 = sub_484D0((uint64_t *)a1);
      uint64_t *v17 = v15;
      v17[1] = v14;
      sub_12384((uint64_t)v5, (uint64_t)v17 + *(int *)(v16 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1248C((uint64_t)v8, &qword_19C778);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_5FFF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19DEE0);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_1(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_61B84();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = sub_1469E0();
  v12[1] = v15;
  sub_145230();
  char v21 = 1;
  sub_60B4C(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_12384((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_60FA8((uint64_t)v12, v18, _s6ResultVMa_1);
  sub_C7FC((uint64_t)a1);
  return sub_61010((uint64_t)v12, _s6ResultVMa_1);
}

uint64_t sub_602E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19DEF8);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_0(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_61BD8();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = sub_1469E0();
  v12[1] = v15;
  sub_145230();
  char v21 = 1;
  sub_60B4C(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_12384((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_60FA8((uint64_t)v12, v18, _s6ResultVMa_0);
  sub_C7FC((uint64_t)a1);
  return sub_61010((uint64_t)v12, _s6ResultVMa_0);
}

uint64_t sub_605D4(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v8 = sub_A314(a2);
  uint64_t v13 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  a3();
  sub_146D10();
  char v15 = 0;
  sub_146A90();
  if (!v5)
  {
    v12(0);
    char v14 = 1;
    sub_145230();
    sub_60B4C(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v8);
}

uint64_t sub_607A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19DF10);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s11descr182F89C6ResultVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_61C2C();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = sub_1469E0();
  v12[1] = v15;
  sub_145230();
  char v21 = 1;
  sub_60B4C(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_12384((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_60FA8((uint64_t)v12, v18, _s11descr182F89C6ResultVMa);
  sub_C7FC((uint64_t)a1);
  return sub_61010((uint64_t)v12, _s11descr182F89C6ResultVMa);
}

uint64_t sub_60A9C(uint64_t a1)
{
  uint64_t result = sub_60B4C(&qword_19DCD8, (void (*)(uint64_t))_s14LivePhotoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_60AF4(uint64_t a1)
{
  uint64_t result = sub_60B4C(&qword_19DCE0, (void (*)(uint64_t))_s10PhotoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_60B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_60B94(uint64_t a1)
{
  uint64_t result = sub_60B4C(&qword_19DCE8, (void (*)(uint64_t))_s10VideoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_60BEC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_60BF8(uint64_t a1)
{
  unint64_t v2 = sub_61B84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_60C34(uint64_t a1)
{
  unint64_t v2 = sub_61B84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_60C70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5FFF4(a1, a2);
}

uint64_t sub_60C88(void *a1)
{
  return sub_605D4(a1, &qword_19DEF0, (void (*)(void))sub_61B84, (uint64_t)&_s6ResultV10CodingKeysON_1, (void (*)(void))_s6ResultVMa_1);
}

uint64_t sub_60CD8()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x6D614E6563616C70;
  }
}

uint64_t sub_60D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_620C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_60D38(uint64_t a1)
{
  unint64_t v2 = sub_61BD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_60D74(uint64_t a1)
{
  unint64_t v2 = sub_61BD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_60DB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_602E4(a1, a2);
}

uint64_t sub_60DC8(void *a1)
{
  return sub_605D4(a1, &qword_19DF08, (void (*)(void))sub_61BD8, (uint64_t)&_s6ResultV10CodingKeysON_0, (void (*)(void))_s6ResultVMa_0);
}

uint64_t sub_60E18(uint64_t a1)
{
  unint64_t v2 = sub_61C2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_60E54(uint64_t a1)
{
  unint64_t v2 = sub_61C2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_60E90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_607A8(a1, a2);
}

uint64_t sub_60EA8(void *a1)
{
  return sub_605D4(a1, &qword_19DF20, (void (*)(void))sub_61C2C, (uint64_t)&_s11descr182F89C6ResultV10CodingKeysON, (void (*)(void))_s11descr182F89C6ResultVMa);
}

unint64_t sub_60EF8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_145C80();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_145D20();
}

uint64_t sub_60FA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_61010(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s6ResultVMa_1(uint64_t a1)
{
  return sub_407CC(a1, qword_19DEA8);
}

uint64_t _s6ResultVMa_0(uint64_t a1)
{
  return sub_407CC(a1, qword_19DE18);
}

uint64_t sub_610B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s11descr182F89C6ResultVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19DD88);
}

uint64_t sub_61150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_61164);
}

uint64_t sub_61168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6117C);
}

uint64_t sub_61184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_61198);
}

uint64_t sub_6119C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_611B0);
}

uint64_t *sub_611B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_145230();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_A314(&qword_19C150);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_61328(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_145230();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_613F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_145230();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_6151C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_616B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_145230();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_617C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_61950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_61964);
}

uint64_t sub_61968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_61A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_61A3C);
}

uint64_t sub_61A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_61AEC()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_61B84()
{
  unint64_t result = qword_19DEE8;
  if (!qword_19DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DEE8);
  }
  return result;
}

unint64_t sub_61BD8()
{
  unint64_t result = qword_19DF00;
  if (!qword_19DF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF00);
  }
  return result;
}

unint64_t sub_61C2C()
{
  unint64_t result = qword_19DF18;
  if (!qword_19DF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF18);
  }
  return result;
}

ValueMetadata *_s11descr182F89C6ResultV10CodingKeysOMa()
{
  return &_s11descr182F89C6ResultV10CodingKeysON;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_0()
{
  return &_s6ResultV10CodingKeysON_0;
}

unsigned char *_s11descr182F89C6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x61D70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_1()
{
  return &_s6ResultV10CodingKeysON_1;
}

unint64_t sub_61DAC()
{
  unint64_t result = qword_19DF28;
  if (!qword_19DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF28);
  }
  return result;
}

unint64_t sub_61E04()
{
  unint64_t result = qword_19DF30;
  if (!qword_19DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF30);
  }
  return result;
}

unint64_t sub_61E5C()
{
  unint64_t result = qword_19DF38;
  if (!qword_19DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF38);
  }
  return result;
}

unint64_t sub_61EB4()
{
  unint64_t result = qword_19DF40;
  if (!qword_19DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF40);
  }
  return result;
}

unint64_t sub_61F0C()
{
  unint64_t result = qword_19DF48;
  if (!qword_19DF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF48);
  }
  return result;
}

unint64_t sub_61F64()
{
  unint64_t result = qword_19DF50;
  if (!qword_19DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF50);
  }
  return result;
}

unint64_t sub_61FBC()
{
  unint64_t result = qword_19DF58;
  if (!qword_19DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF58);
  }
  return result;
}

unint64_t sub_62014()
{
  unint64_t result = qword_19DF60;
  if (!qword_19DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF60);
  }
  return result;
}

unint64_t sub_6206C()
{
  unint64_t result = qword_19DF68;
  if (!qword_19DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19DF68);
  }
  return result;
}

uint64_t sub_620C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_621B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_293F8((uint64_t)v4);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_296E0((uint64_t)v4);
    uint64_t v7 = 1;
  }
  else
  {
    sub_144ED0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t sub_6230C(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  sub_A314(&qword_19EB20);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v3 = sub_144E20();
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v4 = sub_144F60();
  v2[25] = v4;
  v2[26] = *(void *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_62478, 0, 0);
}

uint64_t sub_62478()
{
  id v1 = sub_AB138();
  v0[29] = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = v0[18];
    id v4 = [objc_allocWithZone((Class)LPLinkSnapshotGenerator) init];
    v0[30] = v4;
    id v5 = [self currentTraitCollection];
    uint64_t v6 = (double *)(v3 + *(int *)(type metadata accessor for ExportOptions() + 48));
    id v7 = objc_msgSend(objc_allocWithZone((Class)LPLinkSnapshotConfiguration), "initWithTraitCollection:preferredSizeClass:size:scale:", v5, 5, *v6, v6[1], 1.0);
    v0[31] = v7;

    sub_A314(&qword_19C130);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_159A20;
    *(void *)(v8 + 32) = v7;
    sub_145E00();
    sub_638D0();
    id v9 = v7;
    Class isa = sub_145DD0().super.isa;
    v0[32] = isa;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[7] = v0 + 17;
    v0[3] = sub_62748;
    uint64_t v11 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_62ED8;
    v0[13] = &unk_1870E0;
    v0[14] = v11;
    [v4 snapshotForMetadata:v2 configurations:isa completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    sub_1CF0C();
    swift_allocError();
    *uint64_t v12 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_62748()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    id v2 = sub_62E1C;
  }
  else {
    id v2 = sub_62858;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_62858()
{
  uint64_t v1 = *(void **)(v0 + 136);

  if (v1[2])
  {
    uint64_t v3 = v1[4];
    unint64_t v2 = v1[5];
    sub_C4D4(v3, v2);
    swift_bridgeObjectRelease();
    id v4 = objc_allocWithZone((Class)UIImage);
    sub_C4D4(v3, v2);
    Class isa = sub_144F90().super.isa;
    uint64_t v6 = (UIImage *)[v4 initWithData:isa];
    sub_C52C(v3, v2);

    if (v6)
    {
      id v7 = UIImageHEICRepresentation(v6);
      if (v7)
      {
        uint64_t v8 = v7;
        unint64_t v48 = v6;
        uint64_t v9 = *(void *)(v0 + 216);
        uint64_t v51 = *(void *)(v0 + 208);
        uint64_t v10 = *(void *)(v0 + 192);
        uint64_t v47 = *(void *)(v0 + 200);
        uint64_t v11 = *(void *)(v0 + 184);
        uint64_t v45 = *(void *)(v0 + 176);
        uint64_t v49 = sub_144FA0();
        unint64_t v50 = v12;

        uint64_t v52 = sub_145240();
        uint64_t v53 = v13;
        v55._countAndFlagsBits = 0x636965682ELL;
        v55._object = (void *)0xE500000000000000;
        sub_145C90(v55);
        sub_E3C18(v9);
        *(void *)(v0 + 120) = v52;
        *(void *)(v0 + 128) = v53;
        (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v45);
        sub_12060();
        sub_144F50();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v45);
        uint64_t v14 = v9;
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        v15(v14, v47);
        sub_144FB0();
        id v22 = [*(id *)(v0 + 232) URL];
        uint64_t v46 = v15;
        if (v22)
        {
          uint64_t v23 = v22;
          sub_144EF0();

          uint64_t v24 = 0;
        }
        else
        {
          uint64_t v24 = 1;
        }
        uint64_t v25 = *(void *)(v0 + 200);
        uint64_t v26 = *(void *)(v0 + 208);
        uint64_t v28 = *(void *)(v0 + 160);
        uint64_t v27 = *(void *)(v0 + 168);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v24, 1, v25);
        sub_63910(v28, v27);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25))
        {
          sub_296E0(*(void *)(v0 + 168));
          uint64_t v29 = 0;
          uint64_t v30 = (void *)0xE000000000000000;
        }
        else
        {
          uint64_t v31 = *(void *)(v0 + 216);
          uint64_t v32 = *(void *)(v0 + 200);
          uint64_t v33 = *(void *)(v0 + 168);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 208) + 16))(v31, v33, v32);
          sub_296E0(v33);
          uint64_t v29 = sub_144E40();
          uint64_t v30 = v34;
          v46(v31, v32);
        }
        uint64_t v35 = *(void **)(v0 + 240);
        uint64_t v43 = *(void *)(v0 + 224);
        uint64_t v44 = *(void **)(v0 + 248);
        uint64_t v41 = *(void **)(v0 + 232);
        uint64_t v42 = *(void *)(v0 + 200);
        uint64_t v36 = *(void *)(v0 + 144);
        v56._countAndFlagsBits = v29;
        v56._object = v30;
        sub_145C90(v56);
        swift_bridgeObjectRelease();
        v57._countAndFlagsBits = 15911;
        v57._object = (void *)0xE200000000000000;
        sub_145C90(v57);
        uint64_t v37 = sub_6C958(v52, v53, v36, 0, 0, 0, 0, 0x3D6665726820613CLL, (void *)0xE900000000000027, 1046556476, (void *)0xE400000000000000);
        uint64_t v39 = v38;

        swift_bridgeObjectRelease();
        sub_C52C(v49, v50);

        swift_bridgeObjectRelease();
        sub_C52C(v3, v2);

        v46(v43, v42);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v40(v37, v39);
      }
    }
    sub_C52C(v3, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void **)(v0 + 240);
  uint64_t v16 = *(void **)(v0 + 248);
  uint64_t v18 = *(void **)(v0 + 232);
  sub_1CF0C();
  swift_allocError();
  unsigned char *v19 = 6;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_62E1C()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = (void *)v0[30];
  unint64_t v2 = (void *)v0[31];
  id v4 = (void *)v0[29];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_62ED8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_A314(&qword_19C160);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    **(void **)(*(void *)(v2 + 64) + 40) = sub_145DE0();
    return _swift_continuation_throwingResume(v2);
  }
}

uint64_t sub_62F9C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_6230C(a1);
}

id sub_63030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19EB20);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  id result = sub_AB138();
  if (!result)
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  uint64_t v16 = result;
  id v17 = [result URL];
  if (!v17)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v12, 1, 1, v2);
    goto LABEL_7;
  }
  uint64_t v18 = v17;
  uint64_t v27 = v14;
  sub_144EF0();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v19(v12, v5, v2);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v20(v12, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
  {
    uint64_t v14 = v27;
LABEL_7:
    id v21 = [v16 originalURL];
    if (v21)
    {
      id v22 = v21;
      sub_144EF0();

      uint64_t v23 = 0;
      uint64_t v16 = v22;
    }
    else
    {
      uint64_t v23 = 1;
    }

    v20(v9, v23, 1, v2);
    sub_63910((uint64_t)v9, (uint64_t)v14);
    sub_296E0((uint64_t)v12);
    goto LABEL_12;
  }

  uint64_t v24 = v27;
  v19(v27, v12, v2);
  uint64_t v14 = v24;
  v20(v24, 0, 1, v2);
LABEL_12:
  *(void *)(a1 + 24) = _s6ResultVMa_2();
  *(void *)(a1 + 32) = sub_643AC(&qword_19DF90, (void (*)(uint64_t))_s6ResultVMa_2);
  *(void *)(a1 + 40) = sub_643AC(&qword_19DF98, (void (*)(uint64_t))_s6ResultVMa_2);
  uint64_t v25 = sub_484D0((uint64_t *)a1);
  return (id)sub_63910((uint64_t)v14, (uint64_t)v25);
}

uint64_t sub_63394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19E030);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_2();
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_642F4();
  sub_146D00();
  if (!v2)
  {
    sub_144F60();
    sub_643AC(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146A20();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_63910((uint64_t)v6, (uint64_t)v12);
    sub_64348((uint64_t)v12, v15);
  }
  return sub_C7FC((uint64_t)a1);
}

uint64_t sub_635DC(uint64_t a1)
{
  uint64_t result = sub_643AC(&qword_19DF70, (void (*)(uint64_t))_s9LinkAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_63634()
{
  return 7107189;
}

uint64_t sub_63644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_146B90();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_636CC(uint64_t a1)
{
  unint64_t v2 = sub_642F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_63708(uint64_t a1)
{
  unint64_t v2 = sub_642F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_63744@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_63394(a1, a2);
}

uint64_t sub_6375C(void *a1)
{
  uint64_t v2 = sub_A314(&qword_19E048);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_642F4();
  sub_146D10();
  sub_144F60();
  sub_643AC(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_146AD0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_638D0()
{
  unint64_t result = qword_19DF88;
  if (!qword_19DF88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19DF88);
  }
  return result;
}

uint64_t sub_63910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s6ResultVMa_2()
{
  uint64_t result = qword_19DFF8;
  if (!qword_19DFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_639C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_A314(&qword_19EB20) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_144F60();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_63B1C(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_63BEC(void *a1, const void *a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_63CFC(void *a1, void *a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_63E78(void *a1, const void *a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_63F88(void *a1, void *a2)
{
  uint64_t v4 = sub_144F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_A314(&qword_19EB20);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_64104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_64118);
}

uint64_t sub_64118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19EB20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_64188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6419C);
}

uint64_t sub_6419C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19EB20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_64210()
{
  sub_6429C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_6429C()
{
  if (!qword_19D508)
  {
    sub_144F60();
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19D508);
    }
  }
}

unint64_t sub_642F4()
{
  unint64_t result = qword_19E038;
  if (!qword_19E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E038);
  }
  return result;
}

uint64_t sub_64348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ResultVMa_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_643AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x64490);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_2()
{
  return &_s6ResultV10CodingKeysON_2;
}

unint64_t sub_644CC()
{
  unint64_t result = qword_19E058;
  if (!qword_19E058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E058);
  }
  return result;
}

unint64_t sub_64524()
{
  unint64_t result = qword_19E060;
  if (!qword_19E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E060);
  }
  return result;
}

unint64_t sub_6457C()
{
  unint64_t result = qword_19E068[0];
  if (!qword_19E068[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_19E068);
  }
  return result;
}

uint64_t sub_645D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_64620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (unint64_t *)(a3 + 40);
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        uint64_t v10 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_7DB80(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v12 = *((void *)v6 + 2);
          unint64_t v11 = *((void *)v6 + 3);
          if (v12 >= v11 >> 1) {
            uint64_t v6 = sub_7DB80((double *)(v11 > 1), v12 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v12 + 1;
          int v7 = &v6[2 * v12];
          *((void *)v7 + 4) = v9;
          *((void *)v7 + 5) = v8;
        }
      }
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    if (*((void *)v6 + 2)) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)&_swiftEmptyArrayStorage[2]) {
    goto LABEL_16;
  }
LABEL_14:
  sub_A314(&qword_19C708);
  sub_64880();
  uint64_t v13 = sub_145A50();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ThreadSafeSet()
{
  return sub_145A4();
}

uint64_t sub_647C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_64814()
{
  return sub_E6E4();
}

uint64_t sub_64830()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ThreadSafeArray()
{
  return sub_145A4();
}

unint64_t sub_64880()
{
  unint64_t result = qword_19E170;
  if (!qword_19E170)
  {
    sub_12244(&qword_19C708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E170);
  }
  return result;
}

uint64_t sub_648E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_145230();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_A314(&qword_19C150);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = &v29[-v13];
  __chkstk_darwin(v12);
  uint64_t v16 = &v29[-v15];
  if (qword_19ADF8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_145920();
  swift_release();
  if (v29[15])
  {
    id v17 = [v2 momentDateForSorting];
    if (v17)
    {
      uint64_t v18 = v17;
      sub_1451E0();

      uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v19(v14, v7, v4);
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v14, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) != 1) {
        return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v19)(a1, v14, v4);
      }
    }
    else
    {
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v14, 1, 1, v4);
    }
    id v25 = [v2 entryDate];
    if (v25)
    {
      uint64_t v26 = v25;
      sub_1451E0();

      uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v27(v11, v7, v4);
      v20(v11, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
      {
        v27(a1, v11, v4);
LABEL_18:
        uint64_t v28 = (uint64_t)v14;
        return sub_36894(v28);
      }
    }
    else
    {
      v20(v11, 1, 1, v4);
    }
    sub_145220();
    sub_36894((uint64_t)v11);
    goto LABEL_18;
  }
  id v22 = [v2 entryDate];
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1451E0();

    uint64_t v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
    v24(v16, v7, v4);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) != 1) {
      return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v24)(a1, v16, v4);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  }
  sub_145220();
  uint64_t v28 = (uint64_t)v16;
  return sub_36894(v28);
}

uint64_t sub_64D28(char *a1, char *a2)
{
  return sub_56A70(*a1, *a2);
}

Swift::Int sub_64D34()
{
  return sub_146CD0();
}

uint64_t sub_64DC0()
{
  sub_145C70();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_64E38()
{
  return sub_146CD0();
}

uint64_t sub_64EC0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_184A30;
  v8._object = v3;
  Swift::Int v5 = sub_1469B0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_64F20(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7461447972746E65;
  if (*v1) {
    uint64_t v2 = 0x6144746E656D6F6DLL;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006574;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_64F68()
{
  return sub_145DB0();
}

uint64_t sub_64FC8()
{
  return sub_145D70();
}

uint64_t sub_65018()
{
  sub_65074();
  uint64_t result = sub_145910();
  qword_19E178 = result;
  return result;
}

unint64_t sub_65074()
{
  unint64_t result = qword_19E180;
  if (!qword_19E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E180);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JournalSortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x65194);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalSortOrder()
{
  return &type metadata for JournalSortOrder;
}

unint64_t sub_651D0()
{
  unint64_t result = qword_19E188;
  if (!qword_19E188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E188);
  }
  return result;
}

uint64_t sub_65224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_6522C()
{
  type metadata accessor for UniformDateBins(319);
  if (v0 <= 0x3F)
  {
    sub_66610();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_65300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(qword_19E190);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_145430();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      id v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = type metadata accessor for UniformDateBins(0);
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 24));
    uint64_t v21 = *(int *)(a3 + 28);
    id v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_145230();
    id v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = sub_A314(&qword_19C930);
    v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_655C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_145430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + *(int *)(v4 + 20);
    uint64_t v7 = sub_145230();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + *(int *)(v4 + 24);
    uint64_t v9 = sub_145450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 28);
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = sub_A314(&qword_19C930);
  v12(v10 + *(int *)(v13 + 36), v11);

  return swift_bridgeObjectRelease();
}

char *sub_65774(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_145230();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v24 = sub_A314(&qword_19C930);
  v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_659E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v29 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(a1, a2, v29);
      uint64_t v30 = *(int *)(v6 + 20);
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      uint64_t v33 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
      uint64_t v34 = *(int *)(v6 + 24);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
      goto LABEL_7;
    }
    sub_65D64((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v21 + 20)] = *(void *)&a2[*(int *)(v21 + 20)];
  *(void *)&a1[*(int *)(v21 + 24)] = *(void *)&a2[*(int *)(v21 + 24)];
  uint64_t v22 = *(int *)(a3 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_145230();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  uint64_t v27 = sub_A314(&qword_19C930);
  v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_65D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarBinningUnit(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_65DC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_145430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_145230();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_145450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_145230();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = sub_A314(&qword_19C930);
  v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  return a1;
}

char *sub_66030(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v29 = sub_145430();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(a1, a2, v29);
      uint64_t v30 = *(int *)(v6 + 20);
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      uint64_t v33 = sub_145230();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
      uint64_t v34 = *(int *)(v6 + 24);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = sub_145450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
      goto LABEL_7;
    }
    sub_65D64((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_A314(qword_19E190);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_145430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_145230();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_145450();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v21 + 20)] = *(void *)&a2[*(int *)(v21 + 20)];
  *(void *)&a1[*(int *)(v21 + 24)] = *(void *)&a2[*(int *)(v21 + 24)];
  uint64_t v22 = *(int *)(a3 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_145230();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  uint64_t v27 = sub_A314(&qword_19C930);
  v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_663A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_663B8);
}

uint64_t sub_663B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UniformDateBins(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_A314(&qword_19C930);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_664D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_664E4);
}

uint64_t sub_664E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UniformDateBins(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_A314(&qword_19C930);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DateBinDictionary()
{
  return sub_145A4();
}

void sub_66610()
{
  if (!qword_19E218)
  {
    sub_145230();
    sub_66674();
    unint64_t v0 = sub_145AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19E218);
    }
  }
}

unint64_t sub_66674()
{
  unint64_t result = qword_19C940;
  if (!qword_19C940)
  {
    sub_145230();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19C940);
  }
  return result;
}

uint64_t sub_666CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_666E8(uint64_t a1, uint64_t (*a2)(void, void *, void, void *))
{
  return a2(*(void *)(v2 + *(int *)(a1 + 32)), &type metadata for Int, *(void *)(a1 + 16), &protocol witness table for Int);
}

uint64_t sub_6672C()
{
  return sub_1459F0();
}

uint64_t sub_6676C(uint64_t a1)
{
  sub_145A00();
  return sub_140334(v3, a1);
}

uint64_t sub_667D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_66800(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.startIndex.getter, a2);
}

uint64_t sub_667E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_66800(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.endIndex.getter, a2);
}

uint64_t sub_66800@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void *, void, void *)@<X2>, uint64_t a3@<X8>)
{
  uint64_t result = sub_666E8(a1, a2);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  return result;
}

void (*sub_66834(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)malloc(0x40uLL);
  *a1 = v5;
  sub_12244(&qword_19C930);
  uint64_t v6 = *(void *)(a3 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[4] = TupleTypeMetadata2;
  uint64_t v8 = *(void *)(TupleTypeMetadata2 - 8);
  v5[5] = v8;
  uint64_t v9 = (char *)malloc(*(void *)(v8 + 64));
  v5[6] = (uint64_t)v9;
  uint64_t v10 = sub_669F8(v5);
  uint64_t v12 = v11;
  v5[7] = (uint64_t)v10;
  sub_39B90(v13, (uint64_t)v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], v12, v6);
  return sub_66980;
}

void sub_66980(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_669F8(uint64_t *a1))(void *a1)
{
  sub_12244(&qword_19C930);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  a1[2] = (uint64_t)v4;
  sub_6676C((uint64_t)v4);
  return sub_66AFC;
}

void sub_66AFC(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void sub_66B58(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

uint64_t sub_66B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_67160(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t sub_66BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_67160(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

uint64_t sub_66BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_6672C();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_66C38(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = sub_6672C();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = sub_262F8(v2, v3, v4);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  return result;
}

uint64_t sub_66CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  uint64_t v6 = sub_666E8(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.startIndex.getter);
  uint64_t v8 = v7;
  char v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1468F0();
  uint64_t v12 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 8) = v8;
  *(unsigned char *)(v12 + 16) = v10 & 1;
  return result;
}

uint64_t sub_66DD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_66E24()
{
  return 2;
}

uint64_t sub_66E2C(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_6715C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_66EBC()
{
  return sub_145D60();
}

uint64_t sub_66EE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_66EFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_66F18()
{
  return swift_getWitnessTable();
}

uint64_t sub_66F34()
{
  return swift_getWitnessTable();
}

uint64_t sub_66F50(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_146110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  char v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_145A80();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_145A80();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_67160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_145A80();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScheduledReminder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScheduledReminder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for ScheduledReminder(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ScheduledReminder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledReminder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledReminder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledReminder()
{
  return &type metadata for ScheduledReminder;
}

uint64_t sub_67550@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v30 = a3;
  uint64_t v29 = sub_145360();
  uint64_t v3 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145370();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v6 = v23;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_145320();
  uint64_t v24 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_145230();
  uint64_t v26 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_145450();
  uint64_t v16 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_145410();
  sub_1451F0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Calendar.MatchingPolicy.nextTime(_:), v9);
  uint64_t v19 = v5;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Calendar.RepeatedTimePolicy.first(_:), v5);
  char v20 = v28;
  uint64_t v21 = v29;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v28, enum case for Calendar.SearchDirection.forward(_:), v29);
  sub_1453B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v25);
}

uint64_t sub_67928(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  uint64_t v6 = sub_A314(&qword_19E240);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_67FE0();
  sub_146D10();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_A314(&qword_19E230);
  sub_68034(&qword_19E248);
  sub_146B10();
  if (!v3)
  {
    char v13 = 1;
    sub_146B00();
    char v12 = 2;
    sub_146B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_67B04()
{
  uint64_t v1 = 1920298856;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574756E696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737961646B656577;
  }
}

uint64_t sub_67B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_67C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_67B7C(uint64_t a1)
{
  unint64_t v2 = sub_67FE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_67BB8(uint64_t a1)
{
  unint64_t v2 = sub_67FE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_67BF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_67D84(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_67C24(void *a1)
{
  return sub_67928(a1, *v1, v1[1]);
}

uint64_t sub_67C44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737961646B656577 && a2 == 0xE800000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1920298856 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_67D84(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19E220);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_2F114(a1, v7);
  sub_67FE0();
  sub_146D00();
  if (v1)
  {
    sub_C7FC((uint64_t)a1);
  }
  else
  {
    sub_A314(&qword_19E230);
    v9[7] = 0;
    sub_68034(&qword_19E238);
    sub_146A60();
    uint64_t v7 = v10;
    void v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_146A50();
    v9[5] = 2;
    sub_146A50();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_C7FC((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_67FE0()
{
  unint64_t result = qword_19E228;
  if (!qword_19E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E228);
  }
  return result;
}

uint64_t sub_68034(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19E230);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScheduledReminder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x68164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledReminder.CodingKeys()
{
  return &type metadata for ScheduledReminder.CodingKeys;
}

unint64_t sub_681A0()
{
  unint64_t result = qword_19E250;
  if (!qword_19E250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E250);
  }
  return result;
}

unint64_t sub_681F8()
{
  unint64_t result = qword_19E258;
  if (!qword_19E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E258);
  }
  return result;
}

unint64_t sub_68250()
{
  unint64_t result = qword_19E260;
  if (!qword_19E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E260);
  }
  return result;
}

void *DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.unsafeMutableAddressor()
{
  return &static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY;
}

const char *DataConfig.spotlightDomain.unsafeMutableAddressor()
{
  return "Journal";
}

void *DataConfig.spotlightBundleIdentifier.unsafeMutableAddressor()
{
  return &static DataConfig.spotlightBundleIdentifier;
}

void *DataConfig.APP_GROUP.unsafeMutableAddressor()
{
  return &static DataConfig.APP_GROUP;
}

void *DataConfig.prioritizeDownloadNotification.unsafeMutableAddressor()
{
  return &static DataConfig.prioritizeDownloadNotification;
}

const char *DataConfig.downloadIDKey.unsafeMutableAddressor()
{
  return "downloadIDKey";
}

void *DataConfig.downloadPriorityKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadPriorityKey;
}

void *DataConfig.downloadTypeKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadTypeKey;
}

NSURLFileProtectionType sub_68308()
{
  qword_1A3BA8 = 0xD000000000000017;
  qword_1A3BB0 = 0x800000000014CA90;
  qword_1A3BB8 = (uint64_t)NSURLFileProtectionCompleteUnlessOpen;
  return NSURLFileProtectionCompleteUnlessOpen;
}

NSFileProtectionType sub_68340()
{
  type metadata accessor for DataStackConfiguration();
  swift_allocObject();
  qword_1A3BC0 = (uint64_t)sub_D24F8(0x73746E656D6F6DLL, 0xE700000000000000, 0x73746E656D6F6DLL, 0xE700000000000000, NSFileProtectionCompleteUnlessOpen, 0, 0xD000000000000011, 0x800000000014AA20, 0xD000000000000017, 0x800000000014CA90);

  return NSFileProtectionCompleteUnlessOpen;
}

const char *DataConfig.COREDATA_MODEL_NAME.unsafeMutableAddressor()
{
  return "moments";
}

const char *DataConfig.COREDATA_FILENAME.unsafeMutableAddressor()
{
  return "moments";
}

void *DataConfig.CONTAINER_ID.unsafeMutableAddressor()
{
  return &static DataConfig.CONTAINER_ID;
}

void *DataConfig.APP_BUNDLE_ID.unsafeMutableAddressor()
{
  return &static DataConfig.APP_BUNDLE_ID;
}

unint64_t static DataConfig.spotlightBundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static DataConfig.APP_GROUP.getter()
{
  return 0xD000000000000017;
}

uint64_t static DataConfig.COREDATA_MODEL_NAME.getter()
{
  return 0x73746E656D6F6DLL;
}

const char *DataConfig.ZONE_NAME.unsafeMutableAddressor()
{
  return "JurassicZone";
}

uint64_t static DataConfig.ZONE_NAME.getter()
{
  return 0x636973736172754ALL;
}

void *DataConfig.ZONE_SUBSCRIPTION_ID.unsafeMutableAddressor()
{
  return &static DataConfig.ZONE_SUBSCRIPTION_ID;
}

unint64_t static DataConfig.ZONE_SUBSCRIPTION_ID.getter()
{
  return 0xD000000000000025;
}

void *DataConfig.METADATA_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_KEY;
}

unint64_t static DataConfig.METADATA_KEY.getter()
{
  return 0xD000000000000015;
}

void *DataConfig.METADATA_USER_ID_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_USER_ID_KEY;
}

unint64_t static DataConfig.METADATA_USER_ID_KEY.getter()
{
  return 0xD00000000000001BLL;
}

const char *DataConfig.RECORD_TYPE_JOURNAL_ENTRY.unsafeMutableAddressor()
{
  return "JournalEntry";
}

uint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY.getter()
{
  return 0x456C616E72756F4ALL;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.getter()
{
  return 0xD000000000000011;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static DataConfig.prioritizeDownloadNotification.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static DataConfig.downloadPriorityKey.getter()
{
  return 0xD000000000000013;
}

uint64_t static DataConfig.downloadIDKey.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static DataConfig.downloadTypeKey.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static DataConfig.spotlightDomain.getter()
{
  return 0x6C616E72756F4ALL;
}

uint64_t static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.getter()
{
  return 100;
}

uint64_t type metadata accessor for DataConfig()
{
  return self;
}

id sub_68678(double a1)
{
  uint64_t v2 = sub_144E20();
  uint64_t v56 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v55 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v45 - v9;
  uint64_t v10 = sub_1456B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_145760();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1456E0();
  uint64_t v48 = *(void *)(v21 - 8);
  uint64_t v49 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19AE10 != -1) {
    swift_once();
  }
  uint64_t v54 = v6;
  uint64_t v24 = sub_C584(v17, (uint64_t)qword_19E300);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v24, v17);
  sub_1456C0();
  sub_1456A0();
  uint64_t v46 = v23;
  uint64_t v25 = sub_1456D0();
  os_signpost_type_t v26 = sub_146390();
  if (sub_1465A0())
  {
    uint64_t v45 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
    v27(v14, v16, v10);
    uint64_t v29 = v2;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_145690();
    _os_signpost_emit_with_name_impl(&def_94138, v25, v26, v31, "LoadThumbnail", "", v30, 2u);
    uint64_t v2 = v29;
    swift_slowDealloc();

    uint64_t v32 = v45;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v28);
  }
  else
  {

    uint64_t v32 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
  }
  v27(v14, v16, v28);
  sub_145720();
  swift_allocObject();
  sub_145710();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v28);
  uint64_t v33 = v50;
  uint64_t v57 = sub_144F00(1);
  uint64_t v58 = v34;
  sub_12060();
  sub_146660();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = v51;
  uint64_t v38 = v47;
  uint64_t v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v47, v33, v54);
  if (!v36) {
    sub_144F00(1);
  }
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v38, v39);
  sub_C84C(0, (unint64_t *)&qword_19D190);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v53, 1, 1, v39);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  uint64_t v41 = v52;
  sub_144F30();
  id v42 = sub_46CE0(a1);
  v40(v41, v39);
  uint64_t v43 = (uint64_t)v46;
  sub_68DCC((uint64_t)v46, (unint64_t)"LoadThumbnail", 13, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v49);
  return v42;
}

uint64_t sub_68D04()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E300);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19E300);
  if (qword_19AF78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3DB8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_68DCC(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_1456F0();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1456B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  char v14 = &v23[-v13];
  uint64_t v15 = sub_1456D0();
  sub_145700();
  int v24 = sub_146380();
  if ((sub_1465A0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_47A6C();
LABEL_10:
  swift_retain();
  sub_145730();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  char v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)char v20 = 0;
  os_signpost_id_t v21 = sub_145690();
  _os_signpost_emit_with_name_impl(&def_94138, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

void sub_690E4(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_A314(&qword_19E318);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  id v25 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  uint64_t v4 = self;
  sub_144EB0(v5);
  uint64_t v7 = v6;
  id v8 = [v4 readingIntentWithURL:v6 options:8];

  sub_144EB0(v9);
  uint64_t v11 = v10;
  id v12 = [v4 writingIntentWithURL:v10 options:8];

  sub_A314(&qword_19C130);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_159A30;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v12;
  aBlock[0] = v13;
  sub_145E00();
  sub_C84C(0, &qword_19E320);
  id v14 = v8;
  id v15 = v12;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [objc_allocWithZone((Class)NSOperationQueue) init];
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v1);
  unint64_t v18 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v19 + v18, (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  aBlock[4] = sub_69714;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23244;
  aBlock[3] = &unk_1875D0;
  char v20 = _Block_copy(aBlock);
  id v21 = v14;
  id v22 = v15;
  swift_release();
  id v23 = v25;
  [v25 coordinateAccessWithIntents:isa queue:v17 byAccessor:v20];
  _Block_release(v20);
}

uint64_t sub_693F8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
  }
  else
  {
    id v10 = [self defaultManager];
    id v11 = [a2 URL];
    sub_144EF0();

    sub_144EB0(v12);
    id v14 = v13;
    id v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v9, v6);
    id v16 = [a3 URL];
    sub_144EF0();

    sub_144EB0(v17);
    uint64_t v19 = v18;
    v15(v9, v6);
    id v25 = 0;
    unsigned int v20 = [v10 moveItemAtURL:v14 toURL:v19 error:&v25];

    id v21 = v25;
    if (v20)
    {
      sub_A314(&qword_19E318);
      return sub_145ED0();
    }
    id v23 = v21;
    a1 = (void *)sub_144D90();
  }
  swift_willThrow();
  id v25 = a1;
  sub_A314(&qword_19E318);
  return sub_145EC0();
}

uint64_t sub_6963C()
{
  uint64_t v1 = sub_A314(&qword_19E318);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_69714(void *a1)
{
  sub_A314(&qword_19E318);
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);

  return sub_693F8(a1, v3, v4);
}

uint64_t sub_6978C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6979C()
{
  return swift_release();
}

uint64_t sub_697A4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E328);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19E328);
  if (qword_19AF48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D28);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_6986C(uint64_t a1, uint64_t a2)
{
  uint64_t v128 = sub_145230();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v5 = __chkstk_darwin(v128);
  int v119 = &v112[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = v6;
  __chkstk_darwin(v5);
  uint64_t v135 = &v112[-v7];
  uint64_t v8 = sub_145290();
  uint64_t v132 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v117 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v125 = &v112[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v124 = &v112[-v14];
  uint64_t v116 = v15;
  __chkstk_darwin(v13);
  unint64_t v137 = &v112[-v16];
  uint64_t v17 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v112[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_144F60();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v130 = &v112[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v26 = &v112[-v25];
  __chkstk_darwin(v24);
  uint64_t v28 = &v112[-v27];
  uint64_t v29 = &v2[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_sessionID];
  uint64_t v30 = v2;
  uint64_t v121 = v29;
  sub_145280();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(&v30[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_customBundleURL], 1, 1, v20);
  uint64_t v131 = v30;
  v30[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_persistentStoresLoadSuccess] = 0;
  uint64_t v136 = a1;
  sub_46530();
  uint64_t v126 = a2;
  sub_6C638(a2, (uint64_t)v19);
  int v31 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v133 = v20;
  uint64_t v138 = v28;
  uint64_t v129 = v21;
  uint64_t v134 = v8;
  if (v31 == 1)
  {
    sub_296E0((uint64_t)v19);
    uint64_t v32 = v8;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v26, v19, v20);
    if (qword_19AE18 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_145760();
    sub_C584(v33, (uint64_t)qword_19E328);
    uint64_t v34 = v130;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v130, v26, v20);
    uint64_t v35 = sub_145740();
    os_log_type_t v36 = sub_146210();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v38 = sub_146B50();
      uint64_t v147 = sub_3D2B4(v38, v39, &aBlock);
      uint64_t v20 = v133;
      uint64_t v21 = v129;
      sub_146610();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
      _os_log_impl(&def_94138, v35, v36, "(sharedCoredataInit) customModelURL assigned :%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v28 = v138;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
    }

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 40))(v28, v26, v20);
    uint64_t v32 = v134;
  }
  if (qword_19AE18 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_145760();
  uint64_t v130 = (unsigned char *)sub_C584(v40, (uint64_t)qword_19E328);
  uint64_t v41 = sub_145740();
  os_log_type_t v42 = sub_146210();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315138;
    swift_beginAccess();
    sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v44 = sub_146B50();
    uint64_t v147 = sub_3D2B4(v44, v45, &aBlock);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v41, v42, "(sharedCoredataInit) Using modelURL :%s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v46 = v132;
  swift_beginAccess();
  id v47 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_144EB0(v48);
  uint64_t v50 = v49;
  id v51 = [v47 initWithContentsOfURL:v49];

  if (v51)
  {
    uint64_t v52 = v136;
    id v53 = objc_allocWithZone((Class)NSPersistentContainer);
    swift_bridgeObjectRetain();
    id v54 = v51;
    NSString v55 = sub_145B80();
    swift_bridgeObjectRelease();
    id v56 = [v53 initWithName:v55 managedObjectModel:v54];

    id v123 = v54;
    uint64_t v57 = &unk_1A3000;
    uint64_t v58 = v131;
    uint64_t v120 = OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container;
    *(void *)&v131[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container] = v56;
    id v59 = sub_6AAAC(v52);
    sub_A314(&qword_19C130);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_159A20;
    *(void *)(v60 + 32) = v59;
    uint64_t aBlock = v60;
    sub_145E00();
    sub_C84C(0, &qword_19E380);
    id v61 = v56;
    id v122 = v59;
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
    [v61 setPersistentStoreDescriptions:isa];

    uint64_t v63 = (char *)v46[2];
    Swift::String v64 = v137;
    ((void (*)(unsigned char *, char *, uint64_t))v63)(v137, v121, v32);
    uint64_t v65 = v124;
    uint64_t v121 = v63;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v63)(v124, v64, v32);
    uint64_t v66 = v32;
    Swift::String v67 = v58;
    Swift::String v68 = sub_145740();
    os_log_type_t v69 = sub_146210();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v115 = (char *)(v46 + 2);
      uint64_t v72 = v71;
      uint64_t v114 = swift_slowAlloc();
      uint64_t aBlock = v114;
      *(_DWORD *)uint64_t v72 = 136446466;
      int v113 = v70;
      sub_6C910((unint64_t *)&qword_19D5F0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v73 = sub_146B50();
      uint64_t v139 = sub_3D2B4(v73, v74, &aBlock);
      sub_146610();
      swift_bridgeObjectRelease();
      unint64_t v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v75 = v120;
      id v76 = [*(id *)&v58[v120] name];
      uint64_t v77 = sub_145BC0();
      unint64_t v79 = v78;

      Swift::String v64 = v137;
      uint64_t v80 = v77;
      uint64_t v58 = v131;
      uint64_t v139 = sub_3D2B4(v80, v79, &aBlock);
      uint64_t v57 = (void *)&unk_1A3000;
      sub_146610();

      swift_bridgeObjectRelease();
      _os_log_impl(&def_94138, v68, (os_log_type_t)v113, "%{public}s (sharedCoredataInit) -> CoreDataStack init for container %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Swift::String v81 = v135;
      uint64_t v82 = v75;
    }
    else
    {
      unint64_t v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);

      Swift::String v81 = v135;
      uint64_t v82 = v120;
    }
    sub_145220();
    id v83 = [*(id *)&v58[v82] viewContext];
    *(void *)&v67[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_context] = v83;
    uint64_t aBlock = 1;
    type metadata accessor for NSMergePolicyType(0);
    id v84 = v83;
    [v84 setMergePolicy:sub_146C00()];

    swift_unknownObjectRelease();
    Swift::String v85 = (objc_class *)type metadata accessor for CoreDataStackShared();
    v146.receiver = v67;
    v146.super_class = v85;
    uint64_t v86 = (char *)objc_msgSendSuper2(&v146, "init");
    int v87 = MKBGetDeviceLockState();
    uint64_t v88 = v125;
    if (v87 == 1)
    {
      uint64_t v89 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v125, v64, v134);
      uint64_t v90 = sub_145740();
      os_log_type_t v91 = sub_1461F0();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = 136446210;
        sub_6C910((unint64_t *)&qword_19D5F0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v93 = sub_146B50();
        uint64_t v139 = sub_3D2B4(v93, v94, &aBlock);
        sub_146610();
        swift_bridgeObjectRelease();
        uint64_t v95 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);
        _os_log_impl(&def_94138, v90, v91, "%{public}s (sharedCoredataInit) SharedDeviceInfoProvider.isDeviceLocked == TRUE, unable to complete CoreDataStackShared initialization.", v92, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        sub_296E0(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v135, v128);
        v95(v137, v89);
      }
      else
      {

        swift_release();
        uint64_t v110 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);

        sub_296E0(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v81, v128);
        v110(v64, v89);
      }
    }
    else
    {
      uint64_t v131 = *(char **)&v86[v57[380]];
      uint64_t v96 = v117;
      uint64_t v97 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v117, v64, v134);
      uint64_t v98 = v127;
      unint64_t v99 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v127 + 16);
      char v100 = v119;
      uint64_t v132 = v86;
      uint64_t v101 = v128;
      v99(v119, v81, v128);
      unint64_t v102 = (*((unsigned __int8 *)v46 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
      unint64_t v103 = (v116 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = v46;
      unint64_t v105 = (*(unsigned __int8 *)(v98 + 80) + v103 + 8) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v106 = swift_allocObject();
      ((void (*)(unint64_t, unsigned char *, uint64_t))v104[4])(v106 + v102, v96, v97);
      *(void *)(v106 + v103) = v132;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v98 + 32))(v106 + v105, v100, v101);
      uint64_t v144 = sub_6C804;
      uint64_t v145 = v106;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v141 = 1107296256;
      uint64_t v142 = sub_6B5B8;
      uint64_t v143 = &unk_187620;
      uint64_t v107 = _Block_copy(&aBlock);
      unint64_t v108 = v132;
      swift_release();
      [v131 loadPersistentStoresWithCompletionHandler:v107];

      _Block_release(v107);
      swift_release();
      sub_296E0(v126);
      uint64_t v109 = v101;
      uint64_t v86 = (char *)v132;
      (*(void (**)(unsigned char *, uint64_t))(v98 + 8))(v135, v109);
      ((void (*)(unsigned char *, uint64_t))v124)(v137, v97);
    }
    (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v138, v133);
    return (uint64_t)v86;
  }
  else
  {
    uint64_t aBlock = 0;
    unint64_t v141 = 0xE000000000000000;
    sub_1467D0(35);
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000021;
    unint64_t v141 = 0x800000000014CC40;
    sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
    v148._countAndFlagsBits = sub_146B50();
    sub_145C90(v148);
    swift_bridgeObjectRelease();
    uint64_t result = sub_146910();
    __break(1u);
  }
  return result;
}

id sub_6AAAC(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 48) == 1) {
    sub_144E70();
  }
  else {
    sub_46690();
  }
  id v6 = objc_allocWithZone((Class)NSPersistentStoreDescription);
  sub_144EB0(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithURL:v8];

  [v10 setShouldInferMappingModelAutomatically:1];
  [v10 setShouldMigrateStoreAutomatically:1];
  sub_145BC0();
  NSString v11 = sub_145B80();
  swift_bridgeObjectRelease();
  [v10 setOption:v11 forKey:NSPersistentStoreFileProtectionKey];

  sub_C84C(0, &qword_19BF90);
  Class isa = sub_146490(1).super.super.isa;
  [v10 setOption:isa forKey:NSPersistentHistoryTrackingKey];

  Class v13 = sub_146490(1).super.super.isa;
  [v10 setOption:v13 forKey:NSPersistentStoreRemoteChangeNotificationPostOptionKey];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

void sub_6ACCC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_145290();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - v17;
  if (a2)
  {
    uint64_t v19 = (void *)sub_144D80();
    if (qword_19AE18 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_145760();
    sub_C584(v20, (uint64_t)qword_19E328);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, a3, v13);
    id v21 = v19;
    uint64_t v22 = sub_145740();
    os_log_type_t v23 = sub_146200();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = v13;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v61 = v59;
      *(_DWORD *)uint64_t v25 = 136446466;
      sub_6C910((unint64_t *)&qword_19D5F0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = sub_146B50();
      double v60 = COERCE_DOUBLE(sub_3D2B4(v26, v27, &v61));
      sub_146610();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v24);
      *(_WORD *)(v25 + 12) = 2112;
      double v60 = *(double *)&v21;
      id v28 = v21;
      sub_146610();
      *(void *)uint64_t v58 = v21;

      _os_log_impl(&def_94138, v22, v23, "%{public}s (sharedCoredataInit) LoadPersistentStores Unresolved error: %@", (uint8_t *)v25, 0x16u);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    }
  }
  else
  {
    uint64_t v54 = a5;
    uint64_t v55 = v16;
    uint64_t v56 = a3;
    a4[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_persistentStoresLoadSuccess] = 1;
    id v29 = [*(id *)&a4[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container] viewContext];
    id v30 = [v29 persistentStoreCoordinator];

    if (v30)
    {
      id v31 = [v30 persistentStores];

      sub_C84C(0, &qword_19E388);
      unint64_t v32 = sub_145DE0();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_146930();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = *(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8));
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
    }
    uint64_t v57 = v12;
    uint64_t v58 = v10;
    if (qword_19AE18 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_145760();
    sub_C584(v34, (uint64_t)qword_19E328);
    uint64_t v35 = a4;
    os_log_type_t v36 = sub_145740();
    os_log_type_t v37 = sub_146210();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v59 = v9;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v61 = v53;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v52 = v39 + 4;
      sub_6C910((unint64_t *)&qword_19D5F0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = sub_146B50();
      double v60 = COERCE_DOUBLE(sub_3D2B4(v40, v41, &v61));
      sub_146610();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2048;
      double v60 = *(double *)&v33;
      sub_146610();
      _os_log_impl(&def_94138, v36, v37, "%{public}s(sharedCoredataInit) persistentStoresCount:%ld", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v9 = v59;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = v54;
    uint64_t v43 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v55, v56, v13);
    unint64_t v45 = v57;
    uint64_t v44 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v42, v9);
    uint64_t v46 = sub_145740();
    os_log_type_t v47 = sub_146210();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v61 = v56;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v54 = v48 + 4;
      sub_6C910((unint64_t *)&qword_19D5F0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v49 = sub_146B50();
      double v60 = COERCE_DOUBLE(sub_3D2B4(v49, v50, &v61));
      sub_146610();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      *(_WORD *)(v48 + 12) = 2048;
      sub_1451C0();
      double v60 = -v51;
      sub_146610();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v59);
      _os_log_impl(&def_94138, v46, v47, "%{public}s (sharedCoredataInit) container.loadPersistentStores completed in %f seconds.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v9);
    }
  }
}

void sub_6B5B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id sub_6B674()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataStackShared();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_6B74C()
{
  return type metadata accessor for CoreDataStackShared();
}

uint64_t type metadata accessor for CoreDataStackShared()
{
  uint64_t result = qword_19E370;
  if (!qword_19E370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_6B7A0()
{
  sub_145290();
  if (v0 <= 0x3F)
  {
    sub_6429C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_6B884()
{
  uint64_t v0 = sub_A314(&qword_19EB20);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v57 - v4;
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v65 = (char *)&v57 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v57 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v57 - v19;
  if (qword_19AE08 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void *)(qword_1A3BC0 + 16);
  swift_retain();
  sub_6C23C((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_296E0((uint64_t)v5);
    if (qword_19AE18 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_145760();
    sub_C584(v22, (uint64_t)qword_19E328);
    os_log_type_t v23 = sub_145740();
    os_log_type_t v24 = sub_1461F0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&def_94138, v23, v24, "(getAppCoreDataInstance) unable to get getJournalAppURL", v25, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    return 0;
  }
  uint64_t v57 = v10;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v5, v6);
  uint64_t v26 = *(void *)(v21 + 24);
  v67[0] = *(void *)(v21 + 16);
  v67[1] = v26;
  swift_bridgeObjectRetain();
  v68._countAndFlagsBits = 0x646D6F6D2ELL;
  v68._object = (void *)0xE500000000000000;
  sub_145C90(v68);
  sub_144ED0();
  swift_bridgeObjectRelease();
  if (qword_19AE18 != -1) {
    swift_once();
  }
  uint64_t v58 = v3;
  uint64_t v27 = sub_145760();
  uint64_t v28 = sub_C584(v27, (uint64_t)qword_19E328);
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v64 = v7 + 16;
  v63(v15, v18, v6);
  uint64_t v59 = (uint8_t *)v28;
  id v29 = sub_145740();
  os_log_type_t v30 = sub_146210();
  BOOL v31 = os_log_type_enabled(v29, v30);
  double v60 = v20;
  uint64_t v61 = v21;
  uint64_t v62 = v18;
  if (v31)
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v32 = 136315138;
    sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v33 = sub_146B50();
    uint64_t v66 = sub_3D2B4(v33, v34, v67);
    sub_146610();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35(v15, v6);
    _os_log_impl(&def_94138, v29, v30, "(getAppCoreDataInstance) modelPathURL:%s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v18 = v62;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35(v15, v6);
  }

  id v36 = [self defaultManager];
  sub_144F00(1);
  NSString v37 = sub_145B80();
  swift_bridgeObjectRelease();
  unsigned int v38 = [v36 fileExistsAtPath:v37];

  if (!v38)
  {
    unint64_t v45 = v57;
    v63(v57, v18, v6);
    uint64_t v46 = sub_145740();
    os_log_type_t v47 = sub_1461F0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v65 = (char *)(v48 + 4);
      sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v49 = sub_146B50();
      uint64_t v66 = sub_3D2B4(v49, v50, v67);
      sub_146610();
      swift_bridgeObjectRelease();
      v35(v45, v6);
      _os_log_impl(&def_94138, v46, v47, "(getAppCoreDataInstance) File doesn't exist at path modelPathURL:%s", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      double v51 = v62;
    }
    else
    {
      swift_release();

      v35(v45, v6);
      double v51 = v18;
    }
    v35(v51, v6);
    v35(v60, v6);
    return 0;
  }
  uint64_t v39 = v65;
  v63(v65, v18, v6);
  uint64_t v40 = sub_145740();
  os_log_type_t v41 = sub_146210();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v59 = v42 + 4;
    sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v43 = sub_146B50();
    uint64_t v66 = sub_3D2B4(v43, v44, v67);
    sub_146610();
    swift_bridgeObjectRelease();
    v35(v39, v6);
    _os_log_impl(&def_94138, v40, v41, "(getAppCoreDataInstance) File exists at path modelPathURL:%s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v35(v39, v6);
  }

  uint64_t v52 = (uint64_t)v58;
  uint64_t v53 = v62;
  v63(v58, v62, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v52, 0, 1, v6);
  objc_allocWithZone((Class)type metadata accessor for CoreDataStackShared());
  uint64_t v54 = swift_retain();
  uint64_t v55 = sub_6986C(v54, v52);
  swift_release();
  v35(v53, v6);
  v35(v60, v6);
  return v55;
}

uint64_t sub_6C23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  type metadata accessor for QueryContainer();
  if (qword_19AE18 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_145760();
  uint64_t v13 = sub_C584(v12, (uint64_t)qword_19E328);
  sub_1D2F8(0xD000000000000011, 0x800000000014AA20, 1, v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_296E0((uint64_t)v4);
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v23 = a1;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    uint64_t v15 = sub_145740();
    os_log_type_t v16 = sub_146210();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_6C910((unint64_t *)&qword_1A1B90, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v18 = sub_146B50();
      uint64_t v24 = sub_3D2B4(v18, v19, &v25);
      sub_146610();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20(v9, v5);
      _os_log_impl(&def_94138, v15, v16, "(getJournalAppURL) appURL: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20(v9, v5);
    }

    a1 = v23;
    sub_144ED0();
    v20(v11, v5);
    uint64_t v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v14, 1, v5);
}

uint64_t sub_6C638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19EB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6C6A0()
{
  uint64_t v1 = sub_145290();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_6C804(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_145290() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_145230() - 8);
  uint64_t v9 = *(unsigned char **)(v2 + v7);
  uint64_t v10 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  sub_6ACCC(a1, a2, v2 + v6, v9, v10);
}

uint64_t sub_6C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_6C908()
{
  return swift_release();
}

uint64_t sub_6C910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6C958(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  sub_1467D0(41);
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "<img src=\"../");
  HIWORD(v24[1]) = -4864;
  os_log_type_t v16 = (uint64_t *)(a3 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v17 = *v16;
  uint64_t v18 = (void *)v16[1];
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = v17;
  v25._object = v18;
  sub_145C90(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 47;
  v26._object = (void *)0xE100000000000000;
  sub_145C90(v26);
  v27._countAndFlagsBits = a1;
  v27._object = a2;
  sub_145C90(v27);
  v28._object = (void *)0x800000000014CCE0;
  v28._countAndFlagsBits = 0xD000000000000017;
  sub_145C90(v28);
  uint64_t v19 = sub_6CAB0(v24[0], (void *)v24[1], a4, a5, a6, a7, a8, a9, a10, a11);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_6CAB0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  v24._countAndFlagsBits = a1;
  v24._object = a2;
  if (a4)
  {
    v25._countAndFlagsBits = a3;
    v25._object = a4;
    sub_145C90(v25);
    v26._countAndFlagsBits = 34;
    v26._object = (void *)0xE100000000000000;
    sub_145C90(v26);
    uint64_t v15 = 0x223D656C797473;
    uint64_t v14 = (void *)0xE700000000000000;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = (void *)0xE000000000000000;
  }
  sub_1467D0(97);
  v27._countAndFlagsBits = 0x7669643C20202020;
  v27._object = (void *)0xED0000223D646920;
  sub_145C90(v27);
  v28._countAndFlagsBits = sub_145240();
  sub_145C90(v28);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x800000000014CD00;
  v29._countAndFlagsBits = 0xD00000000000001CLL;
  sub_145C90(v29);
  v30._countAndFlagsBits = sub_8758(*(unsigned char *)(v10 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type));
  sub_145C90(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 32;
  v31._object = (void *)0xE100000000000000;
  sub_145C90(v31);
  if (a6) {
    uint64_t v16 = a5;
  }
  else {
    uint64_t v16 = 0;
  }
  if (a6) {
    uint64_t v17 = a6;
  }
  else {
    uint64_t v17 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v16;
  v32._object = v17;
  sub_145C90(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 8226;
  v33._object = (void *)0xE200000000000000;
  sub_145C90(v33);
  v34._countAndFlagsBits = v15;
  v34._object = v14;
  sub_145C90(v34);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0x2020202020200A3ELL;
  v35._object = (void *)0xEA00000000002020;
  sub_145C90(v35);
  if (a8) {
    uint64_t v18 = a7;
  }
  else {
    uint64_t v18 = 0;
  }
  if (a8) {
    uint64_t v19 = a8;
  }
  else {
    uint64_t v19 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v36._countAndFlagsBits = v18;
  v36._object = v19;
  sub_145C90(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 0x202020202020200ALL;
  v37._object = (void *)0xE900000000000020;
  sub_145C90(v37);
  sub_145C90(v24);
  v38._countAndFlagsBits = 0x202020202020200ALL;
  v38._object = (void *)0xE900000000000020;
  sub_145C90(v38);
  if (a10) {
    uint64_t v20 = a9;
  }
  else {
    uint64_t v20 = 0;
  }
  if (a10) {
    uint64_t v21 = a10;
  }
  else {
    uint64_t v21 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = v20;
  v39._object = v21;
  sub_145C90(v39);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x642F3C202020200ALL;
  v40._object = (void *)0xEB000000003E7669;
  sub_145C90(v40);
  return 0;
}

uint64_t sub_6CD50()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E390);
  sub_C584(v0, (uint64_t)qword_19E390);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_6CE44(uint64_t a1)
{
  void (*v17)(long long *__return_ptr, uint64_t, uint64_t);
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  long long v33;
  uint64_t v34;
  long long v35;
  uint64_t v36;
  Swift::String v37;

  Swift::String v32 = a1;
  uint64_t v2 = sub_144E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v14 = result;
  }
  else {
    uint64_t v14 = 0;
  }
  if (result) {
    uint64_t v15 = v1;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v15)
  {
    Swift::String v28 = v3;
    Swift::String v29 = v12;
    Swift::String v30 = v7;
    Swift::String v31 = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 16);
    uint64_t v18 = v1;
    v17(&v33, ObjectType, v14);
    if (v34)
    {
      sub_6E0F4(&v33, &v35);
      sub_E3C18((uint64_t)v10);
      uint64_t v19 = v18;
      *(void *)&Swift::String v33 = sub_145240();
      *((void *)&v33 + 1) = v20;
      v37._countAndFlagsBits = 0x6E6F736A2ELL;
      v37._object = (void *)0xE500000000000000;
      sub_145C90(v37);
      uint64_t v21 = v28;
      (*(void (**)(char *, void, uint64_t))(v28 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
      sub_12060();
      uint64_t v22 = v29;
      sub_144F50();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      uint64_t v23 = v31;
      Swift::String v24 = *(void (**)(char *, uint64_t))(v30 + 8);
      v24(v10, v31);
      sub_2F114(&v35, v36);
      sub_144A20();
      swift_allocObject();
      sub_144A10();
      Swift::String v25 = sub_144A00();
      Swift::String v27 = v26;
      swift_release();
      sub_144FB0();
      v24(v22, v23);
      sub_C52C(v25, v27);

      return sub_C7FC((uint64_t)&v35);
    }
    else
    {

      return sub_6E094((uint64_t)&v33);
    }
  }
  return result;
}

uint64_t sub_6D3D0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for ExportOptions();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_6D464, 0, 0);
}

uint64_t sub_6D464()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_144FF0();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_F3680((uint64_t)&off_184528);
  LOBYTE(v1) = sub_369C8(*(unsigned char *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type), v3);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 16);
    int v7 = *(unsigned __int8 *)(v6 + *(int *)(*(void *)(v0 + 32) + 20));
    sub_12AAC(v6, *(void *)(v0 + 40));
    uint64_t v8 = *(void *)(v0 + 40);
    if (v7)
    {
      sub_12B10(v8);
    }
    else
    {
      int v9 = *(unsigned __int8 *)(v8 + *(int *)(*(void *)(v0 + 32) + 24));
      sub_12B10(v8);
      if (v9) {
        sub_6CE44(*(void *)(v0 + 16));
      }
    }
    uint64_t v10 = *(void **)(v0 + 24);
    swift_getObjectType();
    uint64_t v11 = swift_conformsToProtocol2();
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v11) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 0;
    }
    if (v13)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 8) + **(int **)(v12 + 8));
      id v15 = v10;
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 56) = v16;
      *uint64_t v16 = v0;
      v16[1] = sub_6D724;
      uint64_t v17 = *(void *)(v0 + 16);
      return v20(v17, ObjectType, v12);
    }
    else
    {
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_6D960;
      uint64_t v19 = *(void *)(v0 + 16);
      return sub_543BC(v19, 0, 0, 0, 0, 0, 0, 0);
    }
  }
}

uint64_t sub_6D724(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[8] = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = (void *)swift_task_alloc();
    v6[15] = v7;
    *int v7 = v6;
    v7[1] = sub_6DB1C;
    uint64_t v8 = v6[2];
    return sub_543BC(v8, 0, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    v6[9] = a2;
    v6[10] = a1;
    return _swift_task_switch(sub_6D8D0, 0, 0);
  }
}

uint64_t sub_6D8D0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_6D960(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = sub_6DD6C;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    int v7 = sub_6DA94;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_6DA94()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_6DB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 128) = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = sub_6DCE8;
  }
  else
  {
    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    int v7 = sub_6DC50;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_6DC50()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_errorRelease();

  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v3, v2);
}

uint64_t sub_6DCE8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_errorRelease();

  sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_6DD6C()
{
  sub_6DDE0(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_6DDE0(void *a1, double a2)
{
  if (qword_19AE20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_145760();
  sub_C584(v4, (uint64_t)qword_19E390);
  id v14 = a1;
  uint64_t v5 = sub_145740();
  os_log_type_t v6 = sub_1461E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v14;
    sub_146610();
    *uint64_t v8 = v14;

    *(_WORD *)(v7 + 12) = 2080;
    sub_A314(&qword_1A0A00);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1578A0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v10 + 56) = &type metadata for Double;
    *(void *)(v10 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v10 + 32) = Current - a2;
    uint64_t v12 = sub_145BD0();
    sub_3D2B4(v12, v13, &v15);
    sub_146610();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_94138, v5, v6, "%@.exportHTML executed in %ss", (uint8_t *)v7, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_6E094(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19E3B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_6E0F4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_6E10C(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  return _swift_task_switch(sub_6E130, 0, 0);
}

uint64_t sub_6E130()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  *(CFAbsoluteTime *)(v0 + 24) = CFAbsoluteTimeGetCurrent();
  double v2 = sub_40A18(v1);
  double v4 = v3;
  sub_40A18(v1);
  double v6 = -116.0;
  if (v1 != 5) {
    double v6 = -16.0;
  }
  if (v1 == 2) {
    double v6 = -70.0;
  }
  double v7 = (v6 + v5) * 0.5;
  *(double *)(v0 + 32) = v4;
  *(double *)(v0 + 40) = v2;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_6E230;
  return sub_6E7DC(v2, v4, v7);
}

uint64_t sub_6E230(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_6E330, 0, 0);
}

uint64_t sub_6E330()
{
  sub_6E464(v0[2]);
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[7];
  return v1(v2);
}

uint64_t sub_6E39C()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E3B8);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19E3B8);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_6E464(uint64_t a1)
{
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1467D0(83);
  v12._object = (void *)0x800000000014CFD0;
  v12._countAndFlagsBits = 0xD000000000000021;
  sub_145C90(v12);
  type metadata accessor for CGSize(0);
  sub_1468E0();
  v13._countAndFlagsBits = 0x497465737361202CLL;
  v13._object = (void *)0xEB00000000203A64;
  sub_145C90(v13);
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_id);
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_id + 8);
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v2;
  v14._object = v3;
  sub_145C90(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x73746E696F70202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  sub_145C90(v15);
  if (*(void *)(a1 + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_146930();
    swift_bridgeObjectRelease();
  }
  v16._countAndFlagsBits = sub_146B50();
  sub_145C90(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x6574756365786520;
  v17._object = (void *)0xED0000206E692064;
  sub_145C90(v17);
  CFAbsoluteTimeGetCurrent();
  sub_145F90();
  v18._countAndFlagsBits = 0x73646E6F63657320;
  v18._object = (void *)0xE800000000000000;
  sub_145C90(v18);
  uint64_t v5 = v10;
  unint64_t v4 = v11;
  if (qword_19AE28 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_145760();
  sub_C584(v6, (uint64_t)qword_19E3B8);
  swift_bridgeObjectRetain();
  double v7 = sub_145740();
  os_log_type_t v8 = sub_146210();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_3D2B4(v5, v4, &v10);
    sub_146610();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&def_94138, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_6E7DC(double a1, double a2, double a3)
{
  *(void *)(v4 + 168) = v3;
  *(double *)(v4 + 152) = a2;
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 144) = a1;
  sub_145F30();
  *(void *)(v4 + 176) = sub_145F20();
  uint64_t v6 = sub_145EB0();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = v5;
  return _swift_task_switch(sub_6E87C, v6, v5);
}

uint64_t sub_6E87C()
{
  if (((void)v0[18] & 0x7FFFFFFFFFFFFFFFLL) != 0 && ((void)v0[19] & 0x7FFFFFFFFFFFFFFFLL) != 0 && v0[20] > 0.0)
  {
    unint64_t v1 = *(void *)(*((void *)v0 + 21) + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_146930();
      if (!v2) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_19;
      }
    }
    uint64_t v3 = sub_2CAD4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_146810();
      }
      else {
        id v7 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 coordinate];
      MKMapPoint v9 = MKMapPointForCoordinate(v27);

      double v11 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v11 >= *(void *)&v10 >> 1) {
        sub_2CAD4(*(void *)&v10 > 1uLL, *(void *)&v11 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v11 + 1;
      *(MKMapPoint *)&_swiftEmptyArrayStorage[2 * *(void *)&v11 + 4] = v9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    *((void *)v0 + 25) = _swiftEmptyArrayStorage;
    CGFloat v15 = v0[19];
    double v14 = v0[20];
    CGFloat v16 = v0[18];
    Swift::String v17 = (double *)swift_bridgeObjectRetain();
    double v18 = sub_7098C(v17, v16, v15, v14);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v25 = swift_task_alloc();
    *((void *)v0 + 26) = v25;
    *(void *)uint64_t v25 = v0;
    *(void *)(v25 + 8) = sub_6EB3C;
    *(_OWORD *)(v25 + 48) = *((_OWORD *)v0 + 9);
    *(void *)(v25 + 32) = v22;
    *(void *)(v25 + 40) = v24;
    *(double *)(v25 + 16) = v18;
    *(void *)(v25 + 24) = v20;
    uint64_t v3 = (uint64_t)sub_70F34;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    return _swift_task_switch(v3, v4, v5);
  }
  swift_release();
  Swift::String v12 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v12(0);
}

uint64_t sub_6EB3C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  return _swift_task_switch(sub_6EC64, v4, v3);
}

uint64_t sub_6EC64()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_mapSnapshotter;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_mapSnapshotter);
  if (v3)
  {
    [v3 cancel];
    uint64_t v4 = *(void **)(v1 + v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v0[27];
  *(void *)(v1 + v2) = 0;

  id v6 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v5];
  id v7 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v6;

  uint64_t v8 = *(void **)(v1 + v2);
  v0[28] = v8;
  if (v8)
  {
    uint64_t v9 = qword_19AE70;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1A3C00;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_6EE6C;
    uint64_t v12 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_6F3C0;
    v0[13] = &unk_187648;
    v0[14] = v12;
    [v10 startWithQueue:v11 completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    Swift::String v13 = (void *)v0[27];
    swift_release();

    swift_bridgeObjectRelease();
    double v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
}

uint64_t sub_6EE6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  if (v2) {
    uint64_t v5 = sub_6F0C4;
  }
  else {
    uint64_t v5 = sub_6EF9C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_6EF9C()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();
  uint64_t v2 = (void *)v0[15];

  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[25];
  if (v2)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    id v6 = self;
    id v7 = v2;
    id v8 = [v6 polylineWithPoints:v4 + 32 count:v5];
    swift_bridgeObjectRelease();
    [v3 mapRect];
    unint64_t v13 = sub_71258(v8, v7, v9, v10, v11, v12);
  }
  else
  {

    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
  }
  double v14 = (uint64_t (*)(unint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_6F0C4()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[28];
  swift_release();
  swift_willThrow();

  if (qword_19AE28 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = sub_145760();
  sub_C584(v3, (uint64_t)qword_19E3B8);
  id v4 = v2;
  swift_errorRetain();
  id v5 = v4;
  swift_errorRetain();
  id v6 = sub_145740();
  os_log_type_t v7 = sub_1461F0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  double v9 = (void *)v0[27];
  CGFloat v10 = (char *)v0[21];
  if (v8)
  {
    double v18 = (void *)v0[27];
    uint64_t v11 = swift_slowAlloc();
    double v12 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_id];
    unint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_id + 8];
    swift_bridgeObjectRetain();
    v0[16] = sub_3D2B4(v14, v13, &v19);
    sub_146610();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v15;
    sub_146610();
    *double v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v6, v7, "RouteMapGenerator [assetId: %s]: error generating snapshot: %@", (uint8_t *)v11, 0x16u);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_6F3C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_A314(&qword_19C160);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

void sub_6F480(void *a1, id a2, char a3, uint64_t a4, uint64_t a5, CLLocationDegrees a6, CLLocationDegrees a7, double a8, double a9, double a10, double a11, CLLocationDegrees a12, CLLocationDegrees a13)
{
  v49.latitude = a12;
  v49.longitude = a13;
  id v24 = [a2 image];
  [v24 size];
  double v26 = v25;

  id v27 = [a2 image];
  [v27 size];
  double v29 = v28;

  id v30 = [a2 image];
  objc_msgSend(v30, "drawInRect:", 0.0, 0.0, v26, v29);

  id v50 = sub_71674(0, a3);
  double v31 = 2.0;
  if ((a3 - 2) <= 3u) {
    double v31 = dbl_15BBB0[(char)(a3 - 2)];
  }
  uint64_t v32 = OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates;
  unint64_t v33 = *(void *)(a4 + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_146930();
    swift_bridgeObjectRelease();
    if (v36 == 1) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v37 = *(void *)(a4 + v32);
    Swift::String v38 = (objc_class *)type metadata accessor for WorkoutGradientPathRenderer();
    Swift::String v39 = (char *)objc_allocWithZone(v38);
    *(void *)&v39[OBJC_IVAR____TtC15JournalSettings27WorkoutGradientPathRenderer_routeCoordinates] = v37;
    v51.receiver = v39;
    v51.super_class = v38;
    swift_bridgeObjectRetain();
    Swift::String v40 = (CGContext *)objc_msgSendSuper2(&v51, "initWithOverlay:", a5);
    os_log_type_t v41 = (CGContext *)[a1 CGContext];
    id v42 = a2;
    sub_71A90(v41, v40, v42, a8, a9, a10, a11, v31);

    uint64_t v43 = (CGContext *)[a1 CGContext];
    CGContextStrokePath(v43);

    id v44 = sub_71674(1, a3);
    MKMapPoint v45 = MKMapPointForCoordinate(v49);
    uint64_t v46 = (CGContext *)[a1 CGContext];
    sub_71980(v44, v42, v46, v45.x, v45.y);

    v54.latitude = a6;
    v54.longitude = a7;
    MKMapPoint v47 = MKMapPointForCoordinate(v54);
    uint64_t v48 = (CGContext *)[a1 CGContext];
    sub_71980(v50, v42, v48, v47.x, v47.y);

    return;
  }
  if (*(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8)) != 1) {
    goto LABEL_9;
  }
LABEL_5:
  v53.latitude = a6;
  v53.longitude = a7;
  MKMapPoint v34 = MKMapPointForCoordinate(v53);
  Swift::String v35 = (CGContext *)[a1 CGContext];
  sub_71980(v50, a2, v35, v34.x, v34.y);
}

void sub_6F810(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_6F85C()
{
  off_19E3D0[0] = (int *)&_swiftEmptyDictionarySingleton;
}

uint64_t type metadata accessor for RouteMapGenerator()
{
  return self;
}

uint64_t type metadata accessor for WorkoutStartLocationAnnotation()
{
  return self;
}

uint64_t type metadata accessor for WorkoutEndLocationAnnotation()
{
  return self;
}

void sub_6F9B8()
{
  off_19E3D8[0] = (int *)&_swiftEmptyDictionarySingleton;
}

void (*sub_6F9CC(void *a1, unsigned __int8 a2))(void *a1)
{
  id v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_706F4(v4, a2);
  return sub_6FA2C;
}

void sub_6FA2C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

id sub_6FA78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC15JournalSettings29WorkoutLocationAnnotationView_assetSizeType] = a4;
  if (a3)
  {
    NSString v10 = sub_145B80();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v20.receiver = v5;
  v20.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v20, "initWithAnnotation:reuseIdentifier:", a1, v10);

  double v12 = 7.0;
  if ((a4 - 2) <= 3u) {
    double v12 = dbl_15BBD0[(char)(a4 - 2)];
  }
  id v13 = v11;
  objc_msgSend(v13, "setFrame:", 0.0, 0.0, v12, v12);
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 clearColor];
  [v15 setBackgroundColor:v16];

  [v15 setCanShowCallout:1];
  if (!a1) {
    goto LABEL_11;
  }
  type metadata accessor for WorkoutStartLocationAnnotation();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for WorkoutEndLocationAnnotation();
    if (swift_dynamicCastClass())
    {
      id v17 = (id)HKUIStandardMapRedColor();
      goto LABEL_12;
    }
LABEL_11:
    id v17 = [v14 whiteColor];
    goto LABEL_12;
  }
  id v17 = (id)HKUIStandardMapGreenColor();
LABEL_12:
  id v18 = v17;
  [v15 setTintColor:v18];

  swift_unknownObjectRelease();
  return v15;
}

void sub_6FC9C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    CGFloat v10 = 1.0;
    if ((v4[OBJC_IVAR____TtC15JournalSettings29WorkoutLocationAnnotationView_assetSizeType] - 2) <= 3u) {
      CGFloat v10 = dbl_15BBF0[(char)(v4[OBJC_IVAR____TtC15JournalSettings29WorkoutLocationAnnotationView_assetSizeType] - 2)];
    }
    c = v9;
    CGContextSetLineWidth(v9, v10);
    id v11 = [v4 tintColor];
    if (v11)
    {
      double v12 = v11;
      id v13 = (CGColor *)[v11 CGColor];

      CGContextSetFillColorWithColor(c, v13);
      id v14 = [self whiteColor];
      id v15 = (CGColor *)[v14 CGColor];

      CGContextSetStrokeColorWithColor(c, v15);
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRect v19 = CGRectInset(v18, v10, v10);
      CGContextAddEllipseInRect(c, v19);
      CGContextDrawPath(c, kCGPathFillStroke);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for WorkoutLocationAnnotationView()
{
  return self;
}

void sub_7003C(CGContext *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  v22.a = 1.0;
  v22.b = 0.0;
  v22.c = 0.0;
  v22.d = 1.0;
  v22.tx = 0.0;
  v22.ty = 0.0;
  v24.x = a3;
  v24.y = a4;
  sub_146250(v24, &v22);
  v25.x = a5;
  v25.y = a6;
  sub_146260(v25, &v22);
  if (a2)
  {
    sub_A314(&qword_19E4D8);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1598D0;
    *(void *)(v16 + 32) = 0;
    *(CGFloat *)(v16 + 40) = a8 + a8;
    id v17 = (const CGPath *)sub_146580();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v17);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v18 = [self grayColor];
    CGRect v19 = (CGColor *)[v18 CGColor];

    CGContextSetStrokeColorWithColor(a1, v19);
    CGPathDrawingMode v20 = kCGPathStroke;
  }
  else
  {
    id v17 = (const CGPath *)sub_146590();
    CGContextAddPath(a1, v17);
    CGRect v19 = (CGColor *)sub_70228(a7);
    CGContextSetFillColorWithColor(a1, v19);
    CGPathDrawingMode v20 = kCGPathFill;
  }

  CGContextDrawPath(a1, v20);
}

uint64_t sub_70228(double a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings27WorkoutGradientPathRenderer_routeCoordinates);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_146930();
  if (!v4) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t result = sub_2CC78(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_146810();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      id v8 = v7;
      [v7 speed];
      double v10 = v9;

      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_2CC78(v11 > 1, v12 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      double v14 = _swiftEmptyArrayStorage[4];
      uint64_t v15 = v13 - 1;
      if (v13 != 1)
      {
        uint64_t v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          double v17 = *v16++;
          double v18 = v17;
          if (v17 < v14) {
            double v14 = v18;
          }
          --v15;
        }
        while (v15);
      }
      double v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        uint64_t v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        float64x2_t v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        uint64_t v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        double v21 = 0.0;
        uint64_t v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v25 = vdivq_f64(v23[-1], v22);
          float64x2_t v26 = vdivq_f64(*v23, v22);
          double v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          double v30 = _swiftEmptyArrayStorage[4];
          uint64_t v31 = v13 - 1;
          if (v31)
          {
            uint64_t v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              double v33 = *v32++;
              double v34 = v33;
              if (v30 < v33) {
                double v30 = v34;
              }
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0) {
              goto LABEL_41;
            }
LABEL_39:
            double v35 = (a1 - v14) / (v30 - v14);
            if (v35 >= 0.5)
            {
              double v41 = v35 + -0.5 + v35 + -0.5;
              double v37 = round(v41 * -179.0 + 255.0);
              double v38 = round(v41 * 13.0 + 204.0);
              double v39 = v41 * 100.0 + 0.0;
            }
            else
            {
              double v36 = v35 + v35;
              double v37 = round(v36 * 0.0 + 255.0);
              double v38 = round(v36 * 145.0 + 59.0);
              double v39 = 48.0 - v36 * 48.0;
            }
            id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:v37 / 255.0 green:v38 / 255.0 blue:round(v39) / 255.0 alpha:0.85];
            goto LABEL_44;
          }
LABEL_36:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1) {
            goto LABEL_41;
          }
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
      }
      uint64_t v27 = v13 - v20;
      double v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        double v29 = *v28++;
        double v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    double v21 = 0.0;
    double v14 = 0.0;
    double v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_41:
      id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
LABEL_44:
      id v42 = v40;
      id v43 = [v40 CGColor];

      return (uint64_t)v43;
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_7068C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return self;
}

void (*sub_706F4(void *a1, unsigned __int8 a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_70950(v4);
  v4[9] = sub_707E4((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_70784;
}

void sub_70784(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_707E4(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_137C74(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_70908;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_13DBD8();
      goto LABEL_7;
    }
    sub_13AE50(v13, a3 & 1);
    unint64_t v17 = sub_137C74(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t))sub_146C20();
  __break(1u);
  return result;
}

unint64_t sub_70908(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    objc_super v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25)) {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else {
      return sub_13D0DC(*(void *)(result + 16), *(unsigned char *)(result + 24), v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_E59C8(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

uint64_t (*sub_70950(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_70980;
}

uint64_t sub_70980(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

double sub_7098C(double *a1, CGFloat a2, CGFloat a3, double a4)
{
  double v7 = 0.0;
  v52.origin.CGFloat x = 0.0;
  v52.origin.y = 0.0;
  v52.size.width = a2;
  v52.size.height = a3;
  CGFloat v8 = CGRectGetWidth(v52) * 0.5;
  CGFloat v10 = v8 + 0.0 - (0.0 - v8);
  v53.origin.y = 0.0;
  v53.origin.CGFloat x = 0.0 - v8;
  CGFloat x = v53.origin.x;
  v53.size.width = v10;
  v53.size.height = a3;
  CGFloat Height = CGRectGetHeight(v53);
  char v12 = sub_4C1B8(x, 0.0 - Height * 0.5, v10, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
  uint64_t v13 = *((void *)a1 + 2);
  double v14 = 0.0;
  double v15 = 0.0;
  double v16 = 0.0;
  if (v13)
  {
    double v15 = a1[4];
    double v16 = a1[5];
    uint64_t v17 = (uint64_t)&a1[2 * v13 + 4];
    double v7 = *(double *)(v17 - 16);
    double v14 = *(double *)(v17 - 8);
  }
  double v50 = v16;
  double v51 = v15;
  id v18 = [self polylineWithPoints:a1 + 4 count:v13];
  swift_bridgeObjectRelease();
  [v18 boundingMapRect];
  double v22 = v21;
  double v24 = v23;
  double v25 = v19;
  double v26 = v20;
  if (a2 >= 1.0 && a3 >= 1.0)
  {
    double v45 = sqrt(v19 * v19 + v20 * v20) * 0.5;
    double rect2 = v14;
    double v27 = 8.0;
    switch(v12)
    {
      case 2:
        double v27 = 35.0;
        goto LABEL_7;
      case 5:
        swift_bridgeObjectRelease();
        double v30 = v45 / (a4 + -20.0);
        double v33 = v30 * a4;
        double v49 = v30 * a2;
        double v44 = v33;
        double v46 = v30 * a3;
        double v32 = v30 * 58.0;
        double v34 = 24.0;
        break;
      default:
LABEL_7:
        double v43 = v27;
        char v28 = sub_146B90();
        swift_bridgeObjectRelease();
        double v29 = 20.0;
        if (v28)
        {
LABEL_17:
          double v30 = v45 / (a4 - v29);
          double v38 = v30 * a4;
          double v39 = v30 * a2;
          double v32 = v43 * v30;
          double v49 = v39;
          double v44 = v38;
          double v46 = v30 * a3;
          switch(v12)
          {
            case 5:
              double v34 = 24.0;
              break;
            case 4:
              double v34 = 4.0;
              break;
            case 2:
              double v34 = 12.0;
              break;
            default:
LABEL_21:
              double v34 = 7.0;
              break;
          }
        }
        else
        {
          switch(v12)
          {
            case 1:
            case 2:
            case 3:
            case 4:
              char v35 = sub_146B90();
              swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_17;
              }
              switch(v12)
              {
                case 2:
                  swift_bridgeObjectRelease();
                  double v30 = v45 / (a4 + -15.0);
                  double v36 = v30 * a4;
                  double v49 = v30 * a2;
                  double v44 = v36;
                  double v46 = v30 * a3;
                  double v32 = v30 * v43;
                  double v34 = 12.0;
                  break;
                default:
                  char v37 = sub_146B90();
                  swift_bridgeObjectRelease();
                  if (v37) {
                    double v29 = 15.0;
                  }
                  else {
                    double v29 = 10.0;
                  }
                  goto LABEL_17;
              }
              break;
            default:
              swift_bridgeObjectRelease();
              double v30 = v45 / (a4 + -20.0);
              double v31 = v30 * a4;
              double v49 = v30 * a2;
              double v44 = v31;
              double v46 = v30 * a3;
              double v32 = v30 * v43;
              goto LABEL_21;
          }
        }
        break;
    }
    double v40 = v30 * v34 * 0.5;
    v54.origin.CGFloat x = v22;
    v54.origin.y = v24;
    v54.size.width = v25;
    v54.size.height = v26;
    v58.origin.y = v50;
    v58.origin.CGFloat x = v51;
    v58.size.width = v40;
    v58.size.height = v40;
    MKMapRect v55 = MKMapRectUnion(v54, v58);
    v59.origin.CGFloat x = v7;
    v59.origin.y = rect2;
    v59.size.width = v40;
    v59.size.height = v40;
    MKMapRect v56 = MKMapRectUnion(v55, v59);
    double v26 = v46;
    double v22 = v56.origin.x + v56.size.width * 0.5 - (v32 + v44);
    double v24 = v56.origin.y + v56.size.height * 0.5 - (v32 + v44);
    double v25 = v49;
  }
  v57.origin.CGFloat x = v22;
  v57.origin.y = v24;
  v57.size.width = v25;
  v57.size.height = v26;
  *(void *)&double v41 = (unint64_t)MKCoordinateRegionForMapRect(v57);

  return v41;
}

uint64_t sub_70F0C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  _OWORD v6[3] = a2;
  return _swift_task_switch(sub_70F34, 0, 0);
}

uint64_t sub_70F34()
{
  double v2 = *(double *)(v0 + 32);
  double v1 = *(double *)(v0 + 40);
  CLLocationDegrees v4 = *(double *)(v0 + 16);
  CLLocationDegrees v3 = *(double *)(v0 + 24);
  id v5 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
  id v6 = [self traitCollectionWithUserInterfaceStyle:2];
  [v5 setTraitCollection:v6];

  v14.latitude = v4;
  v14.longitude = v3;
  if (CLLocationCoordinate2DIsValid(v14) && v2 >= 0.0 && v1 >= 0.0) {
    objc_msgSend(v5, "setRegion:", *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
  }
  double v8 = *(double *)(v0 + 48);
  double v7 = *(double *)(v0 + 56);
  [v5 setMapType:0];
  objc_msgSend(v5, "setSize:", v8, v7);
  id v9 = [objc_allocWithZone((Class)MKStandardMapConfiguration) init];
  id v10 = [self filterExcludingAllCategories];
  [v9 setPointOfInterestFilter:v10];

  [v5 setPreferredConfiguration:v9];
  uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v5);
}

id sub_710E0(double a1, double a2)
{
  if (qword_19AE30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_19E3D0[0];
  if (*(void *)((char *)off_19E3D0[0] + (unint64_t)&dword_10) && (uint64_t v5 = sub_1379A0(a1, a2), (v6 & 1) != 0))
  {
    id v11 = *(id *)(*(void *)&stru_20.segname[(void)v4 + 16] + 8 * v5);
    swift_endAccess();
    return v11;
  }
  else
  {
    swift_endAccess();
    id v8 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", a1, a2);
    swift_beginAccess();
    id v9 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v12 = off_19E3D0[0];
    off_19E3D0[0] = (int *)0x8000000000000000;
    sub_13C270((uint64_t)v9, isUniquelyReferenced_nonNull_native, a1, a2);
    off_19E3D0[0] = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
}

unint64_t sub_71258(id a1, void *a2, double a3, CGFloat a4, double a5, double a6)
{
  double v16 = (char *)OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates;
  unint64_t v17 = *(void *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC15JournalSettings17RouteMapGenerator_routeCoordinates);
  if (v17 >> 62) {
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      id v19 = (id)sub_146810();
    }
    else
    {
      if (!*(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8)))
      {
        __break(1u);
        goto LABEL_19;
      }
      id v19 = *(id *)(v17 + 32);
    }
    double v20 = v19;
    swift_bridgeObjectRelease();
    double v7 = &selRef_streakReminderMinute;
    [v20 coordinate];
    uint64_t v8 = v21;
    double v9 = v22;

    unint64_t v17 = *(void *)&v16[isEscapingClosureAtFileLocation];
    if (!(v17 >> 62))
    {
      uint64_t v23 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v23) {
        goto LABEL_20;
      }
      goto LABEL_8;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_146930();
    if (!v23) {
      goto LABEL_20;
    }
LABEL_8:
    unint64_t result = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      id v25 = (id)sub_146810();
      goto LABEL_13;
    }
    double v50 = a5;
    double v51 = a6;
    uint64_t v48 = v8;
    CGFloat v49 = a4;
    double v47 = v9;
    if ((v17 & 0xC000000000000001) != 0) {
      goto LABEL_23;
    }
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_25;
    }
    id v25 = *(id *)(v17 + 8 * result + 32);
LABEL_13:
    double v26 = v25;
    swift_bridgeObjectRelease();
    [v26 v7[193]];
    uint64_t v28 = v27;
    uint64_t v30 = v29;

    id v31 = [a2 image];
    [v31 size];
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    uint64_t v8 = 0;
    v53.origin.CGFloat x = 0.0;
    v53.origin.y = 0.0;
    v53.size.width = v33;
    v53.size.height = v35;
    double v9 = 0.5;
    CGFloat v36 = CGRectGetWidth(v53) * 0.5;
    a4 = v36 + 0.0 - (0.0 - v36);
    v54.origin.y = 0.0;
    v54.origin.CGFloat x = 0.0 - v36;
    CGFloat x = v54.origin.x;
    v54.size.width = a4;
    v54.size.height = v35;
    CGFloat Height = CGRectGetHeight(v54);
    char v39 = sub_4C1B8(x, 0.0 - Height * 0.5, a4, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
    id v40 = [a2 image];
    [v40 size];
    a6 = v41;
    a5 = v42;

    id v43 = sub_710E0(a6, a5);
    unint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(unsigned char *)(v17 + 24) = v39;
    *(void *)(v17 + 32) = isEscapingClosureAtFileLocation;
    *(void *)(v17 + 40) = v48;
    *(double *)(v17 + 48) = v47;
    *(void *)(v17 + 56) = a1;
    *(double *)(v17 + 64) = a3;
    *(CGFloat *)(v17 + 72) = v49;
    *(double *)(v17 + 80) = v50;
    *(double *)(v17 + 88) = v51;
    *(void *)(v17 + 96) = v28;
    *(void *)(v17 + 104) = v30;
    double v7 = (char **)swift_allocObject();
    _OWORD v7[2] = (char *)sub_7236C;
    v7[3] = (char *)v17;
    aBlock[4] = sub_723A0;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_6F810;
    aBlock[3] = &unk_1876B0;
    double v16 = (char *)_Block_copy(aBlock);
    id v44 = a2;
    id v45 = (id)isEscapingClosureAtFileLocation;
    id v46 = a1;
    swift_retain();
    swift_release();
    a1 = [v43 imageWithActions:v16];

    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (unint64_t)a1;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    if (!sub_146930()) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

id sub_71674(char a1, char a2)
{
  int v3 = a1 & 1;
  if (qword_19AE38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_19E3D8[0];
  if (*(void *)((char *)off_19E3D8[0] + (unint64_t)&dword_10)
    && (unint64_t v5 = sub_137C74(a2), (v6 & 1) != 0)
    && (uint64_t v7 = *(void *)(*(void *)&stru_20.segname[(void)v4 + 16] + 8 * v5), *(void *)(v7 + 16))
    && (unint64_t v8 = sub_137DA4(v3), (v9 & 1) != 0))
  {
    id v26 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    return v26;
  }
  else
  {
    uint64_t v11 = 0xD000000000000027;
    swift_endAccess();
    if (v3)
    {
      started = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
      uint64_t v13 = "WorkoutLocationAnnotationView.endingPin";
    }
    else
    {
      started = (objc_class *)type metadata accessor for WorkoutStartLocationAnnotation();
      uint64_t v11 = 0xD000000000000029;
      uint64_t v13 = "WorkoutLocationAnnotationView.startingPin";
    }
    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    id v15 = [objc_allocWithZone(started) init];
    id v16 = objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView());
    id v17 = sub_6FA78((uint64_t)v15, v11, v14, a2);
    swift_beginAccess();
    if (*(void *)((char *)off_19E3D8[0] + (unint64_t)&dword_10) && (sub_137C74(a2), (v18 & 1) != 0))
    {
      swift_endAccess();
      swift_beginAccess();
      double v20 = sub_6F9CC(v28, a2);
      if (*v19)
      {
        uint64_t v21 = v19;
        id v17 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *v21;
        uint64_t *v21 = 0x8000000000000000;
        sub_13CB10((uint64_t)v17, v3, isUniquelyReferenced_nonNull_native);
        uint64_t *v21 = v27;
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v20)(v28, 0);
    }
    else
    {
      swift_endAccess();
      sub_A314(&qword_19E4F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1578A0;
      *(unsigned char *)(inited + 32) = v3;
      *(void *)(inited + 40) = v17;
      unint64_t v24 = sub_1392AC(inited);
      swift_setDeallocating();
      id v17 = v17;
      sub_A314(&qword_19E500);
      swift_arrayDestroy();
      swift_beginAccess();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = off_19E3D8[0];
      off_19E3D8[0] = (int *)0x8000000000000000;
      sub_13C9D8(v24, a2, v25);
      off_19E3D8[0] = v29;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    return v17;
  }
}

void sub_71980(void *a1, void *a2, CGContext *a3, double a4, double a5)
{
  CLLocationCoordinate2D v8 = MKCoordinateForMapPoint(*(MKMapPoint *)&a4);
  objc_msgSend(a2, "pointForCoordinate:", v8.latitude, v8.longitude);
  double v10 = v9;
  double v12 = v11;
  [a1 bounds];
  double v13 = v10 - CGRectGetMidX(v21);
  [a1 centerOffset];
  CGFloat v15 = v13 + v14;
  [a1 bounds];
  double v16 = v12 - CGRectGetMidY(v22);
  [a1 centerOffset];
  CGFloat v18 = v16 + v17;
  CGContextSaveGState(a3);
  CGContextTranslateCTM(a3, v15, v18);
  [a1 prepareForSnapshotting];
  id v19 = [a1 layer];
  [v19 renderInContext:a3];

  CGContextRestoreGState(a3);
}

void sub_71A90(CGContext *a1, CGContext *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  double v45 = a8;
  v46.origin.CGFloat x = a4;
  v46.size.width = a6;
  v46.size.height = a7;
  v46.origin.y = a5;
  uint64_t v50 = sub_145230();
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  double v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v44[1] = a2;
  unint64_t v14 = *(void *)((char *)a2 + OBJC_IVAR____TtC15JournalSettings27WorkoutGradientPathRenderer_routeCoordinates);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_146930())
    {
LABEL_3:
      unint64_t v48 = v14 & 0xC000000000000001;
      if ((v14 & 0xC000000000000001) != 0)
      {
        id v16 = (id)sub_146810();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8)))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v16 = *(id *)(v14 + 32);
      }
      id v17 = v16;
      swift_bridgeObjectRelease();
      id v18 = [v17 timestamp];
      sub_1451E0();

      sub_144FE0();
      double v20 = v19;
      CGRect v21 = *(void (**)(char *, uint64_t))(v11 + 8);
      v21(v13, v50);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_146930();
        if (!v22)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (!v22) {
          goto LABEL_20;
        }
      }
      if (v22 >= 1)
      {
        uint64_t v23 = 0;
        double v47 = v45 * v45;
        do
        {
          double v49 = v20;
          if (v48) {
            id v26 = (id)sub_146810();
          }
          else {
            id v26 = *(id *)(v14 + 8 * v23 + 32);
          }
          uint64_t v27 = v26;
          [v17 coordinate];
          MKMapPoint v28 = MKMapPointForCoordinate(v52);
          [v27 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v53);
          CLLocationCoordinate2D v30 = MKCoordinateForMapPoint(v28);
          objc_msgSend(a3, "pointForCoordinate:", v30.latitude, v30.longitude);
          CGFloat v32 = v31;
          CGFloat v34 = v33;
          CLLocationCoordinate2D v35 = MKCoordinateForMapPoint(v29);
          objc_msgSend(a3, "pointForCoordinate:", v35.latitude, v35.longitude);
          CGFloat v37 = v36;
          CGFloat v39 = v38;
          if (v47 <= (v36 - v32) * (v36 - v32) + (v38 - v34) * (v38 - v34))
          {
            v54.origin.CGFloat x = fmin(v28.x, v29.x);
            v54.origin.y = fmin(v28.y, v29.y);
            v54.size.width = vabdd_f64(v28.x, v29.x);
            v54.size.height = vabdd_f64(v28.y, v29.y);
            if (MKMapRectIntersectsRect(v46, v54))
            {
              id v40 = [v27 timestamp];
              sub_1451E0();

              sub_144FE0();
              double v42 = v41;
              v21(v13, v50);
              LOBYTE(v40) = v42 - v49 > 5.0;
              objc_msgSend(v27, "speed", v42 - v49);
              sub_7003C(v44[0], (char)v40, v32, v34, v37, v39, v43, v45);
            }

            id v17 = v27;
          }
          ++v23;
          id v24 = [v27 timestamp];
          sub_1451E0();

          sub_144FE0();
          double v20 = v25;

          v21(v13, v50);
        }
        while (v22 != v23);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_71EFC(CGContext *a1, CGContext *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v42 = a9;
  double v38 = a7;
  v39.origin.CGFloat x = a3;
  v39.size.width = a5;
  v39.size.height = a6;
  v39.origin.y = a4;
  uint64_t v43 = sub_145230();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v37[1] = a2;
  unint64_t v15 = *(void *)((char *)a2 + OBJC_IVAR____TtC15JournalSettings27WorkoutGradientPathRenderer_routeCoordinates);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_146930())
    {
LABEL_3:
      unint64_t v41 = v15 & 0xC000000000000001;
      if ((v15 & 0xC000000000000001) != 0)
      {
        id v17 = (id)sub_146810();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8)))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v17 = *(id *)(v15 + 32);
      }
      id v18 = v17;
      swift_bridgeObjectRelease();
      id v19 = [v18 timestamp];
      sub_1451E0();

      sub_144FE0();
      double v21 = v20;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
      v22(v14, v43);
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_146930();
        if (!v23)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_20;
        }
      }
      if (v23 >= 1)
      {
        uint64_t v24 = 0;
        double v40 = v38 * v38;
        do
        {
          if (v41) {
            id v27 = (id)sub_146810();
          }
          else {
            id v27 = *(id *)(v15 + 8 * v24 + 32);
          }
          MKMapPoint v28 = v27;
          [v18 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v45);
          [v28 coordinate];
          MKMapPoint v30 = MKMapPointForCoordinate(v46);
          double v31 = v29.y - v42;
          double v32 = v30.y - v42;
          if (v40 <= (v30.x - a8 - (v29.x - a8)) * (v30.x - a8 - (v29.x - a8)) + (v32 - v31) * (v32 - v31))
          {
            v47.origin.CGFloat x = fmin(v29.x, v30.x);
            v47.origin.y = fmin(v29.y, v30.y);
            v47.size.width = vabdd_f64(v29.x, v30.x);
            v47.size.height = vabdd_f64(v29.y, v30.y);
            if (MKMapRectIntersectsRect(v39, v47))
            {
              id v33 = [v28 timestamp];
              sub_1451E0();

              sub_144FE0();
              double v35 = v34;
              v22(v14, v43);
              objc_msgSend(v28, "speed", v35 - v21, 5.0);
              sub_7003C(v37[0], v35 - v21 > 5.0, v29.x - a8, v31, v30.x - a8, v32, v36, v38);
            }

            id v18 = v28;
          }
          ++v24;
          id v25 = [v28 timestamp];
          sub_1451E0();

          sub_144FE0();
          double v21 = v26;

          v22(v14, v43);
        }
        while (v23 != v24);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_72324()
{
  return _swift_deallocObject(v0, 112, 7);
}

void sub_7236C(void *a1)
{
  sub_6F480(a1, *(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 56), *(CLLocationDegrees *)(v1 + 40), *(CLLocationDegrees *)(v1 + 48), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(CLLocationDegrees *)(v1 + 96), *(CLLocationDegrees *)(v1 + 104));
}

uint64_t sub_72390()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_723A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_723C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_723D8()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x724ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType()
{
  return &type metadata for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType;
}

unint64_t sub_724E8()
{
  unint64_t result = qword_19E508;
  if (!qword_19E508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19E508);
  }
  return result;
}

uint64_t sub_7253C()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E510);
  sub_C584(v0, (uint64_t)qword_19E510);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

uint64_t sub_72638()
{
  *(void *)(v1 + 16) = v0;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_726C8;
  return sub_42ECC();
}

uint64_t sub_726C8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_727C8, 0, 0);
}

uint64_t sub_727C8()
{
  uint64_t v1 = v0[4];
  if (v1)
  {
LABEL_8:
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v1);
  }
  unint64_t v2 = *(void *)(v0[2] + qword_1A3BE8);
  if (v2 < 2)
  {
    if (qword_19AE40 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_145760();
    sub_C584(v3, (uint64_t)qword_19E510);
    uint64_t v4 = sub_145740();
    os_log_type_t v5 = sub_1461F0();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl(&def_94138, v4, v5, "no visits data", v6, 2u);
      swift_slowDealloc();
    }

    goto LABEL_8;
  }
  double v9 = (void *)swift_task_alloc();
  v0[5] = v9;
  *double v9 = v0;
  v9[1] = sub_72988;
  uint64_t v10 = v0[2];
  v9[17] = v2;
  v9[18] = v10;
  return _swift_task_switch(sub_73020, 0, 0);
}

uint64_t sub_72988(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_72A88, 0, 0);
}

uint64_t sub_72A88()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(unsigned __int8 *)(*(void *)(v0 + 16) + qword_19D1C8);
    *(unsigned char *)(v0 + 72) = v1;
    switch(v1)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_146B90();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          uint64_t v2 = *(void *)(v0 + 48);
          goto LABEL_10;
        }
        sub_4CB28();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        double v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 56) = v9;
        *double v9 = v0;
        v9[1] = sub_72CB4;
        uint64_t result = sub_47114(v5 * v8);
        break;
    }
  }
  else
  {
    uint64_t v2 = 0;
LABEL_10:
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v2);
  }
  return result;
}

uint64_t sub_72CB4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_72DB4, 0, 0);
}

uint64_t sub_72DB4()
{
  uint64_t v1 = v0[8];
  if (v1)
  {
    char v5 = sub_146B90();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      if (qword_19ADD0 != -1) {
        swift_once();
      }
      sub_E75DC(v1, *(void *)(v0[2] + qword_19D198), *(void *)(v0[2] + qword_19D198 + 8));
    }
  }
  else
  {
    if (qword_19AE40 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_145760();
    sub_C584(v2, (uint64_t)qword_19E510);
    uint64_t v1 = sub_145740();
    os_log_type_t v3 = sub_1461F0();
    if (os_log_type_enabled(v1, v3))
    {
      double v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v4 = 0;
      _os_log_impl(&def_94138, v1, v3, "error creating thumbnail from video preview image", v4, 2u);
      swift_slowDealloc();
    }
  }

  uint64_t v6 = v0[6];
  double v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_73000(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_73020, 0, 0);
}

uint64_t sub_73020()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = sub_C5E3C(v0[17]);
  v0[19] = v2;
  uint64_t v3 = *(void *)(v1 + qword_19D1D8);
  double v7 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_19F568 + dword_19F568);
  char v4 = *(unsigned char *)(v1 + qword_19D1C8);
  char v5 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v5;
  *char v5 = v0;
  v5[1] = sub_73104;
  return v7(v2, v4, v3);
}

uint64_t sub_73104(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_73224, 0, 0);
}

uint64_t sub_73224()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_73348;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_6F3C0;
  v0[13] = &unk_187768;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_73348()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_734EC;
  }
  else {
    uint64_t v2 = sub_73458;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_73458()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 image];

  char v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_734EC()
{
  swift_willThrow();
  if (qword_19AE40 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_145760();
  sub_C584(v1, (uint64_t)qword_19E510);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_145740();
  os_log_type_t v3 = sub_1461F0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  char v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    uint64_t v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v9;
    sub_146610();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&def_94138, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_A314(&qword_19B200);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_73714()
{
  return sub_2C34C(*(void *)(v0 + qword_1A3BE8));
}

uint64_t sub_73730(uint64_t a1)
{
  return sub_2C34C(*(void *)(a1 + qword_1A3BE8));
}

uint64_t type metadata accessor for MultiPinMapThumbnailCacheOperation()
{
  uint64_t result = qword_19E550;
  if (!qword_19E550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_73798()
{
  return swift_initClassMetadata2();
}

uint64_t sub_737DC()
{
  return type metadata accessor for MultiPinMapThumbnailCacheOperation();
}

uint64_t sub_737E4()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E6A8);
  sub_C584(v0, (uint64_t)qword_19E6A8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();
  sub_145750();

  return swift_bridgeObjectRelease();
}

id sub_738E0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SettingsExportManager()) init];
  qword_1A3BF0 = (uint64_t)result;
  return result;
}

void sub_7396C(void *a1)
{
  if (qword_19AE48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_145760();
  sub_C584(v3, (uint64_t)qword_19E6A8);
  BOOL v4 = sub_145740();
  os_log_type_t v5 = sub_146210();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&def_94138, v4, v5, "Export requested", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC15JournalSettings21SettingsExportManager_COREDATA_STACK);
  if (v7)
  {
    uint64_t v8 = qword_19AC68;
    uint64_t v9 = v7;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container];
    id v11 = (id)qword_1A39F8;
    osos_log_t log = v10;
    sub_D4A4C(0, oslog, a1);
  }
  else
  {
    osos_log_t log = (os_log_t)sub_145740();
    os_log_type_t v12 = sub_1461F0();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&def_94138, oslog, v12, "Unable to create CoreDataStackShared for export from settings", v13, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_73C00()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC15JournalSettings21SettingsExportManager_COREDATA_STACK);
  if (v1)
  {
    id v2 = *(void **)&v1[OBJC_IVAR____TtC15JournalSettings19CoreDataStackShared_container];
    uint64_t v3 = v1;
    id v4 = [v2 newBackgroundContext];
    __chkstk_darwin(v4);
    sub_1463C0();

    return v10;
  }
  else
  {
    if (qword_19AE48 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_145760();
    sub_C584(v6, (uint64_t)qword_19E6A8);
    uint64_t v7 = sub_145740();
    os_log_type_t v8 = sub_1461F0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&def_94138, v7, v8, "SettingsExportManager.exportButtonShouldBeEnabled COREDATA_STACK is nil", v9, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
}

void sub_73D84(BOOL *a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19BE88);
  __chkstk_darwin(v3 - 8);
  os_log_type_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144AB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  id v7 = sub_28838((uint64_t)v5);
  type metadata accessor for JournalEntryMO();
  uint64_t v8 = sub_1463E0();
  if (v1)
  {

    sub_1D0AC((uint64_t)v5);
    if (qword_19AE48 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_145760();
    sub_C584(v9, (uint64_t)qword_19E6A8);
    swift_errorRetain();
    swift_errorRetain();
    unsigned __int8 v10 = sub_145740();
    os_log_type_t v11 = sub_1461F0();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 138412290;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      v17[1] = v14;
      sub_146610();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_94138, v10, v11, "SettingsExportManager.exportButtonShouldBeEnabled error: %@", v12, 0xCu);
      sub_A314(&qword_19B200);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    BOOL v16 = 0;
  }
  else
  {
    uint64_t v15 = v8;

    sub_1D0AC((uint64_t)v5);
    BOOL v16 = v15 > 0;
  }
  *a1 = v16;
}

id sub_740AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsExportManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SettingsExportManager()
{
  return self;
}

void sub_74114(BOOL *a1@<X8>)
{
}

uint64_t sub_74130()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19E6F0);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19E6F0);
  if (qword_19AF50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_741F8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for OperationsManager()) init];
  qword_19E708 = (uint64_t)result;
  return result;
}

id sub_74228()
{
  uint64_t v1 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableFileAttachmentsQueue;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 strongToWeakObjectsMapTable];
  uint64_t v4 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableAssetMetadataQueue;
  *(void *)&v3[v4] = [self strongToWeakObjectsMapTable];
  id v5 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v6 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority] = v5;
  uint64_t v7 = qword_19AE68;
  id v8 = v5;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setUnderlyingQueue:qword_1A3BF8];

  id v9 = *(id *)&v3[v6];
  NSString v10 = sub_145B80();
  [v9 setName:v10];

  os_log_type_t v11 = *(void **)&v3[v6];
  [v11 setMaxConcurrentOperationCount:6];
  [v11 setQualityOfService:9];
  id v12 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v13 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority] = v12;
  uint64_t v14 = qword_19AE70;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  [v15 setUnderlyingQueue:qword_1A3C00];

  id v16 = *(id *)&v3[v13];
  NSString v17 = sub_145B80();
  [v16 setName:v17];

  id v18 = *(void **)&v3[v13];
  [v18 setMaxConcurrentOperationCount:6];
  [v18 setQualityOfService:-1];
  id v19 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v20 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority] = v19;
  uint64_t v21 = qword_19AE78;
  id v22 = v19;
  if (v21 != -1) {
    swift_once();
  }
  [v22 setUnderlyingQueue:qword_1A3C08];

  id v23 = *(id *)&v3[v20];
  NSString v24 = sub_145B80();
  [v23 setName:v24];

  id v25 = *(void **)&v3[v20];
  [v25 setMaxConcurrentOperationCount:2];
  [v25 setQualityOfService:33];
  id v26 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v27 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_fileAttachmentsQueue;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_fileAttachmentsQueue] = v26;
  uint64_t v28 = qword_19AD90;
  id v29 = v26;
  if (v28 != -1) {
    swift_once();
  }
  [v29 setUnderlyingQueue:qword_1A3B48];

  id v30 = *(id *)&v3[v27];
  NSString v31 = sub_145B80();
  [v30 setName:v31];

  double v32 = *(void **)&v3[v27];
  [v32 setMaxConcurrentOperationCount:2];
  [v32 setQualityOfService:-1];
  id v33 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v34 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_assetMetadataQueue;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_assetMetadataQueue] = v33;
  uint64_t v35 = qword_19AD98;
  id v36 = v33;
  if (v35 != -1) {
    swift_once();
  }
  [v36 setUnderlyingQueue:qword_1A3B50];

  id v37 = *(id *)&v3[v34];
  NSString v38 = sub_145B80();
  [v37 setName:v38];

  MKMapRect v39 = *(void **)&v3[v34];
  [v39 setMaxConcurrentOperationCount:2];
  [v39 setQualityOfService:-1];
  id v40 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v41 = OBJC_IVAR____TtC15JournalSettings17OperationsManager_batchRecordDownloadQueue;
  *(void *)&v3[OBJC_IVAR____TtC15JournalSettings17OperationsManager_batchRecordDownloadQueue] = v40;
  uint64_t v42 = qword_19ADA0;
  id v43 = v40;
  if (v42 != -1) {
    swift_once();
  }
  [v43 setUnderlyingQueue:qword_1A3B58];

  id v44 = *(id *)&v3[v41];
  NSString v45 = sub_145B80();
  [v44 setName:v45];

  CLLocationCoordinate2D v46 = *(void **)&v3[v41];
  [v46 setMaxConcurrentOperationCount:1];
  id v47 = v46;
  [v47 setQualityOfService:9];

  v49.receiver = v3;
  v49.super_class = (Class)type metadata accessor for OperationsManager();
  return objc_msgSendSuper2(&v49, "init");
}

void static OperationsManager.getAssetMetaDataOperationsRunningCount()()
{
}

void static OperationsManager.addAssetMetadata(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id static OperationsManager.getRunningAssetsMetadataOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_74A38(a1, a2, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableAssetMetadataQueue);
}

id static OperationsManager.cancelAssetMetaDataOperations()()
{
  return sub_758B4("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC15JournalSettings17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableAssetMetadataQueue);
}

void static OperationsManager.getAttachmentOperationsRunningCount()()
{
}

void static OperationsManager.addAttachment(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_748E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  sub_756B8(a4);
  if (v8 <= 99)
  {
    if (qword_19AE60 != -1) {
      swift_once();
    }
    id v9 = *(void **)(qword_19E708 + *a5);
    id v10 = objc_allocWithZone((Class)NSString);
    id v11 = v9;
    swift_bridgeObjectRetain();
    NSString v12 = sub_145B80();
    swift_bridgeObjectRelease();
    id v13 = [v10 initWithString:v12];

    [v11 setObject:a3 forKey:v13];
    uint64_t v14 = *(void **)(qword_19E708 + *a4);
    [v14 addOperation:a3];
  }
}

id static OperationsManager.getRunningAttachmentOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_74A38(a1, a2, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableFileAttachmentsQueue);
}

id sub_74A38(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_19E708 + *a3);
  id v5 = objc_allocWithZone((Class)NSString);
  id v6 = v4;
  swift_bridgeObjectRetain();
  NSString v7 = sub_145B80();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithString:v7];

  id v9 = [v6 objectForKey:v8];
  if (v9 && [v9 isCancelled])
  {

    return 0;
  }
  return v9;
}

id static OperationsManager.cancelAttachmentOperations()()
{
  return sub_758B4("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC15JournalSettings17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableFileAttachmentsQueue);
}

void static OperationsManager.getBatchRecordDownloadOperationsRunningCount()()
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v0 = [*(id *)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_batchRecordDownloadQueue) operations];
  sub_C84C(0, &qword_19E738);
  unint64_t v1 = sub_145DE0();

  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    if (v2) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_146930();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_5:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)sub_146810();
      }
      else {
        id v4 = *(id *)(v1 + 8 * i + 32);
      }
      id v5 = v4;
      if ([v4 isCancelled])
      {
      }
      else
      {
        sub_146890();
        sub_1468C0();
        sub_1468D0();
        sub_1468A0();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_146930();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id static OperationsManager.addBatchRecordDownload(operation:)(uint64_t a1)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_batchRecordDownloadQueue);

  return [v2 addOperation:a1];
}

id static OperationsManager.cancelAllOngoingDownloads()()
{
  sub_758B4("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC15JournalSettings17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableAssetMetadataQueue);
  sub_758B4("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC15JournalSettings17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC15JournalSettings17OperationsManager_mapTableFileAttachmentsQueue);

  return _s15JournalSettings17OperationsManagerC017cancelBatchRecordC0yyFZ_0();
}

void static OperationsManager.cancelAllThumbnailOperations()()
{
  if (qword_19AE58 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_145760();
  sub_C584(v0, (uint64_t)qword_19E6F0);
  unint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_146210();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&def_94138, v1, v2, "OperationsManager.cancelAllThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority);
  id v5 = *(void **)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority);
  id v8 = *(id *)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority);
  id v6 = v4;
  id v7 = v5;
  [v8 cancelAllOperations];
  [v6 cancelAllOperations];
  [v7 cancelAllOperations];
}

id static OperationsManager.cancelLowPriorityThumbnailOperations()()
{
  if (qword_19AE58 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_145760();
  sub_C584(v0, (uint64_t)qword_19E6F0);
  unint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_146210();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&def_94138, v1, v2, "OperationsManager.cancelLowPriorityThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority);

  return [v4 cancelAllOperations];
}

id OperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationsManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void static OperationsManager.addMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.addAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_75228(uint64_t a1, void *a2)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_19E708 + *a2);
  NSString v5 = sub_145B80();
  [v4 addObserver:a1 forKeyPath:v5 options:0 context:0];
}

void static OperationsManager.removeMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.removeAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_7530C(uint64_t a1, void *a2)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_19E708 + *a2);
  NSString v5 = sub_145B80();
  [v4 removeObserver:a1 forKeyPath:v5];
}

void _s15JournalSettings17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  if (qword_19AE60 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v5 = qword_19E708;
  sub_A314(&qword_19C130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15BC70;
  id v7 = *(void **)(v5 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v7;
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v8;
  id v9 = *(void **)(v5 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v9;
  uint64_t v30 = inited;
  sub_145E00();
  unint64_t v10 = v30 & 0xC000000000000001;
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  unint64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      id v15 = (id)sub_146810();
      goto LABEL_8;
    }
    if (v14 >= *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8))) {
      break;
    }
    id v15 = *(id *)(v30 + 32 + 8 * v14);
LABEL_8:
    id v29 = v15;
    id v16 = objc_msgSend(v15, "operations", v28);
    sub_C84C(0, &qword_19E738);
    unint64_t v17 = sub_145DE0();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_146930();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_10:
        uint64_t v19 = 4;
        while (1)
        {
          id v20 = (v17 & 0xC000000000000001) != 0 ? (id)sub_146810() : *(id *)(v17 + 8 * v19);
          uint64_t v21 = v20;
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1)) {
            break;
          }
          type metadata accessor for ThumbnailCacheOperation();
          uint64_t v23 = swift_dynamicCastClass();
          if (v23)
          {
            NSString v24 = (void *)v23;
            BOOL v25 = *(void *)(v23 + qword_19D198) == a1 && *(void *)(v23 + qword_19D198 + 8) == a2;
            if (v25 || (sub_146B90() & 1) != 0)
            {
              id v26 = v21;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v27 = v26;
              [v24 setQueuePriority:v28];

              return;
            }
          }

          ++v19;
          if (v22 == v18) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_3:
    ++v14;

    swift_bridgeObjectRelease();
    unint64_t v10 = v30 & 0xC000000000000001;
    if (v14 == 3)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

void sub_756B8(void *a1)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(qword_19E708 + *a1) operations];
  sub_C84C(0, &qword_19E738);
  unint64_t v3 = sub_145DE0();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_146930();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_146810();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      id v7 = v6;
      if ([v6 isCancelled])
      {
      }
      else
      {
        sub_146890();
        sub_1468C0();
        sub_1468D0();
        sub_1468A0();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_146930();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id sub_758B4(const char *a1, void *a2, void *a3)
{
  if (qword_19AE58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_145760();
  sub_C584(v6, (uint64_t)qword_19E6F0);
  id v7 = sub_145740();
  os_log_type_t v8 = sub_146210();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&def_94138, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_19E708;
  [*(id *)(qword_19E708 + *a2) cancelAllOperations];
  id v11 = *(void **)(v10 + *a3);

  return [v11 removeAllObjects];
}

id _s15JournalSettings17OperationsManagerC017cancelBatchRecordC0yyFZ_0()
{
  if (qword_19AE58 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_145760();
  sub_C584(v0, (uint64_t)qword_19E6F0);
  unint64_t v1 = sub_145740();
  os_log_type_t v2 = sub_146210();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl(&def_94138, v1, v2, "OperationsManager.cancelBatchRecordOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_19E708 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_batchRecordDownloadQueue);

  return [v4 cancelAllOperations];
}

id _s15JournalSettings17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0F14CacheOperationC_So03OS_H6_queueCtFZ_0(uint64_t a1)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_19E708;
  sub_C84C(0, (unint64_t *)&qword_19EAE0);
  if (qword_19AE68 != -1) {
    swift_once();
  }
  if (sub_1464B0())
  {
    unint64_t v3 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority;
  }
  else
  {
    if (qword_19AE78 != -1) {
      swift_once();
    }
    char v4 = sub_1464B0();
    unint64_t v3 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority;
    if (v4) {
      unint64_t v3 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority;
    }
  }
  uint64_t v5 = *(void **)(v2 + *v3);

  return [v5 addOperation:a1];
}

void *_s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailiG0CSgSS_So03OS_K6_queueCtFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_19AE60 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v4 = qword_19E708;
    sub_C84C(0, (unint64_t *)&qword_19EAE0);
    if (qword_19AE68 != -1) {
      swift_once();
    }
    if (sub_1464B0())
    {
      uint64_t v5 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority;
    }
    else
    {
      if (qword_19AE78 != -1) {
        swift_once();
      }
      char v6 = sub_1464B0();
      uint64_t v5 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority;
      if (v6) {
        uint64_t v5 = &OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority;
      }
    }
    id v7 = [*(id *)(v4 + *v5) operations];
    sub_C84C(0, &qword_19E738);
    unint64_t v8 = sub_145DE0();

    if (v8 >> 62) {
      break;
    }
    uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
    if (!v9) {
      goto LABEL_30;
    }
LABEL_12:
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)sub_146810() : *(id *)(v8 + 8 * v10);
      id v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      type metadata accessor for ThumbnailCacheOperation();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        id v15 = (void *)v14;
        BOOL v16 = *(void *)(v14 + qword_19D198) == a1 && *(void *)(v14 + qword_19D198 + 8) == a2;
        if (v16 || (sub_146B90()) && ([v15 isCancelled] & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }

      ++v10;
      if (v13 == v9) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_146930();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_12;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

void _s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailiG0C_So17OS_dispatch_queueCtSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_19AE60 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_19E708;
  sub_A314(&qword_19C130);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15BC70;
  char v6 = *(void **)(v4 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v6;
  id v7 = *(void **)(v4 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v7;
  unint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC15JournalSettings17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v8;
  uint64_t v30 = inited;
  sub_145E00();
  uint64_t v9 = v30;
  unint64_t v10 = v30 & 0xC000000000000001;
  uint64_t v11 = v30 & 0xFFFFFFFFFFFFFF8;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v15 = (id)sub_146810();
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_23;
    }
    id v15 = *(id *)(v30 + 32);
  }
  BOOL v16 = v15;
  id v17 = objc_msgSend(v15, "underlyingQueue", v30);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = _s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailiG0CSgSS_So03OS_K6_queueCtFZ_0(a1, a2);

    BOOL v16 = v18;
    if (v19) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v20 = (id)sub_146810();
  }
  else
  {
    if (*(void *)(v11 + 16) < 2uLL) {
      goto LABEL_23;
    }
    id v20 = *(id *)(v9 + 40);
  }
  uint64_t v21 = v20;
  id v22 = [v20 underlyingQueue];
  if (v22)
  {
    id v23 = v22;
    NSString v24 = _s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailiG0CSgSS_So03OS_K6_queueCtFZ_0(a1, a2);

    uint64_t v21 = v23;
    if (v24) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v25 = (id)sub_146810();
    goto LABEL_19;
  }
  if (*(void *)(v11 + 16) < 3uLL)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v25 = *(id *)(v9 + 48);
LABEL_19:
  id v26 = v25;
  id v27 = [v25 underlyingQueue];
  if (v27)
  {
    id v28 = v27;
    id v29 = _s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailiG0CSgSS_So03OS_K6_queueCtFZ_0(a1, a2);

    id v26 = v28;
    if (v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for OperationsManager()
{
  return self;
}

BOOL OperationBase.hasCompletions.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_19E780);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_76E38(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return (v5 & 1) == 0;
}

uint64_t sub_762D4()
{
  sub_12244(&qword_19C160);
  sub_146CF0();
  swift_getFunctionTypeMetadata1();
  sub_145E90();

  return swift_getWitnessTable();
}

void OperationBase.onResult(_:)()
{
  uint64_t v1 = *(void *)(v0 + qword_19E780);
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_77068(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t OperationBase.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  char v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  _OWORD v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  OperationBase.onResult(_:)();

  return swift_release();
}

uint64_t sub_764F8()
{
  uint64_t v1 = *(void *)(v0 + qword_19E780);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_78D58(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return v5;
}

uint64_t sub_76620(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = sub_145B80();
  [v1 willChangeValueForKey:v4];

  uint64_t v5 = *(void *)&v1[qword_19E780];
  type metadata accessor for OperationBase.Locked();
  sub_12244(&qword_19C160);
  sub_146CF0();
  swift_getFunctionTypeMetadata1();
  sub_145E90();
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  id v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_78BA4(v6, &v17);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v17;
  NSString v9 = sub_145B80();
  [v2 didChangeValueForKey:v9];

  if (!sub_145E70()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  for (uint64_t i = v8 + 40; ; i += 16)
  {
    BOOL v12 = sub_145E40();
    sub_145E10();
    if (!v12) {
      break;
    }
    id v13 = *(void (**)(uint64_t))(i - 8);
    uint64_t v14 = v10 + 1;
    BOOL v15 = __OFADD__(v10, 1);
    uint64_t result = swift_retain();
    if (v15) {
      goto LABEL_11;
    }
    v13(a1);
    swift_release();
    ++v10;
    if (v14 == sub_145E70()) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_146800();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_76884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145F50();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_145F40();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_78BF0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_145EB0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t OperationBase.State.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_184A80;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t OperationBase.State.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7964616572;
  }
  if (a1 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

uint64_t sub_76ACC()
{
  swift_getWitnessTable();

  return sub_146BB0();
}

uint64_t sub_76B40(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_76BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_76C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_76C8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = OperationBase.State.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_76CBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OperationBase.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_76CE8()
{
  return 0;
}

uint64_t sub_76D58@<X0>(unsigned char *a1@<X8>)
{
  sub_12244(&qword_19C160);
  sub_146CF0();
  swift_getFunctionTypeMetadata1();
  sub_145E90();
  swift_getWitnessTable();
  uint64_t result = sub_1460A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_76E20()
{
  return 8;
}

void *sub_76E2C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_76E38@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for OperationBase.Locked()
{
  return sub_145A4();
}

uint64_t OperationBase.main@Sendable ()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = swift_isaMask & *v1;
  return _swift_task_switch(sub_76EF4, 0, 0);
}

uint64_t sub_76EF4()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0[3] + 80) - 8) + 56))(v0[2], 1, 1);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_76F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a4;
  v7[3] = a2;
  void v7[4] = a3;
  swift_retain();
  sub_12244(&qword_19C160);
  sub_146CF0();
  swift_getFunctionTypeMetadata1();
  sub_145E90();
  return sub_145E60();
}

uint64_t sub_77068(uint64_t a1)
{
  return sub_76F88(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_77088(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_12244(&qword_19C160);
  uint64_t v7 = sub_146CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_1465C0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_772D0(v7, (uint64_t)&v17, (uint64_t)v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v14, 0, 1, a4);
  a2(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_7728C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_772C4(uint64_t a1)
{
  return sub_77088(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_772D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

Class sub_773A0(uint64_t a1, uint64_t a2)
{
  return sub_77478(a1, a2, (void (*)(void))sub_773B8);
}

Swift::Int sub_773B8()
{
  Swift::Int v0 = sub_26E6C((uint64_t)&off_184AE8);
  swift_arrayDestroy();
  return v0;
}

Class sub_77400(uint64_t a1, uint64_t a2)
{
  return sub_77478(a1, a2, (void (*)(void))sub_77418);
}

Swift::Int sub_77418()
{
  Swift::Int v0 = sub_26E6C((uint64_t)&off_184B18);
  swift_arrayDestroy();
  return v0;
}

Class sub_77460(uint64_t a1, uint64_t a2)
{
  return sub_77478(a1, a2, (void (*)(void))sub_774E4);
}

Class sub_77478(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  v4.super.Class isa = sub_145FB0().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

Swift::Int sub_774E4()
{
  Swift::Int v0 = sub_26E6C((uint64_t)&off_184B48);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_7752C(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isFinished.getter();

  return v2 & 1;
}

uint64_t OperationBase.isFinished.getter()
{
  return sub_775BC();
}

uint64_t type metadata accessor for OperationBase.State()
{
  return sub_145A4();
}

uint64_t sub_77580(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isExecuting.getter();

  return v2 & 1;
}

uint64_t OperationBase.isExecuting.getter()
{
  return sub_775BC();
}

uint64_t sub_775BC()
{
  return sub_146BB0() & 1;
}

uint64_t sub_77668()
{
  return 1;
}

uint64_t sub_77670(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isReady.getter();

  return v2 & 1;
}

uint64_t OperationBase.isReady.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for OperationBase();
  unsigned int v1 = objc_msgSendSuper2(&v3, "isReady");
  if (v1)
  {
    sub_764F8();
    type metadata accessor for OperationBase.State();
    swift_getWitnessTable();
    LOBYTE(v1) = sub_146BB0();
  }
  return v1 & 1;
}

uint64_t type metadata accessor for OperationBase()
{
  return sub_145A4();
}

Swift::Void __swiftcall OperationBase.start()()
{
  uint64_t v1 = *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v0));
  sub_12244(&qword_19C160);
  uint64_t v2 = sub_146CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v20[-v4];
  uint64_t v6 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ([v0 isCancelled])
  {
    sub_145EE0();
    sub_782A0();
    uint64_t v9 = swift_allocError();
    sub_1459C0();
    *uint64_t v5 = v9;
    swift_storeEnumTagMultiPayload();
    sub_76620((uint64_t)v5);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = sub_145F50();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v0;
    uint64_t v12 = v0;
    uint64_t v13 = sub_76884((uint64_t)v8, (uint64_t)&unk_19E798, (uint64_t)v11);
    NSString v14 = sub_145B80();
    [v12 willChangeValueForKey:v14];

    uint64_t v15 = *(void *)((char *)v12 + qword_19E780);
    __chkstk_darwin(v16);
    *(void *)&v20[-16] = v1;
    *(void *)&v20[-8] = v13;
    type metadata accessor for OperationBase.Locked();
    uint64_t v17 = v15 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v15 + 16);
    id v18 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v18);
    sub_7824C(v17);
    os_unfair_lock_unlock(v18);
    NSString v19 = sub_145B80();
    [v12 didChangeValueForKey:v19];

    swift_release();
  }
}

uint64_t sub_77ADC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4[2] = a4;
  uint64_t v12 = swift_isaMask & *a4;
  uint64_t v5 = *(uint64_t *)((char *)&stru_20.filesize + v12);
  v4[3] = v5;
  sub_12244(&qword_19C160);
  uint64_t v6 = sub_146CF0();
  v4[4] = v6;
  v4[5] = *(void *)(v6 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v7 = sub_1465C0();
  v4[7] = v7;
  v4[8] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[9] = v8;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))(*(void *)(v12 + 104) + **(int **)(v12 + 104));
  uint64_t v9 = (void *)swift_task_alloc();
  v4[12] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_77D50;
  return v11(v8);
}

uint64_t sub_77D50()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_7807C;
  }
  else {
    uint64_t v2 = sub_77E64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_77E64()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
    type metadata accessor for OperationBase.Failure();
    swift_getWitnessTable();
    uint64_t v4 = swift_allocError();
    swift_willThrow();
    uint64_t v6 = v0[5];
    uint64_t v5 = (uint64_t *)v0[6];
    uint64_t v7 = v0[4];
    *uint64_t v5 = v4;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_76620((uint64_t)v5);
    swift_errorRelease();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    swift_storeEnumTagMultiPayload();
    sub_76620(v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_7807C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  *uint64_t v1 = v0[13];
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_76620((uint64_t)v1);
  swift_errorRelease();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_78158()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_78198(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_21598;
  return sub_77ADC(a1, v4, v5, v6);
}

uint64_t sub_7824C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = 1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_782A0()
{
  unint64_t result = qword_19E7A0[0];
  if (!qword_19E7A0[0])
  {
    sub_145EE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_19E7A0);
  }
  return result;
}

void sub_782F8(void *a1)
{
  id v1 = a1;
  OperationBase.start()();
}

Swift::Void __swiftcall OperationBase.cancel()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for OperationBase();
  objc_msgSendSuper2(&v5, "cancel");
  uint64_t v1 = *(void *)&v0[qword_19E780];
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_7853C(v2, &v4);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  if (v4)
  {
    sub_145F60();
    swift_release();
  }
}

uint64_t sub_784C0()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_78534()
{
  return sub_784C0();
}

uint64_t sub_7853C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

void sub_78584(void *a1)
{
  id v1 = a1;
  OperationBase.cancel()();
}

id sub_785CC(void *a1)
{
  id v1 = a1;
  sub_78634();

  NSString v2 = sub_145B80();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_78634()
{
  int v0 = sub_764F8();
  if (!v0) {
    return 0x7964616572;
  }
  if (v0 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

void sub_786A4()
{
}

id OperationBase.init()()
{
  uint64_t v1 = qword_19E780;
  NSString v2 = v0;
  char v8 = sub_76CE8();
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  type metadata accessor for OperationBase.Locked();
  uint64_t v5 = sub_BC1C();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&v0[v1] = v5;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OperationBase();
  return objc_msgSendSuper2(&v7, "init");
}

id sub_787FC()
{
  return OperationBase.init()();
}

id OperationBase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationBase();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_7887C()
{
  return swift_release();
}

uint64_t sub_7888C()
{
  return swift_getWitnessTable();
}

uint64_t sub_788A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_788F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_788F8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x789C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_789F0()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_78A2C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_78A6C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_78AD4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_78B1C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_78B64(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_78BA4(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)a1 = 2;
  *a2 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_786A4();
}

uint64_t sub_78BF0(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19BFB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_78C50()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_78C88(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21598;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_19E928 + dword_19E928);
  return v6(a1, v4);
}

uint64_t type metadata accessor for OperationBase.Failure()
{
  return sub_145A4();
}

uint64_t sub_78D58@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_78DA0()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

unsigned char *sub_78DC8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x78E64);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_78E8C()
{
  return swift_getWitnessTable();
}

id sub_78EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_144E20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_144F60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - v13;
  sub_7917C((uint64_t)v12);
  v23[0] = a1;
  v23[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_12060();
  sub_144F50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  id v16 = [self defaultManager];
  sub_144F10();
  NSString v17 = sub_145B80();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17];

  if (v18)
  {
    sub_144E10();
    id v19 = objc_allocWithZone((Class)UIImage);
    NSString v20 = sub_145B80();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithContentsOfFile:v20];

    v15(v14, v8);
  }
  else
  {
    v15(v14, v8);
    return 0;
  }
  return v21;
}

uint64_t sub_7917C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_144E20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_144F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v17 - v12;
  if (qword_19AE00 != -1) {
    uint64_t v11 = swift_once();
  }
  if (qword_1A3BB0)
  {
    sub_29058(qword_1A3BA8, (void *)qword_1A3BB0, (uint64_t)v10);
    unsigned int v19 = enum case for URL.DirectoryHint.inferFromPath(_:);
    unsigned int v18 = *(void (**)(char *))(v3 + 104);
    v18(v5);
    v17[1] = sub_12060();
    sub_144F40();
    v17[0] = a1;
    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    ((void (*)(char *, void, uint64_t))v18)(v5, v19, v2);
    sub_144F40();
    v14(v5, v2);
    return ((uint64_t (*)(char *, uint64_t))v15)(v13, v6);
  }
  else
  {
    return static URL.cachesDirectory.getter(v11);
  }
}

void *sub_7944C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  id v2 = v1;
  return v1;
}

uint64_t sub_7947C(uint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v3 = v2;
  sub_A314(&qword_19D6A8);
  sub_1463C0();

  return v5 & 1;
}

uint64_t sub_79534(uint64_t a1)
{
  return sub_79584(a1, (uint64_t)&unk_187CB0, (uint64_t)sub_7EE80, (uint64_t)&unk_187CC8);
}

uint64_t sub_7955C(uint64_t a1)
{
  return sub_79584(a1, (uint64_t)&unk_187C60, (uint64_t)sub_7EE78, (uint64_t)&unk_187C78);
}

uint64_t sub_79584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v8 = sub_A314(&qword_19B730);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_145290();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_144AD0();
  if (!v23)
  {
    sub_1248C((uint64_t)aBlock, &qword_19B1E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_1248C((uint64_t)v10, &qword_19B730);
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1248C((uint64_t)v10, &qword_19B730);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (sub_145260())
  {
    id v16 = *(void **)&v4[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context];
    if (v16)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v4;
      uint64_t v24 = a3;
      uint64_t v25 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10478;
      uint64_t v23 = a4;
      unsigned int v18 = _Block_copy(aBlock);
      id v19 = v16;
      id v20 = v7;
      swift_release();
      [v19 performBlock:v18];
      _Block_release(v18);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_79854()
{
  id v1 = [v0 assetType];
  if (v1)
  {
    id v2 = v1;
    sub_145BC0();
  }
  switch(sub_B938())
  {
    case 1u:
      uint64_t v6 = (char *)objc_allocWithZone((Class)_s14LivePhotoAssetCMa(0));
      *(void *)&v6[OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_metadata] = 0;
      uint64_t v7 = &v6[OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
      *(_DWORD *)uint64_t v7 = 0;
      void v7[4] = 1;
      *(void *)&v6[OBJC_IVAR____TtCC15JournalSettings10Journaling14LivePhotoAsset_livePhotoAttachments] = 0;
      return sub_7B3F8(v0);
    case 2u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10VideoAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling10VideoAsset_metadata;
      goto LABEL_24;
    case 3u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10MusicAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling10MusicAsset_metadata;
      goto LABEL_24;
    case 4u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s12PodcastAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling12PodcastAsset_metadata;
      goto LABEL_24;
    case 5u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s9BookAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling9BookAsset_metadata;
      goto LABEL_24;
    case 6u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10AudioAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata;
      goto LABEL_24;
    case 7u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10VisitAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling10VisitAsset_metadata;
      goto LABEL_24;
    case 8u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16MultiPinMapAssetCMa());
      *(void *)&v4[OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_metadata] = 0;
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling16MultiPinMapAsset_isWorkArray;
      goto LABEL_24;
    case 9u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling15GenericMapAsset_metadata;
      goto LABEL_24;
    case 0xAu:
      uint64_t v8 = objc_allocWithZone((Class)_s9LinkAssetCMa(0));
      *(void *)&v8[OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_metadata] = 0;
      v8[OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_contentType] = 6;
      return sub_7B3F8(v0);
    case 0xBu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s12ContactAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling12ContactAsset_metadata;
      goto LABEL_24;
    case 0xCu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16WorkoutIconAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata;
      goto LABEL_24;
    case 0xDu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s17WorkoutRouteAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling17WorkoutRouteAsset_metadata;
      goto LABEL_24;
    case 0xEu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s15ReflectionAssetCMa());
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling15ReflectionAsset_metadata;
      goto LABEL_24;
    case 0xFu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16StateOfMindAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata;
      goto LABEL_24;
    case 0x10u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s19MotionActivityAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata;
      goto LABEL_24;
    case 0x11u:
      uint64_t v12 = &type metadata for JournalFeatureFlags;
      unint64_t v13 = sub_7ECE0();
      v11[0] = 13;
      char v9 = sub_1455A0();
      sub_C7FC((uint64_t)v11);
      if ((v9 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s20ThirdPartyMediaAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata;
      goto LABEL_24;
    case 0x12u:
      id v3 = (objc_class *)_s16PlaceholderAssetCMa();
      goto LABEL_26;
    case 0x13u:
    case 0x14u:
    case 0x15u:
LABEL_4:
      id v3 = (objc_class *)_s12UnknownAssetCMa();
LABEL_26:
      objc_allocWithZone(v3);
      return sub_7B3F8(v0);
    default:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10PhotoAssetCMa(0));
      char v5 = &OBJC_IVAR____TtCC15JournalSettings10Journaling10PhotoAsset_metadata;
LABEL_24:
      *(void *)&v4[*v5] = 0;
      return sub_7B3F8(v0);
  }
}

void sub_79BFC()
{
  uint64_t v1 = sub_A314(&qword_19B730);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_145290();
  uint64_t v4 = *(void *)(v75 - 8);
  uint64_t v5 = __chkstk_darwin(v75);
  uint64_t v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)&v64 - v8;
  __chkstk_darwin(v7);
  int v70 = (char *)&v64 - v9;
  uint64_t v10 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_144F60();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  int v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_144DF0();
  uint64_t v17 = __chkstk_darwin(v16);
  id v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = _swiftEmptyArrayStorage;
  id v22 = &_swiftEmptySetSingleton;
  uint64_t v86 = &_swiftEmptySetSingleton;
  int v87 = _swiftEmptyArrayStorage;
  uint64_t v80 = v0;
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO];
  if (v23)
  {
    uint64_t v68 = v18;
    uint64_t v69 = v17;
    id v67 = v23;
    id v24 = [v67 fileAttachments];
    if (!v24)
    {
      sub_C84C(0, &qword_19EB28);
      id v24 = (id)sub_146420();
    }
    sub_146430();

    sub_144DE0();
    if (v85)
    {
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      unint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v4 + 16);
      uint64_t v64 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      uint64_t v77 = (void (**)(char *, uint64_t))(v13 + 8);
      unint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      id v76 = v12;
      do
      {
        sub_2A74C(&v84, &v83);
        type metadata accessor for JournalEntryAssetFileAttachmentMO();
        if (swift_dynamicCast())
        {
          id v26 = v15;
          uint64_t v27 = (uint64_t)v3;
          id v28 = v82;
          if (sub_D4484(v28))
          {
            swift_retain();
            sub_145DC0();
            if (*(void *)((char *)&dword_10 + ((unint64_t)v87 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)v87 & 0xFFFFFFFFFFFFFF8)) >> 1) {
              sub_145E20();
            }
            sub_145E50();
            sub_145E00();
            swift_release();
          }
          id v29 = objc_msgSend(v28, "filePath", v64);
          if (v29)
          {
            uint64_t v30 = v29;
            sub_145BC0();

            type metadata accessor for Journaling();
            sub_621B8((uint64_t)v12);
            swift_bridgeObjectRelease();
            NSString v31 = v12;
            uint64_t v32 = (uint64_t)v12;
            uint64_t v33 = v81;
            if ((*v25)(v31, 1, v81) != 1)
            {
              (*v79)(v15, v32, v33);
              id v34 = [self defaultManager];
              sub_144F10();
              NSString v35 = sub_145B80();
              swift_bridgeObjectRelease();
              unsigned __int8 v36 = [v34 fileExistsAtPath:v35];

              if (v36)
              {
                (*v77)(v26, v33);

                id v3 = (char *)v27;
                int v15 = v26;
LABEL_23:
                uint64_t v25 = v78;
                uint64_t v12 = v76;
                goto LABEL_7;
              }
              id v37 = [v28 id];
              id v3 = (char *)v27;
              if (v37)
              {
                NSString v38 = v37;
                uint64_t v39 = v74;
                sub_145270();

                id v40 = *v72;
                uint64_t v41 = v39;
                uint64_t v42 = v75;
                (*v72)(v27, v41, v75);
                (*v73)(v27, 0, 1, v42);
                if ((*v66)(v27, 1, v42) != 1)
                {
                  id v43 = v70;
                  uint64_t v44 = v75;
                  v40((uint64_t)v70, v27, v75);
                  NSString v45 = v71;
                  (*v65)(v71, v43, v44);
                  uint64_t v46 = v74;
                  sub_EA668(v74, v45);

                  id v47 = *v64;
                  (*v64)(v46, v44);
                  v47((uint64_t)v43, v44);
                  int v15 = v26;
                  (*v77)(v26, v81);
                  goto LABEL_23;
                }
              }
              else
              {
                (*v73)(v27, 1, 1, v75);
              }

              int v15 = v26;
              (*v77)(v26, v81);
              sub_1248C(v27, &qword_19B730);
              goto LABEL_23;
            }

            sub_1248C(v32, &qword_19EB20);
            uint64_t v12 = (char *)v32;
          }
          else
          {
          }
        }
LABEL_7:
        sub_144DE0();
      }
      while (v85);
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v69);

    id v22 = v86;
    id v21 = v87;
  }
  unint64_t v48 = v80;
  *(void *)&v80[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachmentIdsMissingFile] = v22;
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments) = v21;
  uint64_t v49 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((char *)&stru_298.size + (swift_isaMask & *v48)))(v49);
  swift_getObjectType();
  uint64_t v50 = swift_conformsToProtocol2();
  if (v50) {
    uint64_t v51 = v50;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v50) {
    CLLocationCoordinate2D v52 = v48;
  }
  else {
    CLLocationCoordinate2D v52 = 0;
  }
  if (v52)
  {
    uint64_t ObjectType = swift_getObjectType();
    MKMapRect v54 = v80;
    sub_13F60(ObjectType, v51);
  }
  MKMapRect v55 = v80;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    MKMapRect v56 = v55;
  }
  else {
    MKMapRect v56 = 0;
  }
  if (v56)
  {
    MKMapRect v57 = *(void **)&v56[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO];
    if (v57)
    {
      MKMapRect v58 = v80;
      id v59 = [v57 contentType];
      if (v59)
      {
        double v60 = v59;
        MKMapRect v57 = (void *)sub_145BC0();
        uint64_t v62 = v61;

LABEL_43:
        v56[OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_contentType] = sub_57678((uint64_t)v57, v62);

        return;
      }
      MKMapRect v57 = 0;
    }
    else
    {
      uint64_t v63 = v80;
    }
    uint64_t v62 = (void *)0xE000000000000000;
    goto LABEL_43;
  }
}

uint64_t sub_7A530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void *)(a1 + 8);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_7E0BC(0, *(void *)(v7 + 16) + 1, 1, (double *)v7);
    uint64_t v7 = result;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_7E0BC((double *)(v9 > 1), v10 + 1, 1, (double *)v7);
    uint64_t v7 = result;
  }
  *(void *)(v7 + 16) = v10 + 1;
  unint64_t v11 = v7 + 16 * v10;
  *(void *)(v11 + 32) = sub_7EA94;
  *(void *)(v11 + 40) = v6;
  *(void *)(a1 + 8) = v7;
  return result;
}

void sub_7A614(void *a1, char a2, void (*a3)(id *))
{
  uint64_t v4 = a1;
  if (a2)
  {
    id v6 = a1;
    sub_A314(&qword_19C160);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = a1;
  }
  id v6 = v4;
  a3(&v6);
}

uint64_t sub_7A698(uint64_t a1)
{
  return sub_7A708(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD000000000000023, 0x800000000014D700, &qword_1A3BF8);
}

uint64_t sub_7A6D0(uint64_t a1)
{
  return sub_7A708(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD000000000000016, 0x800000000014D730, &qword_1A3C00);
}

uint64_t sub_7A708(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_146300();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1462D0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_145980();
  __chkstk_darwin(v12 - 8);
  sub_C84C(0, (unint64_t *)&qword_19BC70);
  a2();
  sub_1462C0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_146340();
  *a5 = result;
  return result;
}

uint64_t sub_7A8D0(uint64_t a1)
{
  return sub_7A708(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD000000000000024, 0x800000000014D750, &qword_1A3C08);
}

uint64_t sub_7A908(uint64_t a1)
{
  uint64_t v3 = sub_145230();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19DCC0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_A314(&qword_19C150);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  sub_12428(a1, (uint64_t)v57, &qword_19B1E0);
  if (!v58)
  {
    sub_1248C((uint64_t)v57, &qword_19B1E0);
    goto LABEL_29;
  }
  _s5AssetCMa();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    char v51 = 0;
    return v51 & 1;
  }
  uint64_t v55 = v4;
  uint64_t v19 = v56;
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType != swift_getObjectType() || (sub_145260() & 1) == 0) {
    goto LABEL_28;
  }
  CLLocationCoordinate2D v53 = v1;
  MKMapRect v54 = v19;
  char v21 = v19[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type];
  uint64_t v22 = sub_8758(*((unsigned char *)v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type));
  uint64_t v24 = v23;
  if (v22 == sub_8758(v21) && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    id v26 = v54;
  }
  else
  {
    char v27 = sub_146B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v26 = v54;
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
  }
  char v28 = v26[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_source];
  uint64_t v29 = sub_8B60(*((unsigned char *)v53 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_source));
  uint64_t v31 = v30;
  if (v29 == sub_8B60(v28) && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_146B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_22;
    }
  }
  id v34 = *(void **)((char *)v53 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_title);
  NSString v35 = *(void **)&v54[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_title];
  if (!v34)
  {
    if (!v35) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (!v35
    || (sub_C84C(0, &qword_19B1B8),
        id v36 = v35,
        id v37 = v34,
        char v38 = sub_1464B0(),
        v37,
        v36,
        (v38 & 1) == 0))
  {
LABEL_22:

    goto LABEL_29;
  }
LABEL_17:
  uint64_t v39 = (uint64_t)v53 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_12428(v39, (uint64_t)v18, &qword_19C150);
  id v40 = &v54[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_suggestionDate];
  swift_beginAccess();
  sub_12428((uint64_t)v40, (uint64_t)v16, &qword_19C150);
  uint64_t v41 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_12428((uint64_t)v18, (uint64_t)v9, &qword_19C150);
  sub_12428((uint64_t)v16, v41, &qword_19C150);
  uint64_t v42 = v55;
  id v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v43((uint64_t)v9, 1, v3) != 1)
  {
    sub_12428((uint64_t)v9, (uint64_t)v13, &qword_19C150);
    uint64_t v46 = v42;
    if (v43(v41, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v6, v41, v3);
      sub_7EC98((unint64_t *)&qword_19EB60, (void (*)(uint64_t))&type metadata accessor for Date);
      char v47 = sub_145AD0();
      unint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v6, v3);
      sub_1248C((uint64_t)v16, &qword_19C150);
      sub_1248C((uint64_t)v18, &qword_19C150);
      v48(v13, v3);
      uint64_t v45 = sub_1248C((uint64_t)v9, &qword_19C150);
      uint64_t v19 = v54;
      if (v47) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    sub_1248C((uint64_t)v16, &qword_19C150);
    sub_1248C((uint64_t)v18, &qword_19C150);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v3);
    uint64_t v19 = v54;
    goto LABEL_25;
  }
  sub_1248C((uint64_t)v16, &qword_19C150);
  sub_1248C((uint64_t)v18, &qword_19C150);
  unsigned int v44 = v43(v41, 1, v3);
  uint64_t v19 = v54;
  if (v44 != 1)
  {
LABEL_25:
    sub_1248C((uint64_t)v9, &qword_19DCC0);
LABEL_28:

    goto LABEL_29;
  }
  uint64_t v45 = sub_1248C((uint64_t)v9, &qword_19C150);
LABEL_27:
  char v49 = (*(uint64_t (**)(uint64_t))&stru_1F8.segname[(swift_isaMask & *v53) - 8])(v45);
  char v50 = (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *(void *)v19) - 8])();

  char v51 = v49 ^ v50 ^ 1;
  return v51 & 1;
}

Swift::Int sub_7B084()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_145230();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_A314(&qword_19C150);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_146CE0();
  sub_145290();
  sub_7EC98((unint64_t *)&qword_19EB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_145A20();
  sub_8758(*(unsigned char *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type));
  sub_145C70();
  swift_bridgeObjectRelease();
  sub_8B60(*(unsigned char *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_source));
  sub_145C70();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_title);
  if (v9)
  {
    sub_146CA0(1u);
    id v10 = v9;
    sub_1464C0();
  }
  else
  {
    sub_146CA0(0);
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_12428(v11, (uint64_t)v8, &qword_19C150);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_146CA0(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_146CA0(1u);
    sub_7EC98(&qword_19EB58, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_145A20();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  long long v21 = v16;
  long long v22 = v17;
  uint64_t v23 = v18;
  long long v19 = v14;
  long long v20 = v15;
  return sub_146CC0();
}

id sub_7B3A8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v3) {
    id result = [v3 isSlim];
  }
  else {
    id result = &def_94138 + 2;
  }
  *a2 = (_BYTE)result;
  return result;
}

id sub_7B3F8(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  unint64_t v94 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19B730);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v103 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v91 - v9;
  __chkstk_darwin(v8);
  uint64_t v95 = (char *)&v91 - v10;
  uint64_t v11 = sub_145290();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  uint64_t v14 = OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context;
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_context] = 0;
  uint64_t v15 = OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO;
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO] = 0;
  uint64_t v96 = OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_title;
  *(void *)&v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_title] = 0;
  uint64_t v106 = *(void (**)(void))(v12 + 56);
  uint64_t v97 = &v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_suggestionId];
  v106();
  long long v16 = &v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_suggestionDate];
  uint64_t v17 = sub_145230();
  uint64_t v18 = *(void *)(v17 - 8);
  long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v101 = v17;
  uint64_t v102 = (uint64_t)v16;
  uint64_t v99 = v18 + 56;
  char v100 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v16, 1, 1);
  long long v20 = &v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachmentsDirectoryPath];
  *long long v20 = 0;
  v20[1] = 0;
  long long v21 = &v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v22 = sub_144F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = &v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_thumbnailCacheKey];
  void *v23 = 0;
  v23[1] = 0;
  uint64_t v98 = OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_isHidden;
  v1[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_isHidden] = 0;
  uint64_t v24 = OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_delegates;
  uint64_t v25 = self;
  id v26 = v1;
  *(void *)&v1[v24] = [v25 weakObjectsHashTable];
  char v27 = &v26[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_didUpdate];
  *(void *)char v27 = 0;
  *((void *)v27 + 1) = 0;
  char v28 = v26;
  uint64_t v29 = &v26[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_didUpdateMediaFile];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  id v30 = [a1 managedObjectContext];
  uint64_t v31 = *(void **)&v1[v14];
  *(void *)&v1[v14] = v30;

  uint64_t v32 = *(void **)&v1[v15];
  *(void *)&v1[v15] = a1;
  id v33 = a1;

  uint64_t v104 = v15;
  uint64_t v105 = v11;
  id v34 = *(void **)&v1[v15];
  if (!v34)
  {
    uint64_t v35 = (uint64_t)v95;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v106)(v95, 1, 1, v11);
    uint64_t v44 = v11;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    uint64_t v45 = v104;
    uint64_t v46 = v93;
LABEL_7:
    sub_145280();
    sub_1248C(v35, &qword_19B730);
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v42[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id], v46, v44);
    goto LABEL_9;
  }
  uint64_t v35 = (uint64_t)v95;
  id v36 = [v34 id];
  if (v36)
  {
    id v37 = v36;
    char v38 = v92;
    sub_145270();

    uint64_t v39 = v38;
    uint64_t v40 = 0;
    uint64_t v41 = v33;
    uint64_t v42 = v28;
    id v43 = v106;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    id v43 = v106;
    uint64_t v39 = v92;
  }
  uint64_t v46 = v93;
  uint64_t v47 = (uint64_t)v39;
  uint64_t v44 = v105;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v43)(v39, v40, 1, v105);
  sub_7EC30(v47, v35);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v35, 1, v44);
  uint64_t v45 = v104;
  if (v48 == 1) {
    goto LABEL_7;
  }
  char v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  v49(v46, v35, v105);
  uint64_t v44 = v105;
  v49(&v42[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id], (uint64_t)v46, v105);
LABEL_9:
  char v50 = *(void **)&v1[v45];
  if (v50)
  {
    id v51 = [v50 assetType];
    if (v51)
    {
      CLLocationCoordinate2D v52 = v51;
      sub_145BC0();
    }
    uint64_t v53 = (uint64_t)v94;
    uint64_t v45 = v104;
  }
  else
  {
    uint64_t v53 = (uint64_t)v94;
  }
  char v54 = sub_B938();
  if (v54 == 21) {
    char v55 = 20;
  }
  else {
    char v55 = v54;
  }
  v42[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_type] = v55;
  MKMapRect v56 = *(void **)&v1[v45];
  if (v56)
  {
    id v57 = [v56 title];
    if (v57)
    {
      uint64_t v58 = sub_144FA0();
      unint64_t v60 = v59;

      id v57 = sub_9C5C(v58, v60);
      unint64_t v61 = v60;
      uint64_t v44 = v105;
      sub_C52C(v58, v61);
    }
  }
  else
  {
    id v57 = 0;
  }
  uint64_t v62 = *(void **)&v1[v96];
  *(void *)&v1[v96] = v57;

  uint64_t v63 = *(void **)&v1[v45];
  if (v63)
  {
    id v64 = [v63 source];
    uint64_t v65 = (uint64_t)v103;
    if (v64)
    {
      uint64_t v66 = v64;
      uint64_t v67 = sub_145BC0();
      uint64_t v69 = v68;
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v69 = (void *)0xE000000000000000;
    }
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v69 = (void *)0xE000000000000000;
    uint64_t v65 = (uint64_t)v103;
  }
  char v70 = sub_B98C(v67, v69);
  if (v70 == 10) {
    char v71 = 9;
  }
  else {
    char v71 = v70;
  }
  v42[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_source] = v71;
  id v72 = [v41 suggestionId];
  if (v72)
  {
    uint64_t v73 = v72;
    sub_145270();

    uint64_t v74 = 0;
  }
  else
  {
    uint64_t v74 = 1;
  }
  uint64_t v75 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v65, v74, 1, v44);
  uint64_t v76 = (uint64_t)v97;
  swift_beginAccess();
  sub_121E0(v65, v76, &qword_19B730);
  swift_endAccess();
  id v77 = [v41 suggestionDate];
  if (v77)
  {
    unint64_t v78 = v77;
    sub_1451E0();

    uint64_t v75 = 0;
  }
  v100(v53, v75, 1, v101);
  uint64_t v79 = v102;
  swift_beginAccess();
  sub_121E0(v53, v79, &qword_19C150);
  swift_endAccess();
  unsigned __int8 v80 = [v41 isHidden];
  v1[v98] = v80;

  uint64_t v81 = (objc_class *)_s5AssetCMa();
  v107.receiver = v42;
  v107.super_class = v81;
  id v82 = objc_msgSendSuper2(&v107, "init");
  sub_79BFC();
  long long v83 = self;
  id v84 = [v83 defaultCenter];
  uint64_t v85 = qword_19ACA8;
  id v86 = v82;
  if (v85 != -1) {
    swift_once();
  }
  [v84 addObserver:v86 selector:"assetUpdatedNotificationWithNotification:" name:qword_1A3A20 object:0];

  id v87 = [v83 defaultCenter];
  uint64_t v88 = qword_19ACB0;
  id v89 = v86;
  if (v88 != -1) {
    swift_once();
  }
  [v87 addObserver:v89 selector:"mediaFileUpdatedNotificationWithNotification:" name:qword_1A3A28 object:0];

  return v89;
}

id sub_7BCEC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_thumbnailCacheKey + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_thumbnailCacheKey];
    swift_bridgeObjectRetain();
    _s15JournalSettings17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(v2, v1, 0);
    swift_bridgeObjectRelease();
  }
  sub_47D3C(1);
  id v3 = [self defaultCenter];
  [v3 removeObserver:v0];

  v5.receiver = v0;
  v5.super_class = (Class)_s5AssetCMa();
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_7BF4C()
{
  return _s5AssetCMa();
}

uint64_t _s5AssetCMa()
{
  uint64_t result = qword_19EA18;
  if (!qword_19EA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_7BFA0(uint64_t a1)
{
  sub_79BFC();
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_delegates), "allObjects"));
  unint64_t v3 = sub_145DE0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_146930();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
    if (!v4) {
      goto LABEL_18;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = sub_146810();
    }
    else
    {
      uint64_t v6 = *(void *)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    swift_getObjectType();
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    }
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_didUpdate);
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    sub_278A8((uint64_t)v11);
  }
}

void sub_7C17C(uint64_t a1)
{
  sub_79BFC();
  id v2 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_didUpdateMediaFile);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_278A8((uint64_t)v2);
  }
}

uint64_t sub_7C204(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_144AF0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_144AC0();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_7C2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  uint64_t v18 = a2;
  long long v19 = a7;
  char v11 = a5 & 1;
  uint64_t v12 = sub_A314(&qword_19EAA8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_7C4AC(a3, a4, v11, a6, v19, (uint64_t)sub_7D758, v16);
  return swift_release();
}

uint64_t sub_7C464(void *a1)
{
  id v1 = a1;
  sub_A314(&qword_19EAA8);
  return sub_145ED0();
}

uint64_t sub_7C4AC(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a6;
  uint64_t v35 = a4;
  uint64_t v34 = sub_145940();
  uint64_t v38 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_145980();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v32 = a3 & 1;
  if (a3) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = a2;
  }
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, void *))((char *)&stru_298.reserved2 + (swift_isaMask & *v7)))(v18, a1, a5);
  uint64_t v21 = v20;
  uint64_t v22 = (void *)((char *)v7 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_thumbnailCacheKey);
  uint64_t *v22 = v19;
  v22[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v33;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = a7;
  *(void *)(v24 + 40) = v19;
  *(void *)(v24 + 48) = v21;
  *(unsigned char *)(v24 + 56) = a1;
  *(void *)(v24 + 64) = a2;
  *(unsigned char *)(v24 + 72) = v32;
  id v26 = v35;
  *(void *)(v24 + 80) = a5;
  *(void *)(v24 + 88) = v26;
  aBlock[4] = sub_7D85C;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  void aBlock[3] = &unk_187B10;
  char v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v28 = a5;
  v26;
  sub_145950();
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_7EC98((unint64_t *)&qword_19EAB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  uint64_t v29 = v34;
  sub_1466C0();
  sub_146330();
  _Block_release(v27);
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v14, v29);
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v17, v37);
  swift_release();
  return swift_release();
}

id sub_7C84C(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for ThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  return sub_42A2C(v14, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_7C8E0(uint64_t a1, char a2)
{
  return sub_4C58C(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id, a1, 0, 1, 0, 1, a2);
}

void sub_7C908(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v65 = a7;
  unsigned int v64 = a6;
  uint64_t v15 = sub_145980();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v21 = &v58[-v20];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a2();
    return;
  }
  uint64_t v23 = (void *)Strong;
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  if (qword_19ADD0 != -1) {
    swift_once();
  }
  id v24 = sub_78EAC(a4, a5);
  id v25 = [v24 imageByPreparingForDisplay];

  if (v25)
  {
    id v26 = v25;
    ((void (*)(id))v67)(v25);

    return;
  }
  int v27 = a8 & 1;
  uint64_t v63 = a10;
  id v28 = (char *)_s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailiG0CSgSS_So03OS_K6_queueCtFZ_0(a4, a5);
  if (!v28)
  {
    _s15JournalSettings17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailiG0C_So17OS_dispatch_queueCtSgSS_tFZ_0(a4, a5);
    if (!v41)
    {
      sub_7CF80(v23, v64, v65, a8 & 1, a4, a5, a9, (uint64_t)v67, v66);
      sub_47D3C(0);

      return;
    }
    id v43 = v41;
    int v59 = v27;
    uint64_t v60 = a9;
    id v62 = v42;
    sub_146310();
    uint64_t v61 = sub_145960();
    uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    v44(v21, v15);
    sub_146310();
    uint64_t v45 = sub_145960();
    v44(v19, v15);
    uint64_t v46 = v67;
    if (v61 >= v45)
    {
      unint64_t v47 = *(void *)&v43[qword_19D1A8];
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_146930();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = *(void *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFFF8));
      }
      unint64_t v49 = *(void *)((char *)v23 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments);
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = v67;
        uint64_t v57 = sub_146930();
        swift_bridgeObjectRelease();
        if (v48 == v57) {
          goto LABEL_20;
        }
      }
      else if (v48 == *(void *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_20:
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v66;
        *(void *)(v50 + 16) = v46;
        *(void *)(v50 + 24) = v51;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = sub_7EA48;
        *(void *)(v52 + 24) = v50;
        __chkstk_darwin(v52);
        uint64_t v54 = (uint64_t)&v53[4];
        char v55 = v53 + 10;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v55);
        sub_7EA78(v54);
        os_unfair_lock_unlock(v55);
        swift_release();

        goto LABEL_13;
      }
    }
    sub_7CF80(v23, v64, v65, v59, a4, a5, v60, (uint64_t)v46, v66);

    return;
  }
  uint64_t v29 = v28;
  char v30 = v27;
  unint64_t v31 = *(void *)&v28[qword_19D1A8];
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_146930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v33 = v67;
  unint64_t v34 = *(void *)((char *)v23 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments);
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = v67;
    uint64_t v56 = sub_146930();
    swift_bridgeObjectRelease();
    if (v32 == v56) {
      goto LABEL_12;
    }
  }
  else if (v32 == *(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8)))
  {
LABEL_12:
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v66;
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = v36;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_7EEDC;
    *(void *)(v37 + 24) = v35;
    __chkstk_darwin(v37);
    uint64_t v39 = (uint64_t)&v38[4];
    uint64_t v40 = v38 + 10;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_7EF04(v39);
    os_unfair_lock_unlock(v40);

    swift_release();
LABEL_13:
    swift_release();
    return;
  }
  sub_7CF80(v23, v64, v65, v30, a4, a5, a9, (uint64_t)v33, v66);
}

void sub_7CF80(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))((char *)&stru_298.flags
                                                                                               + (swift_isaMask & *a1)))(a2, a3, a4 & 1, a5, a6, a7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a8;
  *(void *)(v11 + 24) = a9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_7EEDC;
  *(void *)(v12 + 24) = v11;
  id v13 = *(os_unfair_lock_s **)&v10[qword_19E780];
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 10;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_7EF04(v14);
  os_unfair_lock_unlock(v15);
  swift_release();
  swift_release();
  sub_C84C(0, (unint64_t *)&qword_19EAE0);
  if (qword_19AE68 != -1) {
    swift_once();
  }
  if (sub_1464B0())
  {
    [v10 setQualityOfService:9];
  }
  else
  {
    if (qword_19AE70 != -1) {
      swift_once();
    }
    if (sub_1464B0())
    {
      uint64_t v16 = v10;
      uint64_t v17 = -1;
    }
    else
    {
      uint64_t v16 = v10;
      uint64_t v17 = 25;
    }
    [v16 setQualityOfService:v17];
  }
  _s15JournalSettings17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0F14CacheOperationC_So03OS_H6_queueCtFZ_0((uint64_t)v10);
}

void sub_7D1EC()
{
  sub_145290();
  if (v0 <= 0x3F)
  {
    sub_7D3D8(319, (unint64_t *)&qword_19B830, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      sub_7D3D8(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_7D3D8(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_7D3D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_7D42C(void *a1, void *a2)
{
  return static UUID.< infix(_:_:)(*a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id, *a2 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id);
}

id sub_7D454(uint64_t a1)
{
  uint64_t v3 = sub_144DF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 dataAttachments];
  if (!v7)
  {
    sub_C84C(0, &qword_19EB28);
    id v7 = (id)sub_146420();
  }
  sub_146430();

  sub_144DE0();
  while (v14)
  {
    sub_2A74C(&v13, &v12);
    type metadata accessor for JournalEntryAssetAttachmentMO();
    if (swift_dynamicCast())
    {
      id v8 = v11;
      if ((int)[v11 index] == a1) {
        goto LABEL_11;
      }
    }
    sub_144DE0();
  }
  id v8 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_7D67C()
{
  return sub_7EC98(&qword_19EAA0, (void (*)(uint64_t))_s5AssetCMa);
}

uint64_t sub_7D6C4()
{
  uint64_t v1 = sub_A314(&qword_19EAA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_7D758(void *a1)
{
  sub_A314(&qword_19EAA8);

  return sub_7C464(a1);
}

uint64_t sub_7D7CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_7D804()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_7D85C()
{
  sub_7C908(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_7D89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_7D8AC()
{
  return swift_release();
}

unint64_t sub_7D8B4()
{
  unint64_t result = qword_19EAC0;
  if (!qword_19EAC0)
  {
    sub_12244(&qword_19EAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EAC0);
  }
  return result;
}

double *sub_7D910(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19C578);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
      long long v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_7E420(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_7DA3C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19C5B0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7E514(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_7DB4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_7DDD4(a1, a2, a3, a4, (uint64_t *)&unk_19EB40, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

double *sub_7DB80(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19C4C0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7E600(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_7DC90(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314((uint64_t *)&unk_19EB00);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7E6F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_7DDA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_7DDD4(a1, a2, a3, a4, &qword_19EB70, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_7DDD4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_A314(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (double *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_146900();
    __break(1u);
    return result;
  }
  *((void *)v18 + 2) = v13;
  *((void *)v18 + 3) = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_7E8EC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_7E054(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_7DDD4(a1, a2, a3, a4, &qword_19EB90, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item);
}

uint64_t sub_7E088(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_7DDD4(a1, a2, a3, a4, (uint64_t *)&unk_19EB30, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

double *sub_7E0BC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19EAC8);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7EAD8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_7E1CC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19D6B0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7E7E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_7E2DC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_A314(&qword_19EB80);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_7ED34(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_7E3EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_7DDD4(a1, a2, a3, a4, &qword_19C550, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_7E420(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

char *sub_7E514(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7E600(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

char *sub_7E6F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7E7E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_A314((uint64_t *)&unk_19EB10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7E8EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7EA48(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_7EA78(uint64_t a1)
{
  return sub_7A530(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_7EA94(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_7EAD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_A314((uint64_t *)&unk_19EAD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7EBE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_7EC1C(uint64_t a1)
{
  sub_7A614(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v1 + 16));
}

uint64_t sub_7EC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19B730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_7EC98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_7ECE0()
{
  unint64_t result = qword_19EB78;
  if (!qword_19EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EB78);
  }
  return result;
}

uint64_t sub_7ED34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_A314(&qword_19EB88);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

uint64_t sub_7EE40()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_7EE78()
{
  sub_7C17C(*(void *)(v0 + 16));
}

void sub_7EE80()
{
  sub_7BFA0(*(void *)(v0 + 16));
}

id sub_7EE88@<X0>(unsigned char *a1@<X8>)
{
  char v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_assetMO);
  if (v3) {
    id result = [v3 isSlim];
  }
  else {
    id result = &def_94138 + 2;
  }
  *a1 = (_BYTE)result;
  return result;
}

uint64_t sub_7EF04(uint64_t a1)
{
  return sub_7EA78(a1);
}

uint64_t *NSPredicate.validEntries.unsafeMutableAddressor()
{
  if (qword_19AEE0 != -1) {
    swift_once();
  }
  return &static NSPredicate.validEntries;
}

uint64_t *NSPredicate.assetIsBeingEdited.unsafeMutableAddressor()
{
  if (qword_19AEF8 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsBeingEdited;
}

uint64_t *NSPredicate.assetIsHidden.unsafeMutableAddressor()
{
  if (qword_19AF08 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsHidden;
}

uint64_t sub_7F008()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.notRemovedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.notRemovedFromCloud.unsafeMutableAddressor()
{
  if (qword_19AE80 != -1) {
    swift_once();
  }
  return &static NSPredicate.notRemovedFromCloud;
}

id static NSPredicate.notRemovedFromCloud.getter()
{
  return sub_802CC(&qword_19AE80, (void **)&static NSPredicate.notRemovedFromCloud);
}

uint64_t sub_7F0CC()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.removedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.removedFromCloud.unsafeMutableAddressor()
{
  if (qword_19AE88 != -1) {
    swift_once();
  }
  return &static NSPredicate.removedFromCloud;
}

id static NSPredicate.removedFromCloud.getter()
{
  return sub_802CC(&qword_19AE88, (void **)&static NSPredicate.removedFromCloud);
}

uint64_t sub_7F190()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.notUploadedToCloud = result;
  return result;
}

uint64_t *NSPredicate.notUploadedToCloud.unsafeMutableAddressor()
{
  if (qword_19AE90 != -1) {
    swift_once();
  }
  return &static NSPredicate.notUploadedToCloud;
}

id static NSPredicate.notUploadedToCloud.getter()
{
  return sub_802CC(&qword_19AE90, (void **)&static NSPredicate.notUploadedToCloud);
}

uint64_t sub_7F254()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.entryDateNotNil = result;
  return result;
}

uint64_t *NSPredicate.entryDateNotNil.unsafeMutableAddressor()
{
  if (qword_19AE98 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryDateNotNil;
}

id static NSPredicate.entryDateNotNil.getter()
{
  return sub_802CC(&qword_19AE98, (void **)&static NSPredicate.entryDateNotNil);
}

uint64_t sub_7F318()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.isDraftEntry = result;
  return result;
}

uint64_t *NSPredicate.isDraftEntry.unsafeMutableAddressor()
{
  if (qword_19AEA0 != -1) {
    swift_once();
  }
  return &static NSPredicate.isDraftEntry;
}

id static NSPredicate.isDraftEntry.getter()
{
  return sub_802CC(&qword_19AEA0, (void **)&static NSPredicate.isDraftEntry);
}

uint64_t sub_7F3E4()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.isNotDraftEntry = result;
  return result;
}

uint64_t *NSPredicate.isNotDraftEntry.unsafeMutableAddressor()
{
  if (qword_19AEA8 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotDraftEntry;
}

id static NSPredicate.isNotDraftEntry.getter()
{
  return sub_802CC(&qword_19AEA8, (void **)&static NSPredicate.isNotDraftEntry);
}

uint64_t sub_7F4A8()
{
  sub_80318();
  uint64_t result = sub_146160();
  static NSPredicate.isNotTipEntry = result;
  return result;
}

uint64_t *NSPredicate.isNotTipEntry.unsafeMutableAddressor()
{
  if (qword_19AEB0 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotTipEntry;
}

id static NSPredicate.isNotTipEntry.getter()
{
  return sub_802CC(&qword_19AEB0, (void **)&static NSPredicate.isNotTipEntry);
}

uint64_t sub_7F56C()
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1598D0;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_1CEB8();
  *(void *)(v0 + 32) = 0x737465737361;
  *(void *)(v0 + 40) = 0xE600000000000000;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6E65646469487369;
  *(void *)(v0 + 80) = 0xE800000000000000;
  uint64_t result = sub_146160();
  static NSPredicate.unhiddenAssets = result;
  return result;
}

uint64_t *NSPredicate.unhiddenAssets.unsafeMutableAddressor()
{
  if (qword_19AEB8 != -1) {
    swift_once();
  }
  return &static NSPredicate.unhiddenAssets;
}

id static NSPredicate.unhiddenAssets.getter()
{
  return sub_802CC(&qword_19AEB8, (void **)&static NSPredicate.unhiddenAssets);
}

uint64_t sub_7F6A0()
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1598D0;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_1CEB8();
  *(void *)(v0 + 32) = 0x676E654C74786574;
  *(void *)(v0 + 40) = 0xEA00000000006874;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x676E654C74786574;
  *(void *)(v0 + 80) = 0xEA00000000006874;
  uint64_t result = sub_146160();
  static NSPredicate.hasNonEmptyText = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyText.unsafeMutableAddressor()
{
  if (qword_19AEC0 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyText;
}

id static NSPredicate.hasNonEmptyText.getter()
{
  return sub_802CC(&qword_19AEC0, (void **)&static NSPredicate.hasNonEmptyText);
}

uint64_t sub_7F7C8()
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1578A0;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_1CEB8();
  *(void *)(v0 + 32) = 0x656C746974;
  *(void *)(v0 + 40) = 0xE500000000000000;
  uint64_t result = sub_146160();
  static NSPredicate.hasNonEmptyTitle = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyTitle.unsafeMutableAddressor()
{
  if (qword_19AEC8 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyTitle;
}

id static NSPredicate.hasNonEmptyTitle.getter()
{
  return sub_802CC(&qword_19AEC8, (void **)&static NSPredicate.hasNonEmptyTitle);
}

void sub_7F8D8()
{
  sub_A314(&qword_19C130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_15BC70;
  if (qword_19AE80 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 32) = static NSPredicate.notRemovedFromCloud;
  uint64_t v2 = qword_19AEA8;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.isNotDraftEntry;
  *(void *)(v0 + 40) = static NSPredicate.isNotDraftEntry;
  uint64_t v5 = qword_19AEB0;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 48) = static NSPredicate.isNotTipEntry;
  sub_145E00();
  sub_80318();
  id v8 = v7;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.allJournalEntries = (uint64_t)v10;
}

uint64_t *NSPredicate.allJournalEntries.unsafeMutableAddressor()
{
  if (qword_19AED0 != -1) {
    swift_once();
  }
  return &static NSPredicate.allJournalEntries;
}

id static NSPredicate.allJournalEntries.getter()
{
  return sub_802CC(&qword_19AED0, (void **)&static NSPredicate.allJournalEntries);
}

void sub_7FAC4()
{
  sub_A314(&qword_19C130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_15BC70;
  if (qword_19AEB8 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.unhiddenAssets;
  *(void *)(v0 + 32) = static NSPredicate.unhiddenAssets;
  uint64_t v2 = qword_19AEC0;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.hasNonEmptyText;
  *(void *)(v0 + 40) = static NSPredicate.hasNonEmptyText;
  uint64_t v5 = qword_19AEC8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)static NSPredicate.hasNonEmptyTitle;
  *(void *)(v0 + 48) = static NSPredicate.hasNonEmptyTitle;
  sub_145E00();
  sub_80318();
  id v8 = v7;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self orPredicateWithSubpredicates:isa];

  static NSPredicate.entryNotBlank = (uint64_t)v10;
}

uint64_t *NSPredicate.entryNotBlank.unsafeMutableAddressor()
{
  if (qword_19AED8 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryNotBlank;
}

id static NSPredicate.entryNotBlank.getter()
{
  return sub_802CC(&qword_19AED8, (void **)&static NSPredicate.entryNotBlank);
}

void sub_7FCB0()
{
  sub_A314(&qword_19C130);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_15BFF0;
  if (qword_19AED8 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.entryNotBlank;
  *(void *)(v0 + 32) = static NSPredicate.entryNotBlank;
  uint64_t v2 = qword_19AE80;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 40) = static NSPredicate.notRemovedFromCloud;
  uint64_t v5 = qword_19AE98;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)static NSPredicate.entryDateNotNil;
  *(void *)(v0 + 48) = static NSPredicate.entryDateNotNil;
  uint64_t v8 = qword_19AEB0;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 56) = static NSPredicate.isNotTipEntry;
  sub_145E00();
  sub_80318();
  id v11 = v10;
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.validEntries = (uint64_t)v13;
}

id static NSPredicate.validEntries.getter()
{
  return sub_802CC(&qword_19AEE0, (void **)&static NSPredicate.validEntries);
}

uint64_t sub_7FE90(uint64_t a1)
{
  return sub_80088(a1, 0x6F7250736465656ELL, 0xEF676E6973736563, &static NSPredicate.attachmentNeedsProcessing);
}

uint64_t *NSPredicate.attachmentNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_19AEE8 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentNeedsProcessing;
}

id static NSPredicate.attachmentNeedsProcessing.getter()
{
  return sub_802CC(&qword_19AEE8, (void **)&static NSPredicate.attachmentNeedsProcessing);
}

uint64_t sub_7FF2C()
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1598D0;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_1CEB8();
  *(void *)(v0 + 32) = 0x6F7250736465656ELL;
  *(void *)(v0 + 40) = 0xEF676E6973736563;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6F7250736465656ELL;
  *(void *)(v0 + 80) = 0xEF676E6973736563;
  uint64_t result = sub_146160();
  static NSPredicate.attachmentDoesNotNeedsProcessing = result;
  return result;
}

uint64_t *NSPredicate.attachmentDoesNotNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_19AEF0 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentDoesNotNeedsProcessing;
}

id static NSPredicate.attachmentDoesNotNeedsProcessing.getter()
{
  return sub_802CC(&qword_19AEF0, (void **)&static NSPredicate.attachmentDoesNotNeedsProcessing);
}

uint64_t sub_8005C(uint64_t a1)
{
  return sub_80088(a1, 0x45676E6965427369, 0xED00006465746964, &static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_80088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1578A0;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_1CEB8();
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  uint64_t result = sub_146160();
  *a4 = result;
  return result;
}

id static NSPredicate.assetIsBeingEdited.getter()
{
  return sub_802CC(&qword_19AEF8, (void **)&static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_80158()
{
  sub_80318();
  sub_A314(&qword_1A0A00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1598D0;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_1CEB8();
  strcpy((char *)(v0 + 32), "isBeingEdited");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  strcpy((char *)(v0 + 72), "isBeingEdited");
  *(_WORD *)(v0 + 86) = -4864;
  uint64_t result = sub_146160();
  static NSPredicate.attachmentAssetIsNotBeingEdited = result;
  return result;
}

uint64_t *NSPredicate.attachmentAssetIsNotBeingEdited.unsafeMutableAddressor()
{
  if (qword_19AF00 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentAssetIsNotBeingEdited;
}

id static NSPredicate.attachmentAssetIsNotBeingEdited.getter()
{
  return sub_802CC(&qword_19AF00, (void **)&static NSPredicate.attachmentAssetIsNotBeingEdited);
}

uint64_t sub_80288(uint64_t a1)
{
  return sub_80088(a1, 0x6E65646469487369, 0xE800000000000000, &static NSPredicate.assetIsHidden);
}

id static NSPredicate.assetIsHidden.getter()
{
  return sub_802CC(&qword_19AF08, (void **)&static NSPredicate.assetIsHidden);
}

id sub_802CC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;

  return v3;
}

unint64_t sub_80318()
{
  unint64_t result = qword_19C2E8;
  if (!qword_19C2E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19C2E8);
  }
  return result;
}

uint64_t sub_80358(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_didThumbnailFinishLoading) = result;
  return result;
}

void *sub_80368(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v9 = &v4[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_timeObserver];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v10 = OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  unint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView] = 0;
  id v13 = &v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_isLoaded] = 0;
  v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_videoAsset] = 0;
  *(void *)&v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_latestImageRequestID];
  uint64_t v15 = sub_145290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v16 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  unint64_t v17 = *(void (**)(void))&stru_298.sectname[swift_isaMask & *v16];
  uint64_t v18 = v16;
  v17();

  return v18;
}

void *sub_8057C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_timeObserver];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView] = 0;
  uint64_t v7 = &v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_isLoaded] = 0;
  v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_videoAsset] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v8 = &v6[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_latestImageRequestID];
  uint64_t v9 = sub_145290();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v10 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  id v11 = v10;
  if (v10)
  {
    unint64_t v12 = *(void (**)(void))&stru_298.sectname[swift_isaMask & *v10];
    id v13 = v10;
    v12();
  }
  return v11;
}

id sub_80774()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_145B80();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];

  return [v0 setClipsToBounds:0];
}

uint64_t sub_80874()
{
  sub_118B0(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_delegate);
  sub_1248C(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_timeObserver, &qword_19B1E0);

  sub_278A8(*(void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction));
  return sub_1248C(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_latestImageRequestID, &qword_19B730);
}

id sub_8094C()
{
  sub_80BB4();
  sub_8261C();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  NSString v2 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView];
  *(void *)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView] = 0;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoAssetView();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_80B60()
{
  return type metadata accessor for VideoAssetView();
}

uint64_t type metadata accessor for VideoAssetView()
{
  uint64_t result = qword_19EC28;
  if (!qword_19EC28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_80BB4()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
  *id v1 = 0;
  v1[1] = 0;
  sub_278A8(v2);
  uint64_t v3 = OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView;
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    [v8 pause];

    uint64_t v9 = *(void **)(v0 + v3);
    if (v9)
    {
      id v10 = v9;
      id v11 = [v10 layer];
      self;
      unint64_t v12 = (void *)swift_dynamicCastObjCClass();
      if (!v12) {

      }
      id v13 = [v12 player];
      if (v13)
      {
        [v13 replaceCurrentItemWithPlayerItem:0];
      }
      uint64_t v14 = *(void **)(v0 + v3);
      if (v14)
      {
        id v15 = v14;
        id v16 = [v15 layer];
        self;
        unint64_t v17 = (void *)swift_dynamicCastObjCClass();
        if (!v17) {

        }
        [v17 setPlayer:0];
      }
    }
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_isLoaded) = 0;
}

uint64_t sub_80D78()
{
  uint64_t v1 = sub_A314(&qword_19B730);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145290();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  id v13 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_videoAsset);
  if (v18 && !*(void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailOverride))
  {
    uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v15;
    uint64_t v41 = result;
    id v38 = v18;
    uint64_t v42 = v17;
    sub_145220();
    uint64_t v37 = OBJC_IVAR____TtC15JournalSettings16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC15JournalSettings16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v19 = sub_146B90();
        swift_bridgeObjectRelease();
        if (v19)
        {
LABEL_9:
          if (qword_19AE78 != -1) {
            swift_once();
          }
          objc_super v20 = &qword_1A3C08;
        }
        else
        {
          if (qword_19AE70 != -1) {
            swift_once();
          }
          objc_super v20 = &qword_1A3C00;
        }
        id v36 = (id)*v20;
        sub_145280();
        unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v34(v3, v9, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        uint64_t v35 = v9;
        uint64_t v21 = v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_latestImageRequestID;
        swift_beginAccess();
        sub_121E0((uint64_t)v3, v21, &qword_19B730);
        swift_endAccess();
        LODWORD(v37) = *(unsigned __int8 *)(v0 + v37);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v22 = v39;
        v34(v39, v9, v4);
        uint64_t v24 = v40;
        uint64_t v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v13, v42, v41);
        unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        unint64_t v26 = (v6 + *(unsigned __int8 *)(v24 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v22, v4);
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v26, v13, v23);
        id v28 = self;
        swift_retain();
        id v29 = [v28 currentTraitCollection];
        char v30 = v36;
        unint64_t v31 = v38;
        sub_7C4AC(v37, 0, 1, v36, v29, (uint64_t)sub_82DBC, v27);

        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
        uint64_t result = swift_release();
        break;
    }
  }
  return result;
}

uint64_t sub_81318(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = sub_145940();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_145980();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  unint64_t v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_145230();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  id v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_145290();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C84C(0, (unint64_t *)&qword_19BC70);
  uint64_t v32 = sub_146320();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  char v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_82FF4;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  void aBlock[3] = &unk_187D90;
  objc_super v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  unint64_t v22 = v34;
  sub_145950();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_830E4((unint64_t *)&qword_19EAB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  sub_1466C0();
  unint64_t v25 = (void *)v32;
  sub_146330();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_817EC(uint64_t a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v68 = a4;
  id v72 = a3;
  uint64_t v5 = sub_145230();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unsigned int v64 = (char *)&v63 - v8;
  uint64_t v9 = sub_A314(&qword_19C150);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v66 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v71 = (char *)&v63 - v12;
  uint64_t v13 = sub_145290();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_A314(&qword_19BC98);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_A314(&qword_19B730);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  unint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v63 - v26;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      uint64_t v29 = a2;
      uint64_t v30 = Strong;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v72, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      id v72 = v30;
      uint64_t v31 = (uint64_t)&v30[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_latestImageRequestID];
      swift_beginAccess();
      sub_12428(v31, (uint64_t)v25, &qword_19B730);
      uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
      sub_12428((uint64_t)v27, (uint64_t)v18, &qword_19B730);
      sub_12428((uint64_t)v25, v32, &qword_19B730);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      if (v33((uint64_t)v18, 1, v13) == 1)
      {
        unint64_t v34 = a2;
        id v35 = a2;
        sub_1248C((uint64_t)v25, &qword_19B730);
        sub_1248C((uint64_t)v27, &qword_19B730);
        if (v33(v32, 1, v13) == 1)
        {
          sub_1248C((uint64_t)v18, &qword_19B730);
          goto LABEL_18;
        }
      }
      else
      {
        sub_12428((uint64_t)v18, (uint64_t)v22, &qword_19B730);
        if (v33(v32, 1, v13) != 1)
        {
          uint64_t v45 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v67, v32, v13);
          sub_830E4((unint64_t *)&qword_19BCA0, (void (*)(uint64_t))&type metadata accessor for UUID);
          id v46 = v29;
          char v47 = sub_145AD0();
          uint64_t v48 = *(void (**)(char *, uint64_t))(v14 + 8);
          v48(v45, v13);
          sub_1248C((uint64_t)v25, &qword_19B730);
          sub_1248C((uint64_t)v27, &qword_19B730);
          v48(v22, v13);
          unint64_t v34 = v29;
          sub_1248C((uint64_t)v18, &qword_19B730);
          if (v47)
          {
LABEL_18:
            unint64_t v49 = v72;
            [*(id *)&v72[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView] setImage:v34];
            char v50 = 1;
            (*(void (**)(uint64_t))&stru_248.segname[swift_isaMask & *(void *)v49])(1);
            swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v52 = v70;
            uint64_t v51 = (uint64_t)v71;
            uint64_t v53 = v69;
            switch(v49[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_sizeType])
            {
              case 5:
                break;
              default:
                char v50 = sub_146B90();
                break;
            }
            swift_retain_n();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v51, v68, v52);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            if ((v50 & 1) == 0)
            {
              uint64_t v54 = v66;
              sub_12428(v51, v66, &qword_19C150);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v52) == 1)
              {
                sub_1248C(v54, &qword_19C150);
LABEL_27:
                sub_145930();
                sub_C84C(0, &qword_19D968);
                sub_146450();
                swift_release();
                goto LABEL_28;
              }
              char v55 = v64;
              (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v64, v54, v52);
              uint64_t v56 = v65;
              sub_1451F0();
              sub_145130();
              double v58 = v57;
              int v59 = *(void (**)(char *, uint64_t))(v53 + 8);
              v59(v56, v52);
              v59(v55, v52);
              if (v58 >= 0.1) {
                goto LABEL_27;
              }
            }
            swift_beginAccess();
            uint64_t v60 = swift_unknownObjectWeakLoadStrong();
            if (v60)
            {
              uint64_t v61 = (void *)v60;
              id v62 = *(id *)(v60 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView);

              [v62 setAlpha:1.0];
              swift_release_n();

LABEL_29:
              sub_1248C(v51, &qword_19C150);
              swift_release();
              return;
            }
LABEL_28:
            swift_release();
            swift_release();

            goto LABEL_29;
          }
LABEL_19:

          return;
        }
        id v44 = a2;
        sub_1248C((uint64_t)v25, &qword_19B730);
        sub_1248C((uint64_t)v27, &qword_19B730);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        unint64_t v34 = a2;
      }
      sub_1248C((uint64_t)v18, &qword_19BC98);
      goto LABEL_19;
    }
  }
  swift_beginAccess();
  uint64_t v36 = swift_unknownObjectWeakLoadStrong();
  if (v36)
  {
    uint64_t v37 = (void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC15JournalSettings16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v36 + OBJC_IVAR____TtC15JournalSettings16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v38 == 1
      || (uint64_t v39 = v36 + OBJC_IVAR____TtC15JournalSettings16JournalAssetView_loadingDelegate,
          !swift_unknownObjectWeakLoadStrong()))
    {
    }
    else
    {
      uint64_t v40 = *(void *)(v39 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v40 + 8))(v37, ObjectType, v40);

      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v42)
  {
    id v43 = v42;
    (*(void (**)(void))&stru_248.segname[swift_isaMask & *v42])(0);
  }
}

void sub_82228()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView);

    [v2 setAlpha:1.0];
  }
}

void sub_823EC(SEL *a1, double a2, double a3, double a4, double a5)
{
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  objc_msgSendSuper2(&v15, *a1, a2, a3, a4, a5);
  id v11 = *(id *)&v5[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView];
  [v5 bounds];
  objc_msgSend(v11, "setFrame:");

  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView];
  [v5 bounds];
  objc_msgSend(v12, "setFrame:");
  uint64_t v13 = *(void **)&v5[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView];
  if (v13)
  {
    id v14 = v13;
    [v5 bounds];
    objc_msgSend(v14, "setFrame:");
  }
}

void sub_824F8()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for VideoAssetView();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  id v1 = *(id *)&v0[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView];
  [v0 bounds];
  objc_msgSend(v1, "setFrame:");

  id v2 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView];
  [v0 bounds];
  objc_msgSend(v2, "setFrame:");
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView];
  if (v3)
  {
    id v4 = v3;
    [v0 bounds];
    objc_msgSend(v4, "setFrame:");
  }
}

uint64_t sub_8261C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerStatusObserver) = 0;

  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerTimeControlStatusObserver) = 0;

  uint64_t v3 = v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_12428(v3, (uint64_t)&v10, &qword_19B1E0);
  if (!*((void *)&v11 + 1)) {
    return sub_1248C((uint64_t)&v10, &qword_19B1E0);
  }
  sub_2A74C(&v10, &v12);
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    if (v8)
    {
      sub_2F114(&v12, v13);
      [v8 removeTimeObserver:sub_146B80()];

      swift_unknownObjectRelease();
    }
  }
  long long v10 = 0u;
  long long v11 = 0u;
  swift_beginAccess();
  sub_121E0((uint64_t)&v10, v3, &qword_19B1E0);
  swift_endAccess();
  return sub_C7FC((uint64_t)&v12);
}

void sub_8286C()
{
  sub_82948();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_82948()
{
  if (!qword_19B830)
  {
    sub_145290();
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19B830);
    }
  }
}

id sub_82A28(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return objc_msgSendSuper2(&v6, *a4);
}

void sub_82A7C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for VideoPlayerView();
  long long v12 = *a7;
  id v13 = v14.receiver;
  objc_msgSendSuper2(&v14, v12, a2, a3, a4, a5);
  objc_msgSend(v13, "layoutSubviews", v14.receiver, v14.super_class);
}

id sub_82BD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoPlayerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VideoPlayerView()
{
  return self;
}

uint64_t sub_82C2C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_82C64()
{
  uint64_t v1 = sub_145290();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_82DBC(void *a1)
{
  uint64_t v3 = *(void *)(sub_145290() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_145230() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_81318(a1, v7, v1 + v4, v8);
}

uint64_t sub_82E94()
{
  uint64_t v1 = sub_145290();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_82FF4()
{
  uint64_t v1 = *(void *)(sub_145290() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_145230() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_817EC(v5, v6, (char *)(v0 + v2), v7);
}

uint64_t sub_830C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_830D4()
{
  return swift_release();
}

void sub_830DC()
{
}

uint64_t sub_830E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_8312C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_8313C(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_144E20();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_145290();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  sub_A314(&qword_19EB20);
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_144F60();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_83338, 0, 0);
}

uint64_t sub_83338()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v1 + *(int *)(v2 + 20)))
  {
    uint64_t v3 = sub_849E8(v1);
    uint64_t v5 = v4;
    sub_1467D0(76);
    v72._object = (void *)0x800000000014DB20;
    v72._countAndFlagsBits = 0xD00000000000003FLL;
    sub_145C90(v72);
    v73._countAndFlagsBits = sub_83C40(v1);
    sub_145C90(v73);
    swift_bridgeObjectRelease();
    v74._countAndFlagsBits = 0x642F3C202020200ALL;
    v74._object = (void *)0xEB000000003E7669;
    sub_145C90(v74);
    uint64_t v6 = sub_6CAB0(v3, v5, 0, 0, 0, 0, 0, (void *)0xE000000000000000, 0, 0);
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v9(v6, v8);
  }
  uint64_t v11 = v2;
  unint64_t v12 = *(void *)(v0[6] + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_attachments);
  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t v58 = v0[14];
    uint64_t v59 = v0[15];
    uint64_t v60 = v0[13];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v60, 1, 1, v58);
LABEL_21:
    sub_1248C(v0[13], &qword_19EB20);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!sub_146930()) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v12 & 0xC000000000000001) != 0) {
    sub_146810();
  }
  else {
    swift_retain();
  }
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[15];
  uint64_t v16 = (char *)v0[13];
  swift_bridgeObjectRelease();
  sub_D2630(v16);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1) {
    goto LABEL_21;
  }
  (*(void (**)(void, void, void))(v0[15] + 32))(v0[19], v0[13], v0[14]);
  uint64_t v17 = sub_144E30();
  char v19 = sub_5C6DC(v17, v18);
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[19], v0[14]);
LABEL_22:
    sub_1CF0C();
    swift_allocError();
    *uint64_t v61 = 0;
    swift_willThrow();
    goto LABEL_23;
  }
  uint64_t v20 = self;
  id v21 = [v20 defaultManager];
  sub_144F10();
  NSString v22 = sub_145B80();
  swift_bridgeObjectRelease();
  unsigned int v23 = [v21 fileExistsAtPath:v22];

  if (!v23)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[19], v0[14]);
    goto LABEL_22;
  }
  id v69 = v20;
  uint64_t v66 = v0[17];
  uint64_t v24 = v0[15];
  uint64_t v68 = v0[14];
  uint64_t v26 = v0[11];
  uint64_t v25 = v0[12];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[10];
  uint64_t v29 = v0[8];
  uint64_t v64 = v0[7];
  uint64_t v65 = v0[16];
  sub_E3C18(v65);
  sub_145280();
  uint64_t v30 = sub_145240();
  uint64_t v32 = v31;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v28);
  v0[2] = v30;
  v0[3] = v32;
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v27, enum case for URL.DirectoryHint.inferFromPath(_:), v64);
  sub_12060();
  sub_144F50();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v64);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v33(v65, v68);
  sub_144E30();
  sub_144EE0();
  swift_bridgeObjectRelease();
  v33(v66, v68);
  uint64_t v67 = sub_144E90();
  id v35 = v34;
  id v36 = [v69 defaultManager];
  sub_144EB0(v37);
  uint64_t v39 = v38;
  sub_144EB0(v40);
  uint64_t v42 = v41;
  v0[4] = 0;
  LODWORD(v24) = [v36 copyItemAtURL:v39 toURL:v41 error:v0 + 4];

  id v43 = (void *)v0[4];
  uint64_t v44 = v0[19];
  uint64_t v70 = v0[18];
  uint64_t v45 = v0[14];
  if (v24)
  {
    uint64_t v46 = v0[5];
    id v47 = v43;
    sub_1467D0(156);
    v75._object = (void *)0x800000000014DB20;
    v75._countAndFlagsBits = 0xD00000000000003FLL;
    sub_145C90(v75);
    v76._countAndFlagsBits = sub_83C40(v46);
    sub_145C90(v76);
    swift_bridgeObjectRelease();
    v77._countAndFlagsBits = 0xD000000000000010;
    v77._object = (void *)0x800000000014DB60;
    sub_145C90(v77);
    v78._countAndFlagsBits = sub_849E8(v46);
    sub_145C90(v78);
    swift_bridgeObjectRelease();
    v79._countAndFlagsBits = 0xD00000000000002CLL;
    v79._object = (void *)0x800000000014DB80;
    sub_145C90(v79);
    uint64_t v48 = (uint64_t *)(v46 + *(int *)(v11 + 36));
    uint64_t v49 = *v48;
    char v50 = (void *)v48[1];
    swift_bridgeObjectRetain();
    v80._countAndFlagsBits = v49;
    v80._object = v50;
    sub_145C90(v80);
    swift_bridgeObjectRelease();
    v81._countAndFlagsBits = 47;
    v81._object = (void *)0xE100000000000000;
    sub_145C90(v81);
    v82._countAndFlagsBits = v67;
    v82._object = v35;
    sub_145C90(v82);
    swift_bridgeObjectRelease();
    v83._countAndFlagsBits = 0x20202020200A3E22;
    v83._object = (void *)0xE900000000000020;
    sub_145C90(v83);
    uint64_t v51 = (objc_class *)[self mainBundle];
    v84._countAndFlagsBits = 0xD000000000000038;
    v63._countAndFlagsBits = 0x800000000014DBF0;
    v84._object = (void *)0x800000000014DBB0;
    v87.value._countAndFlagsBits = 0;
    v87.value._object = 0;
    v52.super.Class isa = v51;
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    uint64_t v53 = sub_144CC0(v84, v87, v52, v88, v63);
    char v55 = v54;

    v85._countAndFlagsBits = v53;
    v85._object = v55;
    sub_145C90(v85);
    swift_bridgeObjectRelease();
    v86._countAndFlagsBits = 0x612F3C202020200ALL;
    v86._object = (void *)0xED00003E6F696475;
    sub_145C90(v86);
    uint64_t v6 = sub_6CAB0(0, (void *)0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0);
    uint64_t v8 = v56;
    swift_bridgeObjectRelease();
    v33(v70, v45);
    v33(v44, v45);
    goto LABEL_3;
  }
  id v57 = v43;
  swift_bridgeObjectRelease();
  sub_144D90();

  swift_willThrow();
  v33(v70, v45);
  v33(v44, v45);
LABEL_23:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v62 = (uint64_t (*)(void))v0[1];
  return v62();
}

uint64_t sub_83C40(uint64_t a1)
{
  uint64_t v2 = sub_84E24(a1);
  id v3 = sub_83D48();
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = (uint64_t)v3;
  v14._object = v5;
  sub_145C90(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_9F45C();
  unint64_t v8 = v7;
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v9 = v6;
  swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    unint64_t v8 = 0;
LABEL_7:
    unint64_t v12 = (void *)0xE000000000000000;
    goto LABEL_8;
  }
  unint64_t v8 = sub_85128(a1);
  unint64_t v12 = v11;
LABEL_8:
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v8;
  v15._object = v12;
  sub_145C90(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_83D48()
{
  uint64_t v1 = sub_A314(&qword_19C4D8);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (double *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_6;
  }
  swift_retain();
  sub_307D4((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    sub_1248C((uint64_t)v3, &qword_19C4D8);
    return 0;
  }
  sub_853A4((uint64_t)v3, (uint64_t)v7);
  if ((_BYTE)v7[1])
  {
    sub_85F9C((uint64_t)v7, _s10AudioAssetC9AudioDataVMa);
    return 0;
  }
  double v10 = *v7;
  if (qword_19AF88 != -1)
  {
    double v15 = *v7;
    swift_once();
    double v10 = v15;
  }
  id v8 = [(id)qword_19FC58 stringFromTimeInterval:v10 + 0.5];
  if (v8)
  {
    uint64_t v11 = sub_145BC0();
    uint64_t v13 = v12;

    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_1467D0(39);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD00000000000001FLL;
    unint64_t v17 = 0x800000000014DCA0;
    v18._countAndFlagsBits = v11;
    v18._object = v13;
    sub_145C90(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 0x3E7669642F3CLL;
    v19._object = (void *)0xE600000000000000;
    sub_145C90(v19);
    id v8 = (id)v16;
  }
  sub_85F9C((uint64_t)v7, _s10AudioAssetC9AudioDataVMa);
  return v8;
}

uint64_t sub_84020(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_2C104;
  return sub_8313C(a1);
}

double sub_840B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19C4D8);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v15 = (char *)&v23 - v14;
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata))
  {
    swift_retain();
    sub_307D4((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_853A4((uint64_t)v8, (uint64_t)v15);
      sub_85F34((uint64_t)v15, (uint64_t)v13, _s10AudioAssetC9AudioDataVMa);
      uint64_t v16 = sub_9F45C();
      uint64_t v18 = v17;
      uint64_t v19 = _s6ResultVMa_3();
      *(void *)(a1 + 24) = v19;
      *(void *)(a1 + 32) = sub_85FFC(&qword_19EC80, (void (*)(uint64_t))_s6ResultVMa_3);
      *(void *)(a1 + 40) = sub_85FFC(&qword_19EC88, (void (*)(uint64_t))_s6ResultVMa_3);
      uint64_t v20 = sub_484D0((uint64_t *)a1);
      sub_2647C((uint64_t)&v13[*(int *)(v9 + 24)], (uint64_t)v5);
      sub_85F9C((uint64_t)v13, _s10AudioAssetC9AudioDataVMa);
      sub_12384((uint64_t)v5, (uint64_t)v20);
      id v21 = (uint64_t *)((char *)v20 + *(int *)(v19 + 20));
      uint64_t *v21 = v16;
      v21[1] = v18;
      sub_85F9C((uint64_t)v15, _s10AudioAssetC9AudioDataVMa);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1248C((uint64_t)v8, &qword_19C4D8);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_843B4(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19ED30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_85EE0();
  sub_146D10();
  v8[15] = 0;
  sub_145230();
  sub_85FFC(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146AD0();
  if (!v1)
  {
    _s6ResultVMa_3();
    v8[14] = 1;
    sub_146A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_8456C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19ED20);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_3();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_85EE0();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v13 = v21;
  sub_145230();
  char v24 = 0;
  sub_85FFC(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384((uint64_t)v6, (uint64_t)v12);
  char v23 = 1;
  uint64_t v14 = sub_1469E0();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v22);
  uint64_t v17 = (uint64_t *)&v12[*(int *)(v10 + 20)];
  uint64_t *v17 = v14;
  v17[1] = v16;
  sub_85F34((uint64_t)v12, v20, (uint64_t (*)(void))_s6ResultVMa_3);
  sub_C7FC((uint64_t)a1);
  return sub_85F9C((uint64_t)v12, (uint64_t (*)(void))_s6ResultVMa_3);
}

uint64_t sub_84874(uint64_t a1)
{
  uint64_t result = sub_85FFC(&qword_19EC68, (void (*)(uint64_t))_s10AudioAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_848CC()
{
  if (*v0) {
    return 0x697263736E617274;
  }
  else {
    return 0x6E6964726F636572;
  }
}

uint64_t sub_84918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_86250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_84940(uint64_t a1)
{
  unint64_t v2 = sub_85EE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8497C(uint64_t a1)
{
  unint64_t v2 = sub_85EE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_849B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_8456C(a1, a2);
}

uint64_t sub_849D0(void *a1)
{
  return sub_843B4(a1);
}

uint64_t sub_849E8(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_145610();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19AD70 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1A3B28;
  if (!qword_1A3B28) {
    return 0;
  }
  uint64_t v30 = v3;
  uint64_t v29 = type metadata accessor for ExportOptions();
  double v11 = *(double *)(a1 + *(int *)(v29 + 48));
  uint64_t v12 = self;
  id v13 = [v12 configurationWithPointSize:v11];
  id v14 = [v10 imageWithConfiguration:v13];

  sub_A314(&qword_19C130);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_159A20;
  sub_85408();
  if (qword_19B058 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_C584(v6, (uint64_t)qword_1A3EB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
  uint64_t v17 = (void *)sub_146460();
  id v18 = [v17 colorWithAlphaComponent:0.5];

  *(void *)(v15 + 32) = v18;
  v31[0] = v15;
  sub_145E00();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v12 configurationWithPaletteColors:isa];

  uint64_t v21 = (UIImage *)[v14 imageByApplyingSymbolConfiguration:v20];
  if (!v21) {
    return 0;
  }
  uint64_t v22 = sub_E3E6C((uint64_t)v5, v21, 0x7661576F69647561, 0xEE00636965682E65);
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
  v31[0] = 0;
  v31[1] = 0xE000000000000000;
  sub_1467D0(42);
  swift_bridgeObjectRelease();
  strcpy((char *)v31, "<img src=\"../");
  HIWORD(v31[1]) = -4864;
  uint64_t v25 = (uint64_t *)(a1 + *(int *)(v29 + 36));
  uint64_t v26 = *v25;
  uint64_t v27 = (void *)v25[1];
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v26;
  v32._object = v27;
  sub_145C90(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 47;
  v33._object = (void *)0xE100000000000000;
  sub_145C90(v33);
  v34._countAndFlagsBits = v22;
  v34._object = v24;
  sub_145C90(v34);
  swift_bridgeObjectRelease();
  v35._object = (void *)0x800000000014DD00;
  v35._countAndFlagsBits = 0xD000000000000018;
  sub_145C90(v35);

  return v31[0];
}

uint64_t sub_84E24(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_19AD78 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1A3B30;
  if (!qword_1A3B30) {
    return 0;
  }
  sub_A314(&qword_19C130);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_159A30;
  uint64_t v8 = self;
  *(void *)(v7 + 32) = [v8 whiteColor];
  *(void *)(v7 + 40) = [v8 systemIndigoColor];
  v19[0] = v7;
  sub_145E00();
  sub_85408();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self configurationWithPaletteColors:isa];

  double v11 = (UIImage *)[v6 imageWithConfiguration:v10];
  if (!v11) {
    return 0;
  }
  uint64_t v12 = sub_E3E6C((uint64_t)v5, v11, 0xD000000000000014, 0x800000000014DCC0);
  id v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_1467D0(46);
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "<img src=\"../");
  HIWORD(v19[1]) = -4864;
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v16 = *v15;
  uint64_t v17 = (void *)v15[1];
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = v16;
  v20._object = v17;
  sub_145C90(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 47;
  v21._object = (void *)0xE100000000000000;
  sub_145C90(v21);
  v22._countAndFlagsBits = v12;
  v22._object = v14;
  sub_145C90(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0xD00000000000001CLL;
  v23._object = (void *)0x800000000014DCE0;
  sub_145C90(v23);

  return v19[0];
}

uint64_t sub_85128(uint64_t a1)
{
  uint64_t v2 = sub_144F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = sub_145B80();
  id v7 = [self systemImageNamed:v6];

  if (!v7) {
    return 0;
  }
  id v8 = [self secondaryLabelColor];
  uint64_t v9 = (UIImage *)[v7 imageWithTintColor:v8 renderingMode:2];

  if (!v9) {
    return 0;
  }
  uint64_t v10 = sub_E3E6C((uint64_t)v5, v9, 0xD000000000000010, 0x800000000014DC40);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_1467D0(51);
  v18._object = (void *)0x800000000014DC60;
  v18._countAndFlagsBits = 0x1000000000000011;
  sub_145C90(v18);
  id v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v14 = *v13;
  uint64_t v15 = (void *)v13[1];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v14;
  v19._object = v15;
  sub_145C90(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 47;
  v20._object = (void *)0xE100000000000000;
  sub_145C90(v20);
  v21._countAndFlagsBits = v10;
  v21._object = v12;
  sub_145C90(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0xD00000000000001DLL;
  v22._object = (void *)0x800000000014DC80;
  sub_145C90(v22);

  return v17[0];
}

uint64_t sub_853A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_85408()
{
  unint64_t result = qword_1A0A40;
  if (!qword_1A0A40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1A0A40);
  }
  return result;
}

uint64_t _s6ResultVMa_3()
{
  uint64_t result = qword_19ECE8;
  if (!qword_19ECE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_85494(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145230();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_A314(&qword_19C150);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    id v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_85618(uint64_t a1)
{
  uint64_t v2 = sub_145230();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_856E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_8581C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  id v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)id v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_859C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_85AF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  id v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)id v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_85C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_85CA0);
}

uint64_t sub_85CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19C150);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_85D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_85D88);
}

uint64_t sub_85D88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_A314(&qword_19C150);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

void sub_85E4C()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_85EE0()
{
  unint64_t result = qword_19ED28;
  if (!qword_19ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19ED28);
  }
  return result;
}

uint64_t sub_85F34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_85F9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_85FFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x86110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_3()
{
  return &_s6ResultV10CodingKeysON_3;
}

unint64_t sub_8614C()
{
  unint64_t result = qword_19ED38;
  if (!qword_19ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19ED38);
  }
  return result;
}

unint64_t sub_861A4()
{
  unint64_t result = qword_19ED40;
  if (!qword_19ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19ED40);
  }
  return result;
}

unint64_t sub_861FC()
{
  unint64_t result = qword_19ED48;
  if (!qword_19ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19ED48);
  }
  return result;
}

uint64_t sub_86250(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6964726F636572 && a2 == 0xED00006574614467;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t type metadata accessor for JournalSortingUtilities()
{
  return self;
}

uint64_t sub_86398(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_146B90();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_146B90() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_86460(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_didThumbnailFinishLoading) = a1;
  return sub_865F4();
}

void sub_86474()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC15JournalSettings16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_145B80();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];
  [v0 setClipsToBounds:0];
  id v3 = [self defaultCenter];
  NSString v4 = sub_145B80();
  [v3 addObserver:v0 selector:"handleAllowedVideosNotification:" name:v4 object:0];
}

uint64_t sub_865F4()
{
  uint64_t v0 = sub_145940();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_145980();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_48534();
  uint64_t v8 = (void *)sub_146320();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_88584;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10478;
  void aBlock[3] = &unk_187E98;
  unint64_t v10 = _Block_copy(aBlock);
  swift_release();
  sub_145950();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_885A4();
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  sub_1466C0();
  sub_146330();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_86874()
{
  uint64_t v0 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC15JournalSettings18VideoAssetGridView_durationLabel;
    id v6 = [*(id *)(Strong + OBJC_IVAR____TtC15JournalSettings18VideoAssetGridView_durationLabel) superview];

    uint64_t v7 = *(void **)&v4[v5];
    if (v6)
    {
      [v4 bringSubviewToFront:v7];
    }
    else
    {
      uint64_t v8 = qword_19ACD8;
      id v9 = v7;
      if (v8 != -1) {
        swift_once();
      }
      [v9 setFont:qword_1A3A40];

      unint64_t v10 = *(void **)&v4[v5];
      uint64_t v11 = self;
      id v12 = v10;
      id v13 = [v11 whiteColor];
      [v12 setTextColor:v13];

      uint64_t v14 = *(void **)&v4[v5];
      [v14 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
      [v14 setAdjustsFontForContentSizeCategory:1];
      [v14 setAdjustsFontSizeToFitWidth:1];
      [v4 addSubview:v14];
      uint64_t v15 = qword_19AD00;
      id v16 = v14;
      if (v15 != -1) {
        swift_once();
      }
      uint64_t v17 = (double *)&unk_1A3000;
      double v18 = *(double *)&qword_1A3A68;
      id v19 = [v16 superview];
      Swift::String v20 = &selRef_streakReminderMinute;
      if (v19)
      {
        Swift::String v21 = v19;
        [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v22 = [v16 trailingAnchor];
        id v23 = [v21 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 setConstant:-v18];
        if (v24)
        {
          id v24 = v24;
          [v24 setActive:1];

          Swift::String v21 = v24;
        }

        uint64_t v17 = (double *)&unk_1A3000;
        Swift::String v20 = &selRef_streakReminderMinute;
      }
      else
      {
        id v24 = 0;
      }

      double v25 = v17[333];
      id v26 = *(id *)&v4[v5];
      id v27 = [v26 superview];
      if (v27)
      {
        uint64_t v28 = v27;
        objc_msgSend(v26, v20[81], 0);
        id v29 = [v26 leadingAnchor];
        id v30 = [v28 leadingAnchor];
        id v31 = [v29 constraintGreaterThanOrEqualToAnchor:v30];

        [v31 setConstant:v25];
        if (v31)
        {
          id v31 = v31;
          [v31 setActive:1];

          uint64_t v28 = v31;
        }
      }
      else
      {
        id v31 = 0;
      }

      double v32 = v17[333];
      uint64_t v33 = qword_19AD10;
      id v34 = *(id *)&v4[v5];
      if (v33 != -1) {
        swift_once();
      }
      id v35 = sub_42540(0, 1, v32 - *(double *)&qword_1A3A78);
    }
    uint64_t v36 = sub_145F50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v2, 1, 1, v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_145F30();
    swift_retain();
    uint64_t v38 = sub_145F20();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    unsigned char v39[4] = v37;
    swift_release();
    sub_87E58((uint64_t)v2, (uint64_t)&unk_19EE30, (uint64_t)v39);
    swift_release();
  }
}

uint64_t sub_86DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  uint64_t v5 = sub_145940();
  v4[32] = v5;
  v4[33] = *(void *)(v5 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v6 = sub_145980();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  sub_A314(&qword_19EB20);
  v4[38] = swift_task_alloc();
  uint64_t v7 = sub_144F60();
  v4[39] = v7;
  v4[40] = *(void *)(v7 - 8);
  v4[41] = swift_task_alloc();
  sub_145F30();
  v4[42] = sub_145F20();
  uint64_t v9 = sub_145EB0();
  v4[43] = v9;
  v4[44] = v8;
  return _swift_task_switch(sub_86FA0, v9, v8);
}

uint64_t sub_86FA0()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = *(void **)&Strong[OBJC_IVAR____TtC15JournalSettings14VideoAssetView_playerView];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v4 layer];
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {

      }
      id v7 = [v6 player];
      id v8 = [v7 currentItem];

      if (v8)
      {
        v0[45] = [v8 asset];

        sub_A314(&qword_19EE38);
        uint64_t v9 = sub_145550();
        v0[46] = v9;
        unint64_t v10 = (void *)swift_task_alloc();
        v0[47] = v10;
        *unint64_t v10 = v0;
        v10[1] = sub_8732C;
        return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 20, v9);
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11
    && (id v12 = (void *)v11,
        id v13 = *(void **)(v11 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_videoAsset),
        id v14 = v13,
        v12,
        v13))
  {
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[40];
    uint64_t v17 = (char *)v0[38];
    sub_5E2A0(0, 1, v17);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      (*(void (**)(void, void, void))(v0[40] + 32))(v0[41], v0[38], v0[39]);
      id v23 = (uint64_t (*)(uint64_t))((char *)&dword_1A0C98 + dword_1A0C98);
      double v18 = (void *)swift_task_alloc();
      v0[49] = v18;
      *double v18 = v0;
      v18[1] = sub_876E8;
      uint64_t v19 = v0[41];
      return v23(v19);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[40] + 56))(v0[38], 1, 1, v0[39]);
  }
  uint64_t v20 = v0[38];
  swift_release();
  sub_1248C(v20, &qword_19EB20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_8732C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_87B9C;
  }
  else
  {

    swift_release();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_87450;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_87450()
{
  uint64_t v12 = v0[37];
  uint64_t v1 = v0[34];
  uint64_t v15 = v0[36];
  uint64_t v16 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v14 = v0[33];
  swift_release();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[22];
  sub_48534();
  uint64_t v5 = v0[21];
  id v13 = (void *)sub_146320();
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v8 = (void *)swift_allocObject();
  uint64_t v8[2] = v6;
  v8[3] = v3;
  v8[4] = v5;
  v8[5] = v4;
  v0[12] = sub_88748;
  v0[13] = v8;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10478;
  v0[11] = &unk_187F60;
  uint64_t v9 = _Block_copy(v0 + 8);
  swift_retain();
  sub_145950();
  v0[30] = _swiftEmptyArrayStorage;
  sub_885A4();
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  sub_1466C0();
  sub_146330();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v16);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_876E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_87AEC;
  }
  else
  {
    v8[50] = a2;
    v8[51] = a3;
    v8[52] = a1;
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_87828;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_87828()
{
  uint64_t v1 = v0[50];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[51];
  uint64_t v18 = v0[39];
  uint64_t v19 = v0[41];
  uint64_t v13 = v0[37];
  uint64_t v15 = v0[36];
  uint64_t v2 = v0[34];
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[40];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[33];
  swift_release();
  sub_48534();
  uint64_t v14 = (void *)sub_146320();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v5;
  v7[3] = v11;
  void v7[4] = v1;
  v7[5] = v12;
  v0[6] = sub_88728;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10478;
  v0[5] = &unk_187F10;
  id v8 = _Block_copy(v0 + 2);
  swift_retain();
  sub_145950();
  v0[29] = _swiftEmptyArrayStorage;
  sub_885A4();
  sub_A314(&qword_19EAB8);
  sub_7D8B4();
  sub_1466C0();
  sub_146330();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_87AEC()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_87B9C()
{
  uint64_t v1 = *(void **)(v0 + 360);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_87C48(uint64_t a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v8 = (void *)Strong;
  id v9 = *(id *)(Strong + OBJC_IVAR____TtC15JournalSettings18VideoAssetGridView_durationLabel);

  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double Seconds = CMTimeGetSeconds(&v22);
  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double v11 = CMTimeGetSeconds(&v22);
  id v12 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v13 = v12;
  if (v11 < 60.0)
  {
    [v12 setAllowedUnits:192];
    uint64_t v14 = &selRef_setZeroFormattingBehavior_;
    uint64_t v15 = 0x10000;
LABEL_6:
    objc_msgSend(v13, *v14, v15);
    goto LABEL_7;
  }
  if (v11 > 3600.0)
  {
    uint64_t v14 = &selRef_setAllowedUnits_;
    uint64_t v15 = 224;
    goto LABEL_6;
  }
LABEL_7:
  id v16 = [v13 stringFromTimeInterval:v11];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_145BC0();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_60EF8(1uLL, v18, v20);
    swift_bridgeObjectRelease();
    sub_145C40();
    swift_bridgeObjectRelease();
  }
  NSString v21 = sub_145B80();
  swift_bridgeObjectRelease();
  [v9 setText:v21];
}

uint64_t sub_87E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_145F50();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_145F40();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1248C(a1, &qword_19BFB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_145EB0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_87FE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_144AE0();
  if (v2)
  {
    uint64_t v3 = v2;
    sub_146780();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1378A8((uint64_t)v15), (v5 & 1) != 0))
    {
      sub_C738(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_884F8((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_A314(&qword_19C708);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_videoAsset);
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = sub_145240();
          char v10 = sub_86398(v8, v9, (void *)0xD000000000000019);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0 || (*(unsigned char *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_isLoaded) & 1) == 0)
          {
          }
          else
          {
            double v11 = (void *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
            uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
            void *v11 = 0;
            v11[1] = 0;
            sub_278A8(v12);
            sub_80D78();
            sub_80BB4();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
          uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings14VideoAssetView_finishPlayingAction);
          *uint64_t v13 = 0;
          v13[1] = 0;
          sub_278A8(v14);
          sub_80D78();
          sub_80BB4();
        }
      }
    }
    else
    {
      sub_1248C((uint64_t)&v16, &qword_19B1E0);
    }
  }
}

void sub_88404()
{
}

id sub_88414()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoAssetGridView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_8845C()
{
  return type metadata accessor for VideoAssetGridView();
}

uint64_t type metadata accessor for VideoAssetGridView()
{
  uint64_t result = qword_19EE18;
  if (!qword_19EE18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_884B0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_884F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_8854C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_88584()
{
}

uint64_t sub_8858C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_8859C()
{
  return swift_release();
}

unint64_t sub_885A4()
{
  unint64_t result = qword_19EAB0;
  if (!qword_19EAB0)
  {
    sub_145940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EAB0);
  }
  return result;
}

uint64_t sub_885FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_8863C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_21598;
  return sub_86DC4(a1, v4, v5, v6);
}

uint64_t sub_886F0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_88728()
{
  sub_87C48(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t BatchRecordDownloadOperation.main@Sendable ()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_88780, 0, 0);
}

uint64_t sub_88780()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + qword_19EE50);
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  uint64_t v5 = sub_A314(&qword_19EE68);
  *uint64_t v4 = v0;
  v4[1] = sub_8888C;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_19EE60, v3, v5);
}

uint64_t sub_8888C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_889C4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_889A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_889A8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_889C4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_88A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_88A4C, 0, 0);
}

uint64_t sub_88A4C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + qword_19EE70);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_88AF8;
  return CKDatabase.records(for:desiredKeys:)(v1, 0);
}

uint64_t sub_88AF8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_88C44, 0, 0);
  }
}

uint64_t sub_88C44()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_88C68(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  void v7[4] = v6;
  v7[1] = sub_216D4;
  _OWORD v7[2] = a1;
  return _swift_task_switch(sub_88A4C, 0, 0);
}

void BatchRecordDownloadOperation.init()()
{
}

void sub_88D54()
{
}

void sub_88D84()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_19EE50);
}

id BatchRecordDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchRecordDownloadOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BatchRecordDownloadOperation()
{
  uint64_t result = qword_19EEA0;
  if (!qword_19EEA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_88E58(uint64_t a1)
{
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_19EE50);
}

uint64_t sub_88EB4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_88F0C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_88F2C, 0, 0);
}

uint64_t sub_88F2C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_19EE50);
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_A314(&qword_19EE68);
  *uint64_t v4 = v0;
  v4[1] = sub_89038;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_19EFA0, v3, v5);
}

uint64_t sub_89038()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_89174;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_89154;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_89154()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_89174()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_891D8()
{
  return type metadata accessor for BatchRecordDownloadOperation();
}

uint64_t sub_891E0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  void v7[4] = v6;
  v7[1] = sub_21598;
  _OWORD v7[2] = a1;
  return _swift_task_switch(sub_88A4C, 0, 0);
}

BOOL static DataConfig.UnitsCounterType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DataConfig.UnitsCounterType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int DataConfig.UnitsCounterType.hashValue.getter(unsigned __int8 a1)
{
  return sub_146CD0();
}

unint64_t sub_89320()
{
  unint64_t result = qword_19EFA8;
  if (!qword_19EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19EFA8);
  }
  return result;
}

unsigned char *_s16UnitsCounterTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x89440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataConfig.UnitsCounterType()
{
  return &type metadata for DataConfig.UnitsCounterType;
}

void sub_89478(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = sub_145B80();
  id v7 = [v5 stringArrayForKey:v6];

  if (v7)
  {
    uint64_t v8 = (double *)sub_145DE0();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  if (sub_86398(a1, a2, v8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_7DB80(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_7DB80((double *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    double v11 = &v8[2 * v10];
    *((void *)v11 + 4) = a1;
    *((void *)v11 + 5) = a2;
    id v12 = [v4 standardUserDefaults];
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
    NSString v14 = sub_145B80();
    [v12 setObject:isa forKey:v14];
  }
}

unint64_t sub_89684(unsigned __int8 a1)
{
  unint64_t result = 0xD00000000000002ALL;
  if (a1 >= 2u) {
    return 0xD000000000000031;
  }
  return result;
}

unint64_t sub_896E0(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x7370657473;
      break;
    case 4:
      unint64_t result = 0x6D69547472617473;
      break;
    case 5:
      unint64_t result = 0x656D6954646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_897C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_19F0E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_8BAC0();
  sub_146D10();
  char v17 = 0;
  sub_146AE0();
  if (!v2)
  {
    char v16 = *(unsigned char *)(v3 + 16);
    char v15 = 1;
    sub_8BC28();
    sub_146AD0();
    char v14 = 2;
    sub_146A90();
    char v13 = 3;
    sub_146A90();
    _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    char v12 = 4;
    sub_145230();
    sub_8BA78(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    char v11 = 5;
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_89A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v25 = sub_A314(&qword_19F0C8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v9 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  id v26 = a1;
  sub_2F114(a1, v12);
  sub_8BAC0();
  char v13 = v27;
  sub_146D00();
  if (v13) {
    return sub_C7FC((uint64_t)v26);
  }
  uint64_t v14 = (uint64_t)v8;
  id v27 = v6;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v34 = 0;
  *(void *)char v11 = sub_146A30();
  *((void *)v11 + 1) = v17;
  char v32 = 1;
  sub_8BB14();
  sub_146A20();
  v11[16] = v33;
  char v31 = 2;
  *((void *)v11 + 3) = sub_1469E0();
  *((void *)v11 + 4) = v18;
  char v30 = 3;
  *((void *)v11 + 5) = sub_1469E0();
  *((void *)v11 + 6) = v19;
  sub_145230();
  char v29 = 4;
  uint64_t v22 = sub_8BA78(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384(v14, (uint64_t)&v11[*(int *)(v9 + 32)]);
  char v28 = 5;
  uint64_t v20 = (uint64_t)v27;
  sub_146A20();
  (*(void (**)(void, uint64_t))(v15 + 8))(0, v25);
  sub_12384(v20, (uint64_t)&v11[*(int *)(v9 + 36)]);
  sub_8BB68((uint64_t)v11, v16);
  sub_C7FC((uint64_t)v26);
  return sub_8BBCC((uint64_t)v11);
}

uint64_t sub_89ED4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_567CC(*a1, *a2);
}

Swift::Int sub_89EE0()
{
  return sub_56E60();
}

uint64_t sub_89EE8()
{
  return sub_57138();
}

Swift::Int sub_89EF0()
{
  return sub_5724C();
}

uint64_t sub_89EF8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_8C14C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_89F28@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_89684(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_89F54()
{
  return sub_145DB0();
}

uint64_t sub_89FB4()
{
  return sub_145D70();
}

unint64_t sub_8A004()
{
  return sub_896E0(*v0);
}

uint64_t sub_8A00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_8C198(a1, a2);
  *a3 = result;
  return result;
}

void sub_8A034(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_8A040(uint64_t a1)
{
  unint64_t v2 = sub_8BAC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8A07C(uint64_t a1)
{
  unint64_t v2 = sub_8BAC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_8A0B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_89A4C(a1, a2);
}

uint64_t sub_8A0D0(void *a1)
{
  return sub_897C4(a1);
}

uint64_t sub_8A0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_A314(&qword_19C4F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v2 + OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_11;
  }
  swift_retain();
  sub_324A8((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_11:
    sub_1248C((uint64_t)v7, &qword_19C4F0);
    return 0;
  }
  sub_8BD80((uint64_t)v7, (uint64_t)v11);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  if (a2 && (v12 == a1 ? (BOOL v14 = v13 == a2) : (BOOL v14 = 0), v14 || (sub_146B90() & 1) != 0))
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_7E1CC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v15 = sub_7E1CC((double *)(v17 > 1), v18 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v18 + 1;
    uint64_t v19 = &v15[2 * v18];
    *((void *)v19 + 4) = v12;
    *((void *)v19 + 5) = v13;
  }
  uint64_t v21 = v11[5];
  uint64_t v20 = v11[6];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_7E1CC(0, *((void *)v15 + 2) + 1, 1, v15);
  }
  unint64_t v23 = *((void *)v15 + 2);
  unint64_t v22 = *((void *)v15 + 3);
  if (v23 >= v22 >> 1) {
    uint64_t v15 = sub_7E1CC((double *)(v22 > 1), v23 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v23 + 1;
  uint64_t v24 = &v15[2 * v23];
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v20;
  uint64_t v16 = sub_64620(8236, 0xE200000000000000, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_8BBCC((uint64_t)v11);
  return v16;
}

uint64_t sub_8A3BC(int a1, char a2, id a3)
{
  BOOL v5 = [a3 userInterfaceStyle] != (char *)&def_94138 + 1;
  uint64_t v6 = v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id;

  return sub_4C58C(v6, v5, 0, 1, 0, 1, a2);
}

uint64_t sub_8A428()
{
  uint64_t v1 = sub_145B50();
  __chkstk_darwin(v1 - 8);
  v29[2] = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_145B30();
  __chkstk_darwin(v3 - 8);
  v29[1] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_A314(&qword_19F0F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_A314(&qword_19C4F0);
  __chkstk_darwin(v12 - 8);
  BOOL v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1452C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_A314(&qword_19F0F8);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1452A0();
  sub_8BC7C();
  sub_144CD0();
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata)) {
    goto LABEL_5;
  }
  swift_retain();
  sub_324A8((uint64_t)v14);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    uint64_t v20 = &qword_19C4F0;
    uint64_t v21 = (uint64_t)v14;
  }
  else
  {
    sub_8BB68((uint64_t)v14, (uint64_t)v11);
    sub_1248C((uint64_t)v14, &qword_19C4F0);
    uint64_t v24 = *((void *)v11 + 5);
    uint64_t v25 = *((void *)v11 + 6);
    swift_bridgeObjectRetain();
    sub_8BBCC((uint64_t)v11);
    if (!v25) {
      goto LABEL_5;
    }
    uint64_t v30 = v24;
    uint64_t v31 = v25;
    sub_8BCD0();
    sub_8BD24();
    sub_145A40();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_A314(&qword_19F118);
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) != 1)
    {
      sub_1455F0();
      uint64_t v28 = v30;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
      sub_145B20();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      sub_145B10(v32);
      uint64_t v30 = v28;
      sub_145B00();
      v33._countAndFlagsBits = 0x2973287065747320;
      v33._object = (void *)0xE800000000000000;
      sub_145B10(v33);
      sub_145B40();
      sub_1452B0();
      uint64_t v22 = sub_145C10();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v22;
    }
    uint64_t v20 = &qword_19F0F0;
    uint64_t v21 = (uint64_t)v7;
  }
  sub_1248C(v21, v20);
LABEL_5:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return 0;
}

uint64_t sub_8A944()
{
  return swift_release();
}

id sub_8A954()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MotionActivityAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_8A99C()
{
  return _s19MotionActivityAssetCMa(0);
}

uint64_t _s19MotionActivityAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19EFD8);
}

uint64_t sub_8A9C4()
{
  return swift_updateClassMetadata2();
}

void *sub_8AA08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v10);
    char v11 = (char *)a2 + v10;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(void *)(v12 - 8);
    BOOL v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_A314(&qword_19C150);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_A314(&qword_19C150);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_8AC64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_145230();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_8AD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_8AFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_8B288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_8B468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 36);
  int v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t sub_8B71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8B730);
}

uint64_t sub_8B730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_8B7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8B7F8);
}

uint64_t sub_8B7F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s19MotionActivityAssetC18MotionActivityDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19F040);
}

void sub_8B8C4()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_8B970()
{
  return swift_retain();
}

uint64_t sub_8B980(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_8B998(uint64_t a1, uint64_t a2)
{
  return sub_8A0E8(a1, a2);
}

uint64_t sub_8B9BC()
{
  return sub_8A0E8(0, 0);
}

uint64_t sub_8B9E8()
{
  return sub_8BA78(&qword_19C7A0, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_8BA30()
{
  return sub_8BA78(&qword_19F088, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_8BA78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_8BAC0()
{
  unint64_t result = qword_19F0D0;
  if (!qword_19F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F0D0);
  }
  return result;
}

unint64_t sub_8BB14()
{
  unint64_t result = qword_19F0D8;
  if (!qword_19F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F0D8);
  }
  return result;
}

uint64_t sub_8BB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8BBCC(uint64_t a1)
{
  uint64_t v2 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_8BC28()
{
  unint64_t result = qword_19F0E8;
  if (!qword_19F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F0E8);
  }
  return result;
}

unint64_t sub_8BC7C()
{
  unint64_t result = qword_19F100;
  if (!qword_19F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F100);
  }
  return result;
}

unint64_t sub_8BCD0()
{
  unint64_t result = qword_19F108;
  if (!qword_19F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F108);
  }
  return result;
}

unint64_t sub_8BD24()
{
  unint64_t result = qword_19F110;
  if (!qword_19F110)
  {
    sub_12244(&qword_19F0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F110);
  }
  return result;
}

uint64_t sub_8BD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8BEB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOMa()
{
  return &_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysON;
}

unsigned char *_s19MotionActivityAssetC22MotionActivityTypeEnumOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8BFB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC22MotionActivityTypeEnumOMa()
{
  return &_s19MotionActivityAssetC22MotionActivityTypeEnumON;
}

unint64_t sub_8BFF0()
{
  unint64_t result = qword_19F120;
  if (!qword_19F120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F120);
  }
  return result;
}

unint64_t sub_8C048()
{
  unint64_t result = qword_19F128;
  if (!qword_19F128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F128);
  }
  return result;
}

unint64_t sub_8C0A0()
{
  unint64_t result = qword_19F130;
  if (!qword_19F130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F130);
  }
  return result;
}

unint64_t sub_8C0F8()
{
  unint64_t result = qword_19F138;
  if (!qword_19F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F138);
  }
  return result;
}

uint64_t sub_8C14C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_184B78;
  v6._object = a2;
  unint64_t v4 = sub_1469B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_8C198(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000000014DF30 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000000014DF50 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_8C42C()
{
  unint64_t result = qword_19F140;
  if (!qword_19F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F140);
  }
  return result;
}

uint64_t type metadata accessor for SuggestionSheetConstants()
{
  return self;
}

uint64_t sub_8C4A4()
{
  return swift_deallocClassInstance();
}

uint64_t _s17MOLocationShifterCMa()
{
  return self;
}

id sub_8C628()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15MOMapAnnotationCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s15MOMapAnnotationCMa()
{
  return self;
}

char *sub_8C694(uint64_t a1, long long *a2, void *a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView;
  id v9 = objc_allocWithZone((Class)UIImageView);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v10[v13] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v14 = &v10[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration];
  long long v15 = *a2;
  long long v16 = a2[1];
  *((void *)v14 + 4) = *((void *)a2 + 4);
  *(_OWORD *)uint64_t v14 = v15;
  *((_OWORD *)v14 + 1) = v16;
  sub_8D51C((id *)a2);

  v46.receiver = v10;
  v46.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  uint64_t v17 = (char *)objc_msgSendSuper2(&v46, "initWithAnnotation:reuseIdentifier:", a1, 0);
  uint64_t v18 = sub_98284();
  double v19 = 0.0;
  double v20 = 0.0;
  double v21 = 0.0;
  double v22 = 0.0;
  double v23 = 0.0;
  if ((v24 & 1) == 0) {
    double v20 = nullsub_1(0.0, 0.0, *(double *)&v18, *(double *)&v18);
  }
  objc_msgSend(v17, "setFrame:", v20, v21, v22, v23);
  uint64_t v25 = &v17[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView];
  id v26 = *(id *)&v17[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView];
  double v27 = COERCE_DOUBLE(sub_98284());
  double v28 = 0.0;
  double v29 = 0.0;
  double v30 = 0.0;
  if ((v31 & 1) == 0)
  {
    if ((*((uint64_t *)a2 + 2) > 1
       || (*((unsigned char *)a2 + 24) & 1) != 0
       || (*((unsigned char *)a2 + 26) & 1) != 0 && (*((unsigned char *)a2 + 9) & 1) == 0)
      && (*((unsigned char *)a2 + 25) & 1) != 0)
    {
      double v34 = v27 * 0.45;
      double v32 = (v27 - v27 * 0.45) * 0.5;
      double v33 = v32;
    }
    else
    {
      double v32 = v27 * 0.55 * 0.5;
      double v33 = *((double *)a2 + 4);
      double v34 = v27 * 0.45;
    }
    double v19 = nullsub_1(v32, v33, v34, v34);
  }
  objc_msgSend(v26, "setFrame:", v19, v28, v29, v30);

  sub_8CEC0(a3, a4);
  if (*((uint64_t *)a2 + 2) > 1)
  {
    sub_8D2DC();
    sub_8CC44();
    [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView]];
    uint64_t v25 = &v17[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel];
    goto LABEL_20;
  }
  if (*((unsigned char *)a2 + 24))
  {
    sub_8D2DC();
    uint64_t v35 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView;
    goto LABEL_19;
  }
  if (*((unsigned char *)a2 + 26) & 1) == 0 || (*((unsigned char *)a2 + 9))
  {
    sub_8CAA0();
    uint64_t v35 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView;
LABEL_19:
    [v17 addSubview:*(void *)&v17[v35]];
  }
LABEL_20:
  [v17 addSubview:*(void *)v25];
  uint64_t v36 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView;
  id v37 = [*(id *)&v17[OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView] layer];
  id v38 = [self secondarySystemBackgroundColor];
  id v39 = [v38 CGColor];

  [v37 setShadowColor:v39];
  id v40 = [*(id *)&v17[v36] layer];
  LODWORD(v41) = 0.5;
  [v40 setShadowOpacity:v41];

  id v42 = [*(id *)&v17[v36] layer];
  [v42 setShadowRadius:5.0];

  id v43 = [*(id *)&v17[v36] layer];
  [v43 setShadowPathIsBounds:1];
  sub_8D548(a3, a4);
  sub_8D588((id *)a2);

  swift_unknownObjectRelease();
  return v17;
}

void sub_8CAA0()
{
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 16) <= 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 24) == 0
    && (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 26) ^ 1 | *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 9)) != 0)
  {
    Swift::OpaquePointer v3 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView);
    double v4 = *(double *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 32);
    double v5 = COERCE_DOUBLE(sub_98284());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v6 & 1) == 0) {
      double v7 = nullsub_1(v5 * 0.4, v4 + v5 * 0.3, v5 * 0.2, v5 * 0.2);
    }
    objc_msgSend(v3, "setFrame:", v7, v8, v9, v10);
    NSString v11 = sub_145B80();
    id v12 = [self systemImageNamed:v11];

    [v3 setImage:v12];
    [v3 setContentMode:2];
  }
}

void sub_8CC44()
{
  uint64_t v1 = (double *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    Swift::OpaquePointer v3 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel);
    int v4 = *((unsigned __int8 *)v1 + 25);
    double v5 = v1[4];
    uint64_t v23 = *(void *)v1;
    LOWORD(v24) = *((_WORD *)v1 + 4);
    uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_configuration + 16);
    LOWORD(v26) = *((_WORD *)v1 + 12);
    BYTE2(v26) = *((unsigned char *)v1 + 26);
    double v6 = COERCE_DOUBLE(sub_98284());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v11 & 1) == 0)
    {
      if (v4)
      {
        double v12 = v6 * 0.45;
        double v13 = (v6 - v6 * 0.45) * 0.5;
        double v14 = v13;
      }
      else
      {
        double v13 = v6 * 0.55 * 0.5;
        double v12 = v6 * 0.45;
        double v14 = v5;
      }
      double v7 = nullsub_1(v13, v14, v12, v12);
    }
    objc_msgSend(v3, "setFrame:", v7, v8, v9, v10);
    uint64_t v22 = v2;
    sub_146B50();
    NSString v15 = sub_145B80();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, "setText:", v15, v22, v23, v24, v25, v26, *(void *)&v5);

    [v3 setTextAlignment:1];
    id v16 = [self whiteColor];
    [v3 setTextColor:v16];

    double v17 = COERCE_DOUBLE(sub_98284());
    double v18 = 15.0;
    if ((v19 & 1) == 0) {
      double v18 = v17 / 6.0;
    }
    id v20 = [self boldSystemFontOfSize:v18];
    [v3 setFont:v20];

    [v3 setAdjustsFontSizeToFitWidth:1];
    [v3 setClipsToBounds:1];
    id v21 = [v3 layer];
    [v3 frame];
    [v21 setCornerRadius:CGRectGetWidth(v27) * 0.5];
  }
}

void sub_8CEC0(void *a1, void *a2)
{
  if (a1)
  {
    int v4 = *(void **)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView);
    id v19 = a1;
    id v5 = a2;
    [v4 setImage:v5];
    [*(id *)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v19];
    [*(id *)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v19];
  }
  else
  {
    double v6 = *(void **)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView);
    [v6 frame];
    double v7 = CGRectGetWidth(v21) * 0.25;
    [v6 frame];
    double v8 = CGRectGetHeight(v22) * 0.23;
    [v6 frame];
    double v9 = CGRectGetWidth(v23) * 0.5;
    [v6 frame];
    CGFloat Height = CGRectGetHeight(v24);
    double v11 = nullsub_1(v7, v8, v9, Height * 0.5);
    id v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", v11, v12, v13, v14);
    id v19 = v15;
    if (qword_19AD80 != -1)
    {
      swift_once();
      id v15 = v19;
    }
    [v15 setImage:qword_1A3B38];
    id v16 = [self systemWhiteColor];
    [v19 setTintColor:v16];

    if (qword_19ACD0 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1A3A38;
    [v6 setBackgroundColor:qword_1A3A38];
    [*(id *)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v17];
    [*(id *)(v2 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v17];
    id v18 = [v6 layer];
    [v6 frame];
    [v18 setCornerRadius:CGRectGetHeight(v25) * 0.5];

    [v6 addSubview:v19];
  }
}

id sub_8D208()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s19MOPOIAnnotationViewCMa()
{
  return self;
}

void sub_8D2DC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView);
  [v1 setFrame:sub_98034()];
  id v2 = [v1 layer];
  id v3 = [self whiteColor];
  id v4 = [v3 CGColor];

  [v2 setBackgroundColor:v4];
  [v1 setClipsToBounds:1];
  id v5 = [v1 layer];
  [v1 frame];
  [v5 setCornerRadius:CGRectGetWidth(v7) * 0.5];
}

void sub_8D434()
{
  uint64_t v1 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_basePOICircleView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtCC15JournalSettings10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  sub_146910();
  __break(1u);
}

id *sub_8D51C(id *a1)
{
  id v2 = *a1;
  return a1;
}

void sub_8D548(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id *sub_8D588(id *a1)
{
  return a1;
}

uint64_t sub_8D5B4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        double v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        double v6 = (unsigned __int8 *)sub_146870();
      }
      uint64_t v7 = (uint64_t)sub_91730(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        id v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              double v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        id v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_91648(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_8D804()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19F390);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19F390);
  if (qword_19AF68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D88);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Int sub_8D8CC()
{
  return sub_146CD0();
}

uint64_t sub_8D960()
{
  return sub_145A20();
}

Swift::Int sub_8D9E0()
{
  return sub_146CD0();
}

uint64_t sub_8DA70()
{
  return sub_145260();
}

id sub_8DA80(uint64_t a1, double a2)
{
  uint64_t v5 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v41 = *(void *)(v5 - 8);
  id v42 = (int *)v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v2[OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_skipRows] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_skipColumns] = &_swiftEmptySetSingleton;
  char v8 = off_19F000;
  char v9 = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_inputClusters] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_results] = &_swiftEmptySetSingleton;
  *(double *)&v2[OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold] = a2;
  uint64_t v10 = (objc_class *)_s30MOSuggestionAssetMapsClustererCMa();
  v50.receiver = v2;
  v50.super_class = v10;
  id v11 = objc_msgSendSuper2(&v50, "init");
  id v12 = v11;
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v49 = _swiftEmptyArrayStorage;
    id v38 = v11;
    id v37 = v11;
    sub_2CAFC(0, v13, 0);
    uint64_t v14 = 0;
    char v9 = v49;
    uint64_t v39 = a1;
    int64_t v40 = v13;
    uint64_t v15 = a1 + 56;
    do
    {
      uint64_t v16 = *(void *)(v15 - 24);
      uint64_t v17 = *(void *)(v15 - 16);
      id v19 = *(void **)(v15 - 8);
      uint64_t v18 = *(void *)v15;
      int v20 = *(unsigned __int8 *)(v15 + 8);
      uint64_t v21 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      int v45 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 56);
      if (v20) {
        uint64_t v18 = 1;
      }
      uint64_t v43 = v18;
      uint64_t v44 = v21;
      uint64_t v46 = v14;
      uint64_t v47 = sub_146B50();
      uint64_t v48 = v24;
      v51._countAndFlagsBits = 95;
      v51._object = (void *)0xE100000000000000;
      sub_145C90(v51);
      uint64_t v26 = v47;
      uint64_t v25 = v48;
      CGRect v27 = v9;
      double v28 = v42;
      id v29 = v19;
      swift_bridgeObjectRetain();
      sub_145280();
      *uint64_t v7 = v16;
      v7[1] = v17;
      uint64_t v30 = v43;
      uint64_t v31 = v44;
      _OWORD v7[2] = 0;
      v7[3] = v30;
      void v7[4] = v26;
      v7[5] = v25;
      *(void *)((char *)v7 + v28[9]) = v19;
      *(void *)((char *)v7 + v28[10]) = 0;
      double v32 = (void *)((char *)v7 + v28[11]);
      void *v32 = v31;
      v32[1] = v22;
      *((unsigned char *)v7 + v28[12]) = v45;
      uint64_t v33 = v28[13];
      char v9 = v27;
      *(void *)((char *)v7 + v33) = v23;
      uint64_t v49 = v27;
      unint64_t v35 = *((void *)v27 + 2);
      unint64_t v34 = *((void *)v27 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_2CAFC(v34 > 1, v35 + 1, 1);
        char v9 = v49;
      }
      ++v14;
      *((void *)v9 + 2) = v35 + 1;
      sub_92654((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v35);
      v15 += 104;
    }
    while (v40 != v14);
    swift_bridgeObjectRelease();

    char v8 = off_19F000;
    id v12 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)((char *)v8[119] + (void)v12) = v9;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_8DD64()
{
  uint64_t v1 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v131 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v123 = (uint64_t)v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v122 = (uint64_t)v111 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v115 = (char *)v111 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v119 = (uint64_t)v111 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v118 = (uint64_t)v111 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v117 = (uint64_t)v111 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v116 = (uint64_t)v111 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v114 = (char *)v111 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v111 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t result = __chkstk_darwin(v23);
  uint64_t v124 = (uint64_t)v111 - v28;
  unint64_t v29 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_inputClusters);
  unint64_t v139 = v29;
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30) {
    goto LABEL_90;
  }
  uint64_t v31 = v30 - 1;
  if (v30 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  uint64_t v129 = v27;
  uint64_t v126 = v26;
  uint64_t v127 = v25;
  uint64_t v112 = OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold;
  v111[1] = v0 + OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_results;
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v33 = _swiftEmptyArrayStorage;
  uint64_t v121 = v0;
  uint64_t v128 = v1;
  int v113 = v22;
  uint64_t v120 = v31;
  while (1)
  {
    if (v32 == v31)
    {
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      return result;
    }
    uint64_t v34 = *(void *)(v29 + 16);
    if (v34
      && (uint64_t v35 = sub_145E30(),
          *(void *)(v35 + 16) = v34,
          memset_pattern16((void *)(v35 + 32), &unk_15C8C0, 8 * v34),
          (uint64_t v36 = *(void *)(v29 + 16)) != 0))
    {
      sub_A314(&qword_19F4B0);
      unint64_t result = sub_145E30();
      *(void *)(result + 16) = v36;
      *(void *)(result + 32) = v35;
      if (v36 == 1) {
        goto LABEL_14;
      }
      uint64_t v33 = (double *)result;
      *(void *)(result + 40) = v35;
      uint64_t v37 = v36 - 2;
      if (v36 != 2)
      {
        id v38 = (uint64_t *)(result + 48);
        do
        {
          *v38++ = v35;
          swift_bridgeObjectRetain();
          --v37;
        }
        while (v37);
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t result = (unint64_t)v33;
LABEL_14:
    uint64_t v39 = *(void *)(v29 + 16);
    if (!v39) {
      goto LABEL_89;
    }
    uint64_t v125 = v32;
    uint64_t v40 = v39 - 1;
    unint64_t v135 = v29;
    unint64_t v41 = result;
    if (v39 != 1) {
      break;
    }
LABEL_35:
    unint64_t v138 = result;
    uint64_t v62 = v121;
    unint64_t result = sub_8E8E8((uint64_t)&v138, 1);
    if (v65)
    {
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v31 = v120;
      uint64_t v84 = v125;
      uint64_t v33 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v66 = (uint64_t)v113;
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      unint64_t v67 = v29;
      unint64_t v68 = *(void *)(v29 + 16);
      if (result >= v68) {
        goto LABEL_93;
      }
      unint64_t v69 = v63;
      double v70 = v64;
      unint64_t v134 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      uint64_t v71 = v67 + v134;
      uint64_t v72 = *(void *)(v131 + 72);
      unint64_t result = sub_926B8(v67 + v134 + v72 * result, v124);
      if (v69 >= v68) {
        goto LABEL_94;
      }
      double v73 = v70;
      uint64_t v74 = v129;
      sub_926B8(v71 + v72 * v69, v129);
      if (*(double *)(v62 + v112) * *(double *)(v62 + v112) <= v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = v124;
        uint64_t v86 = v119;
        sub_926B8(v124, v119);
        swift_beginAccess();
        uint64_t v87 = v118;
        sub_E95E0(v118, v86);
        sub_9271C(v87);
        sub_926B8(v74, v86);
        sub_E95E0(v87, v86);
        sub_9271C(v87);
        swift_endAccess();
        sub_9271C(v74);
        unint64_t result = sub_9271C(v85);
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        unint64_t v29 = v135;
      }
      else
      {
        unint64_t v136 = v124 + *(int *)(v128 + 32);
        swift_bridgeObjectRetain();
        unint64_t v75 = 0;
        uint64_t v137 = v72;
        uint64_t v76 = v72 + v134;
        unint64_t v77 = 1;
        uint64_t v78 = (uint64_t)v115;
        uint64_t v79 = (uint64_t)v114;
        while (1)
        {
          char v80 = sub_145260();
          sub_926B8(v71, v66);
          sub_926B8(v129, v79);
          if (v80) {
            break;
          }
          char v81 = sub_145260();
          sub_9271C(v79);
          sub_9271C(v66);
          if (v81) {
            goto LABEL_48;
          }
          ++v75;
          v71 += v137;
          ++v77;
          v76 += v137;
          if (v68 == v75)
          {
            unint64_t v82 = v135;
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v75 = *(void *)(v82 + 16);
            unint64_t v83 = v139;
            goto LABEL_50;
          }
        }
        sub_9271C(v79);
        sub_9271C(v66);
LABEL_48:
        unint64_t v88 = v135;
        unint64_t result = swift_bridgeObjectRelease();
        if (__OFADD__(v75, 1)) {
          goto LABEL_101;
        }
        uint64_t v89 = *(void *)(v88 + 16);
        unint64_t v83 = v139;
        if (v75 + 1 != v89)
        {
          while (v77 < *(void *)(v83 + 16))
          {
            sub_926B8(v83 + v76, v78);
            char v101 = sub_145260();
            uint64_t v102 = v78;
            uint64_t v103 = v78;
            uint64_t v104 = v126;
            sub_926B8(v102, v126);
            uint64_t v105 = v127;
            sub_926B8(v129, v127);
            if (v101)
            {
              sub_9271C(v104);
              sub_9271C(v105);
              unint64_t result = sub_9271C(v103);
              uint64_t v78 = v103;
            }
            else
            {
              char v106 = sub_145260();
              sub_9271C(v104);
              sub_9271C(v105);
              unint64_t result = sub_9271C(v103);
              uint64_t v78 = v103;
              if ((v106 & 1) == 0)
              {
                if (v77 != v75)
                {
                  if ((v75 & 0x8000000000000000) != 0) {
                    goto LABEL_95;
                  }
                  unint64_t v107 = *(void *)(v83 + 16);
                  if (v75 >= v107) {
                    goto LABEL_96;
                  }
                  unint64_t v108 = v75 * v137;
                  unint64_t result = sub_926B8(v83 + v134 + v75 * v137, v122);
                  if (v77 >= v107) {
                    goto LABEL_97;
                  }
                  sub_926B8(v83 + v76, v123);
                  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    unint64_t result = sub_115648(v83);
                    unint64_t v83 = result;
                    unint64_t v139 = result;
                  }
                  if (v75 >= *(void *)(v83 + 16)) {
                    goto LABEL_98;
                  }
                  unint64_t result = sub_92778(v123, v83 + v134 + v108);
                  if (v77 >= *(void *)(v139 + 16)) {
                    goto LABEL_99;
                  }
                  unint64_t result = sub_92778(v122, v139 + v76);
                }
                if (__OFADD__(v75++, 1)) {
                  goto LABEL_91;
                }
              }
            }
            unint64_t v110 = v77 + 1;
            if (__OFADD__(v77, 1)) {
              goto LABEL_87;
            }
            unint64_t v83 = v139;
            ++v77;
            v76 += v137;
            if (v110 == *(void *)(v139 + 16)) {
              goto LABEL_50;
            }
          }
          goto LABEL_86;
        }
LABEL_50:
        int64_t v90 = *(void *)(v83 + 16);
        if (v90 < (uint64_t)v75) {
          goto LABEL_100;
        }
        sub_91E98(v75, v90);
        swift_bridgeObjectRelease();
        uint64_t v91 = v116;
        sub_8EB50(v124, v129, v116, v73);
        sub_926B8(v91, v117);
        unint64_t v92 = v139;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v92 = sub_7DB4C(0, *(void *)(v92 + 16) + 1, 1, v92);
        }
        unint64_t v95 = *(void *)(v92 + 16);
        unint64_t v94 = *(void *)(v92 + 24);
        if (v95 >= v94 >> 1) {
          unint64_t v92 = sub_7DB4C(v94 > 1, v95 + 1, 1, v92);
        }
        *(void *)(v92 + 16) = v95 + 1;
        sub_92654(v117, v92 + v134 + v95 * v137);
        unint64_t v139 = v92;
        unint64_t v96 = v92;
        uint64_t v97 = v116;
        uint64_t v98 = v119;
        sub_926B8(v116, v119);
        swift_beginAccess();
        uint64_t v99 = v118;
        sub_E95E0(v118, v98);
        sub_9271C(v99);
        swift_endAccess();
        uint64_t v100 = v97;
        unint64_t v29 = v96;
        sub_9271C(v100);
        sub_9271C(v129);
        unint64_t result = sub_9271C(v124);
      }
    }
    uint64_t v32 = v84 + 1;
    if (v32 == v31) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v42 = 0;
  unint64_t v43 = result + 32;
  unint64_t v44 = result + 40;
  unint64_t v130 = v29 + 8;
  unint64_t v134 = 1;
  uint64_t v132 = v39 - 1;
  while (1)
  {
    if (v42 == v40)
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    unint64_t v45 = *(void *)(v29 + 16);
    if (v45 <= v42) {
      goto LABEL_84;
    }
    unint64_t v133 = v42 + 1;
    if (v42 + 1 != v45) {
      break;
    }
LABEL_17:
    ++v134;
    uint64_t v40 = v132;
    unint64_t v42 = v133;
    if (v133 == v132) {
      goto LABEL_35;
    }
  }
  if (v42 + 1 >= v45) {
    goto LABEL_85;
  }
  unint64_t v46 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
  uint64_t v47 = *(void *)(v131 + 72);
  uint64_t v48 = (double *)(v29 + v46 + v47 * v42);
  unint64_t v136 = v45 - 1;
  uint64_t v137 = v47;
  uint64_t v49 = (double *)(v130 + v46 + v47 * v134);
  unint64_t v50 = v42;
  while (1)
  {
    unint64_t v51 = *(void *)(v29 + 16);
    if (v42 >= v51) {
      break;
    }
    unint64_t v52 = v50 + 1;
    if (v50 + 1 >= v51) {
      goto LABEL_78;
    }
    if (v42 >= *(void *)(result + 16)) {
      goto LABEL_79;
    }
    double v53 = *(v49 - 1);
    double v54 = *v49;
    double v56 = *v48;
    double v55 = v48[1];
    id v57 = *(double **)(v43 + 8 * v42);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v43 + 8 * v42) = v57;
    if ((v58 & 1) == 0)
    {
      id v57 = sub_115634((uint64_t)v57);
      *(void *)(v43 + 8 * v42) = v57;
    }
    if (v52 >= *((void *)v57 + 2)) {
      goto LABEL_80;
    }
    double v59 = (v56 - v53) * (v56 - v53) + (v55 - v54) * (v55 - v54);
    v57[v50 + 5] = v59;
    if (v52 >= *(void *)(v41 + 16)) {
      goto LABEL_81;
    }
    uint64_t v60 = *(double **)(v44 + 8 * v50);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v44 + 8 * v50) = v60;
    if ((v61 & 1) == 0)
    {
      uint64_t v60 = sub_115634((uint64_t)v60);
      *(void *)(v44 + 8 * v50) = v60;
    }
    unint64_t v29 = v135;
    if (v42 >= *((void *)v60 + 2)) {
      goto LABEL_82;
    }
    unint64_t result = v41;
    v60[v42 + 4] = v59;
    ++v50;
    uint64_t v49 = (double *)((char *)v49 + v137);
    if (v136 == v50) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_8E8E8(uint64_t result, char a2)
{
  if (!*(void *)(*(void *)result + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_skipRows;
  uint64_t v5 = OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_skipColumns;
  uint64_t v25 = *(void *)result + 32;
  double v6 = 1.79769313e308;
  uint64_t v7 = -1;
  uint64_t v8 = -1;
  uint64_t v27 = *(void *)(*(void *)result + 16);
  unint64_t v28 = v27;
  do
  {
    if (v3 >= v27)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v12 = v9 + 32;
      unint64_t v13 = v28;
      if (v3 < v28) {
        unint64_t v13 = v3;
      }
      unint64_t v26 = v13;
      do
      {
        double v14 = *(double *)(v12 + 8 * v11);
        uint64_t v15 = *(void *)(v2 + v4);
        if (*(void *)(v15 + 16))
        {
          unint64_t result = sub_146C70();
          uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v17 = result & ~v16;
          if ((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
          {
            uint64_t v18 = *(void *)(v15 + 48);
            if (*(void *)(v18 + 8 * v17) == v3) {
              goto LABEL_11;
            }
            uint64_t v19 = ~v16;
            while (1)
            {
              unint64_t v17 = (v17 + 1) & v19;
              if (((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                break;
              }
              if (*(void *)(v18 + 8 * v17) == v3) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v20 = *(void *)(v2 + v5);
        if (*(void *)(v20 + 16))
        {
          unint64_t result = sub_146C70();
          uint64_t v21 = -1 << *(unsigned char *)(v20 + 32);
          unint64_t v22 = result & ~v21;
          if ((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
          {
            uint64_t v23 = *(void *)(v20 + 48);
            if (*(void *)(v23 + 8 * v22) == v11) {
              goto LABEL_11;
            }
            uint64_t v24 = ~v21;
            while (1)
            {
              unint64_t v22 = (v22 + 1) & v24;
              if (((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                break;
              }
              if (*(void *)(v23 + 8 * v22) == v11) {
                goto LABEL_11;
              }
            }
          }
        }
        if ((a2 & 1) == 0) {
          goto LABEL_9;
        }
        if (v28 == 1)
        {
          uint64_t v27 = 1;
        }
        else
        {
          uint64_t v27 = v28;
          if (v11 < v26)
          {
LABEL_9:
            if (v14 < v6)
            {
              uint64_t v7 = v11;
              uint64_t v8 = v3;
              double v6 = v14;
            }
            goto LABEL_11;
          }
          uint64_t v27 = v28;
        }
LABEL_11:
        ++v11;
      }
      while (v11 != v10);
    }
    ++v3;
  }
  while (v3 != v28);
  if (v8 == -1 && v7 == -1) {
    return 0;
  }
  return v8;
}

int *sub_8EB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t result = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = result;
  uint64_t v10 = result[9];
  unint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = v11;
  if (!v11)
  {
    uint64_t v12 = *(void **)(a2 + v10);
    unint64_t result = v12;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    double v16 = (*(double *)(a1 + 8) + *(double *)(a2 + 8)) * 0.5;
    double v17 = (*(double *)a1 + *(double *)a2) * 0.5;
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void **)(a2 + 40);
    uint64_t v24 = v19;
    uint64_t v25 = v18;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v20;
    v26._object = v21;
    sub_145C90(v26);
    id v22 = v11;
    unint64_t result = (int *)sub_145280();
    *(double *)a3 = v17;
    *(double *)(a3 + 8) = v16;
    *(double *)(a3 + 16) = a4;
    *(void *)(a3 + 24) = v15;
    *(void *)(a3 + 32) = v24;
    *(void *)(a3 + 40) = v25;
    *(void *)(a3 + v9[9]) = v12;
    *(void *)(a3 + v9[10]) = 0;
    uint64_t v23 = (void *)(a3 + v9[11]);
    void *v23 = 0;
    v23[1] = 0xE000000000000000;
    *(unsigned char *)(a3 + v9[12]) = 0;
    *(void *)(a3 + v9[13]) = 0;
  }
  return result;
}

double *sub_8EC78()
{
  uint64_t v144 = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v146 = *((void *)v144 - 1);
  uint64_t v0 = __chkstk_darwin(v144);
  uint64_t v143 = (uint64_t)v125 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v125 - v3;
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v132 = (uint64_t)v125 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v129 = (uint64_t)v125 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)v125 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (double *)((char *)v125 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  double v17 = (double *)((char *)v125 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v125 - v18;
  unint64_t v152 = 0;
  unint64_t v153 = 0xE000000000000000;
  if (qword_19AF10 != -1) {
    goto LABEL_114;
  }
  while (1)
  {
    uint64_t v20 = sub_145760();
    sub_C584(v20, (uint64_t)qword_19F390);
    uint64_t v21 = sub_145740();
    os_log_type_t v22 = sub_146210();
    BOOL v23 = os_log_type_enabled(v21, v22);
    unint64_t v136 = v11;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      uint64_t v151 = 0x3FE0000000000000;
      sub_146610();
      _os_log_impl(&def_94138, v21, v22, "[MOSuggestionAssetMapsClusterer] using POI penalty: %f", v24, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v25 = (double *)((char *)v137
                   + OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_results);
    swift_beginAccess();
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = off_19F000;
    if (!*(void *)(*(void *)v25 + 16))
    {
      uint64_t v145 = _swiftEmptyArrayStorage;
      double v17 = v137;
      goto LABEL_97;
    }
    uint64_t v145 = v25;
    uint64_t v28 = v26 + 56;
    uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = -1;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    unint64_t v31 = v30 & *(void *)(v26 + 56);
    unint64_t v11 = (char *)((unint64_t)(v29 + 63) >> 6);
    swift_bridgeObjectRetain();
    uint64_t v32 = 0;
    for (double i = 0.0; ; double i = i + v37 * v38)
    {
      if (v31)
      {
        unint64_t v34 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v35 = v34 | (v32 << 6);
        goto LABEL_9;
      }
      uint64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      if (v39 >= (uint64_t)v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v39);
      ++v32;
      if (!v40)
      {
        uint64_t v32 = v39 + 1;
        if (v39 + 1 >= (uint64_t)v11) {
          goto LABEL_28;
        }
        unint64_t v40 = *(void *)(v28 + 8 * v32);
        if (!v40)
        {
          uint64_t v32 = v39 + 2;
          if (v39 + 2 >= (uint64_t)v11) {
            goto LABEL_28;
          }
          unint64_t v40 = *(void *)(v28 + 8 * v32);
          if (!v40) {
            break;
          }
        }
      }
LABEL_27:
      unint64_t v31 = (v40 - 1) & v40;
      unint64_t v35 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_9:
      sub_926B8(*(void *)(v26 + 48) + *(void *)(v146 + 72) * v35, (uint64_t)v19);
      sub_92654((uint64_t)v19, (uint64_t)v17);
      uint64_t v36 = *(void *)((char *)v17 + v144[9]);
      double v37 = v17[2];
      sub_9271C((uint64_t)v17);
      if (v36) {
        double v38 = 0.5;
      }
      else {
        double v38 = 1.5;
      }
    }
    uint64_t v41 = v39 + 3;
    if (v41 >= (uint64_t)v11) {
      break;
    }
    unint64_t v40 = *(void *)(v28 + 8 * v41);
    if (v40)
    {
      uint64_t v32 = v41;
      goto LABEL_27;
    }
    while (1)
    {
      uint64_t v32 = v41 + 1;
      if (__OFADD__(v41, 1)) {
        break;
      }
      if (v32 >= (uint64_t)v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v32);
      ++v41;
      if (v40) {
        goto LABEL_27;
      }
    }
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    swift_once();
  }
LABEL_28:
  swift_release();
  uint64_t v42 = *(void *)v145;
  uint64_t v43 = *(void *)(*(void *)v145 + 16);
  swift_bridgeObjectRetain_n();
  unint64_t v44 = sub_142488(v42);
  swift_bridgeObjectRelease();
  uint64_t v149 = v44;
  sub_90528((unint64_t *)&v149);
  swift_bridgeObjectRelease();
  unint64_t v45 = (unint64_t)v149;
  uint64_t v46 = *((void *)v149 + 2);
  unint64_t v11 = v136;
  if (v46)
  {
    unint64_t v47 = 0;
    uint64_t v139 = OBJC_IVAR____TtCC15JournalSettings10MapManager30MOSuggestionAssetMapsClusterer_inputClusters;
    unint64_t v138 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v48 = (char *)v149 + v138;
    uint64_t v145 = _swiftEmptyArrayStorage;
    uint64_t v127 = MKPointOfInterestCategoryReligiousSite;
    uint64_t v19 = (char *)&type metadata for String;
    double v49 = i / (double)v43;
    double v17 = v137;
    unint64_t v134 = v14;
    unint64_t v133 = v4;
    unint64_t v130 = (unint64_t)v149;
    uint64_t v135 = v46;
    uint64_t v140 = (char *)v149 + v138;
    while (1)
    {
      if (v47 >= *(void *)(v45 + 16))
      {
        __break(1u);
        goto LABEL_109;
      }
      uint64_t v50 = *(void *)(v146 + 72);
      sub_926B8((uint64_t)&v48[v50 * v47], (uint64_t)v14);
      double v51 = v14[2];
      sub_926B8((uint64_t)v14, (uint64_t)v11);
      if (v51 >= v49)
      {
        sub_9271C((uint64_t)v11);
        goto LABEL_31;
      }
      uint64_t v141 = v50;
      uint64_t v149 = (double *)v152;
      unint64_t v150 = v153;
      unint64_t v52 = *((void *)v11 + 5);
      uint64_t v147 = *((void *)v11 + 4);
      unint64_t v148 = v52;
      sub_12060();
      char v53 = sub_146680();
      sub_9271C((uint64_t)v11);
      if (v53)
      {
        uint64_t v48 = v140;
        goto LABEL_31;
      }
      unint64_t v54 = *((void *)v14 + 5);
      uint64_t v149 = (double *)*((void *)v14 + 4);
      unint64_t v150 = v54;
      uint64_t v147 = 95;
      unint64_t v148 = 0xE100000000000000;
      uint64_t v55 = sub_146630();
      if (!*(void *)(v55 + 16)) {
        goto LABEL_112;
      }
      double v56 = (double *)v55;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      else
      {
        double v56 = sub_11565C((uint64_t)v56);
        uint64_t v57 = *((void *)v56 + 2);
        if (!v57) {
          goto LABEL_113;
        }
      }
      *((void *)v56 + 2) = v57 - 1;
      swift_bridgeObjectRelease();
      uint64_t v58 = *((void *)v56 + 2);
      if (!v58)
      {
        uint64_t v62 = v17;
        swift_bridgeObjectRelease();
        id v63 = 0;
        uint64_t v46 = v135;
        goto LABEL_90;
      }
      uint64_t v4 = 0;
      id v142 = 0;
      unint64_t v11 = 0;
      double v59 = (unint64_t *)(v56 + 5);
      double v60 = 0.0;
      double v61 = 0.0;
      do
      {
        uint64_t v65 = *(v59 - 1);
        unint64_t v66 = *v59;
        if (v65) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == 0xE000000000000000;
        }
        if (!v67 && (sub_146B90() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_8D5B4(v65, v66);
          if ((v69 & 1) == 0 && (v68 & 0x8000000000000000) == 0)
          {
            uint64_t v70 = *(void *)((char *)v17 + v139);
            if (v68 < *(void *)(v70 + 16))
            {
              uint64_t v71 = (double *)(v70 + v138 + v68 * v141);
              double v73 = *v71;
              double v72 = v71[1];
              uint64_t v19 = *(char **)((char *)v71 + v144[9]);
              if (v19) {
                BOOL v74 = (uint64_t)v4 < 1;
              }
              else {
                BOOL v74 = 0;
              }
              if (!v74)
              {
LABEL_57:

                if (__OFADD__(v11++, 1)) {
                  goto LABEL_110;
                }
                if (v60 == 0.0) {
                  double v60 = v72;
                }
                else {
                  double v60 = (v60 + v72) * 0.5;
                }
                if (v61 == 0.0) {
                  double v61 = v73;
                }
                else {
                  double v61 = (v61 + v73) * 0.5;
                }
                uint64_t v76 = v19;
                goto LABEL_43;
              }
              uint64_t v131 = v4;
              unint64_t v77 = v19;
              id v78 = [v77 pointOfInterestCategory];
              if (v78)
              {
                uint64_t v79 = v78;
                uint64_t v128 = v77;
                uint64_t v80 = sub_145BC0();
                uint64_t v82 = v81;
                if (v80 == sub_145BC0() && v82 == v83)
                {

                  swift_bridgeObjectRelease_n();
                  unint64_t v77 = v128;
                  double v17 = v137;
                }
                else
                {
                  LODWORD(v126) = sub_146B90();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v77 = v128;
                  double v17 = v137;
                  if ((v126 & 1) == 0) {
                    goto LABEL_71;
                  }
                }
              }
              else
              {
LABEL_71:
                id v85 = [v77 _styleAttributes];

                if (v85)
                {
                  uint64_t v86 = *((void *)v14 + 2);
                  uint64_t v126 = *((void *)v14 + 4);
                  *(double *)uint64_t v125 = v14[5];
                  uint64_t v87 = (char *)v14 + v144[11];
                  uint64_t v89 = *(char **)v87;
                  unint64_t v88 = (char *)*((void *)v87 + 1);
                  uint64_t v128 = v89;
                  uint64_t v131 = v88;
                  uint64_t v90 = v129;
                  v125[1] = v129 + v144[8];
                  uint64_t v76 = v77;
                  uint64_t v91 = v125[0];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_145280();
                  *(double *)uint64_t v90 = v73;
                  *(double *)(v90 + 8) = v72;
                  *(void *)(v90 + 16) = v86;
                  *(void *)(v90 + 24) = 1;
                  *(void *)(v90 + 32) = v126;
                  *(void *)(v90 + 40) = v91;
                  unint64_t v92 = v144;
                  *(void *)(v90 + v144[9]) = v19;
                  *(void *)(v90 + v92[10]) = 0;
                  uint64_t v93 = (char **)(v90 + v92[11]);
                  unint64_t v94 = v131;
                  *uint64_t v93 = v128;
                  v93[1] = v94;
                  *(unsigned char *)(v90 + v92[12]) = 0;
                  *(void *)(v90 + v92[13]) = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v145 = (double *)sub_7DB4C(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
                  }
                  unint64_t v96 = *((void *)v145 + 2);
                  unint64_t v95 = *((void *)v145 + 3);
                  if (v96 >= v95 >> 1) {
                    uint64_t v145 = (double *)sub_7DB4C(v95 > 1, v96 + 1, 1, (unint64_t)v145);
                  }
                  uint64_t v97 = v145;
                  *((void *)v145 + 2) = v96 + 1;
                  sub_92654(v129, (uint64_t)v97 + v138 + v96 * v141);

                  if (v61 != 0.0) {
                    double v61 = v61 + (v61 - v73) / 7.0;
                  }
                  double v17 = v137;
                  if (v60 != 0.0) {
                    double v60 = v60 + (v60 - v72) / 7.0;
                  }
                  uint64_t v4 = (unsigned char *)(&def_94138 + 1);
LABEL_43:
                  double v64 = v76;
                  id v142 = v19;
                  goto LABEL_44;
                }
              }

              uint64_t v4 = v131;
              goto LABEL_57;
            }
          }
        }
LABEL_44:
        v59 += 2;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      if ((uint64_t)v11 < 1)
      {
        uint64_t v62 = v17;
        unint64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
      }
      else
      {
        uint64_t v98 = *((void *)v14 + 2);
        uint64_t v99 = *((void *)v14 + 5);
        uint64_t v131 = (char *)*((void *)v14 + 4);
        uint64_t v100 = v144;
        char v101 = (char *)v14 + v144[11];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        uint64_t v104 = v132;
        id v105 = v142;
        id v106 = v142;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_145280();
        *(double *)uint64_t v104 = v61;
        *(double *)(v104 + 8) = v60;
        *(void *)(v104 + 16) = v98;
        unint64_t v107 = v131;
        *(void *)(v104 + 24) = v11;
        *(void *)(v104 + 32) = v107;
        *(void *)(v104 + 40) = v99;
        *(void *)(v104 + v100[9]) = v105;
        *(void *)(v104 + v100[10]) = 0;
        unint64_t v108 = (void *)(v104 + v100[11]);
        void *v108 = v103;
        v108[1] = v102;
        *(unsigned char *)(v104 + v100[12]) = 0;
        *(void *)(v104 + v100[13]) = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v145 = (double *)sub_7DB4C(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v110 = *((void *)v145 + 2);
        unint64_t v109 = *((void *)v145 + 3);
        uint64_t v62 = v137;
        unint64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
        if (v110 >= v109 >> 1) {
          uint64_t v145 = (double *)sub_7DB4C(v109 > 1, v110 + 1, 1, (unint64_t)v145);
        }
        uint64_t v111 = v145;
        *((void *)v145 + 2) = v110 + 1;
        sub_92654(v132, (uint64_t)v111 + v138 + v110 * v141);
      }
      id v63 = v142;
LABEL_90:
      uint64_t v14 = v134;
      uint64_t v112 = *((void *)v134 + 4);
      int v113 = (void *)*((void *)v134 + 5);
      swift_bridgeObjectRetain();
      v154._countAndFlagsBits = v112;
      v154._object = v113;
      sub_145C90(v154);
      swift_bridgeObjectRelease();

      uint64_t v48 = v140;
      uint64_t v19 = (char *)&type metadata for String;
      double v17 = v62;
      uint64_t v4 = v133;
LABEL_31:
      ++v47;
      sub_9271C((uint64_t)v14);
      if (v47 == v46)
      {
        swift_release();
        goto LABEL_96;
      }
    }
  }
  swift_release();
  uint64_t v145 = _swiftEmptyArrayStorage;
  double v17 = v137;
LABEL_96:
  uint64_t v27 = off_19F000;
LABEL_97:
  uint64_t v114 = *(void *)((char *)v27[119] + (void)v17);
  uint64_t v115 = *(void *)(v114 + 16);
  if (v115)
  {
    unint64_t v116 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v117 = v114 + v116;
    uint64_t v118 = *(void *)(v146 + 72);
    uint64_t v146 = v114;
    swift_bridgeObjectRetain();
    do
    {
      sub_926B8(v117, (uint64_t)v4);
      uint64_t v149 = (double *)v152;
      unint64_t v150 = v153;
      uint64_t v121 = *((void *)v4 + 4);
      uint64_t v120 = (void *)*((void *)v4 + 5);
      uint64_t v147 = v121;
      unint64_t v148 = (unint64_t)v120;
      sub_12060();
      if ((sub_146680() & 1) == 0)
      {
        sub_926B8((uint64_t)v4, v143);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v145 = (double *)sub_7DB4C(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v123 = *((void *)v145 + 2);
        unint64_t v122 = *((void *)v145 + 3);
        if (v123 >= v122 >> 1) {
          uint64_t v145 = (double *)sub_7DB4C(v122 > 1, v123 + 1, 1, (unint64_t)v145);
        }
        uint64_t v119 = v145;
        *((void *)v145 + 2) = v123 + 1;
        sub_92654(v143, (uint64_t)v119 + v116 + v123 * v118);
        swift_bridgeObjectRetain();
        v155._countAndFlagsBits = v121;
        v155._object = v120;
        sub_145C90(v155);
        swift_bridgeObjectRelease();
      }
      sub_9271C((uint64_t)v4);
      v117 += v118;
      --v115;
    }
    while (v115);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v145;
}

id sub_8FA8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s30MOSuggestionAssetMapsClustererCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s30MOSuggestionAssetMapsClustererCMa()
{
  return self;
}

void *sub_8FB50(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a3[8];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_145290();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v16;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    id v22 = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_8FC98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_145290();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_8FD34(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_145290();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  id v21 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_8FE2C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145290();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  uint64_t v12 = *(void **)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = v12;
  id v13 = v12;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_8FF58(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145290();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_90020(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_90118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9012C);
}

uint64_t sub_9012C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_145290();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_901DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_901F0);
}

uint64_t sub_901F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_145290();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s30MOSuggestionAssetMapsClustererC7ClusterVMa()
{
  uint64_t result = qword_19F450;
  if (!qword_19F450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_902E4()
{
  uint64_t result = sub_145290();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_903B4()
{
  return sub_903FC(&qword_19F4A8, (void (*)(uint64_t))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_903FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_90444(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_A314(&qword_19CBB8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  uint64_t v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_904AC(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_145D00();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_145CD0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

Swift::Int sub_90528(unint64_t *a1)
{
  uint64_t v2 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_10C5C8(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_905D0(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_905D0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v135 = (uint64_t)&v120 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v133 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  uint64_t v132 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_146B30(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      return sub_90F98(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  Swift::Int v123 = result;
  if (v12 < 2)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v128 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_107:
      unint64_t v122 = v18;
      if (v21 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v114) {
            goto LABEL_149;
          }
          double v116 = v20[2 * v115 + 4];
          double v117 = v20[2 * v21 + 3];
          sub_911EC(v114 + *(void *)(v129 + 72) * *(void *)&v116, v114 + *(void *)(v129 + 72) * *(void *)&v20[2 * v21 + 2], v114 + *(void *)(v129 + 72) * *(void *)&v117, v128);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v117 < *(uint64_t *)&v116) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_10AC48((uint64_t)v20);
          }
          if (v115 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v118 = &v20[2 * v115 + 4];
          double *v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *((void *)v20 + 2);
          if (v21 > v119) {
            goto LABEL_140;
          }
          memmove(&v20[2 * v21 + 2], &v20[2 * v21 + 4], 16 * (v119 - v21));
          *((void *)v20 + 2) = v119 - 1;
          unint64_t v21 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v122[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v122 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_145E30();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v129 + 80);
    unint64_t v122 = (double *)v16;
    unint64_t v128 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = _swiftEmptyArrayStorage;
  unint64_t v134 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      Swift::Int v32 = v19 + 1;
    }
    else
    {
      uint64_t v24 = *a1;
      uint64_t v25 = v19;
      uint64_t v127 = v19;
      uint64_t v26 = *(void *)(v129 + 72);
      uint64_t v27 = v132;
      sub_926B8(v24 + v26 * v23, v132);
      uint64_t v28 = v24 + v26 * v25;
      uint64_t v29 = v133;
      sub_926B8(v28, v133);
      double v30 = *(double *)(v27 + 16);
      double v31 = *(double *)(v29 + 16);
      sub_9271C(v29);
      sub_9271C(v27);
      Swift::Int v32 = v127 + 2;
      uint64_t v124 = v24;
      uint64_t v136 = v26;
      if (v127 + 2 >= v12)
      {
        uint64_t v40 = v26;
        uint64_t v22 = v127;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v125 = v2;
        Swift::Int v131 = v26 * v23;
        uint64_t v33 = v24;
        Swift::Int v34 = v127 + 2;
        uint64_t v35 = v26 * (v127 + 2);
        while (1)
        {
          Swift::Int v36 = v12;
          uint64_t v37 = v132;
          sub_926B8(v33 + v35, v132);
          uint64_t v38 = v133;
          sub_926B8(v33 + v131, v133);
          BOOL v39 = *(double *)(v38 + 16) >= *(double *)(v37 + 16);
          sub_9271C(v38);
          sub_9271C(v37);
          if (v31 < v30 == v39) {
            break;
          }
          uint64_t v40 = v136;
          v33 += v136;
          ++v34;
          Swift::Int v12 = v36;
          if (v36 == v34)
          {
            Swift::Int v32 = v36;
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v22 = v127;
            if (v31 < v30) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v134;
        Swift::Int v32 = v34;
        uint64_t v2 = v125;
        uint64_t v22 = v127;
        Swift::Int v12 = v36;
        uint64_t v40 = v136;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v32 < v22) {
        goto LABEL_143;
      }
      if (v22 < v32)
      {
        Swift::Int v131 = v12;
        uint64_t v121 = v20;
        uint64_t v41 = 0;
        uint64_t v42 = v40 * (v32 - 1);
        Swift::Int v43 = v32 * v40;
        uint64_t v44 = v22 * v40;
        do
        {
          if (v22 != v32 + v41 - 1)
          {
            uint64_t v125 = v2;
            uint64_t v45 = v124;
            if (!v124) {
              goto LABEL_148;
            }
            unint64_t v46 = v124 + v44;
            sub_92654(v124 + v44, v126);
            if (v44 < v42 || v46 >= v45 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_92654(v126, v45 + v42);
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v40 = v136;
          }
          ++v22;
          --v41;
          v42 -= v40;
          v43 -= v40;
          v44 += v40;
        }
        while (v22 < v32 + v41);
        uint64_t v20 = v121;
        uint64_t v22 = v127;
        Swift::Int v12 = v131;
      }
    }
LABEL_40:
    if (v32 < v12)
    {
      if (__OFSUB__(v32, v22)) {
        goto LABEL_141;
      }
      if (v32 - v22 < v123) {
        break;
      }
    }
LABEL_58:
    if (v32 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_10A934(0, *((void *)v20 + 2) + 1, 1, (uint64_t)v20);
    }
    unint64_t v63 = *((void *)v20 + 2);
    unint64_t v62 = *((void *)v20 + 3);
    unint64_t v21 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v20 = sub_10A934((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v20);
    }
    *((void *)v20 + 2) = v21;
    double v64 = v20 + 4;
    uint64_t v65 = &v20[2 * v63 + 4];
    uint64_t v66 = v136;
    *(void *)uint64_t v65 = v22;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v21 - 1;
        if (v21 >= 4)
        {
          double v72 = &v64[2 * v21];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_125;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_126;
          }
          unint64_t v79 = v21 - 2;
          uint64_t v80 = &v64[2 * v21 - 4];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_128;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_131;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[2 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_135;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v96 = *((void *)v20 + 4);
            uint64_t v97 = *((void *)v20 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_89;
          }
          uint64_t v69 = *((void *)v20 + 4);
          uint64_t v68 = *((void *)v20 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_127;
        }
        unint64_t v79 = v21 - 2;
        id v85 = &v64[2 * v21 - 4];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_130;
        }
        uint64_t v91 = &v64[2 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_133;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_134;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_95:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v90) {
          goto LABEL_129;
        }
        uint64_t v98 = &v64[2 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_132;
        }
        if (v101 < v89) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        unint64_t v108 = v20;
        unint64_t v109 = &v64[2 * v106];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = &v64[2 * v67];
        double v112 = v111[1];
        sub_911EC(v107 + *(void *)(v129 + 72) * *(void *)v109, v107 + *(void *)(v129 + 72) * *(void *)v111, v107 + *(void *)(v129 + 72) * *(void *)&v112, v128);
        if (v2) {
          goto LABEL_118;
        }
        if (*(uint64_t *)&v112 < v110) {
          goto LABEL_122;
        }
        if (v67 > *((void *)v108 + 2)) {
          goto LABEL_123;
        }
        *(void *)unint64_t v109 = v110;
        v64[2 * v106 + 1] = v112;
        unint64_t v113 = *((void *)v108 + 2);
        if (v67 >= v113) {
          goto LABEL_124;
        }
        uint64_t v20 = v108;
        unint64_t v21 = v113 - 1;
        memmove(&v64[2 * v67], v111 + 2, 16 * (v113 - 1 - v67));
        *((void *)v108 + 2) = v113 - 1;
        a1 = v134;
        if (v113 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v136;
    if (v136 >= v12)
    {
      uint64_t v18 = v122;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v123)) {
    goto LABEL_144;
  }
  if (v22 + v123 >= v12) {
    Swift::Int v47 = v12;
  }
  else {
    Swift::Int v47 = v22 + v123;
  }
  if (v47 >= v22)
  {
    if (v32 != v47)
    {
      uint64_t v127 = v22;
      uint64_t v121 = v20;
      uint64_t v124 = v47;
      uint64_t v125 = v2;
      Swift::Int v48 = *(void *)(v129 + 72);
      uint64_t v136 = v48 * (v32 - 1);
      Swift::Int v131 = v48;
      Swift::Int v49 = v32 * v48;
      do
      {
        uint64_t v50 = 0;
        uint64_t v51 = v127;
        while (1)
        {
          Swift::Int v52 = v32;
          uint64_t v53 = *a1;
          uint64_t v54 = v132;
          sub_926B8(v49 + v50 + *a1, v132);
          uint64_t v55 = v136 + v50 + v53;
          uint64_t v56 = v133;
          sub_926B8(v55, v133);
          double v57 = *(double *)(v54 + 16);
          double v58 = *(double *)(v56 + 16);
          sub_9271C(v56);
          sub_9271C(v54);
          if (v58 >= v57) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v60 = v59 + v136 + v50;
          sub_92654(v59 + v49 + v50, v135);
          swift_arrayInitWithTakeFrontToBack();
          sub_92654(v135, v60);
          v50 -= v131;
          ++v51;
          Swift::Int v32 = v52;
          a1 = v134;
          if (v52 == v51) {
            goto LABEL_51;
          }
        }
        Swift::Int v32 = v52;
LABEL_51:
        ++v32;
        v136 += v131;
        v49 += v131;
      }
      while (v32 != v124);
      Swift::Int v32 = v124;
      uint64_t v2 = v125;
      uint64_t v20 = v121;
      uint64_t v22 = v127;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_146900();
  __break(1u);
  return result;
}

uint64_t sub_90F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (double *)((char *)&v24 - v10);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (double *)((char *)&v24 - v14);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_926B8(v31 + v17 + *a4, (uint64_t)v15);
      sub_926B8(v32 + v17 + v19, (uint64_t)v11);
      double v20 = v15[2];
      double v21 = v11[2];
      sub_9271C((uint64_t)v11);
      uint64_t result = sub_9271C((uint64_t)v15);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_92654(v22 + v31 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_92654(v30, v23);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_911EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = __chkstk_darwin(v40);
  uint64_t v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  Swift::Int v12 = (double *)((char *)&v39 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v14;
        do
        {
          unint64_t v32 = a3 + v31;
          sub_926B8(v29 + v31, (uint64_t)v12);
          unint64_t v33 = a2 + v31;
          sub_926B8(a2 + v31, (uint64_t)v10);
          double v34 = v12[2];
          double v35 = v10[2];
          sub_9271C((uint64_t)v10);
          sub_9271C((uint64_t)v12);
          if (v35 >= v34)
          {
            unint64_t v36 = v41;
            v41 += v31;
            if (a3 < v36 || v32 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v36)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v31;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v33;
          a3 += v31;
        }
        while (v33 > a1);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_926B8(a2, (uint64_t)v12);
        sub_926B8(a4, (uint64_t)v10);
        double v22 = v12[2];
        double v23 = v10[2];
        sub_9271C((uint64_t)v10);
        sub_9271C((uint64_t)v12);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_10AA30(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

unsigned __int8 *sub_91648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_145D10();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_919AC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_146870();
  }
LABEL_7:
  uint64_t v11 = sub_91730(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_91730(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (double i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_919AC()
{
  unint64_t v0 = sub_145D20();
  uint64_t v4 = sub_91A2C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_91A2C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_91B84(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_90444(v9, 0),
          unint64_t v12 = sub_91C84((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_145C60();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_145C60();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_146870();
LABEL_4:

  return sub_145C60();
}

uint64_t sub_91B84(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_904AC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_904AC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_91C84(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    uint64_t v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_904AC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_145CF0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_146870();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_904AC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_145CC0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_91E98(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_7DB4C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *unint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_146970();
  __break(1u);
  return result;
}

double sub_92080(uint64_t a1, char a2, char a3, char a4, char a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v10 = (long long *)(a1 + 32);
    double v11 = *(double *)(a1 + 32);
    uint64_t v12 = *(void **)(a1 + 48);
    if (v5 == 1)
    {
      double v13 = *(double *)(a1 + 40);
      double v14 = *(double *)(a1 + 112);
      if ((*(unsigned char *)(a1 + 64) & 1) != 0 || *(uint64_t *)(a1 + 56) < 2)
      {
        if (v14 <= 0.0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v42 = v12;
          swift_bridgeObjectRetain();
          double v16 = 0.04;
          double v17 = 0.04;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
        else
        {
          BOOL v40 = v14 < 150.0;
          double v41 = v14 / 111000.0;
          if (v40)
          {
            double v16 = v41 + v41 + 0.003;
          }
          else
          {
            double v43 = v41 * 3.0 + 0.003;
            if (v43 <= 0.1) {
              double v16 = v43;
            }
            else {
              double v16 = 0.1;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v44 = v12;
          swift_bridgeObjectRetain();
          double v17 = v16;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v15 = v12;
        swift_bridgeObjectRetain();
        double v16 = 0.01;
        double v17 = 0.01;
        if ((a5 & 1) == 0)
        {
LABEL_6:
          double v18 = 1.1;
LABEL_29:
          double v45 = v17 * v18;
          double v46 = v16 * v18;
          if (a2)
          {
            double v45 = v45 * 1.4;
            double v46 = v46 * 0.9;
            double v11 = v11 + v45 / -12.0;
          }
          if (a4) {
            double v45 = v45 * 1.3;
          }
          if (a3) {
            double v46 = v46 * 1.3;
          }
          if (!sub_C63B4(v11, v13, fmin(v45, 180.0), fmin(v46, 180.0)))
          {
            if (qword_19AF10 != -1) {
              swift_once();
            }
            uint64_t v47 = sub_145760();
            sub_C584(v47, (uint64_t)qword_19F390);
            Swift::Int v48 = sub_145740();
            os_log_type_t v49 = sub_1461F0();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 134218752;
              sub_146610();
              *(_WORD *)(v50 + 12) = 2048;
              sub_146610();
              *(_WORD *)(v50 + 22) = 2048;
              sub_146610();
              *(_WORD *)(v50 + 32) = 2048;
              sub_146610();
              _os_log_impl(&def_94138, v48, v49, "[MapSnapshot] makeRegion failed with invalid region: centerLatitude = %f, centerLongitude = %f, targetLatitudeDelta = %f, targetLongitudeDelta = %f", (uint8_t *)v50, 0x2Au);
              swift_slowDealloc();
            }

            v56.origin.CGFloat x = MKMapRectWorld.origin.x;
            v56.origin.y = MKMapRectWorld.origin.y;
            v56.size.width = MKMapRectWorld.size.width;
            v56.size.height = MKMapRectWorld.size.height;
            *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v56);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
    else
    {
      uint64_t v53 = *(void **)(a1 + 48);
      id v23 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2CB58(0, v5, 0);
      double v24 = _swiftEmptyArrayStorage[2];
      int64_t v25 = v5;
      do
      {
        long long v26 = *v10;
        double v27 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v24 >= *(void *)&v27 >> 1)
        {
          long long v52 = *v10;
          sub_2CB58(*(void *)&v27 > 1uLL, *(void *)&v24 + 1, 1);
          long long v26 = v52;
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v24 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v24 + 4] = v26;
        unint64_t v10 = (long long *)((char *)v10 + 104);
        ++*(void *)&v24;
        --v25;
      }
      while (v25);
      id v28 = [self polygonWithCoordinates:&_swiftEmptyArrayStorage[4] count:v5];
      swift_release();
      [v28 boundingMapRect];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;

      v55.origin.CGFloat x = v30;
      v55.origin.y = v32;
      v55.size.width = v34;
      v55.size.height = v36;
      *(MKCoordinateRegion *)(&v17 - 2) = MKCoordinateRegionForMapRect(v55);
      double v11 = v37;
      double v13 = v38;
      double v16 = v39;
      uint64_t v12 = v53;
      if ((a5 & 1) == 0) {
        goto LABEL_6;
      }
    }
    double v18 = 1.4;
    goto LABEL_29;
  }
  if (qword_19AF10 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_145760();
  sub_C584(v19, (uint64_t)qword_19F390);
  char v20 = sub_145740();
  os_log_type_t v21 = sub_1461F0();
  if (os_log_type_enabled(v20, v21))
  {
    BOOL v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v22 = 0;
    _os_log_impl(&def_94138, v20, v21, "[MapSnapshot] makeRegion failed with 0 locations", v22, 2u);
    swift_slowDealloc();
  }

  v54.origin.CGFloat x = MKMapRectNull.origin.x;
  v54.origin.y = MKMapRectNull.origin.y;
  v54.size.width = MKMapRectNull.size.width;
  v54.size.height = MKMapRectNull.size.height;
  *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v54);
  return v11;
}

uint64_t sub_92654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_926B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9271C(uint64_t a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_92778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_927DC()
{
  uint64_t v0 = sub_145760();
  sub_C61C(v0, qword_19F4B8);
  uint64_t v1 = sub_C584(v0, (uint64_t)qword_19F4B8);
  if (qword_19AF68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_C584(v0, (uint64_t)qword_1A3D88);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_928A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 369) = a5;
  *(unsigned char *)(v6 + 368) = a4;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 264) = a6;
  *(void *)(v6 + 240) = a1;
  *(void *)(v6 + 248) = a2;
  uint64_t v7 = sub_A314(&qword_19F590);
  *(void *)(v6 + 272) = v7;
  *(void *)(v6 + 280) = *(void *)(v7 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  sub_A314(&qword_19BFB0);
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  *(void *)(v6 + 312) = sub_145F30();
  *(void *)(v6 + 320) = sub_145F20();
  uint64_t v9 = sub_145EB0();
  *(void *)(v6 + 328) = v9;
  *(void *)(v6 + 336) = v8;
  return _swift_task_switch(sub_929EC, v9, v8);
}

uint64_t sub_929EC()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (_OWORD *)(v0 + 16);
    char v37 = *(unsigned char *)(v0 + 369);
    uint64_t v4 = v1 + 32;
    uint64_t v36 = sub_145F50();
    uint64_t v5 = *(void *)(v36 - 8);
    double v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    double v34 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    double v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v38 = v2;
      uint64_t v7 = *(void *)(v0 + 296);
      uint64_t v8 = *(void *)(v0 + 304);
      uint64_t v9 = *(void **)(v0 + 264);
      char v10 = *(unsigned char *)(v0 + 368);
      long long v12 = *(_OWORD *)(v4 + 16);
      long long v11 = *(_OWORD *)(v4 + 32);
      *unint64_t v3 = *(_OWORD *)v4;
      *(_OWORD *)(v0 + 32) = v12;
      *(_OWORD *)(v0 + 48) = v11;
      long long v14 = *(_OWORD *)(v4 + 64);
      long long v13 = *(_OWORD *)(v4 + 80);
      long long v15 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 112) = *(void *)(v4 + 96);
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      *(_OWORD *)(v0 + 64) = v15;
      v35(v8, 1, 1, v36);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      double v17 = (void *)(v16 + 16);
      *(void *)(v16 + 24) = 0;
      long long v18 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v16 + 96) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v16 + 112) = v18;
      *(void *)(v16 + 128) = *(void *)(v0 + 112);
      long long v19 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v16 + 32) = *v3;
      *(_OWORD *)(v16 + 48) = v19;
      long long v20 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v16 + 80) = v20;
      *(unsigned char *)(v16 + 136) = v10;
      *(unsigned char *)(v16 + 137) = v37;
      *(void *)(v16 + 144) = v9;
      sub_9523C(v8, v7);
      LODWORD(v8) = (*v34)(v7, 1, v36);
      sub_952A4(v0 + 16);
      sub_952A4(v0 + 16);
      id v21 = v9;
      uint64_t v22 = *(void *)(v0 + 296);
      if (v8 == 1)
      {
        sub_78BF0(*(void *)(v0 + 296));
        if (!*v17) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_145F40();
        (*v33)(v22, v36);
        if (!*v17)
        {
LABEL_8:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_145EB0();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v26 = **(void **)(v0 + 248);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_19F5A8;
      *(void *)(v27 + 24) = v16;
      sub_A314(&qword_19EB88);
      uint64_t v28 = v25 | v23;
      if (v25 | v23)
      {
        uint64_t v28 = v0 + 184;
        *(void *)(v0 + 184) = 0;
        *(void *)(v0 + 192) = 0;
        *(void *)(v0 + 200) = v23;
        *(void *)(v0 + 208) = v25;
      }
      uint64_t v6 = *(void *)(v0 + 304);
      *(void *)(v0 + 216) = 1;
      *(void *)(v0 + 224) = v28;
      *(void *)(v0 + 232) = v26;
      swift_task_create();
      swift_release();
      sub_953E8(v0 + 16);
      sub_78BF0(v6);
      v4 += 104;
      uint64_t v2 = v38 - 1;
      if (v38 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_A314(&qword_19EB88);
  sub_145EF0();
  *(void *)(v0 + 344) = _swiftEmptyArrayStorage;
  uint64_t v29 = sub_145F20();
  *(void *)(v0 + 352) = v29;
  double v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v30;
  *double v30 = v0;
  v30[1] = sub_92DB4;
  uint64_t v31 = *(void *)(v0 + 272);
  return TaskGroup.Iterator.next(isolation:)(v0 + 120, v29, &protocol witness table for MainActor, v31);
}

uint64_t sub_92DB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_92EF8, v3, v2);
}

uint64_t sub_92EF8()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void **)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v5 = *(void **)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 128);
    id v6 = v22;
    id v19 = v1;
    sub_95084(v4, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(double **)(v0 + 344);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v8 = sub_7E2DC(0, *((void *)v8 + 2) + 1, 1, *(double **)(v0 + 344));
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_7E2DC((double *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    long long v11 = &v8[8 * v10];
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v22;
    *((unsigned char *)v11 + 48) = v2;
    *((unsigned char *)v11 + 49) = BYTE1(v2) & 1;
    *((void *)v11 + 7) = v21;
    *((unsigned char *)v11 + 64) = v3 & 1;
    *((unsigned char *)v11 + 65) = BYTE1(v3) & 1;
    *((unsigned char *)v11 + 66) = BYTE2(v3) & 1;
    *((void *)v11 + 9) = v20;
    *((void *)v11 + 10) = v4;
    *((void *)v11 + 11) = v5;
    sub_9543C(v1, v22, v2, v21, v3, v20, v4, v5);
    *(void *)(v0 + 344) = v8;
    uint64_t v12 = sub_145F20();
    *(void *)(v0 + 352) = v12;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v13;
    *long long v13 = v0;
    v13[1] = sub_92DB4;
    uint64_t v14 = *(void *)(v0 + 272);
    return TaskGroup.Iterator.next(isolation:)(v0 + 120, v12, &protocol witness table for MainActor, v14);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void **)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    swift_release();
    *uint64_t v16 = v15;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_93164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a7;
  *(unsigned char *)(v7 + 57) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 32) = a1;
  return _swift_task_switch(sub_93190, 0, 0);
}

uint64_t sub_93190()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = (objc_class *)_s15MOMapAnnotationCMa();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  id v6 = &v5[OBJC_IVAR____TtCC15JournalSettings10MapManager15MOMapAnnotation_title];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtCC15JournalSettings10MapManager15MOMapAnnotation_coordinate];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v3;
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  id v27 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  int v8 = *((unsigned __int8 *)v1 + 32);
  char v9 = *((unsigned char *)v1 + 56);
  long long v11 = (void *)v1[2];
  uint64_t v10 = v1[3];
  uint64_t v12 = *(void *)(v0 + 40);
  if (!v11) {
    goto LABEL_6;
  }
  unint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v13) & 0xF;
  }
  char v15 = v14 != 0;
  if (v14)
  {
    char v16 = 0;
  }
  else
  {
LABEL_6:
    char v15 = 0;
    char v16 = *(double *)(v12 + 80) > 150.0;
  }
  char v26 = *(unsigned char *)(v0 + 57);
  char v17 = *(unsigned char *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 32);
  if (v8) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v10;
  }
  id v20 = [*(id *)(v0 + 48) traitCollection];
  id v21 = sub_2F854(v11, v9, v15, v16, v20);
  uint64_t v23 = v22;

  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 17) = v9;
  *(void *)(v18 + 24) = v19;
  *(unsigned char *)(v18 + 32) = (v26 & 1) == 0;
  *(unsigned char *)(v18 + 33) = v15;
  *(unsigned char *)(v18 + 34) = v16;
  *(void *)(v18 + 40) = 0x4000000000000000;
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = v23;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t _s36MOSuggestionAssetMapSnapshotProviderCMa()
{
  return self;
}

double *sub_93384(double *a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((void *)a1 + 2) < 3uLL)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = (int *)v4;
    if (qword_19AF18 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_145760();
    sub_C584(v7, (uint64_t)qword_19F4B8);
    int v8 = sub_145740();
    os_log_type_t v9 = sub_146210();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&def_94138, v8, v9, "[MOSuggestionAssetMapsClusterer] Building dendrogram", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = objc_allocWithZone((Class)_s30MOSuggestionAssetMapsClustererCMa());
    uint64_t v12 = swift_bridgeObjectRetain();
    id v13 = sub_8DA80(v12, 1.0);
    sub_8DD64();
    uint64_t v14 = sub_8EC78();
    int64_t v15 = *((void *)v14 + 2);
    if (v15)
    {
      id v35 = v13;
      double v41 = _swiftEmptyArrayStorage;
      sub_2CB38(0, v15, 0);
      uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
      double v34 = v14;
      uint64_t v17 = (uint64_t)v14 + ((v16 + 32) & ~v16);
      uint64_t v37 = *(void *)(v3 + 72);
      a1 = v41;
      uint64_t v18 = v36;
      do
      {
        sub_926B8(v17, (uint64_t)v6);
        uint64_t v19 = *v6;
        uint64_t v20 = v6[1];
        uint64_t v21 = v18[12];
        uint64_t v22 = (uint64_t *)((char *)v6 + v18[11]);
        uint64_t v23 = v22[1];
        uint64_t v40 = *v22;
        uint64_t v24 = v6[3];
        uint64_t v25 = *(void **)((char *)v6 + v18[9]);
        if (v24 >= 2) {
          uint64_t v26 = v6[3];
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v38 = v26;
        int v39 = *((unsigned __int8 *)v6 + v21);
        uint64_t v27 = *(uint64_t *)((char *)v6 + v18[13]);
        id v28 = v25;
        swift_bridgeObjectRetain();
        sub_9271C((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2CB38(0, *((void *)a1 + 2) + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        unint64_t v30 = *((void *)a1 + 2);
        unint64_t v29 = *((void *)a1 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_2CB38(v29 > 1, v30 + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        *((void *)a1 + 2) = v30 + 1;
        uint64_t v31 = &a1[13 * v30];
        *((void *)v31 + 4) = v19;
        *((void *)v31 + 5) = v20;
        uint64_t v32 = v38;
        *((void *)v31 + 6) = v25;
        *((void *)v31 + 7) = v32;
        *((unsigned char *)v31 + 64) = v24 < 2;
        *((void *)v31 + 9) = v40;
        *((void *)v31 + 10) = v23;
        *((unsigned char *)v31 + 88) = v39;
        v31[12] = 0.0;
        v31[13] = 0.0;
        *((void *)v31 + 14) = v27;
        v17 += v37;
        v31[15] = 0.0;
        v31[16] = -2.68156159e154;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
  }
  return a1;
}

#error "942A8: switch analysis failed: failed to propagate the switch expression (funcsize=966)"

uint64_t sub_94994(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 152) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  *(void *)(v3 + 80) = sub_145F30();
  *(void *)(v3 + 88) = sub_145F20();
  uint64_t v5 = sub_145EB0();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = v4;
  return _swift_task_switch(sub_94A34, v5, v4);
}

uint64_t sub_94A34()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v4 = sub_93384((double *)v2);
  *(void *)(v0 + 112) = v4;
  BOOL v5 = *(void *)(v2 + 16) == 1;
  uint64_t v6 = sub_936E0(v2, v4, v3, v1, 1);
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = sub_A314(&qword_19EB88);
  uint64_t v8 = sub_A314(&qword_19F570);
  uint64_t v9 = sub_145F20();
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *(void *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 24) = v3;
  *(unsigned char *)(v10 + 25) = v5;
  *(void *)(v10 + 32) = v6;
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  void *v11 = v0;
  v11[1] = sub_94BC0;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 56, v7, v8, v9, &protocol witness table for MainActor, &unk_19F580, v10, v7);
}

uint64_t sub_94BC0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_94D44, v3, v2);
}

uint64_t sub_94D44()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_1468B0();
    uint64_t v3 = 0;
    do
    {
      uint64_t v5 = *(void **)(v1 + v3 + 32);
      uint64_t v4 = *(void **)(v1 + v3 + 40);
      char v6 = *(unsigned char *)(v1 + v3 + 48);
      char v7 = *(unsigned char *)(v1 + v3 + 49);
      uint64_t v8 = *(void *)(v1 + v3 + 56);
      char v9 = *(unsigned char *)(v1 + v3 + 64);
      char v10 = *(unsigned char *)(v1 + v3 + 65);
      char v11 = *(unsigned char *)(v1 + v3 + 66);
      uint64_t v12 = *(void *)(v1 + v3 + 72);
      uint64_t v13 = *(void **)(v1 + v3 + 80);
      uint64_t v14 = *(void **)(v1 + v3 + 88);
      *(void *)(v0 + 16) = v4;
      *(unsigned char *)(v0 + 24) = v6;
      *(unsigned char *)(v0 + 25) = v7;
      *(void *)(v0 + 32) = v8;
      *(unsigned char *)(v0 + 40) = v9;
      *(unsigned char *)(v0 + 41) = v10;
      *(unsigned char *)(v0 + 42) = v11;
      *(void *)(v0 + 48) = v12;
      id v15 = v4;
      id v16 = v5;
      sub_95084(v13, v14);
      id v17 = v16;
      id v18 = v15;
      sub_95084(v13, v14);
      sub_8D548(v13, v14);

      id v19 = v17;
      id v20 = v18;
      sub_95084(v13, v14);
      sub_8D548(v13, v14);

      id v21 = v19;
      id v22 = v20;
      sub_95084(v13, v14);

      id v23 = objc_allocWithZone((Class)_s19MOPOIAnnotationViewCMa());
      sub_8C694((uint64_t)v17, (long long *)(v0 + 16), v13, v14);

      sub_8D548(v13, v14);
      sub_146890();
      sub_1468C0();
      sub_1468D0();
      sub_1468A0();
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)(v0 + 120);
  sub_950C4();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAnnotationViews:isa];

  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v27 = *(void *)(v0 + 120);
  return v26(v27);
}

uint64_t sub_94FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 25);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 24);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *char v10 = v3;
  v10[1] = sub_216D4;
  return sub_928A4(a1, a2, v6, v9, v7, v8);
}

id sub_95084(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

unint64_t sub_950C4()
{
  unint64_t result = qword_19F588;
  if (!qword_19F588)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19F588);
  }
  return result;
}

uint64_t sub_95104()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_95164(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  char v5 = *(unsigned char *)(v1 + 136);
  char v6 = *(unsigned char *)(v1 + 137);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_21598;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 57) = v6;
  *(unsigned char *)(v8 + 56) = v5;
  *(void *)(v8 + 32) = a1;
  return _swift_task_switch(sub_93190, 0, 0);
}

uint64_t sub_9523C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19BFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_952A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_952F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_95330(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_21598;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_19F5A0 + dword_19F5A0);
  return v6(a1, v4);
}

uint64_t sub_953E8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_9543C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (a1)
  {

    sub_8D548(a7, a8);
  }
}

uint64_t _s13MOMapLocationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s13MOMapLocationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  id v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13MOMapLocationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13MOMapLocationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13MOMapLocationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MOMapLocationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13MOMapLocationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13MOMapLocationVMa()
{
  return &_s13MOMapLocationVN;
}

uint64_t sub_957A8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_A314(&qword_19C4F0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_95898, 0, 0);
}

uint64_t sub_95898()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_2B530(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1248C(v0[4], &qword_19C4F0);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xE000000000000000);
  }
  else
  {
    uint64_t v6 = v0[7];
    sub_8BD80(v0[4], v6);
    unint64_t v7 = *(void *)(v6 + 32);
    if (!v7) {
      goto LABEL_9;
    }
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!v9)
    {
LABEL_9:
      uint64_t v10 = (uint64_t *)v0[7];
      uint64_t v8 = *v10;
      unint64_t v7 = v10[1];
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_8A428();
    if (v12) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = 0;
    }
    if (v12) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = 0xE000000000000000;
    }
    unint64_t v15 = sub_2E1AC(v8, v7, 0xD000000000000020, (void *)0x800000000014E3B0, 0, 0);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[8] = v17;
    unint64_t v18 = sub_2E1AC(v13, v14, 0xD000000000000023, (void *)0x800000000014E3E0, 0, 0);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[9] = v20;
    id v21 = (void *)swift_task_alloc();
    v0[10] = v21;
    void *v21 = v0;
    v21[1] = sub_95AD8;
    uint64_t v22 = v0[2];
    return sub_543BC(v22, 0, 0, 0, 0, v15, v17, v18);
  }
}

uint64_t sub_95AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 88) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    unint64_t v7 = sub_95CEC;
  }
  else
  {
    *(void *)(v6 + 96) = a2;
    *(void *)(v6 + 104) = a1;
    unint64_t v7 = sub_95C4C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_95C4C()
{
  sub_97924(v0[7], _s19MotionActivityAssetC18MotionActivityDataVMa);
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_95CEC()
{
  sub_97924(*(void *)(v0 + 56), _s19MotionActivityAssetC18MotionActivityDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_95D7C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2C104;
  return sub_957A8(a1);
}

double sub_95E10@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C4F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_5;
  }
  swift_retain();
  sub_324A8((uint64_t)v5);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v5, &qword_19C4F0);
    *(void *)&long long v16 = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    return *(double *)&v16;
  }
  sub_8BD80((uint64_t)v5, (uint64_t)v9);
  long long v10 = *(_OWORD *)v9;
  long long v18 = *(_OWORD *)(v9 + 24);
  long long v19 = v10;
  uint64_t v11 = *((void *)v9 + 5);
  uint64_t v12 = *((void *)v9 + 6);
  uint64_t v13 = (uint64_t)&v9[*(int *)(v6 + 32)];
  uint64_t v14 = _s6ResultVMa_4();
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = sub_97984(&qword_19F5D0, (void (*)(uint64_t))_s6ResultVMa_4);
  *(void *)(a1 + 40) = sub_97984(&qword_19F5D8, (void (*)(uint64_t))_s6ResultVMa_4);
  unint64_t v15 = sub_484D0((uint64_t *)a1);
  sub_12384(v13, (uint64_t)v15 + *(int *)(v14 + 28));
  sub_12384((uint64_t)&v9[*(int *)(v6 + 36)], (uint64_t)v15 + *(int *)(v14 + 32));
  long long v16 = v18;
  *(_OWORD *)unint64_t v15 = v19;
  *((_OWORD *)v15 + 1) = v16;
  v15[4] = v11;
  void v15[5] = v12;
  return *(double *)&v16;
}

uint64_t sub_96078(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19F690);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_9786C();
  sub_146D10();
  char v13 = 0;
  sub_146AE0();
  if (!v1)
  {
    char v12 = 1;
    sub_146A90();
    char v11 = 2;
    sub_146A90();
    _s6ResultVMa_4();
    char v10 = 3;
    sub_145230();
    sub_97984(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    char v9 = 4;
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_962C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v27 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = sub_A314(&qword_19F680);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s6ResultVMa_4();
  __chkstk_darwin(v11);
  char v13 = (void *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_9786C();
  uint64_t v14 = (uint64_t)v30;
  sub_146D00();
  if (v14) {
    return sub_C7FC((uint64_t)a1);
  }
  uint64_t v25 = v7;
  unint64_t v30 = a1;
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  char v35 = 0;
  *char v13 = sub_146A30();
  v13[1] = v17;
  char v34 = 1;
  v13[2] = sub_1469E0();
  _DWORD v13[3] = v18;
  char v33 = 2;
  v13[4] = sub_1469E0();
  v13[5] = v19;
  sub_145230();
  char v32 = 3;
  uint64_t v20 = sub_97984(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v21 = (uint64_t)v25;
  v24[1] = v20;
  sub_146A20();
  v24[0] = v11;
  sub_12384(v21, (uint64_t)v13 + *(int *)(v11 + 28));
  char v31 = 4;
  uint64_t v22 = (uint64_t)v27;
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v16);
  sub_12384(v22, (uint64_t)v13 + *(int *)(v24[0] + 32));
  sub_978C0((uint64_t)v13, v26);
  sub_C7FC((uint64_t)v30);
  return sub_97924((uint64_t)v13, (uint64_t (*)(void))_s6ResultVMa_4);
}

uint64_t sub_96730(uint64_t a1)
{
  uint64_t result = sub_97984(&qword_19F5B8, (void (*)(uint64_t))_s19MotionActivityAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_96788()
{
  unint64_t result = 0x7974697669746361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x7370657473;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_96840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_97BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_96868(uint64_t a1)
{
  unint64_t v2 = sub_9786C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_968A4(uint64_t a1)
{
  unint64_t v2 = sub_9786C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_968E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_962C0(a1, a2);
}

uint64_t sub_968F8(void *a1)
{
  return sub_96078(a1);
}

uint64_t _s6ResultVMa_4()
{
  uint64_t result = qword_19F638;
  if (!qword_19F638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_9695C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_A314(&qword_19C150);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 32);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_A314(&qword_19C150);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_96BB0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_145230();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_96CE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

char *sub_96EE8(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *sub_971C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if (v12(v16, 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

char *sub_97394(char *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_145230();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 32);
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t sub_97640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_97654);
}

uint64_t sub_97654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_97708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9771C);
}

uint64_t sub_9771C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_977C8()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_9786C()
{
  unint64_t result = qword_19F688;
  if (!qword_19F688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F688);
  }
  return result;
}

uint64_t sub_978C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ResultVMa_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_97924(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_97984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x97A98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_4()
{
  return &_s6ResultV10CodingKeysON_4;
}

unint64_t sub_97AD4()
{
  unint64_t result = qword_19F698;
  if (!qword_19F698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F698);
  }
  return result;
}

unint64_t sub_97B2C()
{
  unint64_t result = qword_19F6A0;
  if (!qword_19F6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F6A0);
  }
  return result;
}

unint64_t sub_97B84()
{
  unint64_t result = qword_19F6A8;
  if (!qword_19F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F6A8);
  }
  return result;
}

uint64_t sub_97BD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000000014DF50 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void _s32MOPOIAnnotationViewConfigurationVwxx(id *a1)
{
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 _s32MOPOIAnnotationViewConfigurationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s32MOPOIAnnotationViewConfigurationVMa()
{
  return &_s32MOPOIAnnotationViewConfigurationVN;
}

double sub_98034()
{
  double v1 = COERCE_DOUBLE(sub_98284());
  double v2 = 0.0;
  double v3 = 0.0;
  if ((v4 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v7 = v1 * 0.45;
      double v5 = (v1 - v1 * 0.45) * 0.5;
      double v6 = v5;
    }
    else
    {
      double v5 = v1 * 0.55 * 0.5;
      double v6 = *(double *)(v0 + 32);
      double v7 = v1 * 0.45;
    }
    nullsub_1(v5, v6, v7, v7);
    double v3 = v8;
  }
  double v9 = COERCE_DOUBLE(sub_98284());
  if ((v10 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v13 = v9 * 0.45;
      double v11 = (v9 - v9 * 0.45) * 0.5;
      double v12 = v11;
    }
    else
    {
      double v11 = v9 * 0.55 * 0.5;
      double v12 = *(double *)(v0 + 32);
      double v13 = v9 * 0.45;
    }
    double v2 = nullsub_1(v11, v12, v13, v13);
  }
  double v14 = COERCE_DOUBLE(sub_98284());
  double v15 = 0.0;
  if ((v16 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v19 = v14 * 0.45;
      double v17 = (v14 - v14 * 0.45) * 0.5;
      double v18 = v17;
    }
    else
    {
      double v17 = v14 * 0.55 * 0.5;
      double v18 = *(double *)(v0 + 32);
      double v19 = v14 * 0.45;
    }
    nullsub_1(v17, v18, v19, v19);
  }
  double v20 = v3 * 0.15 * 0.5;
  double v21 = v15 - v20;

  return nullsub_1(v2 - v20, v21, v3 * 1.15, v3 * 1.15);
}

int *sub_98234()
{
  __n128 result = (int *)sub_137170((uint64_t)&off_1843A8);
  off_19F6B0 = result;
  return result;
}

int *sub_9825C()
{
  __n128 result = (int *)sub_137170((uint64_t)&off_184328);
  off_19F6B8 = result;
  return result;
}

uint64_t sub_98284()
{
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0)
  {
    if (qword_19AF28 != -1) {
      swift_once();
    }
    double v1 = off_19F6B8;
    if (!*(void *)((char *)&dword_10 + (void)off_19F6B8)) {
      return 0;
    }
  }
  else
  {
    if (qword_19AF20 != -1) {
      swift_once();
    }
    double v1 = off_19F6B0;
    if (!*(void *)((char *)&dword_10 + (void)off_19F6B0)) {
      return 0;
    }
  }
  unint64_t v2 = sub_137C74(*(unsigned char *)(v0 + 8));
  if (v3) {
    return *(void *)(*(void *)&stru_20.segname[(void)v1 + 16] + 8 * v2);
  }
  return 0;
}

id sub_98504()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicAlertController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for JurassicAlertController()
{
  return self;
}

id sub_9855C()
{
  id v2 = [v0 length];
  sub_A314(&qword_19B1F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1578A0;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 40) = NSHTMLTextDocumentType;
  double v5 = NSDocumentTypeDocumentAttribute;
  double v6 = NSHTMLTextDocumentType;
  sub_1369A8(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_989E0();
  Class isa = sub_1459D0().super.isa;
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v8 = objc_msgSend(v0, "dataFromRange:documentAttributes:error:", 0, v2, isa, v28);

  id v9 = v28[0];
  if (v8)
  {
    uint64_t v10 = sub_144FA0();
    unint64_t v12 = v11;

    switch(v12 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        sub_C4D4(v10, v12);
        swift_retain();
        uint64_t v20 = sub_98B40((int)v10, v10 >> 32, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_98DAC);
        if (v1) {
          goto LABEL_25;
        }
        id v8 = (id)v20;
        uint64_t v22 = v21;
        sub_C52C(v10, v12);
        if (!v22) {
          goto LABEL_13;
        }
        goto LABEL_20;
      case 2uLL:
        uint64_t v14 = *(void *)(v10 + 16);
        uint64_t v15 = *(void *)(v10 + 24);
        sub_C4D4(v10, v12);
        swift_retain();
        swift_retain();
        uint64_t v16 = sub_98B40(v14, v15, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_98DAC);
        if (v1)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_25:
          sub_C52C(v10, v12);
          __break(1u);
          JUMPOUT(0x989D0);
        }
        id v8 = (id)v16;
        uint64_t v18 = v17;
        swift_release();
        swift_release();
        if (v18) {
          goto LABEL_20;
        }
LABEL_13:
        uint64_t v26 = v10;
        unint64_t v27 = v12;
        sub_C4D4(v10, v12);
        sub_A314(&qword_19F6E8);
        if (swift_dynamicCast())
        {
          sub_98E44(v24, (uint64_t)v28);
          sub_2F114(v28, v29);
          if (sub_146990())
          {
            sub_2F114(v28, v29);
            sub_146980();
            sub_C52C(v10, v12);
            id v8 = *(id *)&v24[0];
            sub_C7FC((uint64_t)v28);
            goto LABEL_21;
          }
          sub_C7FC((uint64_t)v28);
        }
        else
        {
          uint64_t v25 = 0;
          memset(v24, 0, sizeof(v24));
          sub_98DE4((uint64_t)v24);
        }
        uint64_t v19 = sub_98A38(v10, v12);
LABEL_19:
        id v8 = (id)v19;
LABEL_20:
        sub_C52C(v10, v12);
LABEL_21:
        sub_C52C(v10, v12);
        break;
      case 3uLL:
        memset(v28, 0, 14);
        goto LABEL_9;
      default:
        v28[0] = (id)v10;
        LOWORD(v28[1]) = v12;
        BYTE2(v28[1]) = BYTE2(v12);
        BYTE3(v28[1]) = BYTE3(v12);
        BYTE4(v28[1]) = BYTE4(v12);
        BYTE5(v28[1]) = BYTE5(v12);
LABEL_9:
        uint64_t v19 = sub_145C50();
        goto LABEL_19;
    }
  }
  else
  {
    double v13 = v9;
    sub_144D90();

    swift_willThrow();
  }
  return v8;
}

unint64_t sub_989E0()
{
  unint64_t result = qword_19B1F8;
  if (!qword_19B1F8)
  {
    type metadata accessor for DocumentAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B1F8);
  }
  return result;
}

uint64_t sub_98A38(uint64_t a1, unint64_t a2)
{
  sub_C4D4(a1, a2);
  sub_98BF0(a1, a2);
  sub_C52C(a1, a2);
  uint64_t v4 = sub_145C50();
  swift_release();
  return v4;
}

uint64_t sub_98AB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_145C50();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_98AEC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_98B40(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_144B90();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_144BB0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_144BA0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_98AEC(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

double *sub_98BF0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_144FC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_A314(&qword_19CBB8);
          id v8 = (double *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          *((void *)v8 + 2) = v9;
          *((void *)v8 + 3) = 2 * v12 - 64;
        }
        sub_C4D4(a1, a2);
        uint64_t v13 = sub_144F80();
        sub_C52C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x98D9CLL);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_98DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_145C50();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_98DE4(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19F6F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_98E44(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_98E5C()
{
  long long v2 = v0;
  id result = [v0 tabStops];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  sub_991E8();
  unint64_t v5 = sub_145DE0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_146930();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v19 = v2;
        unint64_t v20 = v5 & 0xC000000000000001;
        unint64_t v21 = v5;
        if ((v5 & 0xC000000000000001) != 0) {
          id v7 = (id)sub_146810();
        }
        else {
          id v7 = *(id *)(v5 + 32);
        }
        uint64_t v1 = v7;
        sub_136FF0((uint64_t)_swiftEmptyArrayStorage);
        id v8 = objc_allocWithZone((Class)NSTextTab);
        type metadata accessor for OptionKey(0);
        sub_99228();
        Class isa = sub_1459D0().super.isa;
        swift_bridgeObjectRelease();
        [v8 initWithTextAlignment:2 location:isa options:26.0];

        sub_145DC0();
        if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
          goto LABEL_9;
        }
      }
      sub_145E20();
LABEL_9:
      sub_145E50();
      sub_145E00();

      uint64_t v10 = v6 - 1;
      if (v6 != 1)
      {
        uint64_t v11 = 0;
        double v12 = 36.0;
        do
        {
          if (v20) {
            id v13 = (id)sub_146810();
          }
          else {
            id v13 = *(id *)(v21 + 8 * v11 + 40);
          }
          uint64_t v14 = v13;
          id v15 = [v13 alignment];
          sub_136FF0((uint64_t)_swiftEmptyArrayStorage);
          id v16 = objc_allocWithZone((Class)NSTextTab);
          Class v17 = sub_1459D0().super.isa;
          swift_bridgeObjectRelease();
          [v16 initWithTextAlignment:v15 location:v17 options:v12];

          sub_145DC0();
          if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
            sub_145E20();
          }
          sub_145E50();
          sub_145E00();

          double v12 = v12 + 10.0;
          ++v11;
        }
        while (v10 != v11);
      }
      swift_bridgeObjectRelease();
      long long v2 = v19;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8));
    if (v6) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  Class v18 = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setTabStops:v18];

  return [v2 setDefaultTabInterval:10.0];
}

unint64_t sub_991E8()
{
  unint64_t result = qword_19F6F8;
  if (!qword_19F6F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19F6F8);
  }
  return result;
}

unint64_t sub_99228()
{
  unint64_t result = qword_19B440;
  if (!qword_19B440)
  {
    type metadata accessor for OptionKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19B440);
  }
  return result;
}

uint64_t sub_99280()
{
  sub_A314(&qword_19F710);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_15CBA0;
  *(void *)(inited + 32) = sub_145B80();
  *(void *)(inited + 40) = sub_145B80();
  *(void *)(inited + 48) = sub_145B80();
  *(void *)(inited + 56) = sub_145B80();
  *(void *)(inited + 64) = sub_145B80();
  *(void *)(inited + 72) = sub_145B80();
  uint64_t v1 = sub_F38C4(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  uint64_t result = swift_arrayDestroy();
  qword_19F700 = v1;
  return result;
}

uint64_t sub_99380()
{
  uint64_t v0 = sub_F3980((uint64_t)&off_184BE0);
  uint64_t result = swift_arrayDestroy();
  qword_19F708 = v0;
  return result;
}

uint64_t sub_993CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = sub_146480();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    if (qword_19AF30 != -1) {
      swift_once();
    }
    if (sub_368F4(v11, qword_19F700))
    {
      sub_145D20();
      a8 = v12;
      uint64_t v13 = sub_1465F0();
      swift_bridgeObjectRelease();

      uint64_t v14 = *a6 + v13;
      if (!__OFADD__(*a6, v13)) {
        goto LABEL_14;
      }
      __break(1u);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_145D20();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if ((v15 ^ v17) >> 14)
  {
    sub_1465E0();
    uint64_t v15 = sub_146600();
    a8 = v18;
    swift_bridgeObjectRelease();
    if (qword_19AF38 != -1) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v14 = *a6 + 1;
    if (!__OFADD__(*a6, 1)) {
      break;
    }
    __break(1u);
LABEL_17:
    swift_once();
LABEL_12:
    char v19 = sub_3745C(v15, a8, qword_19F708);
    swift_bridgeObjectRelease();
    if (v19) {
      return 1;
    }
  }
LABEL_14:
  *a6 = v14;
  return 1;
}

unint64_t sub_995B4(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x6D69547472617473;
      break;
    case 3:
      unint64_t result = 0x656D6954646E65;
      break;
    case 4:
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 6:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_99778(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_19F878);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_9BB60();
  sub_146D10();
  LOBYTE(v13) = 0;
  sub_146A90();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_146AB0();
    uint64_t v9 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    LOBYTE(v13) = 2;
    sub_145230();
    sub_9BAF0(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v13) = 3;
    sub_146AD0();
    LOBYTE(v13) = 4;
    sub_146AB0();
    LOBYTE(v13) = 5;
    sub_146AB0();
    LOBYTE(v13) = 6;
    sub_146A90();
    LOBYTE(v13) = 7;
    sub_146A90();
    LOBYTE(v13) = 8;
    sub_146AC0();
    LOBYTE(v13) = 9;
    sub_146AB0();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 56));
    char v12 = 10;
    sub_A314(&qword_19F868);
    sub_9BC74(&qword_19F880, &qword_19D0B8);
    sub_146AD0();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 60));
    char v12 = 11;
    sub_146AD0();
    LOBYTE(v13) = 12;
    sub_146AB0();
    LOBYTE(v13) = 13;
    sub_146AB0();
    LOBYTE(v13) = 14;
    sub_146A90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_99C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_A314(&qword_19C150);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v52 - v9;
  uint64_t v54 = sub_A314(&qword_19F858);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v57 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  __chkstk_darwin(v57);
  MKMapRect v55 = a1;
  MKMapRect v56 = (void *)((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2F114(a1, a1[3]);
  sub_9BB60();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v55);
  }
  uint64_t v53 = a2;
  uint64_t v15 = v11;
  LOBYTE(v59) = 0;
  uint64_t v16 = sub_1469E0();
  unint64_t v17 = v56;
  *MKMapRect v56 = v16;
  v17[1] = v18;
  LOBYTE(v59) = 1;
  uint64_t v19 = sub_146A00();
  unint64_t v20 = v57;
  void v17[2] = v19;
  *((unsigned char *)v17 + 24) = v21 & 1;
  sub_145230();
  LOBYTE(v59) = 2;
  v52[1] = sub_9BAF0(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384((uint64_t)v10, (uint64_t)v17 + v20[6]);
  LOBYTE(v59) = 3;
  sub_146A20();
  sub_12384((uint64_t)v8, (uint64_t)v17 + v20[7]);
  LOBYTE(v59) = 4;
  uint64_t v22 = sub_146A00();
  uint64_t v23 = (char *)v17 + v20[8];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v59) = 5;
  uint64_t v25 = sub_146A00();
  uint64_t v26 = (char *)v17 + v20[9];
  *(void *)uint64_t v26 = v25;
  v26[8] = v27 & 1;
  LOBYTE(v59) = 6;
  uint64_t v28 = sub_1469E0();
  uint64_t v29 = (uint64_t *)((char *)v17 + v20[10]);
  *uint64_t v29 = v28;
  v29[1] = v30;
  LOBYTE(v59) = 7;
  uint64_t v31 = sub_1469E0();
  char v32 = (uint64_t *)((char *)v17 + v20[11]);
  uint64_t *v32 = v31;
  v32[1] = v33;
  LOBYTE(v59) = 8;
  uint64_t v34 = sub_146A10();
  char v35 = (char *)v17 + v20[12];
  *(void *)char v35 = v34;
  v35[8] = v36 & 1;
  LOBYTE(v59) = 9;
  uint64_t v37 = sub_146A00();
  uint64_t v38 = (char *)v56 + v57[13];
  *(void *)uint64_t v38 = v37;
  v38[8] = v39 & 1;
  sub_A314(&qword_19F868);
  char v58 = 10;
  sub_9BC74(&qword_19F870, &qword_19D0A0);
  sub_146A20();
  *(uint64_t *)((char *)v56 + v57[14]) = v59;
  char v58 = 11;
  sub_146A20();
  *(uint64_t *)((char *)v56 + v57[15]) = v59;
  LOBYTE(v59) = 12;
  uint64_t v40 = sub_146A00();
  double v41 = (char *)v56 + v57[16];
  *(void *)double v41 = v40;
  v41[8] = v42 & 1;
  LOBYTE(v59) = 13;
  uint64_t v43 = sub_146A00();
  id v44 = (char *)v56 + v57[17];
  *(void *)id v44 = v43;
  v44[8] = v45 & 1;
  LOBYTE(v59) = 14;
  uint64_t v46 = sub_1469E0();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v54);
  uint64_t v49 = (uint64_t)v56;
  uint64_t v50 = (uint64_t *)((char *)v56 + v57[18]);
  *uint64_t v50 = v46;
  v50[1] = v48;
  sub_9BBB4(v49, v53);
  sub_C7FC((uint64_t)v55);
  return sub_9BC18(v49);
}

unint64_t sub_9A454()
{
  return sub_995B4(*v0);
}

uint64_t sub_9A45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_9BFA4(a1, a2);
  *a3 = result;
  return result;
}

void sub_9A484(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_9A490(uint64_t a1)
{
  unint64_t v2 = sub_9BB60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9A4CC(uint64_t a1)
{
  unint64_t v2 = sub_9BB60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_9A508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_99C30(a1, a2);
}

uint64_t sub_9A520(void *a1)
{
  return sub_99778(a1);
}

uint64_t sub_9A538()
{
  return swift_release();
}

id sub_9A548()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16WorkoutIconAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_9A590()
{
  return _s16WorkoutIconAssetCMa(0);
}

uint64_t _s16WorkoutIconAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19F740);
}

uint64_t sub_9A5B8()
{
  return swift_updateClassMetadata2();
}

void *sub_9A5FC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    unint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = (void *)((char *)v4 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    char v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[12];
    uint64_t v35 = a3[13];
    char v36 = (char *)v4 + v34;
    uint64_t v37 = (uint64_t)a2 + v34;
    *(void *)char v36 = *(void *)v37;
    v36[8] = *(unsigned char *)(v37 + 8);
    uint64_t v38 = (char *)v4 + v35;
    uint64_t v39 = (uint64_t)a2 + v35;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = *(unsigned char *)(v39 + 8);
    uint64_t v40 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v40) = *(uint64_t *)((char *)a2 + v40);
    uint64_t v41 = a3[16];
    uint64_t v42 = a3[17];
    uint64_t v43 = (char *)v4 + v41;
    uint64_t v44 = (uint64_t)a2 + v41;
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = *(unsigned char *)(v44 + 8);
    char v45 = (char *)v4 + v42;
    uint64_t v46 = (uint64_t)a2 + v42;
    *(void *)char v45 = *(void *)v46;
    v45[8] = *(unsigned char *)(v46 + 8);
    uint64_t v47 = a3[18];
    uint64_t v48 = (void *)((char *)v4 + v47);
    uint64_t v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_9A938(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_9AA8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v39 = a3[16];
  uint64_t v40 = a3[17];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a3[18];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_9AD78(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = a3[17];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  LOBYTE(v47) = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v47;
  uint64_t v51 = a3[18];
  long long v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  void *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_9B188(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = (uint64_t *)(a2 + v25);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[16];
  uint64_t v33 = a3[17];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_9B430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  uint64_t v42 = a1 + v39;
  uint64_t v43 = a2 + v39;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a3[17];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  uint64_t v48 = a1 + v45;
  uint64_t v49 = a2 + v45;
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  long long v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_9B7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9B7F8);
}

uint64_t sub_9B7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_9B8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9B8CC);
}

uint64_t sub_9B8CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19F7A8);
}

void sub_9B998()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_9BA60()
{
  return sub_9BAF0(&qword_19C7D0, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_9BAA8()
{
  return sub_9BAF0(&qword_19F818, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_9BAF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_9BB38()
{
  return swift_retain();
}

uint64_t sub_9BB48(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16WorkoutIconAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_9BB60()
{
  unint64_t result = qword_19F860;
  if (!qword_19F860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F860);
  }
  return result;
}

uint64_t sub_9BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9BC18(uint64_t a1)
{
  uint64_t v2 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9BC74(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19F868);
    sub_9BAF0(a2, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9BE64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOMa()
{
  return &_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysON;
}

unint64_t sub_9BEA0()
{
  unint64_t result = qword_19F888;
  if (!qword_19F888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F888);
  }
  return result;
}

unint64_t sub_9BEF8()
{
  unint64_t result = qword_19F890;
  if (!qword_19F890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F890);
  }
  return result;
}

unint64_t sub_9BF50()
{
  unint64_t result = qword_19F898;
  if (!qword_19F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19F898);
  }
  return result;
}

uint64_t sub_9BFA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000014B8E0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000000014E480 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000000014E4A0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000000014E4C0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000014E4E0 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000000014E500 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000000014E520 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000000014E540)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t static Logger.byoLoggerWith(subsystem:category:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_145750();
}

uint64_t sub_9C5E0(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D10);
}

uint64_t sub_9C604(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D28);
}

uint64_t sub_9C630(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D40);
}

uint64_t sub_9C64C(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D58);
}

uint64_t sub_9C678(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D70);
}

uint64_t sub_9C6A4(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3D88);
}

uint64_t sub_9C6C8(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3DA0);
}

uint64_t sub_9C6E4(uint64_t a1)
{
  return sub_9C6FC(a1, qword_1A3DB8);
}

uint64_t sub_9C6FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_145760();
  sub_C61C(v3, a2);
  sub_C584(v3, (uint64_t)a2);
  return sub_145750();
}

uint64_t static Logger.appLoggerWith(category:)()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    sub_145BC0();
  }
  swift_bridgeObjectRetain();

  return sub_145750();
}

id sub_9C83C()
{
  if (qword_19ACC8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1A3A30;
  qword_1A3DD0 = qword_1A3A30;

  return v0;
}

char *sub_9C8A0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15JournalSettings23CanvasFallbackAssetView_symbolImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v33.receiver = v11;
  v33.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  id v12 = objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  [v12 setContentMode:2];
  uint64_t v13 = qword_19AF80;
  int v14 = (char *)v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setBackgroundColor:qword_1A3DD0];

  uint64_t v15 = OBJC_IVAR____TtC15JournalSettings23CanvasFallbackAssetView_symbolImageView;
  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC15JournalSettings23CanvasFallbackAssetView_symbolImageView];
  [v16 setContentMode:2];
  [v16 setTintColor:qword_1A3DD0];
  [v14 addSubview:v16];
  id v17 = v16;
  id v18 = [v17 superview];
  int v19 = &selRef_streakReminderMinute;
  if (v18)
  {
    int v20 = v18;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v17 centerYAnchor];
    id v22 = [v20 centerYAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      id v17 = v23;
    }

    int v19 = &selRef_streakReminderMinute;
  }
  else
  {
    id v23 = 0;
    int v20 = v17;
  }

  id v24 = *(id *)&v14[v15];
  id v25 = [v24 superview];
  if (v25)
  {
    uint64_t v26 = v25;
    objc_msgSend(v24, v19[81], 0);
    id v27 = [v24 centerXAnchor];
    id v28 = [v26 centerXAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v30 = v29;
      [v30 setActive:1];

      id v24 = v14;
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v31 = 0;
      id v30 = v14;
    }

    id v24 = v30;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v26 = v14;
  }

  return v14;
}

uint64_t sub_9CCBC()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

id sub_9CCFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CanvasFallbackAssetView()
{
  return self;
}

uint64_t type metadata accessor for CanvasFallbackAssetView.SymbolImageCache()
{
  return self;
}

id sub_9CD88()
{
  id v1 = v0;
  uint64_t v2 = sub_A314(&qword_19BFB0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for TitleValueTableViewController();
  v19.receiver = v0;
  v19.super_class = v5;
  objc_msgSendSuper2(&v19, "viewDidLoad");
  id v6 = [v0 navigationItem];
  sub_A314(&qword_19C130);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_159A20;
  sub_C84C(0, &qword_19F9E0);
  sub_C84C(0, &qword_19D978);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v20.is_nil = sub_1464D0();
  v23.value._countAndFlagsBits = 0x65736F6C43;
  v23.value._object = (void *)0xE500000000000000;
  v20.value.super.Class isa = 0;
  v21.value.super.super.Class isa = 0;
  *(UIBarButtonItem *)(v7 + 32) = sub_146220(v23, v20, v21, v22);
  v18[1] = v7;
  sub_145E00();
  Class isa = sub_145DD0().super.isa;
  swift_bridgeObjectRelease();
  [v6 setLeftBarButtonItems:isa];

  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v10 = result;
  id v11 = [objc_allocWithZone((Class)UIRefreshControl) init];
  [v10 setRefreshControl:v11];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v12 = result;
  id v13 = [result refreshControl];

  if (v13)
  {
    [v13 addTarget:v1 action:"refreshData" forControlEvents:4096];
  }
  uint64_t v14 = sub_145F50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_145F30();
  id v15 = v1;
  uint64_t v16 = sub_145F20();
  id v17 = (void *)swift_allocObject();
  void v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v15;
  sub_76884((uint64_t)v4, (uint64_t)&unk_19F9E8, (uint64_t)v17);
  return (id)swift_release();
}

void sub_9D0DC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_9D188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a4;
  v4[3] = sub_145F30();
  v4[4] = sub_145F20();
  v4[5] = sub_145F20();
  uint64_t v6 = sub_145EB0();
  return _swift_task_switch(sub_9D230, v6, v5);
}

uint64_t sub_9D230()
{
  swift_release();
  uint64_t v1 = sub_145EB0();
  return _swift_task_switch(sub_9D2B4, v1, v0);
}

id sub_9D2B4()
{
  uint64_t v1 = *(char **)(v0 + 16);
  swift_release();
  *(void *)&v1[OBJC_IVAR____TtC15JournalSettings29TitleValueTableViewController_data] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id result = [v1 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = result;
  unsigned int v4 = *(void **)(v0 + 16);
  [result reloadData];

  id result = [v4 tableView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  uint64_t v6 = *(void **)(v0 + 16);
  [result reloadData];

  id result = [v6 tableView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  id v8 = [result refreshControl];

  [v8 endRefreshing];
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v9();
}

id sub_9D9B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleValueTableViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TitleValueTableViewController()
{
  return self;
}

uint64_t sub_9DA18(uint64_t a1)
{
  uint64_t result = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings29TitleValueTableViewController_data);
    if (*(void *)(v4 + 16) > a1) {
      return *(void *)(*(void *)(v4 + 24 * a1 + 48) + 16);
    }
  }
  return result;
}

uint64_t sub_9DA50(uint64_t a1)
{
  uint64_t v2 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15JournalSettings29TitleValueTableViewController_data);
    if (*(void *)(v3 + 16) > a1)
    {
      uint64_t v2 = *(void *)(v3 + 24 * a1 + 32);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

void sub_9DAB4(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v14 = a1;
    id v4 = [v3 textLabel];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [self blackColor];
      [v5 setTextColor:v6];
    }
    id v7 = [v3 textLabel];
    if (v7)
    {
      id v8 = v7;
      id v9 = [self boldSystemFontOfSize:22.0];
      [v8 setFont:v9];
    }
    id v10 = [v3 textLabel];
    if (v10)
    {
      id v11 = v10;
      [v3 bounds];
      objc_msgSend(v11, "setFrame:");
    }
    id v12 = [v3 textLabel];
    if (v12)
    {
      id v13 = v12;
      [v12 setTextAlignment:1];
    }
  }
}

id sub_9DC64()
{
  id v1 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings29TitleValueTableViewController_data);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1454D0();
  if (v3 < 0) {
    goto LABEL_19;
  }
  if (v3 >= *(void *)(v2 + 16)) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)(v2 + 24 * v3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1454C0();
  if (v5 < 0 || v5 >= *(void *)(v4 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v6 = [v1 textLabel];
  if (v6)
  {
    id v7 = v6;
    id v8 = [self boldSystemFontOfSize:18.0];
    [v7 setFont:v8];
  }
  id v9 = [v1 textLabel];
  if (v9)
  {
    id v10 = v9;
    [v9 setNumberOfLines:0];
  }
  id v11 = [v1 textLabel];
  if (v11)
  {
    id v12 = v11;
    swift_bridgeObjectRetain();
    NSString v13 = sub_145B80();
    swift_bridgeObjectRelease();
    [v12 setText:v13];
  }
  id v14 = [v1 detailTextLabel];
  if (v14)
  {
    id v15 = v14;
    id v16 = [self systemFontOfSize:14.0];
    [v15 setFont:v16];
  }
  id v17 = [v1 detailTextLabel];
  if (v17)
  {
    id v18 = v17;
    [v17 setNumberOfLines:0];
  }
  id v19 = [v1 detailTextLabel];
  if (!v19)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    return v1;
  }
  UIImage_optional v20 = v19;
  swift_bridgeObjectRelease();
  NSString v21 = sub_145B80();
  swift_bridgeObjectRelease();
  [v20 setText:v21];

  return v1;
}

uint64_t sub_9DF3C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15JournalSettings29TitleValueTableViewController_data);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1454D0();
  if ((v2 & 0x8000000000000000) == 0 && v2 < *(void *)(v1 + 16))
  {
    uint64_t v3 = *(void *)(v1 + 24 * v2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1454C0();
    if ((v4 & 0x8000000000000000) == 0 && v4 < *(void *)(v3 + 16))
    {
      uint64_t v5 = v3 + 32 * v4;
      uint64_t v6 = *(void *)(v5 + 48);
      uint64_t v7 = *(void *)(v5 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v8 = [self generalPasteboard];
      NSString v9 = sub_145B80();
      [v8 setString:v9];
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_9E094(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_216D4;
  return sub_9D188(a1, v4, v5, v6);
}

uint64_t sub_9E148()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_9E180()
{
}

uint64_t sub_9E18C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_9E1CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_21598;
  return sub_9D188(a1, v4, v5, v6);
}

uint64_t sub_9E280(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v7 = sub_A314(&qword_19FA78);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_9EBEC();
  sub_146D10();
  LOBYTE(v14) = 0;
  sub_146AC0();
  if (!v5)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    char v16 = 1;
    sub_40D74();
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_9E410()
{
  if (*v0) {
    return 0x74706D6F7270;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_9E440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_9E948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_9E468(uint64_t a1)
{
  unint64_t v2 = sub_9EBEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9E4A4(uint64_t a1)
{
  unint64_t v2 = sub_9EBEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_9E4E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_9EA24(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_9E518(void *a1)
{
  return sub_9E280(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_9E544()
{
  return swift_release();
}

id sub_9E554()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15ReflectionAssetCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_9E59C()
{
  return _s15ReflectionAssetCMa();
}

uint64_t _s15ReflectionAssetCMa()
{
  uint64_t result = qword_19FA18;
  if (!qword_19FA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_9E5F0()
{
  return swift_updateClassMetadata2();
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwxx(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 24);
  if (v1 >> 60 != 15) {
    return sub_C52C(*(void *)(result + 16), v1);
  }
  return result;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (uint64_t *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_C4D4(*v3, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_C4D4(*v5, a2[3]);
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v6;
      sub_C52C(v9, v10);
      return a1;
    }
    sub_40058(a1 + 16);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *unint64_t v4 = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_C4D4(*v5, a2[3]);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_C52C(v8, v6);
      return a1;
    }
    sub_40058(a1 + 16);
  }
  *unint64_t v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 24) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataVMa()
{
  return &_s15ReflectionAssetC14ReflectionDataVN;
}

unint64_t sub_9E8CC()
{
  unint64_t result = qword_19FA28;
  if (!qword_19FA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FA28);
  }
  return result;
}

uint64_t sub_9E920()
{
  return swift_retain();
}

uint64_t sub_9E930(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling15ReflectionAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_9E948(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_9EA24(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19FA68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_2F114(a1, v7);
  sub_9EBEC();
  sub_146D00();
  if (!v1)
  {
    unsigned char v9[16] = 0;
    uint64_t v7 = sub_146A10();
    v9[15] = 1;
    sub_40CBC();
    sub_146A20();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_C7FC((uint64_t)a1);
  return v7;
}

unint64_t sub_9EBEC()
{
  unint64_t result = qword_19FA70;
  if (!qword_19FA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FA70);
  }
  return result;
}

unsigned char *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9ED0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOMa()
{
  return &_s15ReflectionAssetC14ReflectionDataV10CodingKeysON;
}

unint64_t sub_9ED48()
{
  unint64_t result = qword_19FA80;
  if (!qword_19FA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FA80);
  }
  return result;
}

unint64_t sub_9EDA0()
{
  unint64_t result = qword_19FA88;
  if (!qword_19FA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FA88);
  }
  return result;
}

unint64_t sub_9EDF8()
{
  unint64_t result = qword_19FA90;
  if (!qword_19FA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FA90);
  }
  return result;
}

void sub_9EE8C()
{
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for AlertProgressContentViewController();
  objc_msgSendSuper2(&v27, "viewDidLoad");
  id v1 = [objc_allocWithZone((Class)UIProgressView) init];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setObservedProgress:*(void *)&v0[OBJC_IVAR____TtC15JournalSettingsP33_D4BC7CE3092874972FE10FC5EDA6053234AlertProgressContentViewController_progress]];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v3 = v2;
  [v2 addSubview:v1];

  sub_A314(&qword_19C130);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_15BFF0;
  id v5 = [v1 topAnchor];
  id v6 = [v0 view];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  id v8 = [v6 topAnchor];

  id v9 = [v5 constraintEqualToAnchor:v8];
  *(void *)(v4 + 32) = v9;
  id v10 = [v1 leadingAnchor];
  id v11 = [v0 view];
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  id v13 = [v11 leadingAnchor];

  id v14 = [v10 constraintEqualToAnchor:v13 constant:16.0];
  *(void *)(v4 + 40) = v14;
  id v15 = [v1 bottomAnchor];
  id v16 = [v0 view];
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v17 = v16;
  id v18 = [v16 bottomAnchor];

  id v19 = [v15 constraintLessThanOrEqualToAnchor:v18];
  *(void *)(v4 + 48) = v19;
  id v20 = [v1 trailingAnchor];
  id v21 = [v0 view];
  if (v21)
  {
    UIMenu_optional v22 = v21;
    Swift::String_optional v23 = self;
    id v24 = [v22 trailingAnchor];

    id v25 = [v20 constraintEqualToAnchor:v24 constant:-16.0];
    *(void *)(v4 + 56) = v25;
    sub_145E00();
    sub_9F2D8();
    Class isa = sub_145DD0().super.isa;
    swift_bridgeObjectRelease();
    [v23 activateConstraints:isa];

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_9F26C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertProgressContentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AlertProgressContentViewController()
{
  return self;
}

unint64_t sub_9F2D8()
{
  unint64_t result = qword_19D0E8;
  if (!qword_19D0E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_19D0E8);
  }
  return result;
}

double *sub_9F318(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2CB80(0, v1, 0);
    uint64_t v3 = type metadata accessor for TranscriptViewModelSegment();
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    do
    {
      id v6 = (uint64_t *)(v4 + *(int *)(v3 + 20));
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      double v9 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (*(void *)&v9 >= *(void *)&v10 >> 1) {
        sub_2CB80(*(void *)&v10 > 1uLL, *(void *)&v9 + 1, 1);
      }
      v4 += v5;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v9 + 1;
      id v11 = &_swiftEmptyArrayStorage[2 * *(void *)&v9];
      *((void *)v11 + 4) = v8;
      *((void *)v11 + 5) = v7;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_9F45C()
{
  uint64_t v0 = sub_A314(&qword_19C4D8);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2AD94((uint64_t)v2);
  uint64_t v3 = _s10AudioAssetC9AudioDataVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_1248C((uint64_t)v2, &qword_19C4D8);
    return 0;
  }
  else
  {
    uint64_t v4 = *(void *)&v2[*(int *)(v3 + 28)];
    swift_bridgeObjectRetain();
    sub_A0D74((uint64_t)v2);
    if (v4)
    {
      uint64_t v5 = sub_9F318(v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = *((void *)v5 + 2);
      if (v6)
      {
        swift_bridgeObjectRetain();
        uint64_t v4 = 0;
        uint64_t v7 = (void **)(v5 + 5);
        unint64_t v8 = 0xE000000000000000;
        do
        {
          uint64_t v9 = (uint64_t)*(v7 - 1);
          double v10 = *v7;
          uint64_t v12 = v4;
          unint64_t v13 = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14._countAndFlagsBits = v9;
          v14._object = v10;
          sub_145C90(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v12;
          unint64_t v8 = v13;
          v7 += 2;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return v4;
}

uint64_t sub_9F618(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_19FC18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_A0DD0();
  sub_146D10();
  LOBYTE(v12) = 0;
  sub_146AB0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 16);
    HIBYTE(v11) = 1;
    sub_A314(&qword_19FBE8);
    sub_A0EDC(&qword_19FC20, (void (*)(void))sub_A0F4C);
    sub_146AD0();
    uint64_t v9 = _s10AudioAssetC9AudioDataVMa(0);
    LOBYTE(v12) = 2;
    sub_145230();
    sub_A0D2C(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    sub_A314(&qword_19FC00);
    sub_A0FA0(&qword_19FC30, &qword_19FC38);
    sub_146AD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_9F8DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_A314(&qword_19FBD8);
  uint64_t v7 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s10AudioAssetC9AudioDataVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  id v20 = a1;
  sub_2F114(a1, v13);
  sub_A0DD0();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v20);
  }
  uint64_t v14 = v7;
  LOBYTE(v22) = 0;
  uint64_t v15 = v19;
  *(void *)uint64_t v12 = sub_146A00();
  v12[8] = v16 & 1;
  sub_A314(&qword_19FBE8);
  char v21 = 1;
  sub_A0EDC(&qword_19FBF0, (void (*)(void))sub_A0E24);
  sub_146A20();
  *((void *)v12 + 2) = v22;
  sub_145230();
  LOBYTE(v22) = 2;
  sub_A0D2C(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 24)]);
  sub_A314(&qword_19FC00);
  char v21 = 3;
  sub_A0FA0(&qword_19FC08, &qword_19FC10);
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  *(void *)&v12[*(int *)(v10 + 28)] = v22;
  sub_A0E78((uint64_t)v12, v18);
  sub_C7FC((uint64_t)v20);
  return sub_A0D74((uint64_t)v12);
}

unint64_t sub_9FD10()
{
  unint64_t result = 0x6E6F697461727564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469736E65746E69;
      break;
    case 2:
      unint64_t result = 0x6E6964726F636572;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_9FDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A12D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_9FDE0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_9FDEC(uint64_t a1)
{
  unint64_t v2 = sub_A0DD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9FE28(uint64_t a1)
{
  unint64_t v2 = sub_A0DD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_9FE64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9F8DC(a1, a2);
}

uint64_t sub_9FE7C(void *a1)
{
  return sub_9F618(a1);
}

uint64_t sub_9FE94()
{
  uint64_t v1 = sub_A314(&qword_19C4D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (double *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  swift_retain();
  sub_307D4((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:
    sub_1248C((uint64_t)v3, &qword_19C4D8);
    return 0;
  }
  sub_853A4((uint64_t)v3, (uint64_t)v7);
  if ((_BYTE)v7[1]) {
    goto LABEL_10;
  }
  double v8 = *v7;
  if (qword_19AF90 != -1)
  {
    double v14 = *v7;
    swift_once();
    double v8 = v14;
  }
  id v9 = [(id)qword_19FC60 stringFromTimeInterval:v8 + 0.5];
  if (!v9)
  {
LABEL_10:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_145BC0();
  }
  sub_A0D74((uint64_t)v7);
  return v11;
}

uint64_t sub_A00B8()
{
  return swift_release();
}

id sub_A00C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10AudioAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_A0110()
{
  return _s10AudioAssetCMa(0);
}

uint64_t _s10AudioAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19FAF0);
}

uint64_t sub_A0138()
{
  return swift_updateClassMetadata2();
}

void *sub_A017C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = *(int *)(a3 + 24);
    double v8 = (void *)(a1 + v7);
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_145230();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_A0320(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_A03F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_A0544(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  double v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_A0708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_A0848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_A09FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A0A10);
}

uint64_t sub_A0A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_A314(&qword_19C150);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_A0AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A0AE4);
}

uint64_t sub_A0AE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = sub_A314(&qword_19C150);
    double v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10AudioAssetC9AudioDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19FB58);
}

void sub_A0BB0()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_A0C50()
{
  return swift_retain();
}

uint64_t sub_A0C60(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling10AudioAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_A0C78()
{
  return sub_9FE94();
}

uint64_t sub_A0C9C()
{
  return sub_A0D2C(&qword_19C790, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_A0CE4()
{
  return sub_A0D2C(&qword_19FB98, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_A0D2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_A0D74(uint64_t a1)
{
  uint64_t v2 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_A0DD0()
{
  unint64_t result = qword_19FBE0;
  if (!qword_19FBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FBE0);
  }
  return result;
}

unint64_t sub_A0E24()
{
  unint64_t result = qword_19FBF8;
  if (!qword_19FBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FBF8);
  }
  return result;
}

uint64_t sub_A0E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A0EDC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19FBE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_A0F4C()
{
  unint64_t result = qword_19FC28;
  if (!qword_19FC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC28);
  }
  return result;
}

uint64_t sub_A0FA0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_19FC00);
    sub_A0D2C(a2, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ExportOptions.ExportFormat(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10AudioAssetC9AudioDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA1190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AudioAssetC9AudioDataV10CodingKeysOMa()
{
  return &_s10AudioAssetC9AudioDataV10CodingKeysON;
}

unint64_t sub_A11CC()
{
  unint64_t result = qword_19FC40;
  if (!qword_19FC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC40);
  }
  return result;
}

unint64_t sub_A1224()
{
  unint64_t result = qword_19FC48;
  if (!qword_19FC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC48);
  }
  return result;
}

unint64_t sub_A127C()
{
  unint64_t result = qword_19FC50;
  if (!qword_19FC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC50);
  }
  return result;
}

uint64_t sub_A12D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736E65746E69 && a2 == 0xEB00000000736569 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6964726F636572 && a2 == 0xED00006574614467 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000000014E8A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id sub_A14C4()
{
  id v0 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v0 setZeroFormattingBehavior:0x10000];
  [v0 setAllowedUnits:192];
  id result = [v0 setUnitsStyle:0];
  qword_19FC58 = (uint64_t)v0;
  return result;
}

id sub_A153C(uint64_t a1)
{
  return sub_A154C(a1, 224, &qword_19FC60);
}

id sub_A154C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v5 setAllowedUnits:a2];
  [v5 setZeroFormattingBehavior:10];
  id result = [v5 setUnitsStyle:3];
  *a3 = v5;
  return result;
}

id sub_A15D0(uint64_t a1)
{
  return sub_A154C(a1, 112, &qword_19FC68);
}

uint64_t static FormatStyle<>.mediaTimeShort(for:)(double a1)
{
  uint64_t v2 = sub_146D40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3600.0) {
    sub_146D30();
  }
  else {
    sub_146D20();
  }
  sub_1449C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_A16D8(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C7B8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = &v27.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v27.i8[-v6];
  uint64_t v8 = OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata;
  if (!*(void *)(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_327DC((uint64_t)v7);
  swift_release();
  uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v10 = *(unsigned int (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v7, 1, v9))
  {
    uint64_t v11 = &v7[*(int *)(v9 + 44)];
    unint64_t v12 = *((void *)v11 + 1);
    double v29 = *(double *)v11;
    uint64_t v13 = *((void *)v11 + 2);
    char v14 = v11[32];
    sub_A28D4((uint64_t)v7);
    if (v14) {
      return 0;
    }
    *(void *)&long long v15 = v13;
    long long v28 = v15;
    int64x2_t v27 = vdupq_n_s64(v12);
    id v17 = objc_allocWithZone((Class)UIColor);
    id v18 = [v17 initWithRed:v29 green:*(double *)&v27.i64[1] blue:*(double *)&v28 alpha:1.0];
    uint64_t v19 = v18;
    if (*(void *)(a1 + v8))
    {
      id v20 = v18;
      swift_retain();
      sub_327DC((uint64_t)v5);
      swift_release();
      if (v10(v5, 1, v9))
      {
        sub_A28D4((uint64_t)v5);
      }
      else
      {
        int v22 = v5[*(int *)(v9 + 48)];
        sub_A28D4((uint64_t)v5);
        if ((v22 - 2) >= 2)
        {
          if (v22)
          {
            id v23 = [self systemBlackColor];
            id v24 = [v23 colorWithAlphaComponent:0.6];
          }
          else
          {
            id v23 = [self systemWhiteColor];
            id v24 = [v23 colorWithAlphaComponent:0.78];
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
      id v21 = v18;
    }
    id v23 = [self systemWhiteColor];
    id v24 = [v23 colorWithAlphaComponent:0.13];
LABEL_13:
    id v25 = v24;

    id v26 = sub_57E74(v25);
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_1467D0(20);
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD000000000000011;
    unint64_t v31 = 0x800000000014E8E0;
    v32._countAndFlagsBits = sub_57C84();
    sub_145C90(v32);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 59;
    v33._object = (void *)0xE100000000000000;
    sub_145C90(v33);

    return v30;
  }
  sub_A28D4((uint64_t)v7);
  return 0;
}

id sub_A1A14(char a1)
{
  id v2 = [self traitCollectionWithUserInterfaceStyle:qword_15D3C0[a1]];
  id v3 = [v1 resolvedColorWithTraitCollection:v2];

  return v3;
}

uint64_t sub_A1A90(uint64_t a1, SEL *a2)
{
  uint64_t v4 = sub_A314(&qword_19C7B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = 0x3A726F6C6F63;
  v15[1] = 0xE600000000000000;
  id v7 = [self *a2];
  if (*(void *)(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata))
  {
    swift_retain();
    sub_327DC((uint64_t)v6);
    swift_release();
    uint64_t v8 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8)) {
      char v9 = 3;
    }
    else {
      char v9 = v6[*(int *)(v8 + 48)];
    }
    sub_A28D4((uint64_t)v6);
  }
  else
  {
    char v9 = 3;
  }
  id v10 = sub_A1A14(v9);

  uint64_t v11 = sub_57C84();
  uint64_t v13 = v12;

  v16._countAndFlagsBits = v11;
  v16._object = v13;
  sub_145C90(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 59;
  v17._object = (void *)0xE100000000000000;
  sub_145C90(v17);
  return v15[0];
}

unint64_t sub_A1C1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v59 = a2;
  uint64_t v60 = a4;
  uint64_t v8 = sub_A314(&qword_19C7B8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  char v14 = (char *)&v56 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  Swift::String v17 = (char *)&v56 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = (char *)&v56 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v56 - v22;
  __chkstk_darwin(v21);
  id v25 = (char *)&v56 - v24;
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata);
  char v58 = a3;
  if (v26)
  {
    swift_retain();
    sub_327DC((uint64_t)v25);
    swift_release();
  }
  else
  {
    uint64_t v27 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
  }
  sub_A286C((uint64_t)v25, (uint64_t)v23);
  uint64_t v28 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  double v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  int v30 = v29(v23, 1, v28);
  double v61 = a5;
  if (v30 == 1)
  {
    sub_A28D4((uint64_t)v23);
    sub_A286C((uint64_t)v25, (uint64_t)v20);
    goto LABEL_8;
  }
  unint64_t v31 = *((void *)v23 + 2);
  uint64_t v57 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  sub_A2B4C((uint64_t)v23);
  sub_A286C((uint64_t)v25, (uint64_t)v20);
  if (!v31)
  {
LABEL_8:
    sub_A2934((uint64_t)v20, (uint64_t)v17);
    if (v29(v17, 1, v28) == 1)
    {
      sub_A28D4((uint64_t)v17);
      uint64_t v32 = 0;
      unint64_t v31 = 0;
    }
    else
    {
      uint64_t v33 = *((void *)v17 + 3);
      unint64_t v31 = *((void *)v17 + 4);
      swift_bridgeObjectRetain();
      uint64_t v34 = (uint64_t)v17;
      uint64_t v32 = v33;
      sub_A2B4C(v34);
    }
    goto LABEL_11;
  }
  sub_A28D4((uint64_t)v20);
  uint64_t v32 = v57;
LABEL_11:
  sub_A286C((uint64_t)v25, (uint64_t)v14);
  if (v29(v14, 1, v28) == 1)
  {
    sub_A28D4((uint64_t)v14);
    uint64_t v35 = 0;
    unint64_t v36 = 0;
  }
  else
  {
    uint64_t v35 = *((void *)v14 + 5);
    unint64_t v36 = *((void *)v14 + 6);
    swift_bridgeObjectRetain();
    sub_A2B4C((uint64_t)v14);
  }
  sub_A286C((uint64_t)v25, (uint64_t)v11);
  if (v29(v11, 1, v28) == 1)
  {
    sub_A28D4((uint64_t)v11);
    char v37 = 5;
  }
  else
  {
    char v37 = *v11;
    sub_A2B4C((uint64_t)v11);
  }
  uint64_t v38 = v58;
  uint64_t v39 = sub_BFDBC(v37);
  unint64_t v41 = v40;
  uint64_t v42 = v59;
  unint64_t v43 = sub_2E1AC(v32, v31, 0x746954616964656DLL, (void *)0xEA0000000000656CLL, v59, v38);
  unint64_t v45 = v44;
  swift_bridgeObjectRelease();
  unint64_t v46 = sub_2E1AC(v35, v36, 0x747241616964656DLL, (void *)0xEB00000000747369, v42, v38);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  uint64_t v62 = v43;
  unint64_t v63 = v45;
  swift_bridgeObjectRetain();
  v64._countAndFlagsBits = v46;
  v64._object = v48;
  sub_145C90(v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = v62;
  unint64_t v49 = v63;
  unint64_t v51 = sub_2E1AC(v39, v41, 0x746143616964656DLL, (void *)0xED000079726F6765, v60, v61);
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  uint64_t v62 = v50;
  unint64_t v63 = v49;
  swift_bridgeObjectRetain();
  v65._countAndFlagsBits = v51;
  v65._object = v53;
  sub_145C90(v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v54 = sub_2E1AC(v62, v63, 0xD000000000000016, (void *)0x800000000014E8C0, 0, 0);
  swift_bridgeObjectRelease();
  sub_A28D4((uint64_t)v25);
  return v54;
}

uint64_t sub_A20E4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_A2104, 0, 0);
}

uint64_t sub_A2104()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = sub_A16D8(v1);
  uint64_t v4 = v3;
  v0[4] = v3;
  uint64_t v5 = sub_A1A90(v1, (SEL *)&selRef_secondaryLabelColor);
  id v7 = v6;
  uint64_t v8 = sub_A1A90(v1, (SEL *)&selRef_tertiaryLabelColor);
  unint64_t v10 = sub_A1C1C(v1, v5, v7, v8, v9);
  uint64_t v12 = v11;
  v0[5] = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[6] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_A224C;
  uint64_t v14 = v0[2];
  return sub_543BC(v14, v2, v4, 0, 0, v10, v12, 0);
}

uint64_t sub_A224C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_A23B0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_A23B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_A241C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_A314(&qword_19C7B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling20ThirdPartyMediaAsset_metadata))
  {
    swift_retain();
    sub_327DC((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_A2BA8((uint64_t)v5, (uint64_t)v9);
      uint64_t v11 = v9[1];
      uint64_t v10 = v9[2];
      uint64_t v13 = v9[3];
      uint64_t v12 = v9[4];
      uint64_t v15 = v9[5];
      uint64_t v14 = v9[6];
      uint64_t v16 = (void *)((char *)v9 + *(int *)(v6 + 36));
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      *(void *)(a1 + 24) = &_s6ResultVN_0;
      *(void *)(a1 + 32) = sub_A2C0C();
      *(void *)(a1 + 40) = sub_A2C60();
      uint64_t v19 = (void *)swift_allocObject();
      *(void *)a1 = v19;
      void v19[2] = v11;
      v19[3] = v10;
      v19[4] = v13;
      v19[5] = v12;
      v19[6] = v15;
      v19[7] = v14;
      v19[8] = v18;
      v19[9] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_A2B4C((uint64_t)v9);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_A28D4((uint64_t)v5);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_A2638(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19FCA0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_A34A0();
  sub_146D10();
  v8[15] = 0;
  sub_146A90();
  if (!v1)
  {
    v8[14] = 1;
    sub_146A90();
    v8[13] = 2;
    sub_146A90();
    v8[12] = 3;
    sub_146A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_A27EC(uint64_t a1)
{
  unint64_t result = sub_A2814();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_A2814()
{
  unint64_t result = qword_19FC70;
  if (!qword_19FC70)
  {
    _s20ThirdPartyMediaAssetCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC70);
  }
  return result;
}

uint64_t sub_A286C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A28D4(uint64_t a1)
{
  uint64_t v2 = sub_A314(&qword_19C7B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A2934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A299C()
{
  uint64_t result = 1735290739;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 2:
      uint64_t result = 0x614E747369747261;
      break;
    case 3:
      uint64_t result = 0x656D614E707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A2A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A2FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_A2A54(uint64_t a1)
{
  unint64_t v2 = sub_A34A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A2A90(uint64_t a1)
{
  unint64_t v2 = sub_A34A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_A2ACC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_A3178(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_A2B10(void *a1)
{
  return sub_A2638(a1);
}

uint64_t sub_A2B4C(uint64_t a1)
{
  uint64_t v2 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A2BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_A2C0C()
{
  unint64_t result = qword_19FC80;
  if (!qword_19FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC80);
  }
  return result;
}

unint64_t sub_A2C60()
{
  unint64_t result = qword_19FC88;
  if (!qword_19FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC88);
  }
  return result;
}

uint64_t sub_A2CB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t _s6ResultVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s6ResultVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s6ResultVwtk_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *_s6ResultVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6ResultVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa_5()
{
  return &_s6ResultVN_0;
}

uint64_t sub_A2FB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_A3178@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_A314(&qword_19FC90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_A34A0();
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_1469E0();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1469E0();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1469E0();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1469E0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  sub_C7FC((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v19;
  a2[6] = v22;
  a2[7] = v17;
  return result;
}

unint64_t sub_A34A0()
{
  unint64_t result = qword_19FC98;
  if (!qword_19FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FC98);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA35C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_5()
{
  return &_s6ResultV10CodingKeysON_5;
}

unint64_t sub_A35FC()
{
  unint64_t result = qword_19FCA8;
  if (!qword_19FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FCA8);
  }
  return result;
}

unint64_t sub_A3654()
{
  unint64_t result = qword_19FCB0;
  if (!qword_19FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FCB0);
  }
  return result;
}

unint64_t sub_A36AC()
{
  unint64_t result = qword_19FCB8;
  if (!qword_19FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FCB8);
  }
  return result;
}

uint64_t sub_A3700@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_A314(&qword_19B730);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_145290();
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unsigned int v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19FD60);
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptViewModelSegment();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_A4740();
  uint64_t v13 = (uint64_t)v40;
  sub_146D00();
  if (v13) {
    return sub_C7FC((uint64_t)a1);
  }
  unint64_t v40 = a1;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v14 = v36;
  uint64_t v15 = v39;
  char v44 = 0;
  sub_A4854(&qword_19C908);
  uint64_t v17 = v37;
  uint64_t v16 = (uint64_t)v38;
  sub_146A20();
  uint64_t v19 = v15;
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v17);
  uint64_t v21 = v9;
  if (v20 == 1)
  {
    sub_145280();
    sub_52900(v16);
    uint64_t v22 = v6;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v23(v6, v16, v17);
    uint64_t v22 = v6;
  }
  uint64_t v24 = (uint64_t)v34;
  v23(v34, (uint64_t)v22, v17);
  char v43 = 1;
  uint64_t v25 = sub_146A30();
  uint64_t v26 = v33;
  uint64_t v27 = (uint64_t *)(v24 + *(int *)(v33 + 20));
  uint64_t *v27 = v25;
  v27[1] = v28;
  char v42 = 2;
  sub_146A40();
  *(void *)(v24 + *(int *)(v26 + 24)) = v29;
  char v41 = 3;
  sub_146A40();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v7);
  *(void *)(v24 + *(int *)(v26 + 28)) = v31;
  sub_A4794(v24, v14);
  sub_C7FC((uint64_t)v40);
  return sub_A47F8(v24);
}

uint64_t sub_A3B90(void *a1)
{
  uint64_t v3 = sub_A314(&qword_19FD70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_A4740();
  sub_146D10();
  v8[15] = 0;
  sub_145290();
  sub_A4854(&qword_19FD78);
  sub_146B10();
  if (!v1)
  {
    type metadata accessor for TranscriptViewModelSegment();
    v8[14] = 1;
    sub_146AE0();
    v8[13] = 2;
    sub_146AF0();
    v8[12] = 3;
    sub_146AF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_A3D90()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A3E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A4B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_A3E38(uint64_t a1)
{
  unint64_t v2 = sub_A4740();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A3E74(uint64_t a1)
{
  unint64_t v2 = sub_A4740();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_A3EB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_A3700(a1, a2);
}

uint64_t sub_A3EC8(void *a1)
{
  return sub_A3B90(a1);
}

BOOL static TranscriptionState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TranscriptionState.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TranscriptionState.hashValue.getter(char a1)
{
  return sub_146CD0();
}

unint64_t sub_A3F68()
{
  unint64_t result = qword_19FCC0;
  if (!qword_19FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FCC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA4088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *sub_A40C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_145290();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_A41AC(uint64_t a1)
{
  uint64_t v2 = sub_145290();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_A4224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_A42C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_A4374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_A4404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_145290();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_A44A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A44B8);
}

uint64_t sub_A44B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_145290();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_A457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A4590);
}

uint64_t sub_A4590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_145290();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment()
{
  uint64_t result = qword_19FD20;
  if (!qword_19FD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A469C()
{
  uint64_t result = sub_145290();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_A4740()
{
  unint64_t result = qword_19FD68;
  if (!qword_19FD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FD68);
  }
  return result;
}

uint64_t sub_A4794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A47F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A4854(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_145290();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_A4898(uint64_t a1, uint64_t a2)
{
  if ((sub_145260() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for TranscriptViewModelSegment();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_146B90(), BOOL result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])) {
      return *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]);
    }
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptViewModelSegment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA4A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unint64_t sub_A4A44()
{
  unint64_t result = qword_19FD80;
  if (!qword_19FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FD80);
  }
  return result;
}

unint64_t sub_A4A9C()
{
  unint64_t result = qword_19FD88;
  if (!qword_19FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FD88);
  }
  return result;
}

unint64_t sub_A4AF4()
{
  unint64_t result = qword_19FD90;
  if (!qword_19FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FD90);
  }
  return result;
}

uint64_t sub_A4B48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_A4CE8(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x726F68747561;
      break;
    case 3:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 4:
      unint64_t result = 0x79616C50656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_A4DD4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_19FED0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_A6EE8();
  sub_146D10();
  v11[15] = 0;
  sub_146AE0();
  if (!v2)
  {
    v11[14] = 1;
    sub_146A90();
    v11[13] = 2;
    sub_146A90();
    uint64_t v9 = _s12PodcastAssetC11PodcastDataVMa(0);
    v11[12] = 3;
    sub_144F60();
    sub_A6EA0(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146AD0();
    v11[11] = 4;
    sub_145230();
    sub_A6EA0(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    v11[10] = 5;
    sub_146AC0();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_A7050();
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_A50D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_A314(&qword_19C150);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_A314(&qword_19FEB8);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)_s12PodcastAssetC11PodcastDataVMa(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v37 = a1;
  sub_2F114(a1, v15);
  sub_A6EE8();
  uint64_t v16 = v38;
  sub_146D00();
  if (v16) {
    return sub_C7FC((uint64_t)v37);
  }
  uint64_t v32 = v5;
  uint64_t v33 = v8;
  uint64_t v38 = v14;
  char v46 = 0;
  uint64_t v17 = v36;
  uint64_t v18 = v11;
  uint64_t v19 = sub_146A30();
  int v20 = v38;
  uint64_t *v38 = v19;
  v20[1] = v21;
  char v45 = 1;
  v20[2] = sub_1469E0();
  void v20[3] = v22;
  char v44 = 2;
  v20[4] = sub_1469E0();
  v20[5] = v23;
  sub_144F60();
  char v43 = 3;
  sub_A6EA0(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v24 = (uint64_t)v33;
  sub_146A20();
  sub_2E4D0(v24, (uint64_t)v20 + v12[7], &qword_19EB20);
  sub_145230();
  char v42 = 4;
  sub_A6EA0(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = (uint64_t)v32;
  sub_146A20();
  sub_2E4D0(v25, (uint64_t)v20 + v12[8], &qword_19C150);
  char v41 = 5;
  uint64_t v26 = sub_146A10();
  uint64_t v27 = v35;
  uint64_t v28 = (char *)v20 + v12[9];
  *(void *)uint64_t v28 = v26;
  v28[8] = v29 & 1;
  char v39 = 6;
  sub_A6F3C();
  sub_146A20();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v17);
  *((unsigned char *)v20 + v12[10]) = v40;
  sub_A6F90((uint64_t)v20, v34);
  sub_C7FC((uint64_t)v37);
  return sub_A6FF4((uint64_t)v20);
}

unint64_t sub_A565C()
{
  return sub_A4CE8(*v0);
}

uint64_t sub_A5664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A73A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_A568C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_A5698(uint64_t a1)
{
  unint64_t v2 = sub_A6EE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A56D4(uint64_t a1)
{
  unint64_t v2 = sub_A6EE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_A5710@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_A50D0(a1, a2);
}

uint64_t sub_A5728(void *a1)
{
  return sub_A4DD4(a1);
}

uint64_t sub_A5740()
{
  uint64_t v1 = sub_A314(&qword_19C818);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling12PodcastAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_317D8((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1248C((uint64_t)v3, &qword_19C818);
    return 0;
  }
  sub_A70A4((uint64_t)v3, (uint64_t)v7);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_A6FF4((uint64_t)v7);
  return v9;
}

uint64_t sub_A5968()
{
  return swift_release();
}

id sub_A5978()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12PodcastAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_A59C0()
{
  return _s12PodcastAssetCMa(0);
}

uint64_t _s12PodcastAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19FDC0);
}

uint64_t sub_A59E8()
{
  return swift_updateClassMetadata2();
}

void *sub_A5A2C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[7];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_144F60();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19EB20);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_145230();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
  }
  return v4;
}

uint64_t sub_A5CF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_144F60();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_145230();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_A5E78(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19EB20);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_145230();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_A314(&qword_19C150);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_A60EC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_144F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19EB20);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_145230();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_A643C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_144F60();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_A314(&qword_19EB20);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_145230();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_A314(&qword_19C150);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  int v21 = (char *)a1 + v19;
  int v22 = (char *)a2 + v19;
  *(void *)int v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *sub_A6678(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_144F60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_A314(&qword_19EB20);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_145230();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_A314(&qword_19C150);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  char v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(void *)char v29 = *(void *)v30;
  v29[8] = v30[8];
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  return a1;
}

uint64_t sub_A6994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A69A8);
}

uint64_t sub_A69A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_A6ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A6AF0);
}

uint64_t sub_A6AF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19EB20);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19C150);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s12PodcastAssetC11PodcastDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_19FE28);
}

void sub_A6C44()
{
  sub_A6D70(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_A6D70(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_A6D70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_A6DC4()
{
  return swift_retain();
}

uint64_t sub_A6DD4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling12PodcastAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_A6DEC()
{
  return sub_A5740();
}

uint64_t sub_A6E10()
{
  return sub_A6EA0(&qword_19C820, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_A6E58()
{
  return sub_A6EA0(&qword_19FE78, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_A6EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_A6EE8()
{
  unint64_t result = qword_19FEC0;
  if (!qword_19FEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FEC0);
  }
  return result;
}

unint64_t sub_A6F3C()
{
  unint64_t result = qword_19FEC8;
  if (!qword_19FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FEC8);
  }
  return result;
}

uint64_t sub_A6F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A6FF4(uint64_t a1)
{
  uint64_t v2 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_A7050()
{
  unint64_t result = qword_19FED8;
  if (!qword_19FED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FED8);
  }
  return result;
}

uint64_t sub_A70A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12PodcastAssetC11PodcastDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12PodcastAssetC11PodcastDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA7264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12PodcastAssetC11PodcastDataV10CodingKeysOMa()
{
  return &_s12PodcastAssetC11PodcastDataV10CodingKeysON;
}

unint64_t sub_A72A0()
{
  unint64_t result = qword_19FEE0;
  if (!qword_19FEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FEE0);
  }
  return result;
}

unint64_t sub_A72F8()
{
  unint64_t result = qword_19FEE8;
  if (!qword_19FEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FEE8);
  }
  return result;
}

unint64_t sub_A7350()
{
  unint64_t result = qword_19FEF0;
  if (!qword_19FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_19FEF0);
  }
  return result;
}

uint64_t sub_A73A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000000014E940 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_A768C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_A314(&qword_19C498);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A0008);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_AA5A0();
  sub_146D00();
  if (!v2)
  {
    _s10VisitAssetC9VisitDataVMa(0);
    sub_AA558(&qword_19C880, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
    sub_146A20();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_2E4D0((uint64_t)v6, (uint64_t)v12, &qword_19C498);
    sub_AA5F4((uint64_t)v12, v15);
  }
  return sub_C7FC((uint64_t)a1);
}

uint64_t sub_A78D8()
{
  return 0x6144737469736976;
}

uint64_t sub_A78F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6144737469736976 && a2 == 0xEA00000000006174)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_146B90();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_A7998(uint64_t a1)
{
  unint64_t v2 = sub_AA5A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A79D4(uint64_t a1)
{
  unint64_t v2 = sub_AA5A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_A7A10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_A768C(a1, a2);
}

uint64_t sub_A7A28(void *a1)
{
  uint64_t v2 = sub_A314(&qword_1A0018);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_AA5A0();
  sub_146D10();
  _s10VisitAssetC9VisitDataVMa(0);
  sub_AA558(&qword_19D6A0, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
  sub_146AD0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_A7B9C(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  uint64_t v13 = sub_A314(&qword_19C5A0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone((Class)type metadata accessor for GenericMapThumbnailCacheOperation());
  uint64_t v17 = v6;
  swift_bridgeObjectRetain();
  id v18 = a6;
  id v19 = v16;
  sub_2B87C((uint64_t)v15);
  sub_2E4D0((uint64_t)v15, (uint64_t)v19 + qword_1A3E70, &qword_19C5A0);

  return sub_42A2C(v17, a1, a2, v12, a4, a5, v18);
}

uint64_t sub_A7CBC(uint64_t a1, char a2, id a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtCC15JournalSettings10Journaling5Asset_id;
  id v7 = [a3 userInterfaceStyle];

  return sub_4C58C(v6, a1, (uint64_t)v7, 0, 0, 1, a2);
}

uint64_t sub_A7D34()
{
  uint64_t v1 = sub_A314(&qword_19C498);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)&v23[-v5];
  uint64_t v7 = sub_A314(&qword_19C5A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  swift_retain();
  sub_332AC((uint64_t)v9);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_1248C((uint64_t)v9, &qword_19C5A0);
    return 0;
  }
  sub_AA5F4((uint64_t)v9, (uint64_t)v13);
  sub_A314(&qword_19D6B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1598D0;
  sub_AA658((uint64_t)v13, (uint64_t)v6);
  uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
  id v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (v16(v6, 1, v15) == 1)
  {
    sub_1248C((uint64_t)v6, &qword_19C498);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v17 = *v6;
    uint64_t v18 = v6[1];
    swift_bridgeObjectRetain();
    sub_AA6C0((uint64_t)v6, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  sub_AA658((uint64_t)v13, (uint64_t)v4);
  if (v16((uint64_t *)v4, 1, v15) == 1)
  {
    sub_1248C((uint64_t)v4, &qword_19C498);
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v20 = *((void *)v4 + 2);
    uint64_t v21 = *((void *)v4 + 3);
    swift_bridgeObjectRetain();
    sub_AA6C0((uint64_t)v4, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 56) = v21;
  uint64_t v19 = sub_64620(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_A314((uint64_t *)&unk_19EB10);
  swift_arrayDestroy();
  sub_AA6C0((uint64_t)v13, _s15GenericMapAssetC14GenericMapDataVMa);
  return v19;
}

uint64_t sub_A80D0()
{
  return swift_release();
}

id sub_A80E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15GenericMapAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_A8128()
{
  return _s15GenericMapAssetCMa(0);
}

uint64_t _s15GenericMapAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19FF20);
}

uint64_t sub_A8150()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_A8194(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_A314(&qword_19C498) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)_s10VisitAssetC9VisitDataVMa(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = v7[7];
      uint64_t v50 = v8;
      __dst = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_145230();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = sub_A314(&qword_19C150);
        memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v19 = v7[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v17((char *)a2 + v19, 1, v15))
      {
        uint64_t v22 = sub_A314(&qword_19C150);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      }
      uint64_t v23 = v7[9];
      int v24 = (char *)a1 + v23;
      int v25 = (char *)a2 + v23;
      if (v17((char *)a2 + v23, 1, v15))
      {
        uint64_t v26 = sub_A314(&qword_19C150);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
      }
      uint64_t v27 = v7[10];
      uint64_t v28 = (char *)a1 + v27;
      char v29 = (char *)a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v7[12];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      unint64_t v36 = *((void *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v37 = *(void *)v35;
        sub_C4D4(*(void *)v35, *((void *)v35 + 1));
        *(void *)uint64_t v34 = v37;
        *((void *)v34 + 1) = v36;
      }
      uint64_t v38 = v7[13];
      char v39 = (char *)a1 + v38;
      char v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)char v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_C4D4(*(void *)v40, *((void *)v40 + 1));
        *(void *)char v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      uint64_t v43 = v7[15];
      char v44 = (char *)a1 + v43;
      char v45 = (char *)a2 + v43;
      *(void *)char v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v7[16];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v50 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_A862C(uint64_t a1)
{
  objc_super v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[7];
    uint64_t v5 = sub_145230();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v2[8];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + v2[9];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
    uint64_t v10 = (uint64_t *)(a1 + v2[12]);
    unint64_t v11 = v10[1];
    if (v11 >> 60 != 15) {
      uint64_t result = sub_C52C(*v10, v11);
    }
    uint64_t v12 = (uint64_t *)(a1 + v2[13]);
    unint64_t v13 = v12[1];
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      return sub_C52C(v14, v13);
    }
  }
  return result;
}

void *sub_A8820(void *a1, void *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_A314(&qword_19C498);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = v4[7];
    uint64_t v47 = v5;
    __dst = (char *)a1 + v10;
    unint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_145230();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_A314(&qword_19C150);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = v4[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      uint64_t v19 = sub_A314(&qword_19C150);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v20 = v4[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v14((char *)a2 + v20, 1, v12))
    {
      uint64_t v23 = sub_A314(&qword_19C150);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    uint64_t v24 = v4[10];
    int v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)int v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v4[11];
    uint64_t v28 = (char *)a1 + v27;
    char v29 = (char *)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v4[12];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    unint64_t v33 = *((void *)v32 + 1);
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *(void *)v32;
      sub_C4D4(*(void *)v32, *((void *)v32 + 1));
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = v4[13];
    unint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      sub_C4D4(*(void *)v37, *((void *)v37 + 1));
      *(void *)unint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v40 = v4[15];
    unint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(void *)unint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = v4[16];
    char v44 = (char *)a1 + v43;
    char v45 = (char *)a2 + v43;
    *(void *)char v44 = *(void *)v45;
    v44[8] = v45[8];
    (*(void (**)(void *, void, uint64_t, int *))(v47 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_A8C78(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_AA6C0((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v4[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_145230();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
    int v22 = v21(v17, 1, v19);
    int v23 = v21(v18, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_28:
        uint64_t v59 = v4[8];
        uint64_t v60 = &a1[v59];
        double v61 = &a2[v59];
        int v62 = v21(&a1[v59], 1, v19);
        int v63 = v21(v61, 1, v19);
        if (v62)
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v60, v61, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v60, v61, v19);
LABEL_34:
            uint64_t v65 = v4[9];
            uint64_t v66 = &a1[v65];
            unint64_t v67 = &a2[v65];
            int v68 = v21(&a1[v65], 1, v19);
            int v69 = v21(v67, 1, v19);
            if (v68)
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v66, v67, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v66, 0, 1, v19);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v66, v67, v19);
LABEL_40:
                uint64_t v71 = v4[10];
                double v72 = &a1[v71];
                uint64_t v73 = &a2[v71];
                uint64_t v74 = *(void *)v73;
                v72[8] = v73[8];
                *(void *)double v72 = v74;
                uint64_t v75 = v4[11];
                uint64_t v76 = &a1[v75];
                uint64_t v77 = &a2[v75];
                uint64_t v78 = *(void *)v77;
                v76[8] = v77[8];
                *(void *)uint64_t v76 = v78;
                uint64_t v79 = v4[12];
                uint64_t v80 = (uint64_t *)&a1[v79];
                uint64_t v81 = (uint64_t *)&a2[v79];
                unint64_t v82 = *(void *)&a2[v79 + 8];
                if (*(void *)&a1[v79 + 8] >> 60 == 15)
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v83 = *v81;
                    sub_C4D4(v83, v82);
                    *uint64_t v80 = v83;
                    v80[1] = v82;
                    goto LABEL_47;
                  }
                }
                else
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v84 = *v81;
                    sub_C4D4(v84, v82);
                    uint64_t v85 = *v80;
                    unint64_t v86 = v80[1];
                    *uint64_t v80 = v84;
                    v80[1] = v82;
                    sub_C52C(v85, v86);
LABEL_47:
                    uint64_t v87 = v4[13];
                    BOOL v88 = (uint64_t *)&a1[v87];
                    uint64_t v89 = (uint64_t *)&a2[v87];
                    unint64_t v90 = *(void *)&a2[v87 + 8];
                    if (*(void *)&a1[v87 + 8] >> 60 == 15)
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v91 = *v89;
                        sub_C4D4(v91, v90);
                        uint64_t *v88 = v91;
                        v88[1] = v90;
LABEL_54:
                        a1[v4[14]] = a2[v4[14]];
                        uint64_t v95 = v4[15];
                        uint64_t v96 = &a1[v95];
                        uint64_t v97 = &a2[v95];
                        uint64_t v98 = *(void *)v97;
                        v96[8] = v97[8];
                        *(void *)uint64_t v96 = v98;
                        uint64_t v99 = v4[16];
                        uint64_t v100 = &a1[v99];
                        uint64_t v101 = &a2[v99];
                        uint64_t v102 = *(void *)v101;
                        v100[8] = v101[8];
                        *(void *)uint64_t v100 = v102;
                        return a1;
                      }
                    }
                    else
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v92 = *v89;
                        sub_C4D4(v92, v90);
                        uint64_t v93 = *v88;
                        unint64_t v94 = v88[1];
                        uint64_t *v88 = v92;
                        v88[1] = v90;
                        sub_C52C(v93, v94);
                        goto LABEL_54;
                      }
                      sub_40058((uint64_t)v88);
                    }
                    *(_OWORD *)BOOL v88 = *(_OWORD *)v89;
                    goto LABEL_54;
                  }
                  sub_40058((uint64_t)v80);
                }
                *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
                goto LABEL_47;
              }
              (*(void (**)(char *, uint64_t))(v20 + 8))(v66, v19);
            }
            uint64_t v70 = sub_A314(&qword_19C150);
            memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
        }
        uint64_t v64 = sub_A314(&qword_19C150);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    }
    uint64_t v58 = sub_A314(&qword_19C150);
    memcpy(v17, v18, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_A314(&qword_19C498);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  uint64_t v9 = v4[7];
  __dst = &a1[v9];
  uint64_t v10 = &a2[v9];
  uint64_t v11 = sub_145230();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v24 = v4[8];
  int v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_A314(&qword_19C150);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v4[9];
  char v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v13(&a2[v28], 1, v11))
  {
    uint64_t v31 = sub_A314(&qword_19C150);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v32 = v4[10];
  unint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)unint64_t v33 = v35;
  uint64_t v36 = v4[11];
  uint64_t v37 = &a1[v36];
  unint64_t v38 = &a2[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = v4[12];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  unint64_t v43 = *((void *)v42 + 1);
  if (v43 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  }
  else
  {
    uint64_t v44 = *(void *)v42;
    sub_C4D4(*(void *)v42, *((void *)v42 + 1));
    *(void *)unint64_t v41 = v44;
    *((void *)v41 + 1) = v43;
  }
  uint64_t v45 = v4[13];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  unint64_t v48 = *((void *)v47 + 1);
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    uint64_t v49 = *(void *)v47;
    sub_C4D4(*(void *)v47, *((void *)v47 + 1));
    *(void *)uint64_t v46 = v49;
    *((void *)v46 + 1) = v48;
  }
  a1[v4[14]] = a2[v4[14]];
  uint64_t v50 = v4[15];
  unint64_t v51 = &a1[v50];
  long long v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)unint64_t v51 = v53;
  uint64_t v54 = v4[16];
  MKMapRect v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)MKMapRect v55 = v57;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_A9638(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_A314(&qword_19C498);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = v4[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = v4[8];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_A314(&qword_19C150);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = v4[9];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v13((char *)a2 + v19, 1, v11))
    {
      uint64_t v22 = sub_A314(&qword_19C150);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    uint64_t v23 = v4[10];
    uint64_t v24 = (char *)a1 + v23;
    int v25 = (char *)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v4[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *(_OWORD *)((char *)a1 + v4[13]) = *(_OWORD *)((char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v29 = v4[15];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v4[16];
    unint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    v33[8] = v34[8];
    *(void *)unint64_t v33 = *(void *)v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_A99F4(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_AA6C0((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    uint64_t v18 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_145230();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_22:
        uint64_t v50 = v4[8];
        unint64_t v51 = &a1[v50];
        long long v52 = &a2[v50];
        int v53 = v26(&a1[v50], 1, v24);
        int v54 = v26(v52, 1, v24);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v51, v52, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v51, v52, v24);
LABEL_28:
            uint64_t v56 = v4[9];
            uint64_t v57 = &a1[v56];
            uint64_t v58 = &a2[v56];
            int v59 = v26(&a1[v56], 1, v24);
            int v60 = v26(v58, 1, v24);
            if (v59)
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
                goto LABEL_34;
              }
            }
            else
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v57, v58, v24);
LABEL_34:
                uint64_t v62 = v4[10];
                int v63 = &a1[v62];
                uint64_t v64 = &a2[v62];
                *(void *)int v63 = *(void *)v64;
                v63[8] = v64[8];
                uint64_t v65 = v4[11];
                uint64_t v66 = &a1[v65];
                unint64_t v67 = &a2[v65];
                *(void *)uint64_t v66 = *(void *)v67;
                v66[8] = v67[8];
                uint64_t v68 = v4[12];
                int v69 = (uint64_t *)&a1[v68];
                uint64_t v70 = (uint64_t *)&a2[v68];
                unint64_t v71 = *(void *)&a1[v68 + 8];
                if (v71 >> 60 != 15)
                {
                  unint64_t v72 = v70[1];
                  if (v72 >> 60 != 15)
                  {
                    uint64_t v73 = *v69;
                    uint64_t *v69 = *v70;
                    v69[1] = v72;
                    sub_C52C(v73, v71);
LABEL_39:
                    uint64_t v74 = v4[13];
                    uint64_t v75 = (uint64_t *)&a1[v74];
                    uint64_t v76 = (uint64_t *)&a2[v74];
                    unint64_t v77 = *(void *)&a1[v74 + 8];
                    if (v77 >> 60 != 15)
                    {
                      unint64_t v78 = v76[1];
                      if (v78 >> 60 != 15)
                      {
                        uint64_t v79 = *v75;
                        *uint64_t v75 = *v76;
                        v75[1] = v78;
                        sub_C52C(v79, v77);
                        goto LABEL_44;
                      }
                      sub_40058((uint64_t)v75);
                    }
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
LABEL_44:
                    a1[v4[14]] = a2[v4[14]];
                    uint64_t v80 = v4[15];
                    uint64_t v81 = &a1[v80];
                    unint64_t v82 = &a2[v80];
                    *(void *)uint64_t v81 = *(void *)v82;
                    v81[8] = v82[8];
                    uint64_t v83 = v4[16];
                    uint64_t v84 = &a1[v83];
                    uint64_t v85 = &a2[v83];
                    *(void *)uint64_t v84 = *(void *)v85;
                    v84[8] = v85[8];
                    return a1;
                  }
                  sub_40058((uint64_t)v69);
                }
                *(_OWORD *)int v69 = *(_OWORD *)v70;
                goto LABEL_39;
              }
              (*(void (**)(char *, uint64_t))(v25 + 8))(v57, v24);
            }
            uint64_t v61 = sub_A314(&qword_19C150);
            memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v24);
        }
        uint64_t v55 = sub_A314(&qword_19C150);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v49 = sub_A314(&qword_19C150);
    memcpy(v22, v23, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v17 = sub_A314(&qword_19C498);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v29 = v4[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (v15(&a2[v29], 1, v13))
  {
    uint64_t v32 = sub_A314(&qword_19C150);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v30, v31, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  }
  uint64_t v33 = v4[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v15(&a2[v33], 1, v13))
  {
    uint64_t v36 = sub_A314(&qword_19C150);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v35, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v13);
  }
  uint64_t v37 = v4[10];
  unint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *(void *)unint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = v4[11];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  v41[8] = v42[8];
  *(void *)unint64_t v41 = *(void *)v42;
  *(_OWORD *)&a1[v4[12]] = *(_OWORD *)&a2[v4[12]];
  *(_OWORD *)&a1[v4[13]] = *(_OWORD *)&a2[v4[13]];
  a1[v4[14]] = a2[v4[14]];
  uint64_t v43 = v4[15];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  v44[8] = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v46 = v4[16];
  uint64_t v47 = &a1[v46];
  unint64_t v48 = &a2[v46];
  v47[8] = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_AA26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AA280);
}

uint64_t sub_AA280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C498);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_AA2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AA304);
}

uint64_t sub_AA304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C498);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s15GenericMapAssetC14GenericMapDataVMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_19FF88);
}

void sub_AA398()
{
  sub_AA424();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_AA424()
{
  if (!qword_19FF98)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    unint64_t v0 = sub_1465C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_19FF98);
    }
  }
}

uint64_t sub_AA47C()
{
  return swift_retain();
}

uint64_t sub_AA48C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling15GenericMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_AA4A4()
{
  return sub_A7D34();
}

uint64_t sub_AA4C8()
{
  return sub_AA558(&qword_19C8E8, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_AA510()
{
  return sub_AA558(&qword_19FFC8, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_AA558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_AA5A0()
{
  unint64_t result = qword_1A0010;
  if (!qword_1A0010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0010);
  }
  return result;
}

uint64_t sub_AA5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_AA658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_AA6C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xAA7BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOMa()
{
  return &_s15GenericMapAssetC14GenericMapDataV10CodingKeysON;
}

unint64_t sub_AA7F8()
{
  unint64_t result = qword_1A0020;
  if (!qword_1A0020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0020);
  }
  return result;
}

unint64_t sub_AA850()
{
  unint64_t result = qword_1A0028;
  if (!qword_1A0028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0028);
  }
  return result;
}

unint64_t sub_AA8A8()
{
  unint64_t result = qword_1A0030;
  if (!qword_1A0030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0030);
  }
  return result;
}

id sub_AA8FC()
{
  uint64_t v1 = (char *)v0[2];
  id v2 = v1;
  if (v1 == (unsigned char *)&def_94138 + 1)
  {
    uint64_t v3 = *v0;
    unint64_t v4 = v0[1];
    sub_C4D4(*v0, v4);
    Class isa = sub_144F90().super.isa;
    id v2 = [self metadataWithDataRepresentation:isa];
    sub_C52C(v3, v4);

    v0[2] = (uint64_t)v2;
    id v6 = v2;
  }
  sub_ACDE8(v1);
  return v2;
}

uint64_t sub_AA9A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A0160);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2F114(a1, a1[3]);
  sub_ACBF4();
  sub_146D10();
  long long v11 = *v3;
  v10[15] = 0;
  sub_40D74();
  sub_146B10();
  if (!v2)
  {
    _s9LinkAssetC8LinkDataVMa(0);
    LOBYTE(v11) = 1;
    sub_145230();
    sub_ACBAC(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v11) = 2;
    sub_144F60();
    sub_ACBAC(&qword_19E050, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_146AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_AABF0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_A314(&qword_19EB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_19C150);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_A314(&qword_1A0150);
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s9LinkAssetC8LinkDataVMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v15 + 2) = 1;
  uint64_t v16 = a1[3];
  uint64_t v24 = a1;
  sub_2F114(a1, v16);
  sub_ACBF4();
  sub_146D00();
  if (v2)
  {
    sub_C7FC((uint64_t)v24);
    sub_ACC48((char *)&def_94138 + 1);
  }
  else
  {
    uint64_t v17 = v22;
    uint64_t v20 = v6;
    char v26 = 0;
    sub_40CBC();
    sub_146A60();
    *(_OWORD *)uint64_t v15 = v25;
    sub_145230();
    LOBYTE(v25) = 1;
    sub_ACBAC(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146A20();
    sub_2E4D0((uint64_t)v9, (uint64_t)&v15[*(int *)(v13 + 24)], &qword_19C150);
    sub_144F60();
    LOBYTE(v25) = 2;
    sub_ACBAC(&qword_19E040, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = (uint64_t)v20;
    sub_146A20();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v23);
    sub_2E4D0(v18, (uint64_t)&v15[*(int *)(v13 + 28)], &qword_19EB20);
    sub_ACC58((uint64_t)v15, v21);
    sub_C7FC((uint64_t)v24);
    sub_ACCBC((uint64_t)v15);
  }
}

uint64_t sub_AB024()
{
  uint64_t v1 = 1702125924;
  if (*v0 != 1) {
    uint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_AB068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AD004(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AB090(uint64_t a1)
{
  unint64_t v2 = sub_ACBF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AB0CC(uint64_t a1)
{
  unint64_t v2 = sub_ACBF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_AB108(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_AB120(void *a1)
{
  return sub_AA9A4(a1);
}

id sub_AB138()
{
  uint64_t v1 = sub_A314(&qword_19C8C8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_A314(&qword_19C8D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_metadata);
  if (v11)
  {
    swift_retain();
    sub_32E44((uint64_t)v10);
    uint64_t v12 = _s9LinkAssetC8LinkDataVMa(0);
    uint64_t v13 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      id v15 = sub_AA8FC();
      sub_2E4D0((uint64_t)v10, (uint64_t)v3, &qword_19C8D0);
      (*v13)(v3, 0, 1, v4);
      uint64_t v16 = v11 + *(void *)(*(void *)v11 + 104);
      swift_beginAccess();
      sub_ACD80((uint64_t)v3, v16);
      swift_endAccess();
      swift_release();
      return v15;
    }
    sub_ACD18((uint64_t)v10, (uint64_t)v8);
    sub_2E4D0((uint64_t)v8, (uint64_t)v3, &qword_19C8D0);
    (*v13)(v3, 0, 1, v4);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_ACD80((uint64_t)v3, v14);
    swift_endAccess();
    swift_release();
    sub_1248C((uint64_t)v10, &qword_19C8D0);
  }
  return 0;
}

uint64_t sub_AB3EC()
{
  uint64_t v1 = sub_A314(&qword_19C8C8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_A314(&qword_19C8D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_metadata);
  if (!v11) {
    return 0;
  }
  swift_retain();
  sub_32E44((uint64_t)v10);
  uint64_t v12 = _s9LinkAssetC8LinkDataVMa(0);
  uint64_t v13 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
  {
    sub_ACD18((uint64_t)v10, (uint64_t)v8);
    sub_2E4D0((uint64_t)v8, (uint64_t)v3, &qword_19C8D0);
    (*v13)(v3, 0, 1, v4);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_ACD80((uint64_t)v3, v14);
    swift_endAccess();
    swift_release();
    sub_1248C((uint64_t)v10, &qword_19C8D0);
  }
  else
  {
    id v16 = sub_AA8FC();
    sub_2E4D0((uint64_t)v10, (uint64_t)v3, &qword_19C8D0);
    (*v13)(v3, 0, 1, v4);
    uint64_t v17 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_ACD80((uint64_t)v3, v17);
    swift_endAccess();
    swift_release();
    if (v16)
    {
      id v18 = [v16 title];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v15 = sub_145BC0();

        return v15;
      }
    }
  }
  return 0;
}

uint64_t sub_AB6F0()
{
  return swift_release();
}

id sub_AB700()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9LinkAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_AB748()
{
  return _s9LinkAssetCMa(0);
}

uint64_t _s9LinkAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A0060);
}

uint64_t sub_AB770()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_AB7BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_C4D4(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = (char *)a2[2];
    if (v9 != (unsigned char *)&def_94138 + 1) {
      uint64_t v10 = v9;
    }
    a1[2] = (uint64_t)v9;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_145230();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_A314(&qword_19C150);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_144F60();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_A314(&qword_19EB20);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_ABA3C(uint64_t *a1, uint64_t a2)
{
  sub_C52C(*a1, a1[1]);
  uint64_t v4 = (char *)a1[2];
  if (v4 != (unsigned char *)&def_94138 + 1) {

  }
  int v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_145230();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  unint64_t v8 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_144F60();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t *sub_ABBDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_C4D4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  unint64_t v8 = (char *)a2[2];
  if (v8 != (unsigned char *)&def_94138 + 1) {
    uint64_t v9 = v8;
  }
  a1[2] = (uint64_t)v8;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_145230();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_144F60();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_A314(&qword_19EB20);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t *sub_ABE0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_C4D4(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_C52C(v8, v9);
  uint64_t v10 = a1 + 2;
  uint64_t v11 = (char *)a1[2];
  uint64_t v12 = (char *)a2[2];
  if (v11 == (unsigned char *)&def_94138 + 1)
  {
    if (v12 != (unsigned char *)&def_94138 + 1)
    {
      *uint64_t v10 = v12;
      uint64_t v13 = v12;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v12 == (unsigned char *)&def_94138 + 1)
  {
    sub_1248C((uint64_t)(a1 + 2), &qword_1A0070);
    uint64_t v12 = (char *)a2[2];
LABEL_6:
    *uint64_t v10 = v12;
    goto LABEL_8;
  }
  *uint64_t v10 = v12;
  uint64_t v14 = v12;

LABEL_8:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_145230();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_13:
    uint64_t v23 = sub_A314(&qword_19C150);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_14:
  uint64_t v24 = *(int *)(a3 + 28);
  long long v25 = (char *)a1 + v24;
  char v26 = (char *)a2 + v24;
  uint64_t v27 = sub_144F60();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v32 = sub_A314(&qword_19EB20);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t sub_AC15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_144F60();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_A314(&qword_19EB20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t *sub_AC374(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_C52C(v6, v7);
  uint64_t v9 = a1 + 2;
  uint64_t v8 = (char *)a1[2];
  uint64_t v10 = *(void *)(a2 + 16);
  if (v8 == (unsigned char *)&def_94138 + 1) {
    goto LABEL_4;
  }
  if (v10 == 1)
  {
    sub_1248C((uint64_t)(a1 + 2), &qword_1A0070);
    uint64_t v10 = 1;
LABEL_4:
    *uint64_t v9 = v10;
    goto LABEL_6;
  }
  *uint64_t v9 = v10;

LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = sub_145230();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_11:
    uint64_t v19 = sub_A314(&qword_19C150);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 28);
  int v21 = (char *)a1 + v20;
  int v22 = (char *)(a2 + v20);
  uint64_t v23 = sub_144F60();
  uint64_t v24 = *(void *)(v23 - 8);
  long long v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_17;
  }
  if (v27)
  {
LABEL_17:
    uint64_t v28 = sub_A314(&qword_19EB20);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_AC6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AC6C0);
}

uint64_t sub_AC6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19EB20);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_AC7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AC810);
}

uint64_t sub_AC810(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 16) = (a2 + 1);
  }
  else
  {
    uint64_t v8 = sub_A314(&qword_19C150);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_A314(&qword_19EB20);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s9LinkAssetC8LinkDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A00D0);
}

void sub_AC968()
{
  sub_ACA7C(319, (unint64_t *)&qword_19EA30, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_ACA7C(319, (unint64_t *)&qword_19D508, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_ACA7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1465C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_ACAD0()
{
  return swift_retain();
}

uint64_t sub_ACAE0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling9LinkAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_ACAF8()
{
  return sub_AB3EC();
}

uint64_t sub_ACB1C()
{
  return sub_ACBAC(&qword_19C8D8, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_ACB64()
{
  return sub_ACBAC(&qword_1A0110, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_ACBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_ACBF4()
{
  unint64_t result = qword_1A0158;
  if (!qword_1A0158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0158);
  }
  return result;
}

void sub_ACC48(id a1)
{
  if (a1 != (char *)&def_94138 + 1) {
}
  }

uint64_t sub_ACC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_ACCBC(uint64_t a1)
{
  uint64_t v2 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_ACD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_ACD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_A314(&qword_19C8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_ACDE8(id result)
{
  if (result != (char *)&def_94138 + 1) {
    return result;
  }
  return result;
}

unsigned char *_s9LinkAssetC8LinkDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xACEC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9LinkAssetC8LinkDataV10CodingKeysOMa()
{
  return &_s9LinkAssetC8LinkDataV10CodingKeysON;
}

unint64_t sub_ACF00()
{
  unint64_t result = qword_1A0168;
  if (!qword_1A0168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0168);
  }
  return result;
}

unint64_t sub_ACF58()
{
  unint64_t result = qword_1A0170;
  if (!qword_1A0170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0170);
  }
  return result;
}

unint64_t sub_ACFB0()
{
  unint64_t result = qword_1A0178;
  if (!qword_1A0178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0178);
  }
  return result;
}

uint64_t sub_AD004(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_AD12C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 28));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      unsigned int v4 = _swiftEmptyArrayStorage;
      do
      {
        id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
        uint64_t v6 = sub_145BC0();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v4 = sub_7DB80(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          unsigned int v4 = sub_7DB80((double *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[2 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_19AD20 != -1) {
    swift_once();
  }
  sub_A314(&qword_19C708);
  sub_64880();
  uint64_t v12 = sub_145A50();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_AD2D8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 32));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = 0;
      unsigned int v4 = _swiftEmptyArrayStorage;
      do
      {
        HKStateOfMindDomainFromAssociation();
        id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
        uint64_t v6 = sub_145BC0();
        uint64_t v8 = v7;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v4 = sub_7DB80(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v10 = *((void *)v4 + 2);
        unint64_t v9 = *((void *)v4 + 3);
        if (v10 >= v9 >> 1) {
          unsigned int v4 = sub_7DB80((double *)(v9 > 1), v10 + 1, 1, v4);
        }
        ++v3;
        *((void *)v4 + 2) = v10 + 1;
        uint64_t v11 = &v4[2 * v10];
        *((void *)v11 + 4) = v6;
        *((void *)v11 + 5) = v8;
      }
      while (v2 != v3);
      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_19AD20 != -1) {
    swift_once();
  }
  sub_A314(&qword_19C708);
  sub_64880();
  uint64_t v12 = sub_145A50();
  swift_bridgeObjectRelease();
  return v12;
}

double *sub_AD488()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 40));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_C84C(0, (unint64_t *)&qword_1A0A40);
    sub_C84C(0, (unint64_t *)&unk_19D010);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = (unint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      unint64_t v4 = *v3;
      if (*v3 >> 60 == 15) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = *(v3 - 1);
      }
      if (*v3 >> 60 == 15) {
        unint64_t v7 = 0xC000000000000000;
      }
      else {
        unint64_t v7 = *v3;
      }
      sub_27BC0(*(v3 - 1), *v3);
      sub_27BC0(v5, v4);
      uint64_t v8 = (void *)sub_146290();
      sub_C52C(v6, v7);
      if (v8)
      {
        id v9 = [v8 CGColor];

        sub_120B4(v5, v4);
        if (v9)
        {
          sub_145DC0();
          if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
            sub_145E20();
          }
          sub_145E50();
          sub_145E00();
        }
      }
      else
      {
        sub_120B4(v5, v4);
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_AD878()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 28));
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    unint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
      uint64_t v6 = sub_145BC0();
      uint64_t v8 = v7;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v4 = sub_7DB80(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1) {
        unint64_t v4 = sub_7DB80((double *)(v9 > 1), v10 + 1, 1, v4);
      }
      ++v3;
      *((void *)v4 + 2) = v10 + 1;
      uint64_t v11 = &v4[2 * v10];
      *((void *)v11 + 4) = v6;
      *((void *)v11 + 5) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v4 = _swiftEmptyArrayStorage;
  }
  if (*((void *)v4 + 2) < 3uLL)
  {
    if (qword_19AD20 != -1) {
      swift_once();
    }
    sub_A314(&qword_19C708);
    sub_64880();
    uint64_t v20 = sub_145A50();
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v13 = *((void *)v4 + 4);
    uint64_t v12 = *((void *)v4 + 5);
    uint64_t v15 = *((void *)v4 + 6);
    uint64_t v14 = *((void *)v4 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_19AD30 != -1) {
      swift_once();
    }
    sub_A314(&qword_1A0A00);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1598D0;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v17 = sub_1CEB8();
    *(void *)(v16 + 32) = v13;
    *(void *)(v16 + 40) = v12;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v17;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 72) = v15;
    *(void *)(v16 + 80) = v14;
    uint64_t v18 = sub_145B90();
    swift_bridgeObjectRelease();
    return v18;
  }
}

uint64_t sub_ADB00()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(_s16StateOfMindAssetC15StateOfMindDataVMa(0) + 32));
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    unint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      HKStateOfMindDomainFromAssociation();
      id v5 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v6 = sub_145BC0();
      uint64_t v8 = v7;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v4 = sub_7DB80(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1) {
        unint64_t v4 = sub_7DB80((double *)(v9 > 1), v10 + 1, 1, v4);
      }
      ++v3;
      *((void *)v4 + 2) = v10 + 1;
      uint64_t v11 = &v4[2 * v10];
      *((void *)v11 + 4) = v6;
      *((void *)v11 + 5) = v8;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v4 = _swiftEmptyArrayStorage;
  }
  if (*((void *)v4 + 2) < 3uLL)
  {
    if (qword_19AD20 != -1) {
      swift_once();
    }
    sub_A314(&qword_19C708);
    sub_64880();
    uint64_t v20 = sub_145A50();
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v13 = *((void *)v4 + 4);
    uint64_t v12 = *((void *)v4 + 5);
    uint64_t v15 = *((void *)v4 + 6);
    uint64_t v14 = *((void *)v4 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_19AD30 != -1) {
      swift_once();
    }
    sub_A314(&qword_1A0A00);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1598D0;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v17 = sub_1CEB8();
    *(void *)(v16 + 32) = v13;
    *(void *)(v16 + 40) = v12;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v17;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 72) = v15;
    *(void *)(v16 + 80) = v14;
    uint64_t v18 = sub_145B90();
    swift_bridgeObjectRelease();
    return v18;
  }
}

unint64_t sub_ADD8C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x736E69616D6F64;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_ADE68(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_A314(&qword_1A02D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2F114(a1, a1[3]);
  sub_AFB34();
  sub_146D10();
  LOBYTE(v13) = 0;
  sub_146A90();
  if (!v2)
  {
    unint64_t v9 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    LOBYTE(v13) = 1;
    sub_145230();
    sub_AF708(&qword_19D0B8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_146AD0();
    LOBYTE(v13) = 2;
    sub_146AC0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    sub_A314(&qword_1A02B0);
    sub_AFBC4(&qword_1A02E0);
    sub_146AD0();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    sub_146AD0();
    LOBYTE(v13) = 5;
    sub_146AC0();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v12 = 6;
    sub_A314(&qword_1A02C0);
    sub_AFC64(&qword_1A02E8, &qword_1A02C0, (void (*)(void))sub_AFC28);
    sub_146B10();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    sub_146B10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_AE210@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_A314(&qword_19C150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_A314(&qword_1A02A0);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v10);
  char v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  int v30 = a1;
  sub_2F114(a1, v13);
  sub_AFB34();
  uint64_t v14 = v9;
  sub_146D00();
  if (v2) {
    return sub_C7FC((uint64_t)v30);
  }
  uint64_t v15 = (uint64_t)v6;
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  LOBYTE(v32) = 0;
  *char v12 = sub_1469E0();
  v12[1] = v18;
  sub_145230();
  LOBYTE(v32) = 1;
  sub_AF708(&qword_19D0A0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_146A20();
  sub_12384(v15, (uint64_t)v12 + v10[5]);
  LOBYTE(v32) = 2;
  uint64_t v19 = sub_146A10();
  uint64_t v20 = (char *)v12 + v10[6];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  sub_A314(&qword_1A02B0);
  char v31 = 3;
  sub_AFBC4(&qword_1A02B8);
  sub_146A20();
  *(uint64_t *)((char *)v12 + v10[7]) = v32;
  char v31 = 4;
  sub_146A20();
  *(uint64_t *)((char *)v12 + v10[8]) = v32;
  LOBYTE(v32) = 5;
  uint64_t v22 = sub_146A10();
  uint64_t v23 = (char *)v12 + v10[9];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  sub_A314(&qword_1A02C0);
  char v31 = 6;
  sub_AFC64(&qword_1A02C8, &qword_1A02C0, (void (*)(void))sub_AFB88);
  sub_146A60();
  *(uint64_t *)((char *)v12 + v10[10]) = v32;
  char v31 = 7;
  sub_146A60();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  *(uint64_t *)((char *)v12 + v10[11]) = v32;
  sub_AFA74((uint64_t)v12, v27);
  sub_C7FC((uint64_t)v30);
  return sub_AFAD8((uint64_t)v12);
}

unint64_t sub_AE7C8()
{
  return sub_ADD8C(*v0);
}

uint64_t sub_AE7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AFEDC(a1, a2);
  *a3 = result;
  return result;
}

void sub_AE7F8(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_AE804(uint64_t a1)
{
  unint64_t v2 = sub_AFB34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AE840(uint64_t a1)
{
  unint64_t v2 = sub_AFB34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_AE87C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_AE210(a1, a2);
}

uint64_t sub_AE894(void *a1)
{
  return sub_ADE68(a1);
}

uint64_t sub_AE8AC()
{
  return swift_release();
}

id sub_AE8BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StateOfMindAssetCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_AE904()
{
  return _s16StateOfMindAssetCMa(0);
}

uint64_t _s16StateOfMindAssetCMa(uint64_t a1)
{
  return sub_407CC(a1, (uint64_t *)&unk_1A01A8);
}

uint64_t sub_AE92C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_AE970(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_145230();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_A314(&qword_19C150);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v20 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_AEB6C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_145230();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_AEC60(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_AEE0C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_AF054(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_145230();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_A314(&qword_19C150);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v16 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *sub_AF1D4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_145230();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_A314(&qword_19C150);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_AF3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AF3F8);
}

uint64_t sub_AF3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_A314(&qword_19C150);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_AF4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AF4D4);
}

uint64_t sub_AF4D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_A314(&qword_19C150);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataVMa(uint64_t a1)
{
  return sub_407CC(a1, qword_1A0210);
}

void sub_AF5B8()
{
  sub_408C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_AF678()
{
  return sub_AF708(&qword_19C870, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_AF6C0()
{
  return sub_AF708(&qword_1A0260, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_AF708(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_AF750()
{
  return swift_retain();
}

uint64_t sub_AF760(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_AF778()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_A314(&qword_19C868);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int v14 = (char *)&v23 - v13;
  uint64_t v15 = OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata;
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtCC15JournalSettings10Journaling16StateOfMindAsset_metadata);
  if (!v16) {
    return v16;
  }
  swift_retain();
  sub_31E40((uint64_t)v14);
  swift_release();
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v17(v14, 1, v2))
  {
    sub_1248C((uint64_t)v14, &qword_19C868);
    uint64_t v16 = *(void *)(v1 + v15);
    if (!v16) {
      return v16;
    }
  }
  else
  {
    sub_AFA74((uint64_t)v14, (uint64_t)v8);
    sub_1248C((uint64_t)v14, &qword_19C868);
    uint64_t v16 = sub_AD878();
    uint64_t v19 = v18;
    sub_AFAD8((uint64_t)v8);
    if (v16) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v19 == 0xE000000000000000;
    }
    if (!v20 && (sub_146B90() & 1) == 0) {
      return v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v1 + v15);
    if (!v16) {
      return v16;
    }
  }
  swift_retain();
  sub_31E40((uint64_t)v12);
  swift_release();
  if (v17(v12, 1, v2))
  {
    sub_1248C((uint64_t)v12, &qword_19C868);
    return 0;
  }
  else
  {
    sub_AFA74((uint64_t)v12, (uint64_t)v6);
    sub_1248C((uint64_t)v12, &qword_19C868);
    if (v6[*(int *)(v2 + 36) + 8] & 1) != 0 || (v6[*(int *)(v2 + 24) + 8])
    {
      uint64_t v16 = 0;
    }
    else
    {
      HKStateOfMindReflectiveIntervalFromKind();
      id v22 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
      uint64_t v16 = sub_145BC0();
    }
    sub_AFAD8((uint64_t)v6);
  }
  return v16;
}

uint64_t sub_AFA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_AFAD8(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_AFB34()
{
  unint64_t result = qword_1A02A8;
  if (!qword_1A02A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A02A8);
  }
  return result;
}

uint64_t sub_AFB88()
{
  return sub_AFC64(&qword_1A02D0, &qword_19BC90, (void (*)(void))sub_40CBC);
}

uint64_t sub_AFBC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(&qword_1A02B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_AFC28()
{
  return sub_AFC64(&qword_1A02F0, &qword_19BC90, (void (*)(void))sub_40D74);
}

uint64_t sub_AFC64(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_12244(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAFD9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOMa()
{
  return &_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysON;
}

unint64_t sub_AFDD8()
{
  unint64_t result = qword_1A02F8;
  if (!qword_1A02F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A02F8);
  }
  return result;
}

unint64_t sub_AFE30()
{
  unint64_t result = qword_1A0300;
  if (!qword_1A0300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0300);
  }
  return result;
}

unint64_t sub_AFE88()
{
  unint64_t result = qword_1A0308;
  if (!qword_1A0308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1A0308);
  }
  return result;
}

uint64_t sub_AFEDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000000014EA20 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000000014EA40 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E69616D6F64 && a2 == 0xE700000000000000 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000000014EA60 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000000014EA80 || (sub_146B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000014EAA0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_146B90();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_B01DC(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = sub_144F60();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_145290();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  sub_A314(&qword_19B730);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_B0354, 0, 0);
}

uint64_t sub_B0354()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 64);
  sub_144FF0();
  double v6 = v5;
  *(double *)(v0 + 128) = v5;
  id v7 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  *(void *)(v0 + 136) = v7;
  uint64_t v8 = v4 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_B17CC(v8, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3))
  {
    sub_52900(*(void *)(v0 + 120));
    sub_1CF0C();
    swift_allocError();
    *uint64_t v9 = 0;
LABEL_15:
    swift_willThrow();

    sub_B1928(v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v81 = *(uint64_t (**)(void))(v0 + 8);
    return v81();
  }
  id v86 = v7;
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
  sub_52900(v10);
  uint64_t v17 = sub_145240();
  uint64_t v19 = v18;
  uint64_t v85 = v17;
  *(void *)(v0 + 144) = v17;
  *(void *)(v0 + 152) = v18;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  BOOL v20 = self;
  id v21 = [v20 defaultManager];
  sub_E3098(v15);
  sub_144EB0(v22);
  char v24 = v23;
  long long v25 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v25(v15, v16);
  *(void *)(v0 + 40) = 0;
  LODWORD(v16) = [v21 createDirectoryAtURL:v24 withIntermediateDirectories:1 attributes:0 error:v0 + 40];

  id v26 = *(id *)(v0 + 40);
  if (!v16)
  {
    uint64_t v79 = v26;
    swift_bridgeObjectRelease();
    sub_144D90();

LABEL_14:
    id v7 = v86;
    goto LABEL_15;
  }
  uint64_t v27 = *(void *)(v0 + 88);
  uint64_t v28 = *(void *)(v0 + 72);
  id v29 = [v20 defaultManager];
  sub_E3C18(v27);
  sub_144EB0(v30);
  uint64_t v32 = v31;
  v25(v27, v28);
  *(void *)(v0 + 48) = 0;
  unsigned int v33 = [v29 createDirectoryAtURL:v32 withIntermediateDirectories:1 attributes:0 error:v0 + 48];

  id v34 = *(id *)(v0 + 48);
  if (!v33)
  {
    uint64_t v80 = v34;
    swift_bridgeObjectRelease();
    sub_144D90();

    goto LABEL_14;
  }
  uint64_t v82 = *(void *)(v0 + 64);
  v88._countAndFlagsBits = v85;
  v88._object = v19;
  sub_145C90(v88);
  v89._countAndFlagsBits = 8995;
  v89._object = (void *)0xE200000000000000;
  sub_145C90(v89);
  id v35 = objc_allocWithZone((Class)NSAttributedString);
  NSString v36 = sub_145B80();
  swift_bridgeObjectRelease();
  id v37 = [v35 initWithString:v36];

  [v86 appendAttributedString:v37];
  v90._countAndFlagsBits = v85;
  v90._object = v19;
  sub_145C90(v90);
  v91._countAndFlagsBits = 8995;
  v91._object = (void *)0xE200000000000000;
  sub_145C90(v91);
  id v38 = objc_allocWithZone((Class)NSAttributedString);
  NSString v39 = sub_145B80();
  swift_bridgeObjectRelease();
  id v40 = [v38 initWithString:v39];

  [v86 appendAttributedString:v40];
  if (*(unsigned char *)(v82 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_showPhotoMemoryBanner) == 1)
  {
    v92._countAndFlagsBits = v85;
    v92._object = v19;
    sub_145C90(v92);
    v93._countAndFlagsBits = 8995;
    v93._object = (void *)0xE200000000000000;
    sub_145C90(v93);
    id v41 = objc_allocWithZone((Class)NSAttributedString);
    NSString v42 = sub_145B80();
    swift_bridgeObjectRelease();
    id v43 = [v41 initWithString:v42];

    [v86 appendAttributedString:v43];
  }
  uint64_t v83 = *(void *)(v0 + 64);
  v94._countAndFlagsBits = v85;
  v94._object = v19;
  sub_145C90(v94);
  v95._countAndFlagsBits = 8995;
  v95._object = (void *)0xE200000000000000;
  sub_145C90(v95);
  id v44 = objc_allocWithZone((Class)NSAttributedString);
  NSString v45 = sub_145B80();
  swift_bridgeObjectRelease();
  id v46 = [v44 initWithString:v45];

  [v86 appendAttributedString:v46];
  v96._countAndFlagsBits = v85;
  v96._object = v19;
  sub_145C90(v96);
  v97._countAndFlagsBits = 8995;
  v97._object = (void *)0xE200000000000000;
  sub_145C90(v97);
  id v47 = objc_allocWithZone((Class)NSAttributedString);
  NSString v48 = sub_145B80();
  swift_bridgeObjectRelease();
  id v49 = [v47 initWithString:v48];

  [v86 appendAttributedString:v49];
  v98._countAndFlagsBits = v85;
  v98._object = v19;
  sub_145C90(v98);
  v99._countAndFlagsBits = 8995;
  v99._object = (void *)0xE200000000000000;
  sub_145C90(v99);
  id v50 = objc_allocWithZone((Class)NSAttributedString);
  NSString v51 = sub_145B80();
  swift_bridgeObjectRelease();
  id v52 = [v50 initWithString:v51];

  [v86 appendAttributedString:v52];
  int v53 = *(void **)(v83 + OBJC_IVAR____TtCC15JournalSettings10Journaling14EntryViewModel_text);
  if (v53)
  {
    id v84 = v53;
    int v54 = (void *)sub_41A98(v84, 14.0);
    v100._countAndFlagsBits = v85;
    v100._object = v19;
    sub_145C90(v100);
    v101._countAndFlagsBits = 8995;
    v101._object = (void *)0xE200000000000000;
    sub_145C90(v101);
    id v55 = objc_allocWithZone((Class)NSAttributedString);
    NSString v56 = sub_145B80();
    swift_bridgeObjectRelease();
    id v57 = [v55 initWithString:v56];

    [v86 appendAttributedString:v57];
    id v58 = objc_allocWithZone((Class)NSAttributedString);
    NSString v59 = sub_145B80();
    id v60 = [v58 initWithString:v59];

    [v86 appendAttributedString:v60];
    [v86 appendAttributedString:v54];
    id v61 = objc_allocWithZone((Class)NSAttributedString);
    NSString v62 = sub_145B80();
    id v63 = [v61 initWithString:v62];

    [v86 appendAttributedString:v63];
    v102._countAndFlagsBits = v85;
    v102._object = v19;
    sub_145C90(v102);
    v103._countAndFlagsBits = 8995;
    v103._object = (void *)0xE200000000000000;
    sub_145C90(v103);
    id v64 = objc_allocWithZone((Class)NSAttributedString);
    NSString v65 = sub_145B80();
    swift_bridgeObjectRelease();
    id v66 = [v64 initWithString:v65];

    [v86 appendAttributedString:v66];
  }
  v104._countAndFlagsBits = v85;
  v104._object = v19;
  sub_145C90(v104);
  v105._countAndFlagsBits = 8995;
  v105._object = (void *)0xE200000000000000;
  sub_145C90(v105);
  id v67 = objc_allocWithZone((Class)NSAttributedString);
  NSString v68 = sub_145B80();
  swift_bridgeObjectRelease();
  id v69 = [v67 initWithString:v68];

  [v86 appendAttributedString:v69];
  id v70 = v86;
  unint64_t v71 = sub_136D6C((uint64_t)_swiftEmptyArrayStorage);
  v106._countAndFlagsBits = v85;
  v106._object = v19;
  sub_145C90(v106);
  v107._countAndFlagsBits = 8995;
  v107._object = (void *)0xE200000000000000;
  sub_145C90(v107);
  unint64_t v72 = sub_B1B2C();
  uint64_t v74 = v73;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(v72, v74, 0xD000000000000013, 0x800000000014EAE0, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 160) = v71;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v108._countAndFlagsBits = v85;
  v108._object = v19;
  sub_145C90(v108);
  v109._countAndFlagsBits = 8995;
  v109._object = (void *)0xE200000000000000;
  sub_145C90(v109);
  *(void *)(v0 + 168) = 0xD000000000000018;
  *(void *)(v0 + 176) = 0x800000000014EB80;
  uint64_t v76 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v76;
  void *v76 = v0;
  v76[1] = sub_B0EC8;
  uint64_t v77 = *(void *)(v0 + 56);
  return sub_B2B84(v77);
}

uint64_t sub_B0EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_B0FF4, 0, 0);
}

uint64_t sub_B0FF4()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  double v6 = *(void **)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 144);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_13C520(v2, v1, v4, v3, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 208) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v7;
  v12._object = v6;
  sub_145C90(v12);
  v13._countAndFlagsBits = 8995;
  v13._object = (void *)0xE200000000000000;
  sub_145C90(v13);
  *(void *)(v0 + 216) = 0xD000000000000016;
  *(void *)(v0 + 224) = 0x800000000014EB20;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 232) = v9;
  *(void *)uint64_t v9 = v0;
  *(void *)(v9 + 8) = sub_B1178;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v0 + 56);
  return _swift_task_switch(sub_B1E18, 0, 0);
}

uint64_t sub_B1178(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_B12A4, 0, 0);
}