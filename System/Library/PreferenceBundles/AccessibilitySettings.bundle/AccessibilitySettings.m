void sub_7A64(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 120));
  _Unwind_Resume(a1);
}

void _accessibilityiTunesSettings(uint64_t a1, void *a2)
{
  if (a2)
  {
    +[NSObject cancelPreviousPerformRequestsWithTarget:a2 selector:"handleReloadSpecifiers" object:0];
    [a2 performSelector:"handleReloadSpecifiers" withObject:0 afterDelay:0.5];
  }
}

void sub_7C04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_7CE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_C8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

Class __getTTSVBUILoaderClass_block_invoke(uint64_t a1)
{
  v4[0] = 0;
  if (!TextToSpeechVoiceBankingUILibraryCore_frameworkLibrary)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __TextToSpeechVoiceBankingUILibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = off_2089D8;
    uint64_t v6 = 0;
    TextToSpeechVoiceBankingUILibraryCore_frameworkLibrary = _sl_dlopen();
    v2 = (void *)v4[0];
    if (!TextToSpeechVoiceBankingUILibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("TTSVBUILoader");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    v2 = (void *)__getTTSVBUILoaderClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getTTSVBUILoaderClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __TextToSpeechVoiceBankingUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  TextToSpeechVoiceBankingUILibraryCore_frameworkLibrary = result;
  return result;
}

void sub_D268(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _reloadSettings(uint64_t a1, void *a2)
{
  return [a2 reload];
}

id _reloadSettingsSpeakingRate(uint64_t a1, void *a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  id result = [a2 lastSpeechRateAdjustmentTime];
  if (Current - v5 > 0.5)
  {
    return [a2 reload];
  }
  return result;
}

id _handleContinuityDisplayStateChanged(uint64_t a1, void *a2)
{
  if (a2) {
    return [a2 performSelector:"_updateTutorialButtonForOneness" withObject:0 afterDelay:0.0];
  }
  return result;
}

void sub_D784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_EE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
}

void sub_EF6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_12C64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id _zoomTouchEnabledChange(uint64_t a1, void *a2)
{
  return [a2 performSelector:"_zoomTouchEnabledChange" withObject:0 afterDelay:0.1];
}

id AXSettingsBundle()
{
  v0 = (void *)AXSettingsBundle_AXBundle;
  if (!AXSettingsBundle_AXBundle)
  {
    uint64_t v1 = +[NSBundle bundleForClass:AXSafeClassFromString()];
    uint64_t v2 = (void *)AXSettingsBundle_AXBundle;
    AXSettingsBundle_AXBundle = v1;

    v0 = (void *)AXSettingsBundle_AXBundle;
  }

  return v0;
}

uint64_t SCATLocString()
{
  return AXParameterizedLocalizedString();
}

id settingsLocStringTopTouchIDButton(void *a1)
{
  id v1 = a1;
  uint64_t v2 = AXSettingsBundle();
  v3 = [v2 localizedStringForKey:v1 value:v1 table:@"Accessibility-TopButton"];

  return v3;
}

id settingsLocString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = AXSettingsBundle();
  uint64_t v6 = [v5 localizedStringForKey:v4 value:v4 table:v3];

  return v6;
}

id hoverTextActivationKeyLocString(uint64_t a1)
{
  CFStringRef v1 = @"HOVER_TEXT_ACITVATOR_KEY_COMMAND";
  if (a1 == 1) {
    CFStringRef v1 = @"HOVER_TEXT_ACITVATOR_KEY_OPTION";
  }
  if (a1) {
    uint64_t v2 = (__CFString *)v1;
  }
  else {
    uint64_t v2 = @"HOVER_TEXT_ACITVATOR_KEY_CONTROL";
  }
  id v3 = settingsLocString(v2, @"Accessibility");

  return v3;
}

id hoverTextDisplayModeLocString(unint64_t a1)
{
  if (a1 > 4)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = settingsLocString(off_208CA0[a1], @"Accessibility");
  }
  return v2;
}

id hoverTextScrollingSpeedLocString(unint64_t a1)
{
  if (a1 > 4)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = settingsLocString(off_208CC8[a1], @"Accessibility");
  }
  return v2;
}

id AXNonLocalizedStringForLanguage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSLocale localeWithLocaleIdentifier:v1];
  id v3 = [v2 localizedStringForLanguage:v1 context:3];

  if (!v3)
  {
    id v3 = settingsLocString(v1, @"RegionNamesNonLocalized");
    if (!v3)
    {
      if ([v1 _containsSubstring:@"-"])
      {
        id v4 = objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "rangeOfString:", @"-"));
        double v5 = +[NSLocale localeWithLocaleIdentifier:v4];
        id v3 = [v5 localizedStringForLanguage:v4 context:3];
      }
      else
      {
        id v3 = 0;
      }
    }
  }

  return v3;
}

id AXTableViewForCell(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 superview];
  if (v2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = [v2 superview];

      if (v3)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v2 = v3;
          goto LABEL_8;
        }
        _AXAssert();
      }
      uint64_t v2 = 0;
    }
  }
LABEL_8:

  return v2;
}

id AXFlowersImage()
{
  v0 = AXSettingsBundle();
  id v1 = +[UIImage imageNamed:@"flowers" inBundle:v0];

  return v1;
}

id AXFlowersTestImage()
{
  v0 = AXSettingsBundle();
  id v1 = +[UIImage imageNamed:@"flowers_crop" inBundle:v0];

  return v1;
}

id AXHareImage()
{
  v0 = AXUISettingsSpeakingRateFastImage();
  id v1 = +[UIColor systemGrayColor];
  uint64_t v2 = [v0 imageWithTintColor:v1 renderingMode:1];

  return v2;
}

id AXTortoiseImage()
{
  v0 = AXUISettingsSpeakingRateSlowImage();
  id v1 = +[UIColor systemGrayColor];
  uint64_t v2 = [v0 imageWithTintColor:v1 renderingMode:1];

  return v2;
}

id AXAssetAndDataClient()
{
  if (AXAssetAndDataClient_onceToken != -1) {
    dispatch_once(&AXAssetAndDataClient_onceToken, &__block_literal_global_1);
  }
  v0 = (void *)AXAssetAndDataClient_Client;

  return v0;
}

BOOL AXPSIsBatterySaverMode()
{
  int out_token = 0;
  uint64_t v3 = 0;
  uint32_t v0 = notify_register_check("com.apple.system.lowpowermode", &out_token);
  BOOL result = 0;
  if (!v0)
  {
    uint32_t state = notify_get_state(out_token, &v3);
    notify_cancel(out_token);
    return !state && v3 != 0;
  }
  return result;
}

id AXLocalizedTitleForZoomLensMode(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:AXZoomLensModeWindow])
  {
    uint64_t v2 = @"ZOOM_LENS_MODE_WINDOW";
LABEL_7:
    uint64_t v3 = settingsLocString(v2, @"ZoomSettings");
    goto LABEL_8;
  }
  if ([v1 isEqualToString:AXZoomLensModeWindowAnchored])
  {
    uint64_t v2 = @"ZOOM_LENS_MODE_DOCKED";
    goto LABEL_7;
  }
  if ([v1 isEqualToString:AXZoomLensModeFullscreen])
  {
    uint64_t v2 = @"ZOOM_LENS_MODE_FULLSCREEN";
    goto LABEL_7;
  }
  _AXAssert();
  uint64_t v3 = 0;
LABEL_8:

  return v3;
}

id AXLocalizedTitleForDockPosition(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:AXZoomDockPositionTop])
  {
    uint64_t v2 = @"DOCK_POSITION_TOP";
LABEL_9:
    uint64_t v3 = settingsLocString(v2, @"ZoomSettings");
    goto LABEL_10;
  }
  if ([v1 isEqualToString:AXZoomDockPositionLeft])
  {
    uint64_t v2 = @"DOCK_POSITION_LEFT";
    goto LABEL_9;
  }
  if ([v1 isEqualToString:AXZoomDockPositionRight])
  {
    uint64_t v2 = @"DOCK_POSITION_RIGHT";
    goto LABEL_9;
  }
  if ([v1 isEqualToString:AXZoomDockPositionBottom])
  {
    uint64_t v2 = @"DOCK_POSITION_BOTTOM";
    goto LABEL_9;
  }
  _AXAssert();
  uint64_t v3 = 0;
LABEL_10:

  return v3;
}

id AXLocalizedTitleForSlugAction(unint64_t a1)
{
  if (a1 <= 3)
  {
    a1 = settingsLocString(off_208CF0[a1], @"ZoomSlugSettings");
  }
  return (id)a1;
}

id AXLocalizedTitleForColor(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 6)
  {
    id v4 = +[NSNumber numberWithInteger:a1];
    _AXLogWithFacility();

    uint64_t v1 = @"CONTROLLER_COLOR_WHITE";
  }
  else
  {
    uint64_t v1 = off_208D10[a1 - 1];
  }
  uint64_t v2 = settingsLocString(v1, @"ZoomSlugSettings");

  return v2;
}

uint64_t AXSettingsRestFingerToOpenIsAvailable()
{
  uint64_t result = MGGetBoolAnswer();
  if (result) {
    return AXDeviceIsMultiUser() ^ 1;
  }
  return result;
}

id AXLocalizedTitleForSpeechControllerAction(unint64_t a1)
{
  if (a1 <= 2)
  {
    a1 = settingsLocString(off_208D40[a1], @"SpeechSettings");
  }
  return (id)a1;
}

void AXGenerateAppNameSpecifiers(void *a1, void *a2, int a3)
{
}

void AXGenerateAppNameSpecifiersWithDetailClassAction(void *a1, void *a2, int a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v42 = a6;
  *((void *)&v42 + 1) = a7;
  id v41 = a1;
  id v43 = a2;
  if (a5)
  {
    v10 = settingsLocString(@"PRONUNCIATION_APPS_TITLE", @"VoiceOverSettings");
    a5 = +[PSSpecifier groupSpecifierWithName:v10];

    [v43 addObject:a5];
  }
  uint64_t v11 = 2;
  if (v42 == 0) {
    uint64_t v11 = 3;
  }
  uint64_t v40 = v11;
  if (a3)
  {
    v12 = settingsLocString(@"HOME_SCREEN", @"Accessibility");
    v13 = +[PSSpecifier preferenceSpecifierNamed:v12 target:v41 set:0 get:0 detail:(void)v42 cell:v40 edit:0];

    uint64_t v14 = AX_SpringBoardBundleName;
    [v13 setProperty:AX_SpringBoardBundleName forKey:@"BundleIdentifier"];
    [v13 setProperty:v14 forKey:PSIDKey];
    a5 = +[PKIconImageCache settingsIconCache];
    v15 = [a5 imageForKey:PKHomeScreenIconKey];
    [v13 setProperty:v15 forKey:PSIconImageKey];

    [v13 setControllerLoadAction:*((void *)&v42 + 1)];
    [v43 addObject:v13];
  }
  v16 = AXInstalledApps();
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v17 = [v16 countByEnumeratingWithState:&v47 objects:v51 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v48;
    uint64_t v44 = AX_SidecarBundleName;
    uint64_t v39 = PSIDKey;
    uint64_t v38 = PSLazyIconAppID;
    uint64_t v36 = PSIconImageKey;
    uint64_t v37 = PSLazyIconLoading;
    CFStringRef v20 = @"com.apple.webapp1";
    v45 = v16;
    uint64_t v46 = *(void *)v48;
    do
    {
      for (i = 0; i != v18; i = (char *)i + 1)
      {
        if (*(void *)v48 != v19) {
          objc_enumerationMutation(v16);
        }
        v22 = *(void **)(*((void *)&v47 + 1) + 8 * i);
        v23 = [v22 bundleIdentifier];
        if (([v23 isEqualToString:v20] & 1) == 0)
        {
          v24 = [v22 bundleIdentifier];
          if ([v24 isEqualToString:@"com.apple.webapp"])
          {
          }
          else
          {
            char IsPad = AXDeviceIsPad();
            if ((IsPad & 1) != 0
              || ([v22 bundleIdentifier],
                  a5 = objc_claimAutoreleasedReturnValue(),
                  ![a5 isEqualToString:v44]))
            {
              CFStringRef v26 = v20;
              v27 = [v22 applicationState];
              unsigned __int8 v28 = [v27 isRestricted];

              if ((IsPad & 1) == 0) {
              if (v28)
              }
              {
                v16 = v45;
                uint64_t v19 = v46;
                CFStringRef v20 = v26;
                continue;
              }
              v29 = [v22 localizedName];
              v23 = +[PSSpecifier preferenceSpecifierNamed:v29 target:v41 set:0 get:0 detail:(void)v42 cell:v40 edit:0];

              [v23 setControllerLoadAction:*((void *)&v42 + 1)];
              v30 = [v22 bundleIdentifier];
              [v23 setProperty:v30 forKey:v39];

              v31 = [v22 bundleIdentifier];
              [v23 setProperty:v31 forKey:@"BundleIdentifier"];

              v32 = [v22 bundleIdentifier];
              LODWORD(v29) = AXFlipsIconRightToLeftForAppID(v32);

              v33 = [v22 bundleIdentifier];
              v34 = v33;
              uint64_t v19 = v46;
              if (v29)
              {
                v35 = AXImageIconForAppID(v33);
                [v23 setProperty:v35 forKey:v36];
              }
              else
              {
                [v23 setProperty:v33 forKey:v38];

                [v23 setProperty:&__kCFBooleanTrue forKey:v37];
              }
              CFStringRef v20 = v26;
              [v43 addObject:v23];
              v16 = v45;
            }
            else
            {

              uint64_t v19 = v46;
            }
          }
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v47 objects:v51 count:16];
    }
    while (v18);
  }
}

void AXGenerateAppAndServiceNameSpecifiers(void *a1, void *a2)
{
}

id AXFlipsIconRightToLeftForAppID(void *a1)
{
  id v1 = a1;
  if (AXFlipsIconRightToLeftForAppID_onceToken != -1) {
    dispatch_once(&AXFlipsIconRightToLeftForAppID_onceToken, &__block_literal_global_499);
  }
  if ([UIApp userInterfaceLayoutDirection] == (char *)&dword_0 + 1) {
    id v2 = [(id)AXFlipsIconRightToLeftForAppID_FlipIconRightToLeftAppIDs containsObject:v1];
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id AXImageIconForAppID(void *a1)
{
  id v1 = a1;
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  uint64_t v3 = +[UIImage _applicationIconImageForBundleIdentifier:format:scale:](UIImage, "_applicationIconImageForBundleIdentifier:format:scale:", v1, 0);

  if ([UIApp userInterfaceLayoutDirection] == (char *)&dword_0 + 1)
  {
    id v4 = [v3 imageFlippedForRightToLeftLayoutDirection];
  }
  else
  {
    id v4 = v3;
  }
  double v5 = v4;

  return v5;
}

id AXSettingsDefaultPunctuationGroupUUID()
{
  return AXSSVoiceOverPunctuationGroupSome;
}

id AXSettingsNameForPunctuationGroupUUID(void *a1)
{
  id v1 = a1;
  if ([v1 isEqual:AXSSVoiceOverPunctuationGroupAll])
  {
    id v2 = @"PUNCTUATION_ALL";
  }
  else if ([v1 isEqual:AXSSVoiceOverPunctuationGroupSome])
  {
    id v2 = @"PUNCTUATION_SOME";
  }
  else
  {
    if (![v1 isEqual:AXSSVoiceOverPunctuationGroupNone])
    {
      double v5 = +[AXSSPunctuationManager sharedDatabase];
      uint64_t v6 = [v5 punctuationGroupForUUID:v1];
      v7 = [v6 name];

      if (v7)
      {
        id v8 = v7;
      }
      else
      {
        settingsLocString(@"PUNCTUATION_SOME", @"VoiceOverSettings");
        id v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      uint64_t v3 = v8;

      goto LABEL_8;
    }
    id v2 = @"PUNCTUATION_NONE";
  }
  uint64_t v3 = settingsLocString(v2, @"VoiceOverSettings");
LABEL_8:

  return v3;
}

id voiceOverLocalizedStringForKeyboardShortcutsFooterText()
{
  uint32_t v0 = +[AXSettings sharedInstance];
  id v1 = (char *)[v0 voiceOverKeyboardModifierChoice];

  if ((unint64_t)(v1 - 1) > 2)
  {
    id v2 = 0;
  }
  else
  {
    id v2 = settingsLocString(off_208D58[(void)(v1 - 1)], @"VoiceOverSettings");
  }
  uint64_t v3 = settingsLocString(@"vo.keyboard.shortcut.hint.text", @"VoiceOverSettings");
  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v2);

  return v4;
}

void sub_15B48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_164E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_17A14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_17B58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18290(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1AA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1ADB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1AF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id sharedBFFStyle()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2050000000;
  uint32_t v0 = (void *)getBFFStyleClass_softClass;
  uint64_t v8 = getBFFStyleClass_softClass;
  if (!getBFFStyleClass_softClass)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = __getBFFStyleClass_block_invoke;
    v4[3] = &unk_2089B8;
    v4[4] = &v5;
    __getBFFStyleClass_block_invoke((uint64_t)v4);
    uint32_t v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  uint64_t v2 = [v1 sharedStyle];

  return v2;
}

void sub_1C2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBFFStyleClass_block_invoke(uint64_t a1)
{
  v4[0] = 0;
  if (!SetupAssistantUILibraryCore_frameworkLibrary)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __SetupAssistantUILibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = off_2090B8;
    uint64_t v6 = 0;
    SetupAssistantUILibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!SetupAssistantUILibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("BFFStyle");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getBFFStyleClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getBFFStyleClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SetupAssistantUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SetupAssistantUILibraryCore_frameworkLibrary = result;
  return result;
}

void sub_241EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *a15, uint64_t a16, id *a17, uint64_t a18, id *a19, id *a20,id *a21,id *a22,id *a23,uint64_t a24,uint64_t a25,uint64_t a26,id *a27,id *a28,id *a29,uint64_t a30,uint64_t a31,id *a32,id *a33,uint64_t a34,uint64_t a35,id *a36,id *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id *a42,id *a43,id *a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,id *a50,id *a51,id *a52,id *a53,id *a54,id *a55,uint64_t a56,id *location,id *a58,id *a59,id *a60,id *a61,id *a62,id *a63)
{
  objc_destroyWeak(v71);
  objc_destroyWeak(v70);
  objc_destroyWeak(location);
  objc_destroyWeak(a58);
  objc_destroyWeak(a59);
  objc_destroyWeak(a60);
  objc_destroyWeak(a61);
  objc_destroyWeak(a62);
  objc_destroyWeak(a63);
  objc_destroyWeak(a64);
  objc_destroyWeak(a65);
  objc_destroyWeak(a66);
  objc_destroyWeak(a67);
  objc_destroyWeak(a68);
  objc_destroyWeak(a69);
  objc_destroyWeak(a70);
  objc_destroyWeak((id *)(v72 - 112));
  _Unwind_Resume(a1);
}

void sub_2A024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_3283C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_335AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_35670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_39CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_3A12C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_3A45C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_3C384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_40170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_40234(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_41518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GuidedAccessDescriptionForAutoLockTime(uint64_t a1)
{
  if (AXSGuidedAccessAutoLockTimeMirrorSystem == a1)
  {
    id v1 = @"AUTO_LOCK_MIRROR_SYSTEM";
  }
  else
  {
    if (AXSGuidedAccessAutoLockTimeNever != a1)
    {
      if (a1 > 59)
      {
        id v4 = settingsLocString(@"TIME_IN_MINUTES", @"GuidedAccessSettings");
        +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v4, a1 / 0x3CuLL);
      }
      else
      {
        id v4 = settingsLocString(@"TIME_IN_SECONDS", @"GuidedAccessSettings");
        +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v4, a1);
      uint64_t v3 = };

      goto LABEL_10;
    }
    id v1 = @"AUTO_LOCK_NEVER";
  }
  uint64_t v3 = settingsLocString(v1, @"GuidedAccessSettings");
LABEL_10:

  return v3;
}

void sub_42B58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_42C28(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_42DC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id _accessibilityiTunesSettings_0(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_44248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_459E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_45B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_46CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_471A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_47C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_48CBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_491B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _accessibilitySettingsChanged(uint64_t a1, void *a2)
{
  return [a2 updateMotionCuesInCarStatus];
}

void sub_4E3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id _forceTouchEnabledSettingsChanged(uint64_t a1, void *a2)
{
  return [a2 performSelector:"reloadSpecifiers" withObject:0 afterDelay:0.5];
}

void sub_524C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _accessibilityiTunesSettings_1(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiersFromNotification];
}

id _defaultRouteChanged(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierFromID:@"CALL_AUDIO_ROUTING"];
}

void sub_539F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _accessibilityUpdateSettings(uint64_t a1, void *a2)
{
  return [a2 performSelector:"accessibilitySettingsDidChange" withObject:0 afterDelay:0.0];
}

void sub_57950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_588D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class __getAPGuardClass_block_invoke(uint64_t a1)
{
  v4[0] = 0;
  if (!AppProtectionLibraryCore_frameworkLibrary)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __AppProtectionLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = off_209E90;
    uint64_t v6 = 0;
    AppProtectionLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AppProtectionLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("APGuard");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    __getAPGuardClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAPGuardClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AppProtectionLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppProtectionLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_5A49C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id liveTranscriptionEnabledUpdated(uint64_t a1, void *a2)
{
  if (a2) {
    return [a2 performSelector:"updateLiveTranscriptionEnabled" withObject:0 afterDelay:0.0];
  }
  return result;
}

void addConstraint(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, double a5)
{
  id v9 = a3;
  id v10 = +[NSLayoutConstraint constraintWithItem:a1 attribute:a2 relatedBy:0 toItem:v9 attribute:a4 multiplier:1.0 constant:a5];
  [v9 addConstraint:v10];
}

void sub_5EDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return NSRequestConcreteImplementation();
}

__CFString *siriSpeakingSampleLocString(void *a1, double a2)
{
  id v3 = a1;
  id v4 = AXSettingsBundle();
  long long v5 = [v4 localizations];
  id v17 = v3;
  uint64_t v6 = +[NSArray arrayWithObjects:&v17 count:1];
  uint64_t v7 = +[NSBundle preferredLocalizationsFromArray:v5 forPreferences:v6];
  uint64_t v8 = [v7 firstObject];

  id v9 = AXSettingsBundle();
  id v10 = [v9 localizedStringForKey:@"SIRI_SPEAKING_SAMPLE" value:@"SIRI_SPEAKING_SAMPLE" table:@"SiriSettings" localization:v8];

  uint64_t v11 = +[NSLocale localeWithLocaleIdentifier:v8];
  id v16 = 0;
  v12 = (__CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithValidatedFormat:validFormatSpecifiers:locale:error:", v10, @"%f", v11, &v16, a2 * 100.0);
  id v13 = v16;
  if (v13)
  {
    uint64_t v14 = AXLogCommon();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      siriSpeakingSampleLocString_cold_1((uint64_t)v13, (uint64_t)v10, v14);
    }

    v12 = &stru_20F6B8;
  }

  return v12;
}

void sub_62000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_63694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v15 - 120));
  objc_destroyWeak((id *)(v15 - 112));
  _Unwind_Resume(a1);
}

void sub_63710()
{
}

Class __getBBSettingsGatewayClass_block_invoke(uint64_t a1)
{
  v4[0] = 0;
  if (!BulletinBoardLibraryCore_frameworkLibrary)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __BulletinBoardLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = off_20A058;
    uint64_t v6 = 0;
    BulletinBoardLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!BulletinBoardLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("BBSettingsGateway");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getBBSettingsGatewayClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getBBSettingsGatewayClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __BulletinBoardLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  BulletinBoardLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_642AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_64934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_6935C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_694C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_6A10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_6A534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_6C790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_6CCE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

uint64_t _kShotModelCreationCompleted(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

uint64_t _kShotModelCreationError(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

id ___kShotModelCreationCompleted_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _kShotModelCreationCompleted];
}

id ___kShotModelCreationError_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _kShotModelCreationError];
}

void sub_715B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_747CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_74D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_77034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location)
{
  objc_destroyWeak(v43);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_77E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_785F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _handleSettingsChange(uint64_t a1, void *a2, uint64_t a3)
{
  return [a2 performSelector:"handleSettingsChange:" withObject:a3 afterDelay:0.5];
}

void sub_793DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_79F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_79FD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_7B250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7CECC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _handleAssistiveTouchHardwareToggled(uint64_t a1, void *a2)
{
  return [a2 _handleAssistiveTouchHardwareToggled:0];
}

void sub_80CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_81ECC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_82864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_83640(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_844D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_848F4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_85250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_892D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_8B604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return objc_opt_class();
}

void sub_8C718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_8D62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_8EFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v9 - 216));
  _Unwind_Resume(a1);
}

void sub_972F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_9746C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_975A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t VOTBrailleKeyIsSupported(void *a1)
{
  id v1 = a1;
  if (VOTBrailleInEightDotMode()) {
    uint64_t IsSupportedInEightDot = VOTBrailleKeyIsSupportedInEightDot(v1);
  }
  else {
    uint64_t IsSupportedInEightDot = 1;
  }

  return IsSupportedInEightDot;
}

BOOL VOTBrailleInEightDotMode()
{
  uint64_t v0 = (void *)_AXSVoiceOverTouchCopyBrailleTableIdentifier();
  id v1 = [objc_alloc((Class)BRLTTable) initWithIdentifier:v0];
  uint64_t v2 = v1;
  if (v0 && ![v1 supportsTranslationMode8Dot])
  {
    BOOL v4 = 0;
  }
  else
  {
    uint64_t v3 = +[AXSettings sharedInstance];
    BOOL v4 = [v3 voiceOverTouchBrailleDisplayInputMode] == (char *)&dword_0 + 2;
  }
  return v4;
}

uint64_t VOTBrailleKeyIsSupportedInEightDot(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"67074"]) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"67330"] ^ 1;
  }

  return v2;
}

__CFString *VOTBrailleButtonName(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = [a2 buttonNamesForInputIdentifier:a1 forDisplayWithToken:a3];
  if ([v3 count])
  {
    unint64_t v4 = 0;
    long long v5 = &stru_20F6B8;
    do
    {
      if (v4)
      {
        uint64_t v6 = [(__CFString *)v5 stringByAppendingString:@" + "];

        long long v5 = (__CFString *)v6;
      }
      uint64_t v7 = [v3 objectAtIndexedSubscript:v4];
      uint64_t v8 = [(__CFString *)v5 stringByAppendingString:v7];

      ++v4;
      long long v5 = v8;
    }
    while ((unint64_t)[v3 count] > v4);
  }
  else
  {
    uint64_t v8 = &stru_20F6B8;
  }

  return v8;
}

void sub_97A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_98710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13, id *a14)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)(v15 - 120));
  objc_destroyWeak((id *)(v15 - 112));
  _Unwind_Resume(a1);
}

void sub_99ECC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_9A214(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_9AE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_9C1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_9DE9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id GAXSLocString(void *a1)
{
  id v1 = a1;
  if (GAXSLocString_onceToken != -1) {
    dispatch_once(&GAXSLocString_onceToken, &__block_literal_global_361);
  }
  if ([v1 isEqualToString:@"GUIDED_ACCESS_ALLOW_LOCKSCREEN"])
  {
    uint64_t v2 = +[UIDevice currentDevice];
    uint64_t v3 = (char *)[v2 userInterfaceIdiom];

    if (v3 == (unsigned char *)&dword_0 + 1) {
      CFStringRef v4 = @"_IPAD";
    }
    else {
      CFStringRef v4 = @"_IPHONE";
    }
    uint64_t v5 = [v1 stringByAppendingString:v4];

    id v1 = (id)v5;
  }
  uint64_t v6 = +[NSBundle bundleForClass:GAXSLocString_principalClass];
  uint64_t v7 = [v6 localizedStringForKey:v1 value:&stru_20F6B8 table:@"GuidedAccessSettings"];

  return v7;
}

void sub_A099C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_A2AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _accessibilityiTunesSettings_2(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiersFromNotification];
}

void sub_A3A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A5864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A8044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A9068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _pencilSettingsChanged(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_AB108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_AB6F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_AEAF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_AF3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_AF568(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_B1C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SCATLocalizedHeadMovementSummary()
{
  uint64_t v0 = AXParameterizedLocalizedString();

  return v0;
}

void sub_B40C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_B478C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_B5544(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class __getAPGuardClass_block_invoke_0(uint64_t a1)
{
  v4[0] = 0;
  if (!AppProtectionLibraryCore_frameworkLibrary_0)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __AppProtectionLibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = off_20B0A0;
    uint64_t v6 = 0;
    AppProtectionLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AppProtectionLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("APGuard");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    __getAPGuardClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAPGuardClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AppProtectionLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  AppProtectionLibraryCore_frameworkLibrary_0 = result;
  return result;
}

void sub_B64B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_B7BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_B80E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id GAXSTimeRestrictionsLocString(void *a1)
{
  uint64_t v1 = GAXSTimeRestrictionsLocString_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&GAXSTimeRestrictionsLocString_onceToken, &__block_literal_global_43);
  }
  uint64_t v3 = +[NSBundle bundleForClass:GAXSTimeRestrictionsLocString_principalClass];
  CFStringRef v4 = [v3 localizedStringForKey:v2 value:&stru_20F6B8 table:@"GuidedAccessTimeRestrictionsSettings"];

  return v4;
}

void sub_B8E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BA7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BEE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_BF920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C46E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void InitializeMap()
{
  v10[0] = @"BackgroundRefreshDescription";
  v10[1] = @"NSBluetoothPeripheralUsageDescription";
  v11[0] = &off_229E70;
  v11[1] = &off_229E88;
  v10[2] = @"NSBluetoothAlwaysUsageDescription";
  v10[3] = @"NSCalendarsUsageDescription";
  v11[2] = &off_229E88;
  v11[3] = &off_229EA0;
  v10[4] = @"NSCameraUsageDescription";
  v10[5] = @"NSContactsUsageDescription";
  v11[4] = &off_229EB8;
  v11[5] = &off_229ED0;
  v10[6] = @"NSUserTrackingUsageDescription";
  v10[7] = @"NSFaceIDUsageDescription";
  v11[6] = &off_229EE8;
  v11[7] = &off_229F00;
  v10[8] = @"NSFocusStatusUsageDescription";
  v10[9] = @"NSHomeKitUsageDescription";
  v11[8] = &off_229F18;
  v11[9] = &off_229F30;
  v10[10] = @"NSLocalNetworkUsageDescription";
  v10[11] = @"NSLocationAlwaysAndWhenInUseUsageDescription";
  v11[10] = &off_229F48;
  v11[11] = &off_229F60;
  v10[12] = @"NSLocationWhenInUseUsageDescription";
  v10[13] = @"NSLocationTemporaryUsageDescriptionDictionary";
  v11[12] = &off_229F60;
  v11[13] = &off_229F60;
  v10[14] = @"NSAppleMusicUsageDescription";
  v10[15] = @"NSMicrophoneUsageDescription";
  v11[14] = &off_229F78;
  v11[15] = &off_229F90;
  v10[16] = @"NSMotionUsageDescription";
  v10[17] = @"NSNearbyInteractionUsageDescription";
  v11[16] = &off_229FA8;
  v11[17] = &off_229FC0;
  v10[18] = @"NotificationsDescription";
  v10[19] = @"NSPhotoLibraryAddUsageDescription";
  v11[18] = &off_229FD8;
  v11[19] = &off_229FF0;
  v10[20] = @"NSPhotoLibraryUsageDescription";
  v10[21] = @"NSRemindersUsageDescription";
  v11[20] = &off_229FF0;
  v11[21] = &off_22A008;
  v10[22] = @"NSSiriUsageDescription";
  v10[23] = @"NSSpeechRecognitionUsageDescription";
  v11[22] = &off_22A020;
  v11[23] = &off_22A038;
  v10[24] = @"NSUserAvailabilityNameUsageDescription";
  v10[25] = @"WebKitIntelligentTrackingPrevention";
  v11[24] = &off_229F18;
  v11[25] = &off_22A050;
  uint64_t v0 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:26];
  uint64_t v1 = (void *)TCCKeyToPolicyMap;
  TCCKeyToPolicyMap = v0;

  v8[0] = @"BackgroundRefreshDescription";
  v8[1] = @"NSBluetoothPeripheralUsageDescription";
  v9[0] = @"Background App Refresh";
  v9[1] = @"Bluetooth";
  v8[2] = @"NSBluetoothAlwaysUsageDescription";
  v8[3] = @"NSCalendarsUsageDescription";
  v9[2] = @"Bluetooth";
  v9[3] = @"Calendar";
  v9[4] = @"Camera";
  v9[5] = @"Contacts";
  v9[6] = @"Allow Tracking";
  v9[7] = @"Face ID";
  v8[4] = @"NSCameraUsageDescription";
  v8[5] = @"NSContactsUsageDescription";
  v9[8] = @"Focus";
  v9[9] = @"Home Data";
  v8[6] = @"NSUserTrackingUsageDescription";
  v8[7] = @"NSFaceIDUsageDescription";
  v8[10] = @"NSLocalNetworkUsageDescription";
  v8[11] = @"NSLocationAlwaysAndWhenInUseUsageDescription";
  v8[8] = @"NSFocusStatusUsageDescription";
  v8[9] = @"NSHomeKitUsageDescription";
  v9[10] = @"Local Network";
  v9[11] = @"Location";
  v8[12] = @"NSLocationWhenInUseUsageDescription";
  v8[13] = @"NSLocationTemporaryUsageDescriptionDictionary";
  v9[12] = @"Location";
  v9[13] = @"Location";
  v8[14] = @"NSAppleMusicUsageDescription";
  v8[15] = @"NSMicrophoneUsageDescription";
  v8[16] = @"NSMotionUsageDescription";
  v9[14] = @"Media & Apple Music";
  v9[15] = @"Microphone";
  v8[17] = @"NSNearbyInteractionUsageDescription";
  v8[18] = @"NotificationsDescription";
  v9[16] = @"Motion & Fitness";
  v9[17] = @"Nearby Interactions";
  v8[19] = @"NSPhotoLibraryAddUsageDescription";
  v8[20] = @"NSPhotoLibraryUsageDescription";
  v9[18] = @"Notifications";
  v9[19] = @"Photos";
  v8[21] = @"NSRemindersUsageDescription";
  v8[22] = @"NSSiriUsageDescription";
  v9[20] = @"Photos";
  v9[21] = @"Reminders";
  v8[23] = @"NSSpeechRecognitionUsageDescription";
  v9[22] = @"Siri_And_Search";
  v9[23] = @"Speech Recognition";
  v8[24] = @"NSUserAvailabilityNameUsageDescription";
  v9[24] = @"Focus";
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:25];
  uint64_t v3 = (void *)TCCKeyToSpecifierIdentifierMap;
  TCCKeyToSpecifierIdentifierMap = v2;

  v6[0] = @"PSSystemPolicyOptionsAssistantAndSearch";
  v6[1] = @"PSSystemPolicyOptionsBackgroundRefresh";
  v7[0] = @"NSSiriUsageDescription";
  v7[1] = @"BackgroundRefreshDescription";
  v6[2] = @"PSSystemPolicyOptionsBluetooth";
  v6[3] = @"PSSystemPolicyOptionsCamera";
  v7[2] = @"NSBluetoothAlwaysUsageDescription";
  v7[3] = @"NSCameraUsageDescription";
  v6[4] = @"PSSystemPolicyOptionsCrossAppTracking";
  v6[5] = @"PSSystemPolicyOptionsCrossSiteTracking";
  v7[4] = @"NSUserTrackingUsageDescription";
  v7[5] = @"WebKitIntelligentTrackingPrevention";
  v6[6] = @"PSSystemPolicyOptionsFaceID";
  v6[7] = @"PSSystemPolicyOptionsLocation";
  v7[6] = @"NSFaceIDUsageDescription";
  v7[7] = @"NSLocationWhenInUseUsageDescription";
  v6[8] = @"PSSystemPolicyOptionsMediaLibrary";
  v6[9] = @"PSSystemPolicyOptionsMicrophone";
  v7[8] = @"NSAppleMusicUsageDescription";
  v7[9] = @"NSMicrophoneUsageDescription";
  v6[10] = @"PSSystemPolicyOptionsMotion";
  v6[11] = @"PSSystemPolicyOptionsNearbyInteraction";
  v7[10] = @"NSMotionUsageDescription";
  v7[11] = @"NSNearbyInteractionUsageDescription";
  v6[12] = @"PSSystemPolicyOptionsNetwork";
  v6[13] = @"PSSystemPolicyOptionsNotifications";
  v7[12] = @"NSLocalNetworkUsageDescription";
  v7[13] = @"NotificationsDescription";
  v6[14] = @"PSSystemPolicyOptionsPrivacyPhotos";
  v6[15] = @"PSSystemPolicyOptionsPrivacyAddressBook";
  v7[14] = @"NSPhotoLibraryUsageDescription";
  v7[15] = @"NSContactsUsageDescription";
  v6[16] = @"PSSystemPolicyOptionsPrivacyCalendar";
  v6[17] = @"PSSystemPolicyOptionsPrivacyReminders";
  v7[16] = @"NSCalendarsUsageDescription";
  v7[17] = @"NSRemindersUsageDescription";
  v6[18] = @"PSSystemPolicyOptionsSpeechRecognition";
  v6[19] = @"PSSystemPolicyOptionsUserAvailability";
  v7[18] = @"NSSpeechRecognitionUsageDescription";
  v7[19] = @"NSFocusStatusUsageDescription";
  v6[20] = @"PSSystemPolicyOptionsWillow";
  v7[20] = @"NSHomeKitUsageDescription";
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:21];
  long long v5 = (void *)SpecifierIdentifierToTCCKeyMap;
  SpecifierIdentifierToTCCKeyMap = v4;
}

void sub_C6DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_C8E58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_C9978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_CBACC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_CD10C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _handleContinuityDisplayStateChanged_0(uint64_t a1, void *a2)
{
  if (a2) {
    return [a2 performSelector:"_updateSetupAVSButtonForOneness" withObject:0 afterDelay:0.0];
  }
  return result;
}

void sub_CF4D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

id _settingsChange(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_D1100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D16FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D1CC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_D5004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_D9328(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _handleContinuityDisplayStateChanged_1(uint64_t a1, void *a2)
{
  if (a2) {
    return [a2 performSelector:"_updateOnDeviceEyeTrackingSwitchForOneness" withObject:0 afterDelay:0.0];
  }
  return result;
}

void sub_DAA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_DBD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13, id *a14, id *a15, id *a16, id *a17, id *a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v22);
  objc_destroyWeak(v18);
  objc_destroyWeak(v20);
  objc_destroyWeak(v21);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a11);
  objc_destroyWeak(a14);
  objc_destroyWeak(a13);
  objc_destroyWeak(a16);
  objc_destroyWeak(a15);
  objc_destroyWeak(a17);
  objc_destroyWeak(a18);
  objc_destroyWeak((id *)(v23 - 112));
  _Unwind_Resume(a1);
}

void sub_DD384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, id *a13, id *a14, id *a15, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak(a13);
  objc_destroyWeak((id *)(v16 - 136));
  _Unwind_Resume(a1);
}

void sub_DD8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_E0FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_3(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_E3BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_E434C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_E566C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_EBC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F7A98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_F7C10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_F7F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F80B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_5(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x2Au);
}

void sub_F8CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F92C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

_UNKNOWN **AXCaptionColorDefault(int a1)
{
  if ((a1 - 1) > 2) {
    return 0;
  }
  else {
    return off_20BC00[a1 - 1];
  }
}

BOOL AXCaptionResetDefaultActiveProfile()
{
  uint64_t v0 = (void *)MACaptionAppearancePrefCopyProfileIDs();
  uint64_t v1 = [v0 sortedArrayUsingComparator:&__block_literal_global_61];

  id v2 = [v1 count];
  if (v2)
  {
    [v1 objectAtIndex:0];
    MACaptionAppearancePrefSetActiveProfileID();
  }

  return v2 != 0;
}

id AXCaptionColors(int a1)
{
  if (AXCaptionColors_onceToken != -1) {
    dispatch_once(&AXCaptionColors_onceToken, &__block_literal_global_277);
  }
  if ((a1 & 0xFFFFFFFE) == 2)
  {
    id v2 = &AXCaptionColors_WindowColors;
LABEL_7:
    id v3 = (id)*v2;
    goto LABEL_9;
  }
  if (a1 == 1)
  {
    id v2 = &AXCaptionColors_TextColors;
    goto LABEL_7;
  }
  id v3 = 0;
LABEL_9:

  return v3;
}

id AXCaptionTransparency(int a1)
{
  if (AXCaptionTransparency_onceToken != -1) {
    dispatch_once(&AXCaptionTransparency_onceToken, &__block_literal_global_427_0);
  }
  if ((a1 - 1) > 2) {
    id v2 = 0;
  }
  else {
    id v2 = (id)*off_20BC18[a1 - 1];
  }

  return v2;
}

id AXCaptionTransparencyDefault(int a1)
{
  uint64_t v1 = AXCaptionTransparency(a1);
  id v2 = [v1 objectAtIndex:0];

  return v2;
}

void AXCaptionRemoveUserAddedFont(void *a1)
{
  id v1 = a1;
  id v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v2 arrayForKey:@"ExtraFonts"];

  uint64_t v4 = +[NSMutableArray array];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v15;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v11 = objc_msgSend(v10, "objectForKeyedSubscript:", @"name", (void)v14);
        unsigned __int8 v12 = [v11 isEqualToString:v1];

        if ((v12 & 1) == 0) {
          [v4 addObject:v10];
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v7);
  }

  id v13 = +[NSUserDefaults standardUserDefaults];
  [v13 setObject:v4 forKey:@"ExtraFonts"];
}

id AXCaptionDefaultFontForCategory(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = AXCaptionFonts();
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        uint64_t v8 = objc_msgSend(v7, "objectForKeyedSubscript:", @"category", (void)v12);
        uint64_t v9 = (int)[v8 intValue];

        if (v9 == a1)
        {
          id v10 = v7;
          goto LABEL_11;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  id v10 = 0;
LABEL_11:

  return v10;
}

id AXCaptionFonts()
{
  if (AXCaptionFonts_onceToken != -1) {
    dispatch_once(&AXCaptionFonts_onceToken, &__block_literal_global_538_0);
  }
  uint64_t v0 = AXCaptionExtraUserFonts();
  if (v0)
  {
    id v1 = [(id)AXCaptionFonts_Fonts arrayByAddingObjectsFromArray:v0];
  }
  else
  {
    id v1 = (id)AXCaptionFonts_Fonts;
  }
  id v2 = v1;

  return v2;
}

id AXCaptionFontCategoryName(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
  {
    id v2 = 0;
  }
  else
  {
    id v2 = settingsLocString(off_20BC30[a1 - 1], @"CaptioningStyle");
  }
  return v2;
}

id AXCaptionExtraUserFonts()
{
  uint64_t v0 = +[NSUserDefaults standardUserDefaults];
  uint64_t v1 = [v0 arrayForKey:@"ExtraFonts"];

  return v1;
}

void AXCaptionAddExtraUserFont(void *a1)
{
  id v6 = a1;
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 arrayForKey:@"ExtraFonts"];
  id v3 = [v2 mutableCopy];

  if (!v3) {
    id v3 = objc_alloc_init((Class)NSMutableArray);
  }
  id v4 = [v6 mutableCopy];
  [v4 setObject:&__kCFBooleanTrue forKey:@"isUserAddedFont"];
  [v3 addObject:v4];
  uint64_t v5 = +[NSUserDefaults standardUserDefaults];
  [v5 setObject:v3 forKey:@"ExtraFonts"];
}

id AXCaptionTextEdgeStyleDefault()
{
  uint64_t v0 = AXCaptionTextEdgeStyles();
  uint64_t v1 = [v0 objectAtIndex:0];

  return v1;
}

id AXCaptionTextEdgeStyles()
{
  if (AXCaptionTextEdgeStyles_onceToken != -1) {
    dispatch_once(&AXCaptionTextEdgeStyles_onceToken, &__block_literal_global_659);
  }
  uint64_t v0 = (void *)AXCaptionTextEdgeStyles_Edges;

  return v0;
}

id AXCaptionDefaultTextSize()
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v0 = AXCaptionTextSizes();
  id v1 = [v0 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = *(void *)v11;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(void *)v11 != v3) {
          objc_enumerationMutation(v0);
        }
        uint64_t v5 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        id v6 = objc_msgSend(v5, "objectForKey:", @"default", (void)v10);
        unsigned __int8 v7 = [v6 BOOLValue];

        if (v7)
        {
          uint64_t v8 = [v5 objectForKey:@"value"];
          goto LABEL_11;
        }
      }
      id v2 = [v0 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_11:

  return v8;
}

id AXCaptionTextSizes()
{
  if (AXCaptionTextSizes_onceToken != -1) {
    dispatch_once(&AXCaptionTextSizes_onceToken, &__block_literal_global_708);
  }
  uint64_t v0 = (void *)AXCaptionTextSizes_Sizes;

  return v0;
}

id AXCaptionTextSizeForRelativeSize(uint64_t a1)
{
  AXCaptionTextSizes();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v14;
    while (2)
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v14 != v4) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        unsigned __int8 v7 = [v6 objectForKeyedSubscript:@"relativeSize"];
        uint64_t v8 = +[NSNumber numberWithLong:a1];
        unsigned __int8 v9 = [v7 isEqual:v8];

        if (v9)
        {
          long long v10 = [v6 objectForKeyedSubscript:@"value"];
          goto LABEL_11;
        }
      }
      id v3 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  long long v10 = 0;
LABEL_11:

  return v10;
}

id AXCaptionRelativeTextSizeForSize(void *a1)
{
  id v1 = a1;
  AXCaptionTextSizes();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v14;
    id v6 = &stru_20 + 8;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        unsigned __int8 v9 = objc_msgSend(v8, "objectForKeyedSubscript:", @"value", (void)v13);
        unsigned __int8 v10 = [v9 isEqual:v1];

        if (v10)
        {
          long long v11 = [v8 objectForKeyedSubscript:@"relativeSize"];
          id v6 = [v11 longValue];

          goto LABEL_12;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  else
  {
    id v6 = &stru_20 + 8;
  }
LABEL_12:

  return v6;
}

id ClarityUIDisplayNameForApp(void *a1)
{
  id v1 = a1;
  id v23 = 0;
  id v2 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:v1 allowPlaceholder:0 error:&v23];
  id v3 = v23;
  if (v3)
  {
    id v4 = CLFLogCommon();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v27 = v1;
      __int16 v28 = 2112;
      id v29 = v3;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "Error getting bundle record for app with identifier %@: %@", buf, 0x16u);
    }
    uint64_t v5 = 0;
  }
  else
  {
    id v18 = v2;
    id v6 = [v2 URL];
    id v4 = +[NSBundle bundleWithURL:v6];

    unsigned __int8 v7 = [v4 localizedInfoDictionary];
    uint64_t v8 = [v4 infoDictionary];
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    v24[0] = CLFClarityDisplayNameKey;
    v24[1] = _kCFBundleDisplayNameKey;
    v24[2] = kCFBundleNameKey;
    unsigned __int8 v9 = +[NSArray arrayWithObjects:v24 count:3];
    id v10 = [v9 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v5 = 0;
      uint64_t v12 = *(void *)v20;
      id v17 = v1;
      while (2)
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v20 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void *)(*((void *)&v19 + 1) + 8 * i);
          long long v15 = [v7 objectForKeyedSubscript:v14];

          if ([v15 length])
          {
            uint64_t v5 = v15;
LABEL_17:
            id v1 = v17;
            goto LABEL_18;
          }
          uint64_t v5 = [v8 objectForKeyedSubscript:v14];

          if ([v5 length]) {
            goto LABEL_17;
          }
        }
        id v11 = [v9 countByEnumeratingWithState:&v19 objects:v25 count:16];
        id v1 = v17;
        if (v11) {
          continue;
        }
        break;
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
LABEL_18:

    id v3 = 0;
    id v2 = v18;
  }

  return v5;
}

id ClarityUIAllInstalledAppIdentifiers()
{
  uint64_t v0 = +[AXSpringBoardServer server];
  id v1 = [v0 installedApps];

  id v2 = [v1 allKeys];
  id v3 = +[NSMutableSet setWithArray:v2];

  unsigned int v4 = [v3 containsObject:AX_CameraBundleName];
  unsigned int v5 = [v3 containsObject:AX_PhotosBundleName];
  if (v4)
  {
    uint64_t v14 = AX_ClarityCameraBundleName;
    id v6 = +[NSArray arrayWithObjects:&v14 count:1];
    [v3 addObjectsFromArray:v6];
  }
  if (v5)
  {
    uint64_t v13 = AX_ClarityPhotosBundleName;
    unsigned __int8 v7 = +[NSArray arrayWithObjects:&v13 count:1];
    [v3 addObjectsFromArray:v7];
  }
  if (AXIsInternalInstall())
  {
    uint64_t v8 = +[AXSpringBoardServer server];
    unsigned __int8 v9 = [v8 internalApps];

    id v10 = [v9 allKeys];
    [v3 addObjectsFromArray:v10];
  }
  id v11 = [v3 copy];

  return v11;
}

void sub_FF9A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1028FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBFFStyleClass_block_invoke_0(uint64_t a1)
{
  v4[0] = 0;
  if (!SetupAssistantUILibraryCore_frameworkLibrary_0)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = __SetupAssistantUILibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = off_20BDA8;
    uint64_t v6 = 0;
    SetupAssistantUILibraryCore_frameworkLibrary_0 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!SetupAssistantUILibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("BFFStyle");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)__getBFFStyleClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getBFFStyleClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SetupAssistantUILibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  SetupAssistantUILibraryCore_frameworkLibrary_0 = result;
  return result;
}

void sub_103608(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_105D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_105FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_10D6C0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_1121FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _accessibilitySettingsChanged_0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

id ___accessibilitySettingsChanged_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

__CFString *_AXMapSpecificLanguageToGeneralLanguageIfNeeded(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"es-ES"])
  {
    uint64_t v2 = @"es";
  }
  else if ([v1 isEqualToString:@"no-NO"])
  {
    uint64_t v2 = @"no";
  }
  else if ([v1 isEqualToString:@"fr-FR"])
  {
    uint64_t v2 = @"fr";
  }
  else if ([v1 isEqualToString:@"nl-NL"])
  {
    uint64_t v2 = @"nl";
  }
  else
  {
    uint64_t v2 = (__CFString *)v1;
  }

  return v2;
}

void sub_116AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1177CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_117810()
{
}

uint64_t _kShotModelCreationCompleted_0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

uint64_t _kShotModelCreationError_0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

id ___kShotModelCreationError_block_invoke_0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _kShotModelCreationError];
}

id ___kShotModelCreationCompleted_block_invoke_0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _kShotModelCreationCompleted];
}

void sub_11A058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id AXSettingsNameForAudioDuckingMode(unint64_t a1)
{
  if (a1 > 2)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = settingsLocString(off_20C0E0[a1], @"VoiceOverSettings");
  }
  return v2;
}

void sub_11D6B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t _kShotModelSimilarityWarning(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return AXPerformBlockAsynchronouslyOnMainThread();
  }
  return result;
}

void sub_11DCF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id ___kShotModelSimilarityWarning_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _kShotModelSimilarityWarning];
}

void sub_1210D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_123CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _reloadSpecs(uint64_t a1, void *a2)
{
  return [a2 _reloadSpecs];
}

void sub_1251AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *a13, id *a14, uint64_t a15, id *location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31,id a32)
{
}

void sub_1271C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _accessibilitySettingsChanged_1(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_128910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_12B44C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_12BD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v16 - 112));
  _Unwind_Resume(a1);
}

void sub_12BF90(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_12C374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id AXLocalizedNameForMIDINote()
{
  unint64_t v0 = AXMIDINoteValueForNoteOrdinal();
  AXMIDINoteOctaveForNoteOrdinal();
  if (v0 > 0xB) {
    CFStringRef v1 = &stru_20F6B8;
  }
  else {
    CFStringRef v1 = off_20C4E8[v0];
  }
  uint64_t v2 = AXFormatInteger();
  id v3 = AXFormatInteger();
  uint64_t v4 = +[NSString stringWithFormat:@"%@ : %@-%@", v2, v1, v3];

  return v4;
}

__CFString *AXLocalizedNameForMIDIChannel(uint64_t a1)
{
  if ((int)a1 > 127)
  {
    if ((int)a1 <= 2047)
    {
      if ((int)a1 > 511)
      {
        if (a1 == 512 || a1 == 1024) {
          goto LABEL_24;
        }
      }
      else if (a1 == 128 || a1 == 256)
      {
        goto LABEL_24;
      }
    }
    else if ((int)a1 < 0x2000)
    {
      if (a1 == 2048 || a1 == 4096) {
        goto LABEL_24;
      }
    }
    else if (a1 == 0x2000 || a1 == 0x4000 || a1 == 0x8000)
    {
LABEL_24:
      id v3 = AXFormatInteger();
      AXParameterizedLocalizedString();
      CFStringRef v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

      goto LABEL_25;
    }
    goto LABEL_28;
  }
  if ((int)a1 > 15)
  {
    if (a1 == 16 || a1 == 32 || a1 == 64) {
      goto LABEL_24;
    }
LABEL_28:
    uint64_t v4 = +[NSNumber numberWithUnsignedShort:a1];
    _AXAssert();

    CFStringRef v1 = @"Unknown";
    goto LABEL_25;
  }
  switch((int)a1)
  {
    case 0:
      AXParameterizedLocalizedString();
      CFStringRef v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
    case 1:
    case 2:
    case 4:
    case 8:
      goto LABEL_24;
    default:
      goto LABEL_28;
  }
LABEL_25:

  return v1;
}

void sub_12E01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __credentialSetWithPasscodeCredential_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = +[NSData dataWithBytes:a2 length:a3];
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (aks_verify_password(0, (const char *)[*(id *)(a1 + 32) UTF8String], (uint64_t)objc_msgSend(*(id *)(a1 + 32), "length"), a2, a3))
  {
    uint64_t v9 = +[AXSubsystemAXSettings sharedInstance];
    unsigned __int8 v10 = [v9 ignoreLogging];

    if ((v10 & 1) == 0)
    {
      id v11 = +[AXSubsystemAXSettings identifier];
      uint64_t v12 = AXLoggerForFacility();

      os_log_type_t v13 = AXOSLogLevelFromAXLogLevel();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = AXColorizeFormatLog();
        long long v15 = _AXStringForArgs();
        if (os_log_type_enabled(v12, v13))
        {
          *(_DWORD *)buf = 138543362;
          id v17 = v15;
          _os_log_impl(&dword_0, v12, v13, "%{public}@", buf, 0xCu);
        }
      }
    }
  }
}

void sub_12FC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_130B14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_13121C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31)
{
}

void sub_133A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SCATHeadGesturesSourceControllerHelper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id AccessibilitySettingsControllerUtilities.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessibilitySettingsControllerUtilities();
  return objc_msgSendSuper2(&v2, "init");
}

id AccessibilitySettingsControllerUtilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessibilitySettingsControllerUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_134AD0()
{
  sub_169B00();
  unint64_t v0 = (char *)sub_169A80();
  id v1 = (id *)&v0[direct field offset for AXPreferences.assistiveTouch];
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

uint64_t variable initialization expression of SpokenContentDetectLanguagesView._voiceResolver()
{
  uint64_t v0 = sub_168F50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_168F90();
  __chkstk_darwin();
  sub_168F70();
  uint64_t v8 = &_swiftEmptyArrayStorage;
  sub_135AA8(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658E0);
  sub_13596C();
  sub_169BB0();
  uint64_t v4 = sub_168FC0();
  uint64_t v5 = sub_168FB0();
  uint64_t v9 = v4;
  unsigned __int8 v10 = &protocol witness table for DefaultVoiceSource;
  uint64_t v8 = (void *)v5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for VoiceResolver.Mode.defaultPreferenceOrder(_:), v0);
  return sub_168F40();
}

uint64_t variable initialization expression of SpokenContentDetectLanguagesView._textToSpeechLanguages()
{
  return 0;
}

uint64_t variable initialization expression of SpokenContentDetectLanguagesView._loading()
{
  return 1;
}

uint64_t variable initialization expression of SpokenContentDetectLanguagesView._selectedId()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 spokenContentDefaultFallbackLanguage];

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_169880();

  return v2;
}

uint64_t variable initialization expression of VoiceOverActivityVoiceSelectionView._fetcher()
{
  uint64_t v0 = sub_169160();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_168F90();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_168FC0();
  uint64_t v6 = sub_168FB0();
  v9[4] = v5;
  v9[5] = &protocol witness table for DefaultVoiceSource;
  v9[1] = v6;
  v9[0] = &_swiftEmptyArrayStorage;
  sub_135AA8(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658E0);
  sub_13596C();
  sub_169BB0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for CoreSynthesisVoicePickableFetcher.SiriVoicePolicy.neural(_:), v0);
  id v7 = objc_allocWithZone((Class)sub_169180());
  return sub_169170();
}

uint64_t variable initialization expression of VoiceOverActivityVoiceSelectionView._dismiss@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_135004()
{
  return sub_169300();
}

uint64_t sub_135028(uint64_t a1, uint64_t a2)
{
  return sub_135488(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_135054(uint64_t a1, id *a2)
{
  uint64_t result = sub_169860();
  *a2 = 0;
  return result;
}

uint64_t sub_1350CC(uint64_t a1, id *a2)
{
  char v3 = sub_169870();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_13514C@<X0>(void *a1@<X8>)
{
  sub_169880();
  NSString v2 = sub_169850();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_135194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_169880();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1351C0(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1351CC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1351E0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1351F4(uint64_t a1)
{
  uint64_t v2 = sub_135AA8(&qword_265970, type metadata accessor for Key);
  uint64_t v3 = sub_135AA8(&qword_265978, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1352B0@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_169850();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1352F8(uint64_t a1)
{
  uint64_t v2 = sub_135AA8(&qword_265980, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_135AA8(&qword_265988, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1353B4(uint64_t a1)
{
  uint64_t v2 = sub_135AA8(&qword_2659B0, type metadata accessor for CLFListLayout);
  uint64_t v3 = sub_135AA8(&qword_2659B8, type metadata accessor for CLFListLayout);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_135470(uint64_t a1, uint64_t a2)
{
  return sub_135488(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_135488(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_169880();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1354CC()
{
  sub_169880();
  sub_169890();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_135520()
{
  sub_169880();
  sub_169D20();
  sub_169890();
  Swift::Int v0 = sub_169D30();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_135594()
{
  uint64_t v0 = sub_169880();
  uint64_t v2 = v1;
  if (v0 == sub_169880() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_169CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

id _s21AccessibilitySettings0aB19ControllerUtilitiesC16initializeTipKityyFZ_0()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_169850();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    return (id)sub_1691F0();
  }
  NSString v3 = sub_169850();
  unsigned int v4 = [v2 BOOLForKey:v3];

  if (!v4)
  {
LABEL_7:

    return (id)sub_1691F0();
  }
  sub_1691D0();
  sub_1691E0();
  NSString v5 = sub_169850();
  [v2 setBool:0 forKey:v5];

  uint64_t v6 = self;
  id v7 = [v6 standardUserDefaults];
  NSString v8 = sub_169850();
  [v7 setBool:0 forKey:v8];

  id v9 = [v6 standardUserDefaults];
  NSString v10 = sub_169850();
  [v9 setBool:0 forKey:v10];

  id v11 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v12 = sub_169850();
  id v13 = [v11 initWithSuiteName:v12];

  if (v13)
  {
    NSString v14 = sub_169850();
    [v13 setBool:0 forKey:v14];
  }
  sub_169B20();
  id result = (id)AXLogCommon();
  if (result)
  {
    uint64_t v16 = result;
    sub_169190();

    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AccessibilitySettingsControllerUtilities()
{
  return self;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_13596C()
{
  unint64_t result = qword_2658E8;
  if (!qword_2658E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2658E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2658E8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for AXSVoiceOverFeedbackOption(uint64_t a1)
{
}

void type metadata accessor for AXHeadGesturesEventUsage(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

uint64_t sub_135A60()
{
  return sub_135AA8(&qword_265940, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_135AA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_135AF0()
{
  return sub_135AA8(&qword_265948, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_135B38()
{
  return sub_135AA8(&qword_265950, type metadata accessor for Key);
}

uint64_t sub_135B80()
{
  return sub_135AA8(&qword_265958, type metadata accessor for Key);
}

uint64_t sub_135BC8()
{
  return sub_135AA8(&qword_265960, type metadata accessor for Key);
}

uint64_t sub_135C10()
{
  return sub_135AA8(&qword_265968, type metadata accessor for OpenExternalURLOptionsKey);
}

void type metadata accessor for CLFListLayout(uint64_t a1)
{
}

void sub_135C6C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_135CB4()
{
  return sub_135AA8(&qword_265998, type metadata accessor for CLFListLayout);
}

uint64_t sub_135CFC()
{
  return sub_135AA8(&qword_2659A0, type metadata accessor for CLFListLayout);
}

uint64_t sub_135D44()
{
  return sub_135AA8(&qword_2659A8, type metadata accessor for CLFListLayout);
}

uint64_t sub_135D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2659F0);
  __chkstk_darwin(v3 - 8);
  NSString v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1690B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2659F8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  uint64_t v28 = v11;
  __chkstk_darwin(v10);
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_169B00();
  NSString v14 = (char *)sub_169A80();
  long long v15 = (id *)&v14[direct field offset for AXPreferences.spokenContent];
  swift_beginAccess();
  id v16 = *v15;

  sub_169A50();
  id v17 = (char *)sub_169A80();
  id v18 = (id *)&v17[direct field offset for AXPreferences.spokenContent];
  swift_beginAccess();
  id v19 = *v18;

  sub_169A60();
  uint64_t v20 = sub_168EC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  sub_1690A0();
  long long v21 = (char *)sub_169A80();
  long long v22 = (id *)&v21[direct field offset for AXPreferences.spokenContent];
  swift_beginAccess();
  id v23 = *v22;

  sub_169A70();
  uint64_t v24 = sub_1369AC(&qword_265A00, (void (*)(uint64_t))&type metadata accessor for AXSUILanguageVoicePicker);
  sub_169480();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v32 = v29;
  uint64_t v33 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_265A08);
  sub_169610();
  uint64_t v35 = sub_169180();
  uint64_t v36 = &protocol witness table for CoreSynthesisVoicePickableFetcher;
  uint64_t v32 = v6;
  uint64_t v33 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v27;
  sub_169470();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_136168()
{
  return sub_1694E0();
}

uint64_t sub_136184@<X0>(uint64_t a1@<X8>)
{
  return sub_135D98(*v1, v1[1], a1);
}

UIViewController __swiftcall SpokenContentSpeechSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

uint64_t sub_1361E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1367A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_136208()
{
  unint64_t result = qword_2659C0;
  if (!qword_2659C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2659C0);
  }
  return result;
}

id SpokenContentDetectLanguagesSwiftUI.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id SpokenContentSpeechSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SpokenContentSpeechSwiftUI();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

uint64_t type metadata accessor for SpokenContentSpeechSwiftUI()
{
  return self;
}

id SpokenContentDetectLanguagesSwiftUI.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id SpokenContentSpeechSwiftUI.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SpokenContentSpeechSwiftUI();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id SpokenContentSpeechSwiftUI.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpokenContentSpeechSwiftUI();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *initializeBufferWithCopyOfBuffer for SpokenContentVoicesView(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SpokenContentVoicesView(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for SpokenContentVoicesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

id *assignWithTake for SpokenContentVoicesView(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpokenContentVoicesView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpokenContentVoicesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpokenContentVoicesView()
{
  return &type metadata for SpokenContentVoicesView;
}

uint64_t sub_13673C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1367A8()
{
  uint64_t v0 = sub_168F90();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_169160();
  __chkstk_darwin(v1);
  (*(void (**)(char *, void))(v3 + 104))((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for CoreSynthesisVoicePickableFetcher.SiriVoicePolicy.neural(_:));
  uint64_t v4 = sub_168FC0();
  uint64_t v5 = sub_168FB0();
  uint64_t v10 = v4;
  uint64_t v11 = &protocol witness table for DefaultVoiceSource;
  uint64_t v9 = v5;
  objc_super v8 = &_swiftEmptyArrayStorage;
  sub_1369AC(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658E0);
  sub_13596C();
  sub_169BB0();
  id v6 = objc_allocWithZone((Class)sub_169180());
  objc_super v8 = (void *)sub_169170();
  sub_169600();
  return v9;
}

uint64_t sub_1369AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1369F4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_136AB4(void *a1, double a2)
{
  uint64_t v4 = sub_1697E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_169800();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 specifier];
  if (result)
  {
    id v13 = result;
    id v14 = [result target];
    uint64_t v32 = v8;
    uint64_t v33 = v5;
    id v30 = v13;
    uint64_t v31 = v9;
    if (v14)
    {
      self;
      long long v15 = (void *)swift_dynamicCastObjCClass();
      if (v15)
      {
        id v29 = v15;
        id v16 = [v15 navigationItem];
LABEL_7:
        id v17 = [objc_allocWithZone((Class)UILabel) init];
        id v18 = self;
        NSString v19 = sub_169850();
        id v20 = [v18 preferredFontForTextStyle:v19];

        [v17 setFont:v20];
        sub_136F04(a2);
        long long v22 = v21;
        [v17 setAttributedText:v21];

        sub_1384D8(0, &qword_265A80);
        id v23 = (void *)sub_169B40();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v16;
        *(void *)(v24 + 24) = v17;
        aBlock[4] = sub_138460;
        aBlock[5] = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_137130;
        aBlock[3] = &block_descriptor;
        uint64_t v25 = _Block_copy(aBlock);
        id v26 = v16;
        id v27 = v17;
        swift_release();
        sub_1697F0();
        aBlock[0] = &_swiftEmptyArrayStorage;
        sub_138514(&qword_265A88, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&qword_265A90);
        sub_138494(&qword_265A98, &qword_265A90);
        sub_169BB0();
        sub_169B50();
        _Block_release(v25);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v32);
      }
      swift_unknownObjectRelease();
    }
    id v16 = 0;
    id v29 = 0;
    goto LABEL_7;
  }
  return result;
}

void sub_136F04(double a1)
{
  NSString v2 = sub_169850();
  NSString v3 = sub_169850();
  id v4 = settingsLocString(v2, v3);

  if (v4)
  {
    sub_169880();

    __swift_instantiateConcreteTypeFromMangledName(&qword_265AA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A1E00;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    uint64_t v6 = self;
    id v7 = NSForegroundColorAttributeName;
    id v8 = [v6 labelColor];
    id v9 = [v8 colorWithAlphaComponent:a1];

    *(void *)(inited + 64) = sub_1384D8(0, &qword_265AA8);
    *(void *)(inited + 40) = v9;
    sub_143ED8(inited);
    id v10 = objc_allocWithZone((Class)NSAttributedString);
    NSString v11 = sub_169850();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_138514(&qword_265970, type metadata accessor for Key);
    Class isa = sub_169820().super.isa;
    swift_bridgeObjectRelease();
    [v10 initWithString:v11 attributes:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_137130(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_137174(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a6;
  id v29 = a5;
  uint64_t v30 = a1;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v31 = a2;
  uint64_t v35 = a7;
  uint64_t v7 = sub_168E90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A68);
  uint64_t v11 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A50);
  __chkstk_darwin(v28);
  long long v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v16 = sub_169850();
  NSString v17 = sub_169850();
  id v18 = settingsLocString(v16, v17);

  if (v18)
  {
    uint64_t v26 = sub_169880();

    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v7);
    unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v20 = swift_allocObject();
    long long v21 = v29;
    *(void *)(v20 + 16) = v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v10, v7);
    swift_bridgeObjectRetain();
    id v22 = v21;
    swift_retain();
    sub_169810();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = v32;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v32);
    uint64_t v25 = &v15[*(int *)(v28 + 36)];
    *(void *)uint64_t v25 = KeyPath;
    v25[8] = 1;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
    sub_138054((uint64_t)v15, v35);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1374E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_168E90();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a3, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1380BC((uint64_t)v6);
  return sub_138358((uint64_t)v6);
}

id sub_13763C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  if (a3)
  {
    NSString v10 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v14.receiver = v5;
  v14.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:specifier:", a1, v10, a4);

  id v12 = v11;
  if (v12) {

  }
  return v12;
}

id VoiceOverDelayUntilSpeakController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AccessibilitySettingsPlacardCell()
{
  return self;
}

void sub_137898()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A38);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_168E90();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 setSelectionStyle:0];
  NSString v9 = sub_169850();
  NSString v10 = sub_169850();
  id v11 = settingsLocString(v9, v10);

  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = sub_169880();
  unint64_t v14 = v13;

  uint64_t v34 = v12;
  unint64_t v35 = v14;
  uint64_t v15 = sub_1698C0();
  NSString v17 = v16;
  int IsPad = AXDeviceIsPad();
  if (IsPad) {
    uint64_t v19 = 0xD000000000000021;
  }
  else {
    uint64_t v19 = 0xD000000000000020;
  }
  if (IsPad) {
    uint64_t v20 = (void *)0x80000000001EBD80;
  }
  else {
    uint64_t v20 = (void *)0x80000000001EBD30;
  }
  sub_168E80();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_12;
  }
  long long v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v33 = v5;
  v21(v8, v4, v5);
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  NSString v22 = sub_169850();
  id v23 = (id)AXLocStringKeyForModel();

  NSString v24 = sub_169850();
  id v25 = settingsLocString(v23, v24);

  if (v25)
  {
    uint64_t v26 = sub_169880();
    uint64_t v28 = v27;

    uint64_t v38 = v26;
    uint64_t v39 = v28;
    v40._countAndFlagsBits = sub_1698C0();
    sub_1698A0(v40);
    swift_bridgeObjectRelease();
    v41._countAndFlagsBits = 23328;
    v41._object = (void *)0xE200000000000000;
    sub_1698A0(v41);
    v42._countAndFlagsBits = v15;
    v42._object = v17;
    sub_1698A0(v42);
    swift_bridgeObjectRelease();
    v43._countAndFlagsBits = 10333;
    v43._object = (void *)0xE200000000000000;
    sub_1698A0(v43);
    v44._countAndFlagsBits = v19;
    v44._object = v20;
    sub_1698A0(v44);
    swift_bridgeObjectRelease();
    v45._countAndFlagsBits = 41;
    v45._object = (void *)0xE100000000000000;
    sub_1698A0(v45);
    uint64_t v30 = v34;
    unint64_t v29 = v35;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v1;
    uint64_t v32 = __chkstk_darwin(v31);
    *(&v33 - 6) = v30;
    *(&v33 - 5) = v29;
    *(&v33 - 4) = (uint64_t)sub_137D80;
    *(&v33 - 3) = v32;
    *(&v33 - 2) = (uint64_t)v1;
    *(&v33 - 1) = (uint64_t)v8;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A40);
    uint64_t v37 = sub_138494(&qword_265A48, &qword_265A40);
    __swift_allocate_boxed_opaque_existential_1(&v34);
    v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_265A50);
    sub_137DFC();
    sub_1693B0();
    swift_bridgeObjectRelease();
    sub_169B30();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v33);
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_137D48()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_137D80(double a1)
{
  return sub_136AB4(*(void **)(v1 + 16), a1);
}

void sub_137D88(uint64_t a1@<X8>)
{
  sub_137174(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_137DFC()
{
  unint64_t result = qword_265A58;
  if (!qword_265A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265A50);
    sub_138494(&qword_265A60, &qword_265A68);
    sub_138494(&qword_265A70, &qword_265A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265A58);
  }
  return result;
}

uint64_t sub_137EC0()
{
  uint64_t v1 = sub_168E90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_137F8C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_168E90() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1374E0(a1, v4, v5);
}

uint64_t sub_138000@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1692E0();
  *a1 = result;
  return result;
}

uint64_t sub_13802C()
{
  return sub_1692F0();
}

uint64_t sub_138054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1380BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A38);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = self;
  id v9 = [v8 sharedApplication];
  uint64_t v24 = a1;
  sub_1383B8(a1, (uint64_t)v7);
  uint64_t v10 = sub_168E90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_168E70(v13);
  uint64_t v15 = v14;
  NSString v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v7, v10);
  unsigned int v17 = [v9 canOpenURL:v15];

  if (!v17) {
    return;
  }
  id v18 = [v8 sharedApplication];
  sub_1383B8(v24, (uint64_t)v5);
  if (v12(v5, 1, v10) == 1)
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_168E70(v19);
  long long v21 = v20;
  v16(v5, v10);
  sub_143F00((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_138514(&qword_265980, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = sub_169820().super.isa;
  swift_bridgeObjectRelease();
  [v18 openURL:v21 options:isa completionHandler:0];
}

uint64_t sub_138358(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1383B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_138420()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_138460()
{
  id result = *(id *)(v0 + 16);
  if (result) {
    return [result setTitleView:*(void *)(v0 + 24)];
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_138494(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1384D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_138514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Double __swiftcall VoiceOverDelayUntilSpeakController.minimumValue()()
{
  return kAXSVoiceOverDelayUntilSpeakIntervalMin;
}

Swift::Double __swiftcall VoiceOverDelayUntilSpeakController.maximumValue()()
{
  return kAXSVoiceOverDelayUntilSpeakIntervalMax;
}

Swift::Double __swiftcall VoiceOverDelayUntilSpeakController.numericalPreferenceValue()()
{
  id v0 = [self sharedInstance];
  [v0 voiceOverDelayUntilSpeakUnderTouch];
  double v2 = v1;

  return v2;
}

Swift::Void __swiftcall VoiceOverDelayUntilSpeakController.setNumericalPreferenceValueFromUser(_:)(Swift::Double a1)
{
  id v2 = [self sharedInstance];
  [v2 setVoiceOverDelayUntilSpeakUnderTouch:a1];
}

Swift::String __swiftcall VoiceOverDelayUntilSpeakController.localizedFooterText()()
{
  NSString v0 = sub_169850();
  NSString v1 = sub_169850();
  id v2 = settingsLocString(v0, v1);

  if (v2)
  {
    uint64_t v5 = sub_169880();
    uint64_t v7 = v6;

    uint64_t v3 = v5;
    uint64_t v4 = v7;
  }
  else
  {
    __break(1u);
  }
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall VoiceOverDelayUntilSpeakController.localizedTitle()()
{
  NSString v0 = sub_169850();
  NSString v1 = sub_169850();
  id v2 = settingsLocString(v0, v1);

  if (v2)
  {
    uint64_t v5 = sub_169880();
    uint64_t v7 = v6;

    uint64_t v3 = v5;
    uint64_t v4 = v7;
  }
  else
  {
    __break(1u);
  }
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::Double __swiftcall VoiceOverDelayUntilSpeakController.stepAmount()()
{
  return 0.05;
}

id VoiceOverDelayUntilSpeakController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    NSString v7 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id VoiceOverDelayUntilSpeakController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

uint64_t type metadata accessor for VoiceOverDelayUntilSpeakController()
{
  return self;
}

UIViewController __swiftcall LiveSpeechCategoryManagerSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

id LiveSpeechCategoryManagerSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_139004(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for LiveSpeechCategoryManagerSwiftUI);
}

uint64_t type metadata accessor for LiveSpeechCategoryManagerSwiftUI()
{
  return self;
}

id LiveSpeechCategoryManagerSwiftUI.init(coder:)(void *a1)
{
  return sub_139198(a1, type metadata accessor for LiveSpeechCategoryManagerSwiftUI);
}

id LiveSpeechCategoryManagerSwiftUI.__deallocating_deinit()
{
  return sub_139268(type metadata accessor for LiveSpeechCategoryManagerSwiftUI);
}

UIViewController __swiftcall LiveSpeechVoiceSelectionSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

uint64_t sub_138F08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id LiveSpeechVoiceSelectionSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_139004(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for LiveSpeechVoiceSelectionSwiftUI);
}

id sub_139004(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  if (a2)
  {
    NSString v7 = sub_169850();
    a1 = swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v4;
  v10.super_class = (Class)a4(a1);
  id v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

uint64_t type metadata accessor for LiveSpeechVoiceSelectionSwiftUI()
{
  return self;
}

id sub_1390D0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(id))
{
  if (a3)
  {
    sub_169880();
    id v8 = a4;
    NSString v9 = sub_169850();
    id v10 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = a4;
    NSString v9 = 0;
  }
  v13.receiver = a1;
  v13.super_class = (Class)a5(v10);
  id v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v9, a4);

  return v11;
}

id LiveSpeechVoiceSelectionSwiftUI.init(coder:)(void *a1)
{
  return sub_139198(a1, type metadata accessor for LiveSpeechVoiceSelectionSwiftUI);
}

id sub_139198(void *a1, uint64_t (*a2)(void))
{
  v6.receiver = v2;
  v6.super_class = (Class)a2();
  id v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_139204(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id LiveSpeechVoiceSelectionSwiftUI.__deallocating_deinit()
{
  return sub_139268(type metadata accessor for LiveSpeechVoiceSelectionSwiftUI);
}

id sub_139268(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t SCATSpeechView.body.getter()
{
  return sub_1690D0();
}

void sub_13933C(uint64_t a1@<X0>, char *a2@<X8>)
{
  v56 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C48);
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  v62 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v61 = (char *)&v48 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C50);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  v63 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - v11;
  __chkstk_darwin(v10);
  v59 = (char *)&v48 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C58);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  v60 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v48 - v19;
  __chkstk_darwin(v18);
  NSString v22 = (char *)&v48 - v21;
  uint64_t v64 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_265C60);
  sub_138494(&qword_265C68, &qword_265C60);
  sub_1696E0();
  uint64_t v57 = v15;
  v58 = v22;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v20, v14);
  NSString v23 = sub_169850();
  id v24 = (id)SCATLocString();

  if (v24)
  {
    uint64_t v25 = sub_169880();
    uint64_t v27 = v26;

    uint64_t v65 = v25;
    uint64_t v66 = v27;
    __chkstk_darwin(v28);
    *(&v48 - 2) = a1;
    sub_169150();
    sub_13A47C(&qword_265C70, (void (*)(uint64_t))&type metadata accessor for AXSUISystemDefaultVoiceSelectionCell);
    sub_13B004();
    sub_1696D0();
    uint64_t v29 = v53;
    uint64_t v30 = v59;
    uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(v59, v12, v7);
    __chkstk_darwin(v31);
    *(&v48 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_265C80);
    sub_138494(&qword_265C88, &qword_265C80);
    uint64_t v32 = v61;
    sub_1696E0();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    uint64_t v34 = v60;
    uint64_t v52 = v14;
    v33(v60, v58, v14);
    v51 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v51(v63, v30, v7);
    uint64_t v49 = v7;
    uint64_t v35 = v54;
    long long v50 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    uint64_t v36 = v32;
    uint64_t v37 = v55;
    v50(v62, v36, v55);
    uint64_t v38 = v29;
    uint64_t v39 = v56;
    v33(v56, v34, v14);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C90);
    uint64_t v41 = v49;
    v51(&v39[*(int *)(v40 + 48)], v63, v49);
    Swift::String v42 = v62;
    v50(&v39[*(int *)(v40 + 64)], v62, v37);
    Swift::String v43 = *(void (**)(char *, uint64_t))(v35 + 8);
    v43(v61, v37);
    Swift::String v44 = *(void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v45 = v41;
    v44(v59, v41);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v57 + 8);
    uint64_t v47 = v52;
    v46(v58, v52);
    v43(v42, v37);
    v44(v63, v45);
    v46(v60, v47);
  }
  else
  {
    __break(1u);
  }
}

void sub_13997C(char *a1@<X8>)
{
  sub_13933C(*(void *)(v1 + 16), a1);
}

void sub_139984(uint64_t a1@<X8>)
{
  v14[0] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = sub_169850();
  id v10 = (id)SCATLocString();

  if (v10)
  {
    uint64_t v11 = sub_169880();
    uint64_t v13 = v12;

    v14[4] = v11;
    v14[5] = v13;
    sub_169700();
    swift_getKeyPath();
    sub_169720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_13B004();
    sub_169640();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(v14[0], v8, v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_139BB8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  sub_1696F0();
  sub_169A10();

  return sub_169140();
}

uint64_t sub_139C1C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C98);
  __chkstk_darwin(v25);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265CA0);
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v24 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)&v24 - v14;
  *(void *)uint64_t v3 = sub_169330();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_265CA8);
  sub_139FC4((uint64_t)&v3[*(int *)(v15 + 44)]);
  sub_138494(&qword_265CB0, &qword_265C98);
  sub_169460();
  sub_13B060((uint64_t)v3);
  uint64_t v16 = (void (*)(char *, char *, uint64_t))v5[4];
  v16(v29, v13, v4);
  *(void *)uint64_t v3 = sub_169330();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  sub_139FC4((uint64_t)&v3[*(int *)(v15 + 44)]);
  sub_169460();
  sub_13B060((uint64_t)v3);
  v16(v13, v10, v4);
  uint64_t v17 = (void (*)(char *, char *, uint64_t))v5[2];
  uint64_t v18 = v29;
  v17(v10, v29, v4);
  uint64_t v19 = v27;
  v17(v27, v13, v4);
  uint64_t v20 = v28;
  v17(v28, v10, v4);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_265CB8);
  v17(&v20[*(int *)(v21 + 48)], v19, v4);
  NSString v22 = (void (*)(char *, uint64_t))v5[1];
  v22(v13, v4);
  v22(v18, v4);
  v22(v19, v4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v10, v4);
}

void sub_139FC4(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C60);
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = sub_169850();
  id v9 = (id)SCATLocString();

  if (v9)
  {
    uint64_t v10 = sub_169880();
    uint64_t v12 = v11;

    uint64_t v16 = v10;
    uint64_t v17 = v12;
    sub_169700();
    swift_getKeyPath();
    sub_169720();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_13B004();
    sub_169640();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v7, v14);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_13A1E8()
{
  return sub_1690D0();
}

uint64_t _s21AccessibilitySettings17SCATSpeechSwiftUIC8settingsSo13AXPreferencesC0A9UtilitiesE14AssistiveTouchCvpfP_0()
{
  swift_getObjectType();
  sub_13A47C(&qword_265B38, (void (*)(uint64_t))&type metadata accessor for AXPreferences.AssistiveTouch);

  return sub_169710();
}

UIViewController __swiftcall SCATSpeechSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

uint64_t sub_13A390()
{
  sub_169B00();
  NSString v0 = (char *)sub_169A80();
  uint64_t v1 = (id *)&v0[direct field offset for AXPreferences.assistiveTouch];
  swift_beginAccess();
  id v2 = *v1;

  sub_169A40();
  sub_13A47C(&qword_265B38, (void (*)(uint64_t))&type metadata accessor for AXPreferences.AssistiveTouch);
  return sub_169710();
}

uint64_t type metadata accessor for SCATSpeechView(uint64_t a1)
{
  return sub_13A778(a1, (uint64_t *)&unk_265BC0);
}

uint64_t sub_13A47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id SCATSpeechSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v3[OBJC_IVAR___SCATSpeechSwiftUI__settings];
  sub_169B00();
  uint64_t v11 = v3;
  uint64_t v12 = (char *)sub_169A80();
  uint64_t v13 = (id *)&v12[direct field offset for AXPreferences.assistiveTouch];
  swift_beginAccess();
  id v14 = *v13;

  sub_169A40();
  sub_13A47C(&qword_265B38, (void (*)(uint64_t))&type metadata accessor for AXPreferences.AssistiveTouch);
  sub_169710();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);

  if (a2)
  {
    NSString v15 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  uint64_t v16 = (objc_class *)type metadata accessor for SCATSpeechSwiftUI(0);
  v20.receiver = v11;
  v20.super_class = v16;
  id v17 = objc_msgSendSuper2(&v20, "initWithNibName:bundle:", v15, a3);

  return v17;
}

uint64_t type metadata accessor for SCATSpeechSwiftUI(uint64_t a1)
{
  return sub_13A778(a1, (uint64_t *)&unk_265C28);
}

uint64_t sub_13A778(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id SCATSpeechSwiftUI.init(coder:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR___SCATSpeechSwiftUI__settings];
  sub_169B00();
  uint64_t v8 = v1;
  id v9 = (char *)sub_169A80();
  uint64_t v10 = (id *)&v9[direct field offset for AXPreferences.assistiveTouch];
  swift_beginAccess();
  id v11 = *v10;

  sub_169A40();
  sub_13A47C(&qword_265B38, (void (*)(uint64_t))&type metadata accessor for AXPreferences.AssistiveTouch);
  sub_169710();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v6, v3);

  uint64_t v12 = (objc_class *)type metadata accessor for SCATSpeechSwiftUI(0);
  v16.receiver = v8;
  v16.super_class = v12;
  id v13 = objc_msgSendSuper2(&v16, "initWithCoder:", a1);

  return v13;
}

id SCATSpeechSwiftUI.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SCATSpeechSwiftUI(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_13AA2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SCATSpeechView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for SCATSpeechView(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for SCATSpeechView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SCATSpeechView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SCATSpeechView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SCATSpeechView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SCATSpeechView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13ACD4);
}

uint64_t sub_13ACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SCATSpeechView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_13AD58);
}

uint64_t sub_13AD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265B58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_13ADCC()
{
  sub_13AE58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_13AE58()
{
  if (!qword_265BD0)
  {
    sub_169A40();
    unint64_t v0 = sub_169730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_265BD0);
    }
  }
}

uint64_t sub_13AF20()
{
  return type metadata accessor for SCATSpeechSwiftUI(0);
}

void sub_13AF28()
{
  sub_13AE58();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_13AFB8()
{
  return sub_138494(&qword_265C38, &qword_265C40);
}

void sub_13AFF4(uint64_t a1@<X8>)
{
}

uint64_t sub_13AFFC()
{
  return sub_139BB8();
}

unint64_t sub_13B004()
{
  unint64_t result = qword_265C78;
  if (!qword_265C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265C78);
  }
  return result;
}

uint64_t sub_13B058@<X0>(char *a1@<X8>)
{
  return sub_139C1C(*(void *)(v1 + 16), a1);
}

uint64_t sub_13B060(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13B0C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_169A20();
  *a1 = result & 1;
  return result;
}

uint64_t sub_13B0F0()
{
  return sub_169A30();
}

uint64_t sub_13B118@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1699F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_13B148()
{
  return sub_169A00();
}

uint64_t sub_13B170@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1699D0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_13B1A0()
{
  return sub_1699E0();
}

void sub_13B1CC()
{
  qword_268010 = 0x4014000000000000;
}

void sub_13B1DC()
{
  qword_268018 = 0x4008000000000000;
}

void sub_13B1EC()
{
  qword_268020 = 0x4069000000000000;
}

void sub_13B1FC()
{
  qword_268028 = 0x4062C00000000000;
}

void sub_13B210()
{
  qword_268030 = 0x406CC00000000000;
}

void sub_13B224()
{
  qword_268038 = 0x405B800000000000;
}

uint64_t sub_13B238@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DB8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_169340();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1692A0();
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (double *)((char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for RoundedCornerStyle.continuous(_:), v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v17 + *(int *)(v15 + 28), v13, v10);
  *id v17 = a3;
  v17[1] = a3;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  swift_retain();
  v18(v13, v10);
  sub_13F78C((uint64_t)v17, (uint64_t)v9);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 256;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC0);
  sub_13F990((uint64_t)v9, (uint64_t)a2 + *(int *)(v19 + 36), &qword_265DB8);
  *a2 = a1;
  swift_retain();
  sub_13FA20((uint64_t)v9, &qword_265DB8);
  sub_13F7F0((uint64_t)v17);
  return swift_release();
}

uint64_t sub_13B46C@<X0>(void *a1@<X8>)
{
  return sub_13B238(*(void *)(v1 + 8), a1, *(double *)v1);
}

void *sub_13B478@<X0>(char a1@<W0>, void *a2@<X8>)
{
  if (a1)
  {
    double v4 = 28.0;
    uint64_t v5 = sub_1697A0();
  }
  else
  {
    double v4 = 50.0;
    uint64_t v5 = sub_169770();
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  sub_13B55C(a1 & 1, (uint64_t)__src);
  memcpy(v14, __src, sizeof(v14));
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_169790();
  sub_13BAC4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v10, 0.0, 1, v4, 0);
  sub_13FF30((uint64_t)__src);
  return memcpy(a2, v10, 0x188uLL);
}

uint64_t sub_13B55C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_169540();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_169550();
  if (qword_2658A8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_268018;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGBLinear(_:), v4);
  uint64_t v10 = sub_1695A0();
  if (a1)
  {
    if (qword_2658A0 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_268010;
    uint64_t v42 = sub_169330();
    *(void *)&long long v43 = v11;
    BYTE8(v43) = 0;
    sub_1400F0();
  }
  else
  {
    if (qword_2658A0 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_268010;
    uint64_t v42 = sub_169370();
    *(void *)&long long v43 = v12;
    BYTE8(v43) = 0;
    sub_140004();
  }
  uint64_t v13 = sub_1697C0();
  sub_13B8F4((uint64_t)&v27);
  if (qword_2658A0 != -1) {
    swift_once();
  }
  char v14 = sub_169410();
  sub_169200();
  long long v49 = v33;
  long long v50 = v34;
  long long v51 = v35;
  long long v52 = v36;
  long long v45 = v29;
  long long v46 = v30;
  long long v47 = v31;
  long long v48 = v32;
  long long v43 = v27;
  long long v44 = v28;
  *(_OWORD *)((char *)&v38[3] + 8) = v30;
  *(_OWORD *)((char *)&v38[2] + 8) = v29;
  *(_OWORD *)((char *)&v38[6] + 8) = v33;
  *(_OWORD *)((char *)&v38[7] + 8) = v34;
  *(_OWORD *)((char *)&v38[8] + 8) = v35;
  *(_OWORD *)((char *)&v38[9] + 8) = v36;
  *(_OWORD *)((char *)&v38[4] + 8) = v31;
  *(_OWORD *)((char *)&v38[5] + 8) = v32;
  char v37 = 0;
  *(void *)&v38[0] = v13;
  *(_OWORD *)((char *)v38 + 8) = v27;
  *(_OWORD *)((char *)&v38[1] + 8) = v28;
  BYTE8(v38[10]) = v14;
  *(void *)&long long v39 = v15;
  *((void *)&v39 + 1) = v16;
  *(void *)&long long v40 = v17;
  *((void *)&v40 + 1) = v18;
  char v41 = 0;
  *(unsigned char *)(a2 + 256) = 0;
  long long v19 = v38[7];
  *(_OWORD *)(a2 + 144) = v38[6];
  *(_OWORD *)(a2 + 160) = v19;
  long long v20 = v38[9];
  *(_OWORD *)(a2 + 176) = v38[8];
  *(_OWORD *)(a2 + 192) = v20;
  long long v21 = v38[3];
  *(_OWORD *)(a2 + 80) = v38[2];
  *(_OWORD *)(a2 + 96) = v21;
  long long v22 = v38[5];
  *(_OWORD *)(a2 + 112) = v38[4];
  *(_OWORD *)(a2 + 128) = v22;
  long long v23 = v38[1];
  *(_OWORD *)(a2 + 48) = v38[0];
  *(_OWORD *)(a2 + 64) = v23;
  long long v24 = v39;
  *(_OWORD *)(a2 + 208) = v38[10];
  *(_OWORD *)(a2 + 224) = v24;
  *(_OWORD *)(a2 + 240) = v40;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t v42 = v13;
  char v53 = v14;
  uint64_t v54 = v15;
  uint64_t v55 = v16;
  uint64_t v56 = v17;
  uint64_t v57 = v18;
  char v58 = 0;
  swift_retain();
  swift_retain();
  sub_140058((uint64_t)v38);
  sub_1400A4((uint64_t)&v42);
  swift_release();
  return swift_release();
}

uint64_t sub_13B8F4@<X0>(uint64_t a1@<X8>)
{
  sub_169570();
  uint64_t v2 = sub_169590();
  swift_release();
  if (qword_2658A8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_268018;
  uint64_t v4 = sub_169570();
  uint64_t v5 = sub_169790();
  sub_13BC88(0.0, 1, 0.0, 1, 35.0, 0, 0.0, 1, (uint64_t)&v20, v3, 0.0, 1, 8.0, 0, v5, v6, v4);
  swift_release();
  long long v7 = v24;
  long long v8 = v25;
  v28[4] = v24;
  v28[5] = v25;
  long long v9 = v26;
  long long v10 = v27;
  v28[6] = v26;
  v28[7] = v27;
  long long v11 = v20;
  long long v12 = v21;
  v28[0] = v20;
  v28[1] = v21;
  *(_OWORD *)&v29[86] = v25;
  *(_OWORD *)&v29[70] = v24;
  *(_OWORD *)&v29[102] = v26;
  *(_OWORD *)&v29[118] = v27;
  long long v13 = v22;
  long long v14 = v23;
  v28[2] = v22;
  v28[3] = v23;
  *(_OWORD *)&v29[6] = v20;
  *(_OWORD *)&v29[22] = v21;
  *(_OWORD *)&v29[38] = v22;
  *(_OWORD *)&v29[54] = v23;
  long long v15 = *(_OWORD *)&v29[64];
  *(_OWORD *)(a1 + 106) = *(_OWORD *)&v29[80];
  long long v16 = *(_OWORD *)&v29[112];
  *(_OWORD *)(a1 + 122) = *(_OWORD *)&v29[96];
  *(_OWORD *)(a1 + 138) = v16;
  long long v17 = *(_OWORD *)v29;
  *(_OWORD *)(a1 + 42) = *(_OWORD *)&v29[16];
  long long v18 = *(_OWORD *)&v29[48];
  *(_OWORD *)(a1 + 58) = *(_OWORD *)&v29[32];
  *(_OWORD *)(a1 + 74) = v18;
  *(_OWORD *)(a1 + 90) = v15;
  *(_OWORD *)(a1 + 26) = v17;
  char v30 = 0;
  *(void *)(a1 + 152) = *(void *)&v29[126];
  *(double *)a1 = v3;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
  *(_WORD *)(a1 + 24) = 0;
  v31[4] = v7;
  v31[5] = v8;
  v31[6] = v9;
  v31[7] = v10;
  v31[0] = v11;
  v31[1] = v12;
  v31[2] = v13;
  v31[3] = v14;
  swift_retain();
  sub_13FB0C((uint64_t)v28);
  sub_13FB38((uint64_t)v31);
  return swift_release();
}

uint64_t sub_13BAC4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  long long v14 = v13;
  uint64_t v15 = a9;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_169B10();
    long long v24 = (void *)sub_1693F0();
    sub_169190();

    uint64_t v15 = a9;
  }
  sub_1692B0();
  memcpy((void *)v15, v14, 0x111uLL);
  *(_OWORD *)(v15 + 344) = v31;
  *(_OWORD *)(v15 + 360) = v32;
  *(_OWORD *)(v15 + 376) = v33;
  *(_OWORD *)(v15 + 280) = v27;
  *(_OWORD *)(v15 + 296) = v28;
  *(_OWORD *)(v15 + 312) = v29;
  *(_OWORD *)(v15 + 328) = v30;

  return sub_13FF98((uint64_t)v14);
}

uint64_t sub_13BC88@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a12) {
    a11 = a7;
  }
  if (a14) {
    a13 = a11;
  }
  if (a7 > a11 || a11 > a13)
  {
LABEL_22:
    sub_169B10();
    long long v27 = (void *)sub_1693F0();
    sub_169190();
  }
  sub_1692B0();
  *(double *)a9 = a10;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;

  return swift_retain();
}

uint64_t sub_13BE48@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_169B10();
    long long v23 = (void *)sub_1693F0();
    sub_169190();
  }
  sub_1692B0();
  long long v24 = v13[13];
  a9[12] = v13[12];
  a9[13] = v24;
  long long v25 = v13[14];
  long long v26 = v13[9];
  a9[8] = v13[8];
  a9[9] = v26;
  long long v27 = v13[11];
  a9[10] = v13[10];
  a9[11] = v27;
  long long v28 = v13[5];
  a9[4] = v13[4];
  a9[5] = v28;
  long long v29 = v13[7];
  a9[6] = v13[6];
  a9[7] = v29;
  long long v30 = v13[1];
  *a9 = *v13;
  a9[1] = v30;
  long long v31 = v13[3];
  a9[2] = v13[2];
  a9[3] = v31;
  a9[18] = v36;
  a9[19] = v37;
  a9[20] = v38;
  a9[21] = v39;
  a9[14] = v25;
  a9[15] = v33;
  a9[16] = v34;
  a9[17] = v35;

  return sub_14018C((uint64_t)v13);
}

void *sub_13C02C@<X0>(void *a1@<X8>)
{
  return sub_13B478(*v1, a1);
}

uint64_t sub_13C034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_169540();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_169550();
  if (qword_2658A8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_268018;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGBLinear(_:), v2);
  uint64_t v8 = sub_1695A0();
  if (qword_2658A0 != -1) {
    swift_once();
  }
  char v9 = sub_169410();
  sub_169200();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v18 = sub_169570();
  double v19 = *(double *)&qword_268018;
  uint64_t v20 = sub_169790();
  sub_13BC88(0.0, 1, 0.0, 1, 35.0, 0, 0.0, 1, (uint64_t)&v35, v19, 0.0, 1, 5.0, 0, v20, v21, v18);
  swift_release();
  long long v22 = v39;
  long long v23 = v40;
  v43[4] = v39;
  v43[5] = v40;
  long long v24 = v41;
  long long v25 = v42;
  v43[6] = v41;
  v43[7] = v42;
  *(_OWORD *)&v44[119] = v42;
  long long v26 = v37;
  long long v27 = v38;
  v43[2] = v37;
  v43[3] = v38;
  *(_OWORD *)&v44[103] = v41;
  *(_OWORD *)&v44[87] = v40;
  *(_OWORD *)&v44[71] = v39;
  *(_OWORD *)&v44[55] = v38;
  long long v28 = v35;
  long long v29 = v36;
  *(_OWORD *)&v44[7] = v35;
  v43[0] = v35;
  v43[1] = v36;
  *(_OWORD *)&v44[23] = v36;
  *(_OWORD *)&v44[39] = v37;
  char v45 = 0;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v46;
  *(void *)a1 = 0x4024000000000000;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v17;
  *(unsigned char *)(a1 + 88) = 0;
  long long v30 = *(_OWORD *)&v44[64];
  *(_OWORD *)(a1 + 169) = *(_OWORD *)&v44[80];
  long long v31 = *(_OWORD *)&v44[112];
  *(_OWORD *)(a1 + 185) = *(_OWORD *)&v44[96];
  *(_OWORD *)(a1 + 201) = v31;
  *(void *)(a1 + 216) = *(void *)&v44[127];
  long long v32 = *(_OWORD *)v44;
  *(_OWORD *)(a1 + 105) = *(_OWORD *)&v44[16];
  long long v33 = *(_OWORD *)&v44[48];
  *(_OWORD *)(a1 + 121) = *(_OWORD *)&v44[32];
  *(_OWORD *)(a1 + 137) = v33;
  *(_OWORD *)(a1 + 153) = v30;
  *(_OWORD *)(a1 + 89) = v32;
  v47[4] = v22;
  v47[5] = v23;
  v47[6] = v24;
  v47[7] = v25;
  v47[0] = v28;
  v47[1] = v29;
  v47[2] = v26;
  v47[3] = v27;
  swift_retain();
  swift_retain();
  sub_13FB0C((uint64_t)v43);
  sub_13FB38((uint64_t)v47);
  swift_release();
  return swift_release();
}

void *sub_13C35C@<X0>(void *a1@<X8>)
{
  sub_169790();
  sub_13C034((uint64_t)&v3);
  sub_169790();
  sub_13BE48(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, __src, 0.0, 1, 36.0, 0);
  sub_140144((uint64_t)&v3);
  return memcpy(a1, __src, 0x160uLL);
}

uint64_t sub_13C440@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v104 = a1;
  uint64_t v113 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D88);
  __chkstk_darwin(v2 - 8);
  v110 = (uint64_t *)((char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D90);
  uint64_t v4 = __chkstk_darwin(v109);
  uint64_t v112 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v108 = (uint64_t)&v90 - v7;
  __chkstk_darwin(v6);
  uint64_t v111 = (uint64_t)&v90 - v8;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D98);
  uint64_t v103 = *(void *)(v105 - 8);
  uint64_t v9 = __chkstk_darwin(v105);
  v101 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v98 = (char *)&v90 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DA0);
  __chkstk_darwin(v12 - 8);
  v102 = (uint64_t *)((char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DA8);
  __chkstk_darwin(v97);
  uint64_t v100 = (uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DB0);
  uint64_t v15 = __chkstk_darwin(v96);
  uint64_t v107 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v95 = (uint64_t)&v90 - v18;
  __chkstk_darwin(v17);
  uint64_t v106 = (uint64_t)&v90 - v19;
  v99 = (char *)(__swift_instantiateConcreteTypeFromMangledName(&qword_265DB8) - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (uint64_t)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_169340();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  long long v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1692A0();
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  long long v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC0);
  uint64_t v30 = v29 - 8;
  __chkstk_darwin(v29);
  long long v32 = (uint64_t *)((char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC8);
  uint64_t v34 = v33 - 8;
  uint64_t v35 = __chkstk_darwin(v33);
  long long v37 = (char *)&v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v114 = (uint64_t)&v90 - v38;
  uint64_t v39 = sub_169560();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for RoundedCornerStyle.continuous(_:), v21);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(&v28[*(int *)(v26 + 28)], v24, v21);
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)long long v28 = _Q0;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v44 = v94;
  sub_13F78C((uint64_t)v28, v94);
  *(_WORD *)(v44 + *((int *)v99 + 11)) = 256;
  sub_13F990(v44, (uint64_t)v32 + *(int *)(v30 + 44), &qword_265DB8);
  uint64_t *v32 = v39;
  swift_retain();
  sub_13FA20(v44, &qword_265DB8);
  sub_13F7F0((uint64_t)v28);
  swift_release();
  uint64_t v45 = sub_169570();
  sub_13F990((uint64_t)v32, (uint64_t)v37, &qword_265DC0);
  long long v46 = (uint64_t *)&v37[*(int *)(v34 + 44)];
  *long long v46 = v45;
  v46[1] = 0x4014000000000000;
  v46[2] = 0;
  v46[3] = 0;
  sub_13FA20((uint64_t)v32, &qword_265DC0);
  v99 = v37;
  sub_13FAA8((uint64_t)v37, v114, &qword_265DC8);
  if (qword_2658A0 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_268010;
  uint64_t v48 = sub_169370();
  uint64_t v49 = (uint64_t)v102;
  uint64_t *v102 = v48;
  *(void *)(v49 + 8) = v47;
  *(unsigned char *)(v49 + 16) = 0;
  uint64_t v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_265DD0) + 44);
  sub_169790();
  sub_169240();
  uint64_t v94 = v115;
  int v93 = v116;
  uint64_t v92 = v117;
  char v51 = v118;
  uint64_t v52 = v119;
  uint64_t v91 = v120;
  uint64_t v53 = swift_allocObject();
  _ZF = (v104 & 1) == 0;
  v104 &= 1u;
  *(unsigned char *)(v53 + 16) = v104;
  if (_ZF) {
    double v55 = 0.0;
  }
  else {
    double v55 = 1.0;
  }
  if (_ZF) {
    double v56 = 1.0;
  }
  else {
    double v56 = 0.0;
  }
  sub_13F868();
  uint64_t v57 = v98;
  sub_1696C0();
  uint64_t v58 = v103;
  v59 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  v60 = v101;
  uint64_t v61 = v105;
  v59(v101, v57, v105);
  *(void *)uint64_t v50 = 0;
  *(unsigned char *)(v50 + 8) = 1;
  *(void *)(v50 + 16) = v94;
  *(unsigned char *)(v50 + 24) = v93;
  *(void *)(v50 + 32) = v92;
  *(unsigned char *)(v50 + 40) = v51;
  uint64_t v62 = v91;
  *(void *)(v50 + 48) = v52;
  *(void *)(v50 + 56) = v62;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DE0);
  v59((char *)(v50 + *(int *)(v63 + 48)), v60, v61);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v58 + 8);
  v64(v57, v61);
  v64(v60, v61);
  LOBYTE(v64) = sub_169410();
  sub_169200();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v73 = v100;
  sub_13F990(v49, v100, &qword_265DA0);
  uint64_t v74 = v73 + *(int *)(v97 + 36);
  *(unsigned char *)uint64_t v74 = (_BYTE)v64;
  *(void *)(v74 + 8) = v66;
  *(void *)(v74 + 16) = v68;
  *(void *)(v74 + 24) = v70;
  *(void *)(v74 + 32) = v72;
  *(unsigned char *)(v74 + 40) = 0;
  sub_13FA20(v49, &qword_265DA0);
  uint64_t v75 = v95;
  sub_13F990(v73, v95, &qword_265DA8);
  *(double *)(v75 + *(int *)(v96 + 36)) = v55;
  sub_13FA20(v73, &qword_265DA8);
  uint64_t v76 = v106;
  sub_13FAA8(v75, v106, &qword_265DB0);
  uint64_t v77 = qword_268010;
  uint64_t v78 = sub_169370();
  uint64_t v79 = (uint64_t)v110;
  uint64_t *v110 = v78;
  *(void *)(v79 + 8) = v77;
  *(unsigned char *)(v79 + 16) = 0;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DE8);
  sub_13CEE4(v104, v79 + *(int *)(v80 + 44));
  uint64_t v81 = v108;
  sub_13F990(v79, v108, &qword_265D88);
  *(double *)(v81 + *(int *)(v109 + 36)) = v56;
  sub_13FA20(v79, &qword_265D88);
  uint64_t v82 = v111;
  sub_13FAA8(v81, v111, &qword_265D90);
  uint64_t v83 = v114;
  uint64_t v84 = (uint64_t)v99;
  sub_13F990(v114, (uint64_t)v99, &qword_265DC8);
  uint64_t v85 = v107;
  sub_13F990(v76, v107, &qword_265DB0);
  uint64_t v86 = v112;
  sub_13F990(v82, v112, &qword_265D90);
  uint64_t v87 = v113;
  sub_13F990(v84, v113, &qword_265DC8);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DF0);
  sub_13F990(v85, v87 + *(int *)(v88 + 48), &qword_265DB0);
  sub_13F990(v86, v87 + *(int *)(v88 + 64), &qword_265D90);
  sub_13FA20(v82, &qword_265D90);
  sub_13FA20(v76, &qword_265DB0);
  sub_13FA20(v83, &qword_265DC8);
  sub_13FA20(v86, &qword_265D90);
  sub_13FA20(v85, &qword_265DB0);
  return sub_13FA20(v84, &qword_265DC8);
}

uint64_t sub_13CEE4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v44 = a1;
  uint64_t v46 = sub_1693A0();
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_169740();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (_OWORD *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_169750();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DF8);
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E00);
  uint64_t v15 = __chkstk_darwin(v43);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  sub_169790();
  sub_169240();
  uint64_t v42 = v51;
  int v41 = v52;
  uint64_t v40 = v53;
  int v39 = v54;
  uint64_t v38 = v55;
  uint64_t v37 = v56;
  _OWORD *v7 = xmmword_1A2030;
  (*(void (**)(_OWORD *, void, uint64_t))(v5 + 104))(v7, enum case for GridItem.Size.flexible(_:), v4);
  sub_169760();
  uint64_t v20 = sub_169920();
  *(void *)(v20 + 16) = 2;
  unint64_t v21 = v20 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v21, v11, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + *(void *)(v9 + 72), v11, v8);
  char v49 = v44;
  sub_169370();
  int v50 = 0;
  sub_13F8C4(&qword_265E08, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  sub_169D40();
  __swift_instantiateConcreteTypeFromMangledName(&qword_265D98);
  sub_13F90C();
  sub_1697D0();
  if (qword_2658A0 != -1) {
    swift_once();
  }
  char v22 = sub_169410();
  sub_169200();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v47;
  uint64_t v31 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v17, v14, v48);
  uint64_t v33 = &v17[*(int *)(v43 + 36)];
  char *v33 = v22;
  *((void *)v33 + 1) = v24;
  *((void *)v33 + 2) = v26;
  *((void *)v33 + 3) = v28;
  *((void *)v33 + 4) = v30;
  v33[40] = 0;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
  sub_13FAA8((uint64_t)v17, (uint64_t)v19, &qword_265E00);
  sub_13F990((uint64_t)v19, (uint64_t)v17, &qword_265E00);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v42;
  *(unsigned char *)(a2 + 24) = v41;
  *(void *)(a2 + 32) = v40;
  *(unsigned char *)(a2 + 40) = v39;
  uint64_t v34 = v37;
  *(void *)(a2 + 48) = v38;
  *(void *)(a2 + 56) = v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E18);
  sub_13F990((uint64_t)v17, a2 + *(int *)(v35 + 48), &qword_265E00);
  sub_13FA20((uint64_t)v19, &qword_265E00);
  return sub_13FA20((uint64_t)v17, &qword_265E00);
}

uint64_t sub_13D490(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_13F868();

  return sub_1696C0();
}

uint64_t sub_13D51C@<X0>(uint64_t *a1@<X8>)
{
  int v3 = *v1;
  *a1 = sub_169770();
  a1[1] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D80);
  return sub_13C440(v3, (uint64_t)a1 + *(int *)(v5 + 44));
}

uint64_t sub_13D564@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v100 = a2;
  int v99 = a1;
  uint64_t v96 = a3;
  uint64_t v3 = sub_1695E0();
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v83 = v3;
  __chkstk_darwin(v3);
  uint64_t v81 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E28);
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v88 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v89 = (uint64_t)&v73 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E30);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v97 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v95 = (uint64_t)&v73 - v12;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DB8);
  __chkstk_darwin(v98);
  uint64_t v90 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_169340();
  uint64_t v15 = *(void **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1692A0();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC0);
  uint64_t v22 = v21 - 8;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (uint64_t *)((char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v73 - v26;
  uint64_t v28 = sub_169560();
  uint64_t v29 = (void (*)(void))v15[13];
  unsigned int v79 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v80 = v15 + 13;
  uint64_t v78 = (void (*)(char *, void, uint64_t))v29;
  v29(v17);
  uint64_t v84 = v18;
  uint64_t v30 = &v20[*(int *)(v18 + 20)];
  uint64_t v76 = (void (*)(char *, char *, uint64_t))v15[2];
  uint64_t v77 = v15 + 2;
  v76(v30, v17, v14);
  __asm { FMOV            V0.2D, #10.0 }
  long long v75 = _Q0;
  *(_OWORD *)uint64_t v20 = _Q0;
  uint64_t v36 = (void (*)(char *, uint64_t))v15[1];
  uint64_t v85 = v17;
  uint64_t v86 = v14;
  uint64_t v87 = v15 + 1;
  v36(v17, v14);
  uint64_t v37 = v36;
  uint64_t v38 = v90;
  sub_13F78C((uint64_t)v20, v90);
  *(_WORD *)(v38 + *(int *)(v98 + 36)) = 256;
  sub_13F990(v38, (uint64_t)v25 + *(int *)(v22 + 44), &qword_265DB8);
  *uint64_t v25 = v28;
  swift_retain();
  sub_13FA20(v38, &qword_265DB8);
  sub_13F7F0((uint64_t)v20);
  int v39 = (void *)v100;
  swift_release();
  int v93 = v27;
  uint64_t v94 = v25;
  sub_13FAA8((uint64_t)v25, (uint64_t)v27, &qword_265DC0);
  if (!v39)
  {
    uint64_t v43 = 1;
    uint64_t v44 = v95;
    uint64_t v45 = v92;
    goto LABEL_12;
  }
  id v74 = v39;
  sub_1695C0();
  int v41 = v81;
  uint64_t v40 = v82;
  uint64_t v42 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, enum case for Image.ResizingMode.stretch(_:), v83);
  uint64_t v73 = sub_1695F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  if (v99)
  {
    if (qword_2658B8 != -1) {
      swift_once();
    }
    if (qword_2658B0 == -1) {
      goto LABEL_11;
    }
  }
  else
  {
    if (qword_2658C8 != -1) {
      swift_once();
    }
    if (qword_2658C0 == -1) {
      goto LABEL_11;
    }
  }
  swift_once();
LABEL_11:
  sub_169790();
  sub_169240();
  uint64_t v46 = v122;
  char v47 = v123;
  uint64_t v48 = v124;
  LODWORD(v83) = v125;
  uint64_t v81 = v127;
  uint64_t v82 = v126;
  int v50 = v85;
  uint64_t v49 = v86;
  v78(v85, v79, v86);
  v76(&v20[*(int *)(v84 + 20)], v50, v49);
  *(_OWORD *)uint64_t v20 = v75;
  v37(v50, v49);
  sub_13F78C((uint64_t)v20, v38);
  *(_WORD *)(v38 + *(int *)(v98 + 36)) = 256;
  uint64_t v45 = v92;
  uint64_t v51 = (uint64_t)v88;
  sub_13F990(v38, (uint64_t)&v88[*(int *)(v92 + 36)], &qword_265DB8);
  *(void *)uint64_t v51 = v73;
  *(void *)(v51 + 8) = 0;
  *(_WORD *)(v51 + 16) = 257;
  *(void *)(v51 + 24) = v46;
  *(unsigned char *)(v51 + 32) = v47;
  *(void *)(v51 + 40) = v48;
  *(unsigned char *)(v51 + 48) = v83;
  unsigned __int8 v52 = v81;
  *(void *)(v51 + 56) = v82;
  *(void *)(v51 + 64) = v52;
  swift_retain();
  sub_13FA20(v38, &qword_265DB8);

  sub_13F7F0((uint64_t)v20);
  swift_release();
  uint64_t v53 = v89;
  sub_13FAA8(v51, v89, &qword_265E28);
  uint64_t v44 = v95;
  sub_13FAA8(v53, v95, &qword_265E28);
  uint64_t v43 = 0;
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v44, v43, 1, v45);
  if (qword_2658A0 != -1) {
    swift_once();
  }
  uint64_t v100 = qword_268010;
  uint64_t v98 = sub_169370();
  sub_13DF98((uint64_t)v101);
  *(_OWORD *)((char *)&v103[9] + 7) = v101[9];
  *(_OWORD *)((char *)&v103[10] + 7) = v101[10];
  *(_OWORD *)((char *)&v103[11] + 7) = v102[0];
  v103[12] = *(_OWORD *)((char *)v102 + 9);
  *(_OWORD *)((char *)&v103[5] + 7) = v101[5];
  *(_OWORD *)((char *)&v103[6] + 7) = v101[6];
  *(_OWORD *)((char *)&v103[7] + 7) = v101[7];
  *(_OWORD *)((char *)&v103[8] + 7) = v101[8];
  *(_OWORD *)((char *)&v103[1] + 7) = v101[1];
  *(_OWORD *)((char *)&v103[2] + 7) = v101[2];
  *(_OWORD *)((char *)&v103[3] + 7) = v101[3];
  *(_OWORD *)((char *)&v103[4] + 7) = v101[4];
  char v104 = 0;
  *(_OWORD *)((char *)v103 + 7) = v101[0];
  int v99 = 0;
  uint64_t v55 = (uint64_t)v93;
  uint64_t v54 = (uint64_t)v94;
  sub_13F990((uint64_t)v93, (uint64_t)v94, &qword_265DC0);
  uint64_t v56 = v97;
  sub_13F990(v44, v97, &qword_265E30);
  uint64_t v57 = v96;
  sub_13F990(v54, v96, &qword_265DC0);
  uint64_t v58 = v44;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E38);
  sub_13F990(v56, v57 + *(int *)(v59 + 48), &qword_265E30);
  uint64_t v60 = *(int *)(v59 + 64);
  *(_OWORD *)&v106[145] = v103[9];
  *(_OWORD *)&v106[161] = v103[10];
  *(_OWORD *)&v106[177] = v103[11];
  *(_OWORD *)&v106[193] = v103[12];
  *(_OWORD *)&v106[81] = v103[5];
  *(_OWORD *)&v106[97] = v103[6];
  *(_OWORD *)&v106[113] = v103[7];
  *(_OWORD *)&v106[129] = v103[8];
  *(_OWORD *)&v106[33] = v103[2];
  uint64_t v61 = v57 + v60;
  uint64_t v62 = v98;
  *(void *)&long long v105 = v98;
  uint64_t v63 = v100;
  *((void *)&v105 + 1) = v100;
  char v64 = v99;
  v106[0] = v99;
  *(_OWORD *)&v106[49] = v103[3];
  *(_OWORD *)&v106[65] = v103[4];
  *(_OWORD *)&v106[17] = v103[1];
  *(_OWORD *)&v106[1] = v103[0];
  long long v65 = *(_OWORD *)&v106[192];
  *(_OWORD *)(v61 + 192) = *(_OWORD *)&v106[176];
  *(_OWORD *)(v61 + 208) = v65;
  *(unsigned char *)(v61 + 224) = v106[208];
  long long v66 = *(_OWORD *)&v106[128];
  *(_OWORD *)(v61 + 128) = *(_OWORD *)&v106[112];
  *(_OWORD *)(v61 + 144) = v66;
  long long v67 = *(_OWORD *)&v106[160];
  *(_OWORD *)(v61 + 160) = *(_OWORD *)&v106[144];
  *(_OWORD *)(v61 + 176) = v67;
  long long v68 = *(_OWORD *)&v106[64];
  *(_OWORD *)(v61 + 64) = *(_OWORD *)&v106[48];
  *(_OWORD *)(v61 + 80) = v68;
  long long v69 = *(_OWORD *)&v106[96];
  *(_OWORD *)(v61 + 96) = *(_OWORD *)&v106[80];
  *(_OWORD *)(v61 + 112) = v69;
  long long v70 = *(_OWORD *)v106;
  *(_OWORD *)uint64_t v61 = v105;
  *(_OWORD *)(v61 + 16) = v70;
  long long v71 = *(_OWORD *)&v106[32];
  *(_OWORD *)(v61 + 32) = *(_OWORD *)&v106[16];
  *(_OWORD *)(v61 + 48) = v71;
  sub_13F9F4((uint64_t)&v105);
  sub_13FA20(v58, &qword_265E30);
  sub_13FA20(v55, &qword_265DC0);
  long long v118 = v103[9];
  long long v119 = v103[10];
  long long v120 = v103[11];
  long long v121 = v103[12];
  long long v114 = v103[5];
  long long v115 = v103[6];
  long long v116 = v103[7];
  long long v117 = v103[8];
  long long v110 = v103[1];
  long long v111 = v103[2];
  long long v112 = v103[3];
  long long v113 = v103[4];
  v107[0] = v62;
  v107[1] = v63;
  char v108 = v64;
  long long v109 = v103[0];
  sub_13FA7C((uint64_t)v107);
  sub_13FA20(v56, &qword_265E30);
  return sub_13FA20(v54, &qword_265DC0);
}

uint64_t sub_13DF98@<X0>(uint64_t a1@<X8>)
{
  sub_169790();
  sub_169240();
  uint64_t v2 = v34;
  char v3 = v35;
  uint64_t v4 = v36;
  char v5 = v37;
  uint64_t v6 = v38;
  uint64_t v7 = v39;
  uint64_t v8 = sub_169570();
  if (qword_2658A8 != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_268018;
  uint64_t v10 = sub_169790();
  sub_13BC88(0.0, 1, 0.0, 1, 35.0, 0, 0.0, 1, (uint64_t)&v26, v9, 0.0, 1, 16.0, 0, v10, v11, v8);
  swift_release();
  v40[4] = v30;
  v40[5] = v31;
  v40[6] = v32;
  v40[7] = v33;
  v40[0] = v26;
  v40[1] = v27;
  v40[2] = v28;
  v40[3] = v29;
  long long v13 = v30;
  long long v12 = v31;
  long long v15 = v31;
  long long v14 = v32;
  *(_OWORD *)(a1 + 128) = v30;
  *(_OWORD *)(a1 + 144) = v12;
  long long v17 = v32;
  long long v16 = v33;
  long long v18 = v33;
  *(_OWORD *)(a1 + 160) = v14;
  *(_OWORD *)(a1 + 176) = v16;
  long long v19 = v27;
  long long v21 = v26;
  long long v20 = v27;
  *(_OWORD *)(a1 + 64) = v26;
  *(_OWORD *)(a1 + 80) = v19;
  long long v22 = v29;
  long long v24 = v28;
  long long v23 = v29;
  *(_OWORD *)(a1 + 96) = v28;
  *(_OWORD *)(a1 + 112) = v22;
  v45[2] = v24;
  v45[3] = v23;
  v45[0] = v21;
  v45[1] = v20;
  char v44 = 1;
  char v43 = v3;
  char v42 = v5;
  char v41 = 1;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 200) = 1;
  v45[6] = v17;
  v45[7] = v18;
  v45[4] = v13;
  v45[5] = v15;
  sub_13FB0C((uint64_t)v40);
  return sub_13FB38((uint64_t)v45);
}

uint64_t sub_13E16C@<X0>(uint64_t *a1@<X8>)
{
  int v3 = *v1;
  uint64_t v4 = *((void *)v1 + 1);
  *a1 = sub_169770();
  a1[1] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265E20);
  return sub_13D564(v3, v4, (uint64_t)a1 + *(int *)(v6 + 44));
}

uint64_t sub_13E1C4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D28);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_169880();
  uint64_t v9 = v8;
  if (v7 == sub_169880() && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_169CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (qword_2658B8 != -1) {
      swift_once();
    }
    if (qword_2658B0 == -1) {
      goto LABEL_15;
    }
LABEL_16:
    swift_once();
    goto LABEL_15;
  }
  if (qword_2658C8 != -1) {
    swift_once();
  }
  if (qword_2658C0 != -1) {
    goto LABEL_16;
  }
LABEL_15:
  sub_169790();
  sub_169240();
  v14[8] = v12 & 1;
  uint64_t v15 = v20;
  char v16 = v21;
  uint64_t v17 = v22;
  char v18 = v23;
  long long v19 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_265D30);
  sub_13F338(&qword_265D38, &qword_265D30, (void (*)(void))sub_13F2E4);
  sub_1694F0();
  return sub_13FAA8((uint64_t)v6, a2, &qword_265D28);
}

uint64_t sub_13E458@<X0>(uint64_t a1@<X8>)
{
  return sub_13E1C4(*(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_13E464@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265D48);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    uint64_t v9 = qword_2658B8;
    id v10 = a2;
    if (v9 != -1) {
      swift_once();
    }
    if (qword_2658B0 == -1) {
      goto LABEL_9;
    }
LABEL_10:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v11 = qword_2658C8;
  id v12 = a2;
  if (v11 != -1) {
    swift_once();
  }
  if (qword_2658C0 != -1) {
    goto LABEL_10;
  }
LABEL_9:
  sub_169790();
  sub_169240();
  v14[0] = a1 & 1;
  uint64_t v15 = a2;
  uint64_t v16 = v21;
  char v17 = v22;
  uint64_t v18 = v23;
  char v19 = v24;
  long long v20 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_265D50);
  sub_13F338(&qword_265D58, &qword_265D50, (void (*)(void))sub_13F3B8);
  sub_1694F0();

  return sub_13FAA8((uint64_t)v8, a3, &qword_265D48);
}

uint64_t sub_13E69C@<X0>(uint64_t a1@<X8>)
{
  return sub_13E464(*(unsigned char *)v1, *(void **)(v1 + 8), a1);
}

id sub_13E6A8(void *a1)
{
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for ClarityOnboardingPreviewView();
  id v3 = objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v4 = a1;
  LOBYTE(v22) = AXDeviceIsPad();
  id v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_265D20));
  uint64_t v6 = (void *)sub_169270();
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v4, v22);
  [v3 addSubview:v6];
  id v7 = [v6 leadingAnchor];
  id v8 = [v3 leadingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v10 = [v6 trailingAnchor];
  id v11 = [v3 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v13 = [v6 topAnchor];
  id v14 = [v3 topAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v16 = [v6 bottomAnchor];
  id v17 = [v3 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  char v19 = self;
  sub_13F0DC();
  Class isa = sub_1698E0().super.isa;
  swift_bridgeObjectRelease();
  [v19 activateConstraints:isa];

  return v3;
}

void ClarityOnboardingPreviewView.init(frame:)()
{
}

id ClarityOnboardingPreviewView.__deallocating_deinit()
{
  return sub_13F080(type metadata accessor for ClarityOnboardingPreviewView);
}

uint64_t type metadata accessor for ClarityOnboardingPreviewView()
{
  return self;
}

id sub_13EB20(void *a1)
{
  v25.receiver = v1;
  v25.super_class = (Class)type metadata accessor for ClarityLockScreenPreviewView();
  id v3 = objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v4 = a1;
  id v5 = v3;
  LOBYTE(v23) = AXDeviceIsPad();
  char v24 = a1;
  id v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_265D10));
  id v7 = (void *)sub_169270();
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v23, v24);
  [v5 addSubview:v7];
  id v8 = [v7 leadingAnchor];
  id v9 = [v5 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v11 = [v7 trailingAnchor];
  id v12 = [v5 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v14 = [v7 topAnchor];
  id v15 = [v5 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v17 = [v7 bottomAnchor];
  id v18 = [v5 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  long long v20 = self;
  sub_13F0DC();
  Class isa = sub_1698E0().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:isa];

  return v5;
}

id sub_13EF40(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id ClarityOnboardingAdminPreviewView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, "initWithFrame:", a1, a2, a3, a4);
}

void ClarityLockScreenPreviewView.init(frame:)()
{
}

void sub_13F008()
{
}

void sub_13F03C()
{
}

id ClarityLockScreenPreviewView.__deallocating_deinit()
{
  return sub_13F080(type metadata accessor for ClarityLockScreenPreviewView);
}

id sub_13F080(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for ClarityLockScreenPreviewView()
{
  return self;
}

unint64_t sub_13F0DC()
{
  unint64_t result = qword_265D18;
  if (!qword_265D18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_265D18);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ClarityOnboardingDevicePreviewView(uint64_t a1, uint64_t a2)
{
  objc_super v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for ClarityOnboardingDevicePreviewView(id *a1)
{
}

uint64_t assignWithCopy for ClarityOnboardingDevicePreviewView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ClarityOnboardingDevicePreviewView(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityOnboardingDevicePreviewView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityOnboardingDevicePreviewView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingDevicePreviewView()
{
  return &type metadata for ClarityOnboardingDevicePreviewView;
}

ValueMetadata *type metadata accessor for ClarityLockScreenDevicePreviewView()
{
  return &type metadata for ClarityLockScreenDevicePreviewView;
}

uint64_t sub_13F2AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13F2C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_13F2E4()
{
  unint64_t result = qword_265D40;
  if (!qword_265D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265D40);
  }
  return result;
}

uint64_t sub_13F338(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_13F3B8()
{
  unint64_t result = qword_265D60;
  if (!qword_265D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265D60);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingDeviceBackgroundAndApps()
{
  return &type metadata for ClarityOnboardingDeviceBackgroundAndApps;
}

uint64_t initializeBufferWithCopyOfBuffer for ClarityOnboardingDeviceLockScreen(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  objc_super v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  id v4 = v3;
  return a1;
}

void destroy for ClarityOnboardingDeviceLockScreen(uint64_t a1)
{
}

uint64_t assignWithCopy for ClarityOnboardingDeviceLockScreen(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  objc_super v3 = *(void **)(a1 + 8);
  id v4 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  id v5 = v4;

  return a1;
}

uint64_t assignWithTake for ClarityOnboardingDeviceLockScreen(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  objc_super v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t _s21AccessibilitySettings34ClarityLockScreenDevicePreviewViewVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s21AccessibilitySettings34ClarityLockScreenDevicePreviewViewVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingDeviceLockScreen()
{
  return &type metadata for ClarityOnboardingDeviceLockScreen;
}

unint64_t sub_13F5B0()
{
  unint64_t result = qword_265D68;
  if (!qword_265D68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265D28);
    sub_13F338(&qword_265D38, &qword_265D30, (void (*)(void))sub_13F2E4);
    sub_13F8C4((unint64_t *)&qword_265D70, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265D68);
  }
  return result;
}

unint64_t sub_13F684()
{
  unint64_t result = qword_265D78;
  if (!qword_265D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265D48);
    sub_13F338(&qword_265D58, &qword_265D50, (void (*)(void))sub_13F3B8);
    sub_13F8C4((unint64_t *)&qword_265D70, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265D78);
  }
  return result;
}

uint64_t sub_13F754()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13F770()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13F78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1692A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_13F7F0(uint64_t a1)
{
  uint64_t v2 = sub_1692A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_13F84C()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_13F85C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unint64_t sub_13F868()
{
  unint64_t result = qword_265DD8;
  if (!qword_265DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265DD8);
  }
  return result;
}

uint64_t sub_13F8BC()
{
  return sub_13D490(*(unsigned char *)(v0 + 16));
}

uint64_t sub_13F8C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_13F90C()
{
  unint64_t result = qword_265E10;
  if (!qword_265E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265D98);
    sub_13F868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265E10);
  }
  return result;
}

uint64_t sub_13F980()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_13F990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_13F9F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_13FA20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_13FA7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_13FAA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_13FB0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_13FB38(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityOnboardingDeviceAdminPreviewView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s21AccessibilitySettings40ClarityOnboardingDeviceBackgroundAndAppsVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x13FCD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingPreviewAppButton()
{
  return &type metadata for ClarityOnboardingPreviewAppButton;
}

ValueMetadata *type metadata accessor for ClarityLockScreenPreviewButton()
{
  return &type metadata for ClarityLockScreenPreviewButton;
}

void *initializeBufferWithCopyOfBuffer for ClarityOnboardingPreviewRoundedRectangle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ClarityOnboardingPreviewRoundedRectangle()
{
  return swift_release();
}

void *assignWithCopy for ClarityOnboardingPreviewRoundedRectangle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ClarityOnboardingPreviewRoundedRectangle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityOnboardingPreviewRoundedRectangle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityOnboardingPreviewRoundedRectangle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingPreviewRoundedRectangle()
{
  return &type metadata for ClarityOnboardingPreviewRoundedRectangle;
}

uint64_t sub_13FE64()
{
  return sub_138494(&qword_265E40, &qword_265E48);
}

uint64_t sub_13FEA0()
{
  return sub_138494(&qword_265E50, &qword_265E58);
}

uint64_t sub_13FEDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13FEF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13FF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_13FF30(uint64_t a1)
{
  return a1;
}

uint64_t sub_13FF98(uint64_t a1)
{
  return a1;
}

unint64_t sub_140004()
{
  unint64_t result = qword_265E60;
  if (!qword_265E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265E60);
  }
  return result;
}

uint64_t sub_140058(uint64_t a1)
{
  return a1;
}

uint64_t sub_1400A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1400F0()
{
  unint64_t result = qword_265E68;
  if (!qword_265E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265E68);
  }
  return result;
}

uint64_t sub_140144(uint64_t a1)
{
  return a1;
}

uint64_t sub_14018C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1401D8()
{
  return sub_140210(&qword_265E70, &qword_265E78, &qword_265E80, &qword_265E88);
}

uint64_t sub_140210(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_138494(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1402AC()
{
  return sub_140210(&qword_265E90, &qword_265E98, &qword_265EA0, &qword_265EA8);
}

unint64_t sub_1402E8()
{
  unint64_t result = qword_265EB0;
  if (!qword_265EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265DC0);
    sub_140388();
    sub_138494(&qword_265EE0, &qword_265DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265EB0);
  }
  return result;
}

unint64_t sub_140388()
{
  unint64_t result = qword_265EB8;
  if (!qword_265EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265EC0);
    sub_140428();
    sub_138494(&qword_265ED0, &qword_265ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265EB8);
  }
  return result;
}

unint64_t sub_140428()
{
  unint64_t result = qword_265EC8;
  if (!qword_265EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265EC8);
  }
  return result;
}

uint64_t sub_14049C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v45 = a2;
  uint64_t v50 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F80);
  __chkstk_darwin(v46);
  uint64_t v49 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F88);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DB8) - 8;
  __chkstk_darwin(v44);
  BOOL v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_169340();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1692A0();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  id v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  id v19 = (uint64_t *)((char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F90);
  __chkstk_darwin(v43);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for RoundedCornerStyle.continuous(_:), v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v15[*(int *)(v13 + 28)], v11, v8);
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)id v15 = _Q0;
  long long v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v27(v11, v8);
  sub_143A68((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v7[*(int *)(v44 + 44)] = 256;
  sub_13F990((uint64_t)v7, (uint64_t)v19 + *(int *)(v17 + 44), &qword_265DB8);
  *id v19 = a1;
  swift_retain();
  sub_13FA20((uint64_t)v7, &qword_265DB8);
  sub_143AD0((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  if (qword_2658A0 != -1) {
    swift_once();
  }
  char v28 = sub_169410();
  sub_169200();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_13F990((uint64_t)v19, (uint64_t)v21, &qword_265DC0);
  char v37 = &v21[*(int *)(v43 + 36)];
  *char v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_13FA20((uint64_t)v19, &qword_265DC0);
  sub_169790();
  sub_169240();
  uint64_t v38 = v48;
  sub_13F990((uint64_t)v21, v48, &qword_265F90);
  uint64_t v39 = (_OWORD *)(v38 + *(int *)(v47 + 36));
  long long v40 = v52;
  *uint64_t v39 = v51;
  v39[1] = v40;
  v39[2] = v53;
  sub_13F990(v38, v49, &qword_265F88);
  swift_storeEnumTagMultiPayload();
  sub_142BFC(&qword_265F98, &qword_265F88, (void (*)(void))sub_142C78);
  sub_169390();
  sub_13FA20(v38, &qword_265F88);
  return sub_13FA20((uint64_t)v21, &qword_265F90);
}

uint64_t sub_140A74@<X0>(uint64_t a1@<X8>)
{
  return sub_14049C(*(void *)v1, *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_140A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v74 = a2;
  uint64_t v2 = sub_169290();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  long long v69 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v68 = (uint64_t)&v62 - v5;
  uint64_t v6 = sub_1696A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2660F0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2660F8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_266100);
  uint64_t v17 = __chkstk_darwin(v73);
  id v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = sub_169340();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v8, v22, v23);
  uint64_t v24 = sub_169570();
  sub_143A68((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(void *)&v12[*(int *)(v10 + 44)] = v24;
  sub_143AD0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for Capsule);
  sub_169790();
  sub_169240();
  sub_13F990((uint64_t)v12, (uint64_t)v16, &qword_2660F0);
  objc_super v25 = &v16[*(int *)(v14 + 44)];
  long long v26 = v95[3];
  *(_OWORD *)objc_super v25 = v95[2];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v95[4];
  sub_13FA20((uint64_t)v12, &qword_2660F0);
  char v27 = sub_169400();
  if (qword_2658A0 != -1) {
    swift_once();
  }
  sub_169200();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_13F990((uint64_t)v16, (uint64_t)v19, &qword_2660F8);
  uint64_t v36 = &v19[*((int *)v73 + 9)];
  *uint64_t v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_13FA20((uint64_t)v16, &qword_2660F8);
  uint64_t v72 = v21;
  uint64_t v73 = v19;
  sub_13FAA8((uint64_t)v19, (uint64_t)v21, &qword_266100);
  uint64_t v67 = sub_169580();
  sub_169790();
  sub_169240();
  uint64_t v37 = v96;
  char v38 = v97;
  uint64_t v39 = v98;
  int v62 = v99;
  uint64_t v64 = v100;
  uint64_t v65 = v101;
  int v63 = sub_169400();
  sub_169200();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  type metadata accessor for ClarityOnboardingToggle();
  uint64_t v48 = v68;
  sub_154C18(v68);
  uint64_t v50 = v69;
  uint64_t v49 = v70;
  uint64_t v51 = v71;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for LayoutDirection.rightToLeft(_:), v71);
  char v52 = sub_169280();
  long long v53 = *(void (**)(char *, uint64_t))(v49 + 8);
  v53(v50, v51);
  v53((char *)v48, v51);
  *(void *)&long long v89 = v67;
  *((void *)&v89 + 1) = v37;
  LOBYTE(v90) = v38;
  *((void *)&v90 + 1) = v39;
  LOBYTE(v91) = v62;
  *((void *)&v91 + 1) = v64;
  *(void *)&long long v92 = v65;
  BYTE8(v92) = v63;
  *(void *)&long long v93 = v41;
  *((void *)&v93 + 1) = v43;
  *(void *)&long long v94 = v45;
  *((void *)&v94 + 1) = v47;
  LOBYTE(v95[0]) = 0;
  if (v52)
  {
    *(_OWORD *)((char *)v95 + 8) = xmmword_1A2400;
    sub_143D04((uint64_t)&v89);
  }
  else
  {
    *(_OWORD *)((char *)v95 + 8) = xmmword_1A23F0;
    sub_143B30((uint64_t)&v89);
  }
  sub_13FAA8((uint64_t)&v89, (uint64_t)&v82, &qword_266108);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_266110);
  sub_142BFC(&qword_266118, &qword_266110, (void (*)(void))sub_143B3C);
  sub_169390();
  uint64_t v55 = (uint64_t)v72;
  uint64_t v54 = (uint64_t)v73;
  sub_13F990((uint64_t)v72, (uint64_t)v73, &qword_266100);
  long long v79 = v106;
  long long v80 = v107;
  v81[0] = v108[0];
  *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)((char *)v108 + 9);
  long long v75 = v102;
  long long v76 = v103;
  long long v77 = v104;
  long long v78 = v105;
  uint64_t v56 = v74;
  sub_13F990(v54, v74, &qword_266100);
  uint64_t v57 = (_OWORD *)(v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_266158) + 48));
  long long v86 = v79;
  long long v87 = v80;
  v88[0] = v81[0];
  *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)((char *)v81 + 9);
  long long v82 = v75;
  long long v83 = v76;
  long long v84 = v77;
  long long v85 = v78;
  sub_143C94((uint64_t)&v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))j__swift_retain);
  swift_release();
  long long v58 = v87;
  v57[4] = v86;
  v57[5] = v58;
  v57[6] = v88[0];
  *(_OWORD *)((char *)v57 + 105) = *(_OWORD *)((char *)v88 + 9);
  long long v59 = v83;
  *uint64_t v57 = v82;
  v57[1] = v59;
  long long v60 = v85;
  v57[2] = v84;
  v57[3] = v60;
  sub_13FA20(v55, &qword_266100);
  long long v93 = v79;
  long long v94 = v80;
  v95[0] = v81[0];
  *(_OWORD *)((char *)v95 + 9) = *(_OWORD *)((char *)v81 + 9);
  long long v89 = v75;
  long long v90 = v76;
  long long v91 = v77;
  long long v92 = v78;
  sub_143C94((uint64_t)&v89, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))j__swift_release);
  return sub_13FA20(v54, &qword_266100);
}

uint64_t sub_1411CC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_169790();
  a1[1] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2660E8);
  return sub_140A84(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_141210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1695E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1695D0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  uint64_t v8 = sub_1695F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_retain();
  sub_169790();
  sub_169240();
  uint64_t v9 = v30;
  char v10 = v31;
  uint64_t v11 = v32;
  char v12 = v33;
  uint64_t v13 = v34;
  uint64_t v14 = v35;
  char v15 = sub_169400();
  if (qword_2658A0 != -1) {
    swift_once();
  }
  uint64_t result = sub_169200();
  char v25 = 0;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 1;
  *(_DWORD *)(a2 + 18) = *(_DWORD *)&v28[9];
  *(_WORD *)(a2 + 22) = v29;
  *(void *)(a2 + 24) = a1;
  *(void *)(a2 + 32) = v9;
  *(unsigned char *)(a2 + 40) = v10;
  int v17 = *(_DWORD *)v28;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v28[3];
  *(_DWORD *)(a2 + 41) = v17;
  *(void *)(a2 + 48) = v11;
  *(unsigned char *)(a2 + 56) = v12;
  int v18 = *(_DWORD *)v27;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v27[3];
  *(_DWORD *)(a2 + 57) = v18;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  *(unsigned char *)(a2 + 80) = v15;
  int v19 = *(_DWORD *)v26;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v26[3];
  *(_DWORD *)(a2 + 81) = v19;
  *(void *)(a2 + 88) = v20;
  *(void *)(a2 + 96) = v21;
  *(void *)(a2 + 104) = v22;
  *(void *)(a2 + 112) = v23;
  *(unsigned char *)(a2 + 120) = v25;
  return result;
}

uint64_t sub_141480@<X0>(uint64_t a1@<X8>)
{
  return sub_141210(*v1, a1);
}

double sub_14148C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_retain();
  sub_169580();
  uint64_t v4 = sub_169590();
  swift_release();
  sub_169220();
  uint64_t v5 = sub_169790();
  uint64_t v7 = v6;
  sub_169790();
  sub_169240();
  *(void *)a1 = v3;
  *(double *)(a1 + 8) = v9 * 0.5;
  *(double *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v4;
  *(_WORD *)(a1 + 64) = 256;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v14;
  *(unsigned char *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  *(unsigned char *)(a1 + 112) = v17;
  double result = *(double *)&v18;
  *(_OWORD *)(a1 + 120) = v18;
  return result;
}

uint64_t sub_1415C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FC8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClarityOnboardingToggle();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v22 - v13;
  *uint64_t v11 = 0x4020000000000000;
  char v15 = (void *)((char *)v11 + *(int *)(v12 + 28));
  uint64_t *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
  swift_storeEnumTagMultiPayload();
  sub_142F48((uint64_t)v11, (uint64_t)v14);
  swift_retain();
  uint64_t v16 = sub_1697B0();
  uint64_t v18 = v17;
  sub_143A68((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ClarityOnboardingToggle);
  int v19 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  *int v19 = v16;
  v19[1] = v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FD8);
  sub_13F990((uint64_t)v7, (uint64_t)a2 + *(int *)(v20 + 36), &qword_265FC8);
  *a2 = a1;
  swift_retain();
  sub_13FA20((uint64_t)v7, &qword_265FC8);
  sub_143AD0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClarityOnboardingToggle);
  return swift_release();
}

uint64_t sub_141798@<X0>(void *a1@<X8>)
{
  return sub_1415C4(*v1, a1);
}

uint64_t sub_1417A0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_retain();
  uint64_t v4 = sub_169570();
  uint64_t result = sub_1697B0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = 0x4008000000000000;
  a1[3] = result;
  a1[4] = v6;
  return result;
}

uint64_t sub_1417F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_retain_n();
  sub_169790();
  sub_169240();
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = a1;
  *(void *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(unsigned char *)(a2 + 64) = v8;
  *(_OWORD *)(a2 + 72) = v9;
  *(void *)(a2 + 88) = a1;

  return swift_retain();
}

__n128 sub_1418A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_169370();
  sub_1417F0(v3, (uint64_t)&v15);
  uint64_t v5 = v16;
  uint64_t v6 = v17;
  char v7 = v18;
  uint64_t v8 = v19;
  char v9 = v20;
  uint64_t v10 = v21;
  char v11 = v22;
  uint64_t v12 = v24;
  __n128 result = v23;
  long long v14 = v15;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v14;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(__n128 *)(a1 + 96) = result;
  *(void *)(a1 + 112) = v12;
  return result;
}

uint64_t sub_141938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DB8) - 8;
  __chkstk_darwin(v64);
  uint64_t v63 = (uint64_t)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_169340();
  uint64_t v2 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1692A0();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_265DC0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  long long v15 = (char *)&v55 - v14;
  sub_169570();
  uint64_t v16 = sub_169590();
  swift_release();
  uint64_t v17 = v62;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for RoundedCornerStyle.continuous(_:), v62);
  uint64_t v18 = *(int *)(v6 + 28);
  uint64_t v19 = (uint64_t)v13;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v8[v18], v4, v17);
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)uint64_t v8 = _Q0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  uint64_t v25 = v63;
  sub_143A68((uint64_t)v8, v63, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v25 + *(int *)(v64 + 44)) = 256;
  sub_13F990(v25, (uint64_t)v13 + *(int *)(v10 + 44), &qword_265DB8);
  uint64_t *v13 = v16;
  swift_retain();
  sub_13FA20(v25, &qword_265DB8);
  sub_143AD0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  sub_13FAA8((uint64_t)v13, (uint64_t)v15, &qword_265DC0);
  if (qword_2658A0 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_268010;
  uint64_t v62 = sub_169370();
  sub_169790();
  sub_169240();
  uint64_t v27 = v65;
  char v28 = v66;
  uint64_t v63 = v67;
  char v29 = v68;
  uint64_t v58 = v70;
  uint64_t v59 = v69;
  uint64_t v64 = sub_169560();
  int v57 = sub_169410();
  sub_169200();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  unsigned __int8 v80 = 0;
  char v78 = 1;
  char v76 = v28;
  char v74 = v29;
  char v71 = 0;
  sub_13F990((uint64_t)v15, v19, &qword_265DC0);
  unsigned __int8 v38 = v80;
  int v56 = v80;
  char v39 = v78;
  char v40 = v76;
  char v41 = v74;
  char v42 = v71;
  long long v60 = v15;
  uint64_t v43 = v61;
  sub_13F990(v19, v61, &qword_265DC0);
  uint64_t v44 = (_OWORD *)(v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_265F58) + 48));
  *(void *)&long long v81 = v62;
  *((void *)&v81 + 1) = v26;
  LOBYTE(v82) = v38;
  *(_DWORD *)((char *)&v82 + 1) = *(_DWORD *)v79;
  DWORD1(v82) = *(_DWORD *)&v79[3];
  *((void *)&v82 + 1) = 0;
  LOBYTE(v83) = v39;
  char v45 = v39;
  uint64_t v61 = v19;
  *(_DWORD *)((char *)&v83 + 1) = *(_DWORD *)v77;
  DWORD1(v83) = *(_DWORD *)&v77[3];
  *((void *)&v83 + 1) = v27;
  LOBYTE(v84) = v40;
  *(_DWORD *)((char *)&v84 + 1) = *(_DWORD *)v75;
  DWORD1(v84) = *(_DWORD *)&v75[3];
  *((void *)&v84 + 1) = v63;
  LOBYTE(v85) = v41;
  *(_DWORD *)((char *)&v85 + 1) = *(_DWORD *)v73;
  DWORD1(v85) = *(_DWORD *)&v73[3];
  uint64_t v46 = v58;
  uint64_t v47 = v59;
  *((void *)&v85 + 1) = v59;
  *(void *)&long long v86 = v58;
  *((void *)&v86 + 1) = v64;
  char v48 = v57;
  LOBYTE(v87) = v57;
  *(_DWORD *)((char *)&v87 + 1) = *(_DWORD *)v72;
  DWORD1(v87) = *(_DWORD *)&v72[3];
  *((void *)&v87 + 1) = v31;
  *(void *)&v88[0] = v33;
  *((void *)&v88[0] + 1) = v35;
  *(void *)&v88[1] = v37;
  BYTE8(v88[1]) = v42;
  long long v49 = v86;
  v44[4] = v85;
  v44[5] = v49;
  long long v50 = v84;
  v44[2] = v83;
  v44[3] = v50;
  long long v51 = v82;
  *uint64_t v44 = v81;
  v44[1] = v51;
  long long v52 = *(_OWORD *)((char *)v88 + 9);
  long long v53 = v88[0];
  v44[6] = v87;
  v44[7] = v53;
  *(_OWORD *)((char *)v44 + 121) = v52;
  sub_14290C((uint64_t)&v81);
  sub_13FA20((uint64_t)v60, &qword_265DC0);
  v89[0] = v62;
  v89[1] = v26;
  char v90 = v56;
  *(_DWORD *)long long v91 = *(_DWORD *)v79;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v79[3];
  uint64_t v92 = 0;
  char v93 = v45;
  *(_DWORD *)long long v94 = *(_DWORD *)v77;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v77[3];
  uint64_t v95 = v27;
  char v96 = v40;
  *(_DWORD *)char v97 = *(_DWORD *)v75;
  *(_DWORD *)&v97[3] = *(_DWORD *)&v75[3];
  uint64_t v98 = v63;
  char v99 = v41;
  *(_DWORD *)uint64_t v100 = *(_DWORD *)v73;
  *(_DWORD *)&v100[3] = *(_DWORD *)&v73[3];
  uint64_t v101 = v47;
  uint64_t v102 = v46;
  uint64_t v103 = v64;
  char v104 = v48;
  *(_DWORD *)long long v105 = *(_DWORD *)v72;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v72[3];
  uint64_t v106 = v31;
  uint64_t v107 = v33;
  uint64_t v108 = v35;
  uint64_t v109 = v37;
  char v110 = v42;
  sub_142938((uint64_t)v89);
  return sub_13FA20(v61, &qword_265DC0);
}

uint64_t sub_141F1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v4 = sub_169770();
  v4[1] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F48);
  sub_141938((uint64_t)v4 + *(int *)(v6 + 44));
  uint64_t v7 = sub_169550();
  char IsPad = AXDeviceIsPad();
  uint64_t v9 = sub_169780();
  uint64_t v11 = v10;
  sub_13F990((uint64_t)v4, a1, &qword_265F40);
  uint64_t v12 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_265F50) + 36);
  *(void *)uint64_t v12 = v7;
  *(void *)(v12 + 8) = 0x4040000000000000;
  *(unsigned char *)(v12 + 16) = IsPad;
  *(void *)(v12 + 24) = v9;
  *(void *)(v12 + 32) = v11;
  return sub_13FA20((uint64_t)v4, &qword_265F40);
}

uint64_t sub_142020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_265F18);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_169790();
  sub_169240();
  uint64_t v6 = v11;
  char v7 = v12;
  uint64_t v8 = v13;
  char v9 = v14;
  long long v10 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_265F20);
  sub_142BFC(&qword_265F28, &qword_265F20, (void (*)(void))sub_142788);
  sub_1694F0();
  return sub_13FAA8((uint64_t)v4, a1, &qword_265F18);
}

uint64_t sub_142184@<X0>(uint64_t a1@<X8>)
{
  return sub_142020(a1);
}

id sub_14218C()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for ClarityOnboardingAdminPreviewView();
  id v1 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  AXDeviceIsPad();
  id v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_265F10));
  uint64_t v3 = (void *)sub_169270();
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v3];
  id v4 = [v3 leadingAnchor];
  id v5 = [v1 leadingAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v7 = [v3 trailingAnchor];
  id v8 = [v1 trailingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v10 = [v3 topAnchor];
  id v11 = [v1 topAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  id v13 = [v3 bottomAnchor];
  id v14 = [v1 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  sub_1698D0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_169910();
  }
  sub_169930();
  sub_169900();
  uint64_t v16 = self;
  sub_13F0DC();
  Class isa = sub_1698E0().super.isa;
  swift_bridgeObjectRelease();
  [v16 activateConstraints:isa];

  return v1;
}

void ClarityOnboardingAdminPreviewView.init(frame:)()
{
}

id ClarityOnboardingAdminPreviewView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClarityOnboardingAdminPreviewView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClarityOnboardingAdminPreviewView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ClarityOnboardingDeviceAdminPreviewView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x142734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingDeviceAdminPreviewView()
{
  return &type metadata for ClarityOnboardingDeviceAdminPreviewView;
}

uint64_t sub_14276C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_142788()
{
  unint64_t result = qword_265F30;
  if (!qword_265F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265F30);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingDeviceBackground()
{
  return &type metadata for ClarityOnboardingDeviceBackground;
}

unint64_t sub_1427F0()
{
  unint64_t result = qword_265F38;
  if (!qword_265F38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265F18);
    sub_142BFC(&qword_265F28, &qword_265F20, (void (*)(void))sub_142788);
    sub_142898();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265F38);
  }
  return result;
}

unint64_t sub_142898()
{
  unint64_t result = qword_265D70;
  if (!qword_265D70)
  {
    sub_1693E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265D70);
  }
  return result;
}

uint64_t sub_1428F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_14290C(uint64_t a1)
{
  return a1;
}

uint64_t sub_142938(uint64_t a1)
{
  return a1;
}

uint64_t sub_142968(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityOnboardingBackButtonRectangle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClarityOnboardingBackButtonRectangle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityOnboardingBackButtonRectangle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityOnboardingBackButtonRectangle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityOnboardingBackButtonRectangle()
{
  return &type metadata for ClarityOnboardingBackButtonRectangle;
}

ValueMetadata *type metadata accessor for ClarityOnboardingAdminSettingGroup()
{
  return &type metadata for ClarityOnboardingAdminSettingGroup;
}

unint64_t sub_142B00()
{
  unint64_t result = qword_265F60;
  if (!qword_265F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265F50);
    sub_138494(&qword_265F68, &qword_265F40);
    sub_138494(&qword_265F70, &qword_265F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265F60);
  }
  return result;
}

uint64_t sub_142BC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_142BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_142BFC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_142C78()
{
  return sub_142BFC(&qword_265FA0, &qword_265F90, (void (*)(void))sub_1402E8);
}

ValueMetadata *type metadata accessor for ClarityOnboardingAdminSettingRectangle()
{
  return &type metadata for ClarityOnboardingAdminSettingRectangle;
}

ValueMetadata *type metadata accessor for ClarityOnboardingAdminListSetting()
{
  return &type metadata for ClarityOnboardingAdminListSetting;
}

ValueMetadata *type metadata accessor for ClarityOnboardingAdminToggleSetting()
{
  return &type metadata for ClarityOnboardingAdminToggleSetting;
}

unint64_t sub_142CDC()
{
  unint64_t result = qword_265FA8;
  if (!qword_265FA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265FB0);
    sub_142BFC(&qword_265F98, &qword_265F88, (void (*)(void))sub_142C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_265FA8);
  }
  return result;
}

uint64_t sub_142D7C()
{
  return sub_138494(&qword_265FB8, &qword_265FC0);
}

uint64_t sub_142DB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_142DD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_142DF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ClarityOnboardingToggle()
{
  uint64_t result = qword_266040;
  if (!qword_266040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_142E58()
{
  return sub_1692C0();
}

uint64_t sub_142E7C(uint64_t a1)
{
  uint64_t v2 = sub_169290();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1692D0();
}

uint64_t sub_142F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClarityOnboardingToggle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for ClarityOnboardingChevron(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ClarityOnboardingChevron()
{
  return swift_release();
}

void *assignWithCopy for ClarityOnboardingChevron(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for ClarityOnboardingChevron(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for ClarityOnboardingChevron()
{
  return &type metadata for ClarityOnboardingChevron;
}

uint64_t *sub_143084(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    id v7 = (uint64_t *)((char *)a2 + v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_169290();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1431A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_169290();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

void *sub_143248(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_169290();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_14330C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_13FA20((uint64_t)a1 + v4, &qword_265FD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_169290();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1433E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_169290();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_1434BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_13FA20((uint64_t)a1 + v4, &qword_265FD0);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_169290();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1435A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1435BC);
}

uint64_t sub_1435BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FE0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_143630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_143644);
}

uint64_t sub_143644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_265FE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_1436BC()
{
  sub_143758();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_143758()
{
  if (!qword_266050)
  {
    sub_169290();
    unint64_t v0 = sub_169210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_266050);
    }
  }
}

uint64_t sub_1437B0()
{
  return sub_142BFC(&qword_266080, &qword_266088, (void (*)(void))sub_1437F4);
}

unint64_t sub_1437F4()
{
  unint64_t result = qword_266090;
  if (!qword_266090)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266098);
    sub_140388();
    sub_138494(&qword_2660A0, &qword_2660A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266090);
  }
  return result;
}

unint64_t sub_143898()
{
  unint64_t result = qword_2660B0;
  if (!qword_2660B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2660B8);
    sub_143938();
    sub_138494(&qword_2660C8, &qword_2660D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2660B0);
  }
  return result;
}

unint64_t sub_143938()
{
  unint64_t result = qword_2660C0;
  if (!qword_2660C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2660C0);
  }
  return result;
}

unint64_t sub_143990()
{
  unint64_t result = qword_2660D8;
  if (!qword_2660D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_265FD8);
    sub_143938();
    sub_138494(&qword_2660E0, &qword_265FC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2660D8);
  }
  return result;
}

uint64_t sub_143A30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_143A4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_143A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_143AD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_143B30(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_143B3C()
{
  return sub_142BFC(&qword_266120, &qword_266128, (void (*)(void))sub_143B6C);
}

uint64_t sub_143B6C()
{
  return sub_142BFC(&qword_266130, &qword_266138, (void (*)(void))sub_143B9C);
}

unint64_t sub_143B9C()
{
  unint64_t result = qword_266140;
  if (!qword_266140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266148);
    sub_143C3C();
    sub_138494(&qword_265ED0, &qword_265ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266140);
  }
  return result;
}

unint64_t sub_143C3C()
{
  unint64_t result = qword_266150;
  if (!qword_266150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266150);
  }
  return result;
}

uint64_t sub_143C94(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_143D04(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_143D0C()
{
  return sub_142BFC(&qword_266160, &qword_266168, (void (*)(void))sub_143D50);
}

uint64_t sub_143D50()
{
  return sub_142BFC(&qword_266170, &qword_266178, (void (*)(void))sub_143D80);
}

unint64_t sub_143D80()
{
  unint64_t result = qword_266180;
  if (!qword_266180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266188);
    sub_143E20();
    sub_138494(&qword_265ED0, &qword_265ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266180);
  }
  return result;
}

unint64_t sub_143E20()
{
  unint64_t result = qword_266190;
  if (!qword_266190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266190);
  }
  return result;
}

uint64_t sub_143E94()
{
  return sub_138494(&qword_2661A0, &qword_2661A8);
}

unint64_t sub_143ED8(uint64_t a1)
{
  return sub_143F28(a1, &qword_266200, &qword_266208, (uint64_t (*)(uint64_t))sub_144424);
}

unint64_t sub_143F00(uint64_t a1)
{
  return sub_143F28(a1, &qword_2661F0, &qword_2661F8, (uint64_t (*)(uint64_t))sub_144424);
}

unint64_t sub_143F28(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_169C90();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_13F990(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_145D20(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_144058(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2661E0);
  uint64_t v2 = (void *)sub_169C90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  char v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1444B8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_14417C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = &_swiftEmptyArrayStorage;
  sub_14478C(0, v2, 0);
  uint64_t v3 = &_swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_145CC4(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_14478C(0, v3[2] + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_14478C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      v3[2] = v6 + 1;
      uint64_t v7 = (char *)&v3[2 * v6];
      *((void *)v7 + 4) = v9;
      *((void *)v7 + 5) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id sub_144384()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AVSEnrollmentCoordinatorFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AVSEnrollmentCoordinatorFactory()
{
  return self;
}

uint64_t sub_1443DC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_144414()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_144424(uint64_t a1)
{
  sub_169880();
  sub_169D20();
  sub_169890();
  Swift::Int v2 = sub_169D30();
  swift_bridgeObjectRelease();

  return sub_144530(a1, v2);
}

unint64_t sub_1444B8(uint64_t a1, uint64_t a2)
{
  sub_169D20();
  sub_169890();
  Swift::Int v4 = sub_169D30();

  return sub_1446A8(a1, a2, v4);
}

unint64_t sub_144530(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_169880();
    uint64_t v8 = v7;
    if (v6 == sub_169880() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_169CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_169880();
          uint64_t v15 = v14;
          if (v13 == sub_169880() && v15 == v16) {
            break;
          }
          char v18 = sub_169CE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1446A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_169CE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_169CE0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_14478C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1447CC(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1447AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_144B78(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1447CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2661E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

uint64_t sub_144938(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_266218);
  uint64_t v10 = *(void *)(sub_168EC0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_168EC0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  char v18 = (char *)v13 + v17;
  long long v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

uint64_t sub_144B78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_266210);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

uint64_t sub_144CE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2661E0);
  char v42 = a2;
  uint64_t v6 = sub_169C80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v13);
    if (!v25)
    {
      int64_t v26 = v13 + 1;
      if (v13 + 1 >= v40)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v39;
        if ((v42 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v26);
      if (!v25)
      {
        while (1)
        {
          int64_t v13 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            break;
          }
          if (v13 >= v40) {
            goto LABEL_31;
          }
          unint64_t v25 = *(void *)(v41 + 8 * v13);
          ++v26;
          if (v25) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_21:
    uint64_t v27 = 16 * v22;
    char v28 = (uint64_t *)(*(void *)(v5 + 48) + v27);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 56) + v27);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_169D20();
    sub_169890();
    uint64_t result = sub_169D30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v36 = v16 == v35;
        if (v16 == v35) {
          unint64_t v16 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v16);
      }
      while (v37 == -1);
      unint64_t v17 = __clz(__rbit64(~v37)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    long long v19 = (void *)(*(void *)(v7 + 48) + v18);
    *long long v19 = v30;
    v19[1] = v29;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v33;
    v20[1] = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_144FF8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_169BC0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_169D20();
        swift_bridgeObjectRetain();
        sub_169890();
        Swift::Int v9 = sub_169D30();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1451D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2661E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_169C70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    if (!v26) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    __n128 v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_145374(uint64_t a1, uint64_t a2)
{
  uint64_t v110 = a1;
  uint64_t v111 = a2;
  uint64_t v2 = sub_169010();
  uint64_t v114 = *(void *)(v2 - 8);
  uint64_t v115 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  long long v112 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v113 = (char *)&v108 - v5;
  unint64_t v6 = sub_144058((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v7 = sub_144058((uint64_t)&_swiftEmptyArrayStorage);
  id v8 = (id)AXAssistiveTouchAccessibilityIcons();
  if (!v8)
  {
    uint64_t v109 = (void *)v6;
    goto LABEL_29;
  }
  int64_t v9 = v8;
  unint64_t v116 = v7;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1698F0();

  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    int64_t v13 = &_swiftEmptyDictionarySingleton;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v109 = (void *)v10;
  unint64_t v12 = (uint64_t *)(v10 + 40);
  int64_t v13 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    uint64_t v15 = *(v12 - 1);
    uint64_t v16 = *v12;
    swift_bridgeObjectRetain_n();
    NSString v17 = sub_169850();
    id v18 = (id)AXUIAssistiveTouchStringForName();

    if (v18) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1444B8(v15, v16);
    char v34 = v33;
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_7;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v117 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1451D0();
      int64_t v13 = v117;
    }
    swift_bridgeObjectRelease();
    sub_144FF8(v32, (uint64_t)v13);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    v12 += 2;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
LABEL_28:
      uint64_t v109 = v13;
      swift_bridgeObjectRelease();
LABEL_29:
      id v41 = (id)AXSystemActionIconTypes();
      id v42 = [v41 allObjects];

      uint64_t v43 = sub_1698F0();
      uint64_t v44 = sub_14417C(v43);
      swift_bridgeObjectRelease();
      if (v44)
      {
        swift_bridgeObjectRelease();
        unint64_t v45 = v44[2];
        if (v45)
        {
          unint64_t v46 = 0;
          uint64_t v47 = v44 + 4;
          char v48 = &_swiftEmptyArrayStorage;
          while (1)
          {
            if (v46 >= v44[2])
            {
              __break(1u);
              goto LABEL_99;
            }
            long long v49 = &v47[2 * v46];
            uint64_t v50 = *v49;
            uint64_t v51 = v49[1];
            swift_bridgeObjectRetain();
            id v52 = (id)AXAssistiveTouchAccessibilityIcons();
            if (!v52) {
              goto LABEL_104;
            }
            long long v53 = v52;
            uint64_t v54 = (void *)sub_1698F0();

            uint64_t v55 = v54[2];
            if (!v55) {
              goto LABEL_43;
            }
            BOOL v56 = v54[4] == v50 && v54[5] == v51;
            if (!v56 && (sub_169CE0() & 1) == 0)
            {
              if (v55 == 1) {
                goto LABEL_43;
              }
              BOOL v61 = v54[6] == v50 && v54[7] == v51;
              if (!v61 && (sub_169CE0() & 1) == 0) {
                break;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_33:
            if (++v46 == v45) {
              goto LABEL_66;
            }
          }
          if (v55 != 2)
          {
            uint64_t v108 = v47;
            unint64_t v116 = v45;
            uint64_t v62 = v54 + 9;
            uint64_t v63 = 2;
            while (1)
            {
              uint64_t v64 = v63 + 1;
              if (__OFADD__(v63, 1)) {
                goto LABEL_103;
              }
              BOOL v65 = *(v62 - 1) == v50 && *v62 == v51;
              if (v65 || (sub_169CE0() & 1) != 0) {
                break;
              }
              v62 += 2;
              ++v63;
              if (v64 == v55)
              {
                swift_bridgeObjectRelease();
                unint64_t v45 = v116;
                uint64_t v47 = v108;
                goto LABEL_44;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v45 = v116;
            uint64_t v47 = v108;
            goto LABEL_33;
          }
LABEL_43:
          swift_bridgeObjectRelease();
LABEL_44:
          char v57 = swift_isUniquelyReferenced_nonNull_native();
          long long v117 = v48;
          if ((v57 & 1) == 0)
          {
            sub_14478C(0, v48[2] + 1, 1);
            char v48 = v117;
          }
          unint64_t v59 = v48[2];
          unint64_t v58 = v48[3];
          if (v59 >= v58 >> 1)
          {
            sub_14478C(v58 > 1, v59 + 1, 1);
            char v48 = v117;
          }
          v48[2] = v59 + 1;
          long long v60 = (char *)&v48[2 * v59];
          *((void *)v60 + 4) = v50;
          *((void *)v60 + 5) = v51;
          goto LABEL_33;
        }
        char v48 = &_swiftEmptyArrayStorage;
LABEL_66:
        swift_bridgeObjectRelease();
        uint64_t v66 = v48[2];
        if (v66)
        {
          uint64_t v67 = v48 + 5;
          char v68 = &_swiftEmptyArrayStorage;
          do
          {
            uint64_t v70 = *(v67 - 1);
            uint64_t v69 = *v67;
            swift_bridgeObjectRetain();
            char v71 = swift_isUniquelyReferenced_nonNull_native();
            long long v117 = v68;
            if ((v71 & 1) == 0)
            {
              sub_14478C(0, v68[2] + 1, 1);
              char v68 = v117;
            }
            unint64_t v73 = v68[2];
            unint64_t v72 = v68[3];
            if (v73 >= v72 >> 1)
            {
              sub_14478C(v72 > 1, v73 + 1, 1);
              char v68 = v117;
            }
            v67 += 2;
            v68[2] = v73 + 1;
            char v74 = (char *)&v68[2 * v73];
            *((void *)v74 + 4) = v70;
            *((void *)v74 + 5) = v69;
            --v66;
          }
          while (v66);
        }
        else
        {
          char v68 = &_swiftEmptyArrayStorage;
        }
        swift_release();
        uint64_t v75 = v68[2];
        if (v75)
        {
          swift_bridgeObjectRetain();
          char v76 = v68 + 5;
          long long v77 = &_swiftEmptyDictionarySingleton;
          while (1)
          {
            uint64_t v78 = *(v76 - 1);
            uint64_t v79 = *v76;
            swift_bridgeObjectRetain();
            NSString v80 = sub_169850();
            id v81 = (id)AXUIAssistiveTouchStringForName();

            if (v81)
            {
              uint64_t v82 = sub_169880();
              unint64_t v84 = v83;

              uint64_t v85 = HIBYTE(v84) & 0xF;
              if ((v84 & 0x2000000000000000) == 0) {
                uint64_t v85 = v82 & 0xFFFFFFFFFFFFLL;
              }
              if (v85)
              {
                unint64_t v116 = v82;
                swift_bridgeObjectRetain();
                long long v86 = v77;
                char v87 = swift_isUniquelyReferenced_nonNull_native();
                long long v117 = v86;
                uint64_t v88 = v78;
                unint64_t v90 = sub_1444B8(v78, v79);
                uint64_t v91 = v86[2];
                BOOL v92 = (v89 & 1) == 0;
                uint64_t v93 = v91 + v92;
                if (__OFADD__(v91, v92)) {
                  goto LABEL_100;
                }
                char v94 = v89;
                if (v86[3] >= v93)
                {
                  if (v87)
                  {
                    long long v77 = v117;
                    if ((v89 & 1) == 0) {
                      goto LABEL_92;
                    }
                  }
                  else
                  {
                    sub_1451D0();
                    long long v77 = v117;
                    if ((v94 & 1) == 0) {
                      goto LABEL_92;
                    }
                  }
                }
                else
                {
                  sub_144CE8(v93, v87);
                  unint64_t v95 = sub_1444B8(v88, v79);
                  if ((v94 & 1) != (v96 & 1)) {
                    goto LABEL_105;
                  }
                  unint64_t v90 = v95;
                  long long v77 = v117;
                  if ((v94 & 1) == 0)
                  {
LABEL_92:
                    v77[(v90 >> 6) + 8] |= 1 << v90;
                    uint64_t v98 = (uint64_t *)(v77[6] + 16 * v90);
                    uint64_t *v98 = v88;
                    v98[1] = v79;
                    char v99 = (unint64_t *)(v77[7] + 16 * v90);
                    unint64_t *v99 = v116;
                    v99[1] = v84;
                    uint64_t v100 = v77[2];
                    BOOL v39 = __OFADD__(v100, 1);
                    uint64_t v101 = v100 + 1;
                    if (v39) {
                      goto LABEL_102;
                    }
                    v77[2] = v101;
                    swift_bridgeObjectRetain();
                    goto LABEL_94;
                  }
                }
                char v97 = (unint64_t *)(v77[7] + 16 * v90);
                *char v97 = v116;
                v97[1] = v84;
                swift_bridgeObjectRelease();
LABEL_94:
                swift_bridgeObjectRelease_n();
                goto LABEL_77;
              }
              swift_bridgeObjectRelease();
            }
LABEL_77:
            swift_bridgeObjectRelease();
            v76 += 2;
            if (!--v75)
            {
              swift_release();
              break;
            }
          }
        }
        swift_release();
      }
      swift_retain();
      uint64_t v102 = v113;
      sub_169000();
      uint64_t v104 = v114;
      uint64_t v103 = v115;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v112, v102, v115);
      id v105 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2661D8));
      uint64_t v106 = sub_169380();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v103);
      return v106;
    }
  }
  uint64_t v19 = sub_169880();
  uint64_t v21 = v20;

  uint64_t v22 = v13;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  long long v117 = v22;
  unint64_t v25 = sub_1444B8(v15, v16);
  uint64_t v26 = v22[2];
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (!__OFADD__(v26, v27))
  {
    char v29 = v24;
    if (v22[3] < v28)
    {
      sub_144CE8(v28, v23);
      unint64_t v30 = sub_1444B8(v15, v16);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_105;
      }
      unint64_t v25 = v30;
      int64_t v13 = v117;
      if ((v29 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_4:
      unint64_t v14 = (uint64_t *)(v13[7] + 16 * v25);
      uint64_t *v14 = v19;
      v14[1] = v21;
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease_n();
      goto LABEL_6;
    }
    if (v23)
    {
      int64_t v13 = v117;
      if (v24) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1451D0();
      int64_t v13 = v117;
      if (v29) {
        goto LABEL_4;
      }
    }
LABEL_20:
    v13[(v25 >> 6) + 8] |= 1 << v25;
    BOOL v36 = (uint64_t *)(v13[6] + 16 * v25);
    *BOOL v36 = v15;
    v36[1] = v16;
    uint64_t v37 = (uint64_t *)(v13[7] + 16 * v25);
    *uint64_t v37 = v19;
    v37[1] = v21;
    uint64_t v38 = v13[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_101;
    }
    v13[2] = v40;
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  uint64_t result = sub_169D10();
  __break(1u);
  return result;
}

uint64_t sub_145CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_145D20(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t property wrapper backing initializer of SpokenContentDetectLanguagesView.voiceResolver()
{
  sub_168F70();
  sub_169600();
  return v1;
}

uint64_t property wrapper backing initializer of SpokenContentDetectLanguagesView.textToSpeechLanguages()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266220);
  sub_169600();
  return v1;
}

uint64_t sub_145DAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266250);
  sub_169610();
  return v1;
}

uint64_t property wrapper backing initializer of SpokenContentDetectLanguagesView.loading()
{
  sub_169600();
  return v1;
}

uint64_t property wrapper backing initializer of SpokenContentDetectLanguagesView.selectedId()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266228);
  sub_169600();
  return v1;
}

void sub_145E74()
{
  id v1 = [self sharedInstance];
  long long v3 = *(_OWORD *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266410);
  sub_169610();
  if (v5)
  {
    NSString v2 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  objc_msgSend(v1, "setSpokenContentDefaultFallbackLanguage:", v2, v3, v4);
}

uint64_t SpokenContentDetectLanguagesView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_266230);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  long long v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_266238);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  unint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_266240);
  __chkstk_darwin(v24);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_266248);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  int64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1463E0(v1, (uint64_t)v7);
  long long v37 = *(_OWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266250);
  sub_169610();
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v10 + 64) = v11;
  *(void *)(v10 + 80) = *(void *)(v1 + 64);
  long long v12 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v10 + 32) = v12;
  sub_1474A4(v1);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_266220);
  uint64_t v14 = sub_147624(&qword_266258, &qword_266240, (void (*)(void))sub_147524);
  uint64_t v15 = sub_147624(&qword_266290, &qword_266220, (void (*)(void))sub_147690);
  uint64_t v16 = v24;
  sub_169520();
  swift_release();
  swift_bridgeObjectRelease();
  sub_13FA20((uint64_t)v7, &qword_266240);
  long long v37 = *(_OWORD *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2662B0);
  sub_169610();
  sub_168F60();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2662A0);
  NSString v17 = v25;
  uint64_t v18 = v27;
  sub_169980();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v18);
  swift_getKeyPath();
  long long v19 = *(_OWORD *)(v1 + 48);
  long long v39 = *(_OWORD *)(v1 + 32);
  long long v40 = v19;
  uint64_t v41 = *(void *)(v1 + 64);
  long long v20 = *(_OWORD *)(v1 + 16);
  long long v37 = *(_OWORD *)v1;
  long long v38 = v20;
  uint64_t v33 = v16;
  uint64_t v34 = v13;
  uint64_t v35 = v14;
  uint64_t v36 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v26;
  sub_169490();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v21);
}

uint64_t sub_1463E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_266280);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663A8);
  uint64_t v26 = *(void *)(v28 - 8);
  uint64_t v5 = __chkstk_darwin(v28);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663B0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_266278);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *(_OWORD *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2663A0);
  uint64_t v17 = sub_169610();
  if (v31 == 1)
  {
    sub_169230();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v16, v13);
    swift_storeEnumTagMultiPayload();
    sub_138494(&qword_266270, &qword_266278);
    uint64_t v18 = sub_138494(&qword_266288, &qword_266280);
    *(void *)&long long v30 = v27;
    *((void *)&v30 + 1) = v18;
    swift_getOpaqueTypeConformance2();
    sub_169390();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    __chkstk_darwin(v17);
    *(&v24 - 2) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2663B8);
    sub_138494(&qword_2663C0, &qword_2663B8);
    sub_169430();
    uint64_t v20 = sub_138494(&qword_266288, &qword_266280);
    uint64_t v21 = v27;
    sub_169450();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v21);
    uint64_t v22 = v26;
    uint64_t v23 = v28;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v9, v7, v28);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v12, v9, v23);
    swift_storeEnumTagMultiPayload();
    sub_138494(&qword_266270, &qword_266278);
    *(void *)&long long v30 = v21;
    *((void *)&v30 + 1) = v20;
    swift_getOpaqueTypeConformance2();
    sub_169390();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v9, v23);
  }
}

uint64_t sub_1468EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v9 = (char *)v26 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663D0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v26 - v15;
  v26[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2663D8);
  unint64_t v17 = sub_14CEE0();
  *(void *)&long long v28 = &type metadata for SpokenContentDetectLanguagesView.SelectionCell;
  *((void *)&v28 + 1) = v17;
  swift_getOpaqueTypeConformance2();
  sub_1696E0();
  long long v28 = *(_OWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266250);
  uint64_t v18 = sub_169610();
  uint64_t v19 = v27;
  if (v27)
  {
    v26[1] = v26;
    __chkstk_darwin(v18);
    v26[-2] = v19;
    v26[-1] = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2663F8);
    sub_14CF3C();
    sub_1696E0();
    swift_bridgeObjectRelease();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663E8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 0, 1, v20);
  }
  else
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  }
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v22(v14, v16, v10);
  sub_13F990((uint64_t)v9, (uint64_t)v7, &qword_2663C8);
  v22(a2, v14, v10);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663F0);
  sub_13F990((uint64_t)v7, (uint64_t)&a2[*(int *)(v23 + 48)], &qword_2663C8);
  sub_13FA20((uint64_t)v9, &qword_2663C8);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  sub_13FA20((uint64_t)v7, &qword_2663C8);
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v10);
}

void sub_146C88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = sub_169850();
  NSString v9 = sub_169850();
  id v10 = settingsLocString(v8, v9);

  if (v10)
  {
    uint64_t v11 = sub_169880();
    uint64_t v13 = v12;

    long long v18 = *(_OWORD *)(a1 + 48);
    uint64_t v19 = *(void *)(a1 + 64);
    __swift_instantiateConcreteTypeFromMangledName(&qword_266410);
    sub_169610();
    uint64_t v14 = v20;
    if (v20) {
      swift_bridgeObjectRelease();
    }
    *(void *)&long long v18 = v11;
    *((void *)&v18 + 1) = v13;
    LOBYTE(v19) = v14 == 0;
    uint64_t v15 = swift_allocObject();
    long long v16 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v15 + 64) = v16;
    *(void *)(v15 + 80) = *(void *)(a1 + 64);
    long long v17 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v15 + 32) = v17;
    sub_1474A4(a1);
    sub_14CEE0();
    sub_1694D0();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_146EB0()
{
}

uint64_t sub_146F10(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 64) = v4;
  *(void *)(v3 + 80) = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v5;
  swift_bridgeObjectRetain();
  sub_1474A4(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2662A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2663D8);
  sub_138494(&qword_266408, &qword_2662A0);
  sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  sub_14CEE0();
  swift_getOpaqueTypeConformance2();
  return sub_1696B0();
}

uint64_t sub_14709C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = sub_168EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v29 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2663D8);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_168EB0();
  uint64_t v15 = v14;
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v31(v10, a1, v5);
  if (v15)
  {
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v30 = sub_168EA0();
    uint64_t v15 = v16;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  long long v37 = *(_OWORD *)(a2 + 48);
  uint64_t v38 = *(void *)(a2 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266410);
  sub_169610();
  uint64_t v18 = v39;
  uint64_t v17 = v40;
  uint64_t v19 = sub_168EA0();
  if (v17)
  {
    if (v18 == v19 && v17 == v20) {
      char v21 = 1;
    }
    else {
      char v21 = sub_169CE0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = v30;
  *((void *)&v37 + 1) = v15;
  LOBYTE(v38) = v21 & 1;
  uint64_t v22 = v32;
  v31(v32, a1, v5);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v24 + 64) = v25;
  *(void *)(v24 + 80) = *(void *)(a2 + 64);
  long long v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v24 + 32) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v23, v22, v5);
  sub_1474A4(a2);
  sub_14CEE0();
  uint64_t v27 = v33;
  sub_1694D0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v27, v35);
}

void sub_1473EC()
{
}

uint64_t sub_147458()
{
  return sub_169620();
}

uint64_t sub_1474A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_147524()
{
  unint64_t result = qword_266260;
  if (!qword_266260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266268);
    sub_138494(&qword_266270, &qword_266278);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266280);
    sub_138494(&qword_266288, &qword_266280);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266260);
  }
  return result;
}

uint64_t sub_147624(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_147690()
{
  unint64_t result = qword_266298;
  if (!qword_266298)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2662A0);
    sub_14D2A0(&qword_2662A8, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266298);
  }
  return result;
}

uint64_t sub_147734()
{
  return sub_169620();
}

uint64_t sub_147788(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  v2[2] = a1;
  v2[3] = v3;
  sub_169970();
  v2[4] = sub_169960();
  uint64_t v5 = sub_169950();
  return _swift_task_switch(sub_147824, v5, v4);
}

uint64_t sub_147824()
{
  uint64_t v9 = v0;
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = sub_147964(v1);
  sub_14C914((uint64_t)v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1493BC(v3);
  swift_bridgeObjectRelease();
  uint64_t v8 = v4;
  sub_149814((void **)&v8);
  uint64_t v5 = (char **)v0[2];
  swift_bridgeObjectRelease();
  *uint64_t v5 = v8;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_147910@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266250);
  uint64_t result = sub_169610();
  *a1 = v3;
  return result;
}

char *sub_147964(uint64_t a1)
{
  uint64_t v49 = sub_168EE0();
  uint64_t v53 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2659F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_168EC0();
  uint64_t v7 = *(void *)(v54 - 8);
  uint64_t v8 = __chkstk_darwin(v54);
  uint64_t v40 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v35 - v10;
  uint64_t v11 = sub_168F00();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_266398);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v43 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v51 = v12 + 16;
  id v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v50 = v12 + 48;
  uint64_t v47 = (void (**)(char *, uint64_t))(v53 + 8);
  char v48 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  unint64_t v46 = (void (**)(char *, uint64_t))(v12 + 8);
  int64_t v44 = (unint64_t)(v19 + 63) >> 6;
  unint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v38 = v7;
  uint64_t v41 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v53 = a1;
  uint64_t result = (char *)swift_bridgeObjectRetain();
  int64_t v23 = 0;
  id v42 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v26 >= v44) {
      goto LABEL_30;
    }
    unint64_t v27 = *(void *)(v43 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v44) {
        goto LABEL_30;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v44) {
          goto LABEL_30;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v44) {
            goto LABEL_30;
          }
          unint64_t v27 = *(void *)(v43 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v17, *(void *)(v53 + 48) + *(void *)(v12 + 72) * v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1) {
      goto LABEL_31;
    }
    (*v48)(v14, v17, v11);
    sub_168EF0();
    sub_168ED0();
    (*v47)(v3, v49);
    (*v46)(v14, v11);
    if ((*v45)(v6, 1, v54) == 1)
    {
      uint64_t result = (char *)sub_13FA20((uint64_t)v6, &qword_2659F0);
    }
    else
    {
      uint64_t v29 = *v41;
      (*v41)(v39, v6, v54);
      long long v37 = v29;
      v29(v40, v39, v54);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v42 = (char *)sub_14E148(0, *((void *)v42 + 2) + 1, 1, (unint64_t)v42);
      }
      unint64_t v31 = *((void *)v42 + 2);
      unint64_t v30 = *((void *)v42 + 3);
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        unint64_t v36 = v31 + 1;
        uint64_t v34 = (char *)sub_14E148(v30 > 1, v31 + 1, 1, (unint64_t)v42);
        unint64_t v32 = v36;
        id v42 = v34;
      }
      uint64_t v33 = v42;
      *((void *)v42 + 2) = v32;
      uint64_t result = (char *)((uint64_t (*)(char *, char *, uint64_t))v37)(&v33[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v31], v40, v54);
    }
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v44)
  {
LABEL_30:
    (*v52)(v17, 1, 1, v11);
LABEL_31:
    swift_release();
    return v42;
  }
  unint64_t v27 = *(void *)(v43 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v44) {
      goto LABEL_30;
    }
    unint64_t v27 = *(void *)(v43 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_147F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v39 = a4;
  uint64_t v5 = sub_169360();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1693D0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2662F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2662F8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_266300);
  uint64_t v35 = *(void *)(v17 - 8);
  uint64_t v36 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_266308);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_169330();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_266310);
  sub_1484E8(v32, v33, a3, (uint64_t)&v13[*(int *)(v23 + 44)]);
  sub_13F990((uint64_t)v13, (uint64_t)v16, &qword_2662F0);
  v16[*(int *)(v14 + 36)] = 0;
  sub_13FA20((uint64_t)v13, &qword_2662F0);
  sub_1693C0();
  unint64_t v24 = sub_1491D0();
  sub_169500();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_13FA20((uint64_t)v16, &qword_2662F8);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_266350);
    uint64_t v25 = v37;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1A1E00;
    sub_169350();
    uint64_t v40 = (void *)v26;
    sub_14D2A0(&qword_266338, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    __swift_instantiateConcreteTypeFromMangledName(&qword_266340);
    sub_138494(&qword_266348, &qword_266340);
    unint64_t v27 = v34;
    uint64_t v28 = v38;
    sub_169BB0();
    uint64_t v29 = v25;
  }
  else
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
    sub_14D2A0(&qword_266338, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    __swift_instantiateConcreteTypeFromMangledName(&qword_266340);
    sub_138494(&qword_266348, &qword_266340);
    unint64_t v27 = v34;
    uint64_t v28 = v38;
    sub_169BB0();
    uint64_t v29 = v37;
  }
  uint64_t v40 = (void *)v14;
  unint64_t v41 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v36;
  sub_169510();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v30);
  return sub_149294((uint64_t)v22, v39);
}

uint64_t sub_1484E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_266358);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  sub_13B004();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_169440();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  if (a3)
  {
    uint64_t v21 = sub_1695D0();
    uint64_t v28 = v21;
    id v22 = [self systemBlueColor];
    uint64_t v23 = sub_1695B0();
    uint64_t v30 = v21;
    uint64_t v31 = v23;
    sub_169420();
    uint64_t v29 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_266370);
    sub_14931C();
    uint64_t v16 = v29;
    sub_1694C0();
    swift_release();
    swift_release();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_266360);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_266360);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
  }
  sub_13F990((uint64_t)v13, (uint64_t)v11, &qword_266358);
  *(void *)a4 = v14;
  *(void *)(a4 + 8) = v16;
  *(unsigned char *)(a4 + 16) = v18 & 1;
  *(void *)(a4 + 24) = v20;
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 1;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_266368);
  sub_13F990((uint64_t)v11, a4 + *(int *)(v26 + 64), &qword_266358);
  sub_1492FC(v14, v16, v18 & 1);
  swift_bridgeObjectRetain();
  sub_13FA20((uint64_t)v13, &qword_266358);
  sub_13FA20((uint64_t)v11, &qword_266358);
  sub_14930C(v14, v16, v18 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1487AC@<X0>(uint64_t a1@<X8>)
{
  return sub_147F98(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1487B8@<X0>(uint64_t a1@<X8>)
{
  return SpokenContentDetectLanguagesView.body.getter(a1);
}

UIViewController __swiftcall SpokenContentDetectLanguagesSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

__n128 sub_148850@<Q0>(__n128 *a1@<X8>)
{
  sub_14CBBC(v4);
  __n128 v2 = v4[3];
  a1[2] = v4[2];
  a1[3] = v2;
  a1[4].n128_u64[0] = v5;
  __n128 result = v4[1];
  *a1 = v4[0];
  a1[1] = result;
  return result;
}

unint64_t sub_1488A0()
{
  unint64_t result = qword_2662C0;
  if (!qword_2662C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2662C0);
  }
  return result;
}

id SpokenContentDetectLanguagesSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SpokenContentDetectLanguagesSwiftUI();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

uint64_t type metadata accessor for SpokenContentDetectLanguagesSwiftUI()
{
  return self;
}

id SpokenContentDetectLanguagesSwiftUI.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SpokenContentDetectLanguagesSwiftUI();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id SpokenContentDetectLanguagesSwiftUI.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpokenContentDetectLanguagesSwiftUI();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_148B68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for SpokenContentDetectLanguagesView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SpokenContentDetectLanguagesView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SpokenContentDetectLanguagesView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SpokenContentDetectLanguagesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SpokenContentDetectLanguagesView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpokenContentDetectLanguagesView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpokenContentDetectLanguagesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpokenContentDetectLanguagesView()
{
  return &type metadata for SpokenContentDetectLanguagesView;
}

uint64_t sub_148EF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SpokenContentDetectLanguagesView.SelectionCell()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s21AccessibilitySettings32SpokenContentDetectLanguagesViewV13SelectionCellVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SpokenContentDetectLanguagesView.SelectionCell(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SpokenContentDetectLanguagesView.SelectionCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SpokenContentDetectLanguagesView.SelectionCell(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpokenContentDetectLanguagesView.SelectionCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpokenContentDetectLanguagesView.SelectionCell()
{
  return &type metadata for SpokenContentDetectLanguagesView.SelectionCell;
}

uint64_t sub_1491B4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1491D0()
{
  unint64_t result = qword_266318;
  if (!qword_266318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2662F8);
    sub_138494(&qword_266320, &qword_2662F0);
    sub_138494(&qword_266328, &qword_266330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266318);
  }
  return result;
}

uint64_t sub_149294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_266308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1492FC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_14930C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_14931C()
{
  unint64_t result = qword_266378;
  if (!qword_266378)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266370);
    sub_138494(&qword_265ED0, &qword_265ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266378);
  }
  return result;
}

char *sub_1493BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_266218);
  uint64_t v3 = *(void *)(sub_168EC0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  unint64_t result = (char *)_swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (&result[-v5] != (char *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)&result[-v5] / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_14C50C(&v10, (char *)v6 + v5, v1, a1);
      sub_14CEC8();
      if (v9 == v1) {
        return (char *)v6;
      }
      __break(1u);
      return (char *)&_swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1494F0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_168EC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_169830();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    char v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_14D2A0(&qword_2662A8, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
      char v21 = sub_169840();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_14BC18((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_149814(void **a1)
{
  uint64_t v2 = *(void *)(sub_168EC0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_14C900(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1498BC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1498BC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_168EC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v194 = (char *)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v210 = (char *)&v185 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v204 = (char *)&v185 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v185 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  v224 = (char *)&v185 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v215 = (char *)&v185 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v197 = (char *)&v185 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v196 = (char *)&v185 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v202 = (char *)&v185 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v199 = (char *)&v185 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v189 = (char *)&v185 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v185 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  v192 = (char *)&v185 - v33;
  __chkstk_darwin(v32);
  v191 = (char *)&v185 - v34;
  v217 = a1;
  Swift::Int v35 = a1[1];
  Swift::Int result = sub_169CC0(v35);
  if (result >= v35)
  {
    if (v35 < 0) {
      goto LABEL_152;
    }
    if (v35) {
      return sub_14A958(0, v35, 1, v217);
    }
    return result;
  }
  if (v35 >= 0) {
    uint64_t v37 = v35;
  }
  else {
    uint64_t v37 = v35 + 1;
  }
  if (v35 < -1) {
    goto LABEL_160;
  }
  v188 = v31;
  Swift::Int v186 = result;
  if (v35 < 2)
  {
    uint64_t v40 = v5;
    id v42 = _swiftEmptyArrayStorage;
    unint64_t v200 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v35 != 1)
    {
      unint64_t v45 = _swiftEmptyArrayStorage[2];
      int64_t v44 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      v185 = v42;
      if (v45 >= 2)
      {
        uint64_t v176 = *v217;
        do
        {
          unint64_t v177 = v45 - 2;
          if (v45 < 2) {
            goto LABEL_147;
          }
          if (!v176) {
            goto LABEL_159;
          }
          v178 = v44;
          v179 = v44 + 32;
          uint64_t v180 = *(void *)&v44[16 * v177 + 32];
          uint64_t v181 = *(void *)&v44[16 * v45 + 24];
          uint64_t v182 = v40;
          sub_14AD64(v176 + *(void *)(v40 + 72) * v180, v176 + *(void *)(v40 + 72) * *(void *)&v179[16 * v45 - 16], (char *)(v176 + *(void *)(v40 + 72) * v181), v200);
          if (v2) {
            break;
          }
          if (v181 < v180) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v178 = sub_14B808((uint64_t)v178);
          }
          if (v177 >= *((void *)v178 + 2)) {
            goto LABEL_149;
          }
          v183 = &v178[16 * v177 + 32];
          *(void *)v183 = v180;
          *((void *)v183 + 1) = v181;
          unint64_t v184 = *((void *)v178 + 2);
          if (v45 > v184) {
            goto LABEL_150;
          }
          int64_t v44 = v178;
          memmove(&v178[16 * v45 + 16], &v178[16 * v45 + 32], 16 * (v184 - v45));
          *((void *)v178 + 2) = v184 - 1;
          unint64_t v45 = v184 - 1;
          uint64_t v40 = v182;
        }
        while (v184 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      v185[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v185 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v38 = v37 >> 1;
    uint64_t v39 = sub_169920();
    *(void *)(v39 + 16) = v38;
    uint64_t v40 = v5;
    unint64_t v41 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v185 = (void *)v39;
    unint64_t v200 = v39 + v41;
  }
  Swift::Int v43 = 0;
  v218 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v219 = v40 + 16;
  v213 = (uint64_t *)(v40 + 32);
  int64_t v44 = (char *)_swiftEmptyArrayStorage;
  uint64_t v201 = v40;
  v207 = v14;
  uint64_t v208 = v4;
  while (1)
  {
    Swift::Int v46 = v43;
    Swift::Int v47 = v43 + 1;
    if (v43 + 1 < v35)
    {
      uint64_t v48 = *v217;
      uint64_t v49 = *(void *)(v40 + 72);
      Swift::Int v209 = v43 + 1;
      uint64_t v50 = v48 + v49 * v47;
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
      Swift::Int v52 = v43;
      v51(v191, v50, v4);
      Swift::Int v198 = v52;
      uint64_t v190 = v48;
      uint64_t v212 = v49;
      v51(v192, v48 + v49 * v52, v4);
      uint64_t v53 = v191;
      uint64_t v216 = sub_168EB0();
      uint64_t v55 = v54;
      BOOL v56 = v188;
      v214 = (void (*)(char *, char *, uint64_t))v51;
      v51(v188, (uint64_t)v53, v4);
      Swift::Int v211 = v35;
      if (!v55)
      {
        uint64_t v57 = sub_168EA0();
        BOOL v56 = v188;
        uint64_t v216 = v57;
        uint64_t v55 = v58;
      }
      unint64_t v59 = v189;
      long long v60 = *v218;
      (*v218)(v56, v4);
      BOOL v61 = v192;
      uint64_t v62 = sub_168EB0();
      uint64_t v63 = v4;
      uint64_t v65 = v64;
      v214(v59, v61, v63);
      if (!v65)
      {
        uint64_t v62 = sub_168EA0();
        uint64_t v65 = v66;
      }
      uint64_t v67 = v59;
      uint64_t v68 = v208;
      v60(v67, v208);
      v222 = (void (*)(void, void, void))v216;
      uint64_t v223 = v55;
      uint64_t v220 = v62;
      uint64_t v221 = v65;
      unint64_t v205 = sub_13B004();
      uint64_t v206 = sub_169B80();
      swift_bridgeObjectRelease();
      uint64_t v4 = v68;
      swift_bridgeObjectRelease();
      v60(v192, v68);
      v60(v191, v68);
      Swift::Int v46 = v198;
      Swift::Int v47 = v198 + 2;
      if (v198 + 2 < v211)
      {
        v187 = v44;
        Swift::Int v203 = v212 * v209;
        uint64_t v69 = v190;
        Swift::Int v195 = v212 * v47;
        while (1)
        {
          Swift::Int v209 = v47;
          uint64_t v70 = v199;
          char v71 = (void (*)(char *, uint64_t, uint64_t))v214;
          v214(v199, (char *)(v69 + v195), v4);
          v71(v202, v69 + v203, v4);
          uint64_t v216 = sub_168EB0();
          uint64_t v73 = v72;
          char v74 = v196;
          v71(v196, (uint64_t)v70, v4);
          if (!v73)
          {
            uint64_t v216 = sub_168EA0();
            uint64_t v73 = v75;
          }
          v60(v74, v4);
          char v76 = v202;
          uint64_t v77 = sub_168EB0();
          uint64_t v78 = v4;
          uint64_t v80 = v79;
          id v81 = v197;
          v214(v197, v76, v78);
          uint64_t v82 = v2;
          if (!v80)
          {
            uint64_t v77 = sub_168EA0();
            uint64_t v80 = v83;
          }
          unint64_t v84 = v81;
          BOOL v85 = v206 == -1;
          uint64_t v86 = v208;
          v60(v84, v208);
          v222 = (void (*)(void, void, void))v216;
          uint64_t v223 = v73;
          uint64_t v220 = v77;
          uint64_t v221 = v80;
          uint64_t v87 = sub_169B80();
          swift_bridgeObjectRelease();
          uint64_t v4 = v86;
          swift_bridgeObjectRelease();
          v60(v202, v86);
          v60(v199, v86);
          if (v85 == (v87 != -1)) {
            break;
          }
          Swift::Int v47 = v209 + 1;
          v69 += v212;
          uint64_t v2 = v82;
          if (v211 == v209 + 1)
          {
            Swift::Int v35 = v211;
            Swift::Int v47 = v211;
            int64_t v44 = v187;
            Swift::Int v46 = v198;
            goto LABEL_32;
          }
        }
        uint64_t v2 = v82;
        int64_t v44 = v187;
        Swift::Int v47 = v209;
        Swift::Int v46 = v198;
      }
      Swift::Int v35 = v211;
LABEL_32:
      uint64_t v14 = v207;
      uint64_t v40 = v201;
      if (v206 == -1)
      {
        if (v47 < v46) {
          goto LABEL_155;
        }
        if (v46 < v47)
        {
          v187 = v44;
          uint64_t v88 = 0;
          uint64_t v89 = v212 * (v47 - 1);
          Swift::Int v90 = v47 * v212;
          Swift::Int v91 = v46;
          uint64_t v92 = v46 * v212;
          do
          {
            if (v91 != v47 + v88 - 1)
            {
              if (!v190) {
                goto LABEL_158;
              }
              uint64_t v193 = v2;
              unint64_t v94 = v190 + v92;
              uint64_t v95 = v190 + v89;
              uint64_t v96 = v190;
              uint64_t v216 = *v213;
              ((void (*)(char *, uint64_t, uint64_t))v216)(v194, v190 + v92, v208);
              if (v92 < v89 || v94 >= v96 + v90)
              {
                uint64_t v93 = v208;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v93 = v208;
                if (v92 != v89) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v216)(v95, v194, v93);
              uint64_t v40 = v201;
              uint64_t v2 = v193;
              Swift::Int v35 = v211;
            }
            ++v91;
            --v88;
            v89 -= v212;
            v90 -= v212;
            v92 += v212;
          }
          while (v91 < v47 + v88);
          uint64_t v14 = v207;
          uint64_t v4 = v208;
          int64_t v44 = v187;
          Swift::Int v46 = v198;
        }
      }
    }
    if (v47 >= v35) {
      goto LABEL_69;
    }
    if (__OFSUB__(v47, v46)) {
      goto LABEL_151;
    }
    if (v47 - v46 >= v186) {
      goto LABEL_69;
    }
    if (__OFADD__(v46, v186)) {
      goto LABEL_153;
    }
    Swift::Int v97 = v46 + v186 >= v35 ? v35 : v46 + v186;
    if (v97 < v46) {
      break;
    }
    if (v47 != v97)
    {
      Swift::Int v198 = v46;
      v187 = v44;
      uint64_t v193 = v2;
      unint64_t v98 = *(void *)(v40 + 72);
      char v99 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
      uint64_t v216 = v98 * (v47 - 1);
      unint64_t v205 = v98;
      uint64_t v100 = v47 * v98;
      Swift::Int v203 = (Swift::Int)v99;
      Swift::Int v195 = v97;
      do
      {
        uint64_t v102 = 0;
        Swift::Int v103 = v198;
        Swift::Int v209 = v47;
        uint64_t v206 = v100;
        while (1)
        {
          uint64_t v104 = *v217;
          uint64_t v212 = v100 + v102;
          id v105 = v215;
          v99(v215, v100 + v102 + v104, v4);
          Swift::Int v211 = v216 + v102;
          v99(v224, v216 + v102 + v104, v4);
          uint64_t v106 = sub_168EB0();
          uint64_t v108 = v107;
          v99(v14, (uint64_t)v105, v4);
          if (v108)
          {
            v214 = (void (*)(char *, char *, uint64_t))v106;
          }
          else
          {
            v214 = (void (*)(char *, char *, uint64_t))sub_168EA0();
            uint64_t v108 = v109;
          }
          uint64_t v110 = *v218;
          (*v218)(v14, v4);
          uint64_t v111 = v224;
          uint64_t v112 = sub_168EB0();
          uint64_t v113 = v4;
          uint64_t v115 = v114;
          unint64_t v116 = v204;
          v99(v204, (uint64_t)v111, v113);
          if (!v115)
          {
            uint64_t v112 = sub_168EA0();
            uint64_t v115 = v117;
          }
          long long v118 = v116;
          uint64_t v4 = v208;
          v110(v118, v208);
          v222 = (void (*)(void, void, void))v214;
          uint64_t v223 = v108;
          uint64_t v220 = v112;
          uint64_t v221 = v115;
          sub_13B004();
          uint64_t v119 = sub_169B80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v110(v224, v4);
          v110(v215, v4);
          if (v119 != -1) {
            break;
          }
          uint64_t v120 = *v217;
          uint64_t v100 = v206;
          uint64_t v14 = v207;
          char v99 = (void (*)(char *, uint64_t, uint64_t))v203;
          if (!*v217) {
            goto LABEL_156;
          }
          uint64_t v121 = v120 + v216 + v102;
          uint64_t v122 = (void (*)(uint64_t, char *, uint64_t))*v213;
          ((void (*)(char *, uint64_t, uint64_t))*v213)(v210, v120 + v206 + v102, v4);
          swift_arrayInitWithTakeFrontToBack();
          v122(v121, v210, v4);
          v102 -= v205;
          ++v103;
          Swift::Int v101 = v209;
          if (v209 == v103) {
            goto LABEL_57;
          }
        }
        uint64_t v100 = v206;
        uint64_t v14 = v207;
        Swift::Int v101 = v209;
        char v99 = (void (*)(char *, uint64_t, uint64_t))v203;
LABEL_57:
        Swift::Int v47 = v101 + 1;
        v216 += v205;
        v100 += v205;
      }
      while (v47 != v195);
      Swift::Int v47 = v195;
      uint64_t v2 = v193;
      int64_t v44 = v187;
      Swift::Int v46 = v198;
    }
LABEL_69:
    if (v47 < v46) {
      goto LABEL_146;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v209 = v47;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int64_t v44 = sub_14B5CC(0, *((void *)v44 + 2) + 1, 1, v44);
    }
    unint64_t v125 = *((void *)v44 + 2);
    unint64_t v124 = *((void *)v44 + 3);
    unint64_t v45 = v125 + 1;
    uint64_t v40 = v201;
    if (v125 >= v124 >> 1)
    {
      v175 = sub_14B5CC((char *)(v124 > 1), v125 + 1, 1, v44);
      uint64_t v40 = v201;
      int64_t v44 = v175;
    }
    *((void *)v44 + 2) = v45;
    uint64_t v126 = v44 + 32;
    v127 = &v44[16 * v125 + 32];
    Swift::Int v128 = v209;
    *(void *)v127 = v46;
    *((void *)v127 + 1) = v128;
    if (v125)
    {
      while (1)
      {
        unint64_t v129 = v45 - 1;
        if (v45 >= 4)
        {
          v134 = &v126[16 * v45];
          uint64_t v135 = *((void *)v134 - 8);
          uint64_t v136 = *((void *)v134 - 7);
          BOOL v140 = __OFSUB__(v136, v135);
          uint64_t v137 = v136 - v135;
          if (v140) {
            goto LABEL_135;
          }
          uint64_t v139 = *((void *)v134 - 6);
          uint64_t v138 = *((void *)v134 - 5);
          BOOL v140 = __OFSUB__(v138, v139);
          uint64_t v132 = v138 - v139;
          char v133 = v140;
          if (v140) {
            goto LABEL_136;
          }
          unint64_t v141 = v45 - 2;
          v142 = &v126[16 * v45 - 32];
          uint64_t v144 = *(void *)v142;
          uint64_t v143 = *((void *)v142 + 1);
          BOOL v140 = __OFSUB__(v143, v144);
          uint64_t v145 = v143 - v144;
          if (v140) {
            goto LABEL_138;
          }
          BOOL v140 = __OFADD__(v132, v145);
          uint64_t v146 = v132 + v145;
          if (v140) {
            goto LABEL_141;
          }
          if (v146 >= v137)
          {
            v164 = &v126[16 * v129];
            uint64_t v166 = *(void *)v164;
            uint64_t v165 = *((void *)v164 + 1);
            BOOL v140 = __OFSUB__(v165, v166);
            uint64_t v167 = v165 - v166;
            if (v140) {
              goto LABEL_145;
            }
            BOOL v157 = v132 < v167;
            goto LABEL_106;
          }
        }
        else
        {
          if (v45 != 3)
          {
            uint64_t v158 = *((void *)v44 + 4);
            uint64_t v159 = *((void *)v44 + 5);
            BOOL v140 = __OFSUB__(v159, v158);
            uint64_t v151 = v159 - v158;
            char v152 = v140;
            goto LABEL_100;
          }
          uint64_t v131 = *((void *)v44 + 4);
          uint64_t v130 = *((void *)v44 + 5);
          BOOL v140 = __OFSUB__(v130, v131);
          uint64_t v132 = v130 - v131;
          char v133 = v140;
        }
        if (v133) {
          goto LABEL_137;
        }
        unint64_t v141 = v45 - 2;
        v147 = &v126[16 * v45 - 32];
        uint64_t v149 = *(void *)v147;
        uint64_t v148 = *((void *)v147 + 1);
        BOOL v150 = __OFSUB__(v148, v149);
        uint64_t v151 = v148 - v149;
        char v152 = v150;
        if (v150) {
          goto LABEL_140;
        }
        v153 = &v126[16 * v129];
        uint64_t v155 = *(void *)v153;
        uint64_t v154 = *((void *)v153 + 1);
        BOOL v140 = __OFSUB__(v154, v155);
        uint64_t v156 = v154 - v155;
        if (v140) {
          goto LABEL_143;
        }
        if (__OFADD__(v151, v156)) {
          goto LABEL_144;
        }
        if (v151 + v156 >= v132)
        {
          BOOL v157 = v132 < v156;
LABEL_106:
          if (v157) {
            unint64_t v129 = v141;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v152) {
          goto LABEL_139;
        }
        v160 = &v126[16 * v129];
        uint64_t v162 = *(void *)v160;
        uint64_t v161 = *((void *)v160 + 1);
        BOOL v140 = __OFSUB__(v161, v162);
        uint64_t v163 = v161 - v162;
        if (v140) {
          goto LABEL_142;
        }
        if (v163 < v151) {
          goto LABEL_15;
        }
LABEL_108:
        unint64_t v168 = v129 - 1;
        if (v129 - 1 >= v45)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v217) {
          goto LABEL_157;
        }
        v169 = v44;
        v170 = &v126[16 * v168];
        uint64_t v171 = *(void *)v170;
        v172 = &v126[16 * v129];
        uint64_t v173 = *((void *)v172 + 1);
        sub_14AD64(*v217 + *(void *)(v40 + 72) * *(void *)v170, *v217 + *(void *)(v40 + 72) * *(void *)v172, (char *)(*v217 + *(void *)(v40 + 72) * v173), v200);
        if (v2) {
          goto LABEL_128;
        }
        if (v173 < v171) {
          goto LABEL_132;
        }
        if (v129 > *((void *)v169 + 2)) {
          goto LABEL_133;
        }
        *(void *)v170 = v171;
        *(void *)&v126[16 * v168 + 8] = v173;
        unint64_t v174 = *((void *)v169 + 2);
        if (v129 >= v174) {
          goto LABEL_134;
        }
        int64_t v44 = v169;
        unint64_t v45 = v174 - 1;
        memmove(&v126[16 * v129], v172 + 16, 16 * (v174 - 1 - v129));
        *((void *)v169 + 2) = v174 - 1;
        BOOL v157 = v174 > 2;
        uint64_t v14 = v207;
        uint64_t v40 = v201;
        if (!v157) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v45 = 1;
LABEL_15:
    Swift::Int v35 = v217[1];
    uint64_t v4 = v208;
    Swift::Int v43 = v209;
    if (v209 >= v35)
    {
      id v42 = v185;
      goto LABEL_117;
    }
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_169C50();
  __break(1u);
  return result;
}

uint64_t sub_14A958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v57 = a4;
  uint64_t v46 = a1;
  uint64_t v6 = sub_168EC0();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v44 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v67 = (char *)&v44 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v62 = (char *)&v44 - v18;
  uint64_t v52 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = v17 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    unint64_t v59 = (void (**)(char *, uint64_t))(v19 - 8);
    long long v60 = v20;
    uint64_t v61 = v19;
    uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v22 = v21 * (v52 - 1);
    uint64_t v49 = v21;
    uint64_t v23 = v21 * v52;
    Swift::Int v47 = v13;
LABEL_5:
    uint64_t v24 = 0;
    uint64_t v25 = v46;
    uint64_t v50 = v23;
    uint64_t v51 = v22;
    while (1)
    {
      uint64_t v26 = *v57;
      uint64_t v56 = v23 + v24;
      uint64_t v27 = v62;
      uint64_t v28 = v60;
      v60(v62, v23 + v24 + v26, v6);
      uint64_t v55 = v22 + v24;
      v28(v67, v22 + v24 + v26, v6);
      uint64_t v29 = sub_168EB0();
      uint64_t v31 = v30;
      v28(v13, (uint64_t)v27, v6);
      if (v31)
      {
        uint64_t v58 = v29;
      }
      else
      {
        uint64_t v58 = sub_168EA0();
        uint64_t v31 = v32;
      }
      uint64_t v33 = *v59;
      (*v59)(v13, v6);
      uint64_t v34 = v67;
      uint64_t v35 = sub_168EB0();
      uint64_t v37 = v36;
      uint64_t v38 = v48;
      v60(v48, (uint64_t)v34, v6);
      if (!v37)
      {
        uint64_t v35 = sub_168EA0();
        uint64_t v37 = v39;
      }
      v33(v38, v6);
      uint64_t v65 = v58;
      uint64_t v66 = v31;
      uint64_t v63 = v35;
      uint64_t v64 = v37;
      sub_13B004();
      uint64_t v40 = sub_169B80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33(v67, v6);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v62, v6);
      uint64_t v13 = v47;
      uint64_t v23 = v50;
      uint64_t v22 = v51;
      if (v40 != -1)
      {
LABEL_4:
        v22 += v49;
        v23 += v49;
        if (++v52 == v45) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v41 = *v57;
      if (!*v57) {
        break;
      }
      uint64_t v42 = v41 + v51 + v24;
      Swift::Int v43 = *v53;
      (*v53)(v54, v41 + v50 + v24, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v54, v6);
      v24 -= v49;
      if (v52 == ++v25) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_14AD64(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_168EC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v84 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v84 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v92 = (char *)&v84 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v84 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v84 - v26;
  __chkstk_darwin(v25);
  Swift::Int v91 = (char *)&v84 - v28;
  uint64_t v93 = *(void *)(v29 + 72);
  if (!v93)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v93 == -1) {
    goto LABEL_70;
  }
  uint64_t v30 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v93 == -1) {
    goto LABEL_71;
  }
  uint64_t v31 = (uint64_t)(a2 - a1) / v93;
  unint64_t v105 = a1;
  unint64_t v104 = a4;
  uint64_t v32 = (uint64_t)v30 / v93;
  unint64_t v94 = a4;
  uint64_t v84 = v5;
  if (v31 >= (uint64_t)v30 / v93)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      uint64_t v86 = v27;
      uint64_t v34 = v32 * v93;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v56 = a4 + v34;
      unint64_t v103 = a4 + v34;
      unint64_t v105 = a2;
      if (v34 >= 1 && a1 < a2)
      {
        uint64_t v58 = -v93;
        uint64_t v93 = *(void *)(v11 + 16);
        uint64_t v98 = v11 + 16;
        Swift::Int v91 = (char *)(v11 + 8);
        uint64_t v59 = v58;
        unint64_t v85 = a1;
        uint64_t v88 = (char *)v58;
        do
        {
          long long v60 = v92;
          uint64_t v61 = (void (*)(char *, unint64_t, uint64_t))v93;
          ((void (*)(char *, unint64_t, uint64_t))v93)(v92, v56 + v59, v10);
          unint64_t v62 = a2 + v59;
          v61(v96, a2 + v59, v10);
          uint64_t v95 = (char *)sub_168EB0();
          uint64_t v64 = v63;
          uint64_t v65 = v89;
          v61(v89, (unint64_t)v60, v10);
          unint64_t v97 = a2;
          unint64_t v66 = (unint64_t)a3;
          if (!v64)
          {
            uint64_t v67 = sub_168EA0();
            uint64_t v65 = v89;
            uint64_t v95 = (char *)v67;
            uint64_t v64 = v68;
          }
          uint64_t v69 = v86;
          uint64_t v70 = *(void (**)(uint64_t, uint64_t))v91;
          (*(void (**)(char *, uint64_t))v91)(v65, v10);
          char v71 = v96;
          uint64_t v72 = sub_168EB0();
          uint64_t v74 = v73;
          ((void (*)(uint64_t, char *, uint64_t))v93)(v69, v71, v10);
          unint64_t v87 = v62;
          if (!v74)
          {
            uint64_t v72 = sub_168EA0();
            uint64_t v74 = v75;
          }
          uint64_t v76 = v69;
          uint64_t v77 = (uint64_t)v88;
          Swift::Int v90 = &v88[v66];
          v70(v76, v10);
          Swift::Int v101 = v95;
          uint64_t v102 = v64;
          uint64_t v99 = v72;
          uint64_t v100 = v74;
          sub_13B004();
          uint64_t v78 = sub_169B80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70((uint64_t)v96, v10);
          v70((uint64_t)v92, v10);
          if (v78 == -1)
          {
            unint64_t v81 = v85;
            a3 = v90;
            if (v66 < v97 || (unint64_t)v90 >= v97)
            {
              unint64_t v80 = v87;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v82 = v94;
              uint64_t v59 = (uint64_t)v88;
            }
            else
            {
              unint64_t v82 = v94;
              unint64_t v80 = v87;
              uint64_t v59 = (uint64_t)v88;
              if (v66 != v97) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v105 += v59;
          }
          else
          {
            unint64_t v79 = v103;
            v103 += v77;
            unint64_t v80 = v97;
            unint64_t v81 = v85;
            uint64_t v59 = v77;
            a3 = v90;
            if (v66 < v79 || (unint64_t)v90 >= v79)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v66 != v79)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v82 = v94;
          }
          unint64_t v56 = v103;
          if (v103 <= v82) {
            break;
          }
          a2 = v80;
        }
        while (v80 > v81);
      }
      goto LABEL_68;
    }
  }
  else if ((v31 & 0x8000000000000000) == 0)
  {
    uint64_t v33 = v31 * v93;
    Swift::Int v90 = v21;
    if (a4 < a1 || a1 + v33 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v92 = (char *)(a4 + v33);
    unint64_t v103 = a4 + v33;
    if (v33 >= 1 && a2 < (unint64_t)a3)
    {
      uint64_t v96 = *(char **)(v11 + 16);
      uint64_t v98 = v11 + 16;
      uint64_t v36 = (void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v88 = v24;
      uint64_t v89 = a3;
      do
      {
        uint64_t v37 = v91;
        uint64_t v38 = (void (*)(char *, unint64_t, uint64_t))v96;
        ((void (*)(char *, unint64_t, uint64_t))v96)(v91, a2, v10);
        v38(v95, v94, v10);
        uint64_t v39 = sub_168EB0();
        uint64_t v41 = v40;
        v38(v24, (unint64_t)v37, v10);
        unint64_t v97 = a2;
        if (!v41)
        {
          uint64_t v39 = sub_168EA0();
          uint64_t v41 = v42;
        }
        Swift::Int v43 = *v36;
        (*v36)(v24, v10);
        uint64_t v44 = v95;
        uint64_t v45 = sub_168EB0();
        uint64_t v47 = v46;
        uint64_t v48 = v90;
        ((void (*)(char *, char *, uint64_t))v96)(v90, v44, v10);
        if (!v47)
        {
          uint64_t v45 = sub_168EA0();
          uint64_t v47 = v49;
        }
        v43(v48, v10);
        Swift::Int v101 = (char *)v39;
        uint64_t v102 = v41;
        uint64_t v99 = v45;
        uint64_t v100 = v47;
        sub_13B004();
        uint64_t v50 = sub_169B80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43(v95, v10);
        v43(v91, v10);
        unint64_t v51 = v105;
        if (v50 == -1)
        {
          unint64_t v55 = v97 + v93;
          uint64_t v24 = v88;
          uint64_t v53 = v89;
          if (v105 < v97 || v105 >= v55)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v105 == v97)
          {
            unint64_t v51 = v97;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v52 = v104 + v93;
          uint64_t v24 = v88;
          uint64_t v53 = v89;
          unint64_t v54 = v97;
          if (v105 < v104 || v105 >= v52)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v105 != v104)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v104 = v52;
          unint64_t v55 = v54;
        }
        unint64_t v105 = v51 + v93;
        unint64_t v94 = v104;
        if (v104 >= (unint64_t)v92) {
          break;
        }
        a2 = v55;
      }
      while (v55 < (unint64_t)v53);
    }
LABEL_68:
    sub_14B6C8(&v105, &v104, (uint64_t *)&v103);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

char *sub_14B5CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_266380);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_14B6C8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_168EC0();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_169CA0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_14B808(uint64_t a1)
{
  return sub_14B5CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_14B81C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_168EC0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_266390);
  uint64_t v5 = sub_169C00();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
      uint64_t result = sub_169830();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_14BC18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_168EC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_14B81C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_14BEB8();
      goto LABEL_12;
    }
    sub_14C15C();
  }
  uint64_t v12 = *v3;
  sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  uint64_t v13 = sub_169830();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_14D2A0(&qword_2662A8, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
      char v21 = sub_169840();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_169D00();
  __break(1u);
  return result;
}

void *sub_14BEB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_168EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266390);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_169BF0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_14C15C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_168EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_266390);
  uint64_t v7 = sub_169C00();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    uint64_t result = sub_169830();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_14C50C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2659F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_168EC0();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  int64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  unint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  BOOL v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    unint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_13FA20((uint64_t)v10, &qword_2659F0);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_14C900(void *a1)
{
  return sub_144938(0, a1[2], 0, a1);
}

uint64_t sub_14C914(uint64_t a1)
{
  uint64_t v2 = sub_168EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2659F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_14D2A0(&qword_266388, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  uint64_t v29 = sub_1699A0();
  if (v10)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    int64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1494F0(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

__n128 sub_14CBBC@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2 = sub_168F50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_168F90();
  __chkstk_darwin(v6);
  sub_168F70();
  v21.n128_u64[0] = (unint64_t)_swiftEmptyArrayStorage;
  sub_14D2A0(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658E0);
  sub_138494((unint64_t *)&qword_2658E8, &qword_2658E0);
  sub_169BB0();
  uint64_t v7 = sub_168FC0();
  uint64_t v8 = sub_168FB0();
  uint64_t v23 = v7;
  int64_t v24 = &protocol witness table for DefaultVoiceSource;
  v21.n128_u64[0] = v8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for VoiceResolver.Mode.defaultPreferenceOrder(_:), v2);
  v20[0] = sub_168F40();
  sub_169600();
  __n128 v9 = v21;
  v20[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_266220);
  sub_169600();
  __n128 v10 = v21;
  LOBYTE(v20[0]) = 1;
  sub_169600();
  unsigned __int8 v11 = v21.n128_u8[0];
  unint64_t v12 = v21.n128_u64[1];
  id v13 = [self sharedInstance];
  id v14 = [v13 spokenContentDefaultFallbackLanguage];

  if (v14)
  {
    uint64_t v15 = sub_169880();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  v20[0] = v15;
  v20[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_266228);
  sub_169600();
  unint64_t v18 = v22;
  __n128 result = v21;
  *a1 = v9;
  a1[1] = v10;
  a1[2].n128_u8[0] = v11;
  a1[2].n128_u64[1] = v12;
  a1[3] = result;
  a1[4].n128_u64[0] = v18;
  return result;
}

uint64_t sub_14CEC8()
{
  return swift_release();
}

uint64_t sub_14CED0@<X0>(char *a1@<X8>)
{
  return sub_1468EC(*(void *)(v1 + 16), a1);
}

void sub_14CED8(uint64_t a1@<X8>)
{
  sub_146C88(*(void *)(v1 + 16), a1);
}

unint64_t sub_14CEE0()
{
  unint64_t result = qword_2663E0;
  if (!qword_2663E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2663E0);
  }
  return result;
}

uint64_t sub_14CF34()
{
  return sub_146F10(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_14CF3C()
{
  unint64_t result = qword_266400;
  if (!qword_266400)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2663F8);
    sub_14CEE0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266400);
  }
  return result;
}

uint64_t sub_14CFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14709C(a1, v2 + 16, a2);
}

uint64_t sub_14CFE8()
{
  uint64_t v1 = sub_168EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_14D0E4()
{
  sub_168EC0();

  sub_1473EC();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_14D1B4()
{
}

unint64_t sub_14D1C0()
{
  unint64_t result = qword_266418;
  if (!qword_266418)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266308);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2662F8);
    sub_1491D0();
    swift_getOpaqueTypeConformance2();
    sub_14D2A0((unint64_t *)&qword_265D70, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266418);
  }
  return result;
}

uint64_t sub_14D2A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static SCATHeadGesturesSourceControllerHelper.specifiers()()
{
  uint64_t v66 = sub_1691B0();
  uint64_t v0 = *(void *)(v66 - 8);
  __chkstk_darwin(v66 - 8);
  uint64_t v67 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77[0] = _swiftEmptyArrayStorage;
  id v2 = [self sharedInstance];
  id v3 = [v2 assistiveTouchSwitches];

  uint64_t v4 = sub_1384D8(0, &qword_266420);
  unint64_t v5 = sub_14E4C0();
  uint64_t v72 = v4;
  unint64_t v61 = v5;
  uint64_t v6 = sub_169990();

  int v8 = 0;
  uint64_t v9 = 0;
  unint64_t v65 = v6 & 0xC000000000000001;
  uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 < 0) {
    uint64_t v10 = v6;
  }
  uint64_t v60 = v10;
  uint64_t v70 = v6;
  uint64_t v57 = v6 + 56;
  uint64_t v55 = PSValueKey;
  uint64_t v54 = PSEnabledKey;
  uint64_t v64 = (void (**)(char *, uint64_t, uint64_t))(v0 + 16);
  uint64_t v63 = (void (**)(char *, uint64_t))(v0 + 8);
  unint64_t v62 = v77;
  *(void *)&long long v7 = 136315650;
  long long v59 = v7;
  uint64_t v58 = (char *)&type metadata for Any + 8;
  char v71 = (char *)&type metadata for Swift.AnyObject + 8;
  while (2)
  {
    id v13 = (char *)*(&off_20C728 + v9 + 4);
    int v69 = v8;
    if (v65)
    {
      swift_bridgeObjectRetain_n();
      sub_169BD0();
      sub_1699B0();
      uint64_t v14 = v77[1];
      uint64_t v73 = v77[2];
      uint64_t v16 = v77[3];
      uint64_t v15 = v77[4];
      unint64_t v17 = v77[5];
    }
    else
    {
      uint64_t v14 = v70;
      uint64_t v18 = -1 << *(unsigned char *)(v70 + 32);
      uint64_t v16 = ~v18;
      uint64_t v19 = -v18;
      if (v19 < 64) {
        uint64_t v20 = ~(-1 << v19);
      }
      else {
        uint64_t v20 = -1;
      }
      unint64_t v17 = v20 & *(void *)(v70 + 56);
      swift_bridgeObjectRetain_n();
      uint64_t v15 = 0;
      uint64_t v73 = v57;
    }
    uint64_t v68 = v16;
    int64_t v21 = (unint64_t)(v16 + 64) >> 6;
    while (1)
    {
      uint64_t v22 = v15;
      if ((v14 & 0x8000000000000000) == 0) {
        break;
      }
      uint64_t v25 = sub_169BE0();
      if (!v25) {
        goto LABEL_43;
      }
      uint64_t v76 = v25;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v26 = (id)v74[0];
      swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_43;
      }
LABEL_41:
      if ([v26 accessibilityEventUsage] == v13)
      {
        int64_t v30 = (char *)[v26 accessibilityEventUsagePage];

        if (v30 == (unsigned char *)&dword_4 + 3) {
          goto LABEL_43;
        }
      }
      else
      {
      }
    }
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v15 << 6);
      goto LABEL_40;
    }
    int64_t v27 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      __break(1u);
      return;
    }
    if (v27 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v27);
    ++v15;
    if (v28) {
      goto LABEL_39;
    }
    uint64_t v15 = v22 + 2;
    if (v22 + 2 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v15);
    if (v28) {
      goto LABEL_39;
    }
    uint64_t v15 = v22 + 3;
    if (v22 + 3 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v15);
    if (v28) {
      goto LABEL_39;
    }
    uint64_t v15 = v22 + 4;
    if (v22 + 4 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v15);
    if (v28) {
      goto LABEL_39;
    }
    uint64_t v15 = v22 + 5;
    if (v22 + 5 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v15);
    if (v28) {
      goto LABEL_39;
    }
    uint64_t v15 = v22 + 6;
    if (v22 + 6 >= v21) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v15);
    if (v28)
    {
LABEL_39:
      unint64_t v17 = (v28 - 1) & v28;
      unint64_t v24 = __clz(__rbit64(v28)) + (v15 << 6);
LABEL_40:
      id v26 = *(id *)(*(void *)(v14 + 48) + 8 * v24);
      if (!v26) {
        goto LABEL_43;
      }
      goto LABEL_41;
    }
    uint64_t v29 = v22 + 7;
    while (v21 != v29)
    {
      unint64_t v28 = *(void *)(v73 + 8 * v29++);
      if (v28)
      {
        uint64_t v15 = v29 - 1;
        goto LABEL_39;
      }
    }
LABEL_43:
    uint64_t v31 = v66;
    sub_14CEC8();
    swift_bridgeObjectRelease();
    unint64_t v32 = (unint64_t)(v13 - 1);
    uint64_t v33 = v67;
    if ((unint64_t)(v13 - 1) > 5)
    {
LABEL_53:
      if (qword_2658D0 != -1) {
        swift_once();
      }
      uint64_t v47 = __swift_project_value_buffer(v31, (uint64_t)qword_268040);
      (*v64)(v33, v47, v31);
      uint64_t v48 = sub_1691A0();
      os_log_type_t v49 = sub_169B20();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        v74[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = v59;
        if (v32 > 5)
        {
          unint64_t v52 = 0xE700000000000000;
          uint64_t v51 = 0x6E776F6E6B6E75;
        }
        else
        {
          uint64_t v51 = qword_1A2B30[v32];
          unint64_t v52 = qword_1A2B60[v32];
        }
        uint64_t v76 = sub_14E560(v51, v52, v74);
        sub_169B60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2080;
        if (v32 <= 5)
        {
          uint64_t v11 = *(void *)&aNod[8 * v32];
          unint64_t v12 = qword_1A2B00[v32];
        }
        else
        {
          unint64_t v12 = 0xE300000000000000;
          uint64_t v11 = 7104878;
        }
        uint64_t v76 = sub_14E560(v11, v12, v74);
        sub_169B60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 22) = 2048;
        uint64_t v76 = (uint64_t)v13;
        sub_169B60();
        _os_log_impl(&dword_0, v48, v49, "HeadGestures: Unable to create specifier for event usage: %s - identifier: %s - raw value: %ld", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*v63)(v33, v31);
      goto LABEL_7;
    }
    uint64_t v73 = *(void *)&aNod[8 * v32];
    AXHeadGesturesEventUsage.localizedName.getter((uint64_t)v13);
    if (!v34) {
      goto LABEL_52;
    }
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_266430);
    v74[0] = v56;
    NSString v35 = sub_169850();
    swift_bridgeObjectRelease();
    uint64_t v36 = v75;
    if (v75)
    {
      uint64_t v37 = __swift_project_boxed_opaque_existential_0(v74, v75);
      uint64_t v38 = *(void *)(v36 - 8);
      __chkstk_darwin(v37);
      int64_t v40 = (char *)&v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v38 + 16))(v40);
      uint64_t v41 = sub_169CD0();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v36);
      uint64_t v31 = v66;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    }
    else
    {
      uint64_t v41 = 0;
    }
    id v42 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v35 target:v41 set:0 get:0 detail:0 cell:1 edit:0];

    swift_unknownObjectRelease();
    uint64_t v33 = v67;
    if (!v42)
    {
LABEL_52:
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    Class isa = sub_1699C0().super.super.isa;
    [v42 setProperty:isa forKey:v55];

    Class v44 = sub_169940().super.super.isa;
    [v42 setProperty:v44 forKey:v54];

    NSString v45 = sub_169850();
    swift_bridgeObjectRelease();
    [v42 setIdentifier:v45];

    id v46 = v42;
    sub_1698D0();
    if (*(void *)((char *)&dword_10 + (v77[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v77[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_169910();
    sub_169930();
    sub_169900();

LABEL_7:
    int v8 = 1;
    uint64_t v9 = 1;
    if ((v69 & 1) == 0) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
}

_UNKNOWN **static AXHeadGesturesEventUsage.gestures.getter()
{
  return &off_20C758;
}

uint64_t AXHeadGesturesEventUsage.identifier.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return 0;
  }
  else {
    return *(void *)&aNod[8 * a1 - 8];
  }
}

uint64_t AXHeadGesturesEventUsage.localizedName.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 6) {
    return 0;
  }
  uint64_t v1 = a1 - 1;
  uint64_t v2 = *(void *)&aNod[v1 * 8];
  id v3 = (void *)qword_1A2B00[v1];
  sub_169C10(16);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = v2;
  v9._object = v3;
  sub_1698A0(v9);
  swift_bridgeObjectRelease();
  NSString v4 = sub_169850();
  swift_bridgeObjectRelease();
  NSString v5 = sub_169850();
  id v6 = settingsLocString(v4, v5);

  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_169880();

  return v7;
}

id SCATHeadGesturesSourceControllerHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SCATHeadGesturesSourceControllerHelper();
  return objc_msgSendSuper2(&v2, "init");
}

id SCATHeadGesturesSourceControllerHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SCATHeadGesturesSourceControllerHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t AXHeadGesturesEventUsage.description.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return 0x6E776F6E6B6E75;
  }
  else {
    return qword_1A2B30[a1 - 1];
  }
}

_UNKNOWN **static AXHeadGesturesEventUsage.partialGestures.getter()
{
  return &off_20C788;
}

void *static AXHeadGesturesEventUsage.allCases.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266438);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A2A50;
  *(_OWORD *)(inited + 32) = xmmword_1A1E00;
  uint64_t v1 = sub_14E3B0((int *)((char *)&dword_0 + 1), 6, 1, (void *)inited);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    uint64_t v1 = sub_14E3B0((void *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v5;
  v1[v3 + 4] = 3;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2)) {
    uint64_t v1 = sub_14E3B0((void *)(v2 > 1), v3 + 2, 1, v1);
  }
  v1[2] = v6;
  v1[v5 + 4] = 4;
  unint64_t v7 = v1[3];
  unint64_t v8 = v3 + 3;
  if ((uint64_t)(v3 + 3) > (uint64_t)(v7 >> 1)) {
    uint64_t v1 = sub_14E3B0((void *)(v7 > 1), v3 + 3, 1, v1);
  }
  v1[2] = v8;
  v1[v6 + 4] = 5;
  unint64_t v9 = v1[3];
  if ((uint64_t)(v3 + 4) > (uint64_t)(v9 >> 1)) {
    uint64_t v1 = sub_14E3B0((void *)(v9 > 1), v3 + 4, 1, v1);
  }
  v1[2] = v3 + 4;
  v1[v8 + 4] = 6;
  return v1;
}

uint64_t sub_14E0DC()
{
  return AXHeadGesturesEventUsage.description.getter(*v0);
}

id sub_14E0E4()
{
  uint64_t v0 = sub_1691B0();
  __swift_allocate_value_buffer(v0, qword_268040);
  __swift_project_value_buffer(v0, (uint64_t)qword_268040);
  id result = (id)AXLogSettings();
  if (result) {
    return (id)sub_1691C0();
  }
  __break(1u);
  return result;
}

uint64_t sub_14E148(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_266218);
  uint64_t v10 = *(void *)(sub_168EC0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_169C50();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_168EC0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_14EC20(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_14E3B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_266438);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_14ED78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_14E4C0()
{
  unint64_t result = qword_266428;
  if (!qword_266428)
  {
    sub_1384D8(255, &qword_266420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266428);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_14E560(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_14E634(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_145CC4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_145CC4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_14E634(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_169B70();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_14E7F0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_169C40();
  if (!v8)
  {
    sub_169C50();
    __break(1u);
LABEL_17:
    uint64_t result = sub_169CA0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_14E7F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_14E888(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_14EA68(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_14EA68(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_14E888(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_14EA00(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_169C20();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_169C50();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1698B0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_169CA0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_169C50();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_14EA00(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_266470);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_14EA68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_266470);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for SCATHeadGesturesSourceControllerHelper()
{
  return self;
}

uint64_t sub_14EC20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_168EC0() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_169CA0();
  __break(1u);
  return result;
}

char *sub_14ED78(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    size_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_169CA0();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

Swift::OpaquePointer_optional __swiftcall AXVoiceOverNotificationVerbosity.specifiers()()
{
  uint64_t v1 = v0;
  NSString v2 = sub_169850();
  id v3 = [v0 valueForKey:v2];

  if (v3)
  {
    sub_169B90();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v107, 0, sizeof(v107));
  }
  sub_14FFAC((uint64_t)v107, (uint64_t)v108);
  if (!v108[3])
  {
    sub_150014((uint64_t)v108);
LABEL_9:
    v108[0] = (unint64_t)_swiftEmptyArrayStorage;
    size_t v6 = self;
    NSString v7 = sub_169850();
    NSString v8 = sub_169850();
    id v9 = settingsLocString(v7, v8);

    id v10 = [v6 groupSpecifierWithName:v9];
    if (v10)
    {
      id v12 = v10;
      NSString v13 = sub_169850();
      id v14 = (id)AXLocStringKeyForModel();

      NSString v15 = sub_169850();
      id v16 = settingsLocString(v14, v15);

      uint64_t v105 = PSFooterTextGroupKey;
      objc_msgSend(v12, "setProperty:forKey:", v16);

      id v17 = v12;
      sub_1698D0();
      if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_169910();
      sub_169930();
      sub_169900();
      NSString v18 = sub_169850();
      NSString v19 = sub_169850();
      id v20 = settingsLocString(v18, v19);

      id v21 = [v6 preferenceSpecifierNamed:v20 target:0 set:0 get:0 detail:0 cell:3 edit:0];
      if (v21)
      {
        unint64_t v104 = v1;
        *(void *)&v107[0] = 2;
        type metadata accessor for AXSVoiceOverFeedbackOption(0);
        id v22 = v21;
        uint64_t v23 = sub_169CF0();
        NSString v24 = sub_169850();
        [v22 setProperty:v23 forKey:v24];

        swift_unknownObjectRelease();
        id v25 = v22;
        sub_1698D0();
        if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                           + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_169910();
        sub_169930();
        sub_169900();
        NSString v26 = sub_169850();
        NSString v27 = sub_169850();
        id v28 = settingsLocString(v26, v27);

        id v29 = [v6 preferenceSpecifierNamed:v28 target:0 set:0 get:0 detail:0 cell:3 edit:0];
        if (v29)
        {
          *(void *)&v107[0] = 32;
          id v30 = v29;
          uint64_t v31 = sub_169CF0();
          NSString v32 = sub_169850();
          [v30 setProperty:v31 forKey:v32];

          swift_unknownObjectRelease();
          id v33 = v30;
          sub_1698D0();
          if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                             + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_169910();
          sub_169930();
          sub_169900();
          NSString v34 = sub_169850();
          NSString v35 = sub_169850();
          id v36 = settingsLocString(v34, v35);

          id v37 = [v6 preferenceSpecifierNamed:v36 target:0 set:0 get:0 detail:0 cell:3 edit:0];
          if (v37)
          {
            *(void *)&v107[0] = 16;
            id v38 = v37;
            uint64_t v39 = sub_169CF0();
            NSString v40 = sub_169850();
            [v38 setProperty:v39 forKey:v40];

            swift_unknownObjectRelease();
            id v41 = v38;
            sub_1698D0();
            if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                               + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
              sub_169910();
            sub_169930();
            sub_169900();
            NSString v42 = sub_169850();
            NSString v43 = sub_169850();
            id v44 = settingsLocString(v42, v43);

            id v45 = [v6 preferenceSpecifierNamed:v44 target:0 set:0 get:0 detail:0 cell:3 edit:0];
            if (v45)
            {
              *(void *)&v107[0] = 1;
              id v46 = v45;
              uint64_t v47 = sub_169CF0();
              NSString v48 = sub_169850();
              [v46 setProperty:v47 forKey:v48];

              swift_unknownObjectRelease();
              id v49 = v46;
              sub_1698D0();
              if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                                 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
                sub_169910();
              sub_169930();
              sub_169900();
              NSString v50 = sub_169850();
              NSString v51 = sub_169850();
              id v52 = settingsLocString(v50, v51);

              id v53 = [v6 groupSpecifierWithName:v52];
              if (v53)
              {
                id v54 = v53;
                NSString v55 = sub_169850();
                NSString v56 = sub_169850();
                id v57 = settingsLocString(v55, v56);

                [v54 setProperty:v57 forKey:v105];
                id v58 = v54;
                sub_1698D0();
                if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                  sub_169910();
                }
                sub_169930();
                sub_169900();
                NSString v59 = sub_169850();
                NSString v60 = sub_169850();
                id v61 = settingsLocString(v59, v60);

                id v62 = [v6 preferenceSpecifierNamed:v61 target:0 set:0 get:0 detail:0 cell:3 edit:0];
                if (v62)
                {
                  *(void *)&v107[0] = 2;
                  id v63 = v62;
                  uint64_t v64 = sub_169CF0();
                  NSString v65 = sub_169850();
                  [v63 setProperty:v64 forKey:v65];

                  swift_unknownObjectRelease();
                  id v66 = v63;
                  sub_1698D0();
                  if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                    sub_169910();
                  }
                  sub_169930();
                  sub_169900();
                  NSString v67 = sub_169850();
                  NSString v68 = sub_169850();
                  id v69 = settingsLocString(v67, v68);

                  id v70 = [v6 preferenceSpecifierNamed:v69 target:0 set:0 get:0 detail:0 cell:3 edit:0];
                  if (v70)
                  {
                    *(void *)&v107[0] = 64;
                    id v71 = v70;
                    uint64_t v72 = sub_169CF0();
                    NSString v73 = sub_169850();
                    [v71 setProperty:v72 forKey:v73];

                    swift_unknownObjectRelease();
                    id v74 = v71;
                    sub_1698D0();
                    if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                      sub_169910();
                    }
                    sub_169930();
                    sub_169900();
                    NSString v75 = sub_169850();
                    NSString v76 = sub_169850();
                    id v77 = settingsLocString(v75, v76);

                    id v78 = [v6 preferenceSpecifierNamed:v77 target:0 set:0 get:0 detail:0 cell:3 edit:0];
                    if (v78)
                    {
                      *(void *)&v107[0] = 16;
                      id v79 = v78;
                      uint64_t v80 = sub_169CF0();
                      NSString v81 = sub_169850();
                      [v79 setProperty:v80 forKey:v81];

                      swift_unknownObjectRelease();
                      id v82 = v79;
                      sub_1698D0();
                      if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                        sub_169910();
                      }
                      sub_169930();
                      sub_169900();
                      NSString v83 = sub_169850();
                      NSString v84 = sub_169850();
                      id v85 = settingsLocString(v83, v84);

                      id v86 = [v6 preferenceSpecifierNamed:v85 target:0 set:0 get:0 detail:0 cell:3 edit:0];
                      if (v86)
                      {
                        *(void *)&v107[0] = 1;
                        id v87 = v86;
                        uint64_t v88 = sub_169CF0();
                        NSString v89 = sub_169850();
                        [v87 setProperty:v88 forKey:v89];

                        swift_unknownObjectRelease();
                        id v90 = v87;
                        sub_1698D0();
                        if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                          sub_169910();
                        }
                        sub_169930();
                        sub_169900();
                        id v91 = [v6 emptyGroupSpecifier];

                        if (v91)
                        {
                          id v92 = v91;
                          NSString v93 = sub_169850();
                          NSString v94 = sub_169850();
                          id v95 = settingsLocString(v93, v94);

                          [v92 setProperty:v95 forKey:v105];
                          id v96 = v92;
                          sub_1698D0();
                          if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                            sub_169910();
                          }
                          sub_169930();
                          sub_169900();
                          NSString v97 = sub_169850();
                          NSString v98 = sub_169850();
                          id v99 = settingsLocString(v97, v98);

                          id v100 = [v6 preferenceSpecifierNamed:v99 target:v104 set:"_setUseRingerSwitchWithValue:spec:" get:"_useRingerSwitchWithSpec:" detail:0 cell:6 edit:0];
                          if (v100)
                          {
                            id v101 = v100;
                            sub_1698D0();
                            if (*(void *)((char *)&dword_10 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (v108[0] & 0xFFFFFFFFFFFFFF8)) >> 1) {
                              sub_169910();
                            }
                            sub_169930();
                            sub_169900();
                            sub_1384D8(0, &qword_266468);
                            swift_bridgeObjectRetain();
                            Class isa = sub_1698E0().super.isa;
                            swift_bridgeObjectRelease();
                            NSString v103 = sub_169850();
                            [v104 setValue:isa forKey:v103];

                            uint64_t v5 = sub_150074(v108[0]);
                            swift_bridgeObjectRelease();
                            goto LABEL_46;
                          }
LABEL_58:
                          __break(1u);
                          goto LABEL_59;
                        }
LABEL_57:
                        __break(1u);
                        goto LABEL_58;
                      }
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_266480);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v5 = v106;
  if (!*(void *)(v106 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
LABEL_46:
  unint64_t v11 = (void *)v5;
LABEL_59:
  result.value._rawValue = v11;
  result.is_nil = v4;
  return result;
}

uint64_t sub_14FFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_266478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_150014(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_266478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_150074(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_169C60();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  id v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  NSString v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1447AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        sub_169C30();
        sub_1384D8(0, &qword_266468);
        swift_dynamicCast();
        id v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1447AC(0, v3[2] + 1, 1);
          id v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_1447AC(v6 > 1, v7 + 1, 1);
          id v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_145D20(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      NSString v8 = (id *)(a1 + 32);
      sub_1384D8(0, &qword_266468);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        id v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1447AC(0, v3[2] + 1, 1);
          id v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_1447AC(v10 > 1, v11 + 1, 1);
          id v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_145D20(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

id AXVoiceOverNotificationVerbosity.tableView(_:didSelectRowAt:)(uint64_t a1)
{
  uint64_t v2 = v1;
  Class isa = sub_168F10().super.isa;
  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for AXVoiceOverNotificationVerbosity();
  objc_msgSendSuper2(&v30, "tableView:didSelectRowAtIndexPath:", a1, isa);

  Class v5 = sub_168F10().super.isa;
  id v6 = [v1 specifierForIndexPath:v5];

  if (v6)
  {
    NSString v7 = sub_169850();
    id v8 = [v6 propertyForKey:v7];

    if (v8)
    {
      sub_169B90();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    sub_14FFAC((uint64_t)&v26, (uint64_t)v28);
    if (v29)
    {
      type metadata accessor for AXSVoiceOverFeedbackOption(0);
      if (swift_dynamicCast())
      {
        id v9 = self;
        id v10 = [v9 sharedInstance];
        uint64_t v11 = (uint64_t)[v10 voiceOverBannerNotificationOutput];

        if (v25 <= 15)
        {
          if (v25 == 1)
          {
            uint64_t v11 = 1;
          }
          else if (v25 == 2)
          {
            uint64_t v12 = v11 ^ 2;
            BOOL v13 = v11 == 1;
            uint64_t v14 = 2;
            goto LABEL_25;
          }
LABEL_28:
          id v22 = [v9 sharedInstance];
          [v22 setVoiceOverBannerNotificationOutput:v11];

LABEL_38:
          return [v2 reload];
        }
        if (v25 == 16)
        {
          uint64_t v12 = v11 ^ 0x10;
          BOOL v13 = v11 == 1;
          uint64_t v14 = 16;
        }
        else
        {
          if (v25 != 64) {
            goto LABEL_28;
          }
          uint64_t v12 = v11 ^ 0x40;
          BOOL v13 = v11 == 1;
          uint64_t v14 = 64;
        }
LABEL_25:
        if (v13) {
          uint64_t v11 = v14;
        }
        else {
          uint64_t v11 = v12;
        }
        goto LABEL_28;
      }
    }
    else
    {
      sub_150014((uint64_t)v28);
    }
    NSString v15 = sub_169850();
    id v16 = [v6 propertyForKey:v15];

    if (v16)
    {
      sub_169B90();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    sub_14FFAC((uint64_t)&v26, (uint64_t)v28);
    if (v29)
    {
      type metadata accessor for AXSVoiceOverFeedbackOption(0);
      if (swift_dynamicCast())
      {
        uint64_t v17 = v25;
        NSString v18 = self;
        id v19 = [v18 sharedInstance];
        uint64_t v20 = (uint64_t)[v19 voiceOverLockedScreenNotificationOutput];

        switch(v25)
        {
          case 1:
            break;
          case 2:
            uint64_t v21 = v20 ^ 2;
            goto LABEL_34;
          case 16:
            if (v20 == 1) {
              uint64_t v17 = 16;
            }
            else {
              uint64_t v17 = v20 ^ 0x10;
            }
            break;
          case 32:
            uint64_t v21 = v20 ^ 0x20;
LABEL_34:
            if (v20 == 1) {
              uint64_t v17 = 0;
            }
            else {
              uint64_t v17 = v21;
            }
            break;
          default:
            uint64_t v17 = v20;
            break;
        }
        id v23 = [v18 sharedInstance];
        [v23 setVoiceOverLockedScreenNotificationOutput:v17];
      }
      goto LABEL_38;
    }

    sub_150014((uint64_t)v28);
  }
  return [v2 reload];
}

uint64_t type metadata accessor for AXVoiceOverNotificationVerbosity()
{
  return self;
}

void AXVoiceOverNotificationVerbosity.tableView(_:willDisplay:forRowAt:)(uint64_t a1, void *a2)
{
}

id AXVoiceOverNotificationVerbosity.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for AXVoiceOverNotificationVerbosity();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

id AXVoiceOverNotificationVerbosity.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AXVoiceOverNotificationVerbosity();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id AXVoiceOverNotificationVerbosity.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AXVoiceOverNotificationVerbosity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_150CD0(uint64_t a1)
{
  sub_145CC4(a1, (uint64_t)v3);
  sub_1384D8(0, &qword_2664B0);
  if (swift_dynamicCast())
  {
    id v1 = [self sharedInstance];
    objc_msgSend(v1, "setVoiceOverUseRingerSwitchToControlNotificationOutput:", objc_msgSend(v2, "BOOLValue"));
  }
}

void sub_150D8C(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v15 = a1;
    Class isa = sub_168F10().super.isa;
    id v6 = [v1 specifierForIndexPath:isa];

    if (v6)
    {
      NSString v7 = sub_169850();
      id v8 = [v6 propertyForKey:v7];

      if (v8)
      {
        sub_169B90();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      sub_14FFAC((uint64_t)&v18, (uint64_t)v20);
      if (v21)
      {
        type metadata accessor for AXSVoiceOverFeedbackOption(0);
        if (swift_dynamicCast())
        {
          uint64_t v9 = v17;
          id v10 = &selRef_voiceOverBannerNotificationOutput;
LABEL_19:
          id v13 = [self sharedInstance];
          unint64_t v14 = (unint64_t)[v13 *v10];

          objc_msgSend(v4, "setChecked:", (v9 & ~v14) == 0, v15);
          return;
        }
      }
      else
      {
        sub_150014((uint64_t)v20);
      }
      NSString v11 = sub_169850();
      id v12 = [v6 propertyForKey:v11];

      if (v12)
      {
        sub_169B90();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v18 = 0u;
        long long v19 = 0u;
      }
      sub_14FFAC((uint64_t)&v18, (uint64_t)v20);
      if (v21)
      {
        type metadata accessor for AXSVoiceOverFeedbackOption(0);
        if (swift_dynamicCast())
        {
          uint64_t v9 = v17;
          id v10 = &selRef_voiceOverLockedScreenNotificationOutput;
          goto LABEL_19;
        }
      }
      else
      {

        sub_150014((uint64_t)v20);
      }
    }
    else
    {
    }
  }
}

uint64_t sub_151054()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_266650);
  sub_138494(&qword_266648, &qword_266650);

  return sub_1696E0();
}

uint64_t sub_1510E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_266650);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = sub_169850();
  NSString v7 = sub_169850();
  id v8 = settingsLocString(v6, v7);

  if (v8)
  {
    sub_169880();
  }
  sub_154884();
  sub_169090();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

void sub_1512A0(uint64_t a1@<X8>)
{
  NSString v2 = sub_169850();
  NSString v3 = sub_169850();
  id v4 = settingsLocString(v2, v3);

  if (v4)
  {
    sub_169880();

    sub_13B004();
    *(void *)a1 = sub_169440();
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v6 & 1;
    *(void *)(a1 + 24) = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_15137C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_266630);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  NSString v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_266638);
  sub_1547E0();
  sub_1690C0();
  sub_169B00();
  id v4 = (char *)sub_169A80();
  uint64_t v5 = (id *)&v4[direct field offset for AXPreferences.voiceover];
  swift_beginAccess();
  id v6 = *v5;

  sub_169AF0();
  sub_138494(&qword_266658, &qword_266630);
  sub_169480();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

UIViewController __swiftcall VoiceOverSpeechSwiftUI.make()()
{
  return (UIViewController)sub_1690F0();
}

unint64_t sub_151588()
{
  unint64_t result = qword_2664B8;
  if (!qword_2664B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2664B8);
  }
  return result;
}

id VoiceOverSpeechSwiftUI.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_169850();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for VoiceOverSpeechSwiftUI();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

uint64_t type metadata accessor for VoiceOverSpeechSwiftUI()
{
  return self;
}

id VoiceOverSpeechSwiftUI.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for VoiceOverSpeechSwiftUI();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id VoiceOverSpeechSwiftUI.__deallocating_deinit()
{
  return sub_152174(type metadata accessor for VoiceOverSpeechSwiftUI);
}

uint64_t static VoiceOverActivityViewBridge.makeViewController(get:set:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = a2;
  id v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a3;
  v15[5] = a4;
  sub_169AE0();
  swift_retain();
  swift_retain();
  sub_169680();
  sub_151A6C((uint64_t)v10, (uint64_t)v13);
  id v16 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2664C8));
  return sub_169380();
}

uint64_t type metadata accessor for VoiceOverActivityVoiceSelectionView()
{
  uint64_t result = qword_2665D8;
  if (!qword_2665D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_151A18()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_151A44()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_151A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v25 = a2;
  uint64_t v3 = sub_169AE0();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  long long v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v26 = (char *)&v25 - v6;
  uint64_t v7 = sub_169160();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_168F90();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  id v13 = (uint64_t *)(a2 + *(int *)(v12 + 20));
  uint64_t v14 = sub_168FC0();
  uint64_t v15 = sub_168FB0();
  uint64_t v34 = v14;
  NSString v35 = &protocol witness table for DefaultVoiceSource;
  uint64_t v32 = v15;
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_154F10(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658E0);
  sub_138494((unint64_t *)&qword_2658E8, &qword_2658E0);
  sub_169BB0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for CoreSynthesisVoicePickableFetcher.SiriVoicePolicy.neural(_:), v7);
  id v16 = objc_allocWithZone((Class)sub_169180());
  uint64_t v31 = (void *)sub_169170();
  sub_169600();
  uint64_t v17 = v33;
  uint64_t *v13 = v32;
  v13[1] = v17;
  uint64_t v18 = v25;
  long long v19 = (uint64_t *)(v25 + *(int *)(v12 + 24));
  *long long v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v28;
  sub_13F990(v28, v18, &qword_2664C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  uint64_t v21 = v26;
  sub_169660();
  uint64_t v23 = v29;
  uint64_t v22 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v27, v21, v30);
  sub_169600();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  return sub_13FA20(v20, &qword_2664C0);
}

void sub_152068(uint64_t a1)
{
  id v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  sub_169AD0();
}

id VoiceOverActivityViewBridge.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoiceOverActivityViewBridge();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for VoiceOverActivityViewBridge()
{
  return self;
}

id VoiceOverActivityViewBridge.__deallocating_deinit()
{
  return sub_152174(type metadata accessor for VoiceOverActivityViewBridge);
}

id sub_152174(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t property wrapper backing initializer of VoiceOverActivityVoiceSelectionView.fetcher()
{
  sub_169180();
  sub_169600();
  return v1;
}

BOOL sub_1521E8()
{
  uint64_t v0 = sub_168F90();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_168FA0();
  sub_168F80();
  sub_154F10(&qword_2658D8, (void (*)(uint64_t))&type metadata accessor for CoreSynthesizer.Voice.Trait);
  char v7 = sub_169BA0();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return (v7 & 1) == 0;
}

uint64_t property wrapper backing initializer of VoiceOverActivityVoiceSelectionView.uiActivity(uint64_t a1)
{
  uint64_t v2 = sub_169AE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_169600();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_15243C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = sub_169AE0();
  void *v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  v3[4] = v7;
  uint64_t v8 = malloc(*(void *)(*(void *)(v7 - 8) + 64));
  v3[5] = v8;
  uint64_t v9 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  sub_13F990(v1 + *(int *)(v9 + 28), (uint64_t)v8, &qword_2664D8);
  sub_169610();
  return sub_152570;
}

void sub_152570(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 16);
  uint64_t v5 = *(void **)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1];
    (*(void (**)(void, void *, void))(v7 + 16))(*(void *)(*(void *)a1 + 16), v5, *v2);
    sub_169620();
    sub_13FA20((uint64_t)v3, &qword_2664D8);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_169620();
    sub_13FA20((uint64_t)v3, &qword_2664D8);
  }
  free(v3);
  free(v5);
  free(v4);

  free(v2);
}

uint64_t VoiceOverActivityVoiceSelectionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = sub_169AE0();
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  id v45 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  uint64_t v4 = v3 - 8;
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v41 = *(void *)(v42 + 64);
  __chkstk_darwin(v3);
  uint64_t v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_169060();
  uint64_t v33 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_266398);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D0);
  __chkstk_darwin(v13 - 8);
  NSString v35 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_169080();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  __chkstk_darwin(v15);
  id v36 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v1 + *(int *)(v4 + 36);
  uint64_t v18 = v1;
  uint64_t v31 = v1;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  sub_169630();
  swift_getKeyPath();
  sub_169650();
  swift_release();
  sub_13FA20((uint64_t)v12, &qword_2664C0);
  uint64_t v19 = sub_168F00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664E0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1A2BC0;
  sub_169020();
  sub_169040();
  sub_169050();
  sub_169030();
  uint64_t v50 = v20;
  sub_154F10(&qword_2664E8, (void (*)(uint64_t))&type metadata accessor for AXSUIVoiceSettings.Settings);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664F0);
  sub_138494(&qword_2664F8, &qword_2664F0);
  sub_169BB0();
  uint64_t v21 = v32;
  sub_152E84(v18, v32);
  unint64_t v22 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v23 = swift_allocObject();
  sub_152EEC(v21, v23 + v22);
  id v49 = &_swiftEmptySetSingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_266500);
  sub_169690();
  __swift_instantiateConcreteTypeFromMangledName(&qword_266508);
  sub_152FC0();
  NSString v24 = v36;
  sub_169070();
  uint64_t v25 = v45;
  sub_169610();
  sub_152E84(v31, v21);
  uint64_t v26 = swift_allocObject();
  sub_152EEC(v21, v26 + v22);
  sub_154F10(&qword_266518, (void (*)(uint64_t))&type metadata accessor for AXSUIVoiceSettings);
  sub_154F10(&qword_266520, (void (*)(uint64_t))&type metadata accessor for AXPreferences.VoiceOver.Activity);
  uint64_t v27 = v46;
  uint64_t v28 = v43;
  sub_169530();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v24, v28);
}

uint64_t sub_152D30()
{
  return sub_169AA0();
}

uint64_t sub_152D54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_266670);
  __chkstk_darwin(v2 - 8);
  sub_13F990(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_266670);
  return sub_169AB0();
}

uint64_t sub_152DEC()
{
  return sub_1696E0();
}

uint64_t sub_152E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_152EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_152F50()
{
  type metadata accessor for VoiceOverActivityVoiceSelectionView();

  return sub_152DEC();
}

unint64_t sub_152FC0()
{
  unint64_t result = qword_266510;
  if (!qword_266510)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266508);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266510);
  }
  return result;
}

void sub_153070(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_266668);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = sub_169850();
  NSString v11 = sub_169850();
  id v12 = settingsLocString(v10, v11);

  if (v12)
  {
    uint64_t v13 = sub_169880();
    uint64_t v15 = v14;

    uint64_t v23 = v13;
    uint64_t v24 = v15;
    sub_13B004();
    uint64_t v23 = sub_169440();
    uint64_t v24 = v16;
    char v25 = v17 & 1;
    uint64_t v26 = v18;
    sub_152E84(a1, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v20 = swift_allocObject();
    sub_152EEC((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
    sub_1694D0();
    swift_release();
    sub_14930C(v23, v24, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v22, v9, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1532F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_266578);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_169260();
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_15243C(v22);
  uint64_t v9 = (void (*)(unsigned char *, void))sub_169A90();
  uint64_t v11 = v10;
  uint64_t v12 = sub_168FF0();
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12)) {
    sub_168FE0();
  }
  v9(v21, 0);
  v8((uint64_t)v22, 0);
  uint64_t v14 = sub_15243C(v22);
  uint64_t v15 = (void (*)(unsigned char *, void))sub_169A90();
  if (!v13(v16, 1, v12)) {
    sub_168FD0();
  }
  v15(v21, 0);
  v14((uint64_t)v22, 0);
  uint64_t v17 = type metadata accessor for VoiceOverActivityVoiceSelectionView();
  sub_13F990(a1 + *(int *)(v17 + 24), (uint64_t)v4, &qword_266578);
  sub_154C58(&qword_2658F0, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, (uint64_t)v7);
  sub_13FA20((uint64_t)v4, &qword_266578);
  sub_169250();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v20);
}

uint64_t sub_1535B4()
{
  uint64_t v0 = sub_169AE0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - v5;
  type metadata accessor for VoiceOverActivityVoiceSelectionView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  sub_169610();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  sub_169670();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t sub_1536FC()
{
  return sub_154BA4((uint64_t (*)(uint64_t))sub_1535B4);
}

uint64_t sub_153714()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for VoiceOverActivityVoiceSelectionView(char *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_169AE0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v13];
    uint64_t v16 = (char *)a2 + v13;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v18;
    uint64_t v19 = &a1[v14];
    uint64_t v20 = (uint64_t *)((char *)a2 + v14);
    id v21 = v17;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_169260();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
    }
    else
    {
      *(void *)uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[7];
    uint64_t v24 = &a1[v23];
    char v25 = (char *)a2 + v23;
    v12(&a1[v23], v25, v11);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
    *(void *)&v24[*(int *)(v26 + 28)] = *(void *)&v25[*(int *)(v26 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for VoiceOverActivityVoiceSelectionView(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v5 = sub_169AE0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);

  swift_release();
  uint64_t v7 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_169260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v6(a1 + a2[7], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);

  return swift_release();
}

char *initializeWithCopy for VoiceOverActivityVoiceSelectionView(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_169AE0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *(void **)v15;
  uint64_t v17 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v17;
  uint64_t v18 = &a1[v13];
  uint64_t v19 = (void *)((char *)a2 + v13);
  id v20 = v16;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_169260();
    (*(void (**)(char *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
  }
  else
  {
    *(void *)uint64_t v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (char *)a2 + v22;
  v11(&a1[v22], v24, v10);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  *(void *)&v23[*(int *)(v25 + 28)] = *(void *)&v24[*(int *)(v25 + 28)];
  swift_retain();
  return a1;
}

char *assignWithCopy for VoiceOverActivityVoiceSelectionView(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_169AE0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void **)&a2[v11];
  uint64_t v15 = *(void **)v12;
  *(void *)uint64_t v12 = v14;
  id v16 = v14;

  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v17 = a3[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    sub_13FA20((uint64_t)&a1[v17], &qword_2658F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_169260();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  v10(&a1[v21], v23, v9);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  *(void *)&v22[*(int *)(v24 + 28)] = *(void *)&v23[*(int *)(v24 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for VoiceOverActivityVoiceSelectionView(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_169AE0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_169260();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (char *)a2 + v17;
  v11(&a1[v17], v19, v10);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  *(void *)&v18[*(int *)(v20 + 28)] = *(void *)&v19[*(int *)(v20 + 28)];
  return a1;
}

char *assignWithTake for VoiceOverActivityVoiceSelectionView(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_169AE0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void **)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];

  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v15 = a3[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    sub_13FA20((uint64_t)&a1[v15], &qword_2658F0);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_169260();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  v10(&a1[v20], v22, v9);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  *(void *)&v21[*(int *)(v23 + 28)] = *(void *)&v22[*(int *)(v23 + 28)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceOverActivityVoiceSelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1541B0);
}

uint64_t sub_1541B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_266578);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for VoiceOverActivityVoiceSelectionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_154350);
}

uint64_t sub_154350(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2664C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_266578);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_1544DC()
{
  sub_154678(319, &qword_2665E8, (uint64_t (*)(uint64_t))&type metadata accessor for AXPreferences.VoiceOver.Activity, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F)
  {
    sub_154678(319, &qword_2665F0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_154678(319, (unint64_t *)&unk_2665F8, (uint64_t (*)(uint64_t))&type metadata accessor for AXPreferences.VoiceOver.Activity, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_154678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1546DC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for VoiceOverSpeechWrapperView()
{
  return &type metadata for VoiceOverSpeechWrapperView;
}

uint64_t sub_1547C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1547E0()
{
  unint64_t result = qword_266640;
  if (!qword_266640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_266638);
    sub_138494(&qword_266648, &qword_266650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_266640);
  }
  return result;
}

unint64_t sub_154884()
{
  unint64_t result = qword_266660;
  if (!qword_266660)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_266660);
  }
  return result;
}

uint64_t sub_1548C4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1548FC()
{
  sub_152068(*(void *)(v0 + 16));
}

void sub_154904()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_169AC0();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1549A8(uint64_t a1@<X8>)
{
  sub_153070(*(void *)(v1 + 16), a1);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VoiceOverActivityVoiceSelectionView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2664C0) + 32);
  uint64_t v6 = sub_169AE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);

  swift_release();
  uint64_t v8 = v0 + v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2658F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_169260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v7(v0 + v3 + v1[7], v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2664D8);
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_154B8C()
{
  return sub_154BA4(sub_1532F8);
}

uint64_t sub_154BA4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for VoiceOverActivityVoiceSelectionView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_154C18@<X0>(uint64_t a1@<X8>)
{
  return sub_154C58(&qword_265FD0, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_154C58@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_169320();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13F990(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_169B10();
    uint64_t v21 = sub_1693F0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_14E560(v27, v25, &v29);
      sub_169B60();
      _os_log_impl(&dword_0, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_169310();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_154F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_154F5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_154FE8()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t get_aks_client_connection()
{
  if (get_aks_client_dispatch_queue_onceToken != -1) {
    dispatch_once(&get_aks_client_dispatch_queue_onceToken, &__block_literal_global_173);
  }
  dispatch_sync((dispatch_queue_t)get_aks_client_dispatch_queue_connection_queue, &__block_literal_global_152);
  uint64_t result = get_aks_client_connection_connection;
  if (!get_aks_client_connection_connection)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return get_aks_client_connection_connection;
  }
  return result;
}

void __get_aks_client_connection_block_invoke(id a1)
{
  if (!get_aks_client_connection_connection) {
    get_aks_client_connection_connection = _copy_aks_client_connection("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void __get_aks_client_dispatch_queue_block_invoke(id a1)
{
  get_aks_client_dispatch_queue_connection_queue = (uint64_t)dispatch_queue_create("aks-client-queue", 0);
}

uint64_t _copy_aks_client_connection(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;

  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (v4 = v3, uint64_t v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    uint64_t v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      uint64_t v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }
  uint64_t result = connect;
  if (connect)
  {
    uint64_t v10 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t _aks_verify_password(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v9 = 3758097084;
  uint64_t v21 = 0;
  int v20 = 0;
  mach_port_t aks_client_connection = get_aks_client_connection();
  if (aks_client_connection)
  {
    mach_port_t v16 = aks_client_connection;
    if (a2) {
      uint64_t v17 = a2;
    }
    else {
      uint64_t v17 = "";
    }
    aks_pack_data((char **)&v21, (unsigned int *)&v20, 2, v11, v12, v13, v14, v15, (uint64_t)v17);
    if (v21)
    {
      input[0] = a1;
      input[1] = a6;
      input[2] = (uint64_t)v21;
      input[3] = v20;
      uint64_t v9 = IOConnectCallMethod(v16, 0x2Au, input, 4u, 0, 0, 0, 0, 0, 0);
      uint64_t v18 = v21;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v9 = 3758097085;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_aks_verify_password", ":", 1807, "", 0, "", "");
    uint64_t v18 = 0;
  }
  free(v18);
  return v9;
}

uint64_t aks_verify_password(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return _aks_verify_password(a1, a2, a3, a4, a5, 0);
}

char *aks_copy_packed_data(_DWORD *a1, const void *a2, int a3)
{
  io_service_t v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    int v5 = -a3;
    size_t v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      int __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *aks_pack_data(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = &a9;
  unsigned int v12 = 4;
  if (a3)
  {
    int v13 = a3;
    do
    {
      uint64_t v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  uint64_t result = (char *)calloc(1uLL, v12);
  mach_port_t v16 = result;
  uint64_t v22 = (const void **)&a9;
  int v17 = 0;
  if (a3)
  {
    uint64_t v18 = 4;
    do
    {
      uint64_t v19 = v22;
      int v20 = *v22;
      v22 += 2;
      uint64_t result = aks_copy_packed_data(&v16[v18], v20, *((_DWORD *)v19 + 2));
      uint64_t v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)mach_port_t v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

uint64_t acm_explicit_bzero(void *a1, rsize_t __n)
{
  return memset_s(a1, __n, 0, __n);
}

uint64_t acm_get_mem()
{
  return _allocatedMem_0;
}

void *acm_mem_alloc_data(size_t size)
{
  uint64_t result = malloc_type_calloc(1uLL, size, 0xCB62F0E9uLL);
  if (result) {
    _allocatedMem_2 += size;
  }
  return result;
}

void acm_mem_free_data(void *a1, rsize_t __n)
{
  if (a1)
  {
    memset_s(a1, __n, 0, __n);
    free(a1);
    uint64_t v4 = _allocatedMem_2 - __n;
    if (_allocatedMem_2 < __n) {
      uint64_t v4 = 0;
    }
    _allocatedMem_2 = v4;
  }
}

void *acm_mem_alloc(size_t size)
{
  uint64_t result = malloc_type_calloc(1uLL, size, 0xDB9956F0uLL);
  if (result) {
    _allocatedMem_3 += size;
  }
  return result;
}

void acm_mem_free(void *a1, rsize_t __n)
{
  if (a1)
  {
    memset_s(a1, __n, 0, __n);
    free(a1);
    uint64_t v4 = _allocatedMem_3 - __n;
    if (_allocatedMem_3 < __n) {
      uint64_t v4 = 0;
    }
    _allocatedMem_3 = v4;
  }
}

const char *acm_mem_alloc_info(const char *result, const void *a2, uint64_t a3, const char *a4, int a5, const char *a6)
{
  if (a2) {
    _allocatedMem_0 += a3;
  }
  if (gACMLoggingLevel <= 0x1Eu)
  {
    size_t v6 = "NULL";
    if (result) {
      uint64_t v7 = result;
    }
    else {
      uint64_t v7 = "NULL";
    }
    if (a4) {
      uint64_t v8 = a4;
    }
    else {
      uint64_t v8 = "NULL";
    }
    if (a6) {
      size_t v6 = a6;
    }
    return (const char *)printf("%s: %s: mem: type=%s ptr=%p size=%u (total=%u raw=%u data=%u types=%u) %s:%d (%s).\n", "ACM", "acm_mem_alloc_info", v7, a2, a3, _allocatedMem_0, 0, _allocatedMem_2, _allocatedMem_3, v8, a5, v6);
  }
  return result;
}

const char *acm_mem_free_info(const char *result, const void *a2, unint64_t a3, const char *a4, int a5, const char *a6)
{
  if (a2)
  {
    uint64_t v6 = _allocatedMem_0 - a3;
    if (_allocatedMem_0 < a3) {
      uint64_t v6 = 0;
    }
    _allocatedMem_0 = v6;
  }
  if (gACMLoggingLevel <= 0x1Eu)
  {
    uint64_t v7 = "NULL";
    if (result) {
      uint64_t v8 = result;
    }
    else {
      uint64_t v8 = "NULL";
    }
    if (a4) {
      uint64_t v9 = a4;
    }
    else {
      uint64_t v9 = "NULL";
    }
    if (a6) {
      uint64_t v7 = a6;
    }
    return (const char *)printf("%s: %s: mem: type=%s ptr=%p size=%u (total=%u raw=%u data=%u types=%u) %s:%d (%s).\n", "ACM", "acm_mem_free_info", v8, a2, a3, _allocatedMem_0, 0, _allocatedMem_2, _allocatedMem_3, v9, a5, v7);
  }
  return result;
}

uint64_t GetSerializedVerifyPolicySize(uint64_t a1, char *__s1, uint64_t a3, uint64_t a4, _DWORD *a5, unsigned int a6, void *a7)
{
  unsigned int v14 = 0;
  uint64_t result = 4294967293;
  if (a1 && __s1 && a7)
  {
    size_t v12 = strnlen(__s1, 0x81uLL);
    if (v12 > 0x80)
    {
      return 4294967293;
    }
    else
    {
      size_t v13 = v12;
      uint64_t result = getLengthOfParameters(a5, a6, &v14);
      if (!result) {
        *a7 = v13 + v14 + 26;
      }
    }
  }
  return result;
}

uint64_t getLengthOfParameters(_DWORD *a1, unsigned int a2, _DWORD *a3)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "getLengthOfParameters");
  }
  if (a3)
  {
    *a3 = 0;
    int v6 = 0;
    if (a2)
    {
      uint64_t v7 = a2;
      while (1)
      {
        uint64_t v8 = checkParameter(a1);
        if (v8) {
          break;
        }
        int v9 = v6 + 8;
        int v10 = a1[4];
        v6 += v10 + 8;
        if (__CFADD__(v10, v9)) {
          goto LABEL_10;
        }
        a1 += 6;
        if (!--v7) {
          goto LABEL_9;
        }
      }
      uint64_t v11 = v8;
      unsigned int v12 = 70;
    }
    else
    {
LABEL_9:
      uint64_t v11 = 0;
      *a3 = v6;
      unsigned int v12 = 10;
    }
  }
  else
  {
LABEL_10:
    unsigned int v12 = 70;
    uint64_t v11 = 4294967293;
  }
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "getLengthOfParameters", (int)v11);
  }
  return v11;
}

uint64_t SerializeVerifyPolicy(_OWORD *a1, char *__s1, char a3, uint64_t a4, _DWORD *a5, unsigned int a6, _OWORD *a7, size_t *a8)
{
  unint64_t v21 = 0;
  uint64_t result = 4294967293;
  if (a1)
  {
    if (__s1)
    {
      if (a8)
      {
        if (a7)
        {
          if (a6 <= 0xA && (a5 != 0) == (a6 != 0))
          {
            int v15 = a4;
            uint64_t result = GetSerializedVerifyPolicySize((uint64_t)a1, __s1, 0, a4, a5, a6, &v21);
            if (!result)
            {
              if (*a8 < v21) {
                return 4294967293;
              }
              *a7 = *a1;
              size_t v17 = strnlen(__s1, 0x81uLL);
              if (v17 > 0x80)
              {
                return 4294967293;
              }
              else
              {
                size_t v18 = v17;
                memcpy(a7 + 1, __s1, v17 + 1);
                uint64_t v19 = (char *)a7 + v18;
                v19[17] = a3;
                *(_DWORD *)(v19 + 18) = v15;
                size_t v20 = v18 + 22;
                uint64_t result = serializeParameters((uint64_t)a5, a6, (uint64_t)a7, (uint64_t *)&v20);
                if (!result) {
                  *a8 = v20;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t serializeParameters(uint64_t a1, int a2, uint64_t a3, uint64_t *a4)
{
  LODWORD(v6) = a2;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "serializeParameters");
  }
  unsigned int v8 = 70;
  uint64_t v9 = 4294967293;
  if (a3 && a4)
  {
    uint64_t v10 = *a4;
    *(_DWORD *)(a3 + v10) = v6;
    uint64_t v11 = v10 + 4;
    if (v6)
    {
      uint64_t v6 = v6;
      while (1)
      {
        *(_OWORD *)__src = *(_OWORD *)a1;
        size_t __n = *(void *)(a1 + 16);
        uint64_t v12 = checkParameter(__src);
        if (v12) {
          break;
        }
        size_t v13 = (_DWORD *)(a3 + v11);
        size_t v14 = __n;
        _DWORD *v13 = __src[0];
        v13[1] = v14;
        v11 += 8;
        if (v14)
        {
          memcpy((void *)(a3 + v11), __src[1], v14);
          v11 += v14;
        }
        a1 += 24;
        if (!--v6) {
          goto LABEL_11;
        }
      }
      uint64_t v9 = v12;
      unsigned int v8 = 70;
    }
    else
    {
LABEL_11:
      uint64_t v9 = 0;
      *a4 = v11;
      unsigned int v8 = 10;
    }
  }
  if (v8 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "serializeParameters", (int)v9);
  }
  return v9;
}

uint64_t DeserializeVerifyPolicy(uint64_t a1, unint64_t a2, _OWORD *a3, void *a4, BOOL *a5, _DWORD *a6, void *a7, _DWORD *a8)
{
  uint64_t v28 = 0;
  unsigned int v27 = 0;
  uint64_t v8 = 4294967293;
  unint64_t v9 = a2 - 16;
  if (a2 >= 0x10 && a1 && a3 && a4 && a5 && a6 && a7 && a8)
  {
    *a3 = *(_OWORD *)a1;
    unint64_t v17 = strnlen((const char *)(a1 + 16), a2 - 16);
    if (v17 > 0x80 || v9 <= v17) {
      return 4294967293;
    }
    uint64_t v26 = a4;
    unint64_t v18 = v17 + 1;
    uint64_t v19 = acm_mem_alloc_data(v17 + 1);
    acm_mem_alloc_info("<data>", v19, v17 + 1, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 349, "DeserializeVerifyPolicy");
    if (!v19) {
      return 4294967292;
    }
    memcpy(v19, (const void *)(a1 + 16), v17 + 1);
    unint64_t v29 = v17 + 17;
    if (v17 + 17 == a2 || (size_t v20 = a5, v21 = *(unsigned char *)(a1 + v17 + 17) != 0, v29 = v17 + 18, a2 - (v17 + 18) < 4))
    {
      uint64_t v8 = 4294967293;
    }
    else
    {
      unint64_t v25 = v17 + 1;
      uint64_t v22 = a8;
      int v23 = *(_DWORD *)(a1 + v17 + 18);
      unint64_t v29 = v17 + 22;
      uint64_t v8 = deserializeParameters(a1, a2, &v29, &v28, &v27);
      if (!v8)
      {
        *uint64_t v26 = v19;
        *size_t v20 = v21;
        *a6 = v23;
        *a7 = v28;
        _DWORD *v22 = v27;
        return v8;
      }
      unint64_t v18 = v25;
    }
    acm_mem_free_info("<data>", v19, v18, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 378, "DeserializeVerifyPolicy");
    acm_mem_free_data(v19, v18);
    if (v28) {
      Util_SafeDeallocParameters(v28, v27);
    }
  }
  return v8;
}

uint64_t deserializeParameters(uint64_t a1, unint64_t a2, unint64_t *a3, void *a4, _DWORD *a5)
{
  uint64_t v10 = off_266000;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "deserializeParameters");
  }
  unsigned int v11 = 70;
  uint64_t v12 = 4294967293;
  if (!a1 || !a3 || !a4 || !a5) {
    goto LABEL_25;
  }
  unint64_t v13 = *a3;
  if (a2 <= *a3)
  {
    LODWORD(v14) = 0;
LABEL_23:
    mach_port_t v16 = 0;
LABEL_24:
    uint64_t v12 = 0;
    *a4 = v16;
    *a5 = v14;
    unsigned int v11 = 10;
    *a3 = v13;
    goto LABEL_25;
  }
  if (a2 - *a3 < 4 || (uint64_t v14 = *(unsigned int *)(a1 + v13), v14 > 0xA))
  {
    unsigned int v11 = 70;
    uint64_t v12 = 4294967293;
    goto LABEL_25;
  }
  v13 += 4;
  if (!v14) {
    goto LABEL_23;
  }
  int v27 = v14;
  uint64_t v15 = 24 * v14;
  mach_port_t v16 = (char *)acm_mem_alloc(24 * v14);
  acm_mem_alloc_info("array of ACMParameter", v16, v15, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 194, "deserializeParameters");
  if (!v16)
  {
    unsigned int v11 = 70;
    uint64_t v12 = 4294967292;
    goto LABEL_25;
  }
  uint64_t v24 = a4;
  unint64_t v25 = a5;
  uint64_t v26 = a3;
  uint64_t v17 = 0;
  while (1)
  {
    unint64_t v18 = &v16[v17];
    *(void *)&v16[v17 + 8] = 0;
    if (a2 - v13 < 8
      || (*(_DWORD *)unint64_t v18 = *(_DWORD *)(a1 + v13), a2 - (v13 + 4) < 4)
      || (uint64_t v19 = &v16[v17],
          size_t v20 = *(unsigned int *)(a1 + v13 + 4),
          *(_DWORD *)&v16[v17 + 16] = v20,
          v13 += 8,
          a2 - v13 < v20))
    {
      unsigned int v11 = 70;
      uint64_t v12 = 4294967293;
      goto LABEL_31;
    }
    uint64_t v21 = checkParameter(&v16[v17]);
    if (v21)
    {
      uint64_t v12 = v21;
      unsigned int v11 = 70;
      goto LABEL_31;
    }
    if (v20) {
      break;
    }
LABEL_20:
    v17 += 24;
    if (v15 == v17)
    {
      uint64_t v10 = off_266000;
      a5 = v25;
      a3 = v26;
      a4 = v24;
      LODWORD(v14) = v27;
      goto LABEL_24;
    }
  }
  uint64_t v22 = acm_mem_alloc_data(v20);
  acm_mem_alloc_info("<data>", v22, v20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 212, "deserializeParameters");
  *((void *)v18 + 1) = v22;
  if (v22)
  {
    memcpy(v22, (const void *)(a1 + v13), *((unsigned int *)v19 + 4));
    v13 += *((unsigned int *)v19 + 4);
    goto LABEL_20;
  }
  unsigned int v11 = 70;
  uint64_t v12 = 4294967292;
LABEL_31:
  uint64_t v10 = off_266000;
LABEL_25:
  if (v11 >= *((unsigned __int8 *)v10 + 1808)) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "deserializeParameters", (int)v12);
  }
  return v12;
}

uint64_t GetSerializedVerifyAclConstraintSize(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, _DWORD *a9, unsigned int a10, void *a11)
{
  unsigned int v18 = 0;
  uint64_t result = 4294967293;
  if (a3)
  {
    if (a11)
    {
      if (a10 <= 0xA && (a9 != 0) == (a10 != 0))
      {
        uint64_t result = getLengthOfParameters(a9, a10, &v18);
        if (!result)
        {
          uint64_t v15 = 29;
          if (a1 == 32) {
            uint64_t v15 = 33;
          }
          uint64_t v16 = v15 + a4;
          if (a1 == 32) {
            uint64_t v17 = a6;
          }
          else {
            uint64_t v17 = 0;
          }
          *a11 = v16 + v17 + v18;
        }
      }
    }
  }
  return result;
}

uint64_t SerializeVerifyAclConstraint(int a1, _OWORD *a2, const void *a3, unsigned int a4, const void *a5, unsigned int a6, char a7, int a8, _DWORD *a9, unsigned int a10, uint64_t a11, void *a12)
{
  if (!a3) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  if (a12) {
    BOOL v14 = a11 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14 && a10 <= 0xA && (a9 != 0) == (a10 != 0))
  {
    unsigned int v31 = 0;
    uint64_t result = getLengthOfParameters(a9, a10, &v31);
    if (!result)
    {
      uint64_t v21 = 29;
      if (a1 == 32) {
        uint64_t v21 = 33;
      }
      uint64_t v22 = v21 + a4;
      if (a1 == 32) {
        uint64_t v23 = a6;
      }
      else {
        uint64_t v23 = 0;
      }
      if (*a12 < v22 + v23 + (unint64_t)v31)
      {
        return 4294967293;
      }
      else
      {
        int v28 = a8;
        if (a2)
        {
          *(_OWORD *)a11 = *a2;
        }
        else
        {
          *(void *)a11 = 0;
          *(void *)(a11 + 8) = 0;
        }
        *(_DWORD *)(a11 + 16) = a4;
        memcpy((void *)(a11 + 20), a3, a4);
        uint64_t v24 = a4 + 20;
        if (a1 == 32)
        {
          *(_DWORD *)(a11 + v24) = a6;
          uint64_t v25 = a4 + 24;
          memcpy((void *)(a11 + v25), a5, a6);
          uint64_t v24 = v25 + a6;
        }
        uint64_t v26 = a11 + v24;
        *(unsigned char *)uint64_t v26 = a7;
        *(_DWORD *)(v26 + 1) = v28;
        uint64_t v30 = v24 + 5;
        uint64_t result = serializeParameters((uint64_t)a9, a10, a11, &v30);
        if (!result) {
          *a12 = v30;
        }
      }
    }
  }
  return result;
}

uint64_t DeserializeVerifyAclConstraint(int a1, uint64_t a2, unsigned int a3, _OWORD *a4, void *a5, _DWORD *a6, size_t *a7, _DWORD *a8, BOOL *a9, _DWORD *a10, void *a11, _DWORD *a12)
{
  uint64_t v33 = 0;
  unint64_t v34 = 0;
  unsigned int v32 = 0;
  uint64_t v12 = 4294967293;
  if (a2 && a4 && a5 && a6 && a9 && a10 && a11 && a12 && a3 >= 0x10)
  {
    unint64_t v16 = a3;
    *a4 = *(_OWORD *)a2;
    unint64_t v34 = 16;
    if ((a3 & 0xFFFFFFFC) == 0x10)
    {
      uint64_t v12 = 4294967293;
    }
    else
    {
      unint64_t v20 = *(unsigned int *)(a2 + 16);
      unint64_t v34 = 20;
      uint64_t v21 = acm_mem_alloc_data(v20);
      acm_mem_alloc_info("<data>", v21, v20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 532, "DeserializeVerifyAclConstraint");
      if (v21)
      {
        if (v16 - 20 < v20) {
          goto LABEL_24;
        }
        memcpy(v21, (const void *)(a2 + 20), v20);
        unint64_t v22 = v20 + 20;
        unint64_t v34 = v20 + 20;
        unsigned int v31 = a5;
        if (a1 != 32)
        {
          uint64_t v25 = 0;
          LODWORD(v23) = 0;
          goto LABEL_19;
        }
        if (v16 - v22 < 4)
        {
LABEL_24:
          uint64_t v25 = 0;
          LODWORD(v23) = 0;
        }
        else
        {
          size_t v23 = *(unsigned int *)(a2 + v22);
          unint64_t v24 = v20 + 24;
          unint64_t v34 = v20 + 24;
          uint64_t v25 = acm_mem_alloc_data(v23);
          acm_mem_alloc_info("<data>", v25, v23, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 544, "DeserializeVerifyAclConstraint");
          if (!v25)
          {
            uint64_t v12 = 4294967292;
LABEL_26:
            acm_mem_free_info("<data>", v21, v20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 580, "DeserializeVerifyAclConstraint");
            acm_mem_free_data(v21, v20);
            if (v25)
            {
              acm_mem_free_info("<data>", v25, v23, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 583, "DeserializeVerifyAclConstraint");
              acm_mem_free_data(v25, v23);
            }
            goto LABEL_30;
          }
          if (v16 - v24 >= v23)
          {
            memcpy(v25, (const void *)(a2 + v24), v23);
            unint64_t v22 = v24 + v23;
            unint64_t v34 = v24 + v23;
LABEL_19:
            if (v22 != v16)
            {
              BOOL v26 = *(unsigned char *)(a2 + v22) != 0;
              unint64_t v34 = v22 + 1;
              if (v16 - (v22 + 1) >= 4)
              {
                unint64_t v30 = v20;
                int v27 = v23;
                size_t v23 = (size_t)v25;
                int v28 = *(_DWORD *)(a2 + v22 + 1);
                unint64_t v34 = v22 + 5;
                uint64_t v12 = deserializeParameters(a2, v16, &v34, &v33, &v32);
                if (!v12)
                {
                  void *v31 = v21;
                  *a7 = v23;
                  *a8 = v27;
                  *a6 = v30;
                  *a9 = v26;
                  *a10 = v28;
                  *a11 = v33;
                  *a12 = v32;
                  return v12;
                }
                uint64_t v25 = (void *)v23;
                LODWORD(v23) = v27;
                unint64_t v20 = v30;
                goto LABEL_26;
              }
            }
          }
        }
        uint64_t v12 = 4294967293;
        goto LABEL_26;
      }
      uint64_t v12 = 4294967292;
    }
  }
LABEL_30:
  if (v33) {
    Util_SafeDeallocParameters(v33, v32);
  }
  return v12;
}

uint64_t GetSerializedProcessAclSize(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, uint64_t a6, _DWORD *a7, unsigned int a8, void *a9)
{
  unsigned int v12 = 0;
  uint64_t result = 4294967293;
  if (a2 && a3 && a9 && a8 <= 0xA && (a7 != 0) == (a8 != 0))
  {
    uint64_t result = getLengthOfParameters(a7, a8, &v12);
    if (!result) {
      *a9 = a3 + (unint64_t)a5 + v12 + 36;
    }
  }
  return result;
}

uint64_t SerializeProcessAcl(_OWORD *a1, const void *a2, unsigned int a3, const void *a4, unsigned int a5, uint64_t a6, _DWORD *a7, unsigned int a8, uint64_t a9, unint64_t *a10)
{
  unint64_t v23 = 0;
  uint64_t result = 4294967293;
  if (a2 && a3)
  {
    BOOL v15 = !a10 || a9 == 0;
    if (!v15 && a8 <= 0xA && (a7 != 0) == (a8 != 0))
    {
      int v17 = a6;
      uint64_t result = GetSerializedProcessAclSize(4294967293, (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8, &v23);
      if (!result)
      {
        if (*a10 < v23)
        {
          return 4294967293;
        }
        else
        {
          if (a1)
          {
            *(_OWORD *)a9 = *a1;
          }
          else
          {
            *(void *)a9 = 0;
            *(void *)(a9 + 8) = 0;
          }
          *(_DWORD *)(a9 + 16) = a3;
          memcpy((void *)(a9 + 20), a2, a3);
          *(_DWORD *)(a9 + a3 + 20) = a5;
          uint64_t v21 = a3 + 24;
          if (a5)
          {
            memcpy((void *)(a9 + v21), a4, a5);
            v21 += a5;
          }
          *(_DWORD *)(a9 + v21) = v17;
          unint64_t v22 = v21 + 4;
          uint64_t result = serializeParameters((uint64_t)a7, a8, a9, (uint64_t *)&v22);
          if (!result) {
            *a10 = v22;
          }
        }
      }
    }
  }
  return result;
}

uint64_t DeserializeProcessAcl(uint64_t a1, unsigned int a2, _OWORD *a3, void *a4, _DWORD *a5, void *a6, unsigned int *a7, _DWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v39 = 0;
  unint64_t v40 = 0;
  unsigned int v38 = 0;
  uint64_t v10 = 4294967293;
  if (a1)
  {
    if (a3)
    {
      unsigned int v11 = a4;
      if (a4)
      {
        unsigned int v12 = a5;
        if (a5)
        {
          unint64_t v13 = a6;
          if (a6)
          {
            BOOL v14 = a7;
            if (a7)
            {
              BOOL v15 = a8;
              if (a8)
              {
                if (a9 && a10 && a2 >= 0x10)
                {
                  unint64_t v17 = a2;
                  *a3 = *(_OWORD *)a1;
                  unint64_t v40 = 16;
                  if ((a2 & 0xFFFFFFFC) == 0x10)
                  {
                    uint64_t v10 = 4294967293;
                  }
                  else
                  {
                    unint64_t v18 = *(unsigned int *)(a1 + 16);
                    unint64_t v40 = 20;
                    uint64_t v19 = acm_mem_alloc_data(v18);
                    acm_mem_alloc_info("<data>", v19, v18, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 722, "DeserializeProcessAcl");
                    if (v19)
                    {
                      if (v17 - 20 < v18
                        || (memcpy(v19, (const void *)(a1 + 20), v18), unint64_t v40 = v18 + 20, v17 - (v18 + 20) < 4))
                      {
                        unsigned int v32 = 0;
                        unsigned int v37 = 0;
                        uint64_t v10 = 4294967293;
                      }
                      else
                      {
                        size_t v20 = *(unsigned int *)(a1 + v18 + 20);
                        unint64_t v21 = v18 + 24;
                        unint64_t v40 = v18 + 24;
                        unsigned int v37 = v20;
                        if (!v20)
                        {
                          id v36 = 0;
                          goto LABEL_20;
                        }
                        uint64_t v33 = v12;
                        unint64_t v34 = v11;
                        unint64_t v22 = v13;
                        unint64_t v23 = v14;
                        unint64_t v24 = v15;
                        size_t v25 = v20;
                        BOOL v26 = acm_mem_alloc_data(v20);
                        acm_mem_alloc_info("<data>", v26, v25, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 734, "DeserializeProcessAcl");
                        if (v26)
                        {
                          int v27 = v26;
                          unsigned int v11 = v34;
                          if (v17 - v21 >= v25)
                          {
                            id v36 = v27;
                            memcpy(v27, (const void *)(a1 + v21), v25);
                            v21 += v25;
                            unint64_t v40 = v21;
                            BOOL v15 = v24;
                            BOOL v14 = v23;
                            unint64_t v13 = v22;
                            unsigned int v12 = v33;
LABEL_20:
                            if (v17 - v21 < 4)
                            {
                              uint64_t v10 = 4294967293;
                            }
                            else
                            {
                              unint64_t v35 = v18;
                              int v28 = v19;
                              unint64_t v29 = v15;
                              int v30 = *(_DWORD *)(a1 + v21);
                              unint64_t v40 = v21 + 4;
                              uint64_t v10 = deserializeParameters(a1, v17, &v40, &v39, &v38);
                              if (!v10)
                              {
                                *unsigned int v11 = v28;
                                _DWORD *v12 = v35;
                                void *v13 = v36;
                                unsigned int *v14 = v37;
                                _DWORD *v29 = v30;
                                *a9 = v39;
                                *a10 = v38;
                                return v10;
                              }
                              uint64_t v19 = v28;
                              unint64_t v18 = v35;
                            }
                            unsigned int v32 = v36;
                            goto LABEL_32;
                          }
                          uint64_t v10 = 4294967293;
                          unsigned int v32 = v27;
                        }
                        else
                        {
                          unsigned int v32 = 0;
                          uint64_t v10 = 4294967292;
                        }
                      }
LABEL_32:
                      acm_mem_free_info("<data>", v19, v18, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 763, "DeserializeProcessAcl");
                      acm_mem_free_data(v19, v18);
                      if (v32)
                      {
                        acm_mem_free_info("<data>", v32, v37, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 766, "DeserializeProcessAcl");
                        acm_mem_free_data(v32, v37);
                      }
                      goto LABEL_34;
                    }
                    uint64_t v10 = 4294967292;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_34:
  if (v39) {
    Util_SafeDeallocParameters(v39, v38);
  }
  return v10;
}

uint64_t GetSerializedRequirementSize(_DWORD *a1, uint64_t *a2)
{
  uint64_t v12 = 0;
  uint64_t result = 4294967293;
  if (!a1) {
    return result;
  }
  if (!a2) {
    return result;
  }
  int v5 = *a1;
  if (*a1 > 0x1Cu) {
    return result;
  }
  if (((1 << v5) & 0x1FFCFF4E) != 0)
  {
    uint64_t result = 0;
    *a2 = a1[3] + 16;
    return result;
  }
  if (((1 << v5) & 0x30) == 0)
  {
    if (v5 != 7) {
      return result;
    }
    *a2 = 24;
    uint64_t v9 = a1[5];
    if (v9)
    {
      uint64_t v10 = a1 + 6;
      uint64_t v11 = 24;
      do
      {
        uint64_t result = GetSerializedRequirementSize(*v10, &v12);
        if (result) {
          break;
        }
        v11 += v12;
        *a2 = v11;
        ++v10;
        --v9;
      }
      while (v9);
      return result;
    }
    return 0;
  }
  *a2 = 20;
  uint64_t v6 = a1[4];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = a1 + 5;
  uint64_t v8 = 20;
  while (1)
  {
    uint64_t result = GetSerializedRequirementSize(*v7, &v12);
    if (result) {
      break;
    }
    v8 += v12;
    *a2 = v8;
    ++v7;
    if (!--v6) {
      return 0;
    }
  }
  return result;
}

uint64_t SerializeRequirement(_DWORD *a1, _OWORD *a2, uint64_t *a3)
{
  unint64_t v12 = 0;
  uint64_t result = 4294967293;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        uint64_t result = GetSerializedRequirementSize(a1, (uint64_t *)&v12);
        if (!result)
        {
          if (v12 > *a3) {
            return 4294967293;
          }
          *a2 = *(_OWORD *)a1;
          int v7 = *a1;
          uint64_t result = 4294967293;
          if (*a1 <= 0x1Cu)
          {
            if (((1 << v7) & 0x1FFCFF4E) != 0)
            {
              memcpy(a2 + 1, a1 + 4, a1[3]);
              uint64_t v8 = a1[3] + 16;
LABEL_9:
              uint64_t result = 0;
              *a3 = v8;
              return result;
            }
            if (((1 << v7) & 0x30) != 0)
            {
              *((_DWORD *)a2 + 4) = a1[4];
              if (!a1[4])
              {
                uint64_t v8 = 20;
                goto LABEL_9;
              }
              uint64_t v9 = 0;
              uint64_t v8 = 20;
              while (1)
              {
                uint64_t v11 = *a3 - v8;
                uint64_t result = SerializeRequirement(*(void *)&a1[2 * v9 + 5], (char *)a2 + v8, &v11);
                if (result) {
                  break;
                }
                v8 += v11;
                if (++v9 >= (unint64_t)a1[4]) {
                  goto LABEL_9;
                }
              }
            }
            else if (v7 == 7)
            {
              *((void *)a2 + 2) = *((void *)a1 + 2);
              if (!a1[5])
              {
                uint64_t v8 = 24;
                goto LABEL_9;
              }
              uint64_t v10 = 0;
              uint64_t v8 = 24;
              while (1)
              {
                uint64_t v11 = *a3 - v8;
                uint64_t result = SerializeRequirement(*(void *)&a1[2 * v10 + 6], (char *)a2 + v8, &v11);
                if (result) {
                  break;
                }
                v8 += v11;
                if (++v10 >= (unint64_t)a1[5]) {
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t DeserializeRequirement(unsigned int *a1, unint64_t a2, void **a3, size_t *a4)
{
  __dst = 0;
  uint64_t v4 = 4294967293;
  if (a1)
  {
    if (a2 >= 0x10)
    {
      if (a3)
      {
        if (a4)
        {
          unsigned int v9 = *a1;
          if (v9 <= 0x1C)
          {
            if (((1 << v9) & 0x1FFCFF4E) != 0)
            {
              size_t v10 = a1[3] + 16;
              if (v10 > a2) {
                goto LABEL_36;
              }
              uint64_t v11 = Util_AllocRequirement(v9, 0, &__dst);
              if (!v11)
              {
                if (__dst)
                {
                  memcpy(__dst, a1, v10);
LABEL_11:
                  uint64_t v4 = 0;
                  *a4 = v10;
                  *a3 = __dst;
                  return v4;
                }
                return 4294967292;
              }
              goto LABEL_35;
            }
            if (((1 << v9) & 0x30) != 0)
            {
              uint64_t v13 = a1[4];
              if (8 * v13 + 20 > a2) {
                goto LABEL_36;
              }
              uint64_t v11 = Util_AllocRequirement(v9, v13, &__dst);
              if (v11) {
                goto LABEL_35;
              }
              BOOL v14 = __dst;
              if (!__dst) {
                return 4294967292;
              }
              if (*((_DWORD *)__dst + 3) == 84)
              {
                long long v15 = *(_OWORD *)a1;
                *((_DWORD *)__dst + 4) = a1[4];
                _OWORD *v14 = v15;
                *((_DWORD *)__dst + 3) = 84;
                if (!a1[4])
                {
                  size_t v10 = 20;
                  goto LABEL_11;
                }
                uint64_t v16 = 0;
                size_t v10 = 20;
                while (1)
                {
                  uint64_t v21 = 0;
                  uint64_t v22 = 0;
                  uint64_t v11 = DeserializeRequirement((char *)a1 + v10, a2 - v10, &v22, &v21);
                  if (v11) {
                    goto LABEL_35;
                  }
                  *(void *)((char *)__dst + 8 * v16 + 20) = v22;
                  v10 += v21;
                  if (++v16 >= (unint64_t)a1[4]) {
                    goto LABEL_11;
                  }
                }
              }
              goto LABEL_39;
            }
            if (v9 == 7)
            {
              uint64_t v17 = a1[5];
              if (8 * v17 + 24 <= a2)
              {
                uint64_t v11 = Util_AllocRequirement(7, v17, &__dst);
                if (!v11)
                {
                  unint64_t v18 = __dst;
                  if (!__dst) {
                    return 4294967292;
                  }
                  if (*((_DWORD *)__dst + 3) != 88)
                  {
LABEL_39:
                    uint64_t v4 = 4294967291;
                    goto LABEL_36;
                  }
                  long long v19 = *(_OWORD *)a1;
                  *((void *)__dst + 2) = *((void *)a1 + 2);
                  *unint64_t v18 = v19;
                  *((_DWORD *)__dst + 3) = 88;
                  if (!a1[5])
                  {
                    size_t v10 = 24;
                    goto LABEL_11;
                  }
                  uint64_t v20 = 0;
                  size_t v10 = 24;
                  while (1)
                  {
                    uint64_t v21 = 0;
                    uint64_t v22 = 0;
                    uint64_t v11 = DeserializeRequirement((char *)a1 + v10, a2 - v10, &v22, &v21);
                    if (v11) {
                      break;
                    }
                    *((void *)__dst + v20 + 3) = v22;
                    v10 += v21;
                    if (++v20 >= (unint64_t)a1[5]) {
                      goto LABEL_11;
                    }
                  }
                }
LABEL_35:
                uint64_t v4 = v11;
              }
            }
          }
        }
      }
    }
  }
LABEL_36:
  if (__dst) {
    Util_DeallocRequirement((int *)__dst);
  }
  return v4;
}

uint64_t GetSerializedCredentialSize(_DWORD *a1, void *a2)
{
  uint64_t result = 4294967293;
  if (a1 && a2 && *a1 <= 0x17u && ((1 << *a1) & 0xFFF7FE) != 0)
  {
    uint64_t result = 0;
    *a2 = a1[7] + 32;
  }
  return result;
}

uint64_t SerializeCredential(unsigned int *__src, void *__dst, size_t *a3)
{
  uint64_t result = 4294967293;
  if (__src && __dst && a3)
  {
    unsigned int v6 = *__src;
    if (*__src <= 0x17 && ((1 << *__src) & 0xFFF7FE) != 0)
    {
      size_t v8 = __src[7] + 32;
      if (v8 <= *a3 && v6 <= 0x17 && ((1 << v6) & 0xFFF7FE) != 0)
      {
        memcpy(__dst, __src, v8);
        uint64_t result = 0;
        *a3 = __src[7] + 32;
      }
    }
  }
  return result;
}

uint64_t DeserializeCredential(unsigned int *a1, unint64_t a2, void **a3, void *a4)
{
  __dst = 0;
  uint64_t v4 = 4294967293;
  if (a2 >= 0x20 && a1 && a3 && a4)
  {
    unsigned int v8 = *a1;
    uint64_t v10 = a1[7];
    switch(*a1)
    {
      case 1u:
        if (v10 == 28) {
          goto LABEL_7;
        }
        return v4;
      case 2u:
        if (v10 == 136) {
          goto LABEL_7;
        }
        return v4;
      case 3u:
        if (v10 == 305) {
          goto LABEL_7;
        }
        return v4;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x16u:
      case 0x17u:
        if (!v10) {
          goto LABEL_7;
        }
        return v4;
      case 7u:
        if (v10 == 56) {
          goto LABEL_7;
        }
        return v4;
      case 9u:
        if (v10 == 24) {
          goto LABEL_7;
        }
        return v4;
      case 0xAu:
        if (v10 == 52) {
          goto LABEL_7;
        }
        return v4;
      case 0xCu:
      case 0xFu:
        if (v10 == 8) {
          goto LABEL_7;
        }
        return v4;
      case 0xDu:
      case 0x15u:
        if (v10 == 132) {
          goto LABEL_7;
        }
        return v4;
      case 0x11u:
        if (v10 == 81) {
          goto LABEL_7;
        }
        return v4;
      case 0x12u:
        if (v10 == 20) {
          goto LABEL_7;
        }
        return v4;
      case 0x14u:
        if (v10 != 32) {
          return v4;
        }
LABEL_7:
        uint64_t v4 = Util_AllocCredential(*a1, &__dst);
        if (v4)
        {
          if (__dst)
          {
LABEL_16:
            Util_DeallocCredential(__dst);
            return v4;
          }
        }
        else
        {
          if (__dst)
          {
            if (*((_DWORD *)__dst + 1) > 3u || *((_DWORD *)__dst + 2) > 0x50u)
            {
              uint64_t v4 = 4294967293;
            }
            else
            {
              uint64_t v4 = 4294967293;
              if (v8 <= 0x17 && ((1 << v8) & 0xFFF7FE) != 0 && v10 + 32 <= a2)
              {
                memcpy(__dst, a1, v10 + 32);
                uint64_t v4 = 0;
                *a3 = __dst;
                *a4 = v10 + 32;
                return v4;
              }
            }
            goto LABEL_16;
          }
          uint64_t v4 = 4294967292;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t CopyCredential(uint64_t a1, void **a2)
{
  __dst = 0;
  uint64_t v2 = 4294967293;
  if (a1 && a2)
  {
    uint64_t v2 = Util_AllocCredential(*(_DWORD *)a1, &__dst);
    if (v2)
    {
      if (__dst) {
        Util_DeallocCredential(__dst);
      }
    }
    else if (__dst)
    {
      memcpy(__dst, (const void *)a1, *(unsigned int *)(a1 + 28) + 32);
      uint64_t v2 = 0;
      *a2 = __dst;
    }
    else
    {
      return 4294967292;
    }
  }
  return v2;
}

uint64_t CompareCredentials(void *__s1, void *__s2, unsigned char *a3)
{
  uint64_t v3 = 4294967293;
  if (__s1)
  {
    uint64_t v4 = __s2;
    if (__s2)
    {
      if (a3)
      {
        unsigned int v6 = __s1;
        if (*(_DWORD *)__s1 == *(_DWORD *)__s2)
        {
          uint64_t v7 = *((unsigned int *)__s1 + 7);
          if (v7 == *((_DWORD *)__s2 + 7))
          {
            uint64_t v3 = 4294967293;
            switch(*(_DWORD *)__s1)
            {
              case 1:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                uint64_t v13 = (char *)__s1 + 44;
                BOOL v14 = (char *)__s2 + 44;
                goto LABEL_74;
              case 2:
                if (*((_DWORD *)__s1 + 8) != *((_DWORD *)__s2 + 8)) {
                  break;
                }
                size_t v8 = *((unsigned int *)__s1 + 9);
                if (v8 != *((_DWORD *)__s2 + 9)) {
                  break;
                }
                __s2 += 5;
                __s1 += 5;
                goto LABEL_8;
              case 3:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                uint64_t v13 = (char *)(__s1 + 13);
                BOOL v14 = (char *)(__s2 + 13);
                goto LABEL_74;
              case 4:
              case 5:
              case 6:
              case 8:
              case 0xC:
              case 0xE:
              case 0xF:
              case 0x10:
              case 0x11:
              case 0x12:
              case 0x13:
              case 0x16:
              case 0x17:
                size_t v8 = v7 + 32;
                goto LABEL_8;
              case 7:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                BOOL isNullOrEqualMem2 = _isNullOrEqualMem2((unint64_t)(__s1 + 4), 0x20uLL, (unint64_t)(__s2 + 4), 32);
                if (!isNullOrEqualMem2) {
                  goto LABEL_100;
                }
                uint64_t v13 = (char *)(v6 + 8);
                BOOL v14 = (char *)(v4 + 8);
                size_t v21 = 24;
                uint64_t v22 = 24;
                goto LABEL_103;
              case 9:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                uint64_t v13 = (char *)(__s1 + 5);
                BOOL v14 = (char *)(__s2 + 5);
                goto LABEL_74;
              case 0xA:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                BOOL isNullOrEqualMem2 = _isNullOrEqualMem2((unint64_t)__s1 + 36, 0x10uLL, (unint64_t)__s2 + 36, 16);
                if (!isNullOrEqualMem2) {
                  goto LABEL_100;
                }
                uint64_t v13 = (char *)v6 + 52;
                BOOL v14 = (char *)v4 + 52;
LABEL_74:
                size_t v21 = 16;
                uint64_t v22 = 16;
                goto LABEL_103;
              case 0xD:
                size_t v8 = *((unsigned int *)__s1 + 8);
                if (v8 != *((_DWORD *)__s2 + 8)) {
                  break;
                }
                __s2 = (void *)((char *)__s2 + 36);
                __s1 = (void *)((char *)__s1 + 36);
LABEL_8:
                LOBYTE(isNullOrEqualMem2) = memcmp(__s1, __s2, v8) == 0;
                goto LABEL_100;
              case 0x14:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                BOOL v14 = (char *)(__s2 + 4);
                uint64_t v13 = (char *)(__s1 + 4);
                size_t v21 = 32;
                uint64_t v22 = 32;
                goto LABEL_103;
              case 0x15:
                if (*__s1 != *__s2 || __s1[1] != __s2[1] || __s1[2] != __s2[2] || __s1[3] != __s2[3]) {
                  break;
                }
                uint64_t v13 = (char *)__s1 + 36;
                BOOL v14 = (char *)__s2 + 36;
                size_t v21 = 128;
                uint64_t v22 = 128;
LABEL_103:
                LOBYTE(isNullOrEqualMem2) = _isNullOrEqualMem2((unint64_t)v13, v21, (unint64_t)v14, v22);
                goto LABEL_100;
              default:
                return v3;
            }
          }
        }
        LOBYTE(isNullOrEqualMem2) = 0;
LABEL_100:
        uint64_t v3 = 0;
        *a3 = isNullOrEqualMem2;
      }
    }
  }
  return v3;
}

BOOL _isNullOrEqualMem2(unint64_t __s1, size_t __n, unint64_t __s2, uint64_t a4)
{
  if (__n != a4) {
    return 0;
  }
  if (!(__s1 | __s2)) {
    return 1;
  }
  BOOL result = 0;
  BOOL v6 = __s1 == 0;
  if (__s2)
  {
    BOOL v7 = 1;
  }
  else
  {
    BOOL v6 = 0;
    BOOL v7 = __s1 == 0;
  }
  if (v7 && !v6) {
    return memcmp((const void *)__s1, (const void *)__s2, __n) == 0;
  }
  return result;
}

uint64_t GetSerializedAddCredentialSize(uint64_t a1, _DWORD *a2, int a3, void *a4)
{
  if (a1) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = a3 == 2;
  }
  char v5 = !v4;
  uint64_t result = 4294967293;
  if (a4 && a2 && (v5 & 1) == 0 && *a2 <= 0x17u && ((1 << *a2) & 0xFFF7FE) != 0)
  {
    uint64_t result = 0;
    *a4 = a2[7] + 52;
  }
  return result;
}

uint64_t SerializeAddCredential(_OWORD *a1, unsigned int *__src, int a3, uint64_t a4, void *a5)
{
  if (a1) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = a3 == 2;
  }
  char v7 = !v6;
  uint64_t result = 4294967293;
  if (a5)
  {
    if (a4)
    {
      if (__src)
      {
        if ((v7 & 1) == 0)
        {
          uint64_t result = 4294967293;
          if (*__src <= 0x17 && ((1 << *__src) & 0xFFF7FE) != 0 && *a5 >= (unint64_t)__src[7] + 52)
          {
            if (a1)
            {
              *(_OWORD *)a4 = *a1;
            }
            else
            {
              *(void *)a4 = 0;
              *(void *)(a4 + 8) = 0;
            }
            uint64_t v13 = *a5 - 16;
            uint64_t result = SerializeCredential(__src, (void *)(a4 + 16), (size_t *)&v13);
            if (!result)
            {
              size_t v12 = v13;
              *(_DWORD *)(v13 + a4 + 16) = a3;
              *a5 = v12 + 20;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t DeserializeAddCredential(uint64_t a1, unint64_t a2, _OWORD *a3, void *a4, _DWORD *a5)
{
  size_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v5 = 4294967293;
  if (a1 && a2 >= 0x34 && a3 && a4 && a5)
  {
    *a3 = *(_OWORD *)a1;
    uint64_t v10 = DeserializeCredential((unsigned int *)(a1 + 16), a2 - 16, (void **)&v12, &v13);
    if (v10)
    {
      uint64_t v5 = v10;
    }
    else if (a2 - (v13 + 16) >= 4)
    {
      uint64_t v5 = 0;
      *a5 = *(_DWORD *)(a1 + v13 + 16);
      *a4 = v12;
      return v5;
    }
  }
  if (v12) {
    Util_DeallocCredential(v12);
  }
  return v5;
}

uint64_t DeserializeAddCredentialType(uint64_t a1, unint64_t a2, _DWORD *a3)
{
  uint64_t result = 4294967293;
  if (a2 >= 0x34 && a1)
  {
    if (a3)
    {
      uint64_t result = 0;
      *a3 = *(_DWORD *)(a1 + 16);
    }
  }
  return result;
}

uint64_t GetSerializedRemoveCredentialSize(uint64_t a1, _DWORD *a2, int a3, void *a4)
{
  if (a1) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = a3 == 2;
  }
  char v5 = !v4;
  uint64_t result = 4294967293;
  if (a4 && a2 && (v5 & 1) == 0 && *a2 <= 0x17u && ((1 << *a2) & 0xFFF7FE) != 0)
  {
    uint64_t result = 0;
    *a4 = a2[7] + 52;
  }
  return result;
}

uint64_t GetSerializedReplacePassphraseCredentialSize(uint64_t a1, _DWORD *a2, int a3, void *a4)
{
  if (a1) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = a3 == 2;
  }
  char v5 = !v4;
  uint64_t result = 4294967293;
  if (a4 && a2 && (v5 & 1) == 0 && *a2 <= 0x17u && ((1 << *a2) & 0xFFF7FE) != 0)
  {
    uint64_t result = 0;
    *a4 = a2[7] + 52;
  }
  return result;
}

uint64_t SerializeCredentialList(unsigned int **a1, unsigned int a2, unsigned int *a3, void *a4)
{
  if (a2) {
    BOOL v6 = a1 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6 || a3 == 0 || a4 == 0) {
    return 4294967293;
  }
  v16[7] = v4;
  v16[8] = v5;
  *a3 = a2;
  if (a2)
  {
    uint64_t v11 = a1;
    uint64_t v12 = a2;
    uint64_t v13 = 4;
    while (1)
    {
      BOOL v14 = *v11;
      if (!*v11) {
        return 4294967293;
      }
      v16[0] = *a4 - v13;
      uint64_t result = SerializeCredential(v14, (char *)a3 + v13, v16);
      if (result) {
        return result;
      }
      v13 += v16[0];
      ++v11;
      if (!--v12) {
        goto LABEL_18;
      }
    }
  }
  else
  {
    uint64_t v13 = 4;
LABEL_18:
    uint64_t result = 0;
    *a4 = v13;
  }
  return result;
}

uint64_t DeserializeCredentialList(unsigned int *a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v15 = 0;
  uint64_t v4 = 4294967293;
  if (a1)
  {
    if (a3)
    {
      if (a4)
      {
        uint64_t v8 = *a1;
        if (v8 <= 0x3E8)
        {
          if (v8)
          {
            uint64_t v10 = (char *)acm_mem_alloc(8 * v8);
            acm_mem_alloc_info("array of ACMCredentialRef", v10, 8 * v8, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 1778, "DeserializeCredentialList");
            if (v10)
            {
              uint64_t v11 = 0;
              uint64_t v12 = 4;
              while (1)
              {
                uint64_t v13 = DeserializeCredential((unsigned int *)((char *)a1 + v12), a2 - v12, (void **)&v10[v11], &v15);
                if (v13) {
                  break;
                }
                v12 += v15;
                v11 += 8;
                if (8 * v8 == v11) {
                  goto LABEL_12;
                }
              }
              uint64_t v4 = v13;
              DeallocCredentialList((_DWORD **)v10, v8);
            }
            else
            {
              return 4294967292;
            }
          }
          else
          {
            uint64_t v10 = 0;
LABEL_12:
            uint64_t v4 = 0;
            *a4 = v8;
            *a3 = v10;
          }
        }
      }
    }
  }
  return v4;
}

void DeallocCredentialList(_DWORD **a1, unsigned int a2)
{
  if (a1)
  {
    uint64_t v3 = a2;
    if (a2)
    {
      uint64_t v4 = a1;
      uint64_t v5 = a2;
      do
      {
        if (*v4)
        {
          Util_DeallocCredential(*v4);
          *uint64_t v4 = 0;
        }
        ++v4;
        --v5;
      }
      while (v5);
    }
    unint64_t v6 = 8 * v3;
    acm_mem_free_info("array of ACMCredentialRef", a1, v6, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibSerialization.c", 1816, "DeallocCredentialList");
    acm_mem_free(a1, v6);
  }
}

uint64_t GetSerializedGetContextPropertySize(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a3 = 20;
  return result;
}

__n128 SerializeGetContextProperty(__n128 *a1, unsigned __int32 a2, __n128 *a3, void *a4)
{
  if (a1 && a3 && a4 && *a4 >= 0x14uLL)
  {
    __n128 result = *a1;
    *a3 = *a1;
    a3[1].n128_u32[0] = a2;
    *a4 = 20;
  }
  return result;
}

uint64_t DeserializeGetContextProperty(uint64_t a1, unint64_t a2, _OWORD *a3, _DWORD *a4)
{
  uint64_t result = 4294967293;
  if (a2 >= 0x10 && a1 && a3 && a4)
  {
    *a3 = *(_OWORD *)a1;
    if ((a2 & 0xFFFFFFFFFFFFFFFCLL) != 0x10)
    {
      uint64_t result = 0;
      *a4 = *(_DWORD *)(a1 + 16);
    }
  }
  return result;
}

uint64_t LibSer_GetAclAuthMethod_GetSize(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a2 = 16;
  return result;
}

__n128 LibSer_GetAclAuthMethod_Serialize(__n128 *a1, __n128 *a2, void *a3)
{
  if (a1 && a2 && a3 && *a3 >= 0x10uLL)
  {
    __n128 result = *a1;
    *a2 = *a1;
    *a3 = 16;
  }
  return result;
}

__n128 LibSer_GetAclAuthMethod_Deserialize(__n128 *a1, unint64_t a2, __n128 *a3)
{
  if (a2 >= 0x10 && a1)
  {
    if (a3)
    {
      __n128 result = *a1;
      *a3 = *a1;
    }
  }
  return result;
}

uint64_t LibSer_ContextCredentialGetProperty_GetSize(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (!a4) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a4 = 24;
  return result;
}

__n128 LibSer_ContextCredentialGetProperty_Serialize(__n128 *a1, unsigned __int32 a2, unsigned __int32 a3, __n128 *a4, void *a5)
{
  if (a1 && a4 && a5 && *a5 >= 0x18uLL)
  {
    __n128 result = *a1;
    *a4 = *a1;
    a4[1].n128_u32[0] = a2;
    a4[1].n128_u32[1] = a3;
    *a5 = 24;
  }
  return result;
}

__n128 LibSer_ContextCredentialGetProperty_Deserialize(__n128 *a1, unint64_t a2, __n128 *a3, _DWORD *a4, _DWORD *a5)
{
  if (a2 >= 0x18 && a1 && a3 && a4)
  {
    if (a5)
    {
      __n128 result = *a1;
      *a3 = *a1;
      *a4 = a1[1].n128_u32[0];
      *a5 = a1[1].n128_u32[1];
    }
  }
  return result;
}

uint64_t LibSer_GlobalContextCredentialGetProperty_GetSize(void *a1)
{
  if (!a1) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a1 = 8;
  return result;
}

uint64_t LibSer_GlobalContextCredentialGetProperty_Serialize(int a1, int a2, _DWORD *a3, void *a4)
{
  uint64_t result = 4294967293;
  if (a3 && a4 && *a4 >= 8uLL)
  {
    uint64_t result = 0;
    *a3 = a1;
    a3[1] = a2;
    *a4 = 8;
  }
  return result;
}

uint64_t LibSer_GlobalContextCredentialGetProperty_Deserialize(_DWORD *a1, unint64_t a2, _DWORD *a3, _DWORD *a4)
{
  uint64_t result = 4294967293;
  if (a2 >= 8 && a1 && a3)
  {
    if (a4)
    {
      uint64_t result = 0;
      *a3 = *a1;
      *a4 = a1[1];
    }
  }
  return result;
}

uint64_t LibSer_RemoveCredentialByType_GetSize(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (!a4) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a4 = 24;
  return result;
}

__n128 LibSer_RemoveCredentialByType_Serialize(__n128 *a1, unsigned __int32 a2, unsigned __int32 a3, __n128 *a4, void *a5)
{
  if (a1 && a4 && a5 && *a5 >= 0x18uLL)
  {
    __n128 result = *a1;
    *a4 = *a1;
    a4[1].n128_u32[0] = a2;
    a4[1].n128_u32[1] = a3;
    *a5 = 24;
  }
  return result;
}

__n128 LibSer_RemoveCredentialByType_Deserialize(__n128 *a1, unint64_t a2, __n128 *a3, _DWORD *a4, _DWORD *a5)
{
  if (a2 >= 0x18 && a1 && a3 && a4)
  {
    if (a5)
    {
      __n128 result = *a1;
      *a3 = *a1;
      *a4 = a1[1].n128_u32[0];
      *a5 = a1[1].n128_u32[1];
    }
  }
  return result;
}

uint64_t LibSer_DeleteContext_GetSize(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294967293;
  }
  uint64_t result = 0;
  *a2 = 16;
  return result;
}

__n128 LibSer_DeleteContext_Serialize(__n128 *a1, __n128 *a2, void *a3)
{
  if (a1 && a2 && a3 && *a3 >= 0x10uLL)
  {
    __n128 result = *a1;
    *a2 = *a1;
    *a3 = 16;
  }
  return result;
}

__n128 LibSer_DeleteContext_Deserialize(__n128 *a1, unint64_t a2, __n128 *a3)
{
  if (a2 >= 0x10 && a1)
  {
    if (a3)
    {
      __n128 result = *a1;
      *a3 = *a1;
    }
  }
  return result;
}

uint64_t LibSer_StorageAnyCmd_DeserializeCommonFields(uint64_t a1, unint64_t a2, _OWORD *a3, _DWORD *a4)
{
  uint64_t result = 4294967293;
  if (a1 && a2 >= 0x14)
  {
    if (a3) {
      *a3 = *(_OWORD *)a1;
    }
    uint64_t result = 0;
    if (a4) {
      *a4 = *(_DWORD *)(a1 + 16);
    }
  }
  return result;
}

uint64_t LibSer_StorageSetData_GetSize(uint64_t a1, _DWORD *a2, unsigned int a3, void *a4)
{
  unsigned int v7 = 0;
  if (!a4) {
    return 4294967291;
  }
  uint64_t result = getLengthOfParameters(a2, a3, &v7);
  if (!result) {
    *a4 = a1 + v7 + 28;
  }
  return result;
}

uint64_t LibSer_StorageSetData_Serialize(_OWORD *a1, int a2, const void *a3, size_t a4, _DWORD *a5, unsigned int a6, uint64_t a7, size_t *a8)
{
  uint64_t result = 4294967293;
  if (a1)
  {
    if (a2)
    {
      if (a7)
      {
        if (a8)
        {
          unsigned int v18 = 0;
          uint64_t result = getLengthOfParameters(a5, a6, &v18);
          if (!result)
          {
            if (*a8 < a4 + v18 + 28)
            {
              return 4294967293;
            }
            else
            {
              *(_OWORD *)a7 = *a1;
              *(_DWORD *)(a7 + 16) = a2;
              *(_DWORD *)(a7 + 20) = a4;
              memcpy((void *)(a7 + 24), a3, a4);
              size_t v17 = a4 + 24;
              uint64_t result = serializeParameters((uint64_t)a5, a6, a7, (uint64_t *)&v17);
              if (!result) {
                *a8 = v17;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t LibSer_StorageSetData_Deserialize(uint64_t a1, unint64_t a2, _OWORD *a3, _DWORD *a4, void *a5, void *a6, void *a7, _DWORD *a8)
{
  uint64_t v10 = 4294967293;
  if (a1 && a2 >= 0x18 && a6 && a3 && a4 && a5 && a7 && a8)
  {
    v14[1] = v8;
    v14[2] = v9;
    *a3 = *(_OWORD *)a1;
    *a4 = *(_DWORD *)(a1 + 16);
    uint64_t v11 = *(unsigned int *)(a1 + 20);
    v14[0] = 24;
    *a6 = v11;
    if (v11)
    {
      unint64_t v12 = v11 + 24;
      if (v12 > a2) {
        return 4294967293;
      }
      *a5 = a1 + 24;
      v14[0] = v12;
    }
    else
    {
      *a5 = 0;
    }
    return deserializeParameters(a1, a2, v14, a7, a8);
  }
  return v10;
}

uint64_t LibSer_StorageGetData_GetSize(_DWORD *a1, unsigned int a2, void *a3)
{
  unsigned int v5 = 0;
  if (!a3) {
    return 4294967291;
  }
  uint64_t result = getLengthOfParameters(a1, a2, &v5);
  if (!result) {
    *a3 = v5 + 25;
  }
  return result;
}

uint64_t LibSer_StorageGetData_Serialize(_OWORD *a1, int a2, char a3, _DWORD *a4, unsigned int a5, uint64_t a6, void *a7)
{
  uint64_t result = 4294967293;
  if (a1)
  {
    if (a2)
    {
      if (a6)
      {
        if (a7)
        {
          unsigned int v16 = 0;
          uint64_t result = getLengthOfParameters(a4, a5, &v16);
          if (!result)
          {
            if (*a7 < (unint64_t)v16 + 25)
            {
              return 4294967293;
            }
            else
            {
              *(_OWORD *)a6 = *a1;
              *(_DWORD *)(a6 + 16) = a2;
              *(unsigned char *)(a6 + 20) = a3;
              uint64_t v15 = 21;
              uint64_t result = serializeParameters((uint64_t)a4, a5, a6, &v15);
              if (!result) {
                *a7 = v15;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t LibSer_StorageGetData_Deserialize(uint64_t a1, unint64_t a2, _OWORD *a3, _DWORD *a4, BOOL *a5, void *a6, _DWORD *a7)
{
  uint64_t v9 = 4294967293;
  if (a1 && a2 >= 0x15 && a3 && a4 && a5)
  {
    v11[1] = v7;
    v11[2] = v8;
    *a3 = *(_OWORD *)a1;
    *a4 = *(_DWORD *)(a1 + 16);
    *a5 = *(unsigned char *)(a1 + 20) != 0;
    v11[0] = 21;
    return deserializeParameters(a1, a2, v11, a6, a7);
  }
  return v9;
}

uint64_t LibSer_GetUnlockSecret_GetSize(_DWORD *a1, unsigned int a2, void *a3)
{
  unsigned int v5 = 0;
  if (!a3) {
    return 4294967291;
  }
  uint64_t result = getLengthOfParameters(a1, a2, &v5);
  if (!result) {
    *a3 = v5 + 20;
  }
  return result;
}

uint64_t LibSer_GetUnlockSecret_Serialize(_OWORD *a1, _DWORD *a2, unsigned int a3, _OWORD *a4, void *a5)
{
  uint64_t result = 4294967293;
  if (a1)
  {
    if (a4)
    {
      if (a5)
      {
        unsigned int v12 = 0;
        uint64_t result = getLengthOfParameters(a2, a3, &v12);
        if (!result)
        {
          if (*a5 < (unint64_t)v12 + 20)
          {
            return 4294967293;
          }
          else
          {
            *a4 = *a1;
            uint64_t v11 = 16;
            uint64_t result = serializeParameters((uint64_t)a2, a3, (uint64_t)a4, &v11);
            if (!result) {
              *a5 = v11;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t LibSer_GetUnlockSecret_Deserialize(_OWORD *a1, unint64_t a2, _OWORD *a3, void *a4, _DWORD *a5)
{
  if (!a1) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  if (a2 >= 0x10 && a3 && a4)
  {
    if (a5)
    {
      v9[1] = v5;
      v9[2] = v6;
      *a3 = *a1;
      v9[0] = 16;
      return deserializeParameters((uint64_t)a1, a2, v9, a4, a5);
    }
  }
  return result;
}

uint64_t LibSer_GetUnlockSecretResponse_GetSize(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294967291;
  }
  uint64_t result = 0;
  *a2 = a1 + 1;
  return result;
}

uint64_t LibSer_GetUnlockSecretResponse_Serialize(void *__src, size_t __n, char a3, unsigned char *a4, void *a5)
{
  uint64_t result = 4294967293;
  if (__src && __n && a4 && a5)
  {
    size_t v9 = __n + 1;
    if (*a5 < __n + 1)
    {
      return 4294967293;
    }
    else
    {
      *a4 = a3;
      memcpy(a4 + 1, __src, __n);
      uint64_t result = 0;
      *a5 = v9;
    }
  }
  return result;
}

uint64_t LibSer_GetUnlockSecretResponse_Deserialize(unsigned char *a1, uint64_t a2, void *a3, void *a4, unsigned char *a5)
{
  uint64_t result = 4294967293;
  if (a2 && a5 && a1 && a3)
  {
    if (a4)
    {
      uint64_t result = 0;
      *a5 = *a1;
      *a3 = a1 + 1;
      *a4 = a2 - 1;
    }
  }
  return result;
}

uint64_t LibSer_SEPControl_GetSize(uint64_t a1, _DWORD *a2, unsigned int a3, void *a4)
{
  unsigned int v7 = 0;
  if (!a4) {
    return 4294967291;
  }
  uint64_t result = getLengthOfParameters(a2, a3, &v7);
  if (!result) {
    *a4 = a1 + v7 + 24;
  }
  return result;
}

uint64_t LibSer_SEPControl_Serialize(_OWORD *a1, _DWORD *a2, unsigned int a3, const void *a4, size_t a5, uint64_t a6, void *a7)
{
  uint64_t result = 4294967293;
  if (a6)
  {
    if (a7)
    {
      unsigned int v18 = 0;
      uint64_t result = getLengthOfParameters(a2, a3, &v18);
      if (!result)
      {
        if (*a7 < a5 + v18 + 24)
        {
          return 4294967293;
        }
        else
        {
          if (a1)
          {
            *(_OWORD *)a6 = *a1;
          }
          else
          {
            *(void *)a6 = 0;
            *(void *)(a6 + 8) = 0;
          }
          uint64_t v17 = 16;
          uint64_t result = serializeParameters((uint64_t)a2, a3, a6, &v17);
          if (!result)
          {
            uint64_t v15 = v17;
            *(_DWORD *)(a6 + v17) = a5;
            uint64_t v16 = v15 + 4;
            memcpy((void *)(a6 + v15 + 4), a4, a5);
            uint64_t result = 0;
            *a7 = v16 + a5;
          }
        }
      }
    }
  }
  return result;
}

uint64_t LibSer_SEPControl_Deserialize(_OWORD *a1, unint64_t a2, _OWORD *a3, void *a4, _DWORD *a5, unint64_t *a6, void *a7)
{
  if (!a1) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  if (a2 >= 0x18 && a7 && a3 && a4 && a5 && a6)
  {
    *a3 = *a1;
    unint64_t v12 = 16;
    uint64_t result = deserializeParameters((uint64_t)a1, a2, &v12, a4, a5);
    if (!result)
    {
      unint64_t v11 = (unint64_t)a1 + v12 + 4;
      *a7 = *(unsigned int *)((char *)a1 + v12);
      *a6 = v11;
    }
  }
  return result;
}

uint64_t LibSer_SEPControlResponse_GetSize(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294967291;
  }
  uint64_t result = 0;
  *a2 = a1 + 4;
  return result;
}

uint64_t LibSer_SEPControlResponse_Serialize(void *__src, size_t __n, _DWORD *a3, uint64_t *a4)
{
  uint64_t result = 4294967293;
  if (a3 && a4)
  {
    uint64_t v8 = __n + 4;
    if (*a4 < __n + 4)
    {
      return 4294967293;
    }
    else
    {
      *a3 = __n;
      if (__src) {
        memcpy(a3 + 1, __src, __n);
      }
      else {
        uint64_t v8 = 4;
      }
      uint64_t result = 0;
      *a4 = v8;
    }
  }
  return result;
}

uint64_t LibSer_SEPControlResponse_Deserialize(unsigned int *a1, unint64_t a2, void *a3, void *a4)
{
  if (!a1) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  if (a2 >= 4 && a3 && a4)
  {
    uint64_t result = 0;
    unsigned int v7 = *a1;
    unint64_t v6 = a1 + 1;
    *a4 = v7;
    if (!v7) {
      unint64_t v6 = 0;
    }
    *a3 = v6;
  }
  return result;
}

uint64_t checkParameter(_DWORD *a1)
{
  if (!a1) {
    return 4294967293;
  }
  switch(*a1)
  {
    case 0:
    case 0xC:
      if (a1[4]) {
        return 4294967293;
      }
      break;
    case 1:
    case 4:
    case 5:
    case 0xA:
      if (a1[4] != 4) {
        return 4294967293;
      }
      break;
    case 2:
    case 6:
    case 7:
      if (a1[4] != 16) {
        return 4294967293;
      }
      break;
    case 3:
      if ((a1[4] - 1001) < 0xFFFFFC18) {
        return 4294967293;
      }
      break;
    case 8:
    case 9:
      if (a1[4] != 1) {
        return 4294967293;
      }
      break;
    case 0xB:
      if (a1[4] > 0x400u) {
        return 4294967293;
      }
      break;
    default:
      return 4294967293;
  }
  return 0;
}

uint64_t LibCall_ACMKernelControl_Block(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v3 = v2;
  size_t v5 = v4;
  unsigned int v7 = v6;
  int v9 = v8;
  uint64_t v11 = v10;
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, uint64_t, uint64_t))v1;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMKernelControl_Block");
  }
  uint64_t v17 = 0x2000;
  uint64_t v13 = LibCall_ACMKernelControl(v12, v11, v9, v7, v5, (uint64_t)v18, (uint64_t)&v17);
  if (v3)
  {
    if (v17) {
      BOOL v14 = v18;
    }
    else {
      BOOL v14 = 0;
    }
    (*(void (**)(uint64_t, unsigned char *))(v3 + 16))(v3, v14);
  }
  if (v13) {
    unsigned int v15 = 70;
  }
  else {
    unsigned int v15 = 10;
  }
  if (v15 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMKernelControl_Block", (int)v13);
  }
  return v13;
}

uint64_t LibCall_ACMSEPControl_Block(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, unsigned int *, unint64_t *), uint64_t a2, const void *a3, size_t a4, uint64_t a5, _DWORD *a6, unsigned int a7, uint64_t a8)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSEPControl_Block");
  }
  size_t v20 = 1024;
  uint64_t v16 = LibCall_ACMSEPControl(a1, a2, a3, a4, a5, a6, a7, v21, &v20);
  if (a8)
  {
    if (v20) {
      uint64_t v17 = v21;
    }
    else {
      uint64_t v17 = 0;
    }
    (*(void (**)(uint64_t, unsigned char *))(a8 + 16))(a8, v17);
  }
  if (v16) {
    unsigned int v18 = 70;
  }
  else {
    unsigned int v18 = 10;
  }
  if (v18 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSEPControl_Block", (int)v16);
  }
  return v16;
}

uint64_t LibCall_ACMGlobalContextCredentialGetProperty_Block(uint64_t result, uint64_t a2, int a3, int a4, uint64_t a5)
{
  int v9 = (uint64_t (*)(uint64_t, uint64_t, void, int *, uint64_t, unsigned char *, uint64_t *))result;
  if (gACMLoggingLevel <= 0xAu) {
    uint64_t result = printf("%s: %s: called.\n", "ACM", "LibCall_ACMGlobalContextCredentialGetProperty_Block");
  }
  uint64_t v14 = 256;
  if (v9)
  {
    uint64_t v13 = 8;
    uint64_t result = LibSer_GlobalContextCredentialGetProperty_Serialize(a3, a4, &v15, &v13);
    if (result)
    {
LABEL_7:
      uint64_t v10 = result;
      goto LABEL_8;
    }
    if (v13 == 8)
    {
      uint64_t result = v9(a2, 27, 0, &v15, 8, v16, &v14);
      goto LABEL_7;
    }
    uint64_t v10 = 4294967291;
  }
  else
  {
    uint64_t v10 = 4294967293;
  }
LABEL_8:
  if (a5)
  {
    if (v14) {
      uint64_t v11 = v16;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(a5 + 16))(a5, v10, v11);
  }
  if (v10) {
    unsigned int v12 = 70;
  }
  else {
    unsigned int v12 = 10;
  }
  if (v12 >= gACMLoggingLevel) {
    return printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMGlobalContextCredentialGetProperty_Block", (int)v10);
  }
  return result;
}

uint64_t LibCall_ACMContextVerifyPolicy_Block(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, char *a4, uint64_t a5)
{
  return LibCall_ACMContextVerifyPolicyWithPreflight_Block(a1, a2, a3, a4, 0, a5);
}

uint64_t LibCall_ACMContextVerifyPolicyWithPreflight_Block(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, char *__s1, uint64_t a5, uint64_t a6)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextVerifyPolicyWithPreflight_Block");
  }
  uint64_t v17 = 0;
  BOOL v16 = 0;
  unsigned int v12 = 70;
  uint64_t v13 = 4294967293;
  if (a3 && __s1 && a6)
  {
    uint64_t v13 = LibCall_ACMContextVerifyPolicyEx(a1, a2, a3, __s1, a5, 0, 0, 0, &v16, &v17);
    uint64_t v14 = v17;
    if (!v13)
    {
      (*(void (**)(uint64_t, BOOL, int *))(a6 + 16))(a6, v16, v17);
      uint64_t v14 = v17;
    }
    if (v14) {
      Util_DeallocRequirement(v14);
    }
    if (v13) {
      unsigned int v12 = 70;
    }
    else {
      unsigned int v12 = 10;
    }
  }
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextVerifyPolicyWithPreflight_Block", (int)v13);
  }
  return v13;
}

int *LibCall_ACMContextVerifyPolicyEx_Block(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, char *__s1, uint64_t a5, _DWORD *a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextVerifyPolicyEx_Block");
  }
  BOOL v17 = 0;
  unsigned int v18 = 0;
  uint64_t v22 = 0;
  BOOL v21 = 0;
  uint64_t v19 = 4294967293;
  if (a3 && __s1 && a9)
  {
    uint64_t v19 = LibCall_ACMContextVerifyPolicyEx(a1, a2, a3, __s1, a5, a6, a7, a8, &v21, &v22);
    unsigned int v18 = v22;
    BOOL v17 = v21;
  }
  (*(void (**)(uint64_t, uint64_t, BOOL, int *))(a9 + 16))(a9, v19, v17, v18);
  uint64_t result = v22;
  if (v22) {
    uint64_t result = (int *)Util_DeallocRequirement(v22);
  }
  if (gACMLoggingLevel <= 0xAu) {
    return (int *)printf("%s: %s: returning.\n", "ACM", "LibCall_ACMContextVerifyPolicyEx_Block");
  }
  return result;
}

uint64_t LibCall_ACMGlobalContextVerifyPolicy_Block(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, char *a3, uint64_t a4, _DWORD *a5, unsigned int a6, uint64_t a7)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMGlobalContextVerifyPolicy_Block");
  }
  *(void *)int v15 = 0;
  uint64_t result = LibCall_ACMContextCreate((uint64_t (*)(uint64_t, uint64_t, void, void, void, unsigned char *, uint64_t *))a1, a2, v15, 0, 1);
  if (result)
  {
    if (a7) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(a7 + 16))(a7, result, 0, 0);
    }
  }
  else
  {
    uint64_t result = (uint64_t)LibCall_ACMContextVerifyPolicyEx_Block(a1, a2, *(_OWORD **)v15, a3, a4, a5, a6, 0xFFFFFFFFLL, a7);
  }
  if (*(void *)v15) {
    uint64_t result = LibCall_ACMContextDelete((void (*)(uint64_t, uint64_t, void, void *, uint64_t, void, void))a1, a2, *(void **)v15, 1);
  }
  if (gACMLoggingLevel <= 0xAu) {
    return printf("%s: %s: returning.\n", "ACM", "LibCall_ACMGlobalContextVerifyPolicy_Block");
  }
  return result;
}

uint64_t LibCall_ACMGetEnvironmentVariable_Block(uint64_t (*a1)(uint64_t, uint64_t, void, int *, uint64_t, uint64_t, uint64_t), uint64_t a2, int a3, uint64_t a4)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMGetEnvironmentVariable_Block");
  }
  uint64_t v14 = 128;
  if (!a4)
  {
    unsigned int v12 = 70;
    uint64_t v9 = 4294967293;
    goto LABEL_17;
  }
  if (a3 == 36)
  {
    int v8 = acm_mem_alloc_data(0x800uLL);
    acm_mem_alloc_info("<data>", v8, 2048, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCallBlock.c", 162, "LibCall_ACMGetEnvironmentVariable_Block");
    if (!v8)
    {
      unsigned int v12 = 70;
      uint64_t v9 = 4294967292;
      goto LABEL_17;
    }
    uint64_t v14 = 2048;
    uint64_t v9 = LibCall_ACMGetEnvironmentVariable(a1, a2, 36, (uint64_t)v8, (uint64_t)&v14);
    if (!v9)
    {
      if (v14) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 0;
      }
      (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v10);
      acm_mem_free_info("<data>", v8, 0x800uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCallBlock.c", 176, "LibCall_ACMGetEnvironmentVariable_Block");
      acm_mem_free_data(v8, 0x800uLL);
LABEL_16:
      unsigned int v12 = 10;
      goto LABEL_17;
    }
    acm_mem_free_info("<data>", v8, 0x800uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCallBlock.c", 176, "LibCall_ACMGetEnvironmentVariable_Block");
    acm_mem_free_data(v8, 0x800uLL);
  }
  else
  {
    uint64_t v9 = LibCall_ACMGetEnvironmentVariable(a1, a2, a3, (uint64_t)v15, (uint64_t)&v14);
    if (!v9)
    {
      if (v14) {
        uint64_t v11 = v15;
      }
      else {
        uint64_t v11 = 0;
      }
      (*(void (**)(uint64_t, unsigned char *))(a4 + 16))(a4, v11);
      goto LABEL_16;
    }
  }
  unsigned int v12 = 70;
LABEL_17:
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMGetEnvironmentVariable_Block", (int)v9);
  }
  return v9;
}

uint64_t LibCall_ACMTRMLoadState_Block(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))v1;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMTRMLoadState_Block");
  }
  uint64_t v11 = 0x2000;
  if (v3)
  {
    uint64_t v7 = LibCall_ACMTRMLoadState(v6, v5, (uint64_t)v12, (uint64_t)&v11);
    if (v7)
    {
      unsigned int v9 = 70;
    }
    else
    {
      if (v11) {
        int v8 = v12;
      }
      else {
        int v8 = 0;
      }
      (*(void (**)(uint64_t, unsigned char *))(v3 + 16))(v3, v8);
      unsigned int v9 = 10;
    }
  }
  else
  {
    unsigned int v9 = 70;
    uint64_t v7 = 4294967293;
  }
  if (v9 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMTRMLoadState_Block", (int)v7);
  }
  return v7;
}

uint64_t LibCall_ACMContextUnloadToImage_Block(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextUnloadToImage_Block");
  }
  if (v3)
  {
    uint64_t v5 = LibCall_ACMContextUnloadToImage(v4);
    if (v5)
    {
      unsigned int v6 = 70;
    }
    else
    {
      (*(void (**)(uint64_t, unsigned char *))(v3 + 16))(v3, v8);
      unsigned int v6 = 10;
    }
  }
  else
  {
    unsigned int v6 = 70;
    uint64_t v5 = 4294967293;
  }
  if (v6 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextUnloadToImage_Block", (int)v5);
  }
  return v5;
}

uint64_t LibCall_ACMGetAclAuthMethod_Block(uint64_t result, uint64_t a2, __n128 *a3, uint64_t a4)
{
  uint64_t v7 = (void (*)(uint64_t, uint64_t, void, __n128 *, uint64_t, unsigned char *, uint64_t *, __n128))result;
  if (gACMLoggingLevel <= 0xAu) {
    uint64_t result = printf("%s: %s: called.\n", "ACM", "LibCall_ACMGetAclAuthMethod_Block");
  }
  uint64_t v11 = 256;
  if (v7 && a3 && a4)
  {
    uint64_t v10 = 16;
    __n128 AclAuthMethod_Serialize = LibSer_GetAclAuthMethod_Serialize(a3, &v12, &v10);
    if (!v9 && v10 == 16) {
      v7(a2, 31, 0, &v12, 16, v13, &v11, AclAuthMethod_Serialize);
    }
    goto LABEL_9;
  }
  if (a4) {
LABEL_9:
  }
    uint64_t result = (*(uint64_t (**)(uint64_t))(a4 + 16))(a4);
  if (gACMLoggingLevel <= 0xAu) {
    return printf("%s: %s: returning.\n", "ACM", "LibCall_ACMGetAclAuthMethod_Block");
  }
  return result;
}

uint64_t LibCall_ACMContextVerifyAclConstraint(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, unsigned __int8 a6, _DWORD *a7, unsigned int a8, unsigned int a9, uint64_t a10)
{
  return verifyAclConstraintForOperationCommandInternal(a1, a2, 0xBu, a3, a4, a5, 0, 0, a6, a7, a8, a9, a10);
}

uint64_t verifyAclConstraintForOperationCommandInternal(uint64_t result, uint64_t a2, unsigned __int8 a3, _OWORD *a4, const void *a5, uint64_t a6, const void *a7, unsigned int a8, unsigned __int8 a9, _DWORD *a10, unsigned int a11, unsigned int a12, uint64_t a13)
{
  size_t v20 = (uint64_t (*)(uint64_t, uint64_t, void, void *, size_t, unsigned int *, unint64_t *))result;
  if (gACMLoggingLevel <= 0xAu) {
    uint64_t result = printf("%s: %s: called.\n", "ACM", "verifyAclConstraintForOperationCommandInternal");
  }
  size_t v25 = 0;
  BOOL v24 = 0;
  if (a4 && a5 && a6 && a13)
  {
    uint64_t v21 = verifyAclConstraintInternal(v20, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, &v24, &v25);
    uint64_t v22 = v25;
    BOOL v23 = v24;
  }
  else
  {
    if (!a13) {
      goto LABEL_10;
    }
    uint64_t v22 = 0;
    BOOL v23 = 0;
    uint64_t v21 = 4294967293;
  }
  (*(void (**)(uint64_t, uint64_t, BOOL, int *))(a13 + 16))(a13, v21, v23, v22);
  uint64_t result = (uint64_t)v25;
  if (v25) {
    uint64_t result = Util_DeallocRequirement(v25);
  }
LABEL_10:
  if (gACMLoggingLevel <= 0xAu) {
    return printf("%s: %s: returning.\n", "ACM", "verifyAclConstraintForOperationCommandInternal");
  }
  return result;
}

uint64_t LibCall_ACMContextVerifyAclConstraintForOperation(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, const void *a6, unsigned int a7, unsigned __int8 a8, _DWORD *a9, unsigned int a10, unsigned int a11, uint64_t a12)
{
  return verifyAclConstraintForOperationCommandInternal(a1, a2, 0x20u, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t Util_GetBitCount(uint64_t a1)
{
  uint8x8_t v1 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v1.i16[0] = vaddlv_u8(v1);
  return v1.u32[0];
}

char *Util_isNullOrZeroMemory(unsigned char *a1, uint64_t a2)
{
  if (!a1) {
    return (char *)&dword_0 + 1;
  }
  if (*a1) {
    return 0;
  }
  return (char *)(memcmp(a1, a1 + 1, a2 - 1) == 0);
}

BOOL Util_isNonNullEqualMemory(void *__s1, size_t __n, void *__s2, uint64_t a4)
{
  if (__n != a4) {
    return 0;
  }
  BOOL result = 0;
  if (__s1)
  {
    if (__s2) {
      return memcmp(__s1, __s2, __n) == 0;
    }
  }
  return result;
}

char *Util_hexDumpToStrHelper(char *result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!result && a2) {
    Util_hexDumpToStrHelper_cold_1();
  }
  if (!a3 && a4) {
    Util_hexDumpToStrHelper_cold_2();
  }
  if (a2 >= a4) {
    unint64_t v4 = a4;
  }
  else {
    unint64_t v4 = a2;
  }
  if (v4)
  {
    uint64_t v5 = (unsigned char *)(a3 + 1);
    do
    {
      *(v5 - 1) = a0123456789abcd[(unint64_t)*result >> 4];
      char v6 = *result++;
      *uint64_t v5 = a0123456789abcd[v6 & 0xF];
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t Util_WriteToBuffer(uint64_t a1, size_t a2, void *a3, void *__src, size_t __n)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_WriteToBuffer");
  }
  if (a3)
  {
    uint64_t v10 = *a3;
    size_t v11 = *a3 + __n;
    if (!__CFADD__(*a3, __n))
    {
      if (a1 && v11 > a2)
      {
        uint64_t v12 = 4294967276;
        goto LABEL_19;
      }
      if (!a1 || !__src || !__n) {
        goto LABEL_12;
      }
      if (!__CFADD__(a1, v10))
      {
        memcpy((void *)(a1 + v10), __src, __n);
LABEL_12:
        uint64_t v12 = 0;
        *a3 = v11;
        unsigned int v13 = 10;
        goto LABEL_13;
      }
    }
    uint64_t v12 = 4294967291;
  }
  else
  {
    uint64_t v12 = 4294967293;
  }
LABEL_19:
  unsigned int v13 = 70;
LABEL_13:
  if (v13 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "Util_WriteToBuffer", (int)v12);
  }
  return v12;
}

uint64_t Util_ReadFromBuffer(uint64_t a1, size_t a2, void *a3, void *__dst, size_t __n)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_ReadFromBuffer");
  }
  uint64_t v10 = 4294967293;
  unsigned int v11 = 70;
  if (a1 && a3)
  {
    uint64_t v12 = *a3;
    size_t v13 = *a3 + __n;
    if (!__CFADD__(*a3, __n))
    {
      if (v13 > a2)
      {
        uint64_t v10 = 4294967276;
        goto LABEL_17;
      }
      if (!__dst || !__n) {
        goto LABEL_11;
      }
      if (!__CFADD__(a1, v12))
      {
        memcpy(__dst, (const void *)(a1 + v12), __n);
LABEL_11:
        uint64_t v10 = 0;
        *a3 = v13;
        unsigned int v11 = 10;
        goto LABEL_12;
      }
    }
    uint64_t v10 = 4294967291;
LABEL_17:
    unsigned int v11 = 70;
  }
LABEL_12:
  if (v11 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "Util_ReadFromBuffer", (int)v10);
  }
  return v10;
}

unint64_t Util_KeybagLockStateToEnvVar(unsigned int a1)
{
  unint64_t v1 = 0x2010103020201uLL >> (8 * a1);
  if (a1 >= 7) {
    LOBYTE(v1) = 1;
  }
  return v1 & 3;
}

void Util_SafeDeallocParameters(unsigned int *a1, unsigned int a2)
{
  if (a1)
  {
    uint64_t v3 = a2;
    if (a2)
    {
      unint64_t v4 = a1 + 4;
      uint64_t v5 = a2;
      do
      {
        char v6 = (void *)*((void *)v4 - 1);
        if (v6)
        {
          unint64_t v7 = *v4;
          acm_mem_free_info("<data>", *((const void **)v4 - 1), v7, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 118, "Util_SafeDeallocParameters");
          acm_mem_free_data(v6, v7);
        }
        v4 += 6;
        --v5;
      }
      while (v5);
    }
    acm_mem_free_info("array of ACMParameter", a1, 24 * v3, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 121, "Util_SafeDeallocParameters");
    acm_mem_free(a1, 24 * v3);
  }
}

uint64_t Util_DeallocCredential(_DWORD *a1)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_DeallocCredential");
  }
  if (a1)
  {
    uint64_t v2 = 4294967293;
    unsigned int v3 = 70;
    switch(*a1)
    {
      case 1:
        unint64_t v4 = "ACMCredential - ACMCredentialDataPasscodeValidated";
        rsize_t v5 = 60;
        char v6 = a1;
        unint64_t v7 = 60;
        int v8 = 144;
        goto LABEL_6;
      case 2:
        unint64_t v4 = "ACMCredential - ACMCredentialDataPassphraseEntered";
        rsize_t v5 = 168;
        char v6 = a1;
        unint64_t v7 = 168;
        int v8 = 136;
        goto LABEL_6;
      case 3:
        unint64_t v4 = "ACMCredential - ACMCredentialDataBiometryMatched";
        rsize_t v5 = 337;
        char v6 = a1;
        unint64_t v7 = 337;
        int v8 = 140;
        goto LABEL_6;
      case 4:
      case 5:
      case 6:
      case 8:
      case 0xE:
      case 0x10:
      case 0x13:
      case 0x16:
      case 0x17:
        unint64_t v4 = "ACMCredential";
        rsize_t v5 = 32;
        char v6 = a1;
        unint64_t v7 = 32;
        int v8 = 189;
        goto LABEL_6;
      case 7:
        unint64_t v4 = "ACMCredential - ACMCredentialDataUserOutputDisplayed";
        rsize_t v5 = 88;
        char v6 = a1;
        unint64_t v7 = 88;
        int v8 = 152;
        goto LABEL_6;
      case 9:
        unint64_t v4 = "ACMCredential - ACMCredentialDataContinuityUnlock";
        rsize_t v5 = 56;
        char v6 = a1;
        unint64_t v7 = 56;
        int v8 = 156;
        goto LABEL_6;
      case 0xA:
        unint64_t v4 = "ACMCredential - ACMCredentialDataPasscodeValidated2";
        rsize_t v5 = 84;
        char v6 = a1;
        unint64_t v7 = 84;
        int v8 = 148;
        goto LABEL_6;
      case 0xC:
      case 0xF:
        unint64_t v4 = "ACMCredential - ACMCredentialDataKextDenyList";
        rsize_t v5 = 40;
        char v6 = a1;
        unint64_t v7 = 40;
        int v8 = 161;
        goto LABEL_6;
      case 0xD:
        unint64_t v4 = "ACMCredential - ACMCredentialDataPassphraseExtractable";
        rsize_t v5 = 164;
        char v6 = a1;
        unint64_t v7 = 164;
        int v8 = 132;
        goto LABEL_6;
      case 0x11:
        unint64_t v4 = "ACMCredential - ACMCredentialDataSecureIntent";
        rsize_t v5 = 113;
        char v6 = a1;
        unint64_t v7 = 113;
        int v8 = 165;
        goto LABEL_6;
      case 0x12:
        unint64_t v4 = "ACMCredential - ACMCredentialDataBiometryMatchAttempted";
        rsize_t v5 = 52;
        char v6 = a1;
        unint64_t v7 = 52;
        int v8 = 169;
        goto LABEL_6;
      case 0x14:
        unint64_t v4 = "ACMCredential - ACMCredentialDataAP";
        rsize_t v5 = 64;
        char v6 = a1;
        unint64_t v7 = 64;
        int v8 = 173;
        goto LABEL_6;
      case 0x15:
        unint64_t v4 = "ACMCredential - ACMCredentialDataSignature";
        rsize_t v5 = 164;
        char v6 = a1;
        unint64_t v7 = 164;
        int v8 = 177;
LABEL_6:
        acm_mem_free_info(v4, v6, v7, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", v8, "Util_DeallocCredential");
        acm_mem_free(a1, v5);
        uint64_t v2 = 0;
        unsigned int v3 = 10;
        break;
      default:
        break;
    }
  }
  else
  {
    uint64_t v2 = 4294967293;
    unsigned int v3 = 70;
  }
  if (v3 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "Util_DeallocCredential", (int)v2);
  }
  return v2;
}

uint64_t Util_AllocCredential(int a1, void *a2)
{
  if (!a2) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  switch(a1)
  {
    case 1:
      rsize_t v5 = acm_mem_alloc(0x3CuLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataPasscodeValidated", v5, 60, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 226, "Util_AllocCredential");
      int v6 = 28;
      goto LABEL_4;
    case 2:
      rsize_t v5 = acm_mem_alloc(0xA8uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataPassphraseEntered", v5, 168, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 216, "Util_AllocCredential");
      int v6 = 136;
      goto LABEL_4;
    case 3:
      rsize_t v5 = acm_mem_alloc(0x151uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataBiometryMatched", v5, 337, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 221, "Util_AllocCredential");
      int v6 = 305;
      goto LABEL_4;
    case 4:
    case 5:
    case 6:
    case 8:
    case 14:
    case 16:
    case 19:
    case 22:
    case 23:
      rsize_t v5 = acm_mem_alloc(0x20uLL);
      acm_mem_alloc_info("ACMCredential", v5, 32, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 280, "Util_AllocCredential");
      int v6 = 0;
      goto LABEL_4;
    case 7:
      rsize_t v5 = acm_mem_alloc(0x58uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataUserOutputDisplayed", v5, 88, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 236, "Util_AllocCredential");
      int v6 = 56;
      goto LABEL_4;
    case 9:
      rsize_t v5 = acm_mem_alloc(0x38uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataContinuityUnlock", v5, 56, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 241, "Util_AllocCredential");
      int v6 = 24;
      goto LABEL_4;
    case 10:
      rsize_t v5 = acm_mem_alloc(0x54uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataPasscodeValidated2", v5, 84, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 231, "Util_AllocCredential");
      int v6 = 52;
      goto LABEL_4;
    case 12:
    case 15:
      rsize_t v5 = acm_mem_alloc(0x28uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataKextDenyList", v5, 40, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 247, "Util_AllocCredential");
      int v6 = 8;
      goto LABEL_4;
    case 13:
      rsize_t v5 = acm_mem_alloc(0xA4uLL);
      unint64_t v7 = "ACMCredential - ACMCredentialDataPassphraseExtractable";
      int v8 = v5;
      int v9 = 211;
      goto LABEL_18;
    case 17:
      rsize_t v5 = acm_mem_alloc(0x71uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataSecureIntent", v5, 113, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 252, "Util_AllocCredential");
      int v6 = 81;
      goto LABEL_4;
    case 18:
      rsize_t v5 = acm_mem_alloc(0x34uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataBiometryMatchAttempted", v5, 52, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 257, "Util_AllocCredential");
      int v6 = 20;
      goto LABEL_4;
    case 20:
      rsize_t v5 = acm_mem_alloc(0x40uLL);
      acm_mem_alloc_info("ACMCredential - ACMCredentialDataAP", v5, 64, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 262, "Util_AllocCredential");
      int v6 = 32;
      goto LABEL_4;
    case 21:
      rsize_t v5 = acm_mem_alloc(0xA4uLL);
      unint64_t v7 = "ACMCredential - ACMCredentialDataSignature";
      int v8 = v5;
      int v9 = 267;
LABEL_18:
      acm_mem_alloc_info(v7, v8, 164, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", v9, "Util_AllocCredential");
      int v6 = 132;
LABEL_4:
      if (v5)
      {
        uint64_t result = 0;
        *rsize_t v5 = a1;
        v5[1] = 1;
        v5[7] = v6;
        v5[3] = -1;
        *a2 = v5;
      }
      else
      {
        uint64_t result = 4294967292;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Util_AllocRequirement(int a1, uint64_t a2, void *a3)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_AllocRequirement");
  }
  if (a3)
  {
    uint64_t v6 = 4294967293;
    unsigned int v7 = 70;
    switch(a1)
    {
      case 1:
        int v8 = acm_mem_alloc(0x14uLL);
        unsigned int v11 = "ACMRequirement - ACMRequirementDataPasscodeValidated";
        uint64_t v12 = v8;
        int v13 = 338;
        goto LABEL_49;
      case 2:
        int v8 = acm_mem_alloc(0x14uLL);
        unsigned int v11 = "ACMRequirement - ACMRequirementDataPassphraseEntered";
        uint64_t v12 = v8;
        int v13 = 343;
        goto LABEL_49;
      case 3:
        int v8 = acm_mem_alloc(0xACuLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataBiometryMatched", v8, 172, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 348, "Util_AllocRequirement");
        int v9 = 156;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 4:
        if ((unint64_t)(a2 - 11) < 0xFFFFFFFFFFFFFFF6) {
          goto LABEL_53;
        }
        int v8 = acm_mem_alloc(0x64uLL);
        uint64_t v14 = "ACMRequirement - ACMRequirementDataOr";
        int v15 = v8;
        int v16 = 406;
        goto LABEL_28;
      case 5:
        if ((unint64_t)(a2 - 11) < 0xFFFFFFFFFFFFFFF6) {
          goto LABEL_53;
        }
        int v8 = acm_mem_alloc(0x64uLL);
        uint64_t v14 = "ACMRequirement - ACMRequirementDataAnd";
        int v15 = v8;
        int v16 = 398;
LABEL_28:
        acm_mem_alloc_info(v14, v15, 100, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", v16, "Util_AllocRequirement");
        int v9 = 84;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 6:
      case 9:
      case 10:
      case 11:
      case 12:
      case 14:
      case 15:
      case 18:
      case 19:
      case 22:
      case 23:
      case 27:
      case 28:
        int v8 = acm_mem_alloc(0x10uLL);
        acm_mem_alloc_info("ACMRequirement", v8, 16, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 333, "Util_AllocRequirement");
        int v9 = 0;
        if (v8) {
          goto LABEL_6;
        }
        goto LABEL_50;
      case 7:
        if ((unint64_t)(a2 - 11) < 0xFFFFFFFFFFFFFFF6) {
          goto LABEL_53;
        }
        int v8 = acm_mem_alloc(0x68uLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataKofN", v8, 104, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 391, "Util_AllocRequirement");
        int v9 = 88;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 8:
        int v8 = acm_mem_alloc(0x410uLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataAccessGroups", v8, 1040, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 378, "Util_AllocRequirement");
        int v9 = 1024;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 13:
        int v8 = acm_mem_alloc(0x30uLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataUserOutputDisplayed", v8, 48, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 363, "Util_AllocRequirement");
        int v9 = 32;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 16:
      case 17:
        break;
      case 20:
        int v8 = acm_mem_alloc(0x14uLL);
        unsigned int v11 = "ACMRequirement - ACMRequirementDataSecureIntent";
        uint64_t v12 = v8;
        int v13 = 353;
        goto LABEL_49;
      case 21:
        int v8 = acm_mem_alloc(0x14uLL);
        unsigned int v11 = "ACMRequirement - ACMRequirementDataBiometryMatchAttempted";
        uint64_t v12 = v8;
        int v13 = 358;
LABEL_49:
        acm_mem_alloc_info(v11, v12, 20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", v13, "Util_AllocRequirement");
        int v9 = 4;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 24:
        int v8 = acm_mem_alloc(0x434uLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataAP", v8, 1076, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 368, "Util_AllocRequirement");
        int v9 = 1060;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 25:
        int v8 = acm_mem_alloc(0x3BuLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataKeyRef", v8, 59, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 373, "Util_AllocRequirement");
        int v9 = 43;
        if (!v8) {
          goto LABEL_50;
        }
        goto LABEL_6;
      case 26:
        int v8 = acm_mem_alloc(0x2CuLL);
        acm_mem_alloc_info("ACMRequirement - ACMRequirementDataRatchet", v8, 44, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 384, "Util_AllocRequirement");
        int v9 = 28;
        if (!v8)
        {
LABEL_50:
          uint64_t v6 = 4294967292;
          goto LABEL_54;
        }
LABEL_6:
        *int v8 = a1;
        *(void *)(v8 + 1) = 0x100000001;
        v8[3] = v9;
        if ((a1 & 0xFFFFFFFE) == 4)
        {
          v8[4] = a2;
        }
        else if (a1 == 1000)
        {
          v8[13] = a2;
        }
        else if (a1 == 7)
        {
          v8[5] = a2;
        }
        uint64_t v6 = 0;
        *a3 = v8;
        unsigned int v7 = 10;
        break;
      default:
        switch(a1)
        {
          case 1000:
            if ((unint64_t)(a2 - 11) < 0xFFFFFFFFFFFFFFF6) {
              goto LABEL_53;
            }
            int v8 = acm_mem_alloc(0x88uLL);
            acm_mem_alloc_info("ACMRequirement - ACMRequirementDataKofNWithAttributes", v8, 136, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 414, "Util_AllocRequirement");
            int v9 = 120;
            if (!v8) {
              goto LABEL_50;
            }
            goto LABEL_6;
          case 1001:
            int v8 = acm_mem_alloc(0xB8uLL);
            acm_mem_alloc_info("ACMRequirement - ACMRequirementDataBiometryMatchedWithAttributes", v8, 184, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 419, "Util_AllocRequirement");
            int v9 = 168;
            if (!v8) {
              goto LABEL_50;
            }
            goto LABEL_6;
          case 1002:
            int v8 = acm_mem_alloc(0x14uLL);
            unsigned int v11 = "ACMRequirement - ACMRequirementDataPushButtonWithAttributes";
            uint64_t v12 = v8;
            int v13 = 424;
            goto LABEL_49;
          case 1003:
            int v8 = acm_mem_alloc(0x14uLL);
            unsigned int v11 = "ACMRequirement - ACMRequirementDataSecureStateWithAttributes";
            uint64_t v12 = v8;
            int v13 = 429;
            goto LABEL_49;
          case 1004:
            int v8 = acm_mem_alloc(0x20uLL);
            acm_mem_alloc_info("ACMRequirement - ACMRequirementDataPasscodeValidatedWithAttributes", v8, 32, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", 434, "Util_AllocRequirement");
            int v9 = 16;
            if (!v8) {
              goto LABEL_50;
            }
            goto LABEL_6;
          default:
            goto LABEL_17;
        }
    }
  }
  else
  {
LABEL_53:
    uint64_t v6 = 4294967293;
LABEL_54:
    unsigned int v7 = 70;
  }
LABEL_17:
  if (v7 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "Util_AllocRequirement", (int)v6);
  }
  return v6;
}

uint64_t Util_CreateRequirement(int a1, uint64_t a2)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_CreateRequirement");
  }
  uint64_t v5 = 0;
  Util_AllocRequirement(a1, a2, &v5);
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: returning.\n", "ACM", "Util_CreateRequirement");
  }
  return v5;
}

uint64_t Util_DeallocRequirement(int *a1)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "Util_DeallocRequirement");
  }
  if (!a1)
  {
    uint64_t v7 = 4294967293;
    unsigned int v8 = 70;
    goto LABEL_28;
  }
  int v2 = *a1;
  if (*a1 > 6)
  {
    if (v2 == 7)
    {
      if (a1[5])
      {
        unint64_t v6 = 0;
        do
          Util_DeallocRequirement(*(void *)&a1[2 * v6++ + 6]);
        while (v6 < a1[5]);
      }
    }
    else
    {
      if (v2 != 1000) {
        goto LABEL_25;
      }
      if (a1[13])
      {
        unint64_t v4 = 0;
        do
          Util_DeallocRequirement(*(void *)&a1[2 * v4++ + 14]);
        while (v4 < a1[13]);
      }
    }
  }
  else if (v2 == 4)
  {
    if (a1[4])
    {
      unint64_t v5 = 0;
      do
        Util_DeallocRequirement(*(void *)&a1[2 * v5++ + 5]);
      while (v5 < a1[4]);
    }
  }
  else
  {
    if (v2 != 5) {
      goto LABEL_25;
    }
    if (a1[4])
    {
      unint64_t v3 = 0;
      do
        Util_DeallocRequirement(*(void *)&a1[2 * v3++ + 5]);
      while (v3 < a1[4]);
    }
  }
  int v2 = *a1;
LABEL_25:
  uint64_t v7 = 4294967293;
  unsigned int v8 = 70;
  switch(v2)
  {
    case 1:
      int v9 = "ACMRequirement - ACMRequirementDataPasscodeValidated";
      rsize_t v10 = 20;
      unsigned int v11 = a1;
      unint64_t v12 = 20;
      int v13 = 542;
      goto LABEL_27;
    case 2:
      int v9 = "ACMRequirement - ACMRequirementDataPassphraseEntered";
      rsize_t v10 = 20;
      unsigned int v11 = a1;
      unint64_t v12 = 20;
      int v13 = 546;
      goto LABEL_27;
    case 3:
      int v9 = "ACMRequirement - ACMRequirementDataBiometryMatched";
      rsize_t v10 = 172;
      unsigned int v11 = a1;
      unint64_t v12 = 172;
      int v13 = 550;
      goto LABEL_27;
    case 4:
      int v9 = "ACMRequirement - ACMRequirementDataOr";
      rsize_t v10 = 100;
      unsigned int v11 = a1;
      unint64_t v12 = 100;
      int v13 = 595;
      goto LABEL_27;
    case 5:
      int v9 = "ACMRequirement - ACMRequirementDataAnd";
      rsize_t v10 = 100;
      unsigned int v11 = a1;
      unint64_t v12 = 100;
      int v13 = 589;
      goto LABEL_27;
    case 6:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 18:
    case 19:
    case 22:
    case 23:
    case 27:
    case 28:
      int v9 = "ACMRequirement";
      rsize_t v10 = 16;
      unsigned int v11 = a1;
      unint64_t v12 = 16;
      int v13 = 538;
      goto LABEL_27;
    case 7:
      int v9 = "ACMRequirement - ACMRequirementDataKofN";
      rsize_t v10 = 104;
      unsigned int v11 = a1;
      unint64_t v12 = 104;
      int v13 = 584;
      goto LABEL_27;
    case 8:
      int v9 = "ACMRequirement - ACMRequirementDataAccessGroups";
      rsize_t v10 = 1040;
      unsigned int v11 = a1;
      unint64_t v12 = 1040;
      int v13 = 574;
      goto LABEL_27;
    case 13:
      int v9 = "ACMRequirement - ACMRequirementDataUserOutputDisplayed";
      rsize_t v10 = 48;
      unsigned int v11 = a1;
      unint64_t v12 = 48;
      int v13 = 562;
      goto LABEL_27;
    case 16:
    case 17:
      break;
    case 20:
      int v9 = "ACMRequirement - ACMRequirementDataSecureIntent";
      rsize_t v10 = 20;
      unsigned int v11 = a1;
      unint64_t v12 = 20;
      int v13 = 554;
      goto LABEL_27;
    case 21:
      int v9 = "ACMRequirement - ACMRequirementDataBiometryMatchAttempted";
      rsize_t v10 = 20;
      unsigned int v11 = a1;
      unint64_t v12 = 20;
      int v13 = 558;
      goto LABEL_27;
    case 24:
      int v9 = "ACMRequirement - ACMRequirementDataAP";
      rsize_t v10 = 1076;
      unsigned int v11 = a1;
      unint64_t v12 = 1076;
      int v13 = 566;
      goto LABEL_27;
    case 25:
      int v9 = "ACMRequirement - ACMRequirementDataKeyRef";
      rsize_t v10 = 59;
      unsigned int v11 = a1;
      unint64_t v12 = 59;
      int v13 = 570;
      goto LABEL_27;
    case 26:
      int v9 = "ACMRequirement - ACMRequirementDataRatchet";
      rsize_t v10 = 44;
      unsigned int v11 = a1;
      unint64_t v12 = 44;
      int v13 = 579;
LABEL_27:
      acm_mem_free_info(v9, v11, v12, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/CommonUtil.c", v13, "Util_DeallocRequirement");
      acm_mem_free(a1, v10);
      uint64_t v7 = 0;
      unsigned int v8 = 10;
      break;
    default:
      switch(v2)
      {
        case 1000:
          int v9 = "ACMRequirement - ACMRequirementDataKofNWithAttributes";
          rsize_t v10 = 136;
          unsigned int v11 = a1;
          unint64_t v12 = 136;
          int v13 = 601;
          goto LABEL_27;
        case 1001:
          int v9 = "ACMRequirement - ACMRequirementDataBiometryMatchedWithAttributes";
          rsize_t v10 = 184;
          unsigned int v11 = a1;
          unint64_t v12 = 184;
          int v13 = 605;
          goto LABEL_27;
        case 1002:
          int v9 = "ACMRequirement - ACMRequirementDataPushButtonWithAttributes";
          rsize_t v10 = 20;
          unsigned int v11 = a1;
          unint64_t v12 = 20;
          int v13 = 609;
          goto LABEL_27;
        case 1003:
          int v9 = "ACMRequirement - ACMRequirementDataSecureStateWithAttributes";
          rsize_t v10 = 20;
          unsigned int v11 = a1;
          unint64_t v12 = 20;
          int v13 = 613;
          goto LABEL_27;
        case 1004:
          int v9 = "ACMRequirement - ACMRequirementDataPasscodeValidatedWithAttributes";
          rsize_t v10 = 32;
          unsigned int v11 = a1;
          unint64_t v12 = 32;
          int v13 = 617;
          goto LABEL_27;
        default:
          goto LABEL_28;
      }
  }
LABEL_28:
  if (v8 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "Util_DeallocRequirement", (int)v7);
  }
  return v7;
}

void Util_hexDumpToStrHelper_cold_1()
{
}

void Util_hexDumpToStrHelper_cold_2()
{
}

uint64_t ACMContextCreate(uint64_t *a1)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    rsize_t v10 = "ACMContextCreate";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v6 = 0;
  uint64_t v2 = LibCall_ACMContextCreate((uint64_t (*)(uint64_t, uint64_t, void, void, void, unsigned char *, uint64_t *))ioKitTransport, (uint64_t)&v6, a1, &_logLevel, 1);
  if (v2)
  {
    updateLogLevelFromKext();
    unsigned int v3 = 70;
  }
  else
  {
    unsigned int v3 = 10;
    if (a1 && _logLevel <= 0x28u)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
      {
        uint64_t v4 = *a1;
        if (*a1) {
          LODWORD(v4) = *(_DWORD *)(v4 + 16);
        }
        *(_DWORD *)buf = 136315650;
        unsigned int v8 = "ACMLib";
        __int16 v9 = 2080;
        rsize_t v10 = "ACMContextCreate";
        __int16 v11 = 1024;
        LODWORD(v12) = v4;
        _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: CS[%u] created.\n", buf, 0x1Cu);
      }
      unsigned int v3 = 10;
    }
  }
  if (v3 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    rsize_t v10 = "ACMContextCreate";
    __int16 v11 = 2048;
    uint64_t v12 = (int)v2;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v2;
}

uint64_t ioKitTransport(uint64_t *a1, int a2, char a3, const void *a4, size_t a5, void *a6, size_t *a7)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v18 = 136315394;
    uint64_t v19 = "ACMLib";
    __int16 v20 = 2080;
    uint64_t v21 = "ioKitTransport";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v18, 0x16u);
  }
  if (a1)
  {
    uint64_t v14 = init();
    unsigned int v15 = 70;
    if (v14)
    {
      uint64_t v16 = v14;
    }
    else
    {
      uint64_t v16 = performCommand(*a1, a2, a3, a4, a5, a6, a7);
      if (v16) {
        unsigned int v15 = 70;
      }
      else {
        unsigned int v15 = 10;
      }
    }
  }
  else
  {
    unsigned int v15 = 70;
    uint64_t v16 = 4294967293;
  }
  if (v15 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v18 = 136315650;
    uint64_t v19 = "ACMLib";
    __int16 v20 = 2080;
    uint64_t v21 = "ioKitTransport";
    __int16 v22 = 2048;
    uint64_t v23 = (int)v16;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v18, 0x20u);
  }
  return v16;
}

_DWORD *ACMContextCreateWithExternalForm(_OWORD *a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    rsize_t v10 = "ACMLib";
    __int16 v11 = 2080;
    uint64_t v12 = "ACMContextCreateWithExternalForm";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v8 = 0;
  uint64_t v4 = LibCall_ACMContextCreateWithExternalForm((uint64_t (*)(uint64_t, uint64_t, void, _OWORD *, uint64_t, void *, uint64_t *))ioKitTransport, (uint64_t)&v8, a1, a2, &_logLevel, 1);
  if (v4)
  {
    if (_logLevel <= 0x28u && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
    {
      int v5 = v4[4];
      *(_DWORD *)buf = 136315650;
      rsize_t v10 = "ACMLib";
      __int16 v11 = 2080;
      uint64_t v12 = "ACMContextCreateWithExternalForm";
      __int16 v13 = 1024;
      LODWORD(v14) = v5;
      _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: CS[%u] acquired.\n", buf, 0x1Cu);
    }
    unsigned int v6 = 30;
  }
  else
  {
    updateLogLevelFromKext();
    unsigned int v6 = 70;
  }
  if (v6 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    rsize_t v10 = "ACMLib";
    __int16 v11 = 2080;
    uint64_t v12 = "ACMContextCreateWithExternalForm";
    __int16 v13 = 2048;
    uint64_t v14 = v4;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, -> ctx = %p.\n", buf, 0x20u);
  }
  return v4;
}

uint64_t ACMContextDelete(_DWORD *a1, int a2)
{
  unsigned int v4 = _logLevel;
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    uint64_t v14 = "ACMContextDelete";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
    unsigned int v4 = _logLevel;
  }
  if (a1 && v4 <= 0x28 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v5 = a1[4];
    unsigned int v6 = "deleted";
    *(_DWORD *)buf = 136315906;
    uint64_t v12 = "ACMLib";
    uint64_t v14 = "ACMContextDelete";
    __int16 v13 = 2080;
    if (a2) {
      unsigned int v6 = "destroyed";
    }
    __int16 v15 = 1024;
    LODWORD(v16[0]) = v5;
    WORD2(v16[0]) = 2080;
    *(void *)((char *)v16 + 6) = v6;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: CS[%u] %s.\n", buf, 0x26u);
  }
  rsize_t v10 = a1;
  uint64_t v7 = LibCall_ACMContextDelete((void (*)(uint64_t, uint64_t, void, void *, uint64_t, void, void))ioKitTransport, (uint64_t)&v10, a1, a2);
  if (v7) {
    unsigned int v8 = 70;
  }
  else {
    unsigned int v8 = 10;
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    uint64_t v14 = "ACMContextDelete";
    __int16 v15 = 2048;
    v16[0] = (int)v7;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v7;
}

void ACMContextGetExternalForm(const void *a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    int v5 = "ACMLib";
    __int16 v6 = 2080;
    uint64_t v7 = "ACMContextGetExternalForm";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v4, 0x16u);
  }
  if (!a1 || !a2 || init() || performCommand((uint64_t)a1, 19, 0, a1, 0x10uLL, 0, 0)) {
    (*(void (**)(uint64_t, void, void))(a2 + 16))(a2, 0, 0);
  }
  else {
    (*(void (**)(uint64_t, const void *, uint64_t))(a2 + 16))(a2, a1, 16);
  }
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    int v5 = "ACMLib";
    __int16 v6 = 2080;
    uint64_t v7 = "ACMContextGetExternalForm";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", (uint8_t *)&v4, 0x16u);
  }
}

uint64_t init()
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v6 = 136315394;
    uint64_t v7 = "ACMLib";
    __int16 v8 = 2080;
    __int16 v9 = "init";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v6, 0x16u);
  }
  if (_initialized)
  {
    uint64_t v0 = 0;
  }
  else
  {
    CFDictionaryRef v1 = IOServiceMatching("AppleCredentialManager");
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v1);
    if (!MatchingService)
    {
      unsigned int v4 = 70;
      uint64_t v0 = 4294967291;
      goto LABEL_10;
    }
    io_object_t v3 = MatchingService;
    uint64_t v0 = IOServiceOpen(MatchingService, mach_task_self_, 0, (io_connect_t *)&_connect);
    if (v0)
    {
      unsigned int v4 = 70;
      goto LABEL_10;
    }
    IOObjectRelease(v3);
    _initialized = 1;
  }
  unsigned int v4 = 10;
LABEL_10:
  if (v4 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v6 = 136315650;
    uint64_t v7 = "ACMLib";
    __int16 v8 = 2080;
    __int16 v9 = "init";
    __int16 v10 = 2048;
    uint64_t v11 = (int)v0;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v6, 0x20u);
  }
  return v0;
}

uint64_t performCommand(uint64_t a1, int a2, char a3, const void *a4, size_t a5, void *a6, size_t *a7)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    size_t v25 = "ACMLib";
    __int16 v26 = 2080;
    int v27 = "performCommand";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  size_t inputStructCnt = 0;
  uint64_t v14 = LibCall_BuildCommand(a2, 0, a3, a4, a5, &inputStructCnt);
  if (v14)
  {
    __int16 v15 = v14;
    if (!a6 && a7)
    {
      uint64_t v18 = 4294967293;
    }
    else
    {
      if (a7) {
        size_t v16 = *a7;
      }
      else {
        size_t v16 = 0;
      }
      size_t v22 = v16;
      uint64_t v17 = IOConnectCallStructMethod(_connect, 0, v14, inputStructCnt, a6, &v22);
      uint64_t v18 = v17;
      if (a1) {
        LODWORD(a1) = *(_DWORD *)(a1 + 16);
      }
      if (v17)
      {
        if (_logLevel <= 0x46u && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136316418;
          size_t v25 = "ACMLib";
          __int16 v26 = 2080;
          int v27 = "performCommand";
          __int16 v28 = 1024;
          *(_DWORD *)unint64_t v29 = a2;
          *(_WORD *)&v29[4] = 1024;
          *(_DWORD *)&v29[6] = a1;
          __int16 v30 = 1024;
          int v31 = v18;
          __int16 v32 = 1024;
          int v33 = v18;
          _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: cmd(%u) on CS[%u] -> err 0x%x (%d).\n", buf, 0x2Eu);
        }
      }
      else
      {
        if (_logLevel <= 0x28u && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136315906;
          size_t v25 = "ACMLib";
          __int16 v26 = 2080;
          int v27 = "performCommand";
          __int16 v28 = 1024;
          *(_DWORD *)unint64_t v29 = a2;
          *(_WORD *)&v29[4] = 1024;
          *(_DWORD *)&v29[6] = a1;
          _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: cmd(%u) on CS[%u] -> ok.\n", buf, 0x22u);
        }
        uint64_t v18 = 0;
        if (a7) {
          *a7 = v22;
        }
      }
    }
    size_t v19 = inputStructCnt;
    acm_mem_free_info("<data>", v15, inputStructCnt, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 134, "performCommand");
    acm_mem_free_data(v15, v19);
    if (v18) {
      unsigned int v20 = 70;
    }
    else {
      unsigned int v20 = 10;
    }
  }
  else
  {
    unsigned int v20 = 70;
    uint64_t v18 = 4294967291;
  }
  if (v20 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    size_t v25 = "ACMLib";
    __int16 v26 = 2080;
    int v27 = "performCommand";
    __int16 v28 = 2048;
    *(void *)unint64_t v29 = (int)v18;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v18;
}

uint64_t ACMContextAddCredential(_OWORD *a1, unsigned int *a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    int v6 = "ACMLib";
    __int16 v7 = 2080;
    __int16 v8 = "ACMContextAddCredential";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v5, 0x16u);
  }
  return ACMContextAddCredentialWithScope(a1, a2, 1);
}

uint64_t ACMContextAddCredentialWithScope(_OWORD *a1, unsigned int *a2, int a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    unsigned int v20 = "ACMContextAddCredentialWithScope";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  size_t size = 0;
  if (a1) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = a3 == 2;
  }
  char v7 = !v6;
  unsigned int v8 = 70;
  uint64_t v9 = 4294967293;
  if (a2 && (v7 & 1) == 0)
  {
    uint64_t SerializedAddCredentialSize = init();
    if (SerializedAddCredentialSize
      || (uint64_t SerializedAddCredentialSize = GetSerializedAddCredentialSize((uint64_t)a1, a2, a3, &size),
          SerializedAddCredentialSize))
    {
      uint64_t v9 = SerializedAddCredentialSize;
      unsigned int v8 = 70;
    }
    else
    {
      size_t v11 = size;
      uint64_t v12 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v12, v11, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 325, "ACMContextAddCredentialWithScope");
      if (v12)
      {
        uint64_t v13 = SerializeAddCredential(a1, a2, a3, (uint64_t)v12, &size);
        if (!v13) {
          uint64_t v13 = performCommand((uint64_t)a1, 5, 0, v12, size, 0, 0);
        }
        uint64_t v9 = v13;
        size_t v14 = size;
        acm_mem_free_info("<data>", v12, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 338, "ACMContextAddCredentialWithScope");
        acm_mem_free_data(v12, v14);
        if (v9) {
          unsigned int v8 = 70;
        }
        else {
          unsigned int v8 = 10;
        }
      }
      else
      {
        unsigned int v8 = 70;
        uint64_t v9 = 4294967292;
      }
    }
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    unsigned int v20 = "ACMContextAddCredentialWithScope";
    __int16 v21 = 2048;
    uint64_t v22 = (int)v9;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v9;
}

uint64_t ACMContextRemoveCredentialsByType(_OWORD *a1, int a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    BOOL v6 = "ACMLib";
    __int16 v7 = 2080;
    unsigned int v8 = "ACMContextRemoveCredentialsByType";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v5, 0x16u);
  }
  return ACMContextRemoveCredentialsByTypeAndScope(a1, a2, 1);
}

uint64_t ACMContextRemoveCredentialsByTypeAndScope(_OWORD *a1, int a2, int a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315394;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    size_t v14 = "ACMContextRemoveCredentialsByTypeAndScope";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v11, 0x16u);
  }
  if (a1 || a3 == 2)
  {
    uint64_t v6 = init();
    if (v6)
    {
      uint64_t v8 = v6;
      unsigned int v9 = 70;
    }
    else
    {
      __int16 v7 = acm_mem_alloc_data(0x18uLL);
      acm_mem_alloc_info("<data>", v7, 24, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 386, "ACMContextRemoveCredentialsByTypeAndScope");
      if (v7)
      {
        if (a1)
        {
          _OWORD *v7 = *a1;
        }
        else
        {
          *(void *)__int16 v7 = 0;
          *((void *)v7 + 1) = 0;
        }
        *((_DWORD *)v7 + 4) = a2;
        *((_DWORD *)v7 + 5) = a3;
        uint64_t v8 = performCommand((uint64_t)a1, 9, 0, v7, 0x18uLL, 0, 0);
        acm_mem_free_info("<data>", v7, 0x18uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 407, "ACMContextRemoveCredentialsByTypeAndScope");
        acm_mem_free_data(v7, 0x18uLL);
        if (v8) {
          unsigned int v9 = 70;
        }
        else {
          unsigned int v9 = 10;
        }
      }
      else
      {
        unsigned int v9 = 70;
        uint64_t v8 = 4294967292;
      }
    }
  }
  else
  {
    unsigned int v9 = 70;
    uint64_t v8 = 4294967293;
  }
  if (v9 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315650;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    size_t v14 = "ACMContextRemoveCredentialsByTypeAndScope";
    __int16 v15 = 2048;
    uint64_t v16 = (int)v8;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v11, 0x20u);
  }
  return v8;
}

uint64_t ACMContextRemoveCredentialsByValue(uint64_t a1, _DWORD *a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    uint64_t v6 = "ACMLib";
    __int16 v7 = 2080;
    uint64_t v8 = "ACMContextRemoveCredentialsByValue";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v5, 0x16u);
  }
  return ACMContextRemoveCredentialsByValueAndScope(a1, a2, 1);
}

uint64_t ACMContextRemoveCredentialsByValueAndScope(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    unsigned int v20 = "ACMContextRemoveCredentialsByValueAndScope";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  size_t size = 0;
  if (a1) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = a3 == 2;
  }
  char v7 = !v6;
  unsigned int v8 = 70;
  uint64_t v9 = 4294967293;
  if (a2 && (v7 & 1) == 0)
  {
    uint64_t v10 = init();
    if (v10 || (uint64_t v10 = GetSerializedRemoveCredentialSize(a1, a2, a3, &size), v10))
    {
      uint64_t v9 = v10;
      unsigned int v8 = 70;
    }
    else
    {
      size_t v11 = size;
      uint64_t v12 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v12, v11, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 457, "ACMContextRemoveCredentialsByValueAndScope");
      if (v12)
      {
        uint64_t v13 = SerializeRemoveCredential(a1, a2, a3, v12, &size);
        if (!v13) {
          uint64_t v13 = performCommand(a1, 6, 0, v12, size, 0, 0);
        }
        uint64_t v9 = v13;
        size_t v14 = size;
        acm_mem_free_info("<data>", v12, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 470, "ACMContextRemoveCredentialsByValueAndScope");
        acm_mem_free_data(v12, v14);
        if (v9) {
          unsigned int v8 = 70;
        }
        else {
          unsigned int v8 = 10;
        }
      }
      else
      {
        unsigned int v8 = 70;
        uint64_t v9 = 4294967292;
      }
    }
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    unsigned int v20 = "ACMContextRemoveCredentialsByValueAndScope";
    __int16 v21 = 2048;
    uint64_t v22 = (int)v9;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v9;
}

uint64_t ACMContextContainsCredentialType(_OWORD *a1, int a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    BOOL v6 = "ACMLib";
    __int16 v7 = 2080;
    unsigned int v8 = "ACMContextContainsCredentialType";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v5, 0x16u);
  }
  return ACMContextContainsCredentialTypeEx(a1, a2, 0);
}

uint64_t ACMContextContainsCredentialTypeEx(_OWORD *a1, int a2, int a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextContainsCredentialTypeEx";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  int v14 = 0;
  size_t v13 = 4;
  if (a1)
  {
    uint64_t v6 = init();
    if (v6)
    {
      uint64_t v11 = v6;
      unsigned int v8 = 70;
    }
    else
    {
      __int16 v7 = acm_mem_alloc_data(0x18uLL);
      acm_mem_alloc_info("<data>", v7, 24, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 576, "ACMContextContainsCredentialTypeEx");
      unsigned int v8 = 70;
      if (v7)
      {
        *(_OWORD *)__int16 v7 = *a1;
        v7[4] = a2;
        v7[5] = a3;
        unsigned int v9 = performCommand((uint64_t)a1, 4, 0, v7, 0x18uLL, &v14, &v13);
        if (v14) {
          unsigned int v10 = 0;
        }
        else {
          unsigned int v10 = -7;
        }
        if (v9) {
          uint64_t v11 = v9;
        }
        else {
          uint64_t v11 = v10;
        }
        acm_mem_free_info("<data>", v7, 0x18uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 590, "ACMContextContainsCredentialTypeEx");
        acm_mem_free_data(v7, 0x18uLL);
        if (v11) {
          unsigned int v8 = 70;
        }
        else {
          unsigned int v8 = 10;
        }
      }
      else
      {
        uint64_t v11 = 4294967292;
      }
    }
  }
  else
  {
    unsigned int v8 = 70;
    uint64_t v11 = 4294967293;
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextContainsCredentialTypeEx";
    __int16 v19 = 2048;
    uint64_t v20 = (int)v11;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v11;
}

uint64_t ACMGlobalContextAddCredential(unsigned int *a1)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    unsigned int v10 = "ACMGlobalContextAddCredential";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v6 = 0;
  if (a1)
  {
    uint64_t v2 = ACMContextCreate((uint64_t *)&v6);
    if (!v2) {
      uint64_t v2 = ACMContextAddCredentialWithScope(v6, a1, 2);
    }
    uint64_t v3 = v2;
    if (v6) {
      ACMContextDelete(v6, 1);
    }
    if (v3) {
      unsigned int v4 = 70;
    }
    else {
      unsigned int v4 = 10;
    }
  }
  else
  {
    unsigned int v4 = 70;
    uint64_t v3 = 4294967293;
  }
  if (v4 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    unsigned int v10 = "ACMGlobalContextAddCredential";
    __int16 v11 = 2048;
    uint64_t v12 = (int)v3;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v3;
}

uint64_t ACMGlobalContextRemoveCredentialsByType(int a1)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    unsigned int v10 = "ACMGlobalContextRemoveCredentialsByType";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v6 = 0;
  uint64_t v2 = ACMContextCreate((uint64_t *)&v6);
  if (!v2) {
    uint64_t v2 = ACMContextRemoveCredentialsByTypeAndScope(v6, a1, 2);
  }
  uint64_t v3 = v2;
  if (v6) {
    ACMContextDelete(v6, 1);
  }
  if (v3) {
    unsigned int v4 = 70;
  }
  else {
    unsigned int v4 = 10;
  }
  if (v4 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    unsigned int v8 = "ACMLib";
    __int16 v9 = 2080;
    unsigned int v10 = "ACMGlobalContextRemoveCredentialsByType";
    __int16 v11 = 2048;
    uint64_t v12 = (int)v3;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v3;
}

uint64_t ACMContextRemovePassphraseCredentialsByPurposeAndScope(_OWORD *a1, int a2, int a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315394;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    int v14 = "ACMContextRemovePassphraseCredentialsByPurposeAndScope";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v11, 0x16u);
  }
  if (a1 || a3 == 2)
  {
    uint64_t v6 = init();
    if (v6)
    {
      uint64_t v8 = v6;
      unsigned int v9 = 70;
    }
    else
    {
      __int16 v7 = acm_mem_alloc_data(0x18uLL);
      acm_mem_alloc_info("<data>", v7, 24, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 492, "ACMContextRemovePassphraseCredentialsByPurposeAndScope");
      if (v7)
      {
        if (a1)
        {
          _OWORD *v7 = *a1;
        }
        else
        {
          *(void *)__int16 v7 = 0;
          *((void *)v7 + 1) = 0;
        }
        *((_DWORD *)v7 + 4) = a2;
        *((_DWORD *)v7 + 5) = a3;
        uint64_t v8 = performCommand((uint64_t)a1, 16, 0, v7, 0x18uLL, 0, 0);
        acm_mem_free_info("<data>", v7, 0x18uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 513, "ACMContextRemovePassphraseCredentialsByPurposeAndScope");
        acm_mem_free_data(v7, 0x18uLL);
        if (v8) {
          unsigned int v9 = 70;
        }
        else {
          unsigned int v9 = 10;
        }
      }
      else
      {
        unsigned int v9 = 70;
        uint64_t v8 = 4294967292;
      }
    }
  }
  else
  {
    unsigned int v9 = 70;
    uint64_t v8 = 4294967293;
  }
  if (v9 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315650;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    int v14 = "ACMContextRemovePassphraseCredentialsByPurposeAndScope";
    __int16 v15 = 2048;
    uint64_t v16 = (int)v8;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v11, 0x20u);
  }
  return v8;
}

uint64_t ACMContextReplacePassphraseCredentialsWithScope(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    uint64_t v20 = "ACMContextReplacePassphraseCredentialsWithScope";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  size_t size = 0;
  if (a1) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = a3 == 2;
  }
  char v7 = !v6;
  unsigned int v8 = 70;
  uint64_t v9 = 4294967293;
  if (a2 && (v7 & 1) == 0)
  {
    uint64_t SerializedReplacePassphraseCredentialSize = init();
    if (SerializedReplacePassphraseCredentialSize
      || (uint64_t SerializedReplacePassphraseCredentialSize = GetSerializedReplacePassphraseCredentialSize(a1, a2, a3, &size),
          SerializedReplacePassphraseCredentialSize))
    {
      uint64_t v9 = SerializedReplacePassphraseCredentialSize;
      unsigned int v8 = 70;
    }
    else
    {
      size_t v11 = size;
      uint64_t v12 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v12, v11, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 538, "ACMContextReplacePassphraseCredentialsWithScope");
      if (v12)
      {
        uint64_t v13 = SerializeReplacePassphraseCredential(a1, a2, a3, v12, &size);
        if (!v13) {
          uint64_t v13 = performCommand(a1, 15, 0, v12, size, 0, 0);
        }
        uint64_t v9 = v13;
        bzero(v12, size);
        size_t v14 = size;
        acm_mem_free_info("<data>", v12, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 552, "ACMContextReplacePassphraseCredentialsWithScope");
        acm_mem_free_data(v12, v14);
        if (v9) {
          unsigned int v8 = 70;
        }
        else {
          unsigned int v8 = 10;
        }
      }
      else
      {
        unsigned int v8 = 70;
        uint64_t v9 = 4294967292;
      }
    }
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v18 = "ACMLib";
    __int16 v19 = 2080;
    uint64_t v20 = "ACMContextReplacePassphraseCredentialsWithScope";
    __int16 v21 = 2048;
    uint64_t v22 = (int)v9;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v9;
}

uint64_t ACMContextContainsPassphraseCredentialWithPurpose(_OWORD *a1, int a2, int a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextContainsPassphraseCredentialWithPurpose";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  int v14 = 0;
  size_t v13 = 4;
  if (a1)
  {
    uint64_t v6 = init();
    if (v6)
    {
      uint64_t v11 = v6;
      unsigned int v8 = 70;
    }
    else
    {
      char v7 = acm_mem_alloc_data(0x18uLL);
      acm_mem_alloc_info("<data>", v7, 24, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 614, "ACMContextContainsPassphraseCredentialWithPurpose");
      unsigned int v8 = 70;
      if (v7)
      {
        *(_OWORD *)char v7 = *a1;
        v7[4] = a2;
        v7[5] = a3;
        unsigned int v9 = performCommand((uint64_t)a1, 13, 0, v7, 0x18uLL, &v14, &v13);
        if (v14) {
          unsigned int v10 = 0;
        }
        else {
          unsigned int v10 = -7;
        }
        if (v9) {
          uint64_t v11 = v9;
        }
        else {
          uint64_t v11 = v10;
        }
        acm_mem_free_info("<data>", v7, 0x18uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 628, "ACMContextContainsPassphraseCredentialWithPurpose");
        acm_mem_free_data(v7, 0x18uLL);
        if (v11) {
          unsigned int v8 = 70;
        }
        else {
          unsigned int v8 = 10;
        }
      }
      else
      {
        uint64_t v11 = 4294967292;
      }
    }
  }
  else
  {
    unsigned int v8 = 70;
    uint64_t v11 = 4294967293;
  }
  if (v8 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextContainsPassphraseCredentialWithPurpose";
    __int16 v19 = 2048;
    uint64_t v20 = (int)v11;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v11;
}

uint64_t ACMContextVerifyPolicy(_OWORD *a1, char *a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v11 = "ACMLib";
    __int16 v12 = 2080;
    size_t v13 = "ACMContextVerifyPolicy";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  unsigned int v9 = a1;
  uint64_t v6 = LibCall_ACMContextVerifyPolicy_Block((uint64_t (*)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *))ioKitTransport, (uint64_t)&v9, a1, a2, a3);
  if (v6) {
    unsigned int v7 = 70;
  }
  else {
    unsigned int v7 = 10;
  }
  if (v7 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v11 = "ACMLib";
    __int16 v12 = 2080;
    size_t v13 = "ACMContextVerifyPolicy";
    __int16 v14 = 2048;
    uint64_t v15 = (int)v6;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v6;
}

uint64_t ACMContextVerifyPolicyWithPreflight(_OWORD *a1, char *__s1, uint64_t a3, uint64_t a4)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    size_t v13 = "ACMLib";
    __int16 v14 = 2080;
    uint64_t v15 = "ACMContextVerifyPolicyWithPreflight";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v11 = a1;
  uint64_t v8 = LibCall_ACMContextVerifyPolicyWithPreflight_Block((uint64_t (*)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *))ioKitTransport, (uint64_t)&v11, a1, __s1, a3, a4);
  if (v8) {
    unsigned int v9 = 70;
  }
  else {
    unsigned int v9 = 10;
  }
  if (v9 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    size_t v13 = "ACMLib";
    __int16 v14 = 2080;
    uint64_t v15 = "ACMContextVerifyPolicyWithPreflight";
    __int16 v16 = 2048;
    uint64_t v17 = (int)v8;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v8;
}

void ACMContextVerifyPolicyEx(_OWORD *a1, char *__s1, uint64_t a3, _DWORD *a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextVerifyPolicyEx";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  __int16 v14 = a1;
  LibCall_ACMContextVerifyPolicyEx_Block((uint64_t (*)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *))ioKitTransport, (uint64_t)&v14, a1, __s1, a3, a4, a5, a6, a7);
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v16 = "ACMLib";
    __int16 v17 = 2080;
    uint64_t v18 = "ACMContextVerifyPolicyEx";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", buf, 0x16u);
  }
}

void ACMGlobalContextVerifyPolicy(char *a1, uint64_t a2, _DWORD *a3, unsigned int a4, uint64_t a5)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    size_t v13 = "ACMLib";
    __int16 v14 = 2080;
    uint64_t v15 = "ACMGlobalContextVerifyPolicy";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  *(void *)uint64_t v11 = 0;
  uint64_t v10 = ACMContextCreate((uint64_t *)v11);
  if (v10)
  {
    if (a5) {
      (*(void (**)(uint64_t, uint64_t, void, void))(a5 + 16))(a5, v10, 0, 0);
    }
  }
  else
  {
    ACMContextVerifyPolicyEx(*(_OWORD **)v11, a1, a2, a3, a4, 0xFFFFFFFFLL, a5);
  }
  if (*(void *)v11) {
    ACMContextDelete(*(_DWORD **)v11, 1);
  }
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    size_t v13 = "ACMLib";
    __int16 v14 = 2080;
    uint64_t v15 = "ACMGlobalContextVerifyPolicy";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", buf, 0x16u);
  }
}

uint64_t ACMContextVerifyAclConstraint(_OWORD *a1, const void *a2, uint64_t a3, unsigned __int8 a4, _DWORD *a5, unsigned int a6, unsigned int a7, uint64_t a8)
{
  unsigned int v9 = a1;
  return LibCall_ACMContextVerifyAclConstraint((uint64_t)ioKitTransport, (uint64_t)&v9, a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t ACMContextVerifyAclConstraintForOperation(_OWORD *a1, const void *a2, uint64_t a3, const void *a4, unsigned int a5, unsigned __int8 a6, _DWORD *a7, unsigned int a8, unsigned int a9, uint64_t a10)
{
  uint64_t v11 = a1;
  return LibCall_ACMContextVerifyAclConstraintForOperation((uint64_t)ioKitTransport, (uint64_t)&v11, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t ACMContextGetTrackingNumber(uint64_t result)
{
  if (result) {
    return *(unsigned int *)(result + 16);
  }
  return result;
}

uint64_t ACMParseAclAndCopyConstraintCharacteristics(const void *a1, uint64_t a2, uint64_t a3)
{
  size_t __n = 4096;
  size_t size = 0;
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v22 = "ACMLib";
    __int16 v23 = 2080;
    BOOL v24 = "ACMParseAclAndCopyConstraintCharacteristics";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v6 = 4294967293;
  if (!a1 || !a2 || !a3) {
    goto LABEL_28;
  }
  uint64_t SerializedProcessAclSize = init();
  if (SerializedProcessAclSize
    || (uint64_t SerializedProcessAclSize = GetSerializedProcessAclSize(0, (uint64_t)a1, a2, 0, 0, 0, 0, 0, &size),
        SerializedProcessAclSize))
  {
    uint64_t v6 = SerializedProcessAclSize;
LABEL_28:
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(a3 + 16))(a3, v6, 0, 4096);
    goto LABEL_19;
  }
  size_t v8 = size;
  unsigned int v9 = acm_mem_alloc_data(size);
  acm_mem_alloc_info("<data>", v9, v8, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 744, "ACMParseAclAndCopyConstraintCharacteristics");
  if (!v9)
  {
    uint64_t v6 = 4294967292;
    goto LABEL_28;
  }
  uint64_t v10 = SerializeProcessAcl(0, a1, a2, 0, 0, 0, 0, 0, (uint64_t)v9, &size);
  if (v10)
  {
    uint64_t v6 = v10;
    __int16 v12 = 0;
    __int16 v14 = 0;
    size_t v11 = 4096;
    goto LABEL_15;
  }
  size_t v11 = 4096;
  __int16 v12 = acm_mem_alloc_data(0x1000uLL);
  acm_mem_alloc_info("<data>", v12, 4096, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 750, "ACMParseAclAndCopyConstraintCharacteristics");
  if (!v12)
  {
    __int16 v14 = 0;
LABEL_31:
    uint64_t v6 = 4294967292;
    goto LABEL_15;
  }
  uint64_t v13 = performCommand(0, 20, 0, v9, size, v12, &__n);
  size_t v11 = __n;
  if (v13)
  {
    uint64_t v6 = v13;
    __int16 v14 = 0;
    goto LABEL_15;
  }
  __int16 v14 = acm_mem_alloc_data(__n);
  acm_mem_alloc_info("<data>", v14, v11, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 756, "ACMParseAclAndCopyConstraintCharacteristics");
  size_t v11 = __n;
  if (!v14) {
    goto LABEL_31;
  }
  memcpy(v14, v12, __n);
  uint64_t v6 = 0;
  size_t v11 = __n;
LABEL_15:
  (*(void (**)(uint64_t, uint64_t, void *, size_t))(a3 + 16))(a3, v6, v14, v11);
  size_t v15 = size;
  acm_mem_free_info("<data>", v9, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 767, "ACMParseAclAndCopyConstraintCharacteristics");
  acm_mem_free_data(v9, v15);
  if (v12)
  {
    acm_mem_free_info("<data>", v12, 0x1000uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 770, "ACMParseAclAndCopyConstraintCharacteristics");
    acm_mem_free_data(v12, 0x1000uLL);
  }
  if (v14)
  {
    size_t v16 = __n;
    acm_mem_free_info("<data>", v14, __n, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 773, "ACMParseAclAndCopyConstraintCharacteristics");
    acm_mem_free_data(v14, v16);
  }
LABEL_19:
  if (v6) {
    unsigned int v17 = 70;
  }
  else {
    unsigned int v17 = 10;
  }
  if (v17 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    uint64_t v22 = "ACMLib";
    __int16 v23 = 2080;
    BOOL v24 = "ACMParseAclAndCopyConstraintCharacteristics";
    __int16 v25 = 2048;
    uint64_t v26 = (int)v6;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v6;
}

uint64_t ACMCredentialGetProperty(int *a1, int a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMCredentialGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v6 = 70;
  uint64_t v7 = 4294967293;
  if (a1 && a3)
  {
    uint64_t v7 = LibCall_ACMCredentialGetPropertyData(a1, a2, &v10, &v9);
    if (v7)
    {
      unsigned int v6 = 70;
    }
    else
    {
      (*(void (**)(uint64_t, int *, uint64_t))(a3 + 16))(a3, v10, v9);
      unsigned int v6 = 10;
    }
  }
  if (v6 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    __int16 v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMCredentialGetProperty";
    __int16 v15 = 2048;
    uint64_t v16 = (int)v7;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v7;
}

void ACMRequirementGetSubrequirements(int *a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315394;
    uint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMRequirementGetSubrequirements";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v8, 0x16u);
  }
  if (a1 && a2)
  {
    int v4 = *a1;
    if (*a1 == 4)
    {
      if (a1[4])
      {
        unint64_t v6 = 0;
        do
          (*(void (**)(uint64_t, void))(a2 + 16))(a2, *(void *)&a1[2 * v6++ + 5]);
        while (v6 < a1[4]);
      }
    }
    else if (v4 == 5)
    {
      if (a1[4])
      {
        unint64_t v7 = 0;
        do
          (*(void (**)(uint64_t, void))(a2 + 16))(a2, *(void *)&a1[2 * v7++ + 5]);
        while (v7 < a1[4]);
      }
    }
    else if (v4 == 7 && a1[5])
    {
      unint64_t v5 = 0;
      do
        (*(void (**)(uint64_t, void))(a2 + 16))(a2, *(void *)&a1[2 * v5++ + 6]);
      while (v5 < a1[5]);
    }
  }
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315394;
    uint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMRequirementGetSubrequirements";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", (uint8_t *)&v8, 0x16u);
  }
}

uint64_t ACMRequirementGetProperty(int *a1, int a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMRequirementGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  unint64_t v9 = 0;
  __int16 v10 = 0;
  unsigned int v6 = 70;
  uint64_t v7 = 4294967293;
  if (a1 && a3)
  {
    uint64_t v7 = LibCall_ACMRequirementGetPropertyData(a1, a2, &v10, &v9);
    if (v7)
    {
      unsigned int v6 = 70;
    }
    else
    {
      (*(void (**)(uint64_t, int *, unint64_t))(a3 + 16))(a3, v10, v9);
      unsigned int v6 = 10;
    }
  }
  if (v6 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    __int16 v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMRequirementGetProperty";
    __int16 v15 = 2048;
    uint64_t v16 = (int)v7;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v7;
}

uint64_t ACMRequirementGetProperties(int *a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315394;
    unint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMRequirementGetProperties";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v8, 0x16u);
  }
  uint64_t v4 = 4294967293;
  unsigned int v5 = 70;
  if (a1 && a2)
  {
    (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 1, a1, 4);
    (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 2, a1 + 1, 4);
    (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 3, a1 + 2, 4);
    uint64_t v4 = 0;
    int v6 = *a1;
    unsigned int v5 = 10;
    switch(*a1)
    {
      case 1:
        goto LABEL_10;
      case 2:
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 200, a1 + 4, 4);
        goto LABEL_13;
      case 3:
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 100, a1 + 4, 4);
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 300, a1 + 5, 8);
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 302, a1 + 9, 8);
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 301, a1 + 13, 8);
        goto LABEL_13;
      case 4:
      case 5:
      case 6:
        break;
      case 7:
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 700, a1 + 4, 4);
        goto LABEL_13;
      default:
        if (v6 != 20 && v6 != 21) {
          break;
        }
LABEL_10:
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(a2 + 16))(a2, 100, a1 + 4, 4);
LABEL_13:
        uint64_t v4 = 0;
        unsigned int v5 = 10;
        break;
    }
  }
  if (v5 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315650;
    unint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMRequirementGetProperties";
    __int16 v12 = 2048;
    uint64_t v13 = (int)v4;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v8, 0x20u);
  }
  return v4;
}

void ACMGetAclAuthMethod(__n128 *a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v6 = "ACMLib";
    __int16 v7 = 2080;
    int v8 = "ACMGetAclAuthMethod";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v4 = a1;
  LibCall_ACMGetAclAuthMethod_Block((uint64_t)ioKitTransport, (uint64_t)&v4, a1, a2);
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v6 = "ACMLib";
    __int16 v7 = 2080;
    int v8 = "ACMGetAclAuthMethod";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", buf, 0x16u);
  }
}

uint64_t ACMSetEnvironmentVariable(int a1, const void *a2, size_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    size_t v11 = "ACMLib";
    __int16 v12 = 2080;
    uint64_t v13 = "ACMSetEnvironmentVariable";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v9 = 0;
  uint64_t v6 = LibCall_ACMSetEnvironmentVariable((uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, void, void))ioKitTransport, (uint64_t)&v9, a1, 0, 0, 0, a2, a3);
  if (v6) {
    unsigned int v7 = 70;
  }
  else {
    unsigned int v7 = 10;
  }
  if (v7 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315906;
    size_t v11 = "ACMLib";
    __int16 v12 = 2080;
    uint64_t v13 = "ACMSetEnvironmentVariable";
    __int16 v14 = 2048;
    uint64_t v15 = (int)v6;
    __int16 v16 = 1024;
    int v17 = a1;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld, var=%u.\n", buf, 0x26u);
  }
  return v6;
}

uint64_t ACMSetEnvironmentVariableWithAccessPolicy(int a1, _OWORD *a2, _OWORD *a3, uint64_t a4, const void *a5, size_t a6)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v17 = "ACMLib";
    __int16 v18 = 2080;
    __int16 v19 = "ACMSetEnvironmentVariableWithAccessPolicy";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v15 = 0;
  uint64_t v12 = LibCall_ACMSetEnvironmentVariable((uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, void, void))ioKitTransport, (uint64_t)&v15, a1, a2, a3, a4, a5, a6);
  if (v12) {
    unsigned int v13 = 70;
  }
  else {
    unsigned int v13 = 10;
  }
  if (v13 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315906;
    int v17 = "ACMLib";
    __int16 v18 = 2080;
    __int16 v19 = "ACMSetEnvironmentVariableWithAccessPolicy";
    __int16 v20 = 2048;
    uint64_t v21 = (int)v12;
    __int16 v22 = 1024;
    int v23 = a1;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld, var=%u.\n", buf, 0x26u);
  }
  return v12;
}

uint64_t ACMGetEnvironmentVariable(int a1, uint64_t a2)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMGetEnvironmentVariable";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v7 = 0;
  uint64_t v4 = LibCall_ACMGetEnvironmentVariable_Block((uint64_t (*)(uint64_t, uint64_t, void, int *, uint64_t, uint64_t, uint64_t))ioKitTransport, (uint64_t)&v7, a1, a2);
  if (v4) {
    unsigned int v5 = 70;
  }
  else {
    unsigned int v5 = 10;
  }
  if (v5 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315906;
    uint64_t v9 = "ACMLib";
    __int16 v10 = 2080;
    size_t v11 = "ACMGetEnvironmentVariable";
    __int16 v12 = 2048;
    uint64_t v13 = (int)v4;
    __int16 v14 = 1024;
    int v15 = a1;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld, var=%u.\n", buf, 0x26u);
  }
  return v4;
}

uint64_t ACMKernelControl(int a1)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v6 = "ACMLib";
    __int16 v7 = 2080;
    int v8 = "ACMKernelControl";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v2 = LibCall_ACMKernelControl_Block((uint64_t)ioKitTransport);
  if (v2) {
    unsigned int v3 = 70;
  }
  else {
    unsigned int v3 = 10;
  }
  if (v3 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315906;
    uint64_t v6 = "ACMLib";
    __int16 v7 = 2080;
    int v8 = "ACMKernelControl";
    __int16 v9 = 2048;
    uint64_t v10 = (int)v2;
    __int16 v11 = 1024;
    int v12 = a1;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld, code=%u.\n", buf, 0x26u);
  }
  return v2;
}

uint64_t ACMSEPControl(const void *a1, size_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  return LibCall_ACMSEPControl_Block((uint64_t (*)(uint64_t, uint64_t, void, char *, uint64_t, unsigned int *, unint64_t *))ioKitTransport, (uint64_t)&v4, a1, a2, 0, 0, 0, a3);
}

uint64_t ACMSEPControlEx(uint64_t a1, _DWORD *a2, unsigned int a3, const void *a4, size_t a5, uint64_t a6)
{
  uint64_t v7 = 0;
  return LibCall_ACMSEPControl_Block((uint64_t (*)(uint64_t, uint64_t, void, char *, uint64_t, unsigned int *, unint64_t *))ioKitTransport, (uint64_t)&v7, a4, a5, a1, a2, a3, a6);
}

void ACMGlobalContextCredentialGetProperty(int a1, int a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v8 = "ACMLib";
    __int16 v9 = 2080;
    uint64_t v10 = "ACMGlobalContextCredentialGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v6 = 0;
  LibCall_ACMGlobalContextCredentialGetProperty_Block((uint64_t)ioKitTransport, (uint64_t)&v6, a1, a2, a3);
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v8 = "ACMLib";
    __int16 v9 = 2080;
    uint64_t v10 = "ACMGlobalContextCredentialGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", buf, 0x16u);
  }
}

void ACMContextCredentialGetProperty(__n128 *a1, unsigned __int32 a2, unsigned __int32 a3, uint64_t a4)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v16 = "ACMLib";
    __int16 v17 = 2080;
    __int16 v18 = "ACMContextCredentialGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t v10 = 256;
  if (a4)
  {
    __int16 v9 = a1;
    uint64_t v8 = LibCall_ACMContextCredentialGetProperty((uint64_t (*)(uint64_t, uint64_t, void, __n128 *, uint64_t, uint64_t, uint64_t, __n128))ioKitTransport, (uint64_t)&v9, a1, a2, a3, (uint64_t)buf, (uint64_t)&v10);
    (*(void (**)(uint64_t, uint64_t, uint8_t *, uint64_t))(a4 + 16))(a4, v8, buf, v10);
  }
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int16 v11 = 136315394;
    int v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMContextCredentialGetProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", v11, 0x16u);
  }
}

uint64_t ACMContextSetData(_OWORD *a1, int a2, const void *a3, size_t a4)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315394;
    int v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMContextSetData";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v11, 0x16u);
  }
  uint64_t v8 = ACMContextSetDataEx(a1, a2, 0, 0, a3, a4);
  if (v8) {
    unsigned int v9 = 70;
  }
  else {
    unsigned int v9 = 10;
  }
  if (v9 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315650;
    int v12 = "ACMLib";
    __int16 v13 = 2080;
    __int16 v14 = "ACMContextSetData";
    __int16 v15 = 2048;
    uint64_t v16 = (int)v8;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v11, 0x20u);
  }
  return v8;
}

uint64_t ACMContextSetDataEx(_OWORD *a1, int a2, _DWORD *a3, unsigned int a4, const void *a5, size_t a6)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v17 = "ACMLib";
    __int16 v18 = 2080;
    __int16 v19 = "ACMContextSetDataEx";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  __int16 v15 = a1;
  uint64_t v12 = LibCall_ACMContextSetData((uint64_t (*)(uint64_t, uint64_t, void, void *, size_t, void, void))ioKitTransport, (uint64_t)&v15, a1, a2, a3, a4, a5, a6);
  if (v12) {
    unsigned int v13 = 70;
  }
  else {
    unsigned int v13 = 10;
  }
  if (v13 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    __int16 v17 = "ACMLib";
    __int16 v18 = 2080;
    __int16 v19 = "ACMContextSetDataEx";
    __int16 v20 = 2048;
    uint64_t v21 = (int)v12;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v12;
}

uint64_t ACMContextGetData(_OWORD *a1, int a2, uint64_t a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v9 = 136315394;
    uint64_t v10 = "ACMLib";
    __int16 v11 = 2080;
    uint64_t v12 = "ACMContextGetData";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v9, 0x16u);
  }
  uint64_t Data = ACMContextGetDataEx(a1, a2, 0, 0, a3);
  if (Data) {
    unsigned int v7 = 70;
  }
  else {
    unsigned int v7 = 10;
  }
  if (v7 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v9 = 136315650;
    uint64_t v10 = "ACMLib";
    __int16 v11 = 2080;
    uint64_t v12 = "ACMContextGetData";
    __int16 v13 = 2048;
    uint64_t v14 = (int)Data;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v9, 0x20u);
  }
  return Data;
}

uint64_t ACMContextGetDataEx(_OWORD *a1, int a2, _DWORD *a3, unsigned int a4, uint64_t a5)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int size_4 = 136315394;
    BOOL v24 = "ACMLib";
    __int16 v25 = 2080;
    uint64_t v26 = "ACMContextGetDataEx";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&size_4, 0x16u);
  }
  unsigned int size = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 4;
  __int16 v19 = a1;
  uint64_t v10 = LibCall_ACMContextGetData((uint64_t (*)(uint64_t, uint64_t, void, void *, size_t, uint64_t, uint64_t))ioKitTransport, (uint64_t)&v19, a1, a2, 1, a3, a4, (uint64_t)&size, (uint64_t)&v21);
  if (!v10)
  {
    uint64_t v11 = size;
    if (size)
    {
      uint64_t v12 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v12, v11, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 1199, "ACMContextGetDataEx");
      if (!v12)
      {
        unsigned int v16 = 70;
        uint64_t v14 = 4294967292;
        goto LABEL_15;
      }
      uint64_t v20 = size;
      __int16 v18 = a1;
      uint64_t v13 = LibCall_ACMContextGetData((uint64_t (*)(uint64_t, uint64_t, void, void *, size_t, uint64_t, uint64_t))ioKitTransport, (uint64_t)&v18, a1, a2, 0, a3, a4, (uint64_t)v12, (uint64_t)&v20);
      uint64_t v14 = v13;
      if (a5 && !v13) {
        (*(void (**)(uint64_t, void *, uint64_t))(a5 + 16))(a5, v12, v20);
      }
      rsize_t v15 = size;
      acm_mem_free_info("<data>", v12, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/ACMLib/ACMLib.c", 1213, "ACMContextGetDataEx");
      acm_mem_free_data(v12, v15);
      if (v14) {
        goto LABEL_11;
      }
    }
    else if (a5)
    {
      (*(void (**)(uint64_t, void, void))(a5 + 16))(a5, 0, 0);
    }
    uint64_t v14 = 0;
    unsigned int v16 = 10;
    goto LABEL_15;
  }
  uint64_t v14 = v10;
LABEL_11:
  unsigned int v16 = 70;
LABEL_15:
  if (v16 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int size_4 = 136315650;
    BOOL v24 = "ACMLib";
    __int16 v25 = 2080;
    uint64_t v26 = "ACMContextGetDataEx";
    __int16 v27 = 2048;
    uint64_t v28 = (int)v14;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&size_4, 0x20u);
  }
  return v14;
}

uint64_t ACMContextGetDataProperty(_OWORD *a1, unsigned __int16 a2, unsigned __int16 a3, uint64_t a4)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315394;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    uint64_t v14 = "ACMContextGetDataProperty";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", (uint8_t *)&v11, 0x16u);
  }
  uint64_t Data = ACMContextGetData(a1, a2 | (a3 << 16), a4);
  if (Data) {
    unsigned int v9 = 70;
  }
  else {
    unsigned int v9 = 10;
  }
  if (v9 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    int v11 = 136315650;
    uint64_t v12 = "ACMLib";
    __int16 v13 = 2080;
    uint64_t v14 = "ACMContextGetDataProperty";
    __int16 v15 = 2048;
    uint64_t v16 = (int)Data;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", (uint8_t *)&v11, 0x20u);
  }
  return Data;
}

uint64_t ACMContextGetInfo(long long *a1, int a2, void *a3)
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    int v11 = "ACMLib";
    __int16 v12 = 2080;
    __int16 v13 = "ACMContextGetInfo";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  unsigned int v9 = a1;
  uint64_t v6 = LibCall_ACMContextGetInfo((uint64_t (*)(uint64_t, uint64_t, void, int *, uint64_t, _OWORD *, unint64_t *))ioKitTransport, (uint64_t)&v9, a1, a2, a3);
  if (v6) {
    unsigned int v7 = 70;
  }
  else {
    unsigned int v7 = 10;
  }
  if (v7 >= _logLevel && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    int v11 = "ACMLib";
    __int16 v12 = 2080;
    __int16 v13 = "ACMContextGetInfo";
    __int16 v14 = 2048;
    uint64_t v15 = (int)v6;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning, err = %ld.\n", buf, 0x20u);
  }
  return v6;
}

uint64_t ACMPing()
{
  uint64_t v1 = 0;
  return LibCall_ACMPing((uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))ioKitTransport, (uint64_t)&v1, 29);
}

void updateLogLevelFromKext()
{
  if (_logLevel <= 0xAu && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    unsigned int v5 = "ACMLib";
    __int16 v6 = 2080;
    unsigned int v7 = "updateLogLevelFromKext";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: called.\n", buf, 0x16u);
  }
  uint64_t output = 0;
  uint32_t outputCnt = 1;
  if (IOConnectCallScalarMethod(_connect, 2u, 0, 0, &output, &outputCnt)) {
    goto LABEL_8;
  }
  unsigned __int8 v0 = output;
  unsigned int v1 = output;
  _logLevel = output;
  if (output <= 0x1EuLL && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    unsigned int v5 = "ACMLib";
    __int16 v6 = 2080;
    unsigned int v7 = "updateLogLevelFromKext";
    __int16 v8 = 1024;
    int v9 = v0;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: log level set to %d.\n", buf, 0x1Cu);
LABEL_8:
    unsigned int v1 = _logLevel;
  }
  if (v1 <= 0xA && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    unsigned int v5 = "ACMLib";
    __int16 v6 = 2080;
    unsigned int v7 = "updateLogLevelFromKext";
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "%s: %s: returning.\n", buf, 0x16u);
  }
}

unsigned char *LibCall_BuildCommand(char a1, char a2, char a3, const void *a4, size_t a5, void *a6)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_BuildCommand");
  }
  __int16 v12 = 0;
  if (a5) {
    BOOL v13 = a4 == 0;
  }
  else {
    BOOL v13 = 0;
  }
  if (!v13 && a6)
  {
    if (a5 >= 0xFFFFFFFFFFFFFFF8)
    {
      __int16 v12 = 0;
    }
    else
    {
      __int16 v12 = acm_mem_alloc_data(a5 + 8);
      acm_mem_alloc_info("<data>", v12, a5 + 8, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 22, "LibCall_BuildCommand");
      if (v12)
      {
        *a6 = a5 + 8;
        *(_DWORD *)__int16 v12 = 1396920900;
        v12[4] = a1;
        v12[5] = a2;
        v12[6] = a3;
        if (a5) {
          memcpy(v12 + 8, a4, a5);
        }
      }
    }
  }
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: returning.\n", "ACM", "LibCall_BuildCommand");
  }
  return v12;
}

uint64_t LibCall_ACMContextCreate(uint64_t (*a1)(uint64_t, uint64_t, void, void, void, unsigned char *, uint64_t *), uint64_t a2, void *a3, unsigned char *a4, int a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextCreate");
  }
  unsigned int v10 = 70;
  uint64_t v11 = 4294967293;
  if (!a1 || !a3) {
    goto LABEL_25;
  }
  __int16 v12 = acm_mem_alloc(0x14uLL);
  acm_mem_alloc_info("ACMHandleWithPayload", v12, 20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 50, "LibCall_ACMContextCreate");
  if (!v12)
  {
    unsigned int v10 = 70;
    uint64_t v11 = 4294967292;
    goto LABEL_25;
  }
  memset(v19, 0, sizeof(v19));
  if (a5)
  {
    uint64_t v18 = 21;
    uint64_t v13 = a1(a2, 36, 0, 0, 0, v19, &v18);
    if (!v13)
    {
      if (v18 != 21)
      {
        uint64_t v11 = 4294967291;
        goto LABEL_23;
      }
      uint64_t v11 = 0;
      goto LABEL_20;
    }
    uint64_t v11 = v13;
    if (v13 != -3)
    {
LABEL_23:
      acm_mem_free_info("ACMHandleWithPayload", v12, 0x14uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 89, "LibCall_ACMContextCreate");
      acm_mem_free(v12, 0x14uLL);
      unsigned int v10 = 70;
      goto LABEL_25;
    }
  }
  uint64_t v18 = 17;
  unsigned int v14 = a1(a2, 1, 0, 0, 0, v19, &v18);
  if (v18 == 17) {
    unsigned int v15 = 0;
  }
  else {
    unsigned int v15 = -5;
  }
  if (v14) {
    uint64_t v11 = v14;
  }
  else {
    uint64_t v11 = v15;
  }
  if (!v14 && v18 == 17)
  {
LABEL_20:
    int v16 = *(_DWORD *)&v19[17];
    *(_OWORD *)__int16 v12 = *(_OWORD *)v19;
    v12[4] = v16;
    *a3 = v12;
    if (a4) {
      *a4 = v19[16];
    }
  }
  if (v11) {
    goto LABEL_23;
  }
  unsigned int v10 = 10;
LABEL_25:
  if (v10 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextCreate", (int)v11);
  }
  return v11;
}

_DWORD *LibCall_ACMContextCreateWithExternalForm(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, uint64_t, void *, uint64_t *), uint64_t a2, _OWORD *a3, uint64_t a4, unsigned char *a5, int a6)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextCreateWithExternalForm");
  }
  __int16 v12 = 0;
  unsigned int v13 = 70;
  int v14 = -3;
  if (a1 && a3 && a4 == 16)
  {
    memset(v21, 0, 9);
    if (a6)
    {
      uint64_t v20 = 9;
      int v15 = a1(a2, 37, 0, a3, 16, v21, &v20);
      if (!v15)
      {
        if (v20 == 9)
        {
          int v14 = 0;
          goto LABEL_19;
        }
        int v14 = -5;
        goto LABEL_28;
      }
      int v14 = v15;
      if (v15 != -3) {
        goto LABEL_28;
      }
    }
    uint64_t v20 = 5;
    int v16 = a1(a2, 18, 0, a3, 16, v21, &v20);
    if (v20 == 5) {
      int v17 = 0;
    }
    else {
      int v17 = -5;
    }
    if (v16) {
      int v14 = v16;
    }
    else {
      int v14 = v17;
    }
    if (!v16 && v20 == 5)
    {
LABEL_19:
      if (LODWORD(v21[0]))
      {
        __int16 v12 = acm_mem_alloc(0x14uLL);
        acm_mem_alloc_info("ACMHandleWithPayload", v12, 20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 128, "LibCall_ACMContextCreateWithExternalForm");
        if (!v12)
        {
          unsigned int v13 = 70;
          int v14 = -4;
          goto LABEL_31;
        }
        int v18 = *(_DWORD *)((char *)v21 + 5);
        *(_OWORD *)__int16 v12 = *a3;
        v12[4] = v18;
        if (a5) {
          *a5 = BYTE4(v21[0]);
        }
        if (v14)
        {
          acm_mem_free_info("ACMHandleWithPayload", v12, 0x14uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 147, "LibCall_ACMContextCreateWithExternalForm");
          acm_mem_free(v12, 0x14uLL);
LABEL_29:
          unsigned int v13 = 70;
          goto LABEL_31;
        }
      }
      else
      {
        __int16 v12 = 0;
      }
      goto LABEL_30;
    }
LABEL_28:
    __int16 v12 = 0;
    if (v14) {
      goto LABEL_29;
    }
LABEL_30:
    int v14 = 0;
    unsigned int v13 = 10;
  }
LABEL_31:
  if (v13 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextCreateWithExternalForm", v14);
  }
  return v12;
}

uint64_t LibCall_ACMContextDelete(void (*a1)(uint64_t, uint64_t, void, void *, uint64_t, void, void), uint64_t a2, void *a3, int a4)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextDelete");
  }
  if (a1 && a3)
  {
    if (a4) {
      a1(a2, 2, 0, a3, 16, 0, 0);
    }
    goto LABEL_7;
  }
  if (a3)
  {
LABEL_7:
    acm_mem_free_info("ACMHandleWithPayload", a3, 0x14uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 172, "LibCall_ACMContextDelete");
    acm_mem_free(a3, 0x14uLL);
    uint64_t v8 = 0;
    unsigned int v9 = 10;
    goto LABEL_8;
  }
  unsigned int v9 = 70;
  uint64_t v8 = 4294967293;
LABEL_8:
  if (v9 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextDelete", (int)v8);
  }
  return v8;
}

uint64_t LibCall_ACMContexAddCredentialWithScope(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, void, void), uint64_t a2, _OWORD *a3, unsigned int *a4, int a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContexAddCredentialWithScope");
  }
  size_t size = 0;
  if (a3) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = a5 == 2;
  }
  char v11 = !v10;
  unsigned int v12 = 70;
  uint64_t v13 = 4294967293;
  if (a4 && (v11 & 1) == 0)
  {
    uint64_t SerializedAddCredentialSize = GetSerializedAddCredentialSize((uint64_t)a3, a4, a5, &size);
    if (SerializedAddCredentialSize)
    {
      uint64_t v13 = SerializedAddCredentialSize;
      unsigned int v12 = 70;
    }
    else
    {
      size_t v15 = size;
      int v16 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v16, v15, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 192, "LibCall_ACMContexAddCredentialWithScope");
      if (v16)
      {
        uint64_t v17 = SerializeAddCredential(a3, a4, a5, (uint64_t)v16, &size);
        if (!v17) {
          uint64_t v17 = a1(a2, 5, 0, v16, size, 0, 0);
        }
        uint64_t v13 = v17;
        size_t v18 = size;
        acm_mem_free_info("<data>", v16, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 203, "LibCall_ACMContexAddCredentialWithScope");
        acm_mem_free_data(v16, v18);
        if (v13) {
          unsigned int v12 = 70;
        }
        else {
          unsigned int v12 = 10;
        }
      }
      else
      {
        unsigned int v12 = 70;
        uint64_t v13 = 4294967292;
      }
    }
  }
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContexAddCredentialWithScope", (int)v13);
  }
  return v13;
}

uint64_t LibCall_ACMContexRemoveCredentialsByTypeAndScope(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, uint64_t, void, void), uint64_t a2, _OWORD *a3, int a4, int a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContexRemoveCredentialsByTypeAndScope");
  }
  if (a3 || a5 == 2)
  {
    BOOL v10 = acm_mem_alloc_data(0x18uLL);
    acm_mem_alloc_info("<data>", v10, 24, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 217, "LibCall_ACMContexRemoveCredentialsByTypeAndScope");
    if (v10)
    {
      if (a3)
      {
        _OWORD *v10 = *a3;
      }
      else
      {
        *(void *)BOOL v10 = 0;
        *((void *)v10 + 1) = 0;
      }
      *((_DWORD *)v10 + 4) = a4;
      *((_DWORD *)v10 + 5) = a5;
      uint64_t v11 = a1(a2, 9, 0, v10, 24, 0, 0);
      acm_mem_free_info("<data>", v10, 0x18uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 233, "LibCall_ACMContexRemoveCredentialsByTypeAndScope");
      acm_mem_free_data(v10, 0x18uLL);
      if (v11) {
        unsigned int v12 = 70;
      }
      else {
        unsigned int v12 = 10;
      }
    }
    else
    {
      unsigned int v12 = 70;
      uint64_t v11 = 4294967292;
    }
  }
  else
  {
    unsigned int v12 = 70;
    uint64_t v11 = 4294967293;
  }
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContexRemoveCredentialsByTypeAndScope", (int)v11);
  }
  return v11;
}

uint64_t LibCall_ACMContextRemoveCredentialsByValueAndScope(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, void, void), uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextRemoveCredentialsByValueAndScope");
  }
  size_t size = 0;
  if (a3) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = a5 == 2;
  }
  char v11 = !v10;
  unsigned int v12 = 70;
  uint64_t v13 = 4294967293;
  if (a4 && (v11 & 1) == 0)
  {
    uint64_t v14 = GetSerializedRemoveCredentialSize(a3, a4, a5, &size);
    if (v14)
    {
      uint64_t v13 = v14;
      unsigned int v12 = 70;
    }
    else
    {
      size_t v15 = size;
      int v16 = acm_mem_alloc_data(size);
      acm_mem_alloc_info("<data>", v16, v15, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 251, "LibCall_ACMContextRemoveCredentialsByValueAndScope");
      if (v16)
      {
        uint64_t v17 = SerializeRemoveCredential(a3, a4, a5, v16, &size);
        if (!v17) {
          uint64_t v17 = a1(a2, 6, 0, v16, size, 0, 0);
        }
        uint64_t v13 = v17;
        size_t v18 = size;
        acm_mem_free_info("<data>", v16, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 264, "LibCall_ACMContextRemoveCredentialsByValueAndScope");
        acm_mem_free_data(v16, v18);
        if (v13) {
          unsigned int v12 = 70;
        }
        else {
          unsigned int v12 = 10;
        }
      }
      else
      {
        unsigned int v12 = 70;
        uint64_t v13 = 4294967292;
      }
    }
  }
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextRemoveCredentialsByValueAndScope", (int)v13);
  }
  return v13;
}

uint64_t LibCall_ACMContextVerifyPolicyAndCopyRequirementEx(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, char *__s1, uint64_t a5, _DWORD *a6, unsigned int a7, uint64_t a8, BOOL *a9, void *a10)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx");
  }
  size_t v32 = 0;
  size_t size = 0;
  __int16 v30 = 0;
  unint64_t v31 = 4096;
  unsigned int v18 = 70;
  uint64_t v19 = 4294967293;
  size_t v29 = 0;
  if (a1 && a3 && __s1 && a9)
  {
    if ((a6 != 0) != (a7 != 0))
    {
      unsigned int v18 = 70;
      uint64_t v19 = 4294967293;
    }
    else
    {
      uint64_t SerializedVerifyPolicySize = GetSerializedVerifyPolicySize((uint64_t)a3, __s1, a5, a8, a6, a7, &size);
      if (SerializedVerifyPolicySize)
      {
        uint64_t v19 = SerializedVerifyPolicySize;
        unsigned int v18 = 70;
      }
      else
      {
        size_t v21 = size;
        __int16 v22 = acm_mem_alloc_data(size);
        acm_mem_alloc_info("<data>", v22, v21, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 293, "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx");
        if (v22)
        {
          size_t v32 = size;
          uint64_t v23 = SerializeVerifyPolicy(a3, __s1, a5, a8, a6, a7, v22, &v32);
          if (v23)
          {
            uint64_t v19 = v23;
            BOOL v24 = 0;
          }
          else
          {
            BOOL v24 = (unsigned int *)acm_mem_alloc_data(0x1000uLL);
            acm_mem_alloc_info("<data>", v24, 4096, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 300, "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx");
            if (v24)
            {
              uint64_t v25 = a1(a2, 3, 0, v22, v32, v24, &v31);
              if (v25)
              {
                uint64_t v19 = v25;
              }
              else
              {
                unint64_t v26 = v31 - 4;
                if (v31 < 4)
                {
                  uint64_t v19 = 4294967291;
                }
                else
                {
                  *a9 = *v24 != 0;
                  if (a10)
                  {
                    uint64_t v19 = DeserializeRequirement(v24 + 1, v26, &v30, &v29);
                    if (!v19) {
                      *a10 = v30;
                    }
                  }
                  else
                  {
                    uint64_t v19 = 0;
                  }
                }
              }
            }
            else
            {
              uint64_t v19 = 4294967292;
            }
          }
          size_t v27 = size;
          acm_mem_free_info("<data>", v22, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 324, "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx");
          acm_mem_free_data(v22, v27);
          if (v24)
          {
            acm_mem_free_info("<data>", v24, 0x1000uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 327, "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx");
            acm_mem_free_data(v24, 0x1000uLL);
          }
          if (v19) {
            unsigned int v18 = 70;
          }
          else {
            unsigned int v18 = 10;
          }
        }
        else
        {
          unsigned int v18 = 70;
          uint64_t v19 = 4294967292;
        }
      }
    }
  }
  if (v18 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextVerifyPolicyAndCopyRequirementEx", (int)v19);
  }
  return v19;
}

uint64_t LibCall_ACMRequirementDelete(uint64_t a1, int *a2)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMRequirementDelete");
  }
  unsigned int v4 = 70;
  uint64_t v5 = 4294967293;
  if (a1 && a2)
  {
    uint64_t v5 = Util_DeallocRequirement(a2);
    if (v5) {
      unsigned int v4 = 70;
    }
    else {
      unsigned int v4 = 10;
    }
  }
  if (v4 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMRequirementDelete", (int)v5);
  }
  return v5;
}

uint64_t LibCall_ACMKernelControl(uint64_t (*a1)(uint64_t, uint64_t, void, char *, size_t, uint64_t, uint64_t), uint64_t a2, int a3, const void *a4, size_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1;
  if (gACMLoggingLevel <= 0xAu) {
    a1 = (uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, uint64_t, uint64_t))printf("%s: %s: called.\n", "ACM", "LibCall_ACMKernelControl");
  }
  if (!v13) {
    goto LABEL_16;
  }
  BOOL v14 = a5 != 0;
  if (a4) {
    BOOL v14 = a5 - 4097 < 0xFFFFFFFFFFFFF000;
  }
  if (v14)
  {
LABEL_16:
    unsigned int v18 = 70;
    uint64_t v17 = 4294967293;
  }
  else
  {
    uint64_t v20 = (uint64_t)&v20;
    __chkstk_darwin(a1);
    size_t v15 = (_DWORD *)((char *)&v20 - ((a5 + 19) & 0xFFFFFFFFFFFFFFF0));
    _DWORD *v15 = a3;
    int v16 = v15 + 1;
    if (a5)
    {
      memcpy(v15 + 1, a4, a5);
      int v16 = (_DWORD *)((char *)v16 + a5);
    }
    if (v16 != (_DWORD *)((char *)v15 + a5 + 4)) {
      LibCall_ACMKernelControl_cold_1();
    }
    uint64_t v17 = v13(a2, 26, 0, (char *)&v20 - ((a5 + 19) & 0xFFFFFFFFFFFFFFF0), a5 + 4, a6, a7);
    if (v17) {
      unsigned int v18 = 70;
    }
    else {
      unsigned int v18 = 10;
    }
  }
  if (v18 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMKernelControl", (int)v17);
  }
  return v17;
}

_DWORD *LibCall_ACMCredentialDelete(_DWORD *a1)
{
  if (a1) {
    return (_DWORD *)Util_DeallocCredential(a1);
  }
  return a1;
}

unsigned int *LibCall_ACMCredentialGetType(unsigned int *result)
{
  if (result) {
    return (unsigned int *)*result;
  }
  return result;
}

uint64_t LibCall_ACMCredentialSetProperty(int *a1, int a2, _OWORD *__src, size_t __n)
{
  if (!a1) {
    return 4294967293;
  }
  int v4 = __n;
  if ((__src != 0) != (__n != 0)) {
    return 4294967293;
  }
  uint64_t result = 4294967293;
  if (a2 > 399)
  {
    if (a2 > 601)
    {
      if (a2 <= 801)
      {
        if (a2 != 602)
        {
          if (a2 == 701)
          {
            if (__n <= 0x80 && *a1 == 13)
            {
              a1[8] = __n;
              BOOL v14 = a1 + 9;
LABEL_118:
              memcpy(v14, __src, __n);
              return 0;
            }
          }
          else if (a2 == 801 && __n == 16 && *a1 == 17)
          {
            uint64_t result = 0;
            *((_OWORD *)a1 + 2) = *__src;
          }
          return result;
        }
        BOOL v13 = *a1 == 12 || *a1 == 15;
        if (__n != 4 || !v13) {
          return result;
        }
LABEL_79:
        uint64_t result = 0;
        a1[9] = *(_DWORD *)__src;
        return result;
      }
      if (a2 == 802)
      {
        if (__n != 65 || *a1 != 17) {
          return result;
        }
        uint64_t result = 0;
        *((_OWORD *)a1 + 3) = *__src;
        long long v11 = __src[1];
        long long v16 = __src[2];
        long long v17 = __src[3];
        *((unsigned char *)a1 + 112) = *((unsigned char *)__src + 64);
        *((_OWORD *)a1 + 5) = v16;
        *((_OWORD *)a1 + 6) = v17;
        goto LABEL_92;
      }
      if (a2 != 901)
      {
        if (a2 == 1001 && __n <= 0x80 && *a1 == 21)
        {
          memcpy(a1 + 9, __src, __n);
          uint64_t result = 0;
          a1[8] = v4;
        }
        return result;
      }
      if (__n != 32 || *a1 != 20) {
        return result;
      }
    }
    else
    {
      if (a2 > 501)
      {
        switch(a2)
        {
          case 502:
            if (__n == 16 && *a1 == 10)
            {
LABEL_102:
              uint64_t result = 0;
              *(_OWORD *)(a1 + 13) = *__src;
            }
            break;
          case 503:
            if (__n == 16 && *a1 == 10)
            {
              uint64_t result = 0;
              long long v15 = *__src;
LABEL_99:
              *(_OWORD *)(a1 + 17) = v15;
            }
            break;
          case 601:
            BOOL v9 = *a1 == 12 || *a1 == 15;
            BOOL v10 = v9;
            if (__n == 4 && v10)
            {
LABEL_64:
              uint64_t result = 0;
              a1[8] = *(_DWORD *)__src;
            }
            break;
        }
        return result;
      }
      if (a2 != 400)
      {
        if (a2 != 401)
        {
          if (a2 == 501 && __n == 16 && *a1 == 10)
          {
LABEL_16:
            uint64_t result = 0;
            *(_OWORD *)(a1 + 9) = *__src;
          }
          return result;
        }
        if (__n != 24 || *a1 != 7) {
          return result;
        }
        uint64_t result = 0;
        long long v11 = *__src;
        *((void *)a1 + 10) = *((void *)__src + 2);
LABEL_92:
        *((_OWORD *)a1 + 4) = v11;
        return result;
      }
      if (__n != 32 || *a1 != 7) {
        return result;
      }
    }
    uint64_t result = 0;
    long long v18 = __src[1];
    *((_OWORD *)a1 + 2) = *__src;
    *((_OWORD *)a1 + 3) = v18;
    return result;
  }
  if (a2 > 199)
  {
    switch(a2)
    {
      case 300:
        if (__n == 16 && *a1 == 3) {
          goto LABEL_16;
        }
        break;
      case 301:
        if (__n == 32 && *a1 == 3)
        {
          uint64_t result = 0;
          long long v15 = *__src;
          *(_OWORD *)(a1 + 21) = __src[1];
          goto LABEL_99;
        }
        break;
      case 302:
        if (__n == 16 && *a1 == 3) {
          goto LABEL_102;
        }
        break;
      case 303:
        if (__n == 65 && *a1 == 3)
        {
          uint64_t result = 0;
          *(_OWORD *)(a1 + 30) = *__src;
          long long v19 = __src[1];
          long long v20 = __src[2];
          long long v21 = __src[3];
          *((unsigned char *)a1 + 184) = *((unsigned char *)__src + 64);
          *(_OWORD *)(a1 + 42) = v21;
          *(_OWORD *)(a1 + 38) = v20;
          *(_OWORD *)(a1 + 34) = v19;
        }
        break;
      case 304:
        if (__n == 16 && *a1 == 3)
        {
          uint64_t result = 0;
          *(_OWORD *)((char *)a1 + 185) = *__src;
        }
        break;
      case 305:
        if (__n == 4 && *a1 == 3)
        {
          uint64_t result = 0;
          *(int *)((char *)a1 + 201) = *(_DWORD *)__src;
        }
        break;
      case 306:
        if (__n <= 0x80 && *a1 == 3)
        {
          memcpy((char *)a1 + 209, __src, __n);
          uint64_t result = 0;
          *(int *)((char *)a1 + 205) = v4;
        }
        break;
      default:
        if (a2 == 200)
        {
          if (__n <= 0x80 && *a1 == 2)
          {
            a1[9] = __n;
            BOOL v14 = a1 + 10;
            goto LABEL_118;
          }
        }
        else if (a2 == 201 && __n == 4 && *a1 == 2)
        {
          goto LABEL_64;
        }
        break;
    }
    return result;
  }
  if (a2 > 100)
  {
    if (a2 == 101)
    {
      if (__n == 4)
      {
        switch(*a1)
        {
          case 1:
          case 3:
          case 9:
          case 10:
            goto LABEL_64;
          case 2:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            return result;
          default:
            if (*a1 == 18) {
              goto LABEL_64;
            }
            break;
        }
      }
      return result;
    }
    if (a2 != 102 || __n != 4 || *a1 != 1) {
      return result;
    }
    goto LABEL_79;
  }
  if (a2 == 5)
  {
    if (__n == 4)
    {
      uint64_t result = 0;
      a1[3] = *(_DWORD *)__src;
    }
  }
  else if (a2 == 100 && __n == 16)
  {
    int v7 = *a1;
    if (*a1 > 8)
    {
      if (v7 == 9)
      {
        uint64_t v8 = a1 + 10;
        a1[9] = 16;
      }
      else
      {
        if (v7 != 18) {
          return result;
        }
        uint64_t v8 = a1 + 9;
      }
    }
    else if (v7 == 1)
    {
      uint64_t v8 = a1 + 11;
      a1[10] = 16;
    }
    else
    {
      if (v7 != 3) {
        return result;
      }
      uint64_t v8 = a1 + 26;
      a1[25] = 16;
    }
    uint64_t result = 0;
    *uint64_t v8 = *__src;
  }
  return result;
}

uint64_t LibCall_ACMCredentialGetPropertyData(int *a1, int a2, int **a3, uint64_t *a4)
{
  uint64_t result = 4294967293;
  if (!a1 || !a3 || !a4) {
    return result;
  }
  if (a2 > 399)
  {
    if (a2 > 601)
    {
      if (a2 > 801)
      {
        if (a2 == 802)
        {
          if (*a1 != 17) {
            return result;
          }
          long long v11 = a1 + 12;
LABEL_87:
          uint64_t v12 = 65;
          BOOL v13 = v11;
          uint64_t v14 = 65;
        }
        else
        {
          if (a2 != 901)
          {
            if (a2 != 1001 || *a1 != 21) {
              return result;
            }
            long long v15 = a1 + 9;
            if (Util_isNullOrZeroMemory((unsigned char *)a1 + 36, 128))
            {
              long long v15 = 0;
              uint64_t v10 = 0;
            }
            else
            {
              uint64_t v10 = a1[8];
            }
            uint64_t result = 0;
            *a3 = v15;
LABEL_99:
            *a4 = v10;
            return result;
          }
          if (*a1 != 20) {
            return result;
          }
          long long v11 = a1 + 8;
          uint64_t v12 = 32;
          BOOL v13 = v11;
          uint64_t v14 = 32;
        }
      }
      else
      {
        if (a2 == 602)
        {
          if (*a1 != 15 && *a1 != 12) {
            return result;
          }
          goto LABEL_61;
        }
        if (a2 == 701)
        {
          if (*a1 != 13) {
            return result;
          }
          uint64_t result = 0;
          *a3 = a1 + 9;
          uint64_t v10 = a1[8];
          goto LABEL_99;
        }
        if (a2 != 801 || *a1 != 17) {
          return result;
        }
        long long v11 = a1 + 8;
        uint64_t v12 = 16;
        BOOL v13 = v11;
        uint64_t v14 = 16;
      }
      unsigned int v19 = Util_isNullOrZeroMemory(v13, v14);
      uint64_t result = 0;
      BOOL v20 = v19 == 0;
      if (v19) {
        long long v21 = 0;
      }
      else {
        long long v21 = (int *)v11;
      }
      if (v20) {
        uint64_t v22 = v12;
      }
      else {
        uint64_t v22 = 0;
      }
      *a3 = v21;
      *a4 = v22;
      return result;
    }
    if (a2 > 501)
    {
      if (a2 == 502)
      {
        if (*a1 != 10) {
          return result;
        }
        BOOL v9 = a1 + 13;
      }
      else
      {
        if (a2 != 503)
        {
          if (a2 != 601 || *a1 != 15 && *a1 != 12) {
            return result;
          }
          goto LABEL_77;
        }
        if (*a1 != 10) {
          return result;
        }
        BOOL v9 = a1 + 17;
      }
LABEL_68:
      *a3 = v9;
      uint64_t result = (uint64_t)Util_isNullOrZeroMemory(v9, 16);
      if (result)
      {
        uint64_t result = 0;
        *a4 = 0;
        *a3 = 0;
        return result;
      }
LABEL_70:
      uint64_t v10 = 16;
      goto LABEL_99;
    }
    if (a2 == 400)
    {
      if (*a1 != 7) {
        return result;
      }
      uint64_t result = 0;
      long long v16 = a1 + 8;
LABEL_84:
      *a3 = v16;
      uint64_t v10 = 32;
      goto LABEL_99;
    }
    if (a2 == 401)
    {
      if (*a1 != 7) {
        return result;
      }
      uint64_t result = 0;
      *a3 = a1 + 16;
      uint64_t v10 = 24;
      goto LABEL_99;
    }
    if (a2 != 501 || *a1 != 10) {
      return result;
    }
LABEL_15:
    BOOL v9 = a1 + 9;
    goto LABEL_68;
  }
  if (a2 > 199)
  {
    switch(a2)
    {
      case 300:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          uint64_t v8 = a1 + 9;
          goto LABEL_50;
        }
        break;
      case 301:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          long long v16 = a1 + 17;
          goto LABEL_84;
        }
        break;
      case 302:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          uint64_t v8 = a1 + 13;
          goto LABEL_50;
        }
        break;
      case 303:
        if (*a1 == 3)
        {
          long long v11 = a1 + 30;
          goto LABEL_87;
        }
        break;
      case 304:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          uint64_t v8 = (int *)((char *)a1 + 185);
LABEL_50:
          *a3 = v8;
          goto LABEL_70;
        }
        break;
      case 305:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          long long v17 = (int *)((char *)a1 + 201);
          goto LABEL_97;
        }
        break;
      case 306:
        if (*a1 == 3)
        {
          uint64_t result = 0;
          uint64_t v10 = *(unsigned int *)((char *)a1 + 205);
          uint64_t v23 = (int *)((char *)a1 + 209);
          if (!*(int *)((char *)a1 + 205)) {
            uint64_t v23 = 0;
          }
          *a3 = v23;
          goto LABEL_99;
        }
        break;
      default:
        if (a2 == 200)
        {
          if (*a1 == 2)
          {
            uint64_t result = 0;
            *a3 = a1 + 10;
            uint64_t v10 = a1[9];
            goto LABEL_99;
          }
        }
        else if (a2 == 201 && *a1 == 2)
        {
          goto LABEL_77;
        }
        break;
    }
    return result;
  }
  if (a2 > 99)
  {
    if (a2 != 100)
    {
      if (a2 != 101)
      {
        if (a2 != 102 || *a1 != 1) {
          return result;
        }
LABEL_61:
        uint64_t result = 0;
        long long v17 = a1 + 9;
        goto LABEL_97;
      }
      if (*a1 > 0x12 || ((1 << *a1) & 0x4060A) == 0) {
        return result;
      }
LABEL_77:
      uint64_t result = 0;
      long long v17 = a1 + 8;
LABEL_97:
      *a3 = v17;
LABEL_98:
      uint64_t v10 = 4;
      goto LABEL_99;
    }
    int v18 = *a1;
    if (*a1 <= 8)
    {
      if (v18 == 1)
      {
        BOOL v9 = a1 + 11;
      }
      else
      {
        if (v18 != 3) {
          return result;
        }
        BOOL v9 = a1 + 26;
      }
      goto LABEL_68;
    }
    if (v18 == 9)
    {
      BOOL v9 = a1 + 10;
      goto LABEL_68;
    }
    if (v18 != 18) {
      return result;
    }
    goto LABEL_15;
  }
  switch(a2)
  {
    case 1:
      uint64_t result = 0;
      *a3 = a1 + 4;
      uint64_t v10 = 8;
      goto LABEL_99;
    case 2:
      uint64_t result = 0;
      long long v17 = a1 + 6;
      goto LABEL_97;
    case 3:
      uint64_t result = 0;
      *a3 = a1;
      goto LABEL_98;
    case 4:
      uint64_t result = 0;
      long long v17 = a1 + 1;
      goto LABEL_97;
    case 5:
      uint64_t result = 0;
      long long v17 = a1 + 3;
      goto LABEL_97;
    default:
      return result;
  }
  return result;
}

unsigned int *LibCall_ACMRequirementGetType(unsigned int *result)
{
  if (result) {
    return (unsigned int *)*result;
  }
  return result;
}

uint64_t LibCall_ACMRequirementGetState(uint64_t result)
{
  if (result) {
    return *(unsigned int *)(result + 4);
  }
  return result;
}

uint64_t LibCall_ACMRequirementGetPriority(uint64_t result)
{
  if (result) {
    return *(unsigned int *)(result + 8);
  }
  return result;
}

uint64_t LibCall_ACMRequirementGetPropertyData(int *a1, int a2, int **a3, unint64_t *a4)
{
  uint64_t v4 = 4294967293;
  if (!a1 || !a3 || !a4) {
    return v4;
  }
  uint64_t v4 = 4294967293;
  if (a2 > 399)
  {
    if (a2 > 600)
    {
      if (a2 == 601)
      {
        if (*a1 == 26)
        {
          if (a1[3] >= 0x1C)
          {
            int v7 = a1 + 7;
LABEL_45:
            *a3 = v7;
            unint64_t v10 = 16;
            goto LABEL_72;
          }
          return 4294967282;
        }
        return 4294967293;
      }
      if (a2 != 602)
      {
        if (a2 != 700) {
          return v4;
        }
        if (*a1 == 7)
        {
LABEL_28:
          uint64_t v8 = a1 + 4;
          goto LABEL_58;
        }
        return 4294967293;
      }
      if (*a1 != 26) {
        return 4294967293;
      }
      if (a1[3] < 0x1C) {
        return 4294967282;
      }
      *a3 = a1 + 4;
      unint64_t v10 = 8;
    }
    else
    {
      if (a2 == 400)
      {
        if (*a1 == 13)
        {
          BOOL v9 = a1 + 4;
LABEL_64:
          *a3 = v9;
          unint64_t v10 = 32;
          goto LABEL_72;
        }
        return 4294967293;
      }
      if (a2 != 500)
      {
        if (a2 != 600) {
          return v4;
        }
        if (*a1 == 26)
        {
          if (a1[3] >= 0x1C)
          {
            uint64_t v8 = a1 + 6;
LABEL_58:
            *a3 = v8;
            goto LABEL_59;
          }
          return 4294967282;
        }
        return 4294967293;
      }
      if (*a1 != 25) {
        return 4294967293;
      }
      *a3 = a1 + 4;
      unint64_t v10 = 43;
    }
LABEL_72:
    uint64_t v4 = 0;
    *a4 = v10;
    return v4;
  }
  if (a2 > 99)
  {
    switch(a2)
    {
      case 300:
        if (*a1 != 3) {
          return 4294967293;
        }
        int v7 = a1 + 5;
        goto LABEL_45;
      case 301:
        if (*a1 != 3) {
          return 4294967293;
        }
        BOOL v9 = a1 + 13;
        goto LABEL_64;
      case 302:
        if (*a1 != 3) {
          return 4294967293;
        }
        int v7 = a1 + 9;
        goto LABEL_45;
      case 303:
        if (*a1 != 3) {
          return 4294967293;
        }
        unint64_t v10 = 0;
        long long v11 = a1 + 21;
        break;
      case 304:
        if (*a1 != 3) {
          return 4294967293;
        }
        if (a1[3] < 0x9C) {
          return 4294967282;
        }
        uint64_t v8 = a1 + 41;
        goto LABEL_58;
      case 305:
        if (*a1 != 3) {
          return 4294967293;
        }
        if (a1[3] < 0x9C) {
          return 4294967282;
        }
        uint64_t v8 = a1 + 42;
        goto LABEL_58;
      case 306:
        if (*a1 != 24) {
          return 4294967293;
        }
        *a3 = a1 + 5;
        unint64_t v10 = a1[4];
        goto LABEL_72;
      case 307:
        if (*a1 != 24) {
          return 4294967293;
        }
        BOOL v9 = a1 + 261;
        goto LABEL_64;
      default:
        if (a2 == 100)
        {
          int v13 = *a1;
          if (*a1 > 19)
          {
            if (v13 == 20 || v13 == 21) {
              goto LABEL_28;
            }
          }
          else if (v13 == 1 || v13 == 3)
          {
            goto LABEL_28;
          }
          return v4;
        }
        if (a2 != 200) {
          return v4;
        }
        if (*a1 != 2) {
          return 4294967293;
        }
        goto LABEL_28;
    }
    while ((Util_isNullOrZeroMemory((unsigned char *)v11 + v10, 16) & 1) == 0)
    {
      BOOL v12 = v10 >= 0x40;
      v10 += 16;
      if (v12)
      {
        unint64_t v10 = 80;
        goto LABEL_71;
      }
    }
    if (!v10) {
      long long v11 = 0;
    }
LABEL_71:
    *a3 = v11;
    goto LABEL_72;
  }
  switch(a2)
  {
    case 1:
      *a3 = a1;
LABEL_59:
      unint64_t v10 = 4;
      goto LABEL_72;
    case 2:
      uint64_t v8 = a1 + 1;
      goto LABEL_58;
    case 3:
      uint64_t v8 = a1 + 2;
      goto LABEL_58;
  }
  return v4;
}

uint64_t LibCall_ACMPing(uint64_t (*a1)(uint64_t, uint64_t, void, void, void, void, void), uint64_t a2, uint64_t a3)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMPing");
  }
  unsigned int v6 = 70;
  if (a1 && (a3 == 47 || a3 == 29))
  {
    uint64_t v7 = a1(a2, a3, 0, 0, 0, 0, 0);
    if (v7) {
      unsigned int v6 = 70;
    }
    else {
      unsigned int v6 = 10;
    }
  }
  else
  {
    uint64_t v7 = 4294967293;
  }
  if (v6 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMPing", (int)v7);
  }
  return v7;
}

uint64_t LibCall_ACMKernDoubleClickNotify(uint64_t (*a1)(uint64_t, uint64_t, void, void, void, void, void), uint64_t a2)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMKernDoubleClickNotify");
  }
  unsigned int v4 = 70;
  if (a1)
  {
    uint64_t v5 = a1(a2, 28, 0, 0, 0, 0, 0);
    if (v5) {
      unsigned int v4 = 70;
    }
    else {
      unsigned int v4 = 10;
    }
  }
  else
  {
    uint64_t v5 = 4294967293;
  }
  if (v4 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMKernDoubleClickNotify", (int)v5);
  }
  return v5;
}

uint64_t LibCall_ACMContextCredentialGetProperty(uint64_t (*a1)(uint64_t, uint64_t, void, __n128 *, uint64_t, uint64_t, uint64_t, __n128), uint64_t a2, __n128 *a3, unsigned __int32 a4, unsigned __int32 a5, uint64_t a6, uint64_t a7)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextCredentialGetProperty");
  }
  unsigned int v14 = 70;
  uint64_t v15 = 4294967293;
  if (a1)
  {
    if (a3)
    {
      uint64_t v15 = 4294967293;
      if (a6)
      {
        if (a7)
        {
          uint64_t v19 = 24;
          __n128 Property_Serialize = LibSer_ContextCredentialGetProperty_Serialize(a3, a4, a5, &v20, &v19);
          if (v16)
          {
            uint64_t v15 = v16;
          }
          else if (v19 == 24)
          {
            uint64_t v15 = a1(a2, 33, 0, &v20, 24, a6, a7, Property_Serialize);
            if (!v15)
            {
              unsigned int v14 = 10;
              goto LABEL_11;
            }
          }
          else
          {
            uint64_t v15 = 4294967291;
          }
          unsigned int v14 = 70;
        }
      }
    }
  }
LABEL_11:
  if (v14 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextCredentialGetProperty", (int)v15);
  }
  return v15;
}

uint64_t LibCall_ACMGlobalContextCredentialGetProperty(uint64_t (*a1)(uint64_t, uint64_t, void, int *, uint64_t, uint64_t, uint64_t), uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMGlobalContextCredentialGetProperty");
  }
  unsigned int v12 = 70;
  uint64_t v13 = 4294967293;
  if (a1 && a5 && a6)
  {
    uint64_t v16 = 8;
    uint64_t Property_Serialize = LibSer_GlobalContextCredentialGetProperty_Serialize(a3, a4, &v17, &v16);
    if (Property_Serialize)
    {
      uint64_t v13 = Property_Serialize;
    }
    else if (v16 == 8)
    {
      uint64_t v13 = a1(a2, 27, 0, &v17, 8, a5, a6);
      if (!v13)
      {
        unsigned int v12 = 10;
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v13 = 4294967291;
    }
    unsigned int v12 = 70;
  }
LABEL_10:
  if (v12 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMGlobalContextCredentialGetProperty", (int)v13);
  }
  return v13;
}

uint64_t LibCall_ACMContextVerifyPolicyEx(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, char *__s1, uint64_t a5, _DWORD *a6, unsigned int a7, uint64_t a8, BOOL *a9, int **a10)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextVerifyPolicyEx");
  }
  unint64_t v31 = 4096;
  size_t size = 0;
  size_t v29 = 0;
  __int16 v30 = 0;
  uint64_t v18 = 4294967293;
  if (!a3 || !__s1 || !a9)
  {
LABEL_18:
    if (!v18) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t SerializedVerifyPolicySize = GetSerializedVerifyPolicySize((uint64_t)a3, __s1, a5, a8, a6, a7, &size);
  if (!SerializedVerifyPolicySize)
  {
    size_t v20 = size;
    long long v21 = acm_mem_alloc_data(size);
    acm_mem_alloc_info("<data>", v21, v20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1257, "LibCall_ACMContextVerifyPolicyEx");
    if (v21)
    {
      uint64_t v22 = SerializeVerifyPolicy(a3, __s1, a5, a8, a6, a7, v21, &size);
      if (v22)
      {
        uint64_t v18 = v22;
        uint64_t v23 = 0;
      }
      else
      {
        uint64_t v23 = (unsigned int *)acm_mem_alloc_data(0x1000uLL);
        acm_mem_alloc_info("<data>", v23, 4096, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1263, "LibCall_ACMContextVerifyPolicyEx");
        if (v23)
        {
          uint64_t v24 = a1(a2, 3, 0, v21, size, v23, &v31);
          if (v24)
          {
            uint64_t v18 = v24;
          }
          else
          {
            unint64_t v25 = v31 - 4;
            if (v31 < 4)
            {
              uint64_t v18 = 4294967291;
            }
            else
            {
              *a9 = *v23 != 0;
              if (a10)
              {
                uint64_t v18 = DeserializeRequirement(v23 + 1, v25, (void **)&v30, &v29);
                if (!v18) {
                  *a10 = v30;
                }
              }
              else
              {
                uint64_t v18 = 0;
              }
            }
          }
        }
        else
        {
          uint64_t v18 = 4294967292;
        }
      }
      size_t v26 = size;
      acm_mem_free_info("<data>", v21, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1288, "LibCall_ACMContextVerifyPolicyEx");
      acm_mem_free_data(v21, v26);
      if (v23)
      {
        acm_mem_free_info("<data>", v23, 0x1000uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1291, "LibCall_ACMContextVerifyPolicyEx");
        acm_mem_free_data(v23, 0x1000uLL);
      }
    }
    else
    {
      uint64_t v18 = 4294967292;
    }
    goto LABEL_18;
  }
  uint64_t v18 = SerializedVerifyPolicySize;
LABEL_19:
  if (v30) {
    Util_DeallocRequirement(v30);
  }
LABEL_21:
  if (v18) {
    unsigned int v27 = 70;
  }
  else {
    unsigned int v27 = 10;
  }
  if (v27 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextVerifyPolicyEx", (int)v18);
  }
  return v18;
}

uint64_t LibCall_ACMGlobalContextVerifyPolicyEx(uint64_t (*a1)(uint64_t, uint64_t, void, _OWORD *, size_t, unsigned int *, unint64_t *), uint64_t a2, char *a3, uint64_t a4, _DWORD *a5, unsigned int a6, BOOL *a7, int **a8)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMGlobalContextVerifyPolicyEx");
  }
  *(void *)size_t v20 = 0;
  uint64_t v16 = LibCall_ACMContextCreate((uint64_t (*)(uint64_t, uint64_t, void, void, void, unsigned char *, uint64_t *))a1, a2, v20, 0, 1);
  if (!v16) {
    uint64_t v16 = LibCall_ACMContextVerifyPolicyEx(a1, a2, *(_OWORD **)v20, a3, a4, a5, a6, 0xFFFFFFFFLL, a7, a8);
  }
  uint64_t v17 = v16;
  if (*(void *)v20) {
    LibCall_ACMContextDelete((void (*)(uint64_t, uint64_t, void, void *, uint64_t, void, void))a1, a2, *(void **)v20, 1);
  }
  if (v17) {
    unsigned int v18 = 70;
  }
  else {
    unsigned int v18 = 10;
  }
  if (v18 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMGlobalContextVerifyPolicyEx", (int)v17);
  }
  return v17;
}

uint64_t LibCall_ACMGetEnvironmentVariable(uint64_t (*a1)(uint64_t, uint64_t, void, int *, uint64_t, uint64_t, uint64_t), uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int v12 = a3;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMGetEnvironmentVariable");
  }
  unsigned int v9 = 70;
  uint64_t v10 = 4294967293;
  if (a1 && a4 && a5)
  {
    uint64_t v10 = a1(a2, 25, 0, &v12, 4, a4, a5);
    if (v10) {
      unsigned int v9 = 70;
    }
    else {
      unsigned int v9 = 10;
    }
  }
  if (v9 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMGetEnvironmentVariable", (int)v10);
  }
  return v10;
}

uint64_t LibCall_ACMSetEnvironmentVariable(uint64_t (*a1)(uint64_t, uint64_t, void, char *, size_t, void, void), uint64_t a2, int a3, _OWORD *a4, _OWORD *a5, uint64_t a6, const void *a7, size_t a8)
{
  uint64_t v15 = a1;
  if (gACMLoggingLevel <= 0xAu) {
    a1 = (uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, void, void))printf("%s: %s: called.\n", "ACM", "LibCall_ACMSetEnvironmentVariable");
  }
  if (!v15 || a6 != 16 * (a5 != 0)) {
    goto LABEL_20;
  }
  BOOL v16 = a8 != 0;
  if (a7) {
    BOOL v16 = a8 - 129 < 0xFFFFFFFFFFFFFF80;
  }
  if (!v16)
  {
    __chkstk_darwin(a1);
    uint64_t v17 = (char *)&v21 - ((a8 + 59) & 0xFFFFFFFFFFFFFFF0);
    *(_DWORD *)uint64_t v17 = a3;
    *((_DWORD *)v17 + 1) = 2;
    *((_DWORD *)v17 + 2) = a8;
    *(_OWORD *)(v17 + 12) = 0u;
    *(_OWORD *)(v17 + 28) = 0u;
    if (a4) {
      *(_OWORD *)(v17 + 12) = *a4;
    }
    if (a5) {
      *(_OWORD *)(v17 + 28) = *a5;
    }
    if (a8) {
      memcpy(v17 + 44, a7, a8);
    }
    uint64_t v18 = v15(a2, 44, 0, (char *)&v21 - ((a8 + 59) & 0xFFFFFFFFFFFFFFF0), a8 + 44, 0, 0);
    if (v18) {
      unsigned int v19 = 70;
    }
    else {
      unsigned int v19 = 10;
    }
  }
  else
  {
LABEL_20:
    unsigned int v19 = 70;
    uint64_t v18 = 4294967293;
  }
  if (v19 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSetEnvironmentVariable", (int)v18);
  }
  return v18;
}

uint64_t LibCall_ACMTRMLoadState(uint64_t (*a1)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMTRMLoadState");
  }
  unsigned int v8 = 70;
  uint64_t v9 = 4294967293;
  if (a1 && a3 && a4)
  {
    uint64_t v9 = a1(a2, 38, 0, 0, 0, a3, a4);
    if (v9) {
      unsigned int v8 = 70;
    }
    else {
      unsigned int v8 = 10;
    }
  }
  if (v8 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMTRMLoadState", (int)v9);
  }
  return v9;
}

uint64_t LibCall_ACMTRMSaveState(uint64_t (*a1)(uint64_t, uint64_t, void, uint64_t, uint64_t, void, void), uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMTRMSaveState");
  }
  if (a1)
  {
    BOOL v10 = (unint64_t)(a4 - 8193) < 0xFFFFFFFFFFFFE000;
    if (!a3) {
      BOOL v10 = a4 != 0;
    }
    unsigned int v11 = 70;
    if (!v10)
    {
      if (a5) {
        uint64_t v12 = 43;
      }
      else {
        uint64_t v12 = 39;
      }
      uint64_t v13 = a1(a2, v12, 0, a3, a4, 0, 0);
      if (v13) {
        unsigned int v11 = 70;
      }
      else {
        unsigned int v11 = 10;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unsigned int v11 = 70;
  }
  uint64_t v13 = 4294967293;
LABEL_13:
  if (v11 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMTRMSaveState", (int)v13);
  }
  return v13;
}

uint64_t LibCall_ACMContextLoadFromImage(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  unsigned int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  BOOL v10 = (uint64_t (*)(uint64_t, uint64_t, void, char *, uint64_t, _OWORD *, unint64_t *))v1;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextLoadFromImage");
  }
  unsigned int v11 = 70;
  uint64_t v12 = 4294967293;
  if (v10 && v7 && (unint64_t)(v5 - 4097) >= 0xFFFFFFFFFFFFF000)
  {
    uint64_t v13 = acm_mem_alloc(0x14uLL);
    acm_mem_alloc_info("ACMHandleWithPayload", v13, 20, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1447, "LibCall_ACMContextLoadFromImage");
    if (v13)
    {
      bzero(v21, 0x1005uLL);
      char v20 = 1;
      *(_WORD *)&v21[1] = 6;
      __int16 v22 = v5;
      __memcpy_chk();
      memset(v18, 0, sizeof(v18));
      uint64_t v19 = 0;
      unint64_t v17 = 280;
      uint64_t v14 = v10(v9, 48, 0, &v20, 4102, v18, &v17);
      if (v14)
      {
        uint64_t v12 = v14;
      }
      else if (v17 < 0x18)
      {
        uint64_t v12 = 4294967291;
      }
      else
      {
        if (LOBYTE(v18[0]))
        {
          uint64_t v12 = 0;
          int v15 = DWORD1(v18[1]);
          *(_OWORD *)uint64_t v13 = *(_OWORD *)((char *)v18 + 4);
          v13[4] = v15;
          void *v3 = v13;
          unsigned int v11 = 10;
          goto LABEL_11;
        }
        uint64_t v12 = 4294967280;
      }
      acm_mem_free_info("ACMHandleWithPayload", v13, 0x14uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1508, "LibCall_ACMContextLoadFromImage");
      acm_mem_free(v13, 0x14uLL);
      unsigned int v11 = 70;
    }
    else
    {
      unsigned int v11 = 70;
      uint64_t v12 = 4294967292;
    }
  }
LABEL_11:
  if (v11 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextLoadFromImage", (int)v12);
  }
  return v12;
}

uint64_t LibCall_ACMContextUnloadToImage(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  unsigned int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  BOOL v10 = (uint64_t (*)(uint64_t, uint64_t, void, int *, uint64_t, unsigned char *, int *))v1;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextUnloadToImage");
  }
  unsigned int v11 = 70;
  uint64_t v12 = 4294967293;
  if (v10 && v5 && v3)
  {
    long long v21 = 0uLL;
    int v20 = 1310721;
    if (v7) {
      long long v21 = *v7;
    }
    else {
      long long v21 = 0uLL;
    }
    bzero(v17, 0x1106uLL);
    *(void *)BOOL v16 = 4358;
    uint64_t v13 = v10(v9, 49, 0, &v20, 20, v17, v16);
    if (v13)
    {
      uint64_t v12 = v13;
LABEL_18:
      unsigned int v11 = 70;
      goto LABEL_14;
    }
    if (*(void *)v16 < 6uLL)
    {
      unsigned int v11 = 70;
      uint64_t v12 = 4294967291;
    }
    else
    {
      if (v17[0])
      {
        uint64_t v15 = v18;
        uint64_t v12 = Util_ReadFromBuffer((uint64_t)v17, *(size_t *)v16, &v15, v5, (unsigned __int16)__n);
        if (!v12)
        {
          void *v3 = v15 - v18;
          unsigned int v11 = 10;
          goto LABEL_14;
        }
        goto LABEL_18;
      }
      unsigned int v11 = 70;
      uint64_t v12 = 4294967280;
    }
  }
LABEL_14:
  if (v11 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextUnloadToImage", (int)v12);
  }
  return v12;
}

uint64_t LibCall_ACMContextSetData(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, void, void), uint64_t a2, _OWORD *a3, int a4, _DWORD *a5, unsigned int a6, const void *a7, size_t a8)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextSetData");
  }
  size_t size = 0;
  unsigned int v16 = 70;
  uint64_t v17 = 4294967293;
  if (a1 && a3)
  {
    if ((a7 != 0) != (a8 != 0))
    {
      unsigned int v16 = 70;
      uint64_t v17 = 4294967293;
    }
    else if (a8 > 0xE00)
    {
      unsigned int v16 = 70;
      uint64_t v17 = 4294967276;
    }
    else
    {
      uint64_t v18 = LibSer_StorageSetData_GetSize(a8, a5, a6, &size);
      if (v18)
      {
        uint64_t v17 = v18;
        unsigned int v16 = 70;
      }
      else
      {
        size_t v19 = size;
        int v20 = acm_mem_alloc_data(size);
        acm_mem_alloc_info("<data>", v20, v19, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1593, "LibCall_ACMContextSetData");
        if (v20)
        {
          uint64_t v21 = LibSer_StorageSetData_Serialize(a3, a4, a7, a8, a5, a6, (uint64_t)v20, &size);
          if (!v21) {
            uint64_t v21 = a1(a2, 40, 0, v20, size, 0, 0);
          }
          uint64_t v17 = v21;
          size_t v22 = size;
          acm_mem_free_info("<data>", v20, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1605, "LibCall_ACMContextSetData");
          acm_mem_free_data(v20, v22);
          if (v17) {
            unsigned int v16 = 70;
          }
          else {
            unsigned int v16 = 10;
          }
        }
        else
        {
          unsigned int v16 = 70;
          uint64_t v17 = 4294967292;
        }
      }
    }
  }
  if (v16 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextSetData", (int)v17);
  }
  return v17;
}

uint64_t LibCall_ACMContextGetData(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, uint64_t, uint64_t), uint64_t a2, _OWORD *a3, int a4, char a5, _DWORD *a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  if (gACMLoggingLevel <= 0xAu)
  {
    uint64_t v16 = a8;
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextGetData");
    a8 = v16;
  }
  size_t size = 0;
  unsigned int v17 = 70;
  uint64_t v18 = 4294967293;
  if (a1)
  {
    uint64_t v26 = a2;
    if (a3)
    {
      uint64_t v18 = 4294967293;
      if (a8)
      {
        if (a9)
        {
          uint64_t v19 = a8;
          uint64_t v20 = LibSer_StorageGetData_GetSize(a6, a7, &size);
          if (v20)
          {
            uint64_t v18 = v20;
            unsigned int v17 = 70;
          }
          else
          {
            size_t v21 = size;
            size_t v22 = acm_mem_alloc_data(size);
            acm_mem_alloc_info("<data>", v22, v21, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1628, "LibCall_ACMContextGetData");
            if (v22)
            {
              uint64_t Data_Serialize = LibSer_StorageGetData_Serialize(a3, a4, a5, a6, a7, (uint64_t)v22, &size);
              if (!Data_Serialize) {
                uint64_t Data_Serialize = a1(v26, 41, 0, v22, size, v19, a9);
              }
              uint64_t v18 = Data_Serialize;
              size_t v24 = size;
              acm_mem_free_info("<data>", v22, size, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1640, "LibCall_ACMContextGetData");
              acm_mem_free_data(v22, v24);
              if (v18) {
                unsigned int v17 = 70;
              }
              else {
                unsigned int v17 = 10;
              }
            }
            else
            {
              unsigned int v17 = 70;
              uint64_t v18 = 4294967292;
            }
          }
        }
      }
    }
  }
  if (v17 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextGetData", (int)v18);
  }
  return v18;
}

uint64_t LibCall_ACMPublishTrustedAccessories(uint64_t (*a1)(uint64_t, uint64_t, void, char *, size_t, void, void), uint64_t a2, const void *a3, size_t a4)
{
  uint64_t v7 = a1;
  if (gACMLoggingLevel <= 0xAu) {
    a1 = (uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, void, void))printf("%s: %s: called.\n", "ACM", "LibCall_ACMPublishTrustedAccessories");
  }
  if (v7)
  {
    if (a3) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = a4 == 0;
    }
    char v9 = !v8;
    unsigned int v10 = 70;
    uint64_t v11 = 4294967293;
    if ((a4 & 0xF) == 0 && a4 <= 0x100 && (v9 & 1) == 0)
    {
      __chkstk_darwin(a1);
      uint64_t v12 = (_DWORD *)((char *)&v14 - ((a4 + 23) & 0xFFFFFFFFFFFFFFF0));
      _DWORD *v12 = 1;
      v12[1] = a4;
      if (a4) {
        memcpy(v12 + 2, a3, a4);
      }
      uint64_t v11 = v7(a2, 45, 0, (char *)&v14 - ((a4 + 23) & 0xFFFFFFFFFFFFFFF0), a4 + 8, 0, 0);
      if (v11) {
        unsigned int v10 = 70;
      }
      else {
        unsigned int v10 = 10;
      }
    }
  }
  else
  {
    unsigned int v10 = 70;
    uint64_t v11 = 4294967293;
  }
  if (v10 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMPublishTrustedAccessories", (int)v11);
  }
  return v11;
}

uint64_t LibCall_ACMContextGetInfo(uint64_t (*a1)(uint64_t, uint64_t, void, int *, uint64_t, _OWORD *, unint64_t *), uint64_t a2, long long *a3, int a4, void *a5)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMContextGetInfo");
  }
  unsigned int v10 = 70;
  uint64_t v11 = 4294967293;
  if (a3 && a1 && a5)
  {
    int v16 = 1;
    int v18 = a4;
    long long v17 = *a3;
    memset(v15, 0, 140);
    unint64_t v14 = 140;
    uint64_t v12 = a1(a2, 46, 0, &v16, 24, v15, &v14);
    if (v12)
    {
      uint64_t v11 = v12;
    }
    else if (v14 < 0xC)
    {
      uint64_t v11 = 4294967291;
    }
    else
    {
      if (LODWORD(v15[0]))
      {
        uint64_t v11 = 0;
        *a5 = *(void *)((char *)v15 + 4);
        unsigned int v10 = 10;
        goto LABEL_10;
      }
      uint64_t v11 = 4294967281;
    }
    unsigned int v10 = 70;
  }
LABEL_10:
  if (v10 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMContextGetInfo", (int)v11);
  }
  return v11;
}

uint64_t verifyAclConstraintInternal(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, unsigned int *, unint64_t *), uint64_t a2, uint64_t a3, _OWORD *a4, const void *a5, uint64_t a6, const void *a7, unsigned int a8, unsigned __int8 a9, _DWORD *a10, unsigned int a11, unsigned int a12, BOOL *a13, int **a14)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "verifyAclConstraintInternal");
  }
  size_t v36 = 0;
  unint64_t v34 = 0;
  unint64_t v35 = 4096;
  size_t v33 = 0;
  uint64_t v20 = 4294967293;
  if (!a4 || !a5 || !a6 || !a13)
  {
LABEL_19:
    if (!v20) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  uint64_t SerializedVerifyAclConstraintSize = GetSerializedVerifyAclConstraintSize(a3, (uint64_t)a4, (uint64_t)a5, a6, (uint64_t)a7, a8, a9, a12, a10, a11, &v36);
  if (!SerializedVerifyAclConstraintSize)
  {
    uint64_t v22 = v36;
    uint64_t v23 = acm_mem_alloc_data(v36);
    acm_mem_alloc_info("<data>", v23, v22, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1929, "verifyAclConstraintInternal");
    if (v23)
    {
      uint64_t v24 = SerializeVerifyAclConstraint(a3, a4, a5, a6, a7, a8, a9, a12, a10, a11, (uint64_t)v23, &v36);
      if (v24)
      {
        uint64_t v20 = v24;
        unint64_t v25 = 0;
      }
      else
      {
        unint64_t v25 = (unsigned int *)acm_mem_alloc_data(0x1000uLL);
        acm_mem_alloc_info("<data>", v25, 4096, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1935, "verifyAclConstraintInternal");
        if (v25)
        {
          uint64_t v26 = a1(a2, a3, 0, v23, v36, v25, &v35);
          if (v26)
          {
            uint64_t v20 = v26;
          }
          else
          {
            unint64_t v27 = v35 - 4;
            if (v35 < 4)
            {
              uint64_t v20 = 4294967291;
            }
            else
            {
              *a13 = *v25 != 0;
              if (a14)
              {
                uint64_t v20 = DeserializeRequirement(v25 + 1, v27, (void **)&v34, &v33);
                if (!v20) {
                  *a14 = v34;
                }
              }
              else
              {
                uint64_t v20 = 0;
              }
            }
          }
        }
        else
        {
          uint64_t v20 = 4294967292;
        }
      }
      rsize_t v28 = v36;
      acm_mem_free_info("<data>", v23, v36, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1958, "verifyAclConstraintInternal");
      acm_mem_free_data(v23, v28);
      if (v25)
      {
        acm_mem_free_info("<data>", v25, 0x1000uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1961, "verifyAclConstraintInternal");
        acm_mem_free_data(v25, 0x1000uLL);
      }
    }
    else
    {
      uint64_t v20 = 4294967292;
    }
    goto LABEL_19;
  }
  uint64_t v20 = SerializedVerifyAclConstraintSize;
LABEL_20:
  if (v34) {
    Util_DeallocRequirement(v34);
  }
LABEL_22:
  if (v20) {
    unsigned int v29 = 70;
  }
  else {
    unsigned int v29 = 10;
  }
  if (v29 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "verifyAclConstraintInternal", (int)v20);
  }
  return v20;
}

uint64_t LibCall_ACMSecContextProcessAcl(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, int *, uint64_t *), uint64_t a2, _OWORD *a3, unsigned __int8 *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, _DWORD *a8, unsigned int a9, unsigned int a10, _DWORD *a11, BOOL *a12)
{
  return processAclCommandInternal(a1, a2, 12, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0, 0);
}

uint64_t processAclCommandInternal(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, int *, uint64_t *), uint64_t a2, int a3, _OWORD *a4, unsigned __int8 *a5, uint64_t a6, unsigned __int8 *a7, uint64_t a8, _DWORD *a9, unsigned int a10, unsigned int a11, _DWORD *a12, BOOL *a13, void *a14, unint64_t *a15)
{
  unsigned int v19 = gACMLoggingLevel;
  if (gACMLoggingLevel <= 0xAu)
  {
    printf("%s: %s: called.\n", "ACM", "processAclCommandInternal");
    unsigned int v19 = gACMLoggingLevel;
  }
  if (v19 <= 0x14)
  {
    printf("%s: %s: command = %u.\n", "ACM", "processAclCommandInternal", a3);
    unsigned int v19 = gACMLoggingLevel;
    if (gACMLoggingLevel <= 0x14u)
    {
      printf("%s: %s: context = %p.\n", "ACM", "processAclCommandInternal", a4);
      unsigned int v19 = gACMLoggingLevel;
      if (gACMLoggingLevel <= 0x14u)
      {
        printf("%s: %s: acl = %p, aclLength = %zu.\n", "ACM", "processAclCommandInternal", a5, a6);
        unsigned int v19 = gACMLoggingLevel;
        if (gACMLoggingLevel <= 0x14u)
        {
          printf("%s: %s (len=%u): acl:", "ACM", "processAclCommandInternal", a6);
          unsigned int v19 = gACMLoggingLevel;
        }
      }
    }
  }
  if (a6)
  {
    uint64_t v20 = a6;
    size_t v21 = a5;
    do
    {
      if (v19 <= 0x14)
      {
        printf("%02x ", *v21);
        unsigned int v19 = gACMLoggingLevel;
      }
      ++v21;
      --v20;
    }
    while (v20);
  }
  if (v19 < 0x15)
  {
    putchar(10);
    unsigned int v19 = gACMLoggingLevel;
    if (gACMLoggingLevel <= 0x14u)
    {
      printf("%s: %s: operation = %p, operationLength = %zu.\n", "ACM", "processAclCommandInternal", a7, a8);
      unsigned int v19 = gACMLoggingLevel;
      if (gACMLoggingLevel <= 0x14u)
      {
        printf("%s: %s (len=%u): operation:", "ACM", "processAclCommandInternal", a8);
        unsigned int v19 = gACMLoggingLevel;
      }
    }
  }
  int v39 = a3;
  if (a8)
  {
    uint64_t v22 = a8;
    uint64_t v23 = a7;
    do
    {
      if (v19 <= 0x14)
      {
        printf("%02x ", *v23);
        unsigned int v19 = gACMLoggingLevel;
      }
      ++v23;
      --v22;
    }
    while (v22);
  }
  if (v19 < 0x15)
  {
    putchar(10);
    if (gACMLoggingLevel <= 0x14u)
    {
      printf("%s: %s: parameters = %p, parameterCount = %u.\n", "ACM", "processAclCommandInternal", a9, a10);
      if (gACMLoggingLevel <= 0x14u)
      {
        printf("%s: %s: maxGlobalCredentialAge = %u.\n", "ACM", "processAclCommandInternal", a11);
        if (gACMLoggingLevel <= 0x14u)
        {
          printf("%s: %s: constraintState = %p.\n", "ACM", "processAclCommandInternal", a12);
          if (gACMLoggingLevel <= 0x14u) {
            printf("%s: %s: requirePasscode = %p.\n", "ACM", "processAclCommandInternal", a13);
          }
        }
      }
    }
  }
  if (a7 || a9 || a12)
  {
    if (a5) {
      BOOL v26 = a6 == 0;
    }
    else {
      BOOL v26 = 1;
    }
    int v27 = v26;
    unsigned int v24 = 70;
    uint64_t v25 = 4294967293;
    if (!a7) {
      goto LABEL_79;
    }
    if (!a8) {
      goto LABEL_79;
    }
    if (v27) {
      goto LABEL_79;
    }
    unsigned int v24 = 70;
    uint64_t v25 = 4294967293;
    if ((a9 != 0) != (a10 != 0) || !a12) {
      goto LABEL_79;
    }
    size_t v45 = 0;
    unint64_t v44 = 4096;
    if (gACMLoggingLevel <= 0xAu) {
      printf("%s: %s: called.\n", "ACM", "processAclInternal");
    }
    uint64_t SerializedProcessAclSize = GetSerializedProcessAclSize((uint64_t)a4, (uint64_t)a5, a6, (uint64_t)a7, a8, a11, a9, a10, &v45);
    if (SerializedProcessAclSize)
    {
      uint64_t v25 = SerializedProcessAclSize;
      unsigned int v37 = 70;
      goto LABEL_74;
    }
    uint64_t v29 = v45;
    __int16 v30 = acm_mem_alloc_data(v45);
    acm_mem_alloc_info("<data>", v30, v29, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1776, "processAclInternal");
    if (!v30)
    {
      unsigned int v37 = 70;
      uint64_t v25 = 4294967292;
      goto LABEL_74;
    }
    unint64_t v44 = 4096;
    unint64_t v31 = acm_mem_alloc_data(0x1000uLL);
    acm_mem_alloc_info("<data>", v31, 4096, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1780, "processAclInternal");
    if (!v31)
    {
      unint64_t v35 = 0;
      unint64_t v34 = 0;
      uint64_t v25 = 4294967292;
      goto LABEL_68;
    }
    uint64_t v32 = SerializeProcessAcl(a4, a5, a6, a7, a8, a11, a9, a10, (uint64_t)v30, &v45);
    if (v32 || (uint64_t v32 = a1(a2, v39, 0, (char *)v30, v45, v31, (uint64_t *)&v44), v32))
    {
      uint64_t v25 = v32;
      unint64_t v34 = 0;
      unint64_t v35 = 0;
      goto LABEL_67;
    }
    unint64_t v33 = v44;
    if (v44 >= 8)
    {
      *a12 = *v31;
      if (a13) {
        *a13 = v31[1] != 0;
      }
      uint64_t v25 = 0;
      unint64_t v34 = 0;
      if (v39 != 30 || !a14)
      {
        unint64_t v35 = 0;
        goto LABEL_67;
      }
      unint64_t v35 = 0;
      if (!a15)
      {
LABEL_67:
        acm_mem_free_info("<data>", v31, 0x1000uLL, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1817, "processAclInternal");
        acm_mem_free_data(v31, 0x1000uLL);
LABEL_68:
        rsize_t v36 = v45;
        acm_mem_free_info("<data>", v30, v45, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1821, "processAclInternal");
        acm_mem_free_data(v30, v36);
        if (v25 && v35)
        {
          acm_mem_free_info("<data>", v35, v34, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1825, "processAclInternal");
          acm_mem_free_data(v35, v34);
          unsigned int v37 = 70;
        }
        else if (v25)
        {
          unsigned int v37 = 70;
        }
        else
        {
          unsigned int v37 = 10;
        }
LABEL_74:
        if (v37 >= gACMLoggingLevel) {
          printf("%s: %s: returning, err = %ld.\n", "ACM", "processAclInternal", (int)v25);
        }
        goto LABEL_76;
      }
      if (v33 >= 0xC)
      {
        unint64_t v34 = v31[2];
        if (v34)
        {
          if (v33 >= v34 + 12)
          {
            unint64_t v35 = acm_mem_alloc_data(v31[2]);
            acm_mem_alloc_info("<data>", v35, v34, "/Library/Caches/com.apple.xbs/Sources/AppleCredentialManager_ClientLibs/common/LibCall.c", 1805, "processAclInternal");
            if (v35)
            {
              memcpy(v35, v31 + 3, v34);
              uint64_t v25 = 0;
              *a14 = v35;
              *a15 = v34;
            }
            else
            {
              uint64_t v25 = 4294967292;
            }
            goto LABEL_67;
          }
          goto LABEL_84;
        }
        unint64_t v34 = 0;
        unint64_t v35 = 0;
        uint64_t v25 = 0;
        goto LABEL_67;
      }
    }
    unint64_t v34 = 0;
LABEL_84:
    unint64_t v35 = 0;
    uint64_t v25 = 4294967291;
    goto LABEL_67;
  }
  if (a4)
  {
    unsigned int v24 = 70;
    uint64_t v25 = 4294967293;
    goto LABEL_79;
  }
  unsigned int v24 = 70;
  uint64_t v25 = 4294967293;
  if (a5 && a13 && a6)
  {
    uint64_t v25 = aclRequiresPasscodeInternal(a1, a2, a5, a6, a13);
LABEL_76:
    if (v25) {
      unsigned int v24 = 70;
    }
    else {
      unsigned int v24 = 10;
    }
  }
LABEL_79:
  if (v24 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "processAclCommandInternal", (int)v25);
  }
  return v25;
}

uint64_t LibCall_ACMSecContextProcessAclAndCopyAuthMethod(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, int *, uint64_t *), uint64_t a2, _OWORD *a3, unsigned __int8 *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, _DWORD *a8, unsigned int a9, unsigned int a10, _DWORD *a11, BOOL *a12, void *a13, unint64_t *a14)
{
  return processAclCommandInternal(a1, a2, 30, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t LibCall_ACMSecContextVerifyAclConstraintAndCopyRequirement(uint64_t (*a1)(uint64_t, uint64_t, void, void *, size_t, unsigned int *, unint64_t *), uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, const void *a6, unsigned int a7, unsigned __int8 a8, _DWORD *a9, unsigned int a10, unsigned int a11, BOOL *a12, int **a13)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSecContextVerifyAclConstraintAndCopyRequirement");
  }
  unsigned int v21 = 70;
  uint64_t v22 = 4294967293;
  if (a3)
  {
    if (a4)
    {
      if (a5)
      {
        unsigned int v21 = 70;
        uint64_t v22 = 4294967293;
        if ((a9 != 0) == (a10 != 0))
        {
          if (a12)
          {
            uint64_t v22 = verifyAclConstraintInternal(a1, a2, 11, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
            if (v22) {
              unsigned int v21 = 70;
            }
            else {
              unsigned int v21 = 10;
            }
          }
        }
      }
    }
  }
  if (v21 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSecContextVerifyAclConstraintAndCopyRequirement", (int)v22);
  }
  return v22;
}

uint64_t LibCall_ACMSecCredentialProviderEnrollmentStateChangedForUser(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, void, void), uint64_t a2, const void *a3, unsigned int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, uint64_t a9)
{
  int v16 = a1;
  if (gACMLoggingLevel <= 0xAu) {
    a1 = (uint64_t (*)(uint64_t, uint64_t, void, char *, uint64_t, void, void))printf("%s: %s: called.\n", "ACM", "LibCall_ACMSecCredentialProviderEnrollmentStateChangedForUser");
  }
  BOOL v17 = a4 - 113 < 0xFFFFFF90;
  if (!a3) {
    BOOL v17 = a4 != 0;
  }
  if (v17)
  {
    unsigned int v18 = 70;
    uint64_t v19 = 4294967293;
  }
  else
  {
    unsigned int v18 = 70;
    uint64_t v19 = 4294967293;
    if (a8)
    {
      if (a9 == 16)
      {
        uint64_t v19 = 4294967293;
        if (a5)
        {
          if (a6 == 16)
          {
            uint64_t v20 = a4 + 36;
            __chkstk_darwin(a1);
            uint64_t v22 = (char *)&v24 - ((v21 + 51) & 0x1FFFFFFF0);
            *(_DWORD *)uint64_t v22 = a7;
            *(_OWORD *)(v22 + 4) = *a8;
            *(_OWORD *)(v22 + 20) = *a5;
            if (a3) {
              memcpy(v22 + 36, a3, v21);
            }
            uint64_t v19 = v16(a2, 14, 0, v22, v20, 0, 0);
            if (v19) {
              unsigned int v18 = 70;
            }
            else {
              unsigned int v18 = 10;
            }
          }
        }
      }
    }
  }
  if (v18 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSecCredentialProviderEnrollmentStateChangedForUser", (int)v19);
  }
  return v19;
}

uint64_t LibCall_ACMSecSetBuiltinBiometry(uint64_t (*a1)(uint64_t, uint64_t, void, char *, size_t, void, void), uint64_t a2, char a3)
{
  char v9 = a3;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSecSetBuiltinBiometry");
  }
  uint64_t v5 = LibCall_ACMSetEnvironmentVariable(a1, a2, 30, 0, 0, 0, &v9, 1uLL);
  uint64_t v6 = v5;
  if (v5) {
    unsigned int v7 = 70;
  }
  else {
    unsigned int v7 = 10;
  }
  if (v7 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSecSetBuiltinBiometry", (int)v5);
  }
  return v6;
}

uint64_t LibCall_ACMSecSetBiometryAvailability(uint64_t (*a1)(uint64_t, uint64_t, void, int *, uint64_t, uint64_t, uint64_t), uint64_t a2, char a3, int a4)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSecSetBiometryAvailability");
  }
  char v15 = 0;
  unint64_t v14 = 1;
  char v13 = 0;
  uint64_t v8 = LibCall_ACMGetEnvironmentVariable(a1, a2, 6, (uint64_t)&v15, (uint64_t)&v14);
  if (v8)
  {
    uint64_t v11 = v8;
    unsigned int v9 = 70;
  }
  else
  {
    unsigned int v9 = 70;
    if (v14 > 1)
    {
      uint64_t v11 = 4294967291;
    }
    else
    {
      char v10 = v15 & ~a3;
      if (a4) {
        char v10 = v15 | a3;
      }
      char v13 = v10;
      uint64_t v11 = LibCall_ACMSetEnvironmentVariable((uint64_t (*)(uint64_t, uint64_t, void, char *, size_t, void, void))a1, a2, 6, 0, 0, 0, &v13, 1uLL);
      if (v11) {
        unsigned int v9 = 70;
      }
      else {
        unsigned int v9 = 10;
      }
    }
  }
  if (v9 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSecSetBiometryAvailability", (int)v11);
  }
  return v11;
}

uint64_t LibCall_ACMSecContextGetUnlockSecret(uint64_t (*a1)(void, void, void, void, void, void, void), uint64_t a2, _OWORD *a3, _DWORD *a4, unsigned int a5, void *a6, size_t *a7, unsigned char *a8)
{
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSecContextGetUnlockSecret");
  }
  memset(v27, 0, sizeof(v27));
  uint64_t v25 = 64;
  uint64_t v24 = 129;
  if (!a3) {
    goto LABEL_18;
  }
  unsigned int v16 = 70;
  uint64_t v17 = 4294967293;
  if (!a6 || !a7 || !a8) {
    goto LABEL_14;
  }
  if ((a4 != 0) != (a5 != 0))
  {
LABEL_18:
    unsigned int v16 = 70;
    uint64_t v17 = 4294967293;
    goto LABEL_14;
  }
  uint64_t UnlockSecret_Serialize = LibSer_GetUnlockSecret_Serialize(a3, a4, a5, v27, &v25);
  if (UnlockSecret_Serialize
    || (uint64_t UnlockSecret_Serialize = a1(a2, 50, 0, v27, v25, v26, &v24), UnlockSecret_Serialize)
    || (size_t __n = 0,
        __src = 0,
        char v21 = 0,
        uint64_t UnlockSecret_Serialize = LibSer_GetUnlockSecretResponse_Deserialize(v26, v24, &__src, &__n, &v21),
        UnlockSecret_Serialize))
  {
    uint64_t v17 = UnlockSecret_Serialize;
  }
  else
  {
    size_t v19 = __n;
    if (*a7 < __n)
    {
      uint64_t v17 = 4294967276;
    }
    else
    {
      if (__src)
      {
        memcpy(a6, __src, __n);
        uint64_t v17 = 0;
        *a7 = v19;
        *a8 = v21;
        unsigned int v16 = 10;
        goto LABEL_14;
      }
      uint64_t v17 = 4294967291;
    }
  }
  unsigned int v16 = 70;
LABEL_14:
  if (v16 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSecContextGetUnlockSecret", (int)v17);
  }
  return v17;
}

uint64_t LibCall_ACMSEPControl(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, unsigned int *, unint64_t *), uint64_t a2, const void *a3, size_t a4, uint64_t a5, _DWORD *a6, unsigned int a7, void *a8, size_t *a9)
{
  __int16 v30 = a8;
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "LibCall_ACMSEPControl");
  }
  unint64_t v33 = 1024;
  uint64_t v34 = 0;
  if (!a1) {
    goto LABEL_17;
  }
  BOOL v16 = a4 - 4097 < 0xFFFFFFFFFFFFF000;
  if (!a3) {
    BOOL v16 = a4 != 0;
  }
  if (v16)
  {
LABEL_17:
    unsigned int v25 = 70;
    uint64_t v24 = 4294967293;
    goto LABEL_21;
  }
  uint64_t Size = LibSer_SEPControl_GetSize(a4, a6, a7, &v34);
  if (Size)
  {
LABEL_18:
    uint64_t v24 = Size;
LABEL_25:
    unsigned int v25 = 70;
    goto LABEL_21;
  }
  uint64_t v18 = a5;
  uint64_t v19 = a2;
  uint64_t v20 = (_OWORD *)__chkstk_darwin(v18);
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = LibSer_SEPControl_Serialize(v20, a6, a7, a3, a4, (uint64_t)v22, &v34);
  if (v23)
  {
    uint64_t v24 = v23;
    goto LABEL_20;
  }
  uint64_t v24 = a1(v19, 51, 0, v22, v34, v35, &v33);
  if (v24)
  {
LABEL_20:
    unsigned int v25 = 70;
    goto LABEL_21;
  }
  unsigned int v25 = 10;
  BOOL v26 = v30;
  if (!v30 || !a9) {
    goto LABEL_21;
  }
  size_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t Size = LibSer_SEPControlResponse_Deserialize(v35, v33, &v32, &v31);
  if (Size) {
    goto LABEL_18;
  }
  size_t v27 = v31;
  if (*a9 < v31)
  {
    uint64_t v24 = 4294967276;
    goto LABEL_25;
  }
  if (v32) {
    memcpy(v26, v32, v31);
  }
  uint64_t v24 = 0;
  *a9 = v27;
  unsigned int v25 = 10;
LABEL_21:
  if (v25 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "LibCall_ACMSEPControl", (int)v24);
  }
  return v24;
}

uint64_t aclRequiresPasscodeInternal(uint64_t (*a1)(uint64_t, uint64_t, void, char *, uint64_t, int *, uint64_t *), uint64_t a2, const void *a3, unsigned int a4, unsigned char *a5)
{
  int v19 = 0;
  uint64_t v18 = 4;
  size_t v10 = a4;
  uint64_t v11 = a4 + 4;
  __chkstk_darwin(a1);
  uint64_t v12 = (unsigned int *)((char *)&v17 - ((v10 + 19) & 0x1FFFFFFF0));
  if (gACMLoggingLevel <= 0xAu) {
    printf("%s: %s: called.\n", "ACM", "aclRequiresPasscodeInternal");
  }
  unsigned int v13 = 70;
  uint64_t v14 = 4294967293;
  if (a3 && a5)
  {
    unsigned int *v12 = a4;
    memcpy(v12 + 1, a3, v10);
    uint64_t v15 = a1(a2, 17, 0, (char *)&v17 - ((v10 + 19) & 0x1FFFFFFF0), v11, &v19, &v18);
    if (v15)
    {
      uint64_t v14 = v15;
      unsigned int v13 = 70;
    }
    else if (v18 == 4)
    {
      uint64_t v14 = 0;
      *a5 = 1;
      unsigned int v13 = 10;
    }
    else
    {
      unsigned int v13 = 70;
      uint64_t v14 = 4294967291;
    }
  }
  if (v13 >= gACMLoggingLevel) {
    printf("%s: %s: returning, err = %ld.\n", "ACM", "aclRequiresPasscodeInternal", (int)v14);
  }
  return v14;
}

void LibCall_ACMKernelControl_cold_1()
{
  __assert_rtn("LibCall_ACMKernelControl", "LibCall.c", 373, "commandCursor == commandBuffer + sizeof(commandBuffer)");
}

uint64_t __getTTSVBUILoaderClass_block_invoke_cold_1()
{
  int v0 = abort_report_np();
  return __100__VoiceOverCommandsByKeyboardShortcutListController_tableView_commitEditingStyle_forRowAtIndexPath___block_invoke_2_cold_1(v0, v1, v2);
}

uint64_t __getBFFStyleClass_block_invoke_cold_1()
{
  int v0 = abort_report_np();
  return __78__AXVoiceOverPunctuationGroupController__punctuationGroupChangedFromCoreData___block_invoke_cold_1(v0, v1, v2);
}

void __getAPGuardClass_block_invoke_cold_1()
{
  int v0 = (ClarityUIOnboardingSettingsWrapperController *)abort_report_np();
  [(ClarityUIOnboardingSettingsWrapperController *)v0 nextButtonTapped:v2];
}

void siriSpeakingSampleLocString_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412802;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  __int16 v7 = 2112;
  CFStringRef v8 = @"%f";
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "Error creating string: %@ [%@/%@]", (uint8_t *)&v3, 0x20u);
}

uint64_t __getBBSettingsGatewayClass_block_invoke_cold_1()
{
  int v0 = abort_report_np();
  return __83__VoiceOverCommandsByTouchGestureListController_tableView_didSelectRowAtIndexPath___block_invoke_2_cold_1(v0, v1, v2);
}

void sub_168E70(NSURL *retstr@<X8>)
{
}

uint64_t sub_168E80()
{
  return URL.init(string:)();
}

uint64_t sub_168E90()
{
  return type metadata accessor for URL();
}

uint64_t sub_168EA0()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_168EB0()
{
  return Locale.LanguageCode.icuDisplayName.getter();
}

uint64_t sub_168EC0()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t sub_168ED0()
{
  return Locale.Language.languageCode.getter();
}

uint64_t sub_168EE0()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_168EF0()
{
  return Locale.language.getter();
}

uint64_t sub_168F00()
{
  return type metadata accessor for Locale();
}

NSIndexPath sub_168F10()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t sub_168F20()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_168F30()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_168F40()
{
  return VoiceResolver.__allocating_init(voiceSource:requiredTraits:sortMode:)();
}

uint64_t sub_168F50()
{
  return type metadata accessor for VoiceResolver.Mode();
}

uint64_t sub_168F60()
{
  return dispatch thunk of VoiceResolver.locales.getter();
}

uint64_t sub_168F70()
{
  return type metadata accessor for VoiceResolver();
}

uint64_t sub_168F80()
{
  return static CoreSynthesizer.Voice.Trait.personal.getter();
}

uint64_t sub_168F90()
{
  return type metadata accessor for CoreSynthesizer.Voice.Trait();
}

uint64_t sub_168FA0()
{
  return CoreSynthesizer.Voice.traits.getter();
}

uint64_t sub_168FB0()
{
  return static DefaultVoiceSource.shared.getter();
}

uint64_t sub_168FC0()
{
  return type metadata accessor for DefaultVoiceSource();
}

uint64_t sub_168FD0()
{
  return VoiceSelection.voiceSettings.setter();
}

uint64_t sub_168FE0()
{
  return VoiceSelection.voiceId.setter();
}

uint64_t sub_168FF0()
{
  return type metadata accessor for VoiceSelection();
}

uint64_t sub_169000()
{
  return AVSEnrollmentCoordinatorView.init(completionHandler:axActionsDictionary:systemActionsDictionary:)();
}

uint64_t sub_169010()
{
  return type metadata accessor for AVSEnrollmentCoordinatorView();
}

uint64_t sub_169020()
{
  return static AXSUIVoiceSettings.Settings.perVoiceSettings.getter();
}

uint64_t sub_169030()
{
  return static AXSUIVoiceSettings.Settings.voiceSelection.getter();
}

uint64_t sub_169040()
{
  return static AXSUIVoiceSettings.Settings.rate.getter();
}

uint64_t sub_169050()
{
  return static AXSUIVoiceSettings.Settings.pitch.getter();
}

uint64_t sub_169060()
{
  return type metadata accessor for AXSUIVoiceSettings.Settings();
}

uint64_t sub_169070()
{
  return AXSUIVoiceSettings.init<A>(selection:preferredLocale:enabledSettings:languages:extraContent:)();
}

uint64_t sub_169080()
{
  return type metadata accessor for AXSUIVoiceSettings();
}

uint64_t sub_169090()
{
  return AXSUISpecifierLink.init<>(id:navigationTitle:uiKitDestination:label:)();
}

uint64_t sub_1690A0()
{
  return AXSUILanguageVoicePicker.init(voiceTable:macroLanguageDisambiguations:overrideLanguage:)();
}

uint64_t sub_1690B0()
{
  return type metadata accessor for AXSUILanguageVoicePicker();
}

uint64_t sub_1690C0()
{
  return AXSUIVoiceOverSpeechView.init(overrideSettings:extraSettings:)();
}

uint64_t sub_1690D0()
{
  return AXSUIPlatformFormListView.init(content:)();
}

uint64_t sub_1690E0()
{
  return type metadata accessor for AXSUIPreferenceController();
}

uint64_t sub_1690F0()
{
  return AXSUIPreferenceController.__allocating_init<A>(_:)();
}

uint64_t sub_169100()
{
  return LiveSpeechVoiceSelectionView.init()();
}

uint64_t sub_169110()
{
  return type metadata accessor for LiveSpeechVoiceSelectionView();
}

uint64_t sub_169120()
{
  return LiveSpeechCategoryManagerView.init()();
}

uint64_t sub_169130()
{
  return type metadata accessor for LiveSpeechCategoryManagerView();
}

uint64_t sub_169140()
{
  return AXSUISystemDefaultVoiceSelectionCell.init(voiceTable:)();
}

uint64_t sub_169150()
{
  return type metadata accessor for AXSUISystemDefaultVoiceSelectionCell();
}

uint64_t sub_169160()
{
  return type metadata accessor for CoreSynthesisVoicePickableFetcher.SiriVoicePolicy();
}

uint64_t sub_169170()
{
  return CoreSynthesisVoicePickableFetcher.init(source:requiredTraits:siriPolicy:filterBlock:)();
}

uint64_t sub_169180()
{
  return type metadata accessor for CoreSynthesisVoicePickableFetcher();
}

uint64_t sub_169190()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_1691A0()
{
  return Logger.logObject.getter();
}

uint64_t sub_1691B0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1691C0()
{
  return Logger.init(_:)();
}

uint64_t sub_1691D0()
{
  return static Tips.showAllTipsForTesting()();
}

uint64_t sub_1691E0()
{
  return static Tips.resetDatastore()();
}

uint64_t sub_1691F0()
{
  return static Tips.configure(_:)();
}

uint64_t sub_169200()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_169210()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_169220()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_169230()
{
  return ProgressView<>.init<>()();
}

uint64_t sub_169240()
{
  return _FrameLayout.init(width:height:alignment:)();
}

void sub_169250()
{
}

uint64_t sub_169260()
{
  return type metadata accessor for DismissAction();
}

uint64_t sub_169270()
{
  return _UIHostingView.init(rootView:)();
}

uint64_t sub_169280()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_169290()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_1692A0()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_1692B0()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1692C0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1692D0()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t sub_1692E0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_1692F0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_169300()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_169310()
{
  return EnvironmentValues.init()();
}

uint64_t sub_169320()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_169330()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_169340()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_169350()
{
  return static AccessibilityTraits.isSelected.getter();
}

uint64_t sub_169360()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_169370()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_169380()
{
  return UIHostingController.init(rootView:)();
}

uint64_t sub_169390()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1693A0()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t sub_1693B0()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t sub_1693C0()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_1693D0()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_1693E0()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_1693F0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_169400()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_169410()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_169420()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_169430()
{
  return List<>.init(content:)();
}

uint64_t sub_169440()
{
  return Text.init<A>(_:)();
}

uint64_t sub_169450()
{
  return View.axSettingsAppearance()();
}

uint64_t sub_169460()
{
  return View.axSpecifier(_:)();
}

uint64_t sub_169470()
{
  return View.voiceFetcher(_:)();
}

uint64_t sub_169480()
{
  return View.voiceResolver(_:)();
}

uint64_t sub_169490()
{
  return View.bind<A, B>(stream:to:on:animated:)();
}

uint64_t sub_1694A0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_1694B0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_1694C0()
{
  return View.fontWeight(_:)();
}

uint64_t sub_1694D0()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t sub_1694E0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1694F0()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_169500()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_169510()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t sub_169520()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_169530()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_169540()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_169550()
{
  return static Color.clarityUIButtonBackground.getter();
}

uint64_t sub_169560()
{
  return static Color.clarityUIContentBackground.getter();
}

uint64_t sub_169570()
{
  return static Color.gray.getter();
}

uint64_t sub_169580()
{
  return static Color.white.getter();
}

uint64_t sub_169590()
{
  return Color.opacity(_:)();
}

uint64_t sub_1695A0()
{
  return Color.init(_:white:opacity:)();
}

uint64_t sub_1695B0()
{
  return Color.init(_:)();
}

uint64_t sub_1695C0()
{
  return Image.init(uiImage:)();
}

uint64_t sub_1695D0()
{
  return Image.init(systemName:)();
}

uint64_t sub_1695E0()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_1695F0()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_169600()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_169610()
{
  return State.wrappedValue.getter();
}

uint64_t sub_169620()
{
  return State.wrappedValue.setter();
}

uint64_t sub_169630()
{
  return State.projectedValue.getter();
}

uint64_t sub_169640()
{
  return Toggle<>.init<A>(_:isOn:)();
}

uint64_t sub_169650()
{
  return Binding.to<A>(_:)();
}

uint64_t sub_169660()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_169670()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_169680()
{
  return Binding.init(get:set:)();
}

uint64_t sub_169690()
{
  return static Binding.constant(_:)();
}

uint64_t sub_1696A0()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_1696B0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1696C0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1696D0()
{
  return Section<>.init<A>(_:content:)();
}

uint64_t sub_1696E0()
{
  return Section<>.init(content:)();
}

uint64_t sub_1696F0()
{
  return Bindable.wrappedValue.getter();
}

uint64_t sub_169700()
{
  return Bindable.projectedValue.getter();
}

uint64_t sub_169710()
{
  return Bindable<A>.init(wrappedValue:)();
}

uint64_t sub_169720()
{
  return Bindable<A>.subscript.getter();
}

uint64_t sub_169730()
{
  return type metadata accessor for Bindable();
}

uint64_t sub_169740()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t sub_169750()
{
  return type metadata accessor for GridItem();
}

uint64_t sub_169760()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t sub_169770()
{
  return static Alignment.top.getter();
}

uint64_t sub_169780()
{
  return static Alignment.bottom.getter();
}

uint64_t sub_169790()
{
  return static Alignment.center.getter();
}

uint64_t sub_1697A0()
{
  return static Alignment.leading.getter();
}

uint64_t sub_1697B0()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_1697C0()
{
  return AnyLayout.init<A>(_:)();
}

uint64_t sub_1697D0()
{
  return LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_1697E0()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1697F0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_169800()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_169810()
{
  return SettingsPlacardView<>.init(localizedTitle:localizedSubtitle:graphicIconTypeIdentifier:updateNavigationTitleAlpha:linkAction:)();
}

NSDictionary sub_169820()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_169830()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_169840()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_169850()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_169860()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_169870()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_169880()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_169890()
{
  return String.hash(into:)();
}

void sub_1698A0(Swift::String a1)
{
}

Swift::Int sub_1698B0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1698C0()
{
  return String.init<A>(_:)();
}

uint64_t sub_1698D0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1698E0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1698F0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_169900()
{
  return specialized Array._endMutation()();
}

uint64_t sub_169910()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_169920()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_169930()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber sub_169940()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_169950()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_169960()
{
  return static MainActor.shared.getter();
}

uint64_t sub_169970()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_169980()
{
  return AsyncStream.asyncMap<A>(_:)();
}

uint64_t sub_169990()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1699A0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_1699B0()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber sub_1699C0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1699D0()
{
  return AXPreferences.AssistiveTouch.scannerSpeechEnabled.getter();
}

uint64_t sub_1699E0()
{
  return AXPreferences.AssistiveTouch.scannerSpeechEnabled.setter();
}

uint64_t sub_1699F0()
{
  return AXPreferences.AssistiveTouch.scannerSpeechShouldSpeakTraits.getter();
}

uint64_t sub_169A00()
{
  return AXPreferences.AssistiveTouch.scannerSpeechShouldSpeakTraits.setter();
}

uint64_t sub_169A10()
{
  return AXPreferences.AssistiveTouch.$defaultVoiceSelectionsByLanguage.getter();
}

uint64_t sub_169A20()
{
  return AXPreferences.AssistiveTouch.scannerSpeechIsInterruptedByScanning.getter();
}

uint64_t sub_169A30()
{
  return AXPreferences.AssistiveTouch.scannerSpeechIsInterruptedByScanning.setter();
}

uint64_t sub_169A40()
{
  return type metadata accessor for AXPreferences.AssistiveTouch();
}

uint64_t sub_169A50()
{
  return AXPreferences.SpokenContentSettings.$voiceSelectionsByLanguage.getter();
}

uint64_t sub_169A60()
{
  return AXPreferences.SpokenContentSettings.$macroLanguageDisambiguations.getter();
}

uint64_t sub_169A70()
{
  return AXPreferences.SpokenContentSettings.resolver.getter();
}

uint64_t sub_169A80()
{
  return static AXPreferences.shared.getter();
}

uint64_t sub_169A90()
{
  return AXPreferences.VoiceOver.Activity.voiceSelection.modify();
}

uint64_t sub_169AA0()
{
  return AXPreferences.VoiceOver.Activity.voiceSelection.getter();
}

uint64_t sub_169AB0()
{
  return AXPreferences.VoiceOver.Activity.voiceSelection.setter();
}

uint64_t sub_169AC0()
{
  return AXPreferences.VoiceOver.Activity._bridgeToObjectiveC()();
}

uint64_t sub_169AD0()
{
  return static AXPreferences.VoiceOver.Activity._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_169AE0()
{
  return type metadata accessor for AXPreferences.VoiceOver.Activity();
}

uint64_t sub_169AF0()
{
  return AXPreferences.VoiceOver.resolver.getter();
}

uint64_t sub_169B00()
{
  return type metadata accessor for AXPreferences();
}

uint64_t sub_169B10()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_169B20()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_169B30()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t sub_169B40()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_169B50()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_169B60()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_169B70()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_169B80()
{
  return StringProtocol.localizedStandardCompare<A>(_:)();
}

uint64_t sub_169B90()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_169BA0()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_169BB0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_169BC0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_169BD0()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_169BE0()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_169BF0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_169C00()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_169C10(Swift::Int a1)
{
}

uint64_t sub_169C20()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_169C30()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_169C40()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_169C50()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_169C60()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_169C70()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_169C80()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_169C90()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_169CA0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_169CC0(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_169CD0()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_169CE0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_169CF0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_169D00()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_169D10()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_169D20()
{
  return Hasher.init(_seed:)();
}

Swift::Int sub_169D30()
{
  return Hasher._finalize()();
}

uint64_t sub_169D40()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t AFAssistantCapable()
{
  return _AFAssistantCapable();
}

uint64_t AFDeviceSupportsEchoCancellation()
{
  return _AFDeviceSupportsEchoCancellation();
}

uint64_t AFPreferencesAssistantEnabled()
{
  return _AFPreferencesAssistantEnabled();
}

uint64_t AFPreferencesSetTypeToSiriEnabled()
{
  return _AFPreferencesSetTypeToSiriEnabled();
}

uint64_t AFSupportsCallHangUp()
{
  return _AFSupportsCallHangUp();
}

uint64_t ASTLogMouse()
{
  return _ASTLogMouse();
}

uint64_t AXAirPodsLocalizedStringForKey()
{
  return _AXAirPodsLocalizedStringForKey();
}

uint64_t AXAppNameForBundleId()
{
  return _AXAppNameForBundleId();
}

uint64_t AXApplicationSupportsHapticMusic()
{
  return _AXApplicationSupportsHapticMusic();
}

uint64_t AXAssetLocalizedString()
{
  return _AXAssetLocalizedString();
}

uint64_t AXAssistiveTouchAccessibilityIcons()
{
  return _AXAssistiveTouchAccessibilityIcons();
}

uint64_t AXAssistiveTouchChangeIconCount()
{
  return _AXAssistiveTouchChangeIconCount();
}

uint64_t AXAssistiveTouchCustomGesturesIcons()
{
  return _AXAssistiveTouchCustomGesturesIcons();
}

uint64_t AXAssistiveTouchDwellIcons()
{
  return _AXAssistiveTouchDwellIcons();
}

uint64_t AXAssistiveTouchEyeTrackingIcons()
{
  return _AXAssistiveTouchEyeTrackingIcons();
}

uint64_t AXAssistiveTouchNamedLayout()
{
  return _AXAssistiveTouchNamedLayout();
}

uint64_t AXAssistiveTouchScannerColorDescription()
{
  return _AXAssistiveTouchScannerColorDescription();
}

uint64_t AXAssistiveTouchScrollIcons()
{
  return _AXAssistiveTouchScrollIcons();
}

uint64_t AXAssistiveTouchSiriShortcutsIcons()
{
  return _AXAssistiveTouchSiriShortcutsIcons();
}

uint64_t AXAssistiveTouchSpecificActionIcons()
{
  return _AXAssistiveTouchSpecificActionIcons();
}

uint64_t AXAssistiveTouchSystemIcons()
{
  return _AXAssistiveTouchSystemIcons();
}

uint64_t AXAudioHDMIChannelLabelDescription()
{
  return _AXAudioHDMIChannelLabelDescription();
}

uint64_t AXCFormattedString()
{
  return _AXCFormattedString();
}

uint64_t AXCLanguageConvertToCanonicalForm()
{
  return _AXCLanguageConvertToCanonicalForm();
}

uint64_t AXColorizeFormatLog()
{
  return _AXColorizeFormatLog();
}

uint64_t AXCopyUnicodeDescriptionStringForCharacter()
{
  return _AXCopyUnicodeDescriptionStringForCharacter();
}

uint64_t AXDeviceCanArmApplePay()
{
  return _AXDeviceCanArmApplePay();
}

uint64_t AXDeviceHas3DTouch()
{
  return _AXDeviceHas3DTouch();
}

uint64_t AXDeviceHasForcePress3dTouch()
{
  return _AXDeviceHasForcePress3dTouch();
}

uint64_t AXDeviceHasGreyMatterEnabled()
{
  return _AXDeviceHasGreyMatterEnabled();
}

uint64_t AXDeviceHasHomeButton()
{
  return _AXDeviceHasHomeButton();
}

uint64_t AXDeviceHasLongPress3dTouch()
{
  return _AXDeviceHasLongPress3dTouch();
}

uint64_t AXDeviceHasPearl()
{
  return _AXDeviceHasPearl();
}

uint64_t AXDeviceHasSideButton()
{
  return _AXDeviceHasSideButton();
}

uint64_t AXDeviceHasStaccato()
{
  return _AXDeviceHasStaccato();
}

uint64_t AXDeviceHasTopButton()
{
  return _AXDeviceHasTopButton();
}

uint64_t AXDeviceHasTopTouchIDButton()
{
  return _AXDeviceHasTopTouchIDButton();
}

uint64_t AXDeviceIsKShotMedinaEnabled()
{
  return _AXDeviceIsKShotMedinaEnabled();
}

uint64_t AXDeviceIsMultiUser()
{
  return _AXDeviceIsMultiUser();
}

uint64_t AXDeviceIsPad()
{
  return _AXDeviceIsPad();
}

uint64_t AXDeviceIsPhone()
{
  return _AXDeviceIsPhone();
}

uint64_t AXDeviceIsPhoneIdiom()
{
  return _AXDeviceIsPhoneIdiom();
}

uint64_t AXDeviceIsPod()
{
  return _AXDeviceIsPod();
}

uint64_t AXDeviceIsRealityDevice()
{
  return _AXDeviceIsRealityDevice();
}

uint64_t AXDeviceIsRingerSwitchAvailable()
{
  return _AXDeviceIsRingerSwitchAvailable();
}

uint64_t AXDeviceSupportsAirPodsHeadGestures()
{
  return _AXDeviceSupportsAirPodsHeadGestures();
}

uint64_t AXDeviceSupportsBackTap()
{
  return _AXDeviceSupportsBackTap();
}

uint64_t AXDeviceSupportsCameraButton()
{
  return _AXDeviceSupportsCameraButton();
}

uint64_t AXDeviceSupportsConcurrentHPLPMics()
{
  return _AXDeviceSupportsConcurrentHPLPMics();
}

uint64_t AXDeviceSupportsDetectionMode()
{
  return _AXDeviceSupportsDetectionMode();
}

uint64_t AXDeviceSupportsHapticMusic()
{
  return _AXDeviceSupportsHapticMusic();
}

uint64_t AXDeviceSupportsHoverText()
{
  return _AXDeviceSupportsHoverText();
}

uint64_t AXDeviceSupportsHoverTextTyping()
{
  return _AXDeviceSupportsHoverTextTyping();
}

uint64_t AXDeviceSupportsLiveSpeech()
{
  return _AXDeviceSupportsLiveSpeech();
}

uint64_t AXDeviceSupportsLiveSpeechCategory()
{
  return _AXDeviceSupportsLiveSpeechCategory();
}

uint64_t AXDeviceSupportsManyTouches()
{
  return _AXDeviceSupportsManyTouches();
}

uint64_t AXDeviceSupportsMotionCues()
{
  return _AXDeviceSupportsMotionCues();
}

uint64_t AXDeviceSupportsOnDeviceEyeTracking()
{
  return _AXDeviceSupportsOnDeviceEyeTracking();
}

uint64_t AXDeviceSupportsPencilHover()
{
  return _AXDeviceSupportsPencilHover();
}

uint64_t AXDeviceSupportsPhotosensitiveMitigation()
{
  return _AXDeviceSupportsPhotosensitiveMitigation();
}

uint64_t AXDeviceSupportsSideApp()
{
  return _AXDeviceSupportsSideApp();
}

uint64_t AXDeviceSupportsVirtualTrackpad()
{
  return _AXDeviceSupportsVirtualTrackpad();
}

uint64_t AXDeviceSupportsVoiceOverOnboarding()
{
  return _AXDeviceSupportsVoiceOverOnboarding();
}

uint64_t AXDeviceSupportsVoiceTriggers()
{
  return _AXDeviceSupportsVoiceTriggers();
}

uint64_t AXDeviceSupportsVoicesRotor()
{
  return _AXDeviceSupportsVoicesRotor();
}

uint64_t AXDeviceSupportsWatchRemoteScreen()
{
  return _AXDeviceSupportsWatchRemoteScreen();
}

uint64_t AXForceTouchAvailableAndEnabled()
{
  return _AXForceTouchAvailableAndEnabled();
}

uint64_t AXFormatFloatWithPercentage()
{
  return _AXFormatFloatWithPercentage();
}

uint64_t AXFormatInteger()
{
  return _AXFormatInteger();
}

uint64_t AXFormatNumberWithOptions()
{
  return _AXFormatNumberWithOptions();
}

uint64_t AXGetSiriRequireSiriForInterruptionsInValue()
{
  return _AXGetSiriRequireSiriForInterruptionsInValue();
}

uint64_t AXHACHearingAidCapabilities()
{
  return _AXHACHearingAidCapabilities();
}

uint64_t AXHACHearingAidComplianceEnabled()
{
  return _AXHACHearingAidComplianceEnabled();
}

uint64_t AXHACHearingAidComplianceSetEnabled()
{
  return _AXHACHearingAidComplianceSetEnabled();
}

uint64_t AXHasCapability()
{
  return _AXHasCapability();
}

uint64_t AXInstalledApps()
{
  return _AXInstalledApps();
}

uint64_t AXIsHiddenAppWithBundleId()
{
  return _AXIsHiddenAppWithBundleId();
}

uint64_t AXIsInternalInstall()
{
  return _AXIsInternalInstall();
}

uint64_t AXIsLookingGlassAvailable()
{
  return _AXIsLookingGlassAvailable();
}

uint64_t AXLanguageCanonicalFormToGeneralLanguage()
{
  return _AXLanguageCanonicalFormToGeneralLanguage();
}

uint64_t AXLanguageConvertToCanonicalForm()
{
  return _AXLanguageConvertToCanonicalForm();
}

uint64_t AXLanguagesAvailableForPronuncationEditor()
{
  return _AXLanguagesAvailableForPronuncationEditor();
}

uint64_t AXLocStringForDeviceVariant()
{
  return _AXLocStringForDeviceVariant();
}

uint64_t AXLocStringKeyForExclusiveModel()
{
  return _AXLocStringKeyForExclusiveModel();
}

uint64_t AXLocStringKeyForHomeButton()
{
  return _AXLocStringKeyForHomeButton();
}

uint64_t AXLocStringKeyForHomeButtonAndExclusiveModel()
{
  return _AXLocStringKeyForHomeButtonAndExclusiveModel();
}

uint64_t AXLocStringKeyForModel()
{
  return _AXLocStringKeyForModel();
}

uint64_t AXLocalizedTimeSummary()
{
  return _AXLocalizedTimeSummary();
}

uint64_t AXLogAirPodSettings()
{
  return _AXLogAirPodSettings();
}

uint64_t AXLogAssetLoader()
{
  return _AXLogAssetLoader();
}

uint64_t AXLogAudioRouting()
{
  return _AXLogAudioRouting();
}

uint64_t AXLogBrailleHW()
{
  return _AXLogBrailleHW();
}

uint64_t AXLogCommon()
{
  return _AXLogCommon();
}

uint64_t AXLogHapticMusic()
{
  return _AXLogHapticMusic();
}

uint64_t AXLogMotionCues()
{
  return _AXLogMotionCues();
}

uint64_t AXLogPunctuationStorage()
{
  return _AXLogPunctuationStorage();
}

uint64_t AXLogSettings()
{
  return _AXLogSettings();
}

uint64_t AXLogSoundActions()
{
  return _AXLogSoundActions();
}

uint64_t AXLogTemp()
{
  return _AXLogTemp();
}

uint64_t AXLogUI()
{
  return _AXLogUI();
}

uint64_t AXLogUltron()
{
  return _AXLogUltron();
}

uint64_t AXLogUltronKShot()
{
  return _AXLogUltronKShot();
}

uint64_t AXLoggerForFacility()
{
  return _AXLoggerForFacility();
}

uint64_t AXMIDINoteOctaveForNoteOrdinal()
{
  return _AXMIDINoteOctaveForNoteOrdinal();
}

uint64_t AXMIDINoteValueForNoteOrdinal()
{
  return _AXMIDINoteValueForNoteOrdinal();
}

uint64_t AXMediaLogLanguageTranslation()
{
  return _AXMediaLogLanguageTranslation();
}

uint64_t AXOSLogLevelFromAXLogLevel()
{
  return _AXOSLogLevelFromAXLogLevel();
}

uint64_t AXParameterizedLocalizedString()
{
  return _AXParameterizedLocalizedString();
}

uint64_t AXPerformBlockAsynchronouslyOnMainThread()
{
  return _AXPerformBlockAsynchronouslyOnMainThread();
}

uint64_t AXPerformBlockOnMainThread()
{
  return _AXPerformBlockOnMainThread();
}

uint64_t AXPerformBlockOnMainThreadAfterDelay()
{
  return _AXPerformBlockOnMainThreadAfterDelay();
}

uint64_t AXPerformBlockSynchronouslyOnMainThread()
{
  return _AXPerformBlockSynchronouslyOnMainThread();
}

uint64_t AXPerformSafeBlock()
{
  return _AXPerformSafeBlock();
}

uint64_t AXPreferredContentSizeCategoryIsAccessibilityCategory()
{
  return _AXPreferredContentSizeCategoryIsAccessibilityCategory();
}

uint64_t AXPrintLine()
{
  return _AXPrintLine();
}

uint64_t AXProcessIsSetup()
{
  return _AXProcessIsSetup();
}

uint64_t AXResizeImageWithSize()
{
  return _AXResizeImageWithSize();
}

uint64_t AXRuntimeCheck_HasANE()
{
  return _AXRuntimeCheck_HasANE();
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaKShotEnrollmentEnabled()
{
  return _AXRuntimeCheck_SoundRecognitionMedinaKShotEnrollmentEnabled();
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaSupportEnabled()
{
  return _AXRuntimeCheck_SoundRecognitionMedinaSupportEnabled();
}

uint64_t AXRuntimeCheck_SupportsNearbyDeviceControl()
{
  return _AXRuntimeCheck_SupportsNearbyDeviceControl();
}

uint64_t AXRuntimeCheck_SupportsVoiceoverIndepedentVolume()
{
  return _AXRuntimeCheck_SupportsVoiceoverIndepedentVolume();
}

uint64_t AXRuntimeCheck_isANEDeviceH13plus()
{
  return _AXRuntimeCheck_isANEDeviceH13plus();
}

uint64_t AXSAssistiveTouchCursorColor()
{
  return _AXSAssistiveTouchCursorColor();
}

uint64_t AXSDKShotGatherFilesAndGenerateRadarForDetector()
{
  return _AXSDKShotGatherFilesAndGenerateRadarForDetector();
}

uint64_t AXSDSoundDetectionLocalizedTitleForType()
{
  return _AXSDSoundDetectionLocalizedTitleForType();
}

uint64_t AXSDSoundDetectionTypeForIdentifier()
{
  return _AXSDSoundDetectionTypeForIdentifier();
}

uint64_t AXSLinearValueForLogarithmicValue()
{
  return _AXSLinearValueForLogarithmicValue();
}

uint64_t AXSLogarithmicValueForLinearValue()
{
  return _AXSLogarithmicValueForLinearValue();
}

uint64_t AXSSHumanReadableDescriptionForMotionTrackingFacialExpression()
{
  return _AXSSHumanReadableDescriptionForMotionTrackingFacialExpression();
}

uint64_t AXSSHumanReadableDescriptionForMotionTrackingFacialExpressionSensitivity()
{
  return _AXSSHumanReadableDescriptionForMotionTrackingFacialExpressionSensitivity();
}

uint64_t AXSSHumanReadableDescriptionForMotionTrackingMode()
{
  return _AXSSHumanReadableDescriptionForMotionTrackingMode();
}

uint64_t AXSSHumanReadableExplanationForMotionTrackingFacialExpression()
{
  return _AXSSHumanReadableExplanationForMotionTrackingFacialExpression();
}

uint64_t AXSSHumanReadableExplanationForMotionTrackingMode()
{
  return _AXSSHumanReadableExplanationForMotionTrackingMode();
}

uint64_t AXSSVoiceOverAvailableTextualContextIdentifiers()
{
  return _AXSSVoiceOverAvailableTextualContextIdentifiers();
}

uint64_t AXSSVoiceOverLocalizedNameForTextualContextIdentifier()
{
  return _AXSSVoiceOverLocalizedNameForTextualContextIdentifier();
}

uint64_t AXSafeClassFromString()
{
  return _AXSafeClassFromString();
}

uint64_t AXShouldShowSwitchControlHeadTrackingModeFromSettings()
{
  return _AXShouldShowSwitchControlHeadTrackingModeFromSettings();
}

uint64_t AXSpeakHighlightColor()
{
  return _AXSpeakHighlightColor();
}

uint64_t AXSpeakerMaxImage()
{
  return _AXSpeakerMaxImage();
}

uint64_t AXSpeakerMuteImage()
{
  return _AXSpeakerMuteImage();
}

uint64_t AXSupportLogCommon()
{
  return _AXSupportLogCommon();
}

uint64_t AXSwitchRecipeMappingActionAllowsLongPress()
{
  return _AXSwitchRecipeMappingActionAllowsLongPress();
}

uint64_t AXSwitchRecipeMappingNameForAction()
{
  return _AXSwitchRecipeMappingNameForAction();
}

uint64_t AXSwitchRecipeMappingSwitchUUIDs()
{
  return _AXSwitchRecipeMappingSwitchUUIDs();
}

uint64_t AXSystemActionIconTypes()
{
  return _AXSystemActionIconTypes();
}

uint64_t AXSystemRootDirectory()
{
  return _AXSystemRootDirectory();
}

uint64_t AXUIAssistiveTouchIconRequiresRTLFlipping()
{
  return _AXUIAssistiveTouchIconRequiresRTLFlipping();
}

uint64_t AXUIAssistiveTouchImageForName()
{
  return _AXUIAssistiveTouchImageForName();
}

uint64_t AXUIAssistiveTouchImageNameForName()
{
  return _AXUIAssistiveTouchImageNameForName();
}

uint64_t AXUIAssistiveTouchStringForName()
{
  return _AXUIAssistiveTouchStringForName();
}

uint64_t AXUICanShowPointerControlSettings()
{
  return _AXUICanShowPointerControlSettings();
}

uint64_t AXUIConvertRectFromScreenToContextSpace()
{
  return _AXUIConvertRectFromScreenToContextSpace();
}

uint64_t AXUILocalizedStringForKey()
{
  return _AXUILocalizedStringForKey();
}

uint64_t AXUILocalizedStringForKeyWithTable()
{
  return _AXUILocalizedStringForKeyWithTable();
}

uint64_t AXUILocalizedTitleForZoomLensEffect()
{
  return _AXUILocalizedTitleForZoomLensEffect();
}

uint64_t AXUISettingsSpeakingRateFastImage()
{
  return _AXUISettingsSpeakingRateFastImage();
}

uint64_t AXUISettingsSpeakingRateSlowImage()
{
  return _AXUISettingsSpeakingRateSlowImage();
}

uint64_t AXUIZoomControllerColor()
{
  return _AXUIZoomControllerColor();
}

uint64_t AXVOLocalizedStringForCharacter()
{
  return _AXVOLocalizedStringForCharacter();
}

uint64_t AXVoiceNameForVoiceId()
{
  return _AXVoiceNameForVoiceId();
}

uint64_t AXVoiceOverMediaDescriptionLocString()
{
  return _AXVoiceOverMediaDescriptionLocString();
}

uint64_t AXZoomAllLensEffects()
{
  return _AXZoomAllLensEffects();
}

uint64_t AXZoomDockPositions()
{
  return _AXZoomDockPositions();
}

uint64_t AXZoomUserSelectableLensModes()
{
  return _AXZoomUserSelectableLensModes();
}

uint64_t AX_CGRectGetCenter()
{
  return _AX_CGRectGetCenter();
}

uint64_t AnalyticsSendEvent()
{
  return _AnalyticsSendEvent();
}

uint64_t AudioServicesPlaySystemSoundWithOptions()
{
  return _AudioServicesPlaySystemSoundWithOptions();
}

uint64_t AudioServicesStopSystemSound()
{
  return _AudioServicesStopSystemSound();
}

uint64_t BKSDisplayBrightnessIsBrightnessLevelControlAvailable()
{
  return _BKSDisplayBrightnessIsBrightnessLevelControlAvailable();
}

uint64_t BKSDisplayBrightnessSetAutoBrightnessEnabled()
{
  return _BKSDisplayBrightnessSetAutoBrightnessEnabled();
}

uint64_t BRLLogTranslation()
{
  return _BRLLogTranslation();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString)
{
  return _CFCharacterSetCreateWithCharactersInString(alloc, theString);
}

Boolean CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset)
{
  return _CFCharacterSetIsSupersetOfSet(theSet, theOtherset);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return _CFNotificationCenterGetLocalCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformScale(retstr, t, sx, sy);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return _CGColorGetComponents(color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return _CGColorGetNumberOfComponents(color);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextEOFillPath(CGContextRef c)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

CFStringRef CGFontCopyFullName(CGFontRef font)
{
  return _CGFontCopyFullName(font);
}

CFStringRef CGFontCopyPostScriptName(CGFontRef font)
{
  return _CGFontCopyPostScriptName(font);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

void CGImageRelease(CGImageRef image)
{
}

void CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathAddPath(CGMutablePathRef path1, const CGAffineTransform *m, CGPathRef path2)
{
}

void CGPathAddRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect)
{
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  return _CGPathGetBoundingBox(path);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathRelease(CGPathRef path)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

uint64_t CLCopyAppsUsingLocation()
{
  return _CLCopyAppsUsingLocation();
}

uint64_t CLFLogCommon()
{
  return _CLFLogCommon();
}

uint64_t CLFLogSettings()
{
  return _CLFLogSettings();
}

uint64_t CLFWallpaperDirectory()
{
  return _CLFWallpaperDirectory();
}

uint64_t CLFWallpaperURL()
{
  return _CLFWallpaperURL();
}

CMClockRef CMClockGetHostTimeClock(void)
{
  return _CMClockGetHostTimeClock();
}

CMTime *__cdecl CMSampleBufferGetOutputDuration(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return _CMSampleBufferGetOutputDuration(retstr, sbuf);
}

OSStatus CMSampleBufferSetOutputPresentationTimeStamp(CMSampleBufferRef sbuf, CMTime *outputPresentationTimeStamp)
{
  return _CMSampleBufferSetOutputPresentationTimeStamp(sbuf, outputPresentationTimeStamp);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return _CMTimeAdd(retstr, lhs, rhs);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return _CMTimeMake(retstr, value, timescale);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return _CMTimeMakeWithSeconds(retstr, seconds, preferredTimescale);
}

OSStatus CMTimebaseCreateWithSourceClock(CFAllocatorRef allocator, CMClockRef sourceClock, CMTimebaseRef *timebaseOut)
{
  return _CMTimebaseCreateWithSourceClock(allocator, sourceClock, timebaseOut);
}

OSStatus CMTimebaseSetRate(CMTimebaseRef timebase, Float64 rate)
{
  return _CMTimebaseSetRate(timebase, rate);
}

CFCharacterSetRef CTFontCopyCharacterSet(CTFontRef font)
{
  return _CTFontCopyCharacterSet(font);
}

CFStringRef CTFontCopyFullName(CTFontRef font)
{
  return _CTFontCopyFullName(font);
}

CGFontRef CTFontCopyGraphicsFont(CTFontRef font, CTFontDescriptorRef *attributes)
{
  return _CTFontCopyGraphicsFont(font, attributes);
}

CFStringRef CTFontCopyPostScriptName(CTFontRef font)
{
  return _CTFontCopyPostScriptName(font);
}

uint64_t FigCoreTextSubtitleRendererCreate()
{
  return _FigCoreTextSubtitleRendererCreate();
}

uint64_t FigSubtitleRendererDrawSubtitleTextDirect()
{
  return _FigSubtitleRendererDrawSubtitleTextDirect();
}

uint64_t GSEventIsHardwareKeyboardAttached()
{
  return _GSEventIsHardwareKeyboardAttached();
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, inputStructCnt, output, outputCnt, outputStruct, outputStructCnt);
}

kern_return_t IOConnectCallScalarMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, uint64_t *output, uint32_t *outputCnt)
{
  return _IOConnectCallScalarMethod(connection, selector, input, inputCnt, output, outputCnt);
}

kern_return_t IOConnectCallStructMethod(mach_port_t connection, uint32_t selector, const void *inputStruct, size_t inputStructCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallStructMethod(connection, selector, inputStruct, inputStructCnt, outputStruct, outputStructCnt);
}

CFTypeRef IOHIDDeviceGetProperty(IOHIDDeviceRef device, CFStringRef key)
{
  return _IOHIDDeviceGetProperty(device, key);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t LICreateIconForImage()
{
  return _LICreateIconForImage();
}

uint64_t LiveSpeechLogCommon()
{
  return _LiveSpeechLogCommon();
}

uint64_t MAAudibleMediaPrefCopyPreferDescriptiveVideo()
{
  return _MAAudibleMediaPrefCopyPreferDescriptiveVideo();
}

uint64_t MACaptionAppearanceGetShowCaptions()
{
  return _MACaptionAppearanceGetShowCaptions();
}

uint64_t MACaptionAppearancePrefCopyActiveProfileID()
{
  return _MACaptionAppearancePrefCopyActiveProfileID();
}

uint64_t MACaptionAppearancePrefCopyBackgroundColor()
{
  return _MACaptionAppearancePrefCopyBackgroundColor();
}

uint64_t MACaptionAppearancePrefCopyBackgroundOpacity()
{
  return _MACaptionAppearancePrefCopyBackgroundOpacity();
}

uint64_t MACaptionAppearancePrefCopyFontForStyle()
{
  return _MACaptionAppearancePrefCopyFontForStyle();
}

uint64_t MACaptionAppearancePrefCopyForegroundColor()
{
  return _MACaptionAppearancePrefCopyForegroundColor();
}

uint64_t MACaptionAppearancePrefCopyForegroundOpacity()
{
  return _MACaptionAppearancePrefCopyForegroundOpacity();
}

uint64_t MACaptionAppearancePrefCopyProfileIDs()
{
  return _MACaptionAppearancePrefCopyProfileIDs();
}

uint64_t MACaptionAppearancePrefCopyProfileName()
{
  return _MACaptionAppearancePrefCopyProfileName();
}

uint64_t MACaptionAppearancePrefCopyProfileOrder()
{
  return _MACaptionAppearancePrefCopyProfileOrder();
}

uint64_t MACaptionAppearancePrefCopyTextEdgeStyle()
{
  return _MACaptionAppearancePrefCopyTextEdgeStyle();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideBackgroundColor()
{
  return _MACaptionAppearancePrefCopyVideoOverrideBackgroundColor();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideBackgroundOpacity()
{
  return _MACaptionAppearancePrefCopyVideoOverrideBackgroundOpacity();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideFontForStyle()
{
  return _MACaptionAppearancePrefCopyVideoOverrideFontForStyle();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideForegroundColor()
{
  return _MACaptionAppearancePrefCopyVideoOverrideForegroundColor();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideForegroundOpacity()
{
  return _MACaptionAppearancePrefCopyVideoOverrideForegroundOpacity();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideRelativeCharSize()
{
  return _MACaptionAppearancePrefCopyVideoOverrideRelativeCharSize();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideTextEdgeStyle()
{
  return _MACaptionAppearancePrefCopyVideoOverrideTextEdgeStyle();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideWindowColor()
{
  return _MACaptionAppearancePrefCopyVideoOverrideWindowColor();
}

uint64_t MACaptionAppearancePrefCopyVideoOverrideWindowOpacity()
{
  return _MACaptionAppearancePrefCopyVideoOverrideWindowOpacity();
}

uint64_t MACaptionAppearancePrefCopyWindowColor()
{
  return _MACaptionAppearancePrefCopyWindowColor();
}

uint64_t MACaptionAppearancePrefCopyWindowOpacity()
{
  return _MACaptionAppearancePrefCopyWindowOpacity();
}

uint64_t MACaptionAppearancePrefCreateNewProfileFromProfile()
{
  return _MACaptionAppearancePrefCreateNewProfileFromProfile();
}

uint64_t MACaptionAppearancePrefGetRelativeCharSize()
{
  return _MACaptionAppearancePrefGetRelativeCharSize();
}

uint64_t MACaptionAppearancePrefIsProfileEditable()
{
  return _MACaptionAppearancePrefIsProfileEditable();
}

uint64_t MACaptionAppearancePrefIsSystemFont()
{
  return _MACaptionAppearancePrefIsSystemFont();
}

uint64_t MACaptionAppearancePrefRemoveProfile()
{
  return _MACaptionAppearancePrefRemoveProfile();
}

uint64_t MACaptionAppearancePrefSetActiveProfileID()
{
  return _MACaptionAppearancePrefSetActiveProfileID();
}

uint64_t MACaptionAppearancePrefSetFontForStyle()
{
  return _MACaptionAppearancePrefSetFontForStyle();
}

uint64_t MACaptionAppearancePrefSetProfileName()
{
  return _MACaptionAppearancePrefSetProfileName();
}

uint64_t MACaptionAppearancePrefSetProfileOrder()
{
  return _MACaptionAppearancePrefSetProfileOrder();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideBackgroundColor()
{
  return _MACaptionAppearancePrefSetVideoOverrideBackgroundColor();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideBackgroundOpacity()
{
  return _MACaptionAppearancePrefSetVideoOverrideBackgroundOpacity();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideFontForStyle()
{
  return _MACaptionAppearancePrefSetVideoOverrideFontForStyle();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideForegroundColor()
{
  return _MACaptionAppearancePrefSetVideoOverrideForegroundColor();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideForegroundOpacity()
{
  return _MACaptionAppearancePrefSetVideoOverrideForegroundOpacity();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideRelativeCharSize()
{
  return _MACaptionAppearancePrefSetVideoOverrideRelativeCharSize();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideTextEdgeStyle()
{
  return _MACaptionAppearancePrefSetVideoOverrideTextEdgeStyle();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideWindowColor()
{
  return _MACaptionAppearancePrefSetVideoOverrideWindowColor();
}

uint64_t MACaptionAppearancePrefSetVideoOverrideWindowOpacity()
{
  return _MACaptionAppearancePrefSetVideoOverrideWindowOpacity();
}

uint64_t MADisplayFilterPrefGetBlueColorCorrectionIntensity()
{
  return _MADisplayFilterPrefGetBlueColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefGetCategoryEnabled()
{
  return _MADisplayFilterPrefGetCategoryEnabled();
}

uint64_t MADisplayFilterPrefGetGrayscaleCorrectionIntensity()
{
  return _MADisplayFilterPrefGetGrayscaleCorrectionIntensity();
}

uint64_t MADisplayFilterPrefGetGreenColorCorrectionIntensity()
{
  return _MADisplayFilterPrefGetGreenColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefGetRedColorCorrectionIntensity()
{
  return _MADisplayFilterPrefGetRedColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefGetReduceWhitePointIntensity()
{
  return _MADisplayFilterPrefGetReduceWhitePointIntensity();
}

uint64_t MADisplayFilterPrefGetSingleColorHue()
{
  return _MADisplayFilterPrefGetSingleColorHue();
}

uint64_t MADisplayFilterPrefGetSingleColorIntensity()
{
  return _MADisplayFilterPrefGetSingleColorIntensity();
}

uint64_t MADisplayFilterPrefSetBlueColorCorrectionIntensity()
{
  return _MADisplayFilterPrefSetBlueColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefSetCategoryEnabled()
{
  return _MADisplayFilterPrefSetCategoryEnabled();
}

uint64_t MADisplayFilterPrefSetGrayscaleCorrectionIntensity()
{
  return _MADisplayFilterPrefSetGrayscaleCorrectionIntensity();
}

uint64_t MADisplayFilterPrefSetGreenColorCorrectionIntensity()
{
  return _MADisplayFilterPrefSetGreenColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefSetRedColorCorrectionIntensity()
{
  return _MADisplayFilterPrefSetRedColorCorrectionIntensity();
}

uint64_t MADisplayFilterPrefSetSingleColorHue()
{
  return _MADisplayFilterPrefSetSingleColorHue();
}

uint64_t MADisplayFilterPrefSetSingleColorIntensity()
{
  return _MADisplayFilterPrefSetSingleColorIntensity();
}

uint64_t MADisplayFilterPrefSetType()
{
  return _MADisplayFilterPrefSetType();
}

uint64_t MADisplayFilterPrefSuspendNotifications()
{
  return _MADisplayFilterPrefSuspendNotifications();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MRMediaRemoteSetCanBeNowPlayingApplication()
{
  return _MRMediaRemoteSetCanBeNowPlayingApplication();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *NSOpenStepRootDirectory(void)
{
  return _NSOpenStepRootDirectory();
}

uint64_t NSRequestConcreteImplementation()
{
  return _NSRequestConcreteImplementation();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PSAuthorizationTokenForPasscode()
{
  return _PSAuthorizationTokenForPasscode();
}

uint64_t PSBundlePathForPreferenceBundle()
{
  return _PSBundlePathForPreferenceBundle();
}

uint64_t PSESettingsFooterText()
{
  return _PSESettingsFooterText();
}

uint64_t PSRoundToPixel()
{
  return _PSRoundToPixel();
}

uint64_t PSTableViewSideInset()
{
  return _PSTableViewSideInset();
}

uint64_t PSTableViewSideInsetPad()
{
  return _PSTableViewSideInsetPad();
}

uint64_t SBSIsReachabilityEnabled()
{
  return _SBSIsReachabilityEnabled();
}

uint64_t SBSSetReachabilityEnabled()
{
  return _SBSSetReachabilityEnabled();
}

uint64_t SCATAddOrUpdateSwitchToSettings()
{
  return _SCATAddOrUpdateSwitchToSettings();
}

uint64_t SCATHeadTrackingSwitchActions()
{
  return _SCATHeadTrackingSwitchActions();
}

uint64_t SCATLocStringForAction()
{
  return _SCATLocStringForAction();
}

uint64_t SCATNextAvailableSwitchName()
{
  return _SCATNextAvailableSwitchName();
}

uint64_t SCATScannerSwitchActions()
{
  return _SCATScannerSwitchActions();
}

uint64_t SCATSwitchExistsWithName()
{
  return _SCATSwitchExistsWithName();
}

uint64_t SCATSwitchesWithSource()
{
  return _SCATSwitchesWithSource();
}

uint64_t SCATSystemSwitchActions()
{
  return _SCATSystemSwitchActions();
}

uint64_t SFRuntimeAbsoluteFilePathForPath()
{
  return _SFRuntimeAbsoluteFilePathForPath();
}

uint64_t SWCHLogHW()
{
  return _SWCHLogHW();
}

uint64_t TCCAccessCopyBundleIdentifiersDisabledForService()
{
  return _TCCAccessCopyBundleIdentifiersDisabledForService();
}

uint64_t TCCAccessCopyBundleIdentifiersForService()
{
  return _TCCAccessCopyBundleIdentifiersForService();
}

uint64_t TCCAccessSetForBundleId()
{
  return _TCCAccessSetForBundleId();
}

uint64_t TLAlertTypeFromString()
{
  return _TLAlertTypeFromString();
}

uint64_t TTSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences()
{
  return _TTSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences();
}

uint64_t TUIKeyboardDisplayNameFromIdentifier()
{
  return _TUIKeyboardDisplayNameFromIdentifier();
}

UIBezierPath *__cdecl UIAccessibilityConvertPathToScreenCoordinates(UIBezierPath *path, UIView *view)
{
  return _UIAccessibilityConvertPathToScreenCoordinates(path, view);
}

BOOL UIAccessibilityIsSpeakScreenEnabled(void)
{
  return _UIAccessibilityIsSpeakScreenEnabled();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return _UIAccessibilityIsSwitchControlRunning();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return _UIAccessibilityIsVoiceOverRunning();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

uint64_t UIAccessibilitySpeak()
{
  return _UIAccessibilitySpeak();
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

uint64_t VOSCrystalMigrateBrailleTableReplacements()
{
  return _VOSCrystalMigrateBrailleTableReplacements();
}

uint64_t VOSCustomBrailleEnabled()
{
  return _VOSCustomBrailleEnabled();
}

uint64_t VOSFirstGesturesCompatibleBrailleTable()
{
  return _VOSFirstGesturesCompatibleBrailleTable();
}

uint64_t VOSLocString()
{
  return _VOSLocString();
}

uint64_t VOSRepairBrailleTableSettings()
{
  return _VOSRepairBrailleTableSettings();
}

uint64_t VOTLogActivities()
{
  return _VOTLogActivities();
}

uint64_t VOTLogCommands()
{
  return _VOTLogCommands();
}

uint64_t VOTLogCommon()
{
  return _VOTLogCommon();
}

uint64_t VSPreferencesCopyAvailableLanguageIdentifiers()
{
  return _VSPreferencesCopyAvailableLanguageIdentifiers();
}

uint64_t VSPreferencesCopySpokenLanguageIdentifier()
{
  return _VSPreferencesCopySpokenLanguageIdentifier();
}

uint64_t VSPreferencesSetSpokenLanguageIdentifier()
{
  return _VSPreferencesSetSpokenLanguageIdentifier();
}

uint64_t _ASTVirtualTrackpadColorValues()
{
  return __ASTVirtualTrackpadColorValues();
}

uint64_t _AXAssert()
{
  return __AXAssert();
}

uint64_t _AXAssetMakeError()
{
  return __AXAssetMakeError();
}

uint64_t _AXDarkenSystemColorsApp()
{
  return __AXDarkenSystemColorsApp();
}

uint64_t _AXDarkenSystemColorsGlobal()
{
  return __AXDarkenSystemColorsGlobal();
}

uint64_t _AXLogWithFacility()
{
  return __AXLogWithFacility();
}

uint64_t _AXSAccessibilityGetBooleaniTunesPreference()
{
  return __AXSAccessibilityGetBooleaniTunesPreference();
}

uint64_t _AXSAccessibilitySetSecureIntentProvider()
{
  return __AXSAccessibilitySetSecureIntentProvider();
}

uint64_t _AXSAllowOpaqueTouchGestures()
{
  return __AXSAllowOpaqueTouchGestures();
}

uint64_t _AXSAllowsMixToUplink()
{
  return __AXSAllowsMixToUplink();
}

uint64_t _AXSAlwaysShowVolumeControlEnabled()
{
  return __AXSAlwaysShowVolumeControlEnabled();
}

uint64_t _AXSAppleTVRemoteForceLiveTVButtons()
{
  return __AXSAppleTVRemoteForceLiveTVButtons();
}

uint64_t _AXSAppleTVRemoteUsesSimpleGestures()
{
  return __AXSAppleTVRemoteUsesSimpleGestures();
}

uint64_t _AXSAssistiveTouchEnabled()
{
  return __AXSAssistiveTouchEnabled();
}

uint64_t _AXSAssistiveTouchHardwareEnabled()
{
  return __AXSAssistiveTouchHardwareEnabled();
}

uint64_t _AXSAssistiveTouchScannerEnabled()
{
  return __AXSAssistiveTouchScannerEnabled();
}

uint64_t _AXSAssistiveTouchScannerSetEnabled()
{
  return __AXSAssistiveTouchScannerSetEnabled();
}

uint64_t _AXSAssistiveTouchSetEnabled()
{
  return __AXSAssistiveTouchSetEnabled();
}

uint64_t _AXSAssistiveTouchSetUIEnabled()
{
  return __AXSAssistiveTouchSetUIEnabled();
}

uint64_t _AXSAttentionAwarenessFeaturesEnabled()
{
  return __AXSAttentionAwarenessFeaturesEnabled();
}

uint64_t _AXSAutoBrightnessEnabled()
{
  return __AXSAutoBrightnessEnabled();
}

uint64_t _AXSAutomaticSubtitlesShowOnSkipBack()
{
  return __AXSAutomaticSubtitlesShowOnSkipBack();
}

uint64_t _AXSAutomaticSubtitlesShowWhenLanguageMismatch()
{
  return __AXSAutomaticSubtitlesShowWhenLanguageMismatch();
}

uint64_t _AXSAutomaticSubtitlesShowWhenMuted()
{
  return __AXSAutomaticSubtitlesShowWhenMuted();
}

uint64_t _AXSButtonShapesEnabledApp()
{
  return __AXSButtonShapesEnabledApp();
}

uint64_t _AXSButtonShapesEnabledGlobal()
{
  return __AXSButtonShapesEnabledGlobal();
}

uint64_t _AXSCanDisableApplicationAccessibility()
{
  return __AXSCanDisableApplicationAccessibility();
}

uint64_t _AXSClarityUIEnabled()
{
  return __AXSClarityUIEnabled();
}

uint64_t _AXSClarityUISetEnabled()
{
  return __AXSClarityUISetEnabled();
}

uint64_t _AXSClosedCaptionsEnabled()
{
  return __AXSClosedCaptionsEnabled();
}

uint64_t _AXSClosedCaptionsSetEnabled()
{
  return __AXSClosedCaptionsSetEnabled();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return __AXSCommandAndControlEnabled();
}

uint64_t _AXSCopyPreferredContentSizeCategoryNameApp()
{
  return __AXSCopyPreferredContentSizeCategoryNameApp();
}

uint64_t _AXSCopyPreferredContentSizeCategoryNameGlobal()
{
  return __AXSCopyPreferredContentSizeCategoryNameGlobal();
}

uint64_t _AXSDefaultRouteForCall()
{
  return __AXSDefaultRouteForCall();
}

uint64_t _AXSDifferentiateWithoutColorEnabledApp()
{
  return __AXSDifferentiateWithoutColorEnabledApp();
}

uint64_t _AXSDifferentiateWithoutColorEnabledGlobal()
{
  return __AXSDifferentiateWithoutColorEnabledGlobal();
}

uint64_t _AXSEarpieceNoiseCancellationEnabled()
{
  return __AXSEarpieceNoiseCancellationEnabled();
}

uint64_t _AXSEarpieceNoiseCancellationSetEnabled()
{
  return __AXSEarpieceNoiseCancellationSetEnabled();
}

uint64_t _AXSEnhanceBackgroundContrastEnabledApp()
{
  return __AXSEnhanceBackgroundContrastEnabledApp();
}

uint64_t _AXSEnhanceBackgroundContrastEnabledGlobal()
{
  return __AXSEnhanceBackgroundContrastEnabledGlobal();
}

uint64_t _AXSEnhanceTextLegibilityEnabledApp()
{
  return __AXSEnhanceTextLegibilityEnabledApp();
}

uint64_t _AXSEnhanceTextLegibilityEnabledGlobal()
{
  return __AXSEnhanceTextLegibilityEnabledGlobal();
}

uint64_t _AXSExtendedVoiceIsolationMediaModesEnabled()
{
  return __AXSExtendedVoiceIsolationMediaModesEnabled();
}

uint64_t _AXSFaceTimeCaptionsEnabled()
{
  return __AXSFaceTimeCaptionsEnabled();
}

uint64_t _AXSForceTouchEnabled()
{
  return __AXSForceTouchEnabled();
}

uint64_t _AXSForceTouchSensitivity()
{
  return __AXSForceTouchSensitivity();
}

uint64_t _AXSForceTouchTimeDuration()
{
  return __AXSForceTouchTimeDuration();
}

uint64_t _AXSFullKeyboardAccessEnabled()
{
  return __AXSFullKeyboardAccessEnabled();
}

uint64_t _AXSFullKeyboardAccessSetEnabled()
{
  return __AXSFullKeyboardAccessSetEnabled();
}

uint64_t _AXSGetUSBRMDisablers()
{
  return __AXSGetUSBRMDisablers();
}

uint64_t _AXSGrayscaleEnabled()
{
  return __AXSGrayscaleEnabled();
}

uint64_t _AXSGuidedAccessEnabled()
{
  return __AXSGuidedAccessEnabled();
}

uint64_t _AXSGuidedAccessSetEnabled()
{
  return __AXSGuidedAccessSetEnabled();
}

uint64_t _AXSHapticMusicEnabled()
{
  return __AXSHapticMusicEnabled();
}

uint64_t _AXSHomeButtonAssistant()
{
  return __AXSHomeButtonAssistant();
}

uint64_t _AXSHomeButtonRestingUnlock()
{
  return __AXSHomeButtonRestingUnlock();
}

uint64_t _AXSHomeButtonSetRestingUnlock()
{
  return __AXSHomeButtonSetRestingUnlock();
}

uint64_t _AXSHomeClickSetSpeed()
{
  return __AXSHomeClickSetSpeed();
}

uint64_t _AXSHomeClickSpeed()
{
  return __AXSHomeClickSpeed();
}

uint64_t _AXSHoverTextCopyContentSize()
{
  return __AXSHoverTextCopyContentSize();
}

uint64_t _AXSHoverTextEnabled()
{
  return __AXSHoverTextEnabled();
}

uint64_t _AXSHoverTextTypingEnabled()
{
  return __AXSHoverTextTypingEnabled();
}

uint64_t _AXSInUnitTestMode()
{
  return __AXSInUnitTestMode();
}

uint64_t _AXSIncreaseButtonLegibilityApp()
{
  return __AXSIncreaseButtonLegibilityApp();
}

uint64_t _AXSIncreaseButtonLegibilityGlobal()
{
  return __AXSIncreaseButtonLegibilityGlobal();
}

uint64_t _AXSInvertColorsEnabled()
{
  return __AXSInvertColorsEnabled();
}

uint64_t _AXSInvertColorsEnabledApp()
{
  return __AXSInvertColorsEnabledApp();
}

uint64_t _AXSInvertColorsEnabledGlobal()
{
  return __AXSInvertColorsEnabledGlobal();
}

uint64_t _AXSInvertColorsSetEnabled()
{
  return __AXSInvertColorsSetEnabled();
}

uint64_t _AXSInvertColorsSetEnabledApp()
{
  return __AXSInvertColorsSetEnabledApp();
}

uint64_t _AXSKeyRepeatDelay()
{
  return __AXSKeyRepeatDelay();
}

uint64_t _AXSKeyRepeatEnabled()
{
  return __AXSKeyRepeatEnabled();
}

uint64_t _AXSKeyRepeatInterval()
{
  return __AXSKeyRepeatInterval();
}

uint64_t _AXSLargeTextUsesExtendedRange()
{
  return __AXSLargeTextUsesExtendedRange();
}

uint64_t _AXSLeftRightAudioBalance()
{
  return __AXSLeftRightAudioBalance();
}

uint64_t _AXSLiveCaptionsBoldTextEnabled()
{
  return __AXSLiveCaptionsBoldTextEnabled();
}

uint64_t _AXSLiveCaptionsCopyContentSizeCategoryName()
{
  return __AXSLiveCaptionsCopyContentSizeCategoryName();
}

uint64_t _AXSLiveCaptionsNubbitIdleOpacity()
{
  return __AXSLiveCaptionsNubbitIdleOpacity();
}

uint64_t _AXSLiveCaptionsSetBoldTextEnabled()
{
  return __AXSLiveCaptionsSetBoldTextEnabled();
}

uint64_t _AXSLiveCaptionsSetNubbitIdleOpacity()
{
  return __AXSLiveCaptionsSetNubbitIdleOpacity();
}

uint64_t _AXSLiveSpeechSetEnabled()
{
  return __AXSLiveSpeechSetEnabled();
}

uint64_t _AXSLiveTranscriptionCopyBackgroundColorData()
{
  return __AXSLiveTranscriptionCopyBackgroundColorData();
}

uint64_t _AXSLiveTranscriptionCopyTextColorData()
{
  return __AXSLiveTranscriptionCopyTextColorData();
}

uint64_t _AXSLiveTranscriptionEnabled()
{
  return __AXSLiveTranscriptionEnabled();
}

uint64_t _AXSLiveTranscriptionInCallEnabled()
{
  return __AXSLiveTranscriptionInCallEnabled();
}

uint64_t _AXSLiveTranscriptionInCallSetEnabled()
{
  return __AXSLiveTranscriptionInCallSetEnabled();
}

uint64_t _AXSLiveTranscriptionSetBackgroundColorData()
{
  return __AXSLiveTranscriptionSetBackgroundColorData();
}

uint64_t _AXSLiveTranscriptionSetTextColorData()
{
  return __AXSLiveTranscriptionSetTextColorData();
}

uint64_t _AXSLowercaseKeyboardDisplayEnabled()
{
  return __AXSLowercaseKeyboardDisplayEnabled();
}

uint64_t _AXSMonoAudioEnabled()
{
  return __AXSMonoAudioEnabled();
}

uint64_t _AXSMonoAudioSetEnabled()
{
  return __AXSMonoAudioSetEnabled();
}

uint64_t _AXSMossdeepEnabled()
{
  return __AXSMossdeepEnabled();
}

uint64_t _AXSMotionCuesEnabled()
{
  return __AXSMotionCuesEnabled();
}

uint64_t _AXSMotionCuesMode()
{
  return __AXSMotionCuesMode();
}

uint64_t _AXSOpaqueTouchTapSpeed()
{
  return __AXSOpaqueTouchTapSpeed();
}

uint64_t _AXSPearlAuthenticationHapticsEnabled()
{
  return __AXSPearlAuthenticationHapticsEnabled();
}

uint64_t _AXSPencilExtendedSqueezeRangeEnabled()
{
  return __AXSPencilExtendedSqueezeRangeEnabled();
}

uint64_t _AXSPhoneLockToEndCallEnabled()
{
  return __AXSPhoneLockToEndCallEnabled();
}

uint64_t _AXSPhotosensitiveMitigationEnabled()
{
  return __AXSPhotosensitiveMitigationEnabled();
}

uint64_t _AXSPointerAllowAppCustomizationEnabled()
{
  return __AXSPointerAllowAppCustomizationEnabled();
}

uint64_t _AXSPointerAutoHideEnabled()
{
  return __AXSPointerAutoHideEnabled();
}

uint64_t _AXSPointerEffectScalingEnabled()
{
  return __AXSPointerEffectScalingEnabled();
}

uint64_t _AXSPointerIncreasedContrastEnabled()
{
  return __AXSPointerIncreasedContrastEnabled();
}

uint64_t _AXSPointerInertiaEnabled()
{
  return __AXSPointerInertiaEnabled();
}

uint64_t _AXSPointerScaleWithZoomLevelEnabled()
{
  return __AXSPointerScaleWithZoomLevelEnabled();
}

uint64_t _AXSPointerSetStrokeColor()
{
  return __AXSPointerSetStrokeColor();
}

uint64_t _AXSPointerSetVoiceOverCursorOption()
{
  return __AXSPointerSetVoiceOverCursorOption();
}

uint64_t _AXSPointerSizeMultiplier()
{
  return __AXSPointerSizeMultiplier();
}

uint64_t _AXSPointerStrokeColor()
{
  return __AXSPointerStrokeColor();
}

uint64_t _AXSPointerStrokeColorValues()
{
  return __AXSPointerStrokeColorValues();
}

uint64_t _AXSPointerStrokeColorWidth()
{
  return __AXSPointerStrokeColorWidth();
}

uint64_t _AXSPointerVoiceOverCursorOption()
{
  return __AXSPointerVoiceOverCursorOption();
}

uint64_t _AXSPrefersHorizontalTextLayoutApp()
{
  return __AXSPrefersHorizontalTextLayoutApp();
}

uint64_t _AXSPrefersHorizontalTextLayoutGlobal()
{
  return __AXSPrefersHorizontalTextLayoutGlobal();
}

uint64_t _AXSPrefersNonBlinkingCursorIndicatorApp()
{
  return __AXSPrefersNonBlinkingCursorIndicatorApp();
}

uint64_t _AXSPrefersNonBlinkingCursorIndicatorGlobal()
{
  return __AXSPrefersNonBlinkingCursorIndicatorGlobal();
}

uint64_t _AXSQuickSpeakEnabled()
{
  return __AXSQuickSpeakEnabled();
}

uint64_t _AXSQuickSpeakHighlightTextEnabled()
{
  return __AXSQuickSpeakHighlightTextEnabled();
}

uint64_t _AXSQuickSpeakSetEnabled()
{
  return __AXSQuickSpeakSetEnabled();
}

uint64_t _AXSQuickSpeakSetHighlightTextEnabled()
{
  return __AXSQuickSpeakSetHighlightTextEnabled();
}

uint64_t _AXSReduceMotionAutoplayAnimatedImagesEnabled()
{
  return __AXSReduceMotionAutoplayAnimatedImagesEnabled();
}

uint64_t _AXSReduceMotionAutoplayMessagesEffectsEnabled()
{
  return __AXSReduceMotionAutoplayMessagesEffectsEnabled();
}

uint64_t _AXSReduceMotionAutoplayVideoPreviewsEnabledApp()
{
  return __AXSReduceMotionAutoplayVideoPreviewsEnabledApp();
}

uint64_t _AXSReduceMotionAutoplayVideoPreviewsEnabledGlobal()
{
  return __AXSReduceMotionAutoplayVideoPreviewsEnabledGlobal();
}

uint64_t _AXSReduceMotionEnabledApp()
{
  return __AXSReduceMotionEnabledApp();
}

uint64_t _AXSReduceMotionEnabledGlobal()
{
  return __AXSReduceMotionEnabledGlobal();
}

uint64_t _AXSReduceMotionReduceSlideTransitionsEnabledApp()
{
  return __AXSReduceMotionReduceSlideTransitionsEnabledApp();
}

uint64_t _AXSReduceMotionReduceSlideTransitionsEnabledGlobal()
{
  return __AXSReduceMotionReduceSlideTransitionsEnabledGlobal();
}

uint64_t _AXSReduceWhitePointEnabled()
{
  return __AXSReduceWhitePointEnabled();
}

uint64_t _AXSSetAttentionAwarenessFeaturesEnabled()
{
  return __AXSSetAttentionAwarenessFeaturesEnabled();
}

uint64_t _AXSSetButtonShapesEnabled()
{
  return __AXSSetButtonShapesEnabled();
}

uint64_t _AXSSetButtonShapesEnabledApp()
{
  return __AXSSetButtonShapesEnabledApp();
}

uint64_t _AXSSetDarkenSystemColors()
{
  return __AXSSetDarkenSystemColors();
}

uint64_t _AXSSetDarkenSystemColorsApp()
{
  return __AXSSetDarkenSystemColorsApp();
}

uint64_t _AXSSetDefaultRouteForCall()
{
  return __AXSSetDefaultRouteForCall();
}

uint64_t _AXSSetDifferentiateWithoutColorEnabled()
{
  return __AXSSetDifferentiateWithoutColorEnabled();
}

uint64_t _AXSSetDifferentiateWithoutColorEnabledApp()
{
  return __AXSSetDifferentiateWithoutColorEnabledApp();
}

uint64_t _AXSSetEnhanceBackgroundContrastEnabled()
{
  return __AXSSetEnhanceBackgroundContrastEnabled();
}

uint64_t _AXSSetEnhanceBackgroundContrastEnabledApp()
{
  return __AXSSetEnhanceBackgroundContrastEnabledApp();
}

uint64_t _AXSSetEnhanceTextLegibilityEnabled()
{
  return __AXSSetEnhanceTextLegibilityEnabled();
}

uint64_t _AXSSetEnhanceTextLegibilityEnabledApp()
{
  return __AXSSetEnhanceTextLegibilityEnabledApp();
}

uint64_t _AXSSetExtendedVoiceIsolationMediaModesEnabled()
{
  return __AXSSetExtendedVoiceIsolationMediaModesEnabled();
}

uint64_t _AXSSetForceTouchEnabled()
{
  return __AXSSetForceTouchEnabled();
}

uint64_t _AXSSetForceTouchTimeDuration()
{
  return __AXSSetForceTouchTimeDuration();
}

uint64_t _AXSSetHapticMusicEnabled()
{
  return __AXSSetHapticMusicEnabled();
}

uint64_t _AXSSetHomeButtonAssistant()
{
  return __AXSSetHomeButtonAssistant();
}

uint64_t _AXSSetIncreaseButtonLegibility()
{
  return __AXSSetIncreaseButtonLegibility();
}

uint64_t _AXSSetIncreaseButtonLegibilityApp()
{
  return __AXSSetIncreaseButtonLegibilityApp();
}

uint64_t _AXSSetKeyRepeatDelay()
{
  return __AXSSetKeyRepeatDelay();
}

uint64_t _AXSSetKeyRepeatEnabled()
{
  return __AXSSetKeyRepeatEnabled();
}

uint64_t _AXSSetKeyRepeatInterval()
{
  return __AXSSetKeyRepeatInterval();
}

uint64_t _AXSSetLeftRightAudioBalance()
{
  return __AXSSetLeftRightAudioBalance();
}

uint64_t _AXSSetMotionCuesEnabled()
{
  return __AXSSetMotionCuesEnabled();
}

uint64_t _AXSSetMotionCuesMode()
{
  return __AXSSetMotionCuesMode();
}

uint64_t _AXSSetOpaqueTouchTapSpeed()
{
  return __AXSSetOpaqueTouchTapSpeed();
}

uint64_t _AXSSetPreferredContentSizeCategoryNameApp()
{
  return __AXSSetPreferredContentSizeCategoryNameApp();
}

uint64_t _AXSSetPrefersHorizontalTextLayout()
{
  return __AXSSetPrefersHorizontalTextLayout();
}

uint64_t _AXSSetPrefersHorizontalTextLayoutApp()
{
  return __AXSSetPrefersHorizontalTextLayoutApp();
}

uint64_t _AXSSetPrefersNonBlinkingCursorIndicator()
{
  return __AXSSetPrefersNonBlinkingCursorIndicator();
}

uint64_t _AXSSetPrefersNonBlinkingCursorIndicatorApp()
{
  return __AXSSetPrefersNonBlinkingCursorIndicatorApp();
}

uint64_t _AXSSetReduceMotionAutoplayAnimatedImagesEnabled()
{
  return __AXSSetReduceMotionAutoplayAnimatedImagesEnabled();
}

uint64_t _AXSSetReduceMotionAutoplayMessagesEffectsEnabled()
{
  return __AXSSetReduceMotionAutoplayMessagesEffectsEnabled();
}

uint64_t _AXSSetReduceMotionAutoplayVideoPreviewsEnabled()
{
  return __AXSSetReduceMotionAutoplayVideoPreviewsEnabled();
}

uint64_t _AXSSetReduceMotionAutoplayVideoPreviewsEnabledApp()
{
  return __AXSSetReduceMotionAutoplayVideoPreviewsEnabledApp();
}

uint64_t _AXSSetReduceMotionEnabled()
{
  return __AXSSetReduceMotionEnabled();
}

uint64_t _AXSSetReduceMotionEnabledApp()
{
  return __AXSSetReduceMotionEnabledApp();
}

uint64_t _AXSSetReduceMotionReduceSlideTransitionsEnabled()
{
  return __AXSSetReduceMotionReduceSlideTransitionsEnabled();
}

uint64_t _AXSSetReduceMotionReduceSlideTransitionsEnabledApp()
{
  return __AXSSetReduceMotionReduceSlideTransitionsEnabledApp();
}

uint64_t _AXSSetReduceWhitePointEnabled()
{
  return __AXSSetReduceWhitePointEnabled();
}

uint64_t _AXSSetShowAudioTranscriptions()
{
  return __AXSSetShowAudioTranscriptions();
}

uint64_t _AXSSetSideButtonClickSpeed()
{
  return __AXSSetSideButtonClickSpeed();
}

uint64_t _AXSSetSpeakThisEnabled()
{
  return __AXSSetSpeakThisEnabled();
}

uint64_t _AXSSetTripleClickOptions()
{
  return __AXSSetTripleClickOptions();
}

uint64_t _AXSSetUserEnabledPasscodeForPurchases()
{
  return __AXSSetUserEnabledPasscodeForPurchases();
}

uint64_t _AXSShakeToUndoDisabled()
{
  return __AXSShakeToUndoDisabled();
}

uint64_t _AXSShowAudioTranscriptions()
{
  return __AXSShowAudioTranscriptions();
}

uint64_t _AXSSideButtonClickSpeed()
{
  return __AXSSideButtonClickSpeed();
}

uint64_t _AXSSlowKeysAcceptanceDelay()
{
  return __AXSSlowKeysAcceptanceDelay();
}

uint64_t _AXSSlowKeysEnabled()
{
  return __AXSSlowKeysEnabled();
}

uint64_t _AXSSpeakThisEnabled()
{
  return __AXSSpeakThisEnabled();
}

uint64_t _AXSTripleClickAddOption()
{
  return __AXSTripleClickAddOption();
}

uint64_t _AXSTripleClickContainsOption()
{
  return __AXSTripleClickContainsOption();
}

uint64_t _AXSTripleClickCopyAllComputedOptions()
{
  return __AXSTripleClickCopyAllComputedOptions();
}

uint64_t _AXSTripleClickCopyOptions()
{
  return __AXSTripleClickCopyOptions();
}

uint64_t _AXSTripleClickIsComputedOption()
{
  return __AXSTripleClickIsComputedOption();
}

uint64_t _AXSTripleClickRemoveOption()
{
  return __AXSTripleClickRemoveOption();
}

uint64_t _AXSTwiceRemoteScreenEnabled()
{
  return __AXSTwiceRemoteScreenEnabled();
}

uint64_t _AXSTwiceRemoteScreenSetPlatform()
{
  return __AXSTwiceRemoteScreenSetPlatform();
}

uint64_t _AXSVibrationDisabled()
{
  return __AXSVibrationDisabled();
}

uint64_t _AXSVisualAlertEnabled()
{
  return __AXSVisualAlertEnabled();
}

uint64_t _AXSVoiceOverSpeakUnderPointerDelay()
{
  return __AXSVoiceOverSpeakUnderPointerDelay();
}

uint64_t _AXSVoiceOverSpeakUnderPointerEnabled()
{
  return __AXSVoiceOverSpeakUnderPointerEnabled();
}

uint64_t _AXSVoiceOverTouchBrailleContractionMode()
{
  return __AXSVoiceOverTouchBrailleContractionMode();
}

uint64_t _AXSVoiceOverTouchBrailleEightDotMode()
{
  return __AXSVoiceOverTouchBrailleEightDotMode();
}

uint64_t _AXSVoiceOverTouchBrailleMasterStatusCellIndex()
{
  return __AXSVoiceOverTouchBrailleMasterStatusCellIndex();
}

uint64_t _AXSVoiceOverTouchBrailleVirtualStatusAlignment()
{
  return __AXSVoiceOverTouchBrailleVirtualStatusAlignment();
}

uint64_t _AXSVoiceOverTouchCopyBrailleTableIdentifier()
{
  return __AXSVoiceOverTouchCopyBrailleTableIdentifier();
}

uint64_t _AXSVoiceOverTouchCopyLanguageRotorItems()
{
  return __AXSVoiceOverTouchCopyLanguageRotorItems();
}

uint64_t _AXSVoiceOverTouchCopyTactileGraphicsDisplay()
{
  return __AXSVoiceOverTouchCopyTactileGraphicsDisplay();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchEnabledThroughAccessory()
{
  return __AXSVoiceOverTouchEnabledThroughAccessory();
}

uint64_t _AXSVoiceOverTouchScreenCurtainEnabled()
{
  return __AXSVoiceOverTouchScreenCurtainEnabled();
}

uint64_t _AXSVoiceOverTouchSetBrailleMasterStatusCellIndex()
{
  return __AXSVoiceOverTouchSetBrailleMasterStatusCellIndex();
}

uint64_t _AXSVoiceOverTouchSetBrailleVirtualStatusAlignment()
{
  return __AXSVoiceOverTouchSetBrailleVirtualStatusAlignment();
}

uint64_t _AXSVoiceOverTouchSetEnabled()
{
  return __AXSVoiceOverTouchSetEnabled();
}

uint64_t _AXSVoiceOverTouchSetLanguageRotorItems()
{
  return __AXSVoiceOverTouchSetLanguageRotorItems();
}

uint64_t _AXSVoiceOverTouchSetTypingMode()
{
  return __AXSVoiceOverTouchSetTypingMode();
}

uint64_t _AXSVoiceOverTouchSetUIEnabled()
{
  return __AXSVoiceOverTouchSetUIEnabled();
}

uint64_t _AXSVoiceOverTouchSetUsageConfirmed()
{
  return __AXSVoiceOverTouchSetUsageConfirmed();
}

uint64_t _AXSVoiceOverTouchSetUserHasReadNoHomeButtonGestureDescription()
{
  return __AXSVoiceOverTouchSetUserHasReadNoHomeButtonGestureDescription();
}

uint64_t _AXSVoiceOverTouchShouldRouteToSpeakerWithProximity()
{
  return __AXSVoiceOverTouchShouldRouteToSpeakerWithProximity();
}

uint64_t _AXSVoiceOverTouchTypingMode()
{
  return __AXSVoiceOverTouchTypingMode();
}

uint64_t _AXSVoiceOverTouchUsageConfirmed()
{
  return __AXSVoiceOverTouchUsageConfirmed();
}

uint64_t _AXSVoiceOverTouchUserHasReadNoHomeButtonGestureDescription()
{
  return __AXSVoiceOverTouchUserHasReadNoHomeButtonGestureDescription();
}

uint64_t _AXSZoomSpeakUnderFingerEnabled()
{
  return __AXSZoomSpeakUnderFingerEnabled();
}

uint64_t _AXSZoomSpeakUnderFingerSetEnabled()
{
  return __AXSZoomSpeakUnderFingerSetEnabled();
}

uint64_t _AXSZoomTouchEnabled()
{
  return __AXSZoomTouchEnabled();
}

uint64_t _AXSZoomTouchSetEnabled()
{
  return __AXSZoomTouchSetEnabled();
}

uint64_t _AXStringForArgs()
{
  return __AXStringForArgs();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CTFontCreateWithNameAndSymbolicTraits()
{
  return __CTFontCreateWithNameAndSymbolicTraits();
}

uint64_t _CTServerConnectionCreate()
{
  return __CTServerConnectionCreate();
}

uint64_t _CTServerConnectionGetCellBroadcastOverrideAccessibilityVibrationSetting()
{
  return __CTServerConnectionGetCellBroadcastOverrideAccessibilityVibrationSetting();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

uint64_t _UIAdaptLocalizedStringForView()
{
  return __UIAdaptLocalizedStringForView();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t __UIAccessibilityCastAsClass()
{
  return ___UIAccessibilityCastAsClass();
}

uint64_t __UIAccessibilitySafeClass()
{
  return ___UIAccessibilitySafeClass();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void abort(void)
{
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

uint64_t assistiveTouchXYScannerNormalizedUserPreferenceForSpeed()
{
  return _assistiveTouchXYScannerNormalizedUserPreferenceForSpeed();
}

uint64_t assistiveTouchXYScannerSpeedForNormalizedUserPreference()
{
  return _assistiveTouchXYScannerSpeedForNormalizedUserPreference();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl calloc(size_t __count, size_t __size)
{
  return _calloc(__count, __size);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return _getpid();
}

uid_t getuid(void)
{
  return _getuid();
}

uint64_t hearingLocString()
{
  return _hearingLocString();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return _memset_s(__s, __smax, __c, __n);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t paBluetoothDeviceSupportsSSL()
{
  return _paBluetoothDeviceSupportsSSL();
}

uint64_t paCurrentBluetoothDeviceSupportingTransparencyAccommodations()
{
  return _paCurrentBluetoothDeviceSupportingTransparencyAccommodations();
}

uint64_t paCurrentRouteSupportsTransparencyAccommodations()
{
  return _paCurrentRouteSupportsTransparencyAccommodations();
}

uint64_t paLocString()
{
  return _paLocString();
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

int putchar(int a1)
{
  return _putchar(a1);
}

int rand(void)
{
  return _rand();
}

uint64_t random(void)
{
  return _random();
}

void srandom(unsigned int a1)
{
}

size_t strnlen(const char *__s1, size_t __n)
{
  return _strnlen(__s1, __n);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return _strtol(__str, __endptr, __base);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t switchControlNormalizedHeadTrackingMovementToleranceInJoystickModeForUserPreference()
{
  return _switchControlNormalizedHeadTrackingMovementToleranceInJoystickModeForUserPreference();
}

uint64_t switchControlNormalizedHeadTrackingSensitivityForUserPreference()
{
  return _switchControlNormalizedHeadTrackingSensitivityForUserPreference();
}

uint64_t switchControlUserPreferenceForNormalizedHeadTrackingMovementToleranceInJoystickMode()
{
  return _switchControlUserPreferenceForNormalizedHeadTrackingMovementToleranceInJoystickMode();
}

uint64_t switchControlUserPreferenceForNormalizedHeadTrackingSensitivity()
{
  return _switchControlUserPreferenceForNormalizedHeadTrackingSensitivity();
}

void syslog(int a1, const char *a2, ...)
{
}

id objc_msgSend_BrailleScreenInput(void *a1, const char *a2, ...)
{
  return _[a1 BrailleScreenInput];
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_DockDidAppear(void *a1, const char *a2, ...)
{
  return _[a1 DockDidAppear];
}

id objc_msgSend_Handwriting(void *a1, const char *a2, ...)
{
  return _[a1 Handwriting];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_MoveIn(void *a1, const char *a2, ...)
{
  return _[a1 MoveIn];
}

id objc_msgSend_MoveOut(void *a1, const char *a2, ...)
{
  return _[a1 MoveOut];
}

id objc_msgSend_OneFingerSingleTap(void *a1, const char *a2, ...)
{
  return _[a1 OneFingerSingleTap];
}

id objc_msgSend_TTYHardwareEnabledForAnyActiveContext(void *a1, const char *a2, ...)
{
  return _[a1 TTYHardwareEnabledForAnyActiveContext];
}

id objc_msgSend_TTYHardwareEnabledForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TTYHardwareEnabledForContext:");
}

id objc_msgSend_TTYSoftwareEnabledForAnyActiveContext(void *a1, const char *a2, ...)
{
  return _[a1 TTYSoftwareEnabledForAnyActiveContext];
}

id objc_msgSend_TTYSoftwareEnabledForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TTYSoftwareEnabledForContext:");
}

id objc_msgSend_ToggleSettingsHUD(void *a1, const char *a2, ...)
{
  return _[a1 ToggleSettingsHUD];
}

id objc_msgSend_TouchIDAuthenticated(void *a1, const char *a2, ...)
{
  return _[a1 TouchIDAuthenticated];
}

id objc_msgSend_TouchIDFailed(void *a1, const char *a2, ...)
{
  return _[a1 TouchIDFailed];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_UUIDWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDWithString:");
}

id objc_msgSend__PSSystemPolicyOptionsAsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_PSSystemPolicyOptionsAsString:");
}

id objc_msgSend__accessibilityIncrementOrDecrement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIncrementOrDecrement:");
}

id objc_msgSend__accessibilitySetBoolValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetBoolValue:forKey:");
}

id objc_msgSend__accessibilitySetCurrentGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetCurrentGesture:");
}

id objc_msgSend__accessibilitySettingsBaseController(void *a1, const char *a2, ...)
{
  return _[a1 _accessibilitySettingsBaseController];
}

id objc_msgSend__actionGroupSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _actionGroupSpecifiers];
}

id objc_msgSend__actionSpecifiersWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionSpecifiersWithActions:");
}

id objc_msgSend__actionWithTitle_image_style_handler_shouldDismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionWithTitle:image:style:handler:shouldDismissHandler:");
}

id objc_msgSend__activityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityChanged:");
}

id objc_msgSend__actualPresentationControllerForController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actualPresentationControllerForController:");
}

id objc_msgSend__addAppWithBundleIdentifier_didDismissPrivacyDisclosureController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAppWithBundleIdentifier:didDismissPrivacyDisclosureController:");
}

id objc_msgSend__addButtonTray(void *a1, const char *a2, ...)
{
  return _[a1 _addButtonTray];
}

id objc_msgSend__addDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDevice:");
}

id objc_msgSend__addDoneButton(void *a1, const char *a2, ...)
{
  return _[a1 _addDoneButton];
}

id objc_msgSend__addEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _addEditButton];
}

id objc_msgSend__addFilterSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addFilterSpecifier:");
}

id objc_msgSend__addKeyboardShortcutWithSpecifier_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addKeyboardShortcutWithSpecifier:resolver:");
}

id objc_msgSend__addOptionSpecifier_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOptionSpecifier:forType:");
}

id objc_msgSend__addScrollViewScrollObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addScrollViewScrollObserver:");
}

id objc_msgSend__addSensitiveContentFeedbackSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSensitiveContentFeedbackSpecifiers:");
}

id objc_msgSend__addSettingToRotor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSettingToRotor:");
}

id objc_msgSend__addSpecifiersForShortcuts_toSpecifiers_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSpecifiersForShortcuts:toSpecifiers:commandManager:resolver:");
}

id objc_msgSend__airPodDevices(void *a1, const char *a2, ...)
{
  return _[a1 _airPodDevices];
}

id objc_msgSend__allShotsRecorded(void *a1, const char *a2, ...)
{
  return _[a1 _allShotsRecorded];
}

id objc_msgSend__allSoundActions(void *a1, const char *a2, ...)
{
  return _[a1 _allSoundActions];
}

id objc_msgSend__allowUSBRM(void *a1, const char *a2, ...)
{
  return _[a1 _allowUSBRM];
}

id objc_msgSend__alwaysAllowVoiceActivation(void *a1, const char *a2, ...)
{
  return _[a1 _alwaysAllowVoiceActivation];
}

id objc_msgSend__animateWithFrictionBounceAnimations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithFrictionBounceAnimations:completion:");
}

id objc_msgSend__appCustomizationSpecifierForFirstPartyAppWithIdentifier_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appCustomizationSpecifierForFirstPartyAppWithIdentifier:title:");
}

id objc_msgSend__appCustomizationSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _appCustomizationSpecifiers];
}

id objc_msgSend__appSpecifierWithTitle_hasChevron_identifier_appIconImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appSpecifierWithTitle:hasChevron:identifier:appIconImage:");
}

id objc_msgSend__applicableHelpModes(void *a1, const char *a2, ...)
{
  return _[a1 _applicableHelpModes];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationIconImageForFormat_precomposed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForFormat:precomposed:");
}

id objc_msgSend__applicationIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIdentifierForIndexPath:");
}

id objc_msgSend__applicationIdentifiersForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIdentifiersForSection:");
}

id objc_msgSend__applicationRecordForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationRecordForIdentifier:");
}

id objc_msgSend__areSpecifiersLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _areSpecifiersLoaded];
}

id objc_msgSend__assetUpdaterClient(void *a1, const char *a2, ...)
{
  return _[a1 _assetUpdaterClient];
}

id objc_msgSend__assignedCommandSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _assignedCommandSpecifiers];
}

id objc_msgSend__audioUIClient(void *a1, const char *a2, ...)
{
  return _[a1 _audioUIClient];
}

id objc_msgSend__authStorageKey(void *a1, const char *a2, ...)
{
  return _[a1 _authStorageKey];
}

id objc_msgSend__autoScanningOptionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _autoScanningOptionsSpecifiers];
}

id objc_msgSend__axApplyGraphicIconNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axApplyGraphicIconNamed:");
}

id objc_msgSend__axDeviceLockType(void *a1, const char *a2, ...)
{
  return _[a1 _axDeviceLockType];
}

id objc_msgSend__axDeviceLockTypeDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axDeviceLockTypeDescription:");
}

id objc_msgSend__axDeviceLockTypeLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axDeviceLockTypeLabel:");
}

id objc_msgSend__axFooterText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axFooterText:");
}

id objc_msgSend__axGetSoundActionsDownloadManager(void *a1, const char *a2, ...)
{
  return _[a1 _axGetSoundActionsDownloadManager];
}

id objc_msgSend__axHandleCalendarAuthorizationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axHandleCalendarAuthorizationController:");
}

id objc_msgSend__axHandleContactsAuthorizationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axHandleContactsAuthorizationController:");
}

id objc_msgSend__axHandleLocationAuthorizationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axHandleLocationAuthorizationController:");
}

id objc_msgSend__axHandlePhotosAuthorizationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axHandlePhotosAuthorizationController:");
}

id objc_msgSend__axIsDisplayTypingMode(void *a1, const char *a2, ...)
{
  return _[a1 _axIsDisplayTypingMode];
}

id objc_msgSend__axPSSystemPolicyOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axPSSystemPolicyOptions:");
}

id objc_msgSend__axParseSoundDetectionRecordingFiles(void *a1, const char *a2, ...)
{
  return _[a1 _axParseSoundDetectionRecordingFiles];
}

id objc_msgSend__axPasscodeInputView(void *a1, const char *a2, ...)
{
  return _[a1 _axPasscodeInputView];
}

id objc_msgSend__axPolicyOptionsFromSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axPolicyOptionsFromSpecifiers:");
}

id objc_msgSend__axSelectSpecifierFromSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axSelectSpecifierFromSpecifiers:");
}

id objc_msgSend__axSetPreciseLocationEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axSetPreciseLocationEnabled:specifier:");
}

id objc_msgSend__axSetSoundActionsDownloadManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axSetSoundActionsDownloadManager:");
}

id objc_msgSend__axShowDoneControllerWithPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axShowDoneControllerWithPasscode:");
}

id objc_msgSend__axShowWarmingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axShowWarmingView:");
}

id objc_msgSend__axSpecifiersForPolicyOptions_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axSpecifiersForPolicyOptions:force:");
}

id objc_msgSend__axSwitchWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axSwitchWithType:");
}

id objc_msgSend__axTransitionToPasscodeInput_withAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axTransitionToPasscodeInput:withAnimation:");
}

id objc_msgSend__axValidateAuthenticationController(void *a1, const char *a2, ...)
{
  return _[a1 _axValidateAuthenticationController];
}

id objc_msgSend__bluetoothBrailleDisplayChange(void *a1, const char *a2, ...)
{
  return _[a1 _bluetoothBrailleDisplayChange];
}

id objc_msgSend__brailleLanguageSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _brailleLanguageSpecifiers];
}

id objc_msgSend__bundle(void *a1, const char *a2, ...)
{
  return _[a1 _bundle];
}

id objc_msgSend__bundleIdentifierProvidesOwnSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleIdentifierProvidesOwnSettings:");
}

id objc_msgSend__buttonClickSpeedFromSpecifierKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonClickSpeedFromSpecifierKey:");
}

id objc_msgSend__buttonNameForKeyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonNameForKeyIdentifier:");
}

id objc_msgSend__calculateAndUpdateDictationStatus(void *a1, const char *a2, ...)
{
  return _[a1 _calculateAndUpdateDictationStatus];
}

id objc_msgSend__calculateAndUpdateDictationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateAndUpdateDictationStatus:");
}

id objc_msgSend__calibrationStrategyForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calibrationStrategyForIndexPath:");
}

id objc_msgSend__callAudioRoutingFromSpecifierKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callAudioRoutingFromSpecifierKey:");
}

id objc_msgSend__canShowCreateNewMappingSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _canShowCreateNewMappingSpecifier];
}

id objc_msgSend__cancelAppOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAppOnboarding];
}

id objc_msgSend__cancelModalFlowWithSwipe_fromNameSoundPane_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelModalFlowWithSwipe:fromNameSoundPane:");
}

id objc_msgSend__cancelOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _cancelOnboarding];
}

id objc_msgSend__cancelOnboardingWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelOnboardingWithCompletion:");
}

id objc_msgSend__cellAccessoryTypeForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellAccessoryTypeForSpecifier:");
}

id objc_msgSend__cellForTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForTouches:");
}

id objc_msgSend__cellsWillTruncateAtWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellsWillTruncateAtWidth:");
}

id objc_msgSend__cfAppID(void *a1, const char *a2, ...)
{
  return _[a1 _cfAppID];
}

id objc_msgSend__changeButtonTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeButtonTapped:");
}

id objc_msgSend__changeVOActivationSpecifierIntoButtonCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeVOActivationSpecifierIntoButtonCell:");
}

id objc_msgSend__changeVOActivationSpecifierIntoSwitchCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeVOActivationSpecifierIntoSwitchCell:");
}

id objc_msgSend__channelCanBeToggled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_channelCanBeToggled:");
}

id objc_msgSend__characterFeedbackSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _characterFeedbackSpecifiers];
}

id objc_msgSend__checkAccessForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAccessForService:");
}

id objc_msgSend__checkExistenceOfSettingsForAppSpecifier_identifier_bundleIdentifiersCheckingExistenceOfSettings_specifiersRequiringReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkExistenceOfSettingsForAppSpecifier:identifier:bundleIdentifiersCheckingExistenceOfSettings:specifiersRequiringReload:");
}

id objc_msgSend__claritySettingsBundlePath(void *a1, const char *a2, ...)
{
  return _[a1 _claritySettingsBundlePath];
}

id objc_msgSend__claritySettingsPath(void *a1, const char *a2, ...)
{
  return _[a1 _claritySettingsPath];
}

id objc_msgSend__claritySettingsPathUsingBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_claritySettingsPathUsingBundle:");
}

id objc_msgSend__cleanupIconPickerTableView(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupIconPickerTableView];
}

id objc_msgSend__cleanupPairing(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupPairing];
}

id objc_msgSend__clearOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _clearOnboarding];
}

id objc_msgSend__clearSCUSBRMDisabler(void *a1, const char *a2, ...)
{
  return _[a1 _clearSCUSBRMDisabler];
}

id objc_msgSend__clearSoundVolumeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _clearSoundVolumeSpecifiers];
}

id objc_msgSend__colorFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorFromData:");
}

id objc_msgSend__colorHighlighted_background_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorHighlighted:background:");
}

id objc_msgSend__colorPickerConfigurationForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorPickerConfigurationForIdentifier:");
}

id objc_msgSend__comparatorForApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _comparatorForApplicationIdentifiers];
}

id objc_msgSend__completeAppOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _completeAppOnboarding];
}

id objc_msgSend__configureCell(void *a1, const char *a2, ...)
{
  return _[a1 _configureCell];
}

id objc_msgSend__configureCheckmarkView(void *a1, const char *a2, ...)
{
  return _[a1 _configureCheckmarkView];
}

id objc_msgSend__configureDwellControlFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDwellControlFooter:");
}

id objc_msgSend__configureEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _configureEditButton];
}

id objc_msgSend__configureEditButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureEditButton:");
}

id objc_msgSend__configureFeedbackLabel(void *a1, const char *a2, ...)
{
  return _[a1 _configureFeedbackLabel];
}

id objc_msgSend__configureVisualizerView(void *a1, const char *a2, ...)
{
  return _[a1 _configureVisualizerView];
}

id objc_msgSend__confirmedSetDetectorEnabled_forSpec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_confirmedSetDetectorEnabled:forSpec:");
}

id objc_msgSend__connectToBrailleClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToBrailleClient:");
}

id objc_msgSend__constrainCheckmarkStackView(void *a1, const char *a2, ...)
{
  return _[a1 _constrainCheckmarkStackView];
}

id objc_msgSend__constrainContentView(void *a1, const char *a2, ...)
{
  return _[a1 _constrainContentView];
}

id objc_msgSend__constrainNameSoundTextField(void *a1, const char *a2, ...)
{
  return _[a1 _constrainNameSoundTextField];
}

id objc_msgSend__constrainSavedSoundLabel(void *a1, const char *a2, ...)
{
  return _[a1 _constrainSavedSoundLabel];
}

id objc_msgSend__constrainSymbolView(void *a1, const char *a2, ...)
{
  return _[a1 _constrainSymbolView];
}

id objc_msgSend__constrainVerticalStackView(void *a1, const char *a2, ...)
{
  return _[a1 _constrainVerticalStackView];
}

id objc_msgSend__constrainVisualizationView(void *a1, const char *a2, ...)
{
  return _[a1 _constrainVisualizationView];
}

id objc_msgSend__containsSubstring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_containsSubstring:");
}

id objc_msgSend__contextId(void *a1, const char *a2, ...)
{
  return _[a1 _contextId];
}

id objc_msgSend__continueAppOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _continueAppOnboarding];
}

id objc_msgSend__continueToTraining(void *a1, const char *a2, ...)
{
  return _[a1 _continueToTraining];
}

id objc_msgSend__cornerActionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cornerActionForIdentifier:");
}

id objc_msgSend__createCustomGesture(void *a1, const char *a2, ...)
{
  return _[a1 _createCustomGesture];
}

id objc_msgSend__createInfoPane(void *a1, const char *a2, ...)
{
  return _[a1 _createInfoPane];
}

id objc_msgSend__createNewMappingSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _createNewMappingSpecifier];
}

id objc_msgSend__createSoundVolumeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _createSoundVolumeSpecifiers];
}

id objc_msgSend__currentDuckingValue(void *a1, const char *a2, ...)
{
  return _[a1 _currentDuckingValue];
}

id objc_msgSend__currentIndex(void *a1, const char *a2, ...)
{
  return _[a1 _currentIndex];
}

id objc_msgSend__currentRouteForOutput(void *a1, const char *a2, ...)
{
  return _[a1 _currentRouteForOutput];
}

id objc_msgSend__currentStrategy(void *a1, const char *a2, ...)
{
  return _[a1 _currentStrategy];
}

id objc_msgSend__currentStyle(void *a1, const char *a2, ...)
{
  return _[a1 _currentStyle];
}

id objc_msgSend__customGestures(void *a1, const char *a2, ...)
{
  return _[a1 _customGestures];
}

id objc_msgSend__customGraphicIconWithSymbol_systemColor_bundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customGraphicIconWithSymbol:systemColor:bundleURL:");
}

id objc_msgSend__customGraphicIconWithSymbol_systemColor_useHierarchical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customGraphicIconWithSymbol:systemColor:useHierarchical:");
}

id objc_msgSend__customizableMouseForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customizableMouseForDevice:");
}

id objc_msgSend__customizationSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _customizationSpecifiers];
}

id objc_msgSend__dataContainerURL(void *a1, const char *a2, ...)
{
  return _[a1 _dataContainerURL];
}

id objc_msgSend__dataSourceForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataSourceForBundleIdentifier:");
}

id objc_msgSend__defaultTable(void *a1, const char *a2, ...)
{
  return _[a1 _defaultTable];
}

id objc_msgSend__defaultToneIdentifierForTonePickerWithAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultToneIdentifierForTonePickerWithAlertType:topic:");
}

id objc_msgSend__defaultVibrationIdentifierForVibrationPickerWithAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultVibrationIdentifierForVibrationPickerWithAlertType:topic:");
}

id objc_msgSend__delayPickerSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayPickerSpecifiers:");
}

id objc_msgSend__deleteFilesForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteFilesForSpecifier:");
}

id objc_msgSend__deselectIdentifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectIdentifierAtIndexPath:");
}

id objc_msgSend__detailTextForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailTextForApplicationIdentifier:");
}

id objc_msgSend__details(void *a1, const char *a2, ...)
{
  return _[a1 _details];
}

id objc_msgSend__deviceHasBiometrics(void *a1, const char *a2, ...)
{
  return _[a1 _deviceHasBiometrics];
}

id objc_msgSend__deviceHasForcePress3dTouch(void *a1, const char *a2, ...)
{
  return _[a1 _deviceHasForcePress3dTouch];
}

id objc_msgSend__deviceLanguage(void *a1, const char *a2, ...)
{
  return _[a1 _deviceLanguage];
}

id objc_msgSend__dictateButtonTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictateButtonTapped:");
}

id objc_msgSend__dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 _dictionaryRepresentation];
}

id objc_msgSend__didUpdateSelectedApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _didUpdateSelectedApplicationIdentifiers];
}

id objc_msgSend__directory(void *a1, const char *a2, ...)
{
  return _[a1 _directory];
}

id objc_msgSend__disableCreateNewGestureButton_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disableCreateNewGestureButton:animated:");
}

id objc_msgSend__disabledSwitchSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _disabledSwitchSpecifiers];
}

id objc_msgSend__dismiss(void *a1, const char *a2, ...)
{
  return _[a1 _dismiss];
}

id objc_msgSend__dismissAccessibilityHUD(void *a1, const char *a2, ...)
{
  return _[a1 _dismissAccessibilityHUD];
}

id objc_msgSend__displayNameForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNameForApplicationIdentifier:");
}

id objc_msgSend__displayPickerForIcon_andLocation_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayPickerForIcon:andLocation:cell:");
}

id objc_msgSend__donePressed(void *a1, const char *a2, ...)
{
  return _[a1 _donePressed];
}

id objc_msgSend__downloadModel(void *a1, const char *a2, ...)
{
  return _[a1 _downloadModel];
}

id objc_msgSend__dwellMovementToleranceHelper(void *a1, const char *a2, ...)
{
  return _[a1 _dwellMovementToleranceHelper];
}

id objc_msgSend__dwellScanningOptionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _dwellScanningOptionsSpecifiers];
}

id objc_msgSend__dynamicPreviewView(void *a1, const char *a2, ...)
{
  return _[a1 _dynamicPreviewView];
}

id objc_msgSend__enablePasscodeFieldWithAttemptCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enablePasscodeFieldWithAttemptCount:");
}

id objc_msgSend__enableSoundDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableSoundDetection:");
}

id objc_msgSend__endNowPlayingSession(void *a1, const char *a2, ...)
{
  return _[a1 _endNowPlayingSession];
}

id objc_msgSend__ensureDefaultRotorItemExists(void *a1, const char *a2, ...)
{
  return _[a1 _ensureDefaultRotorItemExists];
}

id objc_msgSend__enumerateDescendentViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateDescendentViews:");
}

id objc_msgSend__errorMessage(void *a1, const char *a2, ...)
{
  return _[a1 _errorMessage];
}

id objc_msgSend__feedbackRelatedSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _feedbackRelatedSpecifiers];
}

id objc_msgSend__fetchUpdatePlayingInformation(void *a1, const char *a2, ...)
{
  return _[a1 _fetchUpdatePlayingInformation];
}

id objc_msgSend__filterTypeForRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterTypeForRow:");
}

id objc_msgSend__finishEditingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _finishEditingIfNeeded];
}

id objc_msgSend__finishLater(void *a1, const char *a2, ...)
{
  return _[a1 _finishLater];
}

id objc_msgSend__finishRenaming(void *a1, const char *a2, ...)
{
  return _[a1 _finishRenaming];
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _[a1 _font];
}

id objc_msgSend__footerTextForHomeButtonAssistantOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerTextForHomeButtonAssistantOption:");
}

id objc_msgSend__footerTextForNoMappings(void *a1, const char *a2, ...)
{
  return _[a1 _footerTextForNoMappings];
}

id objc_msgSend__generalGroupSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _generalGroupSpecifiers];
}

id objc_msgSend__generateAppSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _generateAppSpecifiers];
}

id objc_msgSend__generateApps(void *a1, const char *a2, ...)
{
  return _[a1 _generateApps];
}

id objc_msgSend__generateRadarForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateRadarForSpecifier:");
}

id objc_msgSend__generateSpecifierForAppID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateSpecifierForAppID:name:");
}

id objc_msgSend__generateSpecifierForName_set_get_inBuddy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateSpecifierForName:set:get:inBuddy:");
}

id objc_msgSend__generateUnselectedAppSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _generateUnselectedAppSpecifiers];
}

id objc_msgSend__generateVOPracticeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _generateVOPracticeSpecifiers];
}

id objc_msgSend__generateVOTutorialSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _generateVOTutorialSpecifiers];
}

id objc_msgSend__handleAccessibilityEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAccessibilityEvent:");
}

id objc_msgSend__handleAssistiveTouchHardwareToggled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAssistiveTouchHardwareToggled:");
}

id objc_msgSend__handleAssistiveTouchToggled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAssistiveTouchToggled:");
}

id objc_msgSend__handleBrailleConfigurationChanged(void *a1, const char *a2, ...)
{
  return _[a1 _handleBrailleConfigurationChanged];
}

id objc_msgSend__handleDoneButtonTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDoneButtonTapped:");
}

id objc_msgSend__handleEnablingVoiceOverWithActivationBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEnablingVoiceOverWithActivationBlock:cancelBlock:");
}

id objc_msgSend__handleEndingEventCaptureIfNeededWithKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEndingEventCaptureIfNeededWithKeyChord:");
}

id objc_msgSend__handleFailedToLoadBluetoothDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFailedToLoadBluetoothDevice:");
}

id objc_msgSend__handleKeyDown_keyInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKeyDown:keyInfo:");
}

id objc_msgSend__handleNowPlayingActivation(void *a1, const char *a2, ...)
{
  return _[a1 _handleNowPlayingActivation];
}

id objc_msgSend__handleOutputDeviceList(void *a1, const char *a2, ...)
{
  return _[a1 _handleOutputDeviceList];
}

id objc_msgSend__handleSelectActionForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSelectActionForSpecifier:");
}

id objc_msgSend__handleSettingsChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleSettingsChange];
}

id objc_msgSend__handleSoundEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSoundEvent:");
}

id objc_msgSend__handleSpeechEventCondition(void *a1, const char *a2, ...)
{
  return _[a1 _handleSpeechEventCondition];
}

id objc_msgSend__handleViewHiddenStatus(void *a1, const char *a2, ...)
{
  return _[a1 _handleViewHiddenStatus];
}

id objc_msgSend__hasSideButtonOnly(void *a1, const char *a2, ...)
{
  return _[a1 _hasSideButtonOnly];
}

id objc_msgSend__headerHeight(void *a1, const char *a2, ...)
{
  return _[a1 _headerHeight];
}

id objc_msgSend__headerSpecifiersForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerSpecifiersForCategory:");
}

id objc_msgSend__hideAppCombinations(void *a1, const char *a2, ...)
{
  return _[a1 _hideAppCombinations];
}

id objc_msgSend__hideAppCombinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideAppCombinations:");
}

id objc_msgSend__hideLargeContentViewerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _hideLargeContentViewerIfNeeded];
}

id objc_msgSend__hideSpecifiersDuringEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSpecifiersDuringEditing:animated:");
}

id objc_msgSend__horizontalPadding(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalPadding];
}

id objc_msgSend__iconColor(void *a1, const char *a2, ...)
{
  return _[a1 _iconColor];
}

id objc_msgSend__iconForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconForApplicationIdentifier:");
}

id objc_msgSend__iconImageFromISIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconImageFromISIcon:");
}

id objc_msgSend__iconPickerDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconPickerDone:");
}

id objc_msgSend__iconVariantForUIApplicationIconFormat_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconVariantForUIApplicationIconFormat:scale:");
}

id objc_msgSend__identifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierAtIndexPath:");
}

id objc_msgSend__identifiersInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifiersInSection:");
}

id objc_msgSend__includedIdentifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_includedIdentifierAtIndexPath:");
}

id objc_msgSend__indexForInsertingApplicationIdentifier_intoArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexForInsertingApplicationIdentifier:intoArray:");
}

id objc_msgSend__indexForInsertingItemWithIdentifier_intoArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexForInsertingItemWithIdentifier:intoArray:");
}

id objc_msgSend__indexOfDefaultRotorItem(void *a1, const char *a2, ...)
{
  return _[a1 _indexOfDefaultRotorItem];
}

id objc_msgSend__indexPathForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForApplicationIdentifier:");
}

id objc_msgSend__indexPathForUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForUsage:");
}

id objc_msgSend__initWithSpecifier_selectionBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithSpecifier:selectionBlock:cancelBlock:");
}

id objc_msgSend__initWithValidation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithValidation:");
}

id objc_msgSend__insertColorGroupingHeaderIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _insertColorGroupingHeaderIfNecessary];
}

id objc_msgSend__insertLongPressController(void *a1, const char *a2, ...)
{
  return _[a1 _insertLongPressController];
}

id objc_msgSend__insertTonePickerView(void *a1, const char *a2, ...)
{
  return _[a1 _insertTonePickerView];
}

id objc_msgSend__installLanguageTranslationModelForLanguageIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_installLanguageTranslationModelForLanguageIfNeeded:");
}

id objc_msgSend__instructionWithFormat_forStandardCommandIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instructionWithFormat:forStandardCommandIdentifier:");
}

id objc_msgSend__interestingOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 _interestingOutputDevices];
}

id objc_msgSend__internalSettingsButton(void *a1, const char *a2, ...)
{
  return _[a1 _internalSettingsButton];
}

id objc_msgSend__isActivityMode(void *a1, const char *a2, ...)
{
  return _[a1 _isActivityMode];
}

id objc_msgSend__isAlarmsFull(void *a1, const char *a2, ...)
{
  return _[a1 _isAlarmsFull];
}

id objc_msgSend__isBluetoothPowerFooterShowing(void *a1, const char *a2, ...)
{
  return _[a1 _isBluetoothPowerFooterShowing];
}

id objc_msgSend__isCategoryEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCategoryEnabled:");
}

id objc_msgSend__isClarityUIApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isClarityUIApplicationIdentifier:");
}

id objc_msgSend__isDisallowedFontFamily_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDisallowedFontFamily:");
}

id objc_msgSend__isDisplayInput(void *a1, const char *a2, ...)
{
  return _[a1 _isDisplayInput];
}

id objc_msgSend__isEditableTableCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEditableTableCell:");
}

id objc_msgSend__isFeatureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isFeatureEnabled];
}

id objc_msgSend__isForExistingMappingWithMissingSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _isForExistingMappingWithMissingSwitch];
}

id objc_msgSend__isGestureNameSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGestureNameSpecifier:");
}

id objc_msgSend__isGesturesInput(void *a1, const char *a2, ...)
{
  return _[a1 _isGesturesInput];
}

id objc_msgSend__isHiddenByUserWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isHiddenByUserWithIdentifier:");
}

id objc_msgSend__isHouseholdFull(void *a1, const char *a2, ...)
{
  return _[a1 _isHouseholdFull];
}

id objc_msgSend__isIconTypeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isIconTypeEnabled:");
}

id objc_msgSend__isLargeTextTypingController(void *a1, const char *a2, ...)
{
  return _[a1 _isLargeTextTypingController];
}

id objc_msgSend__isLocationServicesRestricted(void *a1, const char *a2, ...)
{
  return _[a1 _isLocationServicesRestricted];
}

id objc_msgSend__isMuteAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isMuteAvailable];
}

id objc_msgSend__isNamedItemSpecifierAtIndexPath_tableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isNamedItemSpecifierAtIndexPath:tableView:");
}

id objc_msgSend__isNewMapping(void *a1, const char *a2, ...)
{
  return _[a1 _isNewMapping];
}

id objc_msgSend__isSelectedApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSelectedApplicationIdentifier:");
}

id objc_msgSend__isSiriAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isSiriAvailable];
}

id objc_msgSend__isSystemApplication(void *a1, const char *a2, ...)
{
  return _[a1 _isSystemApplication];
}

id objc_msgSend__isSystemBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSystemBundle:");
}

id objc_msgSend__isTabUnavailableForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTabUnavailableForCommand:");
}

id objc_msgSend__isTimeoutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isTimeoutEnabled];
}

id objc_msgSend__isUsingHeadSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _isUsingHeadSwitch];
}

id objc_msgSend__isValidPunctuationEntry(void *a1, const char *a2, ...)
{
  return _[a1 _isValidPunctuationEntry];
}

id objc_msgSend__isVoiceControlAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isVoiceControlAvailable];
}

id objc_msgSend__itemForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemForCell:");
}

id objc_msgSend__itemHeight(void *a1, const char *a2, ...)
{
  return _[a1 _itemHeight];
}

id objc_msgSend__itemWidth(void *a1, const char *a2, ...)
{
  return _[a1 _itemWidth];
}

id objc_msgSend__itemWidthForColumnCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemWidthForColumnCount:");
}

id objc_msgSend__kShotListeningStateDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _kShotListeningStateDidChange];
}

id objc_msgSend__kShotModelCreationCompleted(void *a1, const char *a2, ...)
{
  return _[a1 _kShotModelCreationCompleted];
}

id objc_msgSend__kShotModelCreationError(void *a1, const char *a2, ...)
{
  return _[a1 _kShotModelCreationError];
}

id objc_msgSend__kShotModelSimilarityWarning(void *a1, const char *a2, ...)
{
  return _[a1 _kShotModelSimilarityWarning];
}

id objc_msgSend__keepListening(void *a1, const char *a2, ...)
{
  return _[a1 _keepListening];
}

id objc_msgSend__keyForSoundAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyForSoundAction:");
}

id objc_msgSend__labelOfType_text_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelOfType:text:");
}

id objc_msgSend__labelWithFont_numerOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelWithFont:numerOfLines:");
}

id objc_msgSend__languageSpecs(void *a1, const char *a2, ...)
{
  return _[a1 _languageSpecs];
}

id objc_msgSend__lastLineBaselineFrameOriginY(void *a1, const char *a2, ...)
{
  return _[a1 _lastLineBaselineFrameOriginY];
}

id objc_msgSend__layoutIcons(void *a1, const char *a2, ...)
{
  return _[a1 _layoutIcons];
}

id objc_msgSend__learnMoreButtonTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_learnMoreButtonTapped:");
}

id objc_msgSend__legacy_sizeWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legacy_sizeWithFont:");
}

id objc_msgSend__listenForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _listenForNotifications];
}

id objc_msgSend__loadDefaultPunctuationReplacements(void *a1, const char *a2, ...)
{
  return _[a1 _loadDefaultPunctuationReplacements];
}

id objc_msgSend__loadPunctationGroups(void *a1, const char *a2, ...)
{
  return _[a1 _loadPunctationGroups];
}

id objc_msgSend__loadPunctuationReplacements(void *a1, const char *a2, ...)
{
  return _[a1 _loadPunctuationReplacements];
}

id objc_msgSend__loadSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _loadSpecifiers];
}

id objc_msgSend__localizeTriggerString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizeTriggerString:");
}

id objc_msgSend__localizedDescriptionForPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedDescriptionForPanningStyle:");
}

id objc_msgSend__localizedExplanationsForServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedExplanationsForServices:");
}

id objc_msgSend__localizedFooterText(void *a1, const char *a2, ...)
{
  return _[a1 _localizedFooterText];
}

id objc_msgSend__localizedHangUpTriggerPhrase(void *a1, const char *a2, ...)
{
  return _[a1 _localizedHangUpTriggerPhrase];
}

id objc_msgSend__localizedSummaryForDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedSummaryForDelay:");
}

id objc_msgSend__localizedTitleForPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedTitleForPanningStyle:");
}

id objc_msgSend__logger(void *a1, const char *a2, ...)
{
  return _[a1 _logger];
}

id objc_msgSend__manageEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _manageEditButton];
}

id objc_msgSend__manageGestureHelpButton(void *a1, const char *a2, ...)
{
  return _[a1 _manageGestureHelpButton];
}

id objc_msgSend__manageHiddenSpecifiers_editing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manageHiddenSpecifiers:editing:");
}

id objc_msgSend__manageRecordCustomSoundButtons(void *a1, const char *a2, ...)
{
  return _[a1 _manageRecordCustomSoundButtons];
}

id objc_msgSend__manageVoiceOverTutorialButton(void *a1, const char *a2, ...)
{
  return _[a1 _manageVoiceOverTutorialButton];
}

id objc_msgSend__manageVoicesSelector(void *a1, const char *a2, ...)
{
  return _[a1 _manageVoicesSelector];
}

id objc_msgSend__manualScanningOptionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _manualScanningOptionsSpecifiers];
}

id objc_msgSend__mappingsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _mappingsSpecifiers];
}

id objc_msgSend__midiGroupSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _midiGroupSpecifiers];
}

id objc_msgSend__minCardHeight(void *a1, const char *a2, ...)
{
  return _[a1 _minCardHeight];
}

id objc_msgSend__modifyKeyboardShortcutWithSpecifier_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modifyKeyboardShortcutWithSpecifier:resolver:");
}

id objc_msgSend__monitorForPairedAirPods(void *a1, const char *a2, ...)
{
  return _[a1 _monitorForPairedAirPods];
}

id objc_msgSend__monitorPencilSupport(void *a1, const char *a2, ...)
{
  return _[a1 _monitorPencilSupport];
}

id objc_msgSend__moreIdentifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moreIdentifierAtIndexPath:");
}

id objc_msgSend__moveIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveIndexPath:toIndexPath:");
}

id objc_msgSend__movementToleranceRadius(void *a1, const char *a2, ...)
{
  return _[a1 _movementToleranceRadius];
}

id objc_msgSend__nameFont(void *a1, const char *a2, ...)
{
  return _[a1 _nameFont];
}

id objc_msgSend__nameForColor_colorType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameForColor:colorType:");
}

id objc_msgSend__nameForCustomizableMouse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameForCustomizableMouse:");
}

id objc_msgSend__nameForToggle(void *a1, const char *a2, ...)
{
  return _[a1 _nameForToggle];
}

id objc_msgSend__nameForTransparency_transparencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameForTransparency:transparencyType:");
}

id objc_msgSend__navigateToDataCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigateToDataCollectionView:");
}

id objc_msgSend__newActivityName(void *a1, const char *a2, ...)
{
  return _[a1 _newActivityName];
}

id objc_msgSend__newAddLanguageSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _newAddLanguageSpecifier];
}

id objc_msgSend__nextCloudImageIndex(void *a1, const char *a2, ...)
{
  return _[a1 _nextCloudImageIndex];
}

id objc_msgSend__nextCludImage(void *a1, const char *a2, ...)
{
  return _[a1 _nextCludImage];
}

id objc_msgSend__nonBuiltInActivityCount(void *a1, const char *a2, ...)
{
  return _[a1 _nonBuiltInActivityCount];
}

id objc_msgSend__optInToImageCaptionFeature(void *a1, const char *a2, ...)
{
  return _[a1 _optInToImageCaptionFeature];
}

id objc_msgSend__optOutOfImageCaptionFeature(void *a1, const char *a2, ...)
{
  return _[a1 _optOutOfImageCaptionFeature];
}

id objc_msgSend__optionFromSpecifierKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optionFromSpecifierKey:");
}

id objc_msgSend__optionIsDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optionIsDisabled:");
}

id objc_msgSend__optionSpecifiersForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optionSpecifiersForType:");
}

id objc_msgSend__panningStyleForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_panningStyleForIndexPath:");
}

id objc_msgSend__parseJSONFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseJSONFile:");
}

id objc_msgSend__pauseScanningGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _pauseScanningGroupSpecifier];
}

id objc_msgSend__pauseScanningSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _pauseScanningSpecifier];
}

id objc_msgSend__pauseVisualizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pauseVisualizer:");
}

id objc_msgSend__pearlDevice(void *a1, const char *a2, ...)
{
  return _[a1 _pearlDevice];
}

id objc_msgSend__peripheralDidCompletePairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peripheralDidCompletePairing:");
}

id objc_msgSend__pinRequestHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pinRequestHandler:");
}

id objc_msgSend__pointPickerSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _pointPickerSpecifiers];
}

id objc_msgSend__popSuggestionsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popSuggestionsController:");
}

id objc_msgSend__popToActionTypeController(void *a1, const char *a2, ...)
{
  return _[a1 _popToActionTypeController];
}

id objc_msgSend__popToLongPressController(void *a1, const char *a2, ...)
{
  return _[a1 _popToLongPressController];
}

id objc_msgSend__popToTopOfBrailleSettings(void *a1, const char *a2, ...)
{
  return _[a1 _popToTopOfBrailleSettings];
}

id objc_msgSend__preferencesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _preferencesDidChange];
}

id objc_msgSend__preferredFontForTextStyle_maximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:maximumContentSizeCategory:");
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__prepareAirPodSpecifierForDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareAirPodSpecifierForDevices:");
}

id objc_msgSend__presentASTAlwaysShowMenuDisabledConfirmationAlert(void *a1, const char *a2, ...)
{
  return _[a1 _presentASTAlwaysShowMenuDisabledConfirmationAlert];
}

id objc_msgSend__presentKShotOnboardingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentKShotOnboardingController:");
}

id objc_msgSend__presentKShotOnboardingControllerWithCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentKShotOnboardingControllerWithCategory:");
}

id objc_msgSend__presentKShotOnboardingControllerWithDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentKShotOnboardingControllerWithDetector:");
}

id objc_msgSend__presentViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentViewController:animated:");
}

id objc_msgSend__previewForConfigurationWithIdentifier_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previewForConfigurationWithIdentifier:inTableView:");
}

id objc_msgSend__previewView(void *a1, const char *a2, ...)
{
  return _[a1 _previewView];
}

id objc_msgSend__profileOverridesStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_profileOverridesStyle:");
}

id objc_msgSend__punctuationGroupChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_punctuationGroupChanged:");
}

id objc_msgSend__purgeModel(void *a1, const char *a2, ...)
{
  return _[a1 _purgeModel];
}

id objc_msgSend__reallyToggleGAXSettingFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyToggleGAXSettingFromValue:");
}

id objc_msgSend__rearrangeMap(void *a1, const char *a2, ...)
{
  return _[a1 _rearrangeMap];
}

id objc_msgSend__reduceMotionAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _reduceMotionAvailable];
}

id objc_msgSend__reloadAfterSecureIntentDismissal(void *a1, const char *a2, ...)
{
  return _[a1 _reloadAfterSecureIntentDismissal];
}

id objc_msgSend__reloadAnnounceNotificationSettingsGroupForAnnounceOnSpeakerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadAnnounceNotificationSettingsGroupForAnnounceOnSpeakerEnabled:");
}

id objc_msgSend__reloadApplications(void *a1, const char *a2, ...)
{
  return _[a1 _reloadApplications];
}

id objc_msgSend__reloadSettings(void *a1, const char *a2, ...)
{
  return _[a1 _reloadSettings];
}

id objc_msgSend__reloadSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _reloadSpecifiers];
}

id objc_msgSend__reloadSpecs(void *a1, const char *a2, ...)
{
  return _[a1 _reloadSpecs];
}

id objc_msgSend__removeDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDevice:");
}

id objc_msgSend__removeInvalidIconsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeInvalidIconsIfNeeded];
}

id objc_msgSend__removeLongPressController(void *a1, const char *a2, ...)
{
  return _[a1 _removeLongPressController];
}

id objc_msgSend__removeOptionWithKey_fromSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeOptionWithKey:fromSpecifiers:");
}

id objc_msgSend__removeSelectedAndHiddenAppSpecfiers(void *a1, const char *a2, ...)
{
  return _[a1 _removeSelectedAndHiddenAppSpecfiers];
}

id objc_msgSend__removeSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _removeSpinner];
}

id objc_msgSend__removeTripleClickOption_fromSpecifiers_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTripleClickOption:fromSpecifiers:options:");
}

id objc_msgSend__removeTripleClickOption_ifNecessaryFromSpecifiers_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTripleClickOption:ifNecessaryFromSpecifiers:options:");
}

id objc_msgSend__removeUnsupportedOptionsFromSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUnsupportedOptionsFromSpecifiers:");
}

id objc_msgSend__reorderSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _reorderSpecifiers];
}

id objc_msgSend__replaceSubMenuTopLevelItems_withItem_itemKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceSubMenuTopLevelItems:withItem:itemKey:");
}

id objc_msgSend__repopulateModuleData(void *a1, const char *a2, ...)
{
  return _[a1 _repopulateModuleData];
}

id objc_msgSend__requiresPreflightForApplicationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresPreflightForApplicationWithIdentifier:");
}

id objc_msgSend__resetActiveProfileToDefault(void *a1, const char *a2, ...)
{
  return _[a1 _resetActiveProfileToDefault];
}

id objc_msgSend__resetPinSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _resetPinSpecifier];
}

id objc_msgSend__retrieveWallpaperData(void *a1, const char *a2, ...)
{
  return _[a1 _retrieveWallpaperData];
}

id objc_msgSend__rootRecipeEditController(void *a1, const char *a2, ...)
{
  return _[a1 _rootRecipeEditController];
}

id objc_msgSend__rootSwitchesController(void *a1, const char *a2, ...)
{
  return _[a1 _rootSwitchesController];
}

id objc_msgSend__sampleFinished(void *a1, const char *a2, ...)
{
  return _[a1 _sampleFinished];
}

id objc_msgSend__save(void *a1, const char *a2, ...)
{
  return _[a1 _save];
}

id objc_msgSend__saveIfPossible(void *a1, const char *a2, ...)
{
  return _[a1 _saveIfPossible];
}

id objc_msgSend__saveItems(void *a1, const char *a2, ...)
{
  return _[a1 _saveItems];
}

id objc_msgSend__saveRecipeIfApplicable(void *a1, const char *a2, ...)
{
  return _[a1 _saveRecipeIfApplicable];
}

id objc_msgSend__saveState(void *a1, const char *a2, ...)
{
  return _[a1 _saveState];
}

id objc_msgSend__saveSwitchToSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveSwitchToSettings:");
}

id objc_msgSend__saveTripleClickOptions(void *a1, const char *a2, ...)
{
  return _[a1 _saveTripleClickOptions];
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scanTimeoutSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _scanTimeoutSpecifier];
}

id objc_msgSend__selectIdentifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectIdentifierAtIndexPath:");
}

id objc_msgSend__selectProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectProfile:");
}

id objc_msgSend__selectedChoice(void *a1, const char *a2, ...)
{
  return _[a1 _selectedChoice];
}

id objc_msgSend__selectedColorForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectedColorForIdentifier:");
}

id objc_msgSend__serviceName(void *a1, const char *a2, ...)
{
  return _[a1 _serviceName];
}

id objc_msgSend__setAccessibilityTraitsBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccessibilityTraitsBlock:");
}

id objc_msgSend__setAccessibilityValueBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccessibilityValueBlock:");
}

id objc_msgSend__setActivityName_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActivityName:specifier:");
}

id objc_msgSend__setAlwaysAllowVoiceActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlwaysAllowVoiceActivation:");
}

id objc_msgSend__setAlwaysShowsOnOffLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlwaysShowsOnOffLabel:");
}

id objc_msgSend__setAttributedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAttributedMessage:");
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContinuousCornerRadius:");
}

id objc_msgSend__setControllers(void *a1, const char *a2, ...)
{
  return _[a1 _setControllers];
}

id objc_msgSend__setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCornerRadius:");
}

id objc_msgSend__setCurrentDuckingValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentDuckingValue:");
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHyphenationFactor:");
}

id objc_msgSend__setIgnoreAppSupportedOrientations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoreAppSupportedOrientations:");
}

id objc_msgSend__setPencilSpecifierShown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPencilSpecifierShown:");
}

id objc_msgSend__setPlayButtonState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPlayButtonState:");
}

id objc_msgSend__setPunctuation_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPunctuation:specifier:");
}

id objc_msgSend__setSectionContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionContentInset:");
}

id objc_msgSend__setTypeToSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTypeToSiriEnabled:");
}

id objc_msgSend__setUpContinueButton_withSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpContinueButton:withSelector:");
}

id objc_msgSend__setUpDoneButton(void *a1, const char *a2, ...)
{
  return _[a1 _setUpDoneButton];
}

id objc_msgSend__setUpNameSoundTextField(void *a1, const char *a2, ...)
{
  return _[a1 _setUpNameSoundTextField];
}

id objc_msgSend__setUpSymbolView(void *a1, const char *a2, ...)
{
  return _[a1 _setUpSymbolView];
}

id objc_msgSend__setUpTableView(void *a1, const char *a2, ...)
{
  return _[a1 _setUpTableView];
}

id objc_msgSend__setUseDeviceSpeakerForTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUseDeviceSpeakerForTTS:");
}

id objc_msgSend__setWallpaper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWallpaper:");
}

id objc_msgSend__settingsBundle(void *a1, const char *a2, ...)
{
  return _[a1 _settingsBundle];
}

id objc_msgSend__settingsUpdated(void *a1, const char *a2, ...)
{
  return _[a1 _settingsUpdated];
}

id objc_msgSend__setupAudioPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupAudioPlayer:");
}

id objc_msgSend__setupBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 _setupBackgroundView];
}

id objc_msgSend__setupCardsView(void *a1, const char *a2, ...)
{
  return _[a1 _setupCardsView];
}

id objc_msgSend__setupCentralScanning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCentralScanning:");
}

id objc_msgSend__setupCheckmarkViews(void *a1, const char *a2, ...)
{
  return _[a1 _setupCheckmarkViews];
}

id objc_msgSend__setupCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _setupCollectionView];
}

id objc_msgSend__setupLabel(void *a1, const char *a2, ...)
{
  return _[a1 _setupLabel];
}

id objc_msgSend__setupLabels(void *a1, const char *a2, ...)
{
  return _[a1 _setupLabels];
}

id objc_msgSend__setupLearnMoreButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupLearnMoreButton];
}

id objc_msgSend__setupLearnMoreLinkButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupLearnMoreLinkButton];
}

id objc_msgSend__setupLearnMoreViewControllerWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupLearnMoreViewControllerWithData:");
}

id objc_msgSend__setupLinkButtonWithTitle_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupLinkButtonWithTitle:action:");
}

id objc_msgSend__setupLocalHeader(void *a1, const char *a2, ...)
{
  return _[a1 _setupLocalHeader];
}

id objc_msgSend__setupPagingControl(void *a1, const char *a2, ...)
{
  return _[a1 _setupPagingControl];
}

id objc_msgSend__setupPasscodeErrorView(void *a1, const char *a2, ...)
{
  return _[a1 _setupPasscodeErrorView];
}

id objc_msgSend__setupPlayButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupPlayButton];
}

id objc_msgSend__setupPracticeViewController(void *a1, const char *a2, ...)
{
  return _[a1 _setupPracticeViewController];
}

id objc_msgSend__setupPreviewRegion(void *a1, const char *a2, ...)
{
  return _[a1 _setupPreviewRegion];
}

id objc_msgSend__setupSavedSoundLabel(void *a1, const char *a2, ...)
{
  return _[a1 _setupSavedSoundLabel];
}

id objc_msgSend__setupSounds(void *a1, const char *a2, ...)
{
  return _[a1 _setupSounds];
}

id objc_msgSend__setupSpecifierIfNeeded_setBlock_getBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupSpecifierIfNeeded:setBlock:getBlock:");
}

id objc_msgSend__setupSpecifiersForExpressions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupSpecifiersForExpressions:");
}

id objc_msgSend__setupTrainingControllerBoldButtonWithTitle_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupTrainingControllerBoldButtonWithTitle:action:");
}

id objc_msgSend__setupVerticalStackView(void *a1, const char *a2, ...)
{
  return _[a1 _setupVerticalStackView];
}

id objc_msgSend__setupVisualizationView(void *a1, const char *a2, ...)
{
  return _[a1 _setupVisualizationView];
}

id objc_msgSend__setupVisualizer(void *a1, const char *a2, ...)
{
  return _[a1 _setupVisualizer];
}

id objc_msgSend__setupVisualizerView(void *a1, const char *a2, ...)
{
  return _[a1 _setupVisualizerView];
}

id objc_msgSend__shortcutSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _shortcutSpecifiers];
}

id objc_msgSend__shouldAllowEditing(void *a1, const char *a2, ...)
{
  return _[a1 _shouldAllowEditing];
}

id objc_msgSend__shouldAllowEditingForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAllowEditingForRowAtIndexPath:");
}

id objc_msgSend__shouldDisableCreateNewGestureButton(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDisableCreateNewGestureButton];
}

id objc_msgSend__shouldDisableSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDisableSwitch];
}

id objc_msgSend__shouldEnableCameraSource(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableCameraSource];
}

id objc_msgSend__shouldEnableExternalSource(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableExternalSource];
}

id objc_msgSend__shouldEnableHandSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldEnableHandSwitch:");
}

id objc_msgSend__shouldEnableHeadSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldEnableHeadSwitch:");
}

id objc_msgSend__shouldEnableScreenSource(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableScreenSource];
}

id objc_msgSend__shouldEnableSoundSource(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableSoundSource];
}

id objc_msgSend__shouldEnableVoiceOverSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableVoiceOverSwitch];
}

id objc_msgSend__shouldPresentPrivacyDisclosureControllerForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldPresentPrivacyDisclosureControllerForBundleIdentifier:");
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 _shouldReverseLayoutDirection];
}

id objc_msgSend__shouldShowAutoTranslate(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowAutoTranslate];
}

id objc_msgSend__shouldShowEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowEditButton];
}

id objc_msgSend__shouldShowEightDotBraille(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowEightDotBraille];
}

id objc_msgSend__shouldUseGraphicsRecipes(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseGraphicsRecipes];
}

id objc_msgSend__shouldUseKShotEnrollment(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseKShotEnrollment];
}

id objc_msgSend__showAccessibilityHUDItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAccessibilityHUDItem:");
}

id objc_msgSend__showActionsForExistingMapping_forSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showActionsForExistingMapping:forSpecifier:");
}

id objc_msgSend__showAdminPasscodeSetupController(void *a1, const char *a2, ...)
{
  return _[a1 _showAdminPasscodeSetupController];
}

id objc_msgSend__showAdminSettingsOnboardingController(void *a1, const char *a2, ...)
{
  return _[a1 _showAdminSettingsOnboardingController];
}

id objc_msgSend__showAirPodsSpecifierWithAirPods_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAirPodsSpecifierWithAirPods:");
}

id objc_msgSend__showAppCombinationsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAppCombinationsAnimated:");
}

id objc_msgSend__showAppSelectionController(void *a1, const char *a2, ...)
{
  return _[a1 _showAppSelectionController];
}

id objc_msgSend__showAppleIDControllerWithAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAppleIDControllerWithAppleID:");
}

id objc_msgSend__showBluetoothPowerFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showBluetoothPowerFooter:");
}

id objc_msgSend__showClarityUIHelp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showClarityUIHelp:");
}

id objc_msgSend__showConfirmationAlertForSpec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showConfirmationAlertForSpec:");
}

id objc_msgSend__showDoneController(void *a1, const char *a2, ...)
{
  return _[a1 _showDoneController];
}

id objc_msgSend__showFinishedController(void *a1, const char *a2, ...)
{
  return _[a1 _showFinishedController];
}

id objc_msgSend__showHeySiriConfirmationAlert(void *a1, const char *a2, ...)
{
  return _[a1 _showHeySiriConfirmationAlert];
}

id objc_msgSend__showInternalDataCollectionAlert(void *a1, const char *a2, ...)
{
  return _[a1 _showInternalDataCollectionAlert];
}

id objc_msgSend__showLayoutSetupController(void *a1, const char *a2, ...)
{
  return _[a1 _showLayoutSetupController];
}

id objc_msgSend__showLongPressControllerForExistingMapping_forSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showLongPressControllerForExistingMapping:forSpecifier:");
}

id objc_msgSend__showParentalControlsSetupController(void *a1, const char *a2, ...)
{
  return _[a1 _showParentalControlsSetupController];
}

id objc_msgSend__showPasscodeAlert(void *a1, const char *a2, ...)
{
  return _[a1 _showPasscodeAlert];
}

id objc_msgSend__showScanningUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showScanningUI:");
}

id objc_msgSend__showSecurityConfirmationSetupController(void *a1, const char *a2, ...)
{
  return _[a1 _showSecurityConfirmationSetupController];
}

id objc_msgSend__showSoftwareKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSoftwareKeyboard:");
}

id objc_msgSend__showSwitchAlreadyInUse(void *a1, const char *a2, ...)
{
  return _[a1 _showSwitchAlreadyInUse];
}

id objc_msgSend__showSwitchesForMapping_forSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSwitchesForMapping:forSpecifier:");
}

id objc_msgSend__showSwitchesForNewMappingForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSwitchesForNewMappingForSpecifier:");
}

id objc_msgSend__showThingsToKnowController(void *a1, const char *a2, ...)
{
  return _[a1 _showThingsToKnowController];
}

id objc_msgSend__showUnifiedSpeechPicker(void *a1, const char *a2, ...)
{
  return _[a1 _showUnifiedSpeechPicker];
}

id objc_msgSend__showUnifiedSpeechSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showUnifiedSpeechSelection:");
}

id objc_msgSend__showUserStudySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _showUserStudySpecifiers];
}

id objc_msgSend__showsLargeContentViewer(void *a1, const char *a2, ...)
{
  return _[a1 _showsLargeContentViewer];
}

id objc_msgSend__sliderLevel(void *a1, const char *a2, ...)
{
  return _[a1 _sliderLevel];
}

id objc_msgSend__sliderLevelForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sliderLevelForValue:");
}

id objc_msgSend__snarfKeyboardEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snarfKeyboardEvent:");
}

id objc_msgSend__sortJSONData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortJSONData:");
}

id objc_msgSend__sortSwitches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortSwitches:");
}

id objc_msgSend__sortedApplicationIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortedApplicationIdentifiers:");
}

id objc_msgSend__soundSwitchSourceShouldEnabledDict(void *a1, const char *a2, ...)
{
  return _[a1 _soundSwitchSourceShouldEnabledDict];
}

id objc_msgSend__soundVolumeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _soundVolumeSpecifiers];
}

id objc_msgSend__specIdentifierForButtonNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specIdentifierForButtonNumber:");
}

id objc_msgSend__specifierForBrailleKeyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForBrailleKeyIdentifier:");
}

id objc_msgSend__specifierForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForCategory:");
}

id objc_msgSend__specifierForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForCommand:");
}

id objc_msgSend__specifierForLocString_identifier_switchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForLocString:identifier:switchType:");
}

id objc_msgSend__specifierForTimeInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForTimeInSeconds:");
}

id objc_msgSend__specifierNameForOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierNameForOption:");
}

id objc_msgSend__specifiersForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifiersForIdentifiers:");
}

id objc_msgSend__specsForAudioDuckingMode(void *a1, const char *a2, ...)
{
  return _[a1 _specsForAudioDuckingMode];
}

id objc_msgSend__specsForLongPressTiming(void *a1, const char *a2, ...)
{
  return _[a1 _specsForLongPressTiming];
}

id objc_msgSend__specsForMainSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _specsForMainSwitch];
}

id objc_msgSend__specsForSensitivity(void *a1, const char *a2, ...)
{
  return _[a1 _specsForSensitivity];
}

id objc_msgSend__specsForTester_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specsForTester:");
}

id objc_msgSend__specsForVolume(void *a1, const char *a2, ...)
{
  return _[a1 _specsForVolume];
}

id objc_msgSend__speechRateFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speechRateFromValue:");
}

id objc_msgSend__speechVoicesIncludingSiri(void *a1, const char *a2, ...)
{
  return _[a1 _speechVoicesIncludingSiri];
}

id objc_msgSend__sspConfirmationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sspConfirmationHandler:");
}

id objc_msgSend__sspNumericComparisonHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sspNumericComparisonHandler:");
}

id objc_msgSend__sspPasskeyDisplayHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sspPasskeyDisplayHandler:");
}

id objc_msgSend__startAccessibilityEventProcessor(void *a1, const char *a2, ...)
{
  return _[a1 _startAccessibilityEventProcessor];
}

id objc_msgSend__startConnectable(void *a1, const char *a2, ...)
{
  return _[a1 _startConnectable];
}

id objc_msgSend__startDeviceLoadFailedTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startDeviceLoadFailedTimer];
}

id objc_msgSend__startDiscoverable(void *a1, const char *a2, ...)
{
  return _[a1 _startDiscoverable];
}

id objc_msgSend__startKShotOnboarding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startKShotOnboarding:");
}

id objc_msgSend__startListening(void *a1, const char *a2, ...)
{
  return _[a1 _startListening];
}

id objc_msgSend__startOnboardingFlow(void *a1, const char *a2, ...)
{
  return _[a1 _startOnboardingFlow];
}

id objc_msgSend__startRenameSoundFlow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRenameSoundFlow:");
}

id objc_msgSend__startSample(void *a1, const char *a2, ...)
{
  return _[a1 _startSample];
}

id objc_msgSend__startScanning(void *a1, const char *a2, ...)
{
  return _[a1 _startScanning];
}

id objc_msgSend__startTraining(void *a1, const char *a2, ...)
{
  return _[a1 _startTraining];
}

id objc_msgSend__stateForTargetDetector(void *a1, const char *a2, ...)
{
  return _[a1 _stateForTargetDetector];
}

id objc_msgSend__stopAccessibilityEventProcessor(void *a1, const char *a2, ...)
{
  return _[a1 _stopAccessibilityEventProcessor];
}

id objc_msgSend__stopConnectable(void *a1, const char *a2, ...)
{
  return _[a1 _stopConnectable];
}

id objc_msgSend__stopDeviceLoadFailedTimer(void *a1, const char *a2, ...)
{
  return _[a1 _stopDeviceLoadFailedTimer];
}

id objc_msgSend__stopDiscoverable(void *a1, const char *a2, ...)
{
  return _[a1 _stopDiscoverable];
}

id objc_msgSend__stopFiltering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopFiltering:");
}

id objc_msgSend__stopListening(void *a1, const char *a2, ...)
{
  return _[a1 _stopListening];
}

id objc_msgSend__stopRecording(void *a1, const char *a2, ...)
{
  return _[a1 _stopRecording];
}

id objc_msgSend__stopSample(void *a1, const char *a2, ...)
{
  return _[a1 _stopSample];
}

id objc_msgSend__stopScanning(void *a1, const char *a2, ...)
{
  return _[a1 _stopScanning];
}

id objc_msgSend__stringForBrailleMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForBrailleMode:");
}

id objc_msgSend__stringForSoundAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForSoundAction:");
}

id objc_msgSend__stringOutputForFeedback_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringOutputForFeedback:value:");
}

id objc_msgSend__stringOutputForOnOffSwitch_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringOutputForOnOffSwitch:value:");
}

id objc_msgSend__stringValueForNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringValueForNumber:");
}

id objc_msgSend__substitutionVoiceId_andLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_substitutionVoiceId:andLanguage:");
}

id objc_msgSend__summaryForListOfItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_summaryForListOfItems:");
}

id objc_msgSend__supportsPronunciationDictation(void *a1, const char *a2, ...)
{
  return _[a1 _supportsPronunciationDictation];
}

id objc_msgSend__supportsTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _supportsTimeout];
}

id objc_msgSend__switchSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _switchSpecifiers];
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__systemPolicySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _systemPolicySpecifiers];
}

id objc_msgSend__systemReplacements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemReplacements:");
}

id objc_msgSend__tableView(void *a1, const char *a2, ...)
{
  return _[a1 _tableView];
}

id objc_msgSend__timeoutSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _timeoutSpecifiers];
}

id objc_msgSend__tipFont(void *a1, const char *a2, ...)
{
  return _[a1 _tipFont];
}

id objc_msgSend__tipForUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tipForUsage:");
}

id objc_msgSend__title(void *a1, const char *a2, ...)
{
  return _[a1 _title];
}

id objc_msgSend__titleForHelpMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForHelpMode:");
}

id objc_msgSend__toggleSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_toggleSample:");
}

id objc_msgSend__toggleShouldEnableAllMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 _toggleShouldEnableAllMenuItems];
}

id objc_msgSend__traitCollectionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_traitCollectionDidChange:");
}

id objc_msgSend__transitionToNextCloudImage(void *a1, const char *a2, ...)
{
  return _[a1 _transitionToNextCloudImage];
}

id objc_msgSend__translatorBundlesWithSystemAtFirst(void *a1, const char *a2, ...)
{
  return _[a1 _translatorBundlesWithSystemAtFirst];
}

id objc_msgSend__typeToSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _typeToSiriEnabled];
}

id objc_msgSend__typeToSiriFooterString(void *a1, const char *a2, ...)
{
  return _[a1 _typeToSiriFooterString];
}

id objc_msgSend__unsetPasscode(void *a1, const char *a2, ...)
{
  return _[a1 _unsetPasscode];
}

id objc_msgSend__updateASTAlwaysShowMenuGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateASTAlwaysShowMenuGroupSpecifier:");
}

id objc_msgSend__updateASTAlwaysShowMenuSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateASTAlwaysShowMenuSpecifiers];
}

id objc_msgSend__updateAppListUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAppListUI:");
}

id objc_msgSend__updateAppSelectionNextButton(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppSelectionNextButton];
}

id objc_msgSend__updateAppSpecifier_hasChevron_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAppSpecifier:hasChevron:");
}

id objc_msgSend__updateAssetStatusCell_error_downloaded_expected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssetStatusCell:error:downloaded:expected:");
}

id objc_msgSend__updateAssistiveTouchControlItems_reload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssistiveTouchControlItems:reload:");
}

id objc_msgSend__updateAttributedMessage(void *a1, const char *a2, ...)
{
  return _[a1 _updateAttributedMessage];
}

id objc_msgSend__updateBorderConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _updateBorderConstraints];
}

id objc_msgSend__updateBrailleWritingCell(void *a1, const char *a2, ...)
{
  return _[a1 _updateBrailleWritingCell];
}

id objc_msgSend__updateButton_withIcon_layout_shouldUpdateLayoutViewIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateButton:withIcon:layout:shouldUpdateLayoutViewIfNeeded:");
}

id objc_msgSend__updateButtonStyle(void *a1, const char *a2, ...)
{
  return _[a1 _updateButtonStyle];
}

id objc_msgSend__updateCell_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCell:forIndexPath:");
}

id objc_msgSend__updateCheckmarkForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCheckmarkForCell:");
}

id objc_msgSend__updateCollectionViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _updateCollectionViewHeightConstraint];
}

id objc_msgSend__updateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _updateConstraints];
}

id objc_msgSend__updateCurrentAppearanceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentAppearanceIfNeeded];
}

id objc_msgSend__updateDelayPickerSpecifiers_afterSpecifierWithIdentifier_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDelayPickerSpecifiers:afterSpecifierWithIdentifier:enabled:");
}

id objc_msgSend__updateDevicePosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDevicePosition:");
}

id objc_msgSend__updateDictationViewWithStatus_withCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDictationViewWithStatus:withCell:");
}

id objc_msgSend__updateEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _updateEditButton];
}

id objc_msgSend__updateEditButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _updateEditButtonState];
}

id objc_msgSend__updateEditingStatusForSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEditingStatusForSpecifiers:");
}

id objc_msgSend__updateFilterOptionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateFilterOptionSpecifiers];
}

id objc_msgSend__updateFilterSelectionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateFilterSelectionSpecifiers];
}

id objc_msgSend__updateFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateFont];
}

id objc_msgSend__updateFooterForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFooterForSpecifier:");
}

id objc_msgSend__updateFooterText(void *a1, const char *a2, ...)
{
  return _[a1 _updateFooterText];
}

id objc_msgSend__updateFooterText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFooterText:");
}

id objc_msgSend__updateFooterTextForMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFooterTextForMode:");
}

id objc_msgSend__updateForController(void *a1, const char *a2, ...)
{
  return _[a1 _updateForController];
}

id objc_msgSend__updateGroupEntries(void *a1, const char *a2, ...)
{
  return _[a1 _updateGroupEntries];
}

id objc_msgSend__updateImage(void *a1, const char *a2, ...)
{
  return _[a1 _updateImage];
}

id objc_msgSend__updateIndexesOnSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateIndexesOnSpecifiers];
}

id objc_msgSend__updateInstructionsText(void *a1, const char *a2, ...)
{
  return _[a1 _updateInstructionsText];
}

id objc_msgSend__updateLabel(void *a1, const char *a2, ...)
{
  return _[a1 _updateLabel];
}

id objc_msgSend__updateLabelText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLabelText:");
}

id objc_msgSend__updateLargeContentViewerForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLargeContentViewerForCell:");
}

id objc_msgSend__updateLatestAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLatestAsset:");
}

id objc_msgSend__updateMouse(void *a1, const char *a2, ...)
{
  return _[a1 _updateMouse];
}

id objc_msgSend__updateNavigationBarUI(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavigationBarUI];
}

id objc_msgSend__updateNowPlayingGroup(void *a1, const char *a2, ...)
{
  return _[a1 _updateNowPlayingGroup];
}

id objc_msgSend__updateNowPlayingGroupWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNowPlayingGroupWithInfo:");
}

id objc_msgSend__updateNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNowPlayingInfo:");
}

id objc_msgSend__updateOnDeviceEyeTrackingSwitchForOneness(void *a1, const char *a2, ...)
{
  return _[a1 _updateOnDeviceEyeTrackingSwitchForOneness];
}

id objc_msgSend__updateOptionVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateOptionVisibility];
}

id objc_msgSend__updateOptionsFooterText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOptionsFooterText:");
}

id objc_msgSend__updatePasscodeErrorLabelWithTimeoutDate_attemptCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePasscodeErrorLabelWithTimeoutDate:attemptCount:");
}

id objc_msgSend__updatePlayButtonTraits(void *a1, const char *a2, ...)
{
  return _[a1 _updatePlayButtonTraits];
}

id objc_msgSend__updatePlaySampleString_reload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePlaySampleString:reload:");
}

id objc_msgSend__updatePrimaryGroupFooterTextAndReloadSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePrimaryGroupFooterTextAndReloadSpecifier:");
}

id objc_msgSend__updateReduceSlideTransitionsSpecifiersAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateReduceSlideTransitionsSpecifiersAnimated:");
}

id objc_msgSend__updateReloadSpecifierInParentController(void *a1, const char *a2, ...)
{
  return _[a1 _updateReloadSpecifierInParentController];
}

id objc_msgSend__updateRightLabelWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRightLabelWithValue:");
}

id objc_msgSend__updateSectionContentInsetWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSectionContentInsetWithAnimation:");
}

id objc_msgSend__updateSelectedRows(void *a1, const char *a2, ...)
{
  return _[a1 _updateSelectedRows];
}

id objc_msgSend__updateSelectedRuleChoice(void *a1, const char *a2, ...)
{
  return _[a1 _updateSelectedRuleChoice];
}

id objc_msgSend__updateSoundDetectionState(void *a1, const char *a2, ...)
{
  return _[a1 _updateSoundDetectionState];
}

id objc_msgSend__updateSoundVolumeSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSoundVolumeSpecifiers:");
}

id objc_msgSend__updateSpeakFingerSetting(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpeakFingerSetting];
}

id objc_msgSend__updateSpecifierItemInfo_parentInfo_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpecifierItemInfo:parentInfo:index:");
}

id objc_msgSend__updateSpecifierState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpecifierState:");
}

id objc_msgSend__updateSpecifierVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpecifierVisibility];
}

id objc_msgSend__updateSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpecifiers];
}

id objc_msgSend__updateSpecifiersForAutoHide(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpecifiersForAutoHide];
}

id objc_msgSend__updateSpecifiersForAutoHideSettingsChange(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpecifiersForAutoHideSettingsChange];
}

id objc_msgSend__updateSpecifiersFromPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _updateSpecifiersFromPreferences];
}

id objc_msgSend__updateTextAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _updateTextAttributes];
}

id objc_msgSend__updateTextField(void *a1, const char *a2, ...)
{
  return _[a1 _updateTextField];
}

id objc_msgSend__updateTitle(void *a1, const char *a2, ...)
{
  return _[a1 _updateTitle];
}

id objc_msgSend__updateToggleButtonName(void *a1, const char *a2, ...)
{
  return _[a1 _updateToggleButtonName];
}

id objc_msgSend__updateTranslationAssetStatus(void *a1, const char *a2, ...)
{
  return _[a1 _updateTranslationAssetStatus];
}

id objc_msgSend__updateTripleClickOptions(void *a1, const char *a2, ...)
{
  return _[a1 _updateTripleClickOptions];
}

id objc_msgSend__updateVOTTutorialSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVOTTutorialSpecifier:");
}

id objc_msgSend__updateViewWithSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _updateViewWithSpinner];
}

id objc_msgSend__updateViewWithSymbolNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithSymbolNamed:");
}

id objc_msgSend__updateVisualizerWithValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVisualizerWithValues:");
}

id objc_msgSend__updatedMouseForExistingMouse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatedMouseForExistingMouse:");
}

id objc_msgSend__usingSupportedDictationLanguage(void *a1, const char *a2, ...)
{
  return _[a1 _usingSupportedDictationLanguage];
}

id objc_msgSend__validateAssetFromResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateAssetFromResults:");
}

id objc_msgSend__vibrationPattern(void *a1, const char *a2, ...)
{
  return _[a1 _vibrationPattern];
}

id objc_msgSend__vibrationVibratesForEmergencies(void *a1, const char *a2, ...)
{
  return _[a1 _vibrationVibratesForEmergencies];
}

id objc_msgSend__videoOverrideText(void *a1, const char *a2, ...)
{
  return _[a1 _videoOverrideText];
}

id objc_msgSend__visualPickerSpecifierWithLeadingButton_trailingButton_preferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_visualPickerSpecifierWithLeadingButton:trailingButton:preferenceKey:");
}

id objc_msgSend__voiceActivationFooterString(void *a1, const char *a2, ...)
{
  return _[a1 _voiceActivationFooterString];
}

id objc_msgSend__voiceFromInternalVoiceListWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_voiceFromInternalVoiceListWithIdentifier:");
}

id objc_msgSend__xOffset(void *a1, const char *a2, ...)
{
  return _[a1 _xOffset];
}

id objc_msgSend__zeroOut(void *a1, const char *a2, ...)
{
  return _[a1 _zeroOut];
}

id objc_msgSend__zoomTouchEnabledSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _zoomTouchEnabledSpecifier];
}

id objc_msgSend_aa_firstName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_firstName");
}

id objc_msgSend_aa_lastName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_lastName");
}

id objc_msgSend_aa_middleName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_middleName");
}

id objc_msgSend_accessibilityData(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityData];
}

id objc_msgSend_accessibilityEventUsage(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityEventUsage];
}

id objc_msgSend_accessibilityFrame(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityFrame];
}

id objc_msgSend_accessibilityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityIdentifier];
}

id objc_msgSend_accessibilityIncrementOrDecrement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityIncrementOrDecrement:");
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityLabel];
}

id objc_msgSend_accessibilityPerformTripleClickAddingBlockConfirmingSOSConflicts_cancellationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityPerformTripleClickAddingBlockConfirmingSOSConflicts:cancellationBlock:");
}

id objc_msgSend_accessibilitySpeakableDisplayValue(void *a1, const char *a2, ...)
{
  return _[a1 accessibilitySpeakableDisplayValue];
}

id objc_msgSend_accessibilitySpeakableDisplayValueWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilitySpeakableDisplayValueWithStyle:");
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityTraits];
}

id objc_msgSend_accessibilityValue(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityValue];
}

id objc_msgSend_accessibleEndpointerThreshold(void *a1, const char *a2, ...)
{
  return _[a1 accessibleEndpointerThreshold];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionForActionPickerController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionForActionPickerController:");
}

id objc_msgSend_actionForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionForSpecifier:");
}

id objc_msgSend_actionName(void *a1, const char *a2, ...)
{
  return _[a1 actionName];
}

id objc_msgSend_actionPickerController_didSelectAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionPickerController:didSelectAction:");
}

id objc_msgSend_actionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 actionSpecifiers];
}

id objc_msgSend_actionStringForLongPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionStringForLongPress:");
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithHandler:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_actionsBySoundAction(void *a1, const char *a2, ...)
{
  return _[a1 actionsBySoundAction];
}

id objc_msgSend_activateCellBlock(void *a1, const char *a2, ...)
{
  return _[a1 activateCellBlock];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activateDetectionMode(void *a1, const char *a2, ...)
{
  return _[a1 activateDetectionMode];
}

id objc_msgSend_activeContextCount(void *a1, const char *a2, ...)
{
  return _[a1 activeContextCount];
}

id objc_msgSend_activeInstance(void *a1, const char *a2, ...)
{
  return _[a1 activeInstance];
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 activeKeyboard];
}

id objc_msgSend_activePunctuationList(void *a1, const char *a2, ...)
{
  return _[a1 activePunctuationList];
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_actualSetHandEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actualSetHandEnabled:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAction_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:forControlEvents:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimations:");
}

id objc_msgSend_addAppSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAppSpecifier:");
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArcWithCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addBoundaryTimeObserverForTimes_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBoundaryTimeObserverForTimes:queue:usingBlock:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:image:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_symbolName_tintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:symbolName:tintColor:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_symbolName_tintColor_linkButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:symbolName:tintColor:linkButton:");
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addButton:");
}

id objc_msgSend_addButtonTapped(void *a1, const char *a2, ...)
{
  return _[a1 addButtonTapped];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraint:");
}

id objc_msgSend_addCustomizedAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCustomizedAppID:");
}

id objc_msgSend_addEventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEventHandler:");
}

id objc_msgSend_addGesture_toCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGesture:toCommand:withResolver:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addHapticItemWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHapticItemWithURL:");
}

id objc_msgSend_addKShotDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKShotDetector:");
}

id objc_msgSend_addKeyChord_toCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKeyChord:toCommand:withResolver:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutput:");
}

id objc_msgSend_addSectionWithHeader_content_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSectionWithHeader:content:");
}

id objc_msgSend_addSoundDetectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSoundDetectionType:");
}

id objc_msgSend_addSoundItemWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSoundItemWithURL:");
}

id objc_msgSend_addStatusObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStatusObserver:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTargetWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTargetWithHandler:");
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextFieldWithConfigurationHandler:");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_adjustedASTIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustedASTIndexPath:");
}

id objc_msgSend_adjustedASTSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustedASTSection:");
}

id objc_msgSend_adjustingBalance(void *a1, const char *a2, ...)
{
  return _[a1 adjustingBalance];
}

id objc_msgSend_afterDelay_processBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterDelay:processBlock:");
}

id objc_msgSend_afterDelay_processBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterDelay:processBlock:cancelBlock:");
}

id objc_msgSend_aggregatePerAppSettingsStatistics(void *a1, const char *a2, ...)
{
  return _[a1 aggregatePerAppSettingsStatistics];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alertType(void *a1, const char *a2, ...)
{
  return _[a1 alertType];
}

id objc_msgSend_allApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allApplicationIdentifiers];
}

id objc_msgSend_allCategories(void *a1, const char *a2, ...)
{
  return _[a1 allCategories];
}

id objc_msgSend_allItems(void *a1, const char *a2, ...)
{
  return _[a1 allItems];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allShortcutBindingsWithResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allShortcutBindingsWithResolver:");
}

id objc_msgSend_allSiriShortcutCommandsWithResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSiriShortcutCommandsWithResolver:");
}

id objc_msgSend_allSoundsForAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSoundsForAssetURL:");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allowItemToBeToggled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowItemToBeToggled:");
}

id objc_msgSend_allowSiri(void *a1, const char *a2, ...)
{
  return _[a1 allowSiri];
}

id objc_msgSend_allowedServices(void *a1, const char *a2, ...)
{
  return _[a1 allowedServices];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _[a1 alpha];
}

id objc_msgSend_alwaysAllowVoiceActivation(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAllowVoiceActivation];
}

id objc_msgSend_alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _[a1 alwaysObscureBackgroundContentWhenActive];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_announceNotificationsOnBuiltInSpeakerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 announceNotificationsOnBuiltInSpeakerEnabled];
}

id objc_msgSend_answerRTTCallsAsMutedForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerRTTCallsAsMutedForContext:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appAvailabilityObserver(void *a1, const char *a2, ...)
{
  return _[a1 appAvailabilityObserver];
}

id objc_msgSend_appID(void *a1, const char *a2, ...)
{
  return _[a1 appID];
}

id objc_msgSend_appIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifiers];
}

id objc_msgSend_appInfo(void *a1, const char *a2, ...)
{
  return _[a1 appInfo];
}

id objc_msgSend_appNameForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appNameForBundleIdentifier:");
}

id objc_msgSend_appPolicy(void *a1, const char *a2, ...)
{
  return _[a1 appPolicy];
}

id objc_msgSend_appSpecifierWithName_bundleID_showContactsAccess_showPickerUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appSpecifierWithName:bundleID:showContactsAccess:showPickerUsage:");
}

id objc_msgSend_appSpecifierWithName_bundleID_showPhotosAccess_showPhotosAddAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appSpecifierWithName:bundleID:showPhotosAccess:showPhotosAddAccess:");
}

id objc_msgSend_appSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 appSpecifiers];
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return _[a1 appearance];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleID(void *a1, const char *a2, ...)
{
  return _[a1 appleID];
}

id objc_msgSend_applicationBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifiers];
}

id objc_msgSend_applicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifiers];
}

id objc_msgSend_applicationIdentifiersToDataSources(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifiersToDataSources];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationRecordForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationRecordForBundleIdentifier:");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_appliesToAllApps(void *a1, const char *a2, ...)
{
  return _[a1 appliesToAllApps];
}

id objc_msgSend_applyAction_toCommand_withGesture_keyboardShortcut_resolver_presentationController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyAction:toCommand:withGesture:keyboardShortcut:resolver:presentationController:completion:");
}

id objc_msgSend_applyThemeToLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyThemeToLabel:");
}

id objc_msgSend_applyThemeToTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyThemeToTextView:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_areDetectorsReady(void *a1, const char *a2, ...)
{
  return _[a1 areDetectorsReady];
}

id objc_msgSend_areSpecifiersLoaded(void *a1, const char *a2, ...)
{
  return _[a1 areSpecifiersLoaded];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayForKey:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assertionForNewsestCompatibleImageCaptionModelAssetWithStage_language_clientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assertionForNewsestCompatibleImageCaptionModelAssetWithStage:language:clientIdentifier:");
}

id objc_msgSend_assetControllerWithPolicy_qosClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetControllerWithPolicy:qosClass:");
}

id objc_msgSend_assetReaderTrackOutputWithTrack_outputSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReaderTrackOutputWithTrack:outputSettings:");
}

id objc_msgSend_assetReaderWithAsset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReaderWithAsset:error:");
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _[a1 assetURL];
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetWithURL:");
}

id objc_msgSend_assetsReady(void *a1, const char *a2, ...)
{
  return _[a1 assetsReady];
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantIsEnabled];
}

id objc_msgSend_assistiveTouchActionRepeatEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchActionRepeatEnabled];
}

id objc_msgSend_assistiveTouchActionRepeatInterval(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchActionRepeatInterval];
}

id objc_msgSend_assistiveTouchActionsBySoundAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchActionsBySoundAction];
}

id objc_msgSend_assistiveTouchAlwaysShowMenuEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchAlwaysShowMenuEnabled];
}

id objc_msgSend_assistiveTouchAxisSweepSpeed(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchAxisSweepSpeed];
}

id objc_msgSend_assistiveTouchBubbleModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchBubbleModeEnabled];
}

id objc_msgSend_assistiveTouchCameraPointPickerSwitches(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchCameraPointPickerSwitches];
}

id objc_msgSend_assistiveTouchCursorColor(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchCursorColor];
}

id objc_msgSend_assistiveTouchDelayAfterInput(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchDelayAfterInput];
}

id objc_msgSend_assistiveTouchDelayAfterInputEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchDelayAfterInputEnabled];
}

id objc_msgSend_assistiveTouchDoubleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchDoubleTapAction];
}

id objc_msgSend_assistiveTouchDoubleTapActionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchDoubleTapActionTimeout];
}

id objc_msgSend_assistiveTouchEyeTrackingAutoHideEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchEyeTrackingAutoHideEnabled];
}

id objc_msgSend_assistiveTouchEyeTrackingAutoHideOpacity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchEyeTrackingAutoHideOpacity];
}

id objc_msgSend_assistiveTouchEyeTrackingAutoHideTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchEyeTrackingAutoHideTimeout];
}

id objc_msgSend_assistiveTouchEyeTrackingUseZoomForKeyboardKeys(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchEyeTrackingUseZoomForKeyboardKeys];
}

id objc_msgSend_assistiveTouchGameControllerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchGameControllerEnabled];
}

id objc_msgSend_assistiveTouchGroupElementsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchGroupElementsEnabled];
}

id objc_msgSend_assistiveTouchHeadMovementSensitivity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchHeadMovementSensitivity];
}

id objc_msgSend_assistiveTouchIdleOpacity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchIdleOpacity];
}

id objc_msgSend_assistiveTouchInputCoalescingDuration(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchInputCoalescingDuration];
}

id objc_msgSend_assistiveTouchInputCoalescingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchInputCoalescingEnabled];
}

id objc_msgSend_assistiveTouchInputHoldDuration(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchInputHoldDuration];
}

id objc_msgSend_assistiveTouchInputHoldEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchInputHoldEnabled];
}

id objc_msgSend_assistiveTouchInternalOnlyPearlTrackingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchInternalOnlyPearlTrackingEnabled];
}

id objc_msgSend_assistiveTouchLongPressAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchLongPressAction];
}

id objc_msgSend_assistiveTouchLongPressActionDuration(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchLongPressActionDuration];
}

id objc_msgSend_assistiveTouchLongPressDuration(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchLongPressDuration];
}

id objc_msgSend_assistiveTouchLongPressEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchLongPressEnabled];
}

id objc_msgSend_assistiveTouchLongPressPauseScanningEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchLongPressPauseScanningEnabled];
}

id objc_msgSend_assistiveTouchMainScreenCustomization(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMainScreenCustomization];
}

id objc_msgSend_assistiveTouchMotionTrackerConfigurable(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerConfigurable];
}

id objc_msgSend_assistiveTouchMotionTrackerShouldOffsetBufferPoints(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerShouldOffsetBufferPoints];
}

id objc_msgSend_assistiveTouchMotionTrackerSmoothingBufferSize(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerSmoothingBufferSize];
}

id objc_msgSend_assistiveTouchMotionTrackerSmoothingMaxDelta(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerSmoothingMaxDelta];
}

id objc_msgSend_assistiveTouchMotionTrackerXNormalizationOffset(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerXNormalizationOffset];
}

id objc_msgSend_assistiveTouchMotionTrackerXNormalizationOrder(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerXNormalizationOrder];
}

id objc_msgSend_assistiveTouchMotionTrackerYNormalizationOffset(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerYNormalizationOffset];
}

id objc_msgSend_assistiveTouchMotionTrackerYNormalizationOrder(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMotionTrackerYNormalizationOrder];
}

id objc_msgSend_assistiveTouchMouseAllowAppleBluetoothDevicesPairing(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseAllowAppleBluetoothDevicesPairing];
}

id objc_msgSend_assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled];
}

id objc_msgSend_assistiveTouchMouseBehavesLikeFinger(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseBehavesLikeFinger];
}

id objc_msgSend_assistiveTouchMouseClickSoundsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseClickSoundsEnabled];
}

id objc_msgSend_assistiveTouchMouseCustomizedClickActions(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseCustomizedClickActions];
}

id objc_msgSend_assistiveTouchMouseDwellControlActivationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlActivationTimeout];
}

id objc_msgSend_assistiveTouchMouseDwellControlAutorevertAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlAutorevertAction];
}

id objc_msgSend_assistiveTouchMouseDwellControlAutorevertEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlAutorevertEnabled];
}

id objc_msgSend_assistiveTouchMouseDwellControlCornerCustomization(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlCornerCustomization];
}

id objc_msgSend_assistiveTouchMouseDwellControlEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlEnabled];
}

id objc_msgSend_assistiveTouchMouseDwellControlMovementToleranceRadius(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseDwellControlMovementToleranceRadius];
}

id objc_msgSend_assistiveTouchMouseKeysDelay(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseKeysDelay];
}

id objc_msgSend_assistiveTouchMouseKeysEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseKeysEnabled];
}

id objc_msgSend_assistiveTouchMouseKeysMaxSpeed(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseKeysMaxSpeed];
}

id objc_msgSend_assistiveTouchMouseKeysOptionToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseKeysOptionToggleEnabled];
}

id objc_msgSend_assistiveTouchMouseKeysUseMainKeyboardKeys(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseKeysUseMainKeyboardKeys];
}

id objc_msgSend_assistiveTouchMouseOnDeviceEyeTrackingCalibrationStrategy(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseOnDeviceEyeTrackingCalibrationStrategy];
}

id objc_msgSend_assistiveTouchMouseOnDeviceEyeTrackingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseOnDeviceEyeTrackingEnabled];
}

id objc_msgSend_assistiveTouchMouseOnDeviceEyeTrackingShouldShowUncalibratedPoints(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseOnDeviceEyeTrackingShouldShowUncalibratedPoints];
}

id objc_msgSend_assistiveTouchMousePointerColor(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMousePointerColor];
}

id objc_msgSend_assistiveTouchMousePointerSizeMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMousePointerSizeMultiplier];
}

id objc_msgSend_assistiveTouchMousePointerTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMousePointerTimeout];
}

id objc_msgSend_assistiveTouchMousePointerTimeoutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMousePointerTimeoutEnabled];
}

id objc_msgSend_assistiveTouchMouseZoomPanningStyle(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchMouseZoomPanningStyle];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingAutoHideEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingAutoHideEnabled];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingAutoHideOpacity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingAutoHideOpacity];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingShouldOffsetBufferPoints(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingShouldOffsetBufferPoints];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingShouldUseGaussianBlur(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingShouldUseGaussianBlur];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingShouldUseMotionFilter(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingShouldUseMotionFilter];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingShouldUseWeightedAverages(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingShouldUseWeightedAverages];
}

id objc_msgSend_assistiveTouchOnDeviceEyeTrackingSmoothingBufferSize(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOnDeviceEyeTrackingSmoothingBufferSize];
}

id objc_msgSend_assistiveTouchOpenMenuSwaggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOpenMenuSwaggleEnabled];
}

id objc_msgSend_assistiveTouchOrbAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchOrbAction];
}

id objc_msgSend_assistiveTouchSavedGestures(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchSavedGestures];
}

id objc_msgSend_assistiveTouchScanCycles(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScanCycles];
}

id objc_msgSend_assistiveTouchScanTimeout(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScanTimeout];
}

id objc_msgSend_assistiveTouchScanTimeoutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScanTimeoutEnabled];
}

id objc_msgSend_assistiveTouchScannerAddedTripleClickAutomatically(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerAddedTripleClickAutomatically];
}

id objc_msgSend_assistiveTouchScannerCompactMenuEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerCompactMenuEnabled];
}

id objc_msgSend_assistiveTouchScannerCursorHighVisibilityEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerCursorHighVisibilityEnabled];
}

id objc_msgSend_assistiveTouchScannerPointPickerModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerPointPickerModeEnabled];
}

id objc_msgSend_assistiveTouchScannerSoundEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerSoundEnabled];
}

id objc_msgSend_assistiveTouchScannerSpeechEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerSpeechEnabled];
}

id objc_msgSend_assistiveTouchScannerSpeechIsInterruptedByScanning(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerSpeechIsInterruptedByScanning];
}

id objc_msgSend_assistiveTouchScannerSpeechRate(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerSpeechRate];
}

id objc_msgSend_assistiveTouchScannerSpeechShouldSpeakTraits(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScannerSpeechShouldSpeakTraits];
}

id objc_msgSend_assistiveTouchScanningMode(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchScanningMode];
}

id objc_msgSend_assistiveTouchShouldUseExtendedKeyboardPredictions(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchShouldUseExtendedKeyboardPredictions];
}

id objc_msgSend_assistiveTouchSingleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchSingleTapAction];
}

id objc_msgSend_assistiveTouchSpeed(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchSpeed];
}

id objc_msgSend_assistiveTouchStepInterval(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchStepInterval];
}

id objc_msgSend_assistiveTouchSwitches(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchSwitches];
}

id objc_msgSend_assistiveTouchVirtualTrackpadBorderColor(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadBorderColor];
}

id objc_msgSend_assistiveTouchVirtualTrackpadBorderOpacity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadBorderOpacity];
}

id objc_msgSend_assistiveTouchVirtualTrackpadBorderWidth(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadBorderWidth];
}

id objc_msgSend_assistiveTouchVirtualTrackpadEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadEnabled];
}

id objc_msgSend_assistiveTouchVirtualTrackpadFadeDelay(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadFadeDelay];
}

id objc_msgSend_assistiveTouchVirtualTrackpadFullScreenToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadFullScreenToggleEnabled];
}

id objc_msgSend_assistiveTouchVirtualTrackpadHoldDuration(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadHoldDuration];
}

id objc_msgSend_assistiveTouchVirtualTrackpadInnerColor(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadInnerColor];
}

id objc_msgSend_assistiveTouchVirtualTrackpadInnerOpacity(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadInnerOpacity];
}

id objc_msgSend_assistiveTouchVirtualTrackpadScrollSpeed(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadScrollSpeed];
}

id objc_msgSend_assistiveTouchVirtualTrackpadScrollToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadScrollToggleEnabled];
}

id objc_msgSend_assistiveTouchVirtualTrackpadSpeed(void *a1, const char *a2, ...)
{
  return _[a1 assistiveTouchVirtualTrackpadSpeed];
}

id objc_msgSend_associatedShortcutName(void *a1, const char *a2, ...)
{
  return _[a1 associatedShortcutName];
}

id objc_msgSend_astNumberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "astNumberOfRowsInSection:");
}

id objc_msgSend_astNumberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 astNumberOfSections];
}

id objc_msgSend_astPickerCellForRowAtIndexPath_tableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "astPickerCellForRowAtIndexPath:tableView:");
}

id objc_msgSend_astTableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "astTableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_astTableView_willDisplayCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "astTableView:willDisplayCell:forRowAtIndexPath:");
}

id objc_msgSend_astTitleForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "astTitleForSection:");
}

id objc_msgSend_attemptToEnterClarityBoard(void *a1, const char *a2, ...)
{
  return _[a1 attemptToEnterClarityBoard];
}

id objc_msgSend_attemptToPresentNearbyDeviceControlPicker(void *a1, const char *a2, ...)
{
  return _[a1 attemptToPresentNearbyDeviceControlPicker];
}

id objc_msgSend_attentionDetectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 attentionDetectionEnabled];
}

id objc_msgSend_audioDucking(void *a1, const char *a2, ...)
{
  return _[a1 audioDucking];
}

id objc_msgSend_audioDucking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioDucking:");
}

id objc_msgSend_audioDuckingModeDescription(void *a1, const char *a2, ...)
{
  return _[a1 audioDuckingModeDescription];
}

id objc_msgSend_audioDuckingVolumeDescription(void *a1, const char *a2, ...)
{
  return _[a1 audioDuckingVolumeDescription];
}

id objc_msgSend_audioLevel(void *a1, const char *a2, ...)
{
  return _[a1 audioLevel];
}

id objc_msgSend_audioRouteDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioRouteDidChange:");
}

id objc_msgSend_audioSession(void *a1, const char *a2, ...)
{
  return _[a1 audioSession];
}

id objc_msgSend_authLevelStringForStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authLevelStringForStatus:");
}

id objc_msgSend_authStorageKeyDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authStorageKeyDescription:");
}

id objc_msgSend_authStorageKeyForRequestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authStorageKeyForRequestSource:");
}

id objc_msgSend_authenticateRestrictionsPasscode_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateRestrictionsPasscode:completionHandler:");
}

id objc_msgSend_authenticateUnconditionallyWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateUnconditionallyWithCompletion:");
}

id objc_msgSend_authenticateWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateWithContext:completion:");
}

id objc_msgSend_authorizedServices(void *a1, const char *a2, ...)
{
  return _[a1 authorizedServices];
}

id objc_msgSend_autoHideOpacityGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 autoHideOpacityGroupSpecifier];
}

id objc_msgSend_autoHideOpacitySliderSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 autoHideOpacitySliderSpecifier];
}

id objc_msgSend_autoHideTimeoutAndSliderContiguousSpecs(void *a1, const char *a2, ...)
{
  return _[a1 autoHideTimeoutAndSliderContiguousSpecs];
}

id objc_msgSend_autoHideTimeoutGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 autoHideTimeoutGroupSpecifier];
}

id objc_msgSend_autoHideTimeoutStepperSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 autoHideTimeoutStepperSpecifier];
}

id objc_msgSend_automaticAccessibilityEnabled(void *a1, const char *a2, ...)
{
  return _[a1 automaticAccessibilityEnabled];
}

id objc_msgSend_automaticAccessibilityIgnoreAppAccessibilityPreferred(void *a1, const char *a2, ...)
{
  return _[a1 automaticAccessibilityIgnoreAppAccessibilityPreferred];
}

id objc_msgSend_automaticAccessibilityModes(void *a1, const char *a2, ...)
{
  return _[a1 automaticAccessibilityModes];
}

id objc_msgSend_autoplayVideoPreviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoplayVideoPreviews:");
}

id objc_msgSend_auxiliarySession(void *a1, const char *a2, ...)
{
  return _[a1 auxiliarySession];
}

id objc_msgSend_avAudioSessionForPlayback(void *a1, const char *a2, ...)
{
  return _[a1 avAudioSessionForPlayback];
}

id objc_msgSend_availabilityForCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityForCommand:withResolver:");
}

id objc_msgSend_availabilityForGesture_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityForGesture:withResolver:");
}

id objc_msgSend_availabilityForShortcut_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityForShortcut:withResolver:");
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return _[a1 available];
}

id objc_msgSend_availableContentViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 availableContentViewHeight];
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableDevices];
}

id objc_msgSend_axArrayByIgnoringNilElementsWithCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axArrayByIgnoringNilElementsWithCount:");
}

id objc_msgSend_axArrayWithPossiblyNilArrays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axArrayWithPossiblyNilArrays:");
}

id objc_msgSend_axAttributedStringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axAttributedStringWithString:");
}

id objc_msgSend_axDeviceControllerType(void *a1, const char *a2, ...)
{
  return _[a1 axDeviceControllerType];
}

id objc_msgSend_axFilterObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axFilterObjectsUsingBlock:");
}

id objc_msgSend_axSafeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axSafeObjectAtIndex:");
}

id objc_msgSend_axSafelyAddObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axSafelyAddObject:");
}

id objc_msgSend_axSafelyAddObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "axSafelyAddObjectsFromArray:");
}

id objc_msgSend_ax_applyCustomAccessibilityGraphicIconNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_applyCustomAccessibilityGraphicIconNamed:");
}

id objc_msgSend_ax_applyPredefinedGraphicIconNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_applyPredefinedGraphicIconNamed:");
}

id objc_msgSend_ax_asset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_asset");
}

id objc_msgSend_ax_assetDeleteButtonHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDeleteButtonHidden");
}

id objc_msgSend_ax_assetDeleteButtonTapHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDeleteButtonTapHandler");
}

id objc_msgSend_ax_assetDownloadButtonHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDownloadButtonHidden");
}

id objc_msgSend_ax_assetDownloadButtonTapHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDownloadButtonTapHandler");
}

id objc_msgSend_ax_assetDownloadBytesExpected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDownloadBytesExpected");
}

id objc_msgSend_ax_assetDownloadBytesReceived(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetDownloadBytesReceived");
}

id objc_msgSend_ax_assetError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetError");
}

id objc_msgSend_ax_assetState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetState");
}

id objc_msgSend_ax_assetUnarchivedFileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_assetUnarchivedFileSize");
}

id objc_msgSend_ax_containsObjectUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_containsObjectUsingBlock:");
}

id objc_msgSend_ax_errorWithDomain_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_errorWithDomain:description:");
}

id objc_msgSend_ax_filteredArrayUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_filteredArrayUsingBlock:");
}

id objc_msgSend_ax_filteredSetUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_filteredSetUsingBlock:");
}

id objc_msgSend_ax_firstObjectUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_firstObjectUsingBlock:");
}

id objc_msgSend_ax_flatMappedArrayUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_flatMappedArrayUsingBlock:");
}

id objc_msgSend_ax_mappedArrayUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_mappedArrayUsingBlock:");
}

id objc_msgSend_ax_mappedSetUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_mappedSetUsingBlock:");
}

id objc_msgSend_ax_stepperSpecifierWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax_stepperSpecifierWithDelegate:");
}

id objc_msgSend_backBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 backBarButtonItem];
}

id objc_msgSend_backTapDoubleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 backTapDoubleTapAction];
}

id objc_msgSend_backTapEnabled(void *a1, const char *a2, ...)
{
  return _[a1 backTapEnabled];
}

id objc_msgSend_backTapFalsePositiveAlertsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 backTapFalsePositiveAlertsEnabled];
}

id objc_msgSend_backTapRNNModelEnabled(void *a1, const char *a2, ...)
{
  return _[a1 backTapRNNModelEnabled];
}

id objc_msgSend_backTapTripleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 backTapTripleTapAction];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundColorForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorForSpecifier:");
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _[a1 backgroundView];
}

id objc_msgSend_baseGroupToVerbosenessLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseGroupToVerbosenessLevel:");
}

id objc_msgSend_basePunctuationUUID(void *a1, const char *a2, ...)
{
  return _[a1 basePunctuationUUID];
}

id objc_msgSend_batchUpdateActiveProfile_saveIfSuccessful_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchUpdateActiveProfile:saveIfSuccessful:completion:");
}

id objc_msgSend_batteryMonitoringEnabled(void *a1, const char *a2, ...)
{
  return _[a1 batteryMonitoringEnabled];
}

id objc_msgSend_becomeActiveIfPossibleWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeActiveIfPossibleWithCompletion:");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginFilteringButtonEvents(void *a1, const char *a2, ...)
{
  return _[a1 beginFilteringButtonEvents];
}

id objc_msgSend_beginFilteringEvents(void *a1, const char *a2, ...)
{
  return _[a1 beginFilteringEvents];
}

id objc_msgSend_beginHandlingHIDEventsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginHandlingHIDEventsForReason:");
}

id objc_msgSend_beginReceivingRemoteControlEvents(void *a1, const char *a2, ...)
{
  return _[a1 beginReceivingRemoteControlEvents];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _[a1 beginningOfDocument];
}

id objc_msgSend_behaviorFooterTextMap(void *a1, const char *a2, ...)
{
  return _[a1 behaviorFooterTextMap];
}

id objc_msgSend_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_bezierPathWithCGPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithCGPath:");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_bindingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 bindingAvailability];
}

id objc_msgSend_biometryType(void *a1, const char *a2, ...)
{
  return _[a1 biometryType];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _[a1 blueColor];
}

id objc_msgSend_bluetoothIsBusy(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothIsBusy];
}

id objc_msgSend_bluetoothPowerAlertMessage(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothPowerAlertMessage];
}

id objc_msgSend_bluetoothPoweredOffFooter(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothPoweredOffFooter];
}

id objc_msgSend_bodyExampleLabel(void *a1, const char *a2, ...)
{
  return _[a1 bodyExampleLabel];
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _[a1 boldButton];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_boldTextEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldTextEnabled:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:error:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_borderHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 borderHeightConstraint];
}

id objc_msgSend_borderView(void *a1, const char *a2, ...)
{
  return _[a1 borderView];
}

id objc_msgSend_borderWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 borderWidthConstraint];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_brailleAlerts(void *a1, const char *a2, ...)
{
  return _[a1 brailleAlerts];
}

id objc_msgSend_brailleAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brailleAlerts:");
}

id objc_msgSend_brailleAutoAdvanceDuration(void *a1, const char *a2, ...)
{
  return _[a1 brailleAutoAdvanceDuration];
}

id objc_msgSend_brailleCommandsForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brailleCommandsForCategory:");
}

id objc_msgSend_brailleFormatting(void *a1, const char *a2, ...)
{
  return _[a1 brailleFormatting];
}

id objc_msgSend_brailleFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brailleFormatting:");
}

id objc_msgSend_brailleInputTable(void *a1, const char *a2, ...)
{
  return _[a1 brailleInputTable];
}

id objc_msgSend_brailleScreenInput(void *a1, const char *a2, ...)
{
  return _[a1 brailleScreenInput];
}

id objc_msgSend_brailleStatusCellGeneral(void *a1, const char *a2, ...)
{
  return _[a1 brailleStatusCellGeneral];
}

id objc_msgSend_brailleStatusCellText(void *a1, const char *a2, ...)
{
  return _[a1 brailleStatusCellText];
}

id objc_msgSend_brailleTable(void *a1, const char *a2, ...)
{
  return _[a1 brailleTable];
}

id objc_msgSend_brailleVoiceOverCategories(void *a1, const char *a2, ...)
{
  return _[a1 brailleVoiceOverCategories];
}

id objc_msgSend_builtIn(void *a1, const char *a2, ...)
{
  return _[a1 builtIn];
}

id objc_msgSend_bundleContainerURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleContainerURL];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleIdentifierForPrivacyDisclosureController(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierForPrivacyDisclosureController];
}

id objc_msgSend_bundleIdentifierHasClaritySettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifierHasClaritySettings:");
}

id objc_msgSend_bundleIdentifierHasClaritySettings_includingSystem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifierHasClaritySettings:includingSystem:");
}

id objc_msgSend_bundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifiers];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _[a1 bundlePath];
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _[a1 button];
}

id objc_msgSend_buttonAction(void *a1, const char *a2, ...)
{
  return _[a1 buttonAction];
}

id objc_msgSend_buttonCount(void *a1, const char *a2, ...)
{
  return _[a1 buttonCount];
}

id objc_msgSend_buttonNamesForInputIdentifier_forDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonNamesForInputIdentifier:forDisplayWithToken:");
}

id objc_msgSend_buttonPickerWantsToInsertText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonPickerWantsToInsertText:");
}

id objc_msgSend_buttonShapesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonShapesEnabled:");
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _[a1 buttonTray];
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithConfiguration:primaryAction:");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_buttonsWithCustomActions(void *a1, const char *a2, ...)
{
  return _[a1 buttonsWithCustomActions];
}

id objc_msgSend_cachedAsset(void *a1, const char *a2, ...)
{
  return _[a1 cachedAsset];
}

id objc_msgSend_cachedBrailleDisplayIsPaired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedBrailleDisplayIsPaired:");
}

id objc_msgSend_cachedCommandMap(void *a1, const char *a2, ...)
{
  return _[a1 cachedCommandMap];
}

id objc_msgSend_cachedDwellScanningOptionsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 cachedDwellScanningOptionsSpecifiers];
}

id objc_msgSend_cachedIdleTimerPref(void *a1, const char *a2, ...)
{
  return _[a1 cachedIdleTimerPref];
}

id objc_msgSend_cachedItems(void *a1, const char *a2, ...)
{
  return _[a1 cachedItems];
}

id objc_msgSend_cachedResults(void *a1, const char *a2, ...)
{
  return _[a1 cachedResults];
}

id objc_msgSend_cachedSelectedApps(void *a1, const char *a2, ...)
{
  return _[a1 cachedSelectedApps];
}

id objc_msgSend_cachedSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 cachedSpecifier];
}

id objc_msgSend_cachedUnselectedApps(void *a1, const char *a2, ...)
{
  return _[a1 cachedUnselectedApps];
}

id objc_msgSend_callAudioRoutingAutoAnswerDelay(void *a1, const char *a2, ...)
{
  return _[a1 callAudioRoutingAutoAnswerDelay];
}

id objc_msgSend_callAudioRoutingAutoAnswerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 callAudioRoutingAutoAnswerEnabled];
}

id objc_msgSend_cameraSwitch(void *a1, const char *a2, ...)
{
  return _[a1 cameraSwitch];
}

id objc_msgSend_cameraSwitchSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 cameraSwitchSpecifier];
}

id objc_msgSend_cameraSwitchType(void *a1, const char *a2, ...)
{
  return _[a1 cameraSwitchType];
}

id objc_msgSend_canAddOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAddOutput:");
}

id objc_msgSend_canEvaluatePolicy_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canEvaluatePolicy:error:");
}

id objc_msgSend_canItemBeToggled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canItemBeToggled:");
}

id objc_msgSend_canUseVoiceTriggerDuringPhoneCall(void *a1, const char *a2, ...)
{
  return _[a1 canUseVoiceTriggerDuringPhoneCall];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelButtonTappedForAppSetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButtonTappedForAppSetupController:");
}

id objc_msgSend_cancelButtonTappedForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButtonTappedForBundleIdentifier:");
}

id objc_msgSend_cancelButtonTappedForPrivacyDisclosureController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButtonTappedForPrivacyDisclosureController:");
}

id objc_msgSend_cancelCustomDetectorTrainingForTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCustomDetectorTrainingForTarget:");
}

id objc_msgSend_cancelPeripheralConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPeripheralConnection:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelPronunciationSession(void *a1, const char *a2, ...)
{
  return _[a1 cancelPronunciationSession];
}

id objc_msgSend_cancelWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelWithRequest:");
}

id objc_msgSend_candidateSelectionLanguage(void *a1, const char *a2, ...)
{
  return _[a1 candidateSelectionLanguage];
}

id objc_msgSend_captionCell(void *a1, const char *a2, ...)
{
  return _[a1 captionCell];
}

id objc_msgSend_captionPreviewSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 captionPreviewSpecifiers];
}

id objc_msgSend_captionPreviewView(void *a1, const char *a2, ...)
{
  return _[a1 captionPreviewView];
}

id objc_msgSend_captionPreviewWasTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "captionPreviewWasTapped:");
}

id objc_msgSend_captionSubtitlePreviewView(void *a1, const char *a2, ...)
{
  return _[a1 captionSubtitlePreviewView];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_categories(void *a1, const char *a2, ...)
{
  return _[a1 categories];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_categoryName(void *a1, const char *a2, ...)
{
  return _[a1 categoryName];
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForItemAtIndexPath:");
}

id objc_msgSend_cellForPresentedHUDView(void *a1, const char *a2, ...)
{
  return _[a1 cellForPresentedHUDView];
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForSpecifier:");
}

id objc_msgSend_cellForSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForSpecifierID:");
}

id objc_msgSend_cellSize(void *a1, const char *a2, ...)
{
  return _[a1 cellSize];
}

id objc_msgSend_cellType(void *a1, const char *a2, ...)
{
  return _[a1 cellType];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_centralManager(void *a1, const char *a2, ...)
{
  return _[a1 centralManager];
}

id objc_msgSend_cgColor(void *a1, const char *a2, ...)
{
  return _[a1 cgColor];
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return _[a1 channel];
}

id objc_msgSend_channelLabel(void *a1, const char *a2, ...)
{
  return _[a1 channelLabel];
}

id objc_msgSend_channelName(void *a1, const char *a2, ...)
{
  return _[a1 channelName];
}

id objc_msgSend_channelViewControllerWithSwitch_parentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelViewControllerWithSwitch:parentController:");
}

id objc_msgSend_channelsForPort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelsForPort:");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterFeedbackDelayDuration(void *a1, const char *a2, ...)
{
  return _[a1 characterFeedbackDelayDuration];
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_checkHapticTrackAvailabilityForMediaMatchingCode_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkHapticTrackAvailabilityForMediaMatchingCode:completionHandler:");
}

id objc_msgSend_checkmarkStackView(void *a1, const char *a2, ...)
{
  return _[a1 checkmarkStackView];
}

id objc_msgSend_checkmarkState(void *a1, const char *a2, ...)
{
  return _[a1 checkmarkState];
}

id objc_msgSend_checkmarkViews(void *a1, const char *a2, ...)
{
  return _[a1 checkmarkViews];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_circle(void *a1, const char *a2, ...)
{
  return _[a1 circle];
}

id objc_msgSend_circleRadius(void *a1, const char *a2, ...)
{
  return _[a1 circleRadius];
}

id objc_msgSend_clarityBundleNameForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarityBundleNameForBundleIdentifier:");
}

id objc_msgSend_clarityGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 clarityGroupSpecifier];
}

id objc_msgSend_clarityPolicySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 clarityPolicySpecifiers];
}

id objc_msgSend_clarityUI_presentLearnMoreViewForTopicID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarityUI_presentLearnMoreViewForTopicID:");
}

id objc_msgSend_clarityUI_shortName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clarityUI_shortName");
}

id objc_msgSend_classNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classNamed:");
}

id objc_msgSend_classicInvertColors(void *a1, const char *a2, ...)
{
  return _[a1 classicInvertColors];
}

id objc_msgSend_cleanup(void *a1, const char *a2, ...)
{
  return _[a1 cleanup];
}

id objc_msgSend_cleanupSynthesizer(void *a1, const char *a2, ...)
{
  return _[a1 cleanupSynthesizer];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearItemCache(void *a1, const char *a2, ...)
{
  return _[a1 clearItemCache];
}

id objc_msgSend_clientType(void *a1, const char *a2, ...)
{
  return _[a1 clientType];
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return _[a1 closePath];
}

id objc_msgSend_cloudImages(void *a1, const char *a2, ...)
{
  return _[a1 cloudImages];
}

id objc_msgSend_cloudsView1(void *a1, const char *a2, ...)
{
  return _[a1 cloudsView1];
}

id objc_msgSend_cloudsView2(void *a1, const char *a2, ...)
{
  return _[a1 cloudsView2];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collectionViewContentSize(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewContentSize];
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewLayout];
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_colorHighlightItems(void *a1, const char *a2, ...)
{
  return _[a1 colorHighlightItems];
}

id objc_msgSend_colorIsBlack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorIsBlack:");
}

id objc_msgSend_colorIsWhite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorIsWhite:");
}

id objc_msgSend_colorNameForHue_saturation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorNameForHue:saturation:");
}

id objc_msgSend_colorType(void *a1, const char *a2, ...)
{
  return _[a1 colorType];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_comfortSoundsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 comfortSoundsAvailable];
}

id objc_msgSend_comfortSoundsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 comfortSoundsEnabled];
}

id objc_msgSend_command(void *a1, const char *a2, ...)
{
  return _[a1 command];
}

id objc_msgSend_commandCategory(void *a1, const char *a2, ...)
{
  return _[a1 commandCategory];
}

id objc_msgSend_commandCategoryContextWithCategory_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandCategoryContextWithCategory:commandManager:resolver:");
}

id objc_msgSend_commandContextWithCommand_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandContextWithCommand:commandManager:resolver:");
}

id objc_msgSend_commandDictionaryForDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandDictionaryForDisplayWithToken:");
}

id objc_msgSend_commandForBrailleKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandForBrailleKey:");
}

id objc_msgSend_commandForKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandForKeyChord:");
}

id objc_msgSend_commandForKeyChord_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandForKeyChord:withResolver:");
}

id objc_msgSend_commandForTouchGesture_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandForTouchGesture:withResolver:");
}

id objc_msgSend_commandHasAnyBindings_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandHasAnyBindings:withResolver:");
}

id objc_msgSend_commandHasModifiedBindingsWhenZoomEnabled_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandHasModifiedBindingsWhenZoomEnabled:withResolver:");
}

id objc_msgSend_commandManager(void *a1, const char *a2, ...)
{
  return _[a1 commandManager];
}

id objc_msgSend_commandMap(void *a1, const char *a2, ...)
{
  return _[a1 commandMap];
}

id objc_msgSend_commandMapWithKeyChord_forCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandMapWithKeyChord:forCommand:");
}

id objc_msgSend_commandWithStandardCommandIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandWithStandardCommandIdentifier:");
}

id objc_msgSend_commands(void *a1, const char *a2, ...)
{
  return _[a1 commands];
}

id objc_msgSend_commitChangeForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitChangeForApplicationIdentifier:");
}

id objc_msgSend_commitChangesToSelectedApplications(void *a1, const char *a2, ...)
{
  return _[a1 commitChangesToSelectedApplications];
}

id objc_msgSend_commonLog(void *a1, const char *a2, ...)
{
  return _[a1 commonLog];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compatibleInputs(void *a1, const char *a2, ...)
{
  return _[a1 compatibleInputs];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithActions:");
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithIdentifier:previewProvider:actionProvider:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurationWithScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithScale:");
}

id objc_msgSend_configureTimebase(void *a1, const char *a2, ...)
{
  return _[a1 configureTimebase];
}

id objc_msgSend_configureWithDriverConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithDriverConfiguration:");
}

id objc_msgSend_confirmDisablingWithString_forKey_confirmedBlock_canceledBlock_inWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmDisablingWithString:forKey:confirmedBlock:canceledBlock:inWindow:");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectWithServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithServices:");
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return _[a1 connected];
}

id objc_msgSend_connectedBluetoothDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedBluetoothDevices];
}

id objc_msgSend_connectedDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedDevices];
}

id objc_msgSend_connectedDevicesRequireAssistiveTouch(void *a1, const char *a2, ...)
{
  return _[a1 connectedDevicesRequireAssistiveTouch];
}

id objc_msgSend_connectedPeripherals(void *a1, const char *a2, ...)
{
  return _[a1 connectedPeripherals];
}

id objc_msgSend_connectingDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectingDevices];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _[a1 constant];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:");
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToConstant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_contactsServicesSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 contactsServicesSpecifier];
}

id objc_msgSend_containerFeedback(void *a1, const char *a2, ...)
{
  return _[a1 containerFeedback];
}

id objc_msgSend_containsDragLockCompatibleDevice(void *a1, const char *a2, ...)
{
  return _[a1 containsDragLockCompatibleDevice];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsSpecifier:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsTrackpad(void *a1, const char *a2, ...)
{
  return _[a1 containsTrackpad];
}

id objc_msgSend_contentHighlightItems(void *a1, const char *a2, ...)
{
  return _[a1 contentHighlightItems];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentVersion(void *a1, const char *a2, ...)
{
  return _[a1 contentVersion];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualActionWithStyle:title:handler:");
}

id objc_msgSend_continueButton(void *a1, const char *a2, ...)
{
  return _[a1 continueButton];
}

id objc_msgSend_continuousCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 continuousCornerRadius];
}

id objc_msgSend_control(void *a1, const char *a2, ...)
{
  return _[a1 control];
}

id objc_msgSend_controlValue(void *a1, const char *a2, ...)
{
  return _[a1 controlValue];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controllerForLongPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerForLongPress:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_convertRect_toWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toWindow:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyDevices(void *a1, const char *a2, ...)
{
  return _[a1 copyDevices];
}

id objc_msgSend_copyNextSampleBuffer(void *a1, const char *a2, ...)
{
  return _[a1 copyNextSampleBuffer];
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 cornerRadius];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createASTIconSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createASTIconSpecifier:");
}

id objc_msgSend_createAVSIntroductionGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 createAVSIntroductionGroupSpecifier];
}

id objc_msgSend_createClarityUIIntroductionGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 createClarityUIIntroductionGroupSpecifier];
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileAtPath:contents:attributes:");
}

id objc_msgSend_createPrivacyDisclosureControllerForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPrivacyDisclosureControllerForBundleIdentifier:");
}

id objc_msgSend_createSettingsControllerForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSettingsControllerForBundleIdentifier:");
}

id objc_msgSend_createSetupControllerForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSetupControllerForBundleIdentifier:");
}

id objc_msgSend_createSetupNavigationControllerForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSetupNavigationControllerForBundleIdentifier:");
}

id objc_msgSend_createWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithCompletionHandler:");
}

id objc_msgSend_currentAction(void *a1, const char *a2, ...)
{
  return _[a1 currentAction];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDevicesHaveAssistiveTouchCustomActions(void *a1, const char *a2, ...)
{
  return _[a1 currentDevicesHaveAssistiveTouchCustomActions];
}

id objc_msgSend_currentFilterSelectionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 currentFilterSelectionSpecifiers];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _[a1 currentItem];
}

id objc_msgSend_currentLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 currentLanguageCode];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentOptionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 currentOptionSpecifiers];
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return _[a1 currentPage];
}

id objc_msgSend_currentPinSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 currentPinSpecifier];
}

id objc_msgSend_currentRoute(void *a1, const char *a2, ...)
{
  return _[a1 currentRoute];
}

id objc_msgSend_currentSOSTriggerMechanism(void *a1, const char *a2, ...)
{
  return _[a1 currentSOSTriggerMechanism];
}

id objc_msgSend_currentSlide(void *a1, const char *a2, ...)
{
  return _[a1 currentSlide];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _[a1 currentTime];
}

id objc_msgSend_currentToneIdentifierForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentToneIdentifierForAlertType:");
}

id objc_msgSend_currentToneIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentToneIdentifierForAlertType:topic:");
}

id objc_msgSend_currentVibrationIdentifierForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVibrationIdentifierForAlertType:");
}

id objc_msgSend_currentZoomPanningStyle(void *a1, const char *a2, ...)
{
  return _[a1 currentZoomPanningStyle];
}

id objc_msgSend_currentZoomStyleTitle(void *a1, const char *a2, ...)
{
  return _[a1 currentZoomStyleTitle];
}

id objc_msgSend_cursorColorSelectionController_allowsCursorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cursorColorSelectionController:allowsCursorColor:");
}

id objc_msgSend_cursorColorSelectionController_selectedCursorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cursorColorSelectionController:selectedCursorColor:");
}

id objc_msgSend_customActionForButtonNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customActionForButtonNumber:");
}

id objc_msgSend_customActionsRequireAssistiveTouch(void *a1, const char *a2, ...)
{
  return _[a1 customActionsRequireAssistiveTouch];
}

id objc_msgSend_customCell_wantsAccessibilityHUDShownForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customCell:wantsAccessibilityHUDShownForItem:");
}

id objc_msgSend_customCell_wantsPickerDisplayedForIconKey_andLocation_cell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customCell:wantsPickerDisplayedForIconKey:andLocation:cell:");
}

id objc_msgSend_customDetectorDelegate(void *a1, const char *a2, ...)
{
  return _[a1 customDetectorDelegate];
}

id objc_msgSend_customDetectors(void *a1, const char *a2, ...)
{
  return _[a1 customDetectors];
}

id objc_msgSend_customGestureSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 customGestureSpecifiers];
}

id objc_msgSend_customGesturesExplanatoryText(void *a1, const char *a2, ...)
{
  return _[a1 customGesturesExplanatoryText];
}

id objc_msgSend_customGesturesTitle(void *a1, const char *a2, ...)
{
  return _[a1 customGesturesTitle];
}

id objc_msgSend_customProfiles(void *a1, const char *a2, ...)
{
  return _[a1 customProfiles];
}

id objc_msgSend_customPronunciationSubstitutions(void *a1, const char *a2, ...)
{
  return _[a1 customPronunciationSubstitutions];
}

id objc_msgSend_customPunctuationGroups(void *a1, const char *a2, ...)
{
  return _[a1 customPunctuationGroups];
}

id objc_msgSend_customSettingsForVoice_sourceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customSettingsForVoice:sourceKey:");
}

id objc_msgSend_customizableMouse(void *a1, const char *a2, ...)
{
  return _[a1 customizableMouse];
}

id objc_msgSend_customizeCell(void *a1, const char *a2, ...)
{
  return _[a1 customizeCell];
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 darkGrayColor];
}

id objc_msgSend_darkenColorsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkenColorsEnabled:");
}

id objc_msgSend_dataContainerURL(void *a1, const char *a2, ...)
{
  return _[a1 dataContainerURL];
}

id objc_msgSend_dataForSoundUsage_assetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForSoundUsage:assetURL:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSource_didSelectBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource:didSelectBundleIdentifier:");
}

id objc_msgSend_dataSourceDelegate(void *a1, const char *a2, ...)
{
  return _[a1 dataSourceDelegate];
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_deactivateAndPersistSearchText(void *a1, const char *a2, ...)
{
  return _[a1 deactivateAndPersistSearchText];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 decimalDigitCharacterSet];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultContentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultContentConfiguration];
}

id objc_msgSend_defaultDurationForTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultDurationForTransition:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMetrics(void *a1, const char *a2, ...)
{
  return _[a1 defaultMetrics];
}

id objc_msgSend_defaultPreferencesForHardwareType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPreferencesForHardwareType:");
}

id objc_msgSend_defaultTableForLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultTableForLocale:");
}

id objc_msgSend_defaultToneIdentifierForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultToneIdentifierForAlertType:");
}

id objc_msgSend_defaultToneIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultToneIdentifierForAlertType:topic:");
}

id objc_msgSend_defaultVibrationIdentifierForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultVibrationIdentifierForAlertType:");
}

id objc_msgSend_defaultVibrationIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultVibrationIdentifierForAlertType:topic:");
}

id objc_msgSend_defaultVoiceContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultVoiceContext];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAllKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllKeys];
}

id objc_msgSend_deleteAllShortcuts(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllShortcuts];
}

id objc_msgSend_deleteButtonSpecifierWithName_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButtonSpecifierWithName:target:action:");
}

id objc_msgSend_deleteItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItem:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteShortcutWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteShortcutWithIdentifier:");
}

id objc_msgSend_deleteTrainingFilesForDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteTrainingFilesForDetector:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:");
}

id objc_msgSend_deregisterListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deregisterListener:");
}

id objc_msgSend_descriptionForOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForOption:");
}

id objc_msgSend_descriptionGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 descriptionGroupSpecifier];
}

id objc_msgSend_descriptor(void *a1, const char *a2, ...)
{
  return _[a1 descriptor];
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectItemAtIndexPath:animated:");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_desiredHeight(void *a1, const char *a2, ...)
{
  return _[a1 desiredHeight];
}

id objc_msgSend_desiredHeightForData_givenWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredHeightForData:givenWidth:");
}

id objc_msgSend_detailClassForFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailClassForFeature:");
}

id objc_msgSend_detailControllerClass(void *a1, const char *a2, ...)
{
  return _[a1 detailControllerClass];
}

id objc_msgSend_detailTextForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailTextForItem:");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_detailViewControllerClass(void *a1, const char *a2, ...)
{
  return _[a1 detailViewControllerClass];
}

id objc_msgSend_detectorInfoController(void *a1, const char *a2, ...)
{
  return _[a1 detectorInfoController];
}

id objc_msgSend_detectorName(void *a1, const char *a2, ...)
{
  return _[a1 detectorName];
}

id objc_msgSend_detectorNameTextField(void *a1, const char *a2, ...)
{
  return _[a1 detectorNameTextField];
}

id objc_msgSend_developerExplanationsForSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "developerExplanationsForSpecifiers:");
}

id objc_msgSend_developerType(void *a1, const char *a2, ...)
{
  return _[a1 developerType];
}

id objc_msgSend_deviceConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceConnected:");
}

id objc_msgSend_deviceKeys(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeys];
}

id objc_msgSend_deviceMonitorDidDetectDeviceEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceMonitorDidDetectDeviceEvent:");
}

id objc_msgSend_deviceWithDescriptor_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithDescriptor:error:");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_devicesGroupName(void *a1, const char *a2, ...)
{
  return _[a1 devicesGroupName];
}

id objc_msgSend_devicesUpdatedBlock(void *a1, const char *a2, ...)
{
  return _[a1 devicesUpdatedBlock];
}

id objc_msgSend_dialectForLanguageID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialectForLanguageID:");
}

id objc_msgSend_dialectForSystemLanguage(void *a1, const char *a2, ...)
{
  return _[a1 dialectForSystemLanguage];
}

id objc_msgSend_dialectForUserLocale(void *a1, const char *a2, ...)
{
  return _[a1 dialectForUserLocale];
}

id objc_msgSend_dictateButton(void *a1, const char *a2, ...)
{
  return _[a1 dictateButton];
}

id objc_msgSend_dictationIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 dictationIsEnabled];
}

id objc_msgSend_dictationViewClass(void *a1, const char *a2, ...)
{
  return _[a1 dictationViewClass];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didSaveItems(void *a1, const char *a2, ...)
{
  return _[a1 didSaveItems];
}

id objc_msgSend_didSelectDisplayFilterPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSelectDisplayFilterPage:");
}

id objc_msgSend_didShowOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 didShowOnboarding];
}

id objc_msgSend_didUpdateApplicationIdentifiersForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateApplicationIdentifiersForDataSource:");
}

id objc_msgSend_didUpdateCustomizeCellHeight(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateCustomizeCellHeight];
}

id objc_msgSend_differentiateWithoutColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "differentiateWithoutColor:");
}

id objc_msgSend_dimissOnboardingControllerEarlyWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dimissOnboardingControllerEarlyWithCompletion:");
}

id objc_msgSend_disableMultiroute(void *a1, const char *a2, ...)
{
  return _[a1 disableMultiroute];
}

id objc_msgSend_disallowedActions(void *a1, const char *a2, ...)
{
  return _[a1 disallowedActions];
}

id objc_msgSend_disambiguationString(void *a1, const char *a2, ...)
{
  return _[a1 disambiguationString];
}

id objc_msgSend_discardAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discardAssertion:");
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return _[a1 disconnect];
}

id objc_msgSend_discoveredMouseDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredMouseDevices];
}

id objc_msgSend_discoverySessionWithDeviceTypes_mediaType_position_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverySessionWithDeviceTypes:mediaType:position:");
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismissKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 dismissKeyboard];
}

id objc_msgSend_dismissViewController(void *a1, const char *a2, ...)
{
  return _[a1 dismissViewController];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissViewControllerWithTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerWithTransition:completion:");
}

id objc_msgSend_dismissWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissWithCompletion:");
}

id objc_msgSend_dispatchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchRequest:");
}

id objc_msgSend_dispatchSpeechAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchSpeechAction:");
}

id objc_msgSend_displayDelegate(void *a1, const char *a2, ...)
{
  return _[a1 displayDelegate];
}

id objc_msgSend_displayFilterPageDelegate(void *a1, const char *a2, ...)
{
  return _[a1 displayFilterPageDelegate];
}

id objc_msgSend_displayFilterUIClient(void *a1, const char *a2, ...)
{
  return _[a1 displayFilterUIClient];
}

id objc_msgSend_displaySetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displaySetupController:");
}

id objc_msgSend_displayTextSpecifiersIncludingSmartInvert_isPerApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayTextSpecifiersIncludingSmartInvert:isPerApp:");
}

id objc_msgSend_displayVoiceOverTutorialView(void *a1, const char *a2, ...)
{
  return _[a1 displayVoiceOverTutorialView];
}

id objc_msgSend_displayingFilterSelection(void *a1, const char *a2, ...)
{
  return _[a1 displayingFilterSelection];
}

id objc_msgSend_displayingOptionsForType(void *a1, const char *a2, ...)
{
  return _[a1 displayingOptionsForType];
}

id objc_msgSend_dockPositionSpecs(void *a1, const char *a2, ...)
{
  return _[a1 dockPositionSpecs];
}

id objc_msgSend_dockPositionsGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 dockPositionsGroupSpecifier];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return _[a1 doneButton];
}

id objc_msgSend_doneButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 doneButtonPressed];
}

id objc_msgSend_doubleTapDragMode(void *a1, const char *a2, ...)
{
  return _[a1 doubleTapDragMode];
}

id objc_msgSend_doubleTapDragModes(void *a1, const char *a2, ...)
{
  return _[a1 doubleTapDragModes];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadAssets_successStartBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadAssets:successStartBlock:");
}

id objc_msgSend_downloadCompactResourceIfNeededForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadCompactResourceIfNeededForIdentifier:");
}

id objc_msgSend_downloadDetectors(void *a1, const char *a2, ...)
{
  return _[a1 downloadDetectors];
}

id objc_msgSend_downloadSize(void *a1, const char *a2, ...)
{
  return _[a1 downloadSize];
}

id objc_msgSend_drawAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:");
}

id objc_msgSend_drawCircleWithRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawCircleWithRadius:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_driverConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 driverConfiguration];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_dwellMovementToleranceHelper(void *a1, const char *a2, ...)
{
  return _[a1 dwellMovementToleranceHelper];
}

id objc_msgSend_dwellSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 dwellSpecifiers];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_editKShotDetectorName_newName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editKShotDetectorName:newName:");
}

id objc_msgSend_editableTextField(void *a1, const char *a2, ...)
{
  return _[a1 editableTextField];
}

id objc_msgSend_editingSpec(void *a1, const char *a2, ...)
{
  return _[a1 editingSpec];
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_effectiveGlobalAnnounceSetting(void *a1, const char *a2, ...)
{
  return _[a1 effectiveGlobalAnnounceSetting];
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 effectiveUserInterfaceLayoutDirection];
}

id objc_msgSend_elementVisionModelAssetPolicy(void *a1, const char *a2, ...)
{
  return _[a1 elementVisionModelAssetPolicy];
}

id objc_msgSend_emptyGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 emptyGroupSpecifier];
}

id objc_msgSend_enableMultiroute(void *a1, const char *a2, ...)
{
  return _[a1 enableMultiroute];
}

id objc_msgSend_enableVoiceOverCaptions(void *a1, const char *a2, ...)
{
  return _[a1 enableVoiceOverCaptions];
}

id objc_msgSend_enableWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableWithCompletion:");
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_enabledInputModeLanguages(void *a1, const char *a2, ...)
{
  return _[a1 enabledInputModeLanguages];
}

id objc_msgSend_enabledKShotDetectorIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 enabledKShotDetectorIdentifiers];
}

id objc_msgSend_enabledSoundDetectionTypes(void *a1, const char *a2, ...)
{
  return _[a1 enabledSoundDetectionTypes];
}

id objc_msgSend_enabledSwitchesSpecifierGroup(void *a1, const char *a2, ...)
{
  return _[a1 enabledSwitchesSpecifierGroup];
}

id objc_msgSend_enclosingViewController(void *a1, const char *a2, ...)
{
  return _[a1 enclosingViewController];
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endFilteringButtonEvents(void *a1, const char *a2, ...)
{
  return _[a1 endFilteringButtonEvents];
}

id objc_msgSend_endFilteringEvents(void *a1, const char *a2, ...)
{
  return _[a1 endFilteringEvents];
}

id objc_msgSend_endHandlingHIDEventsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endHandlingHIDEventsForReason:");
}

id objc_msgSend_endOfDocument(void *a1, const char *a2, ...)
{
  return _[a1 endOfDocument];
}

id objc_msgSend_endReceivingRemoteControlEvents(void *a1, const char *a2, ...)
{
  return _[a1 endReceivingRemoteControlEvents];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_enqueueSampleBuffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueSampleBuffer:");
}

id objc_msgSend_enrollSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 enrollSpecifier];
}

id objc_msgSend_enterDoneState(void *a1, const char *a2, ...)
{
  return _[a1 enterDoneState];
}

id objc_msgSend_enterListeningState(void *a1, const char *a2, ...)
{
  return _[a1 enterListeningState];
}

id objc_msgSend_enterListeningStateWithCheckmarkIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterListeningStateWithCheckmarkIndex:");
}

id objc_msgSend_enterModelSimilarityWarningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterModelSimilarityWarningState:");
}

id objc_msgSend_enterPreListeningState(void *a1, const char *a2, ...)
{
  return _[a1 enterPreListeningState];
}

id objc_msgSend_enterSavingStateWithCheckmarkIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterSavingStateWithCheckmarkIndex:");
}

id objc_msgSend_enterTimeoutState(void *a1, const char *a2, ...)
{
  return _[a1 enterTimeoutState];
}

id objc_msgSend_enterWaitingForSaveState(void *a1, const char *a2, ...)
{
  return _[a1 enterWaitingForSaveState];
}

id objc_msgSend_enterWaitingForSaveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterWaitingForSaveState:");
}

id objc_msgSend_enterWaitingForSoundState(void *a1, const char *a2, ...)
{
  return _[a1 enterWaitingForSoundState];
}

id objc_msgSend_entityAuthorizationForLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityAuthorizationForLocationDictionary:");
}

id objc_msgSend_entries(void *a1, const char *a2, ...)
{
  return _[a1 entries];
}

id objc_msgSend_enumerateBundlesOfType_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateBundlesOfType:block:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratorAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtPath:");
}

id objc_msgSend_exitedOnboardingFlow(void *a1, const char *a2, ...)
{
  return _[a1 exitedOnboardingFlow];
}

id objc_msgSend_expressionSensitivity(void *a1, const char *a2, ...)
{
  return _[a1 expressionSensitivity];
}

id objc_msgSend_expressionToSwitchTypeMapping(void *a1, const char *a2, ...)
{
  return _[a1 expressionToSwitchTypeMapping];
}

id objc_msgSend_externalizedContext(void *a1, const char *a2, ...)
{
  return _[a1 externalizedContext];
}

id objc_msgSend_extraOnOffSwitchBlock(void *a1, const char *a2, ...)
{
  return _[a1 extraOnOffSwitchBlock];
}

id objc_msgSend_eyeTracker(void *a1, const char *a2, ...)
{
  return _[a1 eyeTracker];
}

id objc_msgSend_eyeTrackingSettingsHelper(void *a1, const char *a2, ...)
{
  return _[a1 eyeTrackingSettingsHelper];
}

id objc_msgSend_familyNames(void *a1, const char *a2, ...)
{
  return _[a1 familyNames];
}

id objc_msgSend_feedbackDelayPickerSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 feedbackDelayPickerSpecifier];
}

id objc_msgSend_feedbackTypeForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackTypeForString:");
}

id objc_msgSend_fetchMainButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 fetchMainButtonTitle];
}

id objc_msgSend_fetchMovieName(void *a1, const char *a2, ...)
{
  return _[a1 fetchMovieName];
}

id objc_msgSend_fetchTitleForPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTitleForPage:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return _[a1 fileURL];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _[a1 fill];
}

id objc_msgSend_fillCircle(void *a1, const char *a2, ...)
{
  return _[a1 fillCircle];
}

id objc_msgSend_filterAndTrackMenuItemsMatchingBlock_allItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterAndTrackMenuItemsMatchingBlock:allItems:");
}

id objc_msgSend_filterBuddy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterBuddy:");
}

id objc_msgSend_filterCategory(void *a1, const char *a2, ...)
{
  return _[a1 filterCategory];
}

id objc_msgSend_filterForCellIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterForCellIdentifier:");
}

id objc_msgSend_filterSelectionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 filterSelectionSpecifiers];
}

id objc_msgSend_filterTypeToOptionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 filterTypeToOptionSpecifiers];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_fire(void *a1, const char *a2, ...)
{
  return _[a1 fire];
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 firstBaselineAnchor];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstResponder(void *a1, const char *a2, ...)
{
  return _[a1 firstResponder];
}

id objc_msgSend_fkaSpeakableDisplayValue(void *a1, const char *a2, ...)
{
  return _[a1 fkaSpeakableDisplayValue];
}

id objc_msgSend_flashCount(void *a1, const char *a2, ...)
{
  return _[a1 flashCount];
}

id objc_msgSend_flashTimer(void *a1, const char *a2, ...)
{
  return _[a1 flashTimer];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flowersView(void *a1, const char *a2, ...)
{
  return _[a1 flowersView];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _[a1 flush];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptorByAddingAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorByAddingAttributes:");
}

id objc_msgSend_fontMetrics(void *a1, const char *a2, ...)
{
  return _[a1 fontMetrics];
}

id objc_msgSend_fontName(void *a1, const char *a2, ...)
{
  return _[a1 fontName];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_fontWithName_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithName:size:");
}

id objc_msgSend_fontWithName_size_traits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithName:size:traits:");
}

id objc_msgSend_footerText(void *a1, const char *a2, ...)
{
  return _[a1 footerText];
}

id objc_msgSend_footerTextForSpec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerTextForSpec:");
}

id objc_msgSend_footerTextSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 footerTextSpecifier];
}

id objc_msgSend_forLongPress(void *a1, const char *a2, ...)
{
  return _[a1 forLongPress];
}

id objc_msgSend_forceMedinaSupport(void *a1, const char *a2, ...)
{
  return _[a1 forceMedinaSupport];
}

id objc_msgSend_forceTouchSettingItems(void *a1, const char *a2, ...)
{
  return _[a1 forceTouchSettingItems];
}

id objc_msgSend_formattedStringValue(void *a1, const char *a2, ...)
{
  return _[a1 formattedStringValue];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_fullKeyboardAccessFocusRingColor(void *a1, const char *a2, ...)
{
  return _[a1 fullKeyboardAccessFocusRingColor];
}

id objc_msgSend_fullKeyboardAccessFocusRingHighContrastEnabled(void *a1, const char *a2, ...)
{
  return _[a1 fullKeyboardAccessFocusRingHighContrastEnabled];
}

id objc_msgSend_fullKeyboardAccessFocusRingTimeout(void *a1, const char *a2, ...)
{
  return _[a1 fullKeyboardAccessFocusRingTimeout];
}

id objc_msgSend_fullKeyboardAccessFocusRingTimeoutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 fullKeyboardAccessFocusRingTimeoutEnabled];
}

id objc_msgSend_fullKeyboardAccessLargeFocusRingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 fullKeyboardAccessLargeFocusRingEnabled];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_gameControlButtonPress(void *a1, const char *a2, ...)
{
  return _[a1 gameControlButtonPress];
}

id objc_msgSend_generalLanguageID(void *a1, const char *a2, ...)
{
  return _[a1 generalLanguageID];
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _[a1 generalPasteboard];
}

id objc_msgSend_genericContextWithCommandManager_command_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericContextWithCommandManager:command:resolver:");
}

id objc_msgSend_genericContextWithCommandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericContextWithCommandManager:resolver:");
}

id objc_msgSend_gesture(void *a1, const char *a2, ...)
{
  return _[a1 gesture];
}

id objc_msgSend_gestureActionSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 gestureActionSpecifier];
}

id objc_msgSend_gestureBindingsForCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureBindingsForCommand:withResolver:");
}

id objc_msgSend_gestureContextWithGesture_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureContextWithGesture:commandManager:resolver:");
}

id objc_msgSend_gestureHelpView(void *a1, const char *a2, ...)
{
  return _[a1 gestureHelpView];
}

id objc_msgSend_gestureKeys(void *a1, const char *a2, ...)
{
  return _[a1 gestureKeys];
}

id objc_msgSend_gestureWithLegacyFormatDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureWithLegacyFormatDictionary:");
}

id objc_msgSend_gestures(void *a1, const char *a2, ...)
{
  return _[a1 gestures];
}

id objc_msgSend_getAppliesToAllApps(void *a1, const char *a2, ...)
{
  return _[a1 getAppliesToAllApps];
}

id objc_msgSend_getCurrentActionForHomeActionListController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentActionForHomeActionListController:");
}

id objc_msgSend_getDeviceForPeripheral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceForPeripheral:");
}

id objc_msgSend_getEnhanceDialogueLevel_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEnhanceDialogueLevel:error:");
}

id objc_msgSend_getGroup_row_ofSpecifierAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getGroup:row:ofSpecifierAtIndex:");
}

id objc_msgSend_getLazyIcon(void *a1, const char *a2, ...)
{
  return _[a1 getLazyIcon];
}

id objc_msgSend_getPreferenceFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPreferenceFor:");
}

id objc_msgSend_getSelectedApps(void *a1, const char *a2, ...)
{
  return _[a1 getSelectedApps];
}

id objc_msgSend_getSizeCategoryBlock(void *a1, const char *a2, ...)
{
  return _[a1 getSizeCategoryBlock];
}

id objc_msgSend_getStateWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStateWithCompletionBlock:");
}

id objc_msgSend_getStewieSupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStewieSupport:");
}

id objc_msgSend_getUnselectedApps(void *a1, const char *a2, ...)
{
  return _[a1 getUnselectedApps];
}

id objc_msgSend_getValueSelectedBlock(void *a1, const char *a2, ...)
{
  return _[a1 getValueSelectedBlock];
}

id objc_msgSend_getter(void *a1, const char *a2, ...)
{
  return _[a1 getter];
}

id objc_msgSend_getterBlock(void *a1, const char *a2, ...)
{
  return _[a1 getterBlock];
}

id objc_msgSend_globalDevicePreferences(void *a1, const char *a2, ...)
{
  return _[a1 globalDevicePreferences];
}

id objc_msgSend_globalFilterEnabled(void *a1, const char *a2, ...)
{
  return _[a1 globalFilterEnabled];
}

id objc_msgSend_groupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 groupSpecifier];
}

id objc_msgSend_groupSpecifierWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithID:");
}

id objc_msgSend_groupSpecifierWithID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithID:name:");
}

id objc_msgSend_groupSpecifierWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSpecifierWithName:");
}

id objc_msgSend_guidedAccessAXFeaturesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessAXFeaturesEnabled];
}

id objc_msgSend_guidedAccessAllowsUnlockWithTouchID(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessAllowsUnlockWithTouchID];
}

id objc_msgSend_guidedAccessAutoLockTimeInSeconds(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessAutoLockTimeInSeconds];
}

id objc_msgSend_guidedAccessDefaultToneIdentifierForTimeRestrictionEvents(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessDefaultToneIdentifierForTimeRestrictionEvents];
}

id objc_msgSend_guidedAccessShouldSpeakForTimeRestrictionEvents(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessShouldSpeakForTimeRestrictionEvents];
}

id objc_msgSend_guidedAccessToneIdentifierForTimeRestrictionEvents(void *a1, const char *a2, ...)
{
  return _[a1 guidedAccessToneIdentifierForTimeRestrictionEvents];
}

id objc_msgSend_handleExternalSettingsChange(void *a1, const char *a2, ...)
{
  return _[a1 handleExternalSettingsChange];
}

id objc_msgSend_handleGlobalSmartInvertEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGlobalSmartInvertEnabled:");
}

id objc_msgSend_handleHACorNoiseCancellationToggle(void *a1, const char *a2, ...)
{
  return _[a1 handleHACorNoiseCancellationToggle];
}

id objc_msgSend_handlePlayButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlayButton:");
}

id objc_msgSend_handleSettingsChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSettingsChange:");
}

id objc_msgSend_handleTeachableMomentsNotification(void *a1, const char *a2, ...)
{
  return _[a1 handleTeachableMomentsNotification];
}

id objc_msgSend_handwriting(void *a1, const char *a2, ...)
{
  return _[a1 handwriting];
}

id objc_msgSend_hapticAssetURLForOutputEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hapticAssetURLForOutputEvent:");
}

id objc_msgSend_hapticMusicActive(void *a1, const char *a2, ...)
{
  return _[a1 hapticMusicActive];
}

id objc_msgSend_hapticMusicAlgorithmSelection(void *a1, const char *a2, ...)
{
  return _[a1 hapticMusicAlgorithmSelection];
}

id objc_msgSend_hapticMusicEnhancedPercussion(void *a1, const char *a2, ...)
{
  return _[a1 hapticMusicEnhancedPercussion];
}

id objc_msgSend_hapticMusicEnhancedVocals(void *a1, const char *a2, ...)
{
  return _[a1 hapticMusicEnhancedVocals];
}

id objc_msgSend_hardwareTTYIsSupportedForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hardwareTTYIsSupportedForContext:");
}

id objc_msgSend_hasClaritySettings(void *a1, const char *a2, ...)
{
  return _[a1 hasClaritySettings];
}

id objc_msgSend_hasClaritySettingsIncludingSystem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasClaritySettingsIncludingSystem:");
}

id objc_msgSend_hasCurrentCalls(void *a1, const char *a2, ...)
{
  return _[a1 hasCurrentCalls];
}

id objc_msgSend_hasCustomActions(void *a1, const char *a2, ...)
{
  return _[a1 hasCustomActions];
}

id objc_msgSend_hasEndedEventCapture(void *a1, const char *a2, ...)
{
  return _[a1 hasEndedEventCapture];
}

id objc_msgSend_hasInProgressDownloads(void *a1, const char *a2, ...)
{
  return _[a1 hasInProgressDownloads];
}

id objc_msgSend_hasLocalizableName(void *a1, const char *a2, ...)
{
  return _[a1 hasLocalizableName];
}

id objc_msgSend_hasLongPressAction(void *a1, const char *a2, ...)
{
  return _[a1 hasLongPressAction];
}

id objc_msgSend_hasPasscodeOrBiometric(void *a1, const char *a2, ...)
{
  return _[a1 hasPasscodeOrBiometric];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasRealTextInSearchField(void *a1, const char *a2, ...)
{
  return _[a1 hasRealTextInSearchField];
}

id objc_msgSend_hasSettingsBundle(void *a1, const char *a2, ...)
{
  return _[a1 hasSettingsBundle];
}

id objc_msgSend_hasSettingsByBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasSettingsByBundleIdentifier];
}

id objc_msgSend_hasSoundVolumeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 hasSoundVolumeSpecifiers];
}

id objc_msgSend_hasSpecificDefaultToneIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSpecificDefaultToneIdentifierForAlertType:topic:");
}

id objc_msgSend_hasSpecificDefaultVibrationIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSpecificDefaultVibrationIdentifierForAlertType:topic:");
}

id objc_msgSend_headSwitch(void *a1, const char *a2, ...)
{
  return _[a1 headSwitch];
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _[a1 headerView];
}

id objc_msgSend_hearingControlCenterOrder(void *a1, const char *a2, ...)
{
  return _[a1 hearingControlCenterOrder];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_helpViewControllerWithIdentifier_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helpViewControllerWithIdentifier:version:");
}

id objc_msgSend_hiddenIndexesToDictionaries(void *a1, const char *a2, ...)
{
  return _[a1 hiddenIndexesToDictionaries];
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _[a1 hide];
}

id objc_msgSend_hideListItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideListItem:");
}

id objc_msgSend_hideSpinner(void *a1, const char *a2, ...)
{
  return _[a1 hideSpinner];
}

id objc_msgSend_highlightSettingsItems(void *a1, const char *a2, ...)
{
  return _[a1 highlightSettingsItems];
}

id objc_msgSend_hints(void *a1, const char *a2, ...)
{
  return _[a1 hints];
}

id objc_msgSend_hintsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hintsEnabled:");
}

id objc_msgSend_historySpecifier(void *a1, const char *a2, ...)
{
  return _[a1 historySpecifier];
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_holdPointActionSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 holdPointActionSpecifier];
}

id objc_msgSend_homeActionListController_selectedAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeActionListController:selectedAction:");
}

id objc_msgSend_homeActionType(void *a1, const char *a2, ...)
{
  return _[a1 homeActionType];
}

id objc_msgSend_homeButtonType(void *a1, const char *a2, ...)
{
  return _[a1 homeButtonType];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_hoverTextActivationLockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextActivationLockEnabled];
}

id objc_msgSend_hoverTextBackgroundColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextBackgroundColorData];
}

id objc_msgSend_hoverTextBorderColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextBorderColorData];
}

id objc_msgSend_hoverTextContentSize(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextContentSize];
}

id objc_msgSend_hoverTextContentSizeForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hoverTextContentSizeForSpecifier:");
}

id objc_msgSend_hoverTextDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextDisplayMode];
}

id objc_msgSend_hoverTextFontName(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextFontName];
}

id objc_msgSend_hoverTextInsertionPointColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextInsertionPointColorData];
}

id objc_msgSend_hoverTextPreferredActivatorKey(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextPreferredActivatorKey];
}

id objc_msgSend_hoverTextScrollingSpeed(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextScrollingSpeed];
}

id objc_msgSend_hoverTextTextColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTextColorData];
}

id objc_msgSend_hoverTextTypingAutocorrectedTextColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingAutocorrectedTextColorData];
}

id objc_msgSend_hoverTextTypingBackgroundColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingBackgroundColorData];
}

id objc_msgSend_hoverTextTypingBorderColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingBorderColorData];
}

id objc_msgSend_hoverTextTypingDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingDisplayMode];
}

id objc_msgSend_hoverTextTypingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingEnabled];
}

id objc_msgSend_hoverTextTypingFontName(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingFontName];
}

id objc_msgSend_hoverTextTypingInsertionPointColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingInsertionPointColorData];
}

id objc_msgSend_hoverTextTypingMisspelledTextColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingMisspelledTextColorData];
}

id objc_msgSend_hoverTextTypingTextColorData(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingTextColorData];
}

id objc_msgSend_hoverTextTypingTextStyle(void *a1, const char *a2, ...)
{
  return _[a1 hoverTextTypingTextStyle];
}

id objc_msgSend_iCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 iCloudAccount];
}

id objc_msgSend_iconFilter(void *a1, const char *a2, ...)
{
  return _[a1 iconFilter];
}

id objc_msgSend_iconForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForIndexPath:");
}

id objc_msgSend_iconImageView(void *a1, const char *a2, ...)
{
  return _[a1 iconImageView];
}

id objc_msgSend_iconKey(void *a1, const char *a2, ...)
{
  return _[a1 iconKey];
}

id objc_msgSend_iconPickerDelegate(void *a1, const char *a2, ...)
{
  return _[a1 iconPickerDelegate];
}

id objc_msgSend_iconSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 iconSpecifiers];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierForItem:");
}

id objc_msgSend_identities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identities:");
}

id objc_msgSend_ignoreCase(void *a1, const char *a2, ...)
{
  return _[a1 ignoreCase];
}

id objc_msgSend_ignoreGroupsChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 ignoreGroupsChangedNotification];
}

id objc_msgSend_ignoreLogging(void *a1, const char *a2, ...)
{
  return _[a1 ignoreLogging];
}

id objc_msgSend_ignoreTrackpad(void *a1, const char *a2, ...)
{
  return _[a1 ignoreTrackpad];
}

id objc_msgSend_ignoredLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 ignoredLanguageCodes];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageAspectConstraint(void *a1, const char *a2, ...)
{
  return _[a1 imageAspectConstraint];
}

id objc_msgSend_imageCaptionModelAssetPolicy(void *a1, const char *a2, ...)
{
  return _[a1 imageCaptionModelAssetPolicy];
}

id objc_msgSend_imageCaptioningDisabledApps(void *a1, const char *a2, ...)
{
  return _[a1 imageCaptioningDisabledApps];
}

id objc_msgSend_imageDescriptions(void *a1, const char *a2, ...)
{
  return _[a1 imageDescriptions];
}

id objc_msgSend_imageDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDescriptions:");
}

id objc_msgSend_imageDescriptorNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDescriptorNamed:");
}

id objc_msgSend_imageFlippedForRightToLeftLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 imageFlippedForRightToLeftLayoutDirection];
}

id objc_msgSend_imageForGraphicSymbolDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForGraphicSymbolDescriptor:");
}

id objc_msgSend_imageForImageDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForImageDescriptor:");
}

id objc_msgSend_imageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForKey:");
}

id objc_msgSend_imageForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForState:");
}

id objc_msgSend_imageMaximumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 imageMaximumContentSizeCategory];
}

id objc_msgSend_imageMinimumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 imageMinimumContentSizeCategory];
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return _[a1 imageProperties];
}

id objc_msgSend_imageSize(void *a1, const char *a2, ...)
{
  return _[a1 imageSize];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithActions:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithConfiguration:");
}

id objc_msgSend_imageWithHorizontallyFlippedOrientation(void *a1, const char *a2, ...)
{
  return _[a1 imageWithHorizontallyFlippedOrientation];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithSymbolConfiguration:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:renderingMode:");
}

id objc_msgSend_impactOccurred(void *a1, const char *a2, ...)
{
  return _[a1 impactOccurred];
}

id objc_msgSend_importPunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importPunctuationGroup:");
}

id objc_msgSend_inDatabase(void *a1, const char *a2, ...)
{
  return _[a1 inDatabase];
}

id objc_msgSend_inSetup(void *a1, const char *a2, ...)
{
  return _[a1 inSetup];
}

id objc_msgSend_inTable(void *a1, const char *a2, ...)
{
  return _[a1 inTable];
}

id objc_msgSend_includedIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 includedIdentifiers];
}

id objc_msgSend_includedModulesGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 includedModulesGroupSpecifier];
}

id objc_msgSend_includedSectionIndex(void *a1, const char *a2, ...)
{
  return _[a1 includedSectionIndex];
}

id objc_msgSend_includesHomeScreen(void *a1, const char *a2, ...)
{
  return _[a1 includesHomeScreen];
}

id objc_msgSend_incomingCallsTTYForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingCallsTTYForContext:");
}

id objc_msgSend_indexForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForIndexPath:");
}

id objc_msgSend_indexOfGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfGroup:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:inSortedRange:options:usingComparator:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexOfSectionForItems(void *a1, const char *a2, ...)
{
  return _[a1 indexOfSectionForItems];
}

id objc_msgSend_indexOfSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfSpecifier:");
}

id objc_msgSend_indexOfSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfSpecifierID:");
}

id objc_msgSend_indexOfSpecifierWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfSpecifierWithID:");
}

id objc_msgSend_indexOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfViewController:");
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItem:inSection:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSpecifier:");
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForVisibleRows];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_indicatorView(void *a1, const char *a2, ...)
{
  return _[a1 indicatorView];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initForOpeningContentTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForOpeningContentTypes:");
}

id objc_msgSend_initPreferringUserProfile(void *a1, const char *a2, ...)
{
  return _[a1 initPreferringUserProfile];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:");
}

id objc_msgSend_initWithAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAlertType:");
}

id objc_msgSend_initWithAppleID_delegate_andCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppleID:delegate:andCompletion:");
}

id objc_msgSend_initWithApplicationTitle_icon_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationTitle:icon:bundleIdentifier:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetURL:");
}

id objc_msgSend_initWithAssetURL_usage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetURL:usage:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCategory:");
}

id objc_msgSend_initWithClientType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientType:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentViewController:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:error:");
}

id objc_msgSend_initWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithController:");
}

id objc_msgSend_initWithController_shouldPresentWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithController:shouldPresentWithAnimation:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_fileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:fileName:");
}

id objc_msgSend_initWithDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDelegate_queue_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:options:");
}

id objc_msgSend_initWithDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetector:");
}

id objc_msgSend_initWithDetectorSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetectorSpecifier:");
}

id objc_msgSend_initWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:");
}

id objc_msgSend_initWithDevice_andSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:andSpecifier:");
}

id objc_msgSend_initWithDevice_andSpecifier_acceptPairingBlock_cancelPairingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:andSpecifier:acceptPairingBlock:cancelPairingBlock:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:");
}

id objc_msgSend_initWithDomain_authenticationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:authenticationContext:");
}

id objc_msgSend_initWithEyeTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEyeTracker:");
}

id objc_msgSend_initWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFloat:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:collectionViewLayout:");
}

id objc_msgSend_initWithFrame_numberOfEntryFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:numberOfEntryFields:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithHIDTapIdentifier_HIDEventTapPriority_systemEventTapIdentifier_systemEventTapPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_serviceBundleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:serviceBundleName:");
}

id objc_msgSend_initWithIdentifier_title_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:withCompletion:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:style:target:action:");
}

id objc_msgSend_initWithImageName_stretchHorizontal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageName:stretchHorizontal:");
}

id objc_msgSend_initWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIndexesInRange:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithKey_table_locale_bundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:table:locale:bundleURL:");
}

id objc_msgSend_initWithLanguage_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:name:");
}

id objc_msgSend_initWithListLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListLayout:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithLocation_iconKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocation:iconKey:");
}

id objc_msgSend_initWithMatchingDictionary_callbackRunLoop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMatchingDictionary:callbackRunLoop:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_target_set_get_detail_cell_edit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:target:set:get:detail:cell:edit:");
}

id objc_msgSend_initWithName_tip_url_usage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:tip:url:usage:");
}

id objc_msgSend_initWithNavigationBarClass_toolbarClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNavigationBarClass:toolbarClass:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithPSSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPSSpecifier:");
}

id objc_msgSend_initWithPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPage:");
}

id objc_msgSend_initWithPaymentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPaymentRequest:");
}

id objc_msgSend_initWithPeripheral_helper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPeripheral:helper:");
}

id objc_msgSend_initWithPipCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPipCount:");
}

id objc_msgSend_initWithPlayers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayers:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSetupController:");
}

id objc_msgSend_initWithShortName_delegate_andCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShortName:delegate:andCompletion:");
}

id objc_msgSend_initWithSize_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:format:");
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:scale:");
}

id objc_msgSend_initWithSource_context_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSource:context:delegate:");
}

id objc_msgSend_initWithSpecifier_parent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSpecifier:parent:");
}

id objc_msgSend_initWithStatus_errors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatus:errors:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:specifier:");
}

id objc_msgSend_initWithSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuggestions:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSwitch:");
}

id objc_msgSend_initWithSymbolName_bundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSymbolName:bundleURL:");
}

id objc_msgSend_initWithSystemColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemColor:");
}

id objc_msgSend_initWithSystemProfile(void *a1, const char *a2, ...)
{
  return _[a1 initWithSystemProfile];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTargetDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetDetector:");
}

id objc_msgSend_initWithTargetSerialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetSerialQueue:");
}

id objc_msgSend_initWithText_voice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:voice:");
}

id objc_msgSend_initWithThread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithThread:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTitle_detailText_icon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:icon:");
}

id objc_msgSend_initWithTitle_detailText_icon_contentLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:icon:contentLayout:");
}

id objc_msgSend_initWithTitle_detailText_icon_controller_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:icon:controller:identifier:");
}

id objc_msgSend_initWithTitle_detailText_icon_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:icon:dataSource:");
}

id objc_msgSend_initWithTitle_detailText_symbolName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:detailText:symbolName:");
}

id objc_msgSend_initWithTitle_image_imageInsets_scaleImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:image:imageInsets:scaleImage:");
}

id objc_msgSend_initWithTitle_preferenceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:preferenceValue:");
}

id objc_msgSend_initWithTitle_privacySpecifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:privacySpecifier:completion:");
}

id objc_msgSend_initWithTitle_setter_getter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:setter:getter:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithValidatedFormat_validFormatSpecifiers_locale_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidatedFormat:validFormatSpecifiers:locale:error:");
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:");
}

id objc_msgSend_initWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:");
}

id objc_msgSend_initialValue(void *a1, const char *a2, ...)
{
  return _[a1 initialValue];
}

id objc_msgSend_initializeTipKit(void *a1, const char *a2, ...)
{
  return _[a1 initializeTipKit];
}

id objc_msgSend_insertContiguousSpecifiers_afterSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertContiguousSpecifiers:afterSpecifier:animated:");
}

id objc_msgSend_insertContiguousSpecifiers_afterSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertContiguousSpecifiers:afterSpecifierID:");
}

id objc_msgSend_insertContiguousSpecifiers_afterSpecifierID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertContiguousSpecifiers:afterSpecifierID:animated:");
}

id objc_msgSend_insertContiguousSpecifiers_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertContiguousSpecifiers:atIndex:");
}

id objc_msgSend_insertContiguousSpecifiers_atIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertContiguousSpecifiers:atIndex:animated:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertObjects_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObjects:atIndex:");
}

id objc_msgSend_insertObjects_atIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObjects:atIndexes:");
}

id objc_msgSend_insertOrRemoveKbShortcutsSpecs(void *a1, const char *a2, ...)
{
  return _[a1 insertOrRemoveKbShortcutsSpecs];
}

id objc_msgSend_insertOrRemoveWindowModeSpecs(void *a1, const char *a2, ...)
{
  return _[a1 insertOrRemoveWindowModeSpecs];
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSpecifier_afterSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:afterSpecifier:");
}

id objc_msgSend_insertSpecifier_afterSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:afterSpecifier:animated:");
}

id objc_msgSend_insertSpecifier_afterSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:afterSpecifierID:");
}

id objc_msgSend_insertSpecifier_afterSpecifierID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:afterSpecifierID:animated:");
}

id objc_msgSend_insertSpecifier_atEndOfGroup_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:atEndOfGroup:animated:");
}

id objc_msgSend_insertSpecifier_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:atIndex:");
}

id objc_msgSend_insertSpecifier_atIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSpecifier:atIndex:animated:");
}

id objc_msgSend_insertSublayer_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:atIndex:");
}

id objc_msgSend_installOfflineTranslationModelForLanguageCodeIfNeeded_progress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installOfflineTranslationModelForLanguageCodeIfNeeded:progress:completion:");
}

id objc_msgSend_installSafeCategory_canInteractWithTargetClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installSafeCategory:canInteractWithTargetClass:");
}

id objc_msgSend_installedApps(void *a1, const char *a2, ...)
{
  return _[a1 installedApps];
}

id objc_msgSend_installedTranslationLocales_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedTranslationLocales:");
}

id objc_msgSend_instrinsicContentHeight(void *a1, const char *a2, ...)
{
  return _[a1 instrinsicContentHeight];
}

id objc_msgSend_instructions(void *a1, const char *a2, ...)
{
  return _[a1 instructions];
}

id objc_msgSend_instructionsText(void *a1, const char *a2, ...)
{
  return _[a1 instructionsText];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 interfaceOrientation];
}

id objc_msgSend_internalApps(void *a1, const char *a2, ...)
{
  return _[a1 internalApps];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 invalidateIntrinsicContentSize];
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLayout];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _[a1 invertedSet];
}

id objc_msgSend_isActionAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActionAvailable:");
}

id objc_msgSend_isActivelyTrainingAKShotModel(void *a1, const char *a2, ...)
{
  return _[a1 isActivelyTrainingAKShotModel];
}

id objc_msgSend_isAdaptiveVoiceShortcutsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAdaptiveVoiceShortcutsEnabled];
}

id objc_msgSend_isAppAvailableForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppAvailableForBundleIdentifier:");
}

id objc_msgSend_isAppleHIDDevice(void *a1, const char *a2, ...)
{
  return _[a1 isAppleHIDDevice];
}

id objc_msgSend_isBSIScreenreaderMode(void *a1, const char *a2, ...)
{
  return _[a1 isBSIScreenreaderMode];
}

id objc_msgSend_isBTLEDevice(void *a1, const char *a2, ...)
{
  return _[a1 isBTLEDevice];
}

id objc_msgSend_isBasePunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBasePunctuationGroup:");
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _[a1 isBeingDismissed];
}

id objc_msgSend_isCaptionProfile(void *a1, const char *a2, ...)
{
  return _[a1 isCaptionProfile];
}

id objc_msgSend_isChecked(void *a1, const char *a2, ...)
{
  return _[a1 isChecked];
}

id objc_msgSend_isClassicDevice(void *a1, const char *a2, ...)
{
  return _[a1 isClassicDevice];
}

id objc_msgSend_isContinueButtonEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isContinueButtonEnabled];
}

id objc_msgSend_isContinuitySessionActive(void *a1, const char *a2, ...)
{
  return _[a1 isContinuitySessionActive];
}

id objc_msgSend_isCustomBrailleTable(void *a1, const char *a2, ...)
{
  return _[a1 isCustomBrailleTable];
}

id objc_msgSend_isDistanceSamplingEnabledWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDistanceSamplingEnabledWithError:");
}

id objc_msgSend_isEarpieceActiveNoiseCancelationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEarpieceActiveNoiseCancelationEnabled];
}

id objc_msgSend_isEditableCaptionProfile(void *a1, const char *a2, ...)
{
  return _[a1 isEditableCaptionProfile];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEnrolled(void *a1, const char *a2, ...)
{
  return _[a1 isEnrolled];
}

id objc_msgSend_isEnrolledInDataCollection(void *a1, const char *a2, ...)
{
  return _[a1 isEnrolledInDataCollection];
}

id objc_msgSend_isEnrolledWithRequestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnrolledWithRequestSource:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToMouse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToMouse:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExpanded(void *a1, const char *a2, ...)
{
  return _[a1 isExpanded];
}

id objc_msgSend_isFaceDetectionSupported(void *a1, const char *a2, ...)
{
  return _[a1 isFaceDetectionSupported];
}

id objc_msgSend_isGestureAssignedToOtherCommand(void *a1, const char *a2, ...)
{
  return _[a1 isGestureAssignedToOtherCommand];
}

id objc_msgSend_isHIDDevice(void *a1, const char *a2, ...)
{
  return _[a1 isHIDDevice];
}

id objc_msgSend_isHandwritingScreenreaderMode(void *a1, const char *a2, ...)
{
  return _[a1 isHandwritingScreenreaderMode];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isHiddenByUserForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHiddenByUserForBundleIdentifier:");
}

id objc_msgSend_isIdleTimerDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isIdleTimerDisabled];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isItemEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isItemEnabled:");
}

id objc_msgSend_isKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 isKeyWindow];
}

id objc_msgSend_isKeyboardShortcutAssignedToOtherCommand(void *a1, const char *a2, ...)
{
  return _[a1 isKeyboardShortcutAssignedToOtherCommand];
}

id objc_msgSend_isListening(void *a1, const char *a2, ...)
{
  return _[a1 isListening];
}

id objc_msgSend_isListeningForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 isListeningForNotifications];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isModelReady(void *a1, const char *a2, ...)
{
  return _[a1 isModelReady];
}

id objc_msgSend_isMovingFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 isMovingFromParentViewController];
}

id objc_msgSend_isNameCached(void *a1, const char *a2, ...)
{
  return _[a1 isNameCached];
}

id objc_msgSend_isNamedItemSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNamedItemSpecifier:");
}

id objc_msgSend_isNewRecipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNewRecipe:");
}

id objc_msgSend_isNextButtonEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isNextButtonEnabled];
}

id objc_msgSend_isOnlyRTTSupportedForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnlyRTTSupportedForContext:");
}

id objc_msgSend_isOptional(void *a1, const char *a2, ...)
{
  return _[a1 isOptional];
}

id objc_msgSend_isPairedDeviceBrailleDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPairedDeviceBrailleDisplay:");
}

id objc_msgSend_isPasscodeSet(void *a1, const char *a2, ...)
{
  return _[a1 isPasscodeSet];
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isPlaying];
}

id objc_msgSend_isPlayingSample(void *a1, const char *a2, ...)
{
  return _[a1 isPlayingSample];
}

id objc_msgSend_isPreviewExpanded(void *a1, const char *a2, ...)
{
  return _[a1 isPreviewExpanded];
}

id objc_msgSend_isRTTSupported(void *a1, const char *a2, ...)
{
  return _[a1 isRTTSupported];
}

id objc_msgSend_isRTTSupportedForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRTTSupportedForContext:");
}

id objc_msgSend_isReadyForMoreMediaData(void *a1, const char *a2, ...)
{
  return _[a1 isReadyForMoreMediaData];
}

id objc_msgSend_isRelayRTTSupported(void *a1, const char *a2, ...)
{
  return _[a1 isRelayRTTSupported];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _[a1 isSelected];
}

id objc_msgSend_isSettingAvailableOnPlatform(void *a1, const char *a2, ...)
{
  return _[a1 isSettingAvailableOnPlatform];
}

id objc_msgSend_isShowingAlert(void *a1, const char *a2, ...)
{
  return _[a1 isShowingAlert];
}

id objc_msgSend_isStoredColorType_equalWithColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoredColorType:equalWithColors:");
}

id objc_msgSend_isStoredTransparencyType_equalWithTransparency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoredTransparencyType:equalWithTransparency:");
}

id objc_msgSend_isSuccessful(void *a1, const char *a2, ...)
{
  return _[a1 isSuccessful];
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isSystemPunctuationGroup(void *a1, const char *a2, ...)
{
  return _[a1 isSystemPunctuationGroup];
}

id objc_msgSend_isTabDown(void *a1, const char *a2, ...)
{
  return _[a1 isTabDown];
}

id objc_msgSend_isTimeoutSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTimeoutSection:");
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return _[a1 isTracking];
}

id objc_msgSend_isTrainingNewDetector(void *a1, const char *a2, ...)
{
  return _[a1 isTrainingNewDetector];
}

id objc_msgSend_isValidBrailleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidBrailleDevice:");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isVisible(void *a1, const char *a2, ...)
{
  return _[a1 isVisible];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemAfterTogglingEnabledState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemAfterTogglingEnabledState:");
}

id objc_msgSend_itemDescription(void *a1, const char *a2, ...)
{
  return _[a1 itemDescription];
}

id objc_msgSend_itemSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 itemSpecifiers];
}

id objc_msgSend_itemTitle(void *a1, const char *a2, ...)
{
  return _[a1 itemTitle];
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _[a1 itemType];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itemsFromPreferences(void *a1, const char *a2, ...)
{
  return _[a1 itemsFromPreferences];
}

id objc_msgSend_jsonRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 jsonRepresentation];
}

id objc_msgSend_kbScrollWheelSpecs(void *a1, const char *a2, ...)
{
  return _[a1 kbScrollWheelSpecs];
}

id objc_msgSend_kbShortcutSpecs(void *a1, const char *a2, ...)
{
  return _[a1 kbShortcutSpecs];
}

id objc_msgSend_keyChord(void *a1, const char *a2, ...)
{
  return _[a1 keyChord];
}

id objc_msgSend_keyChordDisplayText(void *a1, const char *a2, ...)
{
  return _[a1 keyChordDisplayText];
}

id objc_msgSend_keyChordForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyChordForCommand:");
}

id objc_msgSend_keyChordPresenter(void *a1, const char *a2, ...)
{
  return _[a1 keyChordPresenter];
}

id objc_msgSend_keyChordWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyChordWithEvent:");
}

id objc_msgSend_keyChordWithKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyChordWithKeys:");
}

id objc_msgSend_keyCode(void *a1, const char *a2, ...)
{
  return _[a1 keyCode];
}

id objc_msgSend_keyInfo(void *a1, const char *a2, ...)
{
  return _[a1 keyInfo];
}

id objc_msgSend_keyIsSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyIsSupported:");
}

id objc_msgSend_keyRepeatDelaySpecifier(void *a1, const char *a2, ...)
{
  return _[a1 keyRepeatDelaySpecifier];
}

id objc_msgSend_keyRepeatIntervalSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 keyRepeatIntervalSpecifier];
}

id objc_msgSend_keyRepeatSpecificSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 keyRepeatSpecificSpecifiers];
}

id objc_msgSend_keyViewControllerWithSwitch_parentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyViewControllerWithSwitch:parentController:");
}

id objc_msgSend_keyboardLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 keyboardLanguageCodes];
}

id objc_msgSend_keyboardReturnPressed(void *a1, const char *a2, ...)
{
  return _[a1 keyboardReturnPressed];
}

id objc_msgSend_keyboardShortcutContextWithKeyChord_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardShortcutContextWithKeyChord:commandManager:resolver:");
}

id objc_msgSend_keyboardSizeForInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardSizeForInterfaceOrientation:");
}

id objc_msgSend_keys(void *a1, const char *a2, ...)
{
  return _[a1 keys];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelFont(void *a1, const char *a2, ...)
{
  return _[a1 labelFont];
}

id objc_msgSend_labelForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelForContext:");
}

id objc_msgSend_labelFromUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelFromUUID:");
}

id objc_msgSend_labelHeightConstraints(void *a1, const char *a2, ...)
{
  return _[a1 labelHeightConstraints];
}

id objc_msgSend_labelMaximumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 labelMaximumContentSizeCategory];
}

id objc_msgSend_langMap(void *a1, const char *a2, ...)
{
  return _[a1 langMap];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _[a1 language];
}

id objc_msgSend_languageAgnosticTableIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 languageAgnosticTableIdentifiers];
}

id objc_msgSend_languageAgnosticTablesForIdentifier_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageAgnosticTablesForIdentifier:inBundle:");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _[a1 languageCode];
}

id objc_msgSend_languageForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageForItem:");
}

id objc_msgSend_languageNameAndLocaleInCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 languageNameAndLocaleInCurrentLocale];
}

id objc_msgSend_languageNameInCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 languageNameInCurrentLocale];
}

id objc_msgSend_languageNameInNativeLocale(void *a1, const char *a2, ...)
{
  return _[a1 languageNameInNativeLocale];
}

id objc_msgSend_languageTranslator(void *a1, const char *a2, ...)
{
  return _[a1 languageTranslator];
}

id objc_msgSend_languageWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageWithIdentifier:");
}

id objc_msgSend_languages(void *a1, const char *a2, ...)
{
  return _[a1 languages];
}

id objc_msgSend_largerTextPerAppValue(void *a1, const char *a2, ...)
{
  return _[a1 largerTextPerAppValue];
}

id objc_msgSend_laserEnabled(void *a1, const char *a2, ...)
{
  return _[a1 laserEnabled];
}

id objc_msgSend_laserZoomPanningStyle(void *a1, const char *a2, ...)
{
  return _[a1 laserZoomPanningStyle];
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 lastBaselineAnchor];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastSpeechRateAdjustmentTime(void *a1, const char *a2, ...)
{
  return _[a1 lastSpeechRateAdjustmentTime];
}

id objc_msgSend_latestAsset(void *a1, const char *a2, ...)
{
  return _[a1 latestAsset];
}

id objc_msgSend_latestAssetDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestAssetDidUpdate:");
}

id objc_msgSend_launchOnboardingViewService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchOnboardingViewService:");
}

id objc_msgSend_launchToRecipeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 launchToRecipeSpecifiers];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 layoutDirection];
}

id objc_msgSend_layoutForWidth_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutForWidth:inTableView:");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _[a1 layoutFrame];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutItemsByLocation_hasBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutItemsByLocation:hasBackButton:");
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 layoutMargins];
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 layoutSubviews];
}

id objc_msgSend_layoutViewSideLengthScaledFromDefaultLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutViewSideLengthScaledFromDefaultLength:");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_learnMoreButton(void *a1, const char *a2, ...)
{
  return _[a1 learnMoreButton];
}

id objc_msgSend_learnMoreController(void *a1, const char *a2, ...)
{
  return _[a1 learnMoreController];
}

id objc_msgSend_learnMoreDelegate(void *a1, const char *a2, ...)
{
  return _[a1 learnMoreDelegate];
}

id objc_msgSend_learnMoreLinkButton(void *a1, const char *a2, ...)
{
  return _[a1 learnMoreLinkButton];
}

id objc_msgSend_learnMoreViewController(void *a1, const char *a2, ...)
{
  return _[a1 learnMoreViewController];
}

id objc_msgSend_leaveKeyboardUnzoomedSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 leaveKeyboardUnzoomedSpecifier];
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leftAnchor];
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 leftBarButtonItem];
}

id objc_msgSend_leftRightBalanceValue(void *a1, const char *a2, ...)
{
  return _[a1 leftRightBalanceValue];
}

id objc_msgSend_legibilityWeight(void *a1, const char *a2, ...)
{
  return _[a1 legibilityWeight];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_letterFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 letterFeedbackEnabled];
}

id objc_msgSend_levels(void *a1, const char *a2, ...)
{
  return _[a1 levels];
}

id objc_msgSend_linkButton(void *a1, const char *a2, ...)
{
  return _[a1 linkButton];
}

id objc_msgSend_linkWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkWithBundleIdentifier:");
}

id objc_msgSend_listLayout(void *a1, const char *a2, ...)
{
  return _[a1 listLayout];
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _[a1 load];
}

id objc_msgSend_loadCustomDetectorsFromSettings(void *a1, const char *a2, ...)
{
  return _[a1 loadCustomDetectorsFromSettings];
}

id objc_msgSend_loadDetectors(void *a1, const char *a2, ...)
{
  return _[a1 loadDetectors];
}

id objc_msgSend_loadDisplayWithBluetoothDeviceAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDisplayWithBluetoothDeviceAddress:");
}

id objc_msgSend_loadMovie(void *a1, const char *a2, ...)
{
  return _[a1 loadMovie];
}

id objc_msgSend_loadResource_principalClass_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadResource:principalClass:error:");
}

id objc_msgSend_loadSettings(void *a1, const char *a2, ...)
{
  return _[a1 loadSettings];
}

id objc_msgSend_loadSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 loadSpecifiers];
}

id objc_msgSend_loadSpecifiersFromPlist_inBundle_target_stringsTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadSpecifiersFromPlist:inBundle:target:stringsTable:");
}

id objc_msgSend_loadSpecifiersFromPlistName_target_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadSpecifiersFromPlistName:target:");
}

id objc_msgSend_loadSpecifiersFromPlistName_target_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadSpecifiersFromPlistName:target:bundle:");
}

id objc_msgSend_loadTactileGraphicsDisplayWithBLEIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadTactileGraphicsDisplayWithBLEIdentifier:");
}

id objc_msgSend_loadTracksWithMediaType_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadTracksWithMediaType:completionHandler:");
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadViewIfNeeded];
}

id objc_msgSend_locStringForKShotCategory_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locStringForKShotCategory:key:");
}

id objc_msgSend_localURL(void *a1, const char *a2, ...)
{
  return _[a1 localURL];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localeIdentifier];
}

id objc_msgSend_localeNameInCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 localeNameInCurrentLocale];
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return _[a1 localizations];
}

id objc_msgSend_localizedCapitalizedString(void *a1, const char *a2, ...)
{
  return _[a1 localizedCapitalizedString];
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveCompare:");
}

id objc_msgSend_localizedCaseInsensitiveContainsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCaseInsensitiveContainsString:");
}

id objc_msgSend_localizedCategoryName(void *a1, const char *a2, ...)
{
  return _[a1 localizedCategoryName];
}

id objc_msgSend_localizedCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompare:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedDescriptionForDoubleTapDragMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescriptionForDoubleTapDragMode:");
}

id objc_msgSend_localizedDescriptionForPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescriptionForPanningStyle:");
}

id objc_msgSend_localizedErrorMessage(void *a1, const char *a2, ...)
{
  return _[a1 localizedErrorMessage];
}

id objc_msgSend_localizedErrorTitle(void *a1, const char *a2, ...)
{
  return _[a1 localizedErrorTitle];
}

id objc_msgSend_localizedIconForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedIconForIndexPath:");
}

id objc_msgSend_localizedInfoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 localizedInfoDictionary];
}

id objc_msgSend_localizedModel(void *a1, const char *a2, ...)
{
  return _[a1 localizedModel];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedNameForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForCategory:");
}

id objc_msgSend_localizedNameForCharacter_languageId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForCharacter:languageId:");
}

id objc_msgSend_localizedNameForColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForColor:");
}

id objc_msgSend_localizedNameForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForCommand:");
}

id objc_msgSend_localizedNameForDoubleTapDragMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForDoubleTapDragMode:");
}

id objc_msgSend_localizedNameForLanguageAgnosticTableIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForLanguageAgnosticTableIdentifier:");
}

id objc_msgSend_localizedNameForServiceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForServiceWithIdentifier:");
}

id objc_msgSend_localizedNameForVoiceOverCursorOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForVoiceOverCursorOption:");
}

id objc_msgSend_localizedNameWithService(void *a1, const char *a2, ...)
{
  return _[a1 localizedNameWithService];
}

id objc_msgSend_localizedScannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedScannerWithString:");
}

id objc_msgSend_localizedSortedIcons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedSortedIcons:");
}

id objc_msgSend_localizedSourceDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedSourceDescription];
}

id objc_msgSend_localizedStandardCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStandardCompare:");
}

id objc_msgSend_localizedStringByJoiningStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringByJoiningStrings:");
}

id objc_msgSend_localizedStringForKey_table_bundle_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:table:bundle:languageCode:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForKey_value_table_localization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:localization:");
}

id objc_msgSend_localizedStringForLanguage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForLanguage:context:");
}

id objc_msgSend_localizedStringForLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForLocaleIdentifier:");
}

id objc_msgSend_localizedStringForName(void *a1, const char *a2, ...)
{
  return _[a1 localizedStringForName];
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_localizedStringFromPersonNameComponents_style_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromPersonNameComponents:style:options:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_localizedTitleForPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTitleForPanningStyle:");
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerPhraseForLanguageCode:");
}

id objc_msgSend_localizedValuesForKeys_fromTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedValuesForKeys:fromTable:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_locationServicesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 locationServicesEnabled];
}

id objc_msgSend_locationServicesSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 locationServicesSpecifier];
}

id objc_msgSend_lockScreenClockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenClockEnabled];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longPressAction(void *a1, const char *a2, ...)
{
  return _[a1 longPressAction];
}

id objc_msgSend_longPressGameControlButtonPress(void *a1, const char *a2, ...)
{
  return _[a1 longPressGameControlButtonPress];
}

id objc_msgSend_longPressShortcutIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 longPressShortcutIdentifier];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainAccessQueue];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainSpecifiersGroup(void *a1, const char *a2, ...)
{
  return _[a1 mainSpecifiersGroup];
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return _[a1 mainThread];
}

id objc_msgSend_majorClass(void *a1, const char *a2, ...)
{
  return _[a1 majorClass];
}

id objc_msgSend_makeVBManagerViewControllerWithAuthenticationCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeVBManagerViewControllerWithAuthenticationCallback:");
}

id objc_msgSend_makeViewControllerWithGet_set_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeViewControllerWithGet:set:");
}

id objc_msgSend_makeVoiceManagementViewControllerWithVoiceID_voiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeVoiceManagementViewControllerWithVoiceID:voiceName:");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return _[a1 manager];
}

id objc_msgSend_manipulateDictationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manipulateDictationView:");
}

id objc_msgSend_manufacturerName(void *a1, const char *a2, ...)
{
  return _[a1 manufacturerName];
}

id objc_msgSend_mapping(void *a1, const char *a2, ...)
{
  return _[a1 mapping];
}

id objc_msgSend_mappings(void *a1, const char *a2, ...)
{
  return _[a1 mappings];
}

id objc_msgSend_markedTextRange(void *a1, const char *a2, ...)
{
  return _[a1 markedTextRange];
}

id objc_msgSend_maximumCircleRadius(void *a1, const char *a2, ...)
{
  return _[a1 maximumCircleRadius];
}

id objc_msgSend_maximumNumberOfCustomGestures(void *a1, const char *a2, ...)
{
  return _[a1 maximumNumberOfCustomGestures];
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _[a1 maximumValue];
}

id objc_msgSend_mediaControlsKeys(void *a1, const char *a2, ...)
{
  return _[a1 mediaControlsKeys];
}

id objc_msgSend_menuItemSpecifiersIncludingToggleButton(void *a1, const char *a2, ...)
{
  return _[a1 menuItemSpecifiersIncludingToggleButton];
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:children:");
}

id objc_msgSend_messageImageView(void *a1, const char *a2, ...)
{
  return _[a1 messageImageView];
}

id objc_msgSend_midiEvent(void *a1, const char *a2, ...)
{
  return _[a1 midiEvent];
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _[a1 minimumValue];
}

id objc_msgSend_modeSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 modeSpecifiers];
}

id objc_msgSend_modeToFooterTextExplanation(void *a1, const char *a2, ...)
{
  return _[a1 modeToFooterTextExplanation];
}

id objc_msgSend_modelFailed(void *a1, const char *a2, ...)
{
  return _[a1 modelFailed];
}

id objc_msgSend_modelSwitch(void *a1, const char *a2, ...)
{
  return _[a1 modelSwitch];
}

id objc_msgSend_modesSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 modesSpecifiers];
}

id objc_msgSend_modifierKeys(void *a1, const char *a2, ...)
{
  return _[a1 modifierKeys];
}

id objc_msgSend_modifierShortStringDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifierShortStringDescription:");
}

id objc_msgSend_modifierState(void *a1, const char *a2, ...)
{
  return _[a1 modifierState];
}

id objc_msgSend_monospacedSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monospacedSystemFontOfSize:weight:");
}

id objc_msgSend_moreIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 moreIdentifiers];
}

id objc_msgSend_moreModulesGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 moreModulesGroupSpecifier];
}

id objc_msgSend_moreSectionIndex(void *a1, const char *a2, ...)
{
  return _[a1 moreSectionIndex];
}

id objc_msgSend_mostBasePunctuationGroupForGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostBasePunctuationGroupForGroup:");
}

id objc_msgSend_motionSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 motionSpecifiers];
}

id objc_msgSend_motionTrackingInputManager(void *a1, const char *a2, ...)
{
  return _[a1 motionTrackingInputManager];
}

id objc_msgSend_motionTrackingSettingsHelper(void *a1, const char *a2, ...)
{
  return _[a1 motionTrackingSettingsHelper];
}

id objc_msgSend_mouseEventListener(void *a1, const char *a2, ...)
{
  return _[a1 mouseEventListener];
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_movementToleranceSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 movementToleranceSpecifiers];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_mutableCopyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopyWithZone:");
}

id objc_msgSend_muteSound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteSound:");
}

id objc_msgSend_muteSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteSpeech:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameDetectorController(void *a1, const char *a2, ...)
{
  return _[a1 nameDetectorController];
}

id objc_msgSend_nameDetectorLinkButton(void *a1, const char *a2, ...)
{
  return _[a1 nameDetectorLinkButton];
}

id objc_msgSend_nameForCalibrationStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForCalibrationStrategy:");
}

id objc_msgSend_nameForColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForColor:");
}

id objc_msgSend_nameForHideToggle(void *a1, const char *a2, ...)
{
  return _[a1 nameForHideToggle];
}

id objc_msgSend_nameForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForItem:");
}

id objc_msgSend_nameForShowToggle(void *a1, const char *a2, ...)
{
  return _[a1 nameForShowToggle];
}

id objc_msgSend_nameForToneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForToneIdentifier:");
}

id objc_msgSend_nameTextField(void *a1, const char *a2, ...)
{
  return _[a1 nameTextField];
}

id objc_msgSend_namedItemForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "namedItemForSpecifier:");
}

id objc_msgSend_namedItemSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 namedItemSpecifiers];
}

id objc_msgSend_namedItems(void *a1, const char *a2, ...)
{
  return _[a1 namedItems];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_navigationStyle(void *a1, const char *a2, ...)
{
  return _[a1 navigationStyle];
}

id objc_msgSend_newsestCompatibleImageCaptionModelAssetFromAssets_withStage_language_isInstalled_isDownloadable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newsestCompatibleImageCaptionModelAssetFromAssets:withStage:language:isInstalled:isDownloadable:");
}

id objc_msgSend_nextButton(void *a1, const char *a2, ...)
{
  return _[a1 nextButton];
}

id objc_msgSend_nextButtonTappedForAppSetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextButtonTappedForAppSetupController:");
}

id objc_msgSend_nextButtonTappedForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextButtonTappedForBundleIdentifier:");
}

id objc_msgSend_nextDefaultGroupName(void *a1, const char *a2, ...)
{
  return _[a1 nextDefaultGroupName];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _[a1 nextObject];
}

id objc_msgSend_nextResponder(void *a1, const char *a2, ...)
{
  return _[a1 nextResponder];
}

id objc_msgSend_nextSlide(void *a1, const char *a2, ...)
{
  return _[a1 nextSlide];
}

id objc_msgSend_nextTrackCommand(void *a1, const char *a2, ...)
{
  return _[a1 nextTrackCommand];
}

id objc_msgSend_note(void *a1, const char *a2, ...)
{
  return _[a1 note];
}

id objc_msgSend_notificationTitleForFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationTitleForFeature:");
}

id objc_msgSend_notificationWithName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationWithName:object:userInfo:");
}

id objc_msgSend_notificationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 notificationsEnabled];
}

id objc_msgSend_notifyZoomDockPositionWasChangedInSettingsTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyZoomDockPositionWasChangedInSettingsTo:");
}

id objc_msgSend_notifyZoomIdleSlugOpacityChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyZoomIdleSlugOpacityChangedTo:");
}

id objc_msgSend_notifyZoomLensModeWasChangedInSettingsTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyZoomLensModeWasChangedInSettingsTo:");
}

id objc_msgSend_nowPlayingInfoCenter(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingInfoCenter];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_nullKeyChord(void *a1, const char *a2, ...)
{
  return _[a1 nullKeyChord];
}

id objc_msgSend_numberFeedback(void *a1, const char *a2, ...)
{
  return _[a1 numberFeedback];
}

id objc_msgSend_numberOfGroups(void *a1, const char *a2, ...)
{
  return _[a1 numberOfGroups];
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSections];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_numberWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedShort:");
}

id objc_msgSend_numericalPreferenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 numericalPreferenceEnabled];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_observeChanges(void *a1, const char *a2, ...)
{
  return _[a1 observeChanges];
}

id objc_msgSend_observeUpdatesWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeUpdatesWithHandler:");
}

id objc_msgSend_observerKeys(void *a1, const char *a2, ...)
{
  return _[a1 observerKeys];
}

id objc_msgSend_observerToken(void *a1, const char *a2, ...)
{
  return _[a1 observerToken];
}

id objc_msgSend_observingKeyValueChanges(void *a1, const char *a2, ...)
{
  return _[a1 observingKeyValueChanges];
}

id objc_msgSend_onDeviceEyeTracker(void *a1, const char *a2, ...)
{
  return _[a1 onDeviceEyeTracker];
}

id objc_msgSend_onOffLabelsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onOffLabelsEnabled:");
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withCompletionHandler:");
}

id objc_msgSend_openURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withOptions:");
}

id objc_msgSend_originalItemsFromPreference(void *a1, const char *a2, ...)
{
  return _[a1 originalItemsFromPreference];
}

id objc_msgSend_originalName(void *a1, const char *a2, ...)
{
  return _[a1 originalName];
}

id objc_msgSend_originalString(void *a1, const char *a2, ...)
{
  return _[a1 originalString];
}

id objc_msgSend_orthography(void *a1, const char *a2, ...)
{
  return _[a1 orthography];
}

id objc_msgSend_outputEvent(void *a1, const char *a2, ...)
{
  return _[a1 outputEvent];
}

id objc_msgSend_outputEvents(void *a1, const char *a2, ...)
{
  return _[a1 outputEvents];
}

id objc_msgSend_outputVoice(void *a1, const char *a2, ...)
{
  return _[a1 outputVoice];
}

id objc_msgSend_outputs(void *a1, const char *a2, ...)
{
  return _[a1 outputs];
}

id objc_msgSend_page(void *a1, const char *a2, ...)
{
  return _[a1 page];
}

id objc_msgSend_pageControl(void *a1, const char *a2, ...)
{
  return _[a1 pageControl];
}

id objc_msgSend_pageCount(void *a1, const char *a2, ...)
{
  return _[a1 pageCount];
}

id objc_msgSend_pageHeight(void *a1, const char *a2, ...)
{
  return _[a1 pageHeight];
}

id objc_msgSend_pageHeightConstraints(void *a1, const char *a2, ...)
{
  return _[a1 pageHeightConstraints];
}

id objc_msgSend_pageIndex(void *a1, const char *a2, ...)
{
  return _[a1 pageIndex];
}

id objc_msgSend_paired(void *a1, const char *a2, ...)
{
  return _[a1 paired];
}

id objc_msgSend_pairedAirPods(void *a1, const char *a2, ...)
{
  return _[a1 pairedAirPods];
}

id objc_msgSend_pairedBTLEDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedBTLEDevices];
}

id objc_msgSend_pairedBrailleDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedBrailleDevices];
}

id objc_msgSend_pairedDeviceSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceSpecifiers];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairedHearingAids(void *a1, const char *a2, ...)
{
  return _[a1 pairedHearingAids];
}

id objc_msgSend_pairingStyle(void *a1, const char *a2, ...)
{
  return _[a1 pairingStyle];
}

id objc_msgSend_panSpecs(void *a1, const char *a2, ...)
{
  return _[a1 panSpecs];
}

id objc_msgSend_parentBrailleController(void *a1, const char *a2, ...)
{
  return _[a1 parentBrailleController];
}

id objc_msgSend_parentController(void *a1, const char *a2, ...)
{
  return _[a1 parentController];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_passcodeLength(void *a1, const char *a2, ...)
{
  return _[a1 passcodeLength];
}

id objc_msgSend_passcodeState(void *a1, const char *a2, ...)
{
  return _[a1 passcodeState];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _[a1 pause];
}

id objc_msgSend_pauseCommand(void *a1, const char *a2, ...)
{
  return _[a1 pauseCommand];
}

id objc_msgSend_pauseListening(void *a1, const char *a2, ...)
{
  return _[a1 pauseListening];
}

id objc_msgSend_pe_emitNavigationEventForSystemSettingsWithGraphicIconIdentifier_title_localizedNavigationComponents_deepLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pe_emitNavigationEventForSystemSettingsWithGraphicIconIdentifier:title:localizedNavigationComponents:deepLink:");
}

id objc_msgSend_performBatchUpdates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBatchUpdates:completion:");
}

id objc_msgSend_performGetter(void *a1, const char *a2, ...)
{
  return _[a1 performGetter];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performSelectorOnMainThread_withObject_waitUntilDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelectorOnMainThread:withObject:waitUntilDone:");
}

id objc_msgSend_performSetterWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSetterWithValue:");
}

id objc_msgSend_performValidations_withPreValidationHandler_postValidationHandler_safeCategoryInstallationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_peripheralMatchesUnadvertisedService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peripheralMatchesUnadvertisedService:");
}

id objc_msgSend_personalMediaConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 personalMediaConfiguration];
}

id objc_msgSend_personalMediaEnabled(void *a1, const char *a2, ...)
{
  return _[a1 personalMediaEnabled];
}

id objc_msgSend_phoneNumberStringFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberStringFromString:");
}

id objc_msgSend_phoneNumberWithStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberWithStringValue:");
}

id objc_msgSend_phonemes(void *a1, const char *a2, ...)
{
  return _[a1 phonemes];
}

id objc_msgSend_phoneticFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 phoneticFeedbackEnabled];
}

id objc_msgSend_photosServicesSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 photosServicesSpecifier];
}

id objc_msgSend_physicalMemory(void *a1, const char *a2, ...)
{
  return _[a1 physicalMemory];
}

id objc_msgSend_pickerGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 pickerGroupSpecifier];
}

id objc_msgSend_pickerSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 pickerSpecifier];
}

id objc_msgSend_pinCode(void *a1, const char *a2, ...)
{
  return _[a1 pinCode];
}

id objc_msgSend_pipCount(void *a1, const char *a2, ...)
{
  return _[a1 pipCount];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 plainButtonConfiguration];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _[a1 play];
}

id objc_msgSend_playCommand(void *a1, const char *a2, ...)
{
  return _[a1 playCommand];
}

id objc_msgSend_playMovie(void *a1, const char *a2, ...)
{
  return _[a1 playMovie];
}

id objc_msgSend_playURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playURL:");
}

id objc_msgSend_playerItemWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerItemWithURL:");
}

id objc_msgSend_pointInside_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointInside:withEvent:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_policy(void *a1, const char *a2, ...)
{
  return _[a1 policy];
}

id objc_msgSend_popToRootSwitchViewControlAfterSelection(void *a1, const char *a2, ...)
{
  return _[a1 popToRootSwitchViewControlAfterSelection];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_portName(void *a1, const char *a2, ...)
{
  return _[a1 portName];
}

id objc_msgSend_portType(void *a1, const char *a2, ...)
{
  return _[a1 portType];
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return _[a1 position];
}

id objc_msgSend_postDevicesSpecifiersGroup(void *a1, const char *a2, ...)
{
  return _[a1 postDevicesSpecifiersGroup];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_powerAlertCancelled(void *a1, const char *a2, ...)
{
  return _[a1 powerAlertCancelled];
}

id objc_msgSend_practiceViewController(void *a1, const char *a2, ...)
{
  return _[a1 practiceViewController];
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_preferHorizontalText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferHorizontalText:");
}

id objc_msgSend_preferNonBlinkingCursor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferNonBlinkingCursor:");
}

id objc_msgSend_preferenceSpecifierNamed_target_set_get_detail_cell_edit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferenceSpecifierNamed:target:set:get:detail:cell:edit:");
}

id objc_msgSend_preferenceValue(void *a1, const char *a2, ...)
{
  return _[a1 preferenceValue];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:compatibleWithTraitCollection:");
}

id objc_msgSend_preferredFormat(void *a1, const char *a2, ...)
{
  return _[a1 preferredFormat];
}

id objc_msgSend_preferredHeightForWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredHeightForWidth:");
}

id objc_msgSend_preferredLanguageIDsFromUserSelectedKeyboards(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguageIDsFromUserSelectedKeyboards];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_preferredLocalizationsFromArray_forPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLocalizationsFromArray:forPreferences:");
}

id objc_msgSend_preferredRelayNumberForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredRelayNumberForContext:");
}

id objc_msgSend_prepareSpecifiersMetadata(void *a1, const char *a2, ...)
{
  return _[a1 prepareSpecifiersMetadata];
}

id objc_msgSend_prepareToPlay(void *a1, const char *a2, ...)
{
  return _[a1 prepareToPlay];
}

id objc_msgSend_prependedSystemIcons(void *a1, const char *a2, ...)
{
  return _[a1 prependedSystemIcons];
}

id objc_msgSend_prependedTopIcons(void *a1, const char *a2, ...)
{
  return _[a1 prependedTopIcons];
}

id objc_msgSend_present(void *a1, const char *a2, ...)
{
  return _[a1 present];
}

id objc_msgSend_presentAlertWithMessage_specifier_okBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAlertWithMessage:specifier:okBlock:");
}

id objc_msgSend_presentDialogForType_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDialogForType:withCompletionHandler:");
}

id objc_msgSend_presentHUDViewTimer(void *a1, const char *a2, ...)
{
  return _[a1 presentHUDViewTimer];
}

id objc_msgSend_presentLearnMorePane(void *a1, const char *a2, ...)
{
  return _[a1 presentLearnMorePane];
}

id objc_msgSend_presentModalViewController_withTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentModalViewController:withTransition:");
}

id objc_msgSend_presentPopoverFromRect_inView_permittedArrowDirections_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPopoverFromRect:inView:permittedArrowDirections:animated:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentViewController_withTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:withTransition:completion:");
}

id objc_msgSend_presentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithCompletion:");
}

id objc_msgSend_presentWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithController:");
}

id objc_msgSend_presentWithController_initialKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithController:initialKeyChord:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentedListControllerDidCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedListControllerDidCancel:");
}

id objc_msgSend_presentedListControllerDidSave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedListControllerDidSave:");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presenter(void *a1, const char *a2, ...)
{
  return _[a1 presenter];
}

id objc_msgSend_presenterForPrivacySplashWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterForPrivacySplashWithIdentifier:");
}

id objc_msgSend_presenterWithSpecifier_selectionBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterWithSpecifier:selectionBlock:cancelBlock:");
}

id objc_msgSend_presenterWithValidation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterWithValidation:");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_previewCellHeight(void *a1, const char *a2, ...)
{
  return _[a1 previewCellHeight];
}

id objc_msgSend_previewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 previewDelegate];
}

id objc_msgSend_previewImageView(void *a1, const char *a2, ...)
{
  return _[a1 previewImageView];
}

id objc_msgSend_previewPageController(void *a1, const char *a2, ...)
{
  return _[a1 previewPageController];
}

id objc_msgSend_previewSize(void *a1, const char *a2, ...)
{
  return _[a1 previewSize];
}

id objc_msgSend_previewSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 previewSpecifier];
}

id objc_msgSend_previewViewController(void *a1, const char *a2, ...)
{
  return _[a1 previewViewController];
}

id objc_msgSend_previousTrackCommand(void *a1, const char *a2, ...)
{
  return _[a1 previousTrackCommand];
}

id objc_msgSend_previouslyBoundCommand(void *a1, const char *a2, ...)
{
  return _[a1 previouslyBoundCommand];
}

id objc_msgSend_primaryLanguage(void *a1, const char *a2, ...)
{
  return _[a1 primaryLanguage];
}

id objc_msgSend_primeRTTServer(void *a1, const char *a2, ...)
{
  return _[a1 primeRTTServer];
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _[a1 principalClass];
}

id objc_msgSend_privacySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 privacySpecifiers];
}

id objc_msgSend_privacySpecifiersForPolicyOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privacySpecifiersForPolicyOptions:");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_productID(void *a1, const char *a2, ...)
{
  return _[a1 productID];
}

id objc_msgSend_productId(void *a1, const char *a2, ...)
{
  return _[a1 productId];
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return _[a1 productName];
}

id objc_msgSend_profileId(void *a1, const char *a2, ...)
{
  return _[a1 profileId];
}

id objc_msgSend_profileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileName:");
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_pronunciationLanguageListController_didSelectLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pronunciationLanguageListController:didSelectLanguages:");
}

id objc_msgSend_pronunciationSuggestionsViewController_didSelectPhonemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pronunciationSuggestionsViewController:didSelectPhonemes:");
}

id objc_msgSend_pronunciationVoiceListController_didSelectVoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pronunciationVoiceListController:didSelectVoices:");
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyForKey:");
}

id objc_msgSend_protectedConfigurationForUser_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protectedConfigurationForUser:error:");
}

id objc_msgSend_ps_insertObject_afterObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ps_insertObject:afterObject:");
}

id objc_msgSend_ps_insertObjectsFromArray_afterObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ps_insertObjectsFromArray:afterObject:");
}

id objc_msgSend_punctuation(void *a1, const char *a2, ...)
{
  return _[a1 punctuation];
}

id objc_msgSend_punctuationEntry(void *a1, const char *a2, ...)
{
  return _[a1 punctuationEntry];
}

id objc_msgSend_punctuationGroup(void *a1, const char *a2, ...)
{
  return _[a1 punctuationGroup];
}

id objc_msgSend_punctuationGroupForUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punctuationGroupForUUID:");
}

id objc_msgSend_punctuationGroupFromJSONRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punctuationGroupFromJSONRepresentation:");
}

id objc_msgSend_punctuationGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 punctuationGroupUUID];
}

id objc_msgSend_punctuationGroups(void *a1, const char *a2, ...)
{
  return _[a1 punctuationGroups];
}

id objc_msgSend_purgeAssets_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeAssets:completion:");
}

id objc_msgSend_purpleColor(void *a1, const char *a2, ...)
{
  return _[a1 purpleColor];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_quickNavShortcutContextWithKeyChord_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quickNavShortcutContextWithKeyChord:commandManager:resolver:");
}

id objc_msgSend_quickSpeakHighlightOption(void *a1, const char *a2, ...)
{
  return _[a1 quickSpeakHighlightOption];
}

id objc_msgSend_quickSpeakSentenceHighlightColor(void *a1, const char *a2, ...)
{
  return _[a1 quickSpeakSentenceHighlightColor];
}

id objc_msgSend_quickSpeakSentenceHighlightOption(void *a1, const char *a2, ...)
{
  return _[a1 quickSpeakSentenceHighlightOption];
}

id objc_msgSend_quickSpeakSpeakingRate(void *a1, const char *a2, ...)
{
  return _[a1 quickSpeakSpeakingRate];
}

id objc_msgSend_quickSpeakWordHighlightColor(void *a1, const char *a2, ...)
{
  return _[a1 quickSpeakWordHighlightColor];
}

id objc_msgSend_quickTypeWordFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 quickTypeWordFeedbackEnabled];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rawValue(void *a1, const char *a2, ...)
{
  return _[a1 rawValue];
}

id objc_msgSend_readPreferredContentSizeCategoryName(void *a1, const char *a2, ...)
{
  return _[a1 readPreferredContentSizeCategoryName];
}

id objc_msgSend_readPreferredContentSizeCategoryNameForAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readPreferredContentSizeCategoryNameForAppID:");
}

id objc_msgSend_recentKeyChords(void *a1, const char *a2, ...)
{
  return _[a1 recentKeyChords];
}

id objc_msgSend_recipe(void *a1, const char *a2, ...)
{
  return _[a1 recipe];
}

id objc_msgSend_recipes(void *a1, const char *a2, ...)
{
  return _[a1 recipes];
}

id objc_msgSend_record(void *a1, const char *a2, ...)
{
  return _[a1 record];
}

id objc_msgSend_recordings(void *a1, const char *a2, ...)
{
  return _[a1 recordings];
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _[a1 redColor];
}

id objc_msgSend_reduceMotionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceMotionEnabled:");
}

id objc_msgSend_reduceMotionReduceSlideTransitionsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceMotionReduceSlideTransitionsEnabled:");
}

id objc_msgSend_reduceMotionReduceSlideTransitionsFooterSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 reduceMotionReduceSlideTransitionsFooterSpecifier];
}

id objc_msgSend_reduceMotionReduceSlideTransitionsSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 reduceMotionReduceSlideTransitionsSpecifier];
}

id objc_msgSend_reduceTransparencyEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceTransparencyEnabled:");
}

id objc_msgSend_reduceWhitePointIntensitySpecifier(void *a1, const char *a2, ...)
{
  return _[a1 reduceWhitePointIntensitySpecifier];
}

id objc_msgSend_reduceWhitePointSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 reduceWhitePointSpecifier];
}

id objc_msgSend_refreshAssetCatalog_downloadSamplesIfNeeded_restartMigrationIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshAssetCatalog:downloadSamplesIfNeeded:restartMigrationIfNeeded:");
}

id objc_msgSend_refreshAssets(void *a1, const char *a2, ...)
{
  return _[a1 refreshAssets];
}

id objc_msgSend_refreshAssetsByForceUpdatingCatalog_updatingCatalogIfNeeded_catalogRefreshOverrideTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:catalogRefreshOverrideTimeout:completion:");
}

id objc_msgSend_refreshCellContentsWithSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshCellContentsWithSpecifier:");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:");
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withHandler:");
}

id objc_msgSend_registerListener_forAudioLevelUpdates_forDetection_withBucketCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerListener:forAudioLevelUpdates:forDetection:withBucketCount:");
}

id objc_msgSend_registerListener_forAudioLevelUpdates_withBucketCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerListener:forAudioLevelUpdates:withBucketCount:");
}

id objc_msgSend_registerListener_forRecordingUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerListener:forRecordingUpdates:");
}

id objc_msgSend_registerShortcutsDidChangeBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerShortcutsDidChangeBlock:");
}

id objc_msgSend_registerUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerUpdateBlock:");
}

id objc_msgSend_registerUpdateBlock_forRetrieveSelector_withListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerUpdateBlock:forRetrieveSelector:withListener:");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _[a1 reload];
}

id objc_msgSend_reloadASTDataSource(void *a1, const char *a2, ...)
{
  return _[a1 reloadASTDataSource];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSections:withRowAnimation:");
}

id objc_msgSend_reloadSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifier:");
}

id objc_msgSend_reloadSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifier:animated:");
}

id objc_msgSend_reloadSpecifierFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifierFromID:");
}

id objc_msgSend_reloadSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifierID:");
}

id objc_msgSend_reloadSpecifierID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadSpecifierID:animated:");
}

id objc_msgSend_reloadSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 reloadSpecifiers];
}

id objc_msgSend_reloadSpecifiersFromNotification(void *a1, const char *a2, ...)
{
  return _[a1 reloadSpecifiersFromNotification];
}

id objc_msgSend_remoteDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceName];
}

id objc_msgSend_removeAllButtons(void *a1, const char *a2, ...)
{
  return _[a1 removeAllButtons];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllUserAssignedCommandsForDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllUserAssignedCommandsForDisplayWithToken:");
}

id objc_msgSend_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeArrangedSubview:");
}

id objc_msgSend_removeConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraint:");
}

id objc_msgSend_removeContiguousSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeContiguousSpecifiers:");
}

id objc_msgSend_removeContiguousSpecifiers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeContiguousSpecifiers:animated:");
}

id objc_msgSend_removeCustomizedAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCustomizedAppID:");
}

id objc_msgSend_removeEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEntry:");
}

id objc_msgSend_removeEventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEventHandler:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGesture_fromCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGesture:fromCommand:withResolver:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeKShotDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeKShotDetector:");
}

id objc_msgSend_removeKeyChord_fromCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeKeyChord:fromCommand:withResolver:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectForKey_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:completionHandler:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePropertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePropertyForKey:");
}

id objc_msgSend_removePunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePunctuationGroup:");
}

id objc_msgSend_removeSoundDetectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSoundDetectionType:");
}

id objc_msgSend_removeSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifier:");
}

id objc_msgSend_removeSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifier:animated:");
}

id objc_msgSend_removeSpecifierAtIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifierAtIndex:animated:");
}

id objc_msgSend_removeSpecifierID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpecifierID:");
}

id objc_msgSend_removeStatusObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeStatusObserver:");
}

id objc_msgSend_removeTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_renameDetector_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renameDetector:to:");
}

id objc_msgSend_renameDetectorController(void *a1, const char *a2, ...)
{
  return _[a1 renameDetectorController];
}

id objc_msgSend_renameDetectorDelegate(void *a1, const char *a2, ...)
{
  return _[a1 renameDetectorDelegate];
}

id objc_msgSend_renderInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderInContext:");
}

id objc_msgSend_replaceContiguousSpecifiers_withSpecifiers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceContiguousSpecifiers:withSpecifiers:animated:");
}

id objc_msgSend_replaceCurrentItemWithPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCurrentItemWithPlayerItem:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replaceObjectsInRange_withObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectsInRange:withObjectsFromArray:");
}

id objc_msgSend_replacement(void *a1, const char *a2, ...)
{
  return _[a1 replacement];
}

id objc_msgSend_replacementString(void *a1, const char *a2, ...)
{
  return _[a1 replacementString];
}

id objc_msgSend_replacements(void *a1, const char *a2, ...)
{
  return _[a1 replacements];
}

id objc_msgSend_requestAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAssertion:");
}

id objc_msgSend_requestMediaDataWhenReadyOnQueue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestMediaDataWhenReadyOnQueue:usingBlock:");
}

id objc_msgSend_requestSourceDescription(void *a1, const char *a2, ...)
{
  return _[a1 requestSourceDescription];
}

id objc_msgSend_requiresContactsAccess(void *a1, const char *a2, ...)
{
  return _[a1 requiresContactsAccess];
}

id objc_msgSend_requiresPhotosAccess(void *a1, const char *a2, ...)
{
  return _[a1 requiresPhotosAccess];
}

id objc_msgSend_requiresPhotosAddAccess(void *a1, const char *a2, ...)
{
  return _[a1 requiresPhotosAddAccess];
}

id objc_msgSend_requiresPreflightForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresPreflightForBundleIdentifier:");
}

id objc_msgSend_resetAllSettings(void *a1, const char *a2, ...)
{
  return _[a1 resetAllSettings];
}

id objc_msgSend_resetCheckmarkIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetCheckmarkIndex:");
}

id objc_msgSend_resetDeviceScanning(void *a1, const char *a2, ...)
{
  return _[a1 resetDeviceScanning];
}

id objc_msgSend_resetGazeEnrollment(void *a1, const char *a2, ...)
{
  return _[a1 resetGazeEnrollment];
}

id objc_msgSend_resetHoverTypingSettings(void *a1, const char *a2, ...)
{
  return _[a1 resetHoverTypingSettings];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resizableImageWithCapInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizableImageWithCapInsets:");
}

id objc_msgSend_resizableShadowImage(void *a1, const char *a2, ...)
{
  return _[a1 resizableShadowImage];
}

id objc_msgSend_resizeSpecs(void *a1, const char *a2, ...)
{
  return _[a1 resizeSpecs];
}

id objc_msgSend_resolver(void *a1, const char *a2, ...)
{
  return _[a1 resolver];
}

id objc_msgSend_resolverForCurrentHost(void *a1, const char *a2, ...)
{
  return _[a1 resolverForCurrentHost];
}

id objc_msgSend_resolverWithScreenreaderModeVariant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolverWithScreenreaderModeVariant:");
}

id objc_msgSend_resourcesWithType_subType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourcesWithType:subType:");
}

id objc_msgSend_respondToPairingRequest_type_accept_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondToPairingRequest:type:accept:data:");
}

id objc_msgSend_restoreDefaultProfile(void *a1, const char *a2, ...)
{
  return _[a1 restoreDefaultProfile];
}

id objc_msgSend_restorePreviouslyFilteredItemsToItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restorePreviouslyFilteredItemsToItems:");
}

id objc_msgSend_restrictionsPasscodeEntryAttemptCountAndTimeoutDateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictionsPasscodeEntryAttemptCountAndTimeoutDateWithCompletionHandler:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeListening(void *a1, const char *a2, ...)
{
  return _[a1 resumeListening];
}

id objc_msgSend_retrieveConnectedPeripheralsWithServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveConnectedPeripheralsWithServices:");
}

id objc_msgSend_retrieveConnectedPeripheralsWithServices_allowAll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveConnectedPeripheralsWithServices:allowAll:");
}

id objc_msgSend_retrievePeripheralsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrievePeripheralsWithIdentifiers:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 rightAnchor];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_rightView(void *a1, const char *a2, ...)
{
  return _[a1 rightView];
}

id objc_msgSend_rootController(void *a1, const char *a2, ...)
{
  return _[a1 rootController];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rowColumnNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowColumnNumbers:");
}

id objc_msgSend_rowForTypingFeedbackOption_section_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowForTypingFeedbackOption:section:");
}

id objc_msgSend_rttLiveTranscriptionsEnabledForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rttLiveTranscriptionsEnabledForContext:");
}

id objc_msgSend_rttLiveTranscriptionsFeatureFlagEnabled(void *a1, const char *a2, ...)
{
  return _[a1 rttLiveTranscriptionsFeatureFlagEnabled];
}

id objc_msgSend_rule(void *a1, const char *a2, ...)
{
  return _[a1 rule];
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaLayoutGuide];
}

id objc_msgSend_safeArrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeArrayForKey:");
}

id objc_msgSend_safeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeBoolForKey:");
}

id objc_msgSend_safeUIViewForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeUIViewForKey:");
}

id objc_msgSend_safeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeValueForKey:");
}

id objc_msgSend_sampleBufferRenderer(void *a1, const char *a2, ...)
{
  return _[a1 sampleBufferRenderer];
}

id objc_msgSend_saveComplete(void *a1, const char *a2, ...)
{
  return _[a1 saveComplete];
}

id objc_msgSend_savePreferredContentSizeCategoryName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savePreferredContentSizeCategoryName:");
}

id objc_msgSend_savePreferredContentSizeCategoryName_forAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savePreferredContentSizeCategoryName:forAppID:");
}

id objc_msgSend_saveRecipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveRecipe:");
}

id objc_msgSend_saveSwitchToSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveSwitchToSettings:");
}

id objc_msgSend_saveUserSettingsItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveUserSettingsItems:");
}

id objc_msgSend_saveWallpaperData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveWallpaperData:");
}

id objc_msgSend_savedChannelsForOutput_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savedChannelsForOutput:forSource:");
}

id objc_msgSend_savedSoundLabel(void *a1, const char *a2, ...)
{
  return _[a1 savedSoundLabel];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledValueForValue:");
}

id objc_msgSend_scaledValueForValue_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledValueForValue:compatibleWithTraitCollection:");
}

id objc_msgSend_scanForPeripheralsWithServices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanForPeripheralsWithServices:options:");
}

id objc_msgSend_scanInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanInt:");
}

id objc_msgSend_scanningEnabled(void *a1, const char *a2, ...)
{
  return _[a1 scanningEnabled];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scrollAccelerationFactor(void *a1, const char *a2, ...)
{
  return _[a1 scrollAccelerationFactor];
}

id objc_msgSend_scrollToCardIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToCardIndex:animated:");
}

id objc_msgSend_scrollToItemAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToItemAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_scrollViewDidScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewDidScroll:");
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _[a1 searchController];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemBackgroundColor];
}

id objc_msgSend_secondarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemFillColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_secureIntentViewControllerDidCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secureIntentViewControllerDidCancel:");
}

id objc_msgSend_secureIntentViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secureIntentViewControllerDidFinish:");
}

id objc_msgSend_seekToTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToTime:");
}

id objc_msgSend_selectBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectBehavior:");
}

id objc_msgSend_selectLongPress(void *a1, const char *a2, ...)
{
  return _[a1 selectLongPress];
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectRowAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend_selectSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectSpecifier:");
}

id objc_msgSend_selectSpecifierWithBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectSpecifierWithBehavior:");
}

id objc_msgSend_selectedApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 selectedApplicationIdentifiers];
}

id objc_msgSend_selectedApps(void *a1, const char *a2, ...)
{
  return _[a1 selectedApps];
}

id objc_msgSend_selectedBrailleTable(void *a1, const char *a2, ...)
{
  return _[a1 selectedBrailleTable];
}

id objc_msgSend_selectedColorForSelectionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedColorForSelectionController:");
}

id objc_msgSend_selectedFilter(void *a1, const char *a2, ...)
{
  return _[a1 selectedFilter];
}

id objc_msgSend_selectedFont(void *a1, const char *a2, ...)
{
  return _[a1 selectedFont];
}

id objc_msgSend_selectedIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndexPath];
}

id objc_msgSend_selectedLanguages(void *a1, const char *a2, ...)
{
  return _[a1 selectedLanguages];
}

id objc_msgSend_selectedPhonemes(void *a1, const char *a2, ...)
{
  return _[a1 selectedPhonemes];
}

id objc_msgSend_selectedPopoverIcon(void *a1, const char *a2, ...)
{
  return _[a1 selectedPopoverIcon];
}

id objc_msgSend_selectedPopoverLocation(void *a1, const char *a2, ...)
{
  return _[a1 selectedPopoverLocation];
}

id objc_msgSend_selectedSegmentIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedSegmentIndex];
}

id objc_msgSend_selectedVoiceIdentifierForSpeechSourceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedVoiceIdentifierForSpeechSourceKey:");
}

id objc_msgSend_selectedVoiceIdentifierForSpeechSourceKey_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedVoiceIdentifierForSpeechSourceKey:languageCode:");
}

id objc_msgSend_selectionController(void *a1, const char *a2, ...)
{
  return _[a1 selectionController];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _[a1 semanticContentAttribute];
}

id objc_msgSend_sendActionsForControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendActionsForControlEvents:");
}

id objc_msgSend_sendAsynchronousMessage_withIdentifier_targetAccessQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:");
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSubviewToBack:");
}

id objc_msgSend_sendSynchronousMessage_withIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSynchronousMessage:withIdentifier:error:");
}

id objc_msgSend_sensitivitySpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 sensitivitySpecifiers];
}

id objc_msgSend_sentenceColorHighlightItems(void *a1, const char *a2, ...)
{
  return _[a1 sentenceColorHighlightItems];
}

id objc_msgSend_sentenceHighlightItems(void *a1, const char *a2, ...)
{
  return _[a1 sentenceHighlightItems];
}

id objc_msgSend_sentenceStyle(void *a1, const char *a2, ...)
{
  return _[a1 sentenceStyle];
}

id objc_msgSend_separatorInset(void *a1, const char *a2, ...)
{
  return _[a1 separatorInset];
}

id objc_msgSend_server(void *a1, const char *a2, ...)
{
  return _[a1 server];
}

id objc_msgSend_serviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 serviceIdentifier];
}

id objc_msgSend_serviceWithDefaultShellEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceWithDefaultShellEndpoint];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityEventUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityEventUsage:");
}

id objc_msgSend_setAccessibilityEventUsagePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityEventUsagePage:");
}

id objc_msgSend_setAccessibilityHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityHint:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIgnoresInvertColors:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessibilityLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLanguage:");
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityTraits:");
}

id objc_msgSend_setAccessibilityValueBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityValueBlock:");
}

id objc_msgSend_setAccessibleEndpointerThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibleEndpointerThreshold:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryView:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionSpecifiers:");
}

id objc_msgSend_setActivateCellBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivateCellBlock:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:error:");
}

id objc_msgSend_setActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivity:");
}

id objc_msgSend_setAdaptiveVoiceShortcutsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdaptiveVoiceShortcutsEnabled:");
}

id objc_msgSend_setAddSwitchesSpecifierGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddSwitchesSpecifierGroup:");
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddress:");
}

id objc_msgSend_setAdjustingBalance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustingBalance:");
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAdminPasscodeRecoveryAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminPasscodeRecoveryAppleID:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllSpecifiersUnsearchable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllSpecifiersUnsearchable:");
}

id objc_msgSend_setAllowSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowSiri:");
}

id objc_msgSend_setAllowedTrackingTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedTrackingTypes:");
}

id objc_msgSend_setAllowsDeletingDefaultVibration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsDeletingDefaultVibration:");
}

id objc_msgSend_setAllowsSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsSelectionDuringEditing:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlwaysAllowVoiceActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysAllowVoiceActivation:");
}

id objc_msgSend_setAlwaysObscureBackgroundContentWhenActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysObscureBackgroundContentWhenActive:");
}

id objc_msgSend_setAnnounceNotificationsOnBuiltInSpeakerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceNotificationsOnBuiltInSpeakerEnabled:");
}

id objc_msgSend_setAnswerRTTCallsAsMuted_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswerRTTCallsAsMuted:forContext:");
}

id objc_msgSend_setAppAvailabilityObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppAvailabilityObserver:");
}

id objc_msgSend_setAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppID:");
}

id objc_msgSend_setAppIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIdentifiers:");
}

id objc_msgSend_setAppPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppPolicy:");
}

id objc_msgSend_setApplicationBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBundleIdentifiers:");
}

id objc_msgSend_setAppliesToAllApps(void *a1, const char *a2, ...)
{
  return _[a1 setAppliesToAllApps];
}

id objc_msgSend_setAppliesToAllApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppliesToAllApps:");
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetURL:");
}

id objc_msgSend_setAssetsReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetsReady:");
}

id objc_msgSend_setAssistantIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantIsEnabled:");
}

id objc_msgSend_setAssistiveTouchActionRepeatEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchActionRepeatEnabled:");
}

id objc_msgSend_setAssistiveTouchActionRepeatInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchActionRepeatInterval:");
}

id objc_msgSend_setAssistiveTouchActionsBySoundAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchActionsBySoundAction:");
}

id objc_msgSend_setAssistiveTouchAlwaysShowMenuEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchAlwaysShowMenuEnabled:");
}

id objc_msgSend_setAssistiveTouchAxisSweepSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchAxisSweepSpeed:");
}

id objc_msgSend_setAssistiveTouchBubbleModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchBubbleModeEnabled:");
}

id objc_msgSend_setAssistiveTouchCursorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchCursorColor:");
}

id objc_msgSend_setAssistiveTouchDelayAfterInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchDelayAfterInput:");
}

id objc_msgSend_setAssistiveTouchDelayAfterInputEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchDelayAfterInputEnabled:");
}

id objc_msgSend_setAssistiveTouchDoubleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchDoubleTapAction:");
}

id objc_msgSend_setAssistiveTouchDoubleTapActionTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchDoubleTapActionTimeout:");
}

id objc_msgSend_setAssistiveTouchEyeTrackingAutoHideEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchEyeTrackingAutoHideEnabled:");
}

id objc_msgSend_setAssistiveTouchEyeTrackingAutoHideOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchEyeTrackingAutoHideOpacity:");
}

id objc_msgSend_setAssistiveTouchEyeTrackingAutoHideTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchEyeTrackingAutoHideTimeout:");
}

id objc_msgSend_setAssistiveTouchEyeTrackingUseZoomForKeyboardKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchEyeTrackingUseZoomForKeyboardKeys:");
}

id objc_msgSend_setAssistiveTouchGameControllerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchGameControllerEnabled:");
}

id objc_msgSend_setAssistiveTouchGroupElementsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchGroupElementsEnabled:");
}

id objc_msgSend_setAssistiveTouchHeadMovementSensitivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchHeadMovementSensitivity:");
}

id objc_msgSend_setAssistiveTouchIdleOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchIdleOpacity:");
}

id objc_msgSend_setAssistiveTouchInputCoalescingDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchInputCoalescingDuration:");
}

id objc_msgSend_setAssistiveTouchInputCoalescingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchInputCoalescingEnabled:");
}

id objc_msgSend_setAssistiveTouchInputHoldDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchInputHoldDuration:");
}

id objc_msgSend_setAssistiveTouchInputHoldEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchInputHoldEnabled:");
}

id objc_msgSend_setAssistiveTouchLongPressAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchLongPressAction:");
}

id objc_msgSend_setAssistiveTouchLongPressActionDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchLongPressActionDuration:");
}

id objc_msgSend_setAssistiveTouchLongPressDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchLongPressDuration:");
}

id objc_msgSend_setAssistiveTouchLongPressEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchLongPressEnabled:");
}

id objc_msgSend_setAssistiveTouchLongPressPauseScanningEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchLongPressPauseScanningEnabled:");
}

id objc_msgSend_setAssistiveTouchMainScreenCustomization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMainScreenCustomization:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerShouldOffsetBufferPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerShouldOffsetBufferPoints:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerSmoothingBufferSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerSmoothingBufferSize:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerSmoothingMaxDelta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerSmoothingMaxDelta:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerXNormalizationOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerXNormalizationOffset:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerXNormalizationOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerXNormalizationOrder:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerYNormalizationOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerYNormalizationOffset:");
}

id objc_msgSend_setAssistiveTouchMotionTrackerYNormalizationOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMotionTrackerYNormalizationOrder:");
}

id objc_msgSend_setAssistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseBehavesLikeFinger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseBehavesLikeFinger:");
}

id objc_msgSend_setAssistiveTouchMouseClickSoundsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseClickSoundsEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlActivationTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlActivationTimeout:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlAutorevertAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlAutorevertAction:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlAutorevertEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlAutorevertEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlCornerCustomization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlCornerCustomization:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlMovementToleranceRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlMovementToleranceRadius:");
}

id objc_msgSend_setAssistiveTouchMouseDwellControlShowPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseDwellControlShowPrompt:");
}

id objc_msgSend_setAssistiveTouchMouseKeysDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseKeysDelay:");
}

id objc_msgSend_setAssistiveTouchMouseKeysEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseKeysEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseKeysMaxSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseKeysMaxSpeed:");
}

id objc_msgSend_setAssistiveTouchMouseKeysOptionToggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseKeysOptionToggleEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseKeysUseMainKeyboardKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseKeysUseMainKeyboardKeys:");
}

id objc_msgSend_setAssistiveTouchMouseOnDeviceEyeTrackingCalibrationStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseOnDeviceEyeTrackingCalibrationStrategy:");
}

id objc_msgSend_setAssistiveTouchMouseOnDeviceEyeTrackingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseOnDeviceEyeTrackingEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseOnDeviceEyeTrackingOnboardingCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseOnDeviceEyeTrackingOnboardingCompleted:");
}

id objc_msgSend_setAssistiveTouchMouseOnDeviceEyeTrackingShouldShowUncalibratedPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseOnDeviceEyeTrackingShouldShowUncalibratedPoints:");
}

id objc_msgSend_setAssistiveTouchMousePointerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMousePointerColor:");
}

id objc_msgSend_setAssistiveTouchMousePointerSizeMultiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMousePointerSizeMultiplier:");
}

id objc_msgSend_setAssistiveTouchMousePointerTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMousePointerTimeout:");
}

id objc_msgSend_setAssistiveTouchMousePointerTimeoutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMousePointerTimeoutEnabled:");
}

id objc_msgSend_setAssistiveTouchMouseZoomPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchMouseZoomPanningStyle:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingAutoHideEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingAutoHideEnabled:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingAutoHideOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingAutoHideOpacity:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingShouldOffsetBufferPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingShouldOffsetBufferPoints:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingShouldUseGaussianBlur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingShouldUseGaussianBlur:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingShouldUseMotionFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingShouldUseMotionFilter:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingShouldUseWeightedAverages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingShouldUseWeightedAverages:");
}

id objc_msgSend_setAssistiveTouchOnDeviceEyeTrackingSmoothingBufferSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOnDeviceEyeTrackingSmoothingBufferSize:");
}

id objc_msgSend_setAssistiveTouchOpenMenuSwaggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOpenMenuSwaggleEnabled:");
}

id objc_msgSend_setAssistiveTouchOrbAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchOrbAction:");
}

id objc_msgSend_setAssistiveTouchScanCycles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScanCycles:");
}

id objc_msgSend_setAssistiveTouchScanTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScanTimeout:");
}

id objc_msgSend_setAssistiveTouchScanTimeoutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScanTimeoutEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerAddedTripleClickAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerAddedTripleClickAutomatically:");
}

id objc_msgSend_setAssistiveTouchScannerCompactMenuEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerCompactMenuEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerCursorHighVisibilityEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerCursorHighVisibilityEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerPointPickerModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerPointPickerModeEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerSoundEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerSoundEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerSpeechEnabled:");
}

id objc_msgSend_setAssistiveTouchScannerSpeechIsInterruptedByScanning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerSpeechIsInterruptedByScanning:");
}

id objc_msgSend_setAssistiveTouchScannerSpeechRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerSpeechRate:");
}

id objc_msgSend_setAssistiveTouchScannerSpeechShouldSpeakTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScannerSpeechShouldSpeakTraits:");
}

id objc_msgSend_setAssistiveTouchScanningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchScanningMode:");
}

id objc_msgSend_setAssistiveTouchShouldUseExtendedKeyboardPredictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchShouldUseExtendedKeyboardPredictions:");
}

id objc_msgSend_setAssistiveTouchSingleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchSingleTapAction:");
}

id objc_msgSend_setAssistiveTouchSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchSpeed:");
}

id objc_msgSend_setAssistiveTouchStepInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchStepInterval:");
}

id objc_msgSend_setAssistiveTouchSwitches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchSwitches:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadBorderColor:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadBorderOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadBorderOpacity:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadBorderWidth:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadEnabled:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadFadeDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadFadeDelay:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadFullScreenToggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadFullScreenToggleEnabled:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadHoldDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadHoldDuration:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadInnerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadInnerColor:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadInnerOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadInnerOpacity:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadScrollSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadScrollSpeed:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadScrollToggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadScrollToggleEnabled:");
}

id objc_msgSend_setAssistiveTouchVirtualTrackpadSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistiveTouchVirtualTrackpadSpeed:");
}

id objc_msgSend_setAttentionDetectionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttentionDetectionEnabled:");
}

id objc_msgSend_setAttribute_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttribute:forKey:");
}

id objc_msgSend_setAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedString:");
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:");
}

id objc_msgSend_setAudioDucking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioDucking:");
}

id objc_msgSend_setAudioDucking_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioDucking:specifier:");
}

id objc_msgSend_setAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSession:");
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationType:");
}

id objc_msgSend_setAuthorizedServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorizedServices:");
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocapitalizationType:");
}

id objc_msgSend_setAutocorrectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocorrectionType:");
}

id objc_msgSend_setAutomaticAccessibilityEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticAccessibilityEnabled:");
}

id objc_msgSend_setAutomaticAccessibilityIgnoreAppAccessibilityPreferred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticAccessibilityIgnoreAppAccessibilityPreferred:");
}

id objc_msgSend_setAutomaticAccessibilityModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticAccessibilityModes:");
}

id objc_msgSend_setAutomaticallyCancelPendingBlockUponSchedulingNewBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:");
}

id objc_msgSend_setAutomaticallyShowsCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyShowsCancelButton:");
}

id objc_msgSend_setAutoplayVideoPreviews_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoplayVideoPreviews:specifier:");
}

id objc_msgSend_setAutoresizesSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizesSubviews:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAutorotates_forceUpdateInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutorotates:forceUpdateInterfaceOrientation:");
}

id objc_msgSend_setAx_asset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_asset:");
}

id objc_msgSend_setAx_assetDeleteButtonHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetDeleteButtonHidden:");
}

id objc_msgSend_setAx_assetDownloadButtonHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetDownloadButtonHidden:");
}

id objc_msgSend_setAx_assetDownloadBytesExpected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetDownloadBytesExpected:");
}

id objc_msgSend_setAx_assetDownloadBytesReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetDownloadBytesReceived:");
}

id objc_msgSend_setAx_assetError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetError:");
}

id objc_msgSend_setAx_assetState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetState:");
}

id objc_msgSend_setAx_assetUnarchivedFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAx_assetUnarchivedFileSize:");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackBarButtonItem:");
}

id objc_msgSend_setBackButtonDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackButtonDisplayMode:");
}

id objc_msgSend_setBackButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackButtonTitle:");
}

id objc_msgSend_setBackTapDoubleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackTapDoubleTapAction:");
}

id objc_msgSend_setBackTapEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackTapEnabled:");
}

id objc_msgSend_setBackTapFalsePositiveAlertsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackTapFalsePositiveAlertsEnabled:");
}

id objc_msgSend_setBackTapRNNModelEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackTapRNNModelEnabled:");
}

id objc_msgSend_setBackTapTripleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackTapTripleTapAction:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarButtonItem:");
}

id objc_msgSend_setBasePunctuationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBasePunctuationUUID:");
}

id objc_msgSend_setBatteryMonitoringEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatteryMonitoringEnabled:");
}

id objc_msgSend_setBehaviorFooterTextMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBehaviorFooterTextMap:");
}

id objc_msgSend_setBindingAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBindingAvailability:");
}

id objc_msgSend_setBluetoothIsBusy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothIsBusy:");
}

id objc_msgSend_setBoldTextEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldTextEnabled:specifier:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBool_forKey_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:completionHandler:");
}

id objc_msgSend_setBoolValue_forSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoolValue:forSetting:");
}

id objc_msgSend_setBoolValue_forSetting_passcode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoolValue:forSetting:passcode:");
}

id objc_msgSend_setBorderStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderStyle:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBrailleAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleAlerts:");
}

id objc_msgSend_setBrailleAlerts_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleAlerts:specifier:");
}

id objc_msgSend_setBrailleAutoAdvanceDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleAutoAdvanceDuration:");
}

id objc_msgSend_setBrailleFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleFormatting:");
}

id objc_msgSend_setBrailleFormatting_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleFormatting:specifier:");
}

id objc_msgSend_setBrailleInputTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleInputTable:");
}

id objc_msgSend_setBrailleStatusCellGeneral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleStatusCellGeneral:");
}

id objc_msgSend_setBrailleStatusCellText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleStatusCellText:");
}

id objc_msgSend_setBrailleTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrailleTable:");
}

id objc_msgSend_setBundleIdentifierForPrivacyDisclosureController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifierForPrivacyDisclosureController:");
}

id objc_msgSend_setBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifiers:");
}

id objc_msgSend_setButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButton:");
}

id objc_msgSend_setButtonAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonAction:");
}

id objc_msgSend_setButtonMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonMap:");
}

id objc_msgSend_setButtonShapesEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonShapesEnabled:specifier:");
}

id objc_msgSend_setCachedAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedAsset:");
}

id objc_msgSend_setCachedCommandMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedCommandMap:");
}

id objc_msgSend_setCachedDwellScanningOptionsSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedDwellScanningOptionsSpecifiers:");
}

id objc_msgSend_setCachedIdleTimerPref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedIdleTimerPref:");
}

id objc_msgSend_setCachedResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedResults:");
}

id objc_msgSend_setCachedSelectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedSelectedApps:");
}

id objc_msgSend_setCachedSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedSpecifier:");
}

id objc_msgSend_setCachedUnselectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedUnselectedApps:");
}

id objc_msgSend_setCallAudioRoutingAutoAnswerDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallAudioRoutingAutoAnswerDelay:");
}

id objc_msgSend_setCallAudioRoutingAutoAnswerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallAudioRoutingAutoAnswerEnabled:");
}

id objc_msgSend_setCameraSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraSwitch:");
}

id objc_msgSend_setCameraSwitchSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraSwitchSpecifier:");
}

id objc_msgSend_setCameraSwitchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCameraSwitchType:");
}

id objc_msgSend_setCanOverlapSourceViewRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanOverlapSourceViewRect:");
}

id objc_msgSend_setCanUseVoiceTriggerDuringPhoneCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanUseVoiceTriggerDuringPhoneCall:");
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelButton:");
}

id objc_msgSend_setCancelButtonString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelButtonString:");
}

id objc_msgSend_setCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:");
}

id objc_msgSend_setCategory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:error:");
}

id objc_msgSend_setCategory_mode_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:mode:options:error:");
}

id objc_msgSend_setCategory_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:withOptions:error:");
}

id objc_msgSend_setCategoryName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryName:");
}

id objc_msgSend_setCellEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellEnabled:");
}

id objc_msgSend_setCellForPresentedHUDView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellForPresentedHUDView:");
}

id objc_msgSend_setCellType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellType:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChannel:");
}

id objc_msgSend_setCharacterFeedbackDelayDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharacterFeedbackDelayDuration:");
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharactersToBeSkipped:");
}

id objc_msgSend_setChecked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChecked:");
}

id objc_msgSend_setCheckmarkStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckmarkStackView:");
}

id objc_msgSend_setCheckmarkState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckmarkState:");
}

id objc_msgSend_setCheckmarkViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckmarkViews:");
}

id objc_msgSend_setCircle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCircle:");
}

id objc_msgSend_setClarityGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClarityGroupSpecifier:");
}

id objc_msgSend_setClarityUIAdminPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClarityUIAdminPasscode:");
}

id objc_msgSend_setClassicInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassicInvertColors:");
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearButtonMode:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionView:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setColorHighlightItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorHighlightItems:");
}

id objc_msgSend_setColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColors:");
}

id objc_msgSend_setCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:");
}

id objc_msgSend_setCommand_forBrailleKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:forBrailleKey:");
}

id objc_msgSend_setCommand_forInputIdentifier_forDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:forInputIdentifier:forDisplayWithToken:");
}

id objc_msgSend_setCommandCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandCategory:");
}

id objc_msgSend_setCommandManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandManager:");
}

id objc_msgSend_setCommandMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandMap:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComponents:");
}

id objc_msgSend_setConfirmationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationStyle:");
}

id objc_msgSend_setConnectable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectable:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContainerFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerFeedback:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setContentHighlightItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHighlightItems:");
}

id objc_msgSend_setContentHighlightItemsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHighlightItemsHidden:");
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHuggingPriority:forAxis:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:animated:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContinueButtonEnablingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinueButtonEnablingDelegate:");
}

id objc_msgSend_setContinuous_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuous:");
}

id objc_msgSend_setControlTimebase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlTimebase:");
}

id objc_msgSend_setController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setController:");
}

id objc_msgSend_setControllerLoadAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControllerLoadAction:");
}

id objc_msgSend_setCornerCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerCurve:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCountStringInsignificantRowCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountStringInsignificantRowCount:");
}

id objc_msgSend_setCurrentFilterSelectionSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentFilterSelectionSpecifiers:");
}

id objc_msgSend_setCurrentOptionSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentOptionSpecifiers:");
}

id objc_msgSend_setCurrentPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPage:");
}

id objc_msgSend_setCurrentPageIndicatorTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPageIndicatorTintColor:");
}

id objc_msgSend_setCurrentPinSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPinSpecifier:");
}

id objc_msgSend_setCurrentToneIdentifier_forAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentToneIdentifier:forAlertType:topic:");
}

id objc_msgSend_setCurrentVibrationIdentifier_forAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentVibrationIdentifier:forAlertType:topic:");
}

id objc_msgSend_setCustomAction_forButtonNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomAction:forButtonNumber:");
}

id objc_msgSend_setCustomDetectorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDetectorDelegate:");
}

id objc_msgSend_setCustomProfiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomProfiles:");
}

id objc_msgSend_setCustomPronunciationSubstitutions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomPronunciationSubstitutions:");
}

id objc_msgSend_setCustomSettingsForVoice_sourceKey_settings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomSettingsForVoice:sourceKey:settings:");
}

id objc_msgSend_setDarkenColorsEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDarkenColorsEnabled:specifier:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDataSourceDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSourceDelegate:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDebugBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugBuild:");
}

id objc_msgSend_setDefaultActionForButtonNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultActionForButtonNumber:");
}

id objc_msgSend_setDefaultButtonString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultButtonString:");
}

id objc_msgSend_setDefaultProfiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultProfiles:");
}

id objc_msgSend_setDefaultToneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultToneIdentifier:");
}

id objc_msgSend_setDefaultVibrationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultVibrationIdentifier:");
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefinesPresentationContext:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDescriptionGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionGroupSpecifier:");
}

id objc_msgSend_setDetailControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailControllerClass:");
}

id objc_msgSend_setDetailItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailItems:");
}

id objc_msgSend_setDetailItemsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailItemsHidden:");
}

id objc_msgSend_setDetailText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetailText:");
}

id objc_msgSend_setDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetected:");
}

id objc_msgSend_setDetectorNameTextField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetectorNameTextField:");
}

id objc_msgSend_setDeviceScanningEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceScanningEnabled:");
}

id objc_msgSend_setDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceState:");
}

id objc_msgSend_setDeviceStatePaired_andConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceStatePaired:andConnected:");
}

id objc_msgSend_setDictateButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictateButton:");
}

id objc_msgSend_setDictateView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictateView:");
}

id objc_msgSend_setDictationButtonEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationButtonEnabled:");
}

id objc_msgSend_setDidResetD22Preferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidResetD22Preferences:");
}

id objc_msgSend_setDifferentiateWithoutColorEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentiateWithoutColorEnabled:specifier:");
}

id objc_msgSend_setDiscoverable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverable:");
}

id objc_msgSend_setDismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissHandler:");
}

id objc_msgSend_setDisplayDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayDelegate:");
}

id objc_msgSend_setDisplayDescriptorCallbackEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayDescriptorCallbackEnabled:");
}

id objc_msgSend_setDisplayFilterPageDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayFilterPageDelegate:");
}

id objc_msgSend_setDisplayImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayImage:");
}

id objc_msgSend_setDisplayValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayValue:");
}

id objc_msgSend_setDisplayingFilterSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayingFilterSelection:");
}

id objc_msgSend_setDisplayingOptionsForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayingOptionsForType:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDockPositionSpecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDockPositionSpecs:");
}

id objc_msgSend_setDockPositionsGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDockPositionsGroupSpecifier:");
}

id objc_msgSend_setDoneButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoneButton:");
}

id objc_msgSend_setDoubleTapDragMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoubleTapDragMode:");
}

id objc_msgSend_setDwellControlMovementToleranceRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDwellControlMovementToleranceRadius:");
}

id objc_msgSend_setDwellMovementToleranceHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDwellMovementToleranceHelper:");
}

id objc_msgSend_setEdgeToEdgeCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgeToEdgeCells:");
}

id objc_msgSend_setEditPaneClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditPaneClass:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEditingAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditingAccessoryType:");
}

id objc_msgSend_setEffectiveGlobalAnnounceSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffectiveGlobalAnnounceSetting:");
}

id objc_msgSend_setEnableTapToClick_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableTapToClick:");
}

id objc_msgSend_setEnableVoiceOverCaptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableVoiceOverCaptions:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnabled_withAuthToken_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:withAuthToken:completionBlock:");
}

id objc_msgSend_setEnabledSoundDetectionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledSoundDetectionTypes:");
}

id objc_msgSend_setEnabledSwitchesSpecifierGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledSwitchesSpecifierGroup:");
}

id objc_msgSend_setEnablesReturnKeyAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesReturnKeyAutomatically:");
}

id objc_msgSend_setEnablesReturnKeyOnNonWhiteSpaceContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesReturnKeyOnNonWhiteSpaceContent:");
}

id objc_msgSend_setEnclosureColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnclosureColors:");
}

id objc_msgSend_setEndPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndPoint:");
}

id objc_msgSend_setEnhanceDialogueLevel_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnhanceDialogueLevel:error:");
}

id objc_msgSend_setEnrollSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnrollSpecifier:");
}

id objc_msgSend_setEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntries:");
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedRowHeight:");
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedActivityTypes:");
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusiveTouch:");
}

id objc_msgSend_setExpressionSensitivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpressionSensitivity:");
}

id objc_msgSend_setExternalizedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalizedContext:");
}

id objc_msgSend_setEyeTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEyeTracker:");
}

id objc_msgSend_setEyeTrackingSettingsHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEyeTrackingSettingsHelper:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFeedbackDelayPickerSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeedbackDelayPickerSpecifier:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _[a1 setFill];
}

id objc_msgSend_setFillCircle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillCircle:");
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColor:");
}

id objc_msgSend_setFilterCategory_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterCategory:filter:");
}

id objc_msgSend_setFilterSelectionSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterSelectionSpecifiers:");
}

id objc_msgSend_setFilterTypeToOptionSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilterTypeToOptionSpecifiers:");
}

id objc_msgSend_setFilteredKeyModifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilteredKeyModifiers:");
}

id objc_msgSend_setFlashCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlashCount:");
}

id objc_msgSend_setFlashTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlashTimer:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFontMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontMetrics:");
}

id objc_msgSend_setFooterText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterText:");
}

id objc_msgSend_setFooterTextSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterTextSpecifier:");
}

id objc_msgSend_setForLongPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForLongPress:");
}

id objc_msgSend_setForceTouchSettingItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceTouchSettingItems:");
}

id objc_msgSend_setForceTouchSettingsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceTouchSettingsEnabled:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setFullKeyboardAccessFocusRingColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullKeyboardAccessFocusRingColor:");
}

id objc_msgSend_setFullKeyboardAccessFocusRingHighContrastEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullKeyboardAccessFocusRingHighContrastEnabled:");
}

id objc_msgSend_setFullKeyboardAccessFocusRingTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullKeyboardAccessFocusRingTimeout:");
}

id objc_msgSend_setFullKeyboardAccessFocusRingTimeoutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullKeyboardAccessFocusRingTimeoutEnabled:");
}

id objc_msgSend_setFullKeyboardAccessLargeFocusRingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullKeyboardAccessLargeFocusRingEnabled:");
}

id objc_msgSend_setGameControlButtonPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGameControlButtonPress:");
}

id objc_msgSend_setGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGesture:");
}

id objc_msgSend_setGestureActionSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGestureActionSpecifier:");
}

id objc_msgSend_setGestureHelpView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGestureHelpView:");
}

id objc_msgSend_setGetDialectPreferencesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetDialectPreferencesCallback:");
}

id objc_msgSend_setGetPerVoiceSettingsCallack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetPerVoiceSettingsCallack:");
}

id objc_msgSend_setGetSelectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetSelectedApps:");
}

id objc_msgSend_setGetUnselectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetUnselectedApps:");
}

id objc_msgSend_setGetter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetter:");
}

id objc_msgSend_setGetterBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetterBlock:");
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGivenName:");
}

id objc_msgSend_setGizmoPref_forKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGizmoPref:forKey:domain:");
}

id objc_msgSend_setGlobalDevicePreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalDevicePreferences:");
}

id objc_msgSend_setGlobalFilterEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalFilterEnabled:");
}

id objc_msgSend_setGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSpecifier:");
}

id objc_msgSend_setGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupUUID:");
}

id objc_msgSend_setGuidedAccessAXFeaturesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuidedAccessAXFeaturesEnabled:");
}

id objc_msgSend_setGuidedAccessAllowsUnlockWithTouchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuidedAccessAllowsUnlockWithTouchID:");
}

id objc_msgSend_setGuidedAccessAutoLockTimeInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuidedAccessAutoLockTimeInSeconds:");
}

id objc_msgSend_setGuidedAccessShouldSpeakForTimeRestrictionEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuidedAccessShouldSpeakForTimeRestrictionEvents:");
}

id objc_msgSend_setGuidedAccessToneIdentifierForTimeRestrictionEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuidedAccessToneIdentifierForTimeRestrictionEvents:");
}

id objc_msgSend_setHIDEventFilterMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHIDEventFilterMask:");
}

id objc_msgSend_setHIDEventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHIDEventHandler:");
}

id objc_msgSend_setHapticEngineAutoShutdownTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticEngineAutoShutdownTimeout:");
}

id objc_msgSend_setHapticEngineUsesAutoShutdown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticEngineUsesAutoShutdown:");
}

id objc_msgSend_setHapticEngineUsesHapticsOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticEngineUsesHapticsOnly:");
}

id objc_msgSend_setHapticMusicActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticMusicActive:");
}

id objc_msgSend_setHapticMusicAlgorithmSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticMusicAlgorithmSelection:");
}

id objc_msgSend_setHapticMusicEnhancedPercussion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticMusicEnhancedPercussion:");
}

id objc_msgSend_setHapticMusicEnhancedVocals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticMusicEnhancedVocals:");
}

id objc_msgSend_setHapticMusicToggledInPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHapticMusicToggledInPreferences:");
}

id objc_msgSend_setHasEndedEventCapture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasEndedEventCapture:");
}

id objc_msgSend_setHasLocalizableName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLocalizableName:");
}

id objc_msgSend_setHeadSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadSwitch:");
}

id objc_msgSend_setHearingControlCenterOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHearingControlCenterOrder:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHiddenIndexesToDictionaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHiddenIndexesToDictionaries:");
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesBackButton:");
}

id objc_msgSend_setHidesForSinglePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesForSinglePage:");
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesNavigationBarDuringPresentation:");
}

id objc_msgSend_setHidesSearchBarWhenScrolling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesSearchBarWhenScrolling:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighlightSettingsItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightSettingsItems:");
}

id objc_msgSend_setHighlightSettingsItemsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightSettingsItemsHidden:");
}

id objc_msgSend_setHints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHints:");
}

id objc_msgSend_setHintsEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHintsEnabled:specifier:");
}

id objc_msgSend_setHistorySpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistorySpecifier:");
}

id objc_msgSend_setHoldPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoldPoint:");
}

id objc_msgSend_setHoldPointActionSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoldPointActionSpecifier:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHoverTextActivationLockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextActivationLockEnabled:");
}

id objc_msgSend_setHoverTextBackgroundColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextBackgroundColorData:");
}

id objc_msgSend_setHoverTextBorderColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextBorderColorData:");
}

id objc_msgSend_setHoverTextContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextContentSize:");
}

id objc_msgSend_setHoverTextContentSize_forSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextContentSize:forSpecifier:");
}

id objc_msgSend_setHoverTextDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextDisplayMode:");
}

id objc_msgSend_setHoverTextFontName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextFontName:");
}

id objc_msgSend_setHoverTextInsertionPointColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextInsertionPointColorData:");
}

id objc_msgSend_setHoverTextPreferredActivatorKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextPreferredActivatorKey:");
}

id objc_msgSend_setHoverTextScrollingSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextScrollingSpeed:");
}

id objc_msgSend_setHoverTextTextColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTextColorData:");
}

id objc_msgSend_setHoverTextTypingAutocorrectedTextColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingAutocorrectedTextColorData:");
}

id objc_msgSend_setHoverTextTypingBackgroundColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingBackgroundColorData:");
}

id objc_msgSend_setHoverTextTypingBorderColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingBorderColorData:");
}

id objc_msgSend_setHoverTextTypingDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingDisplayMode:");
}

id objc_msgSend_setHoverTextTypingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingEnabled:");
}

id objc_msgSend_setHoverTextTypingFontName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingFontName:");
}

id objc_msgSend_setHoverTextTypingInsertionPointColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingInsertionPointColorData:");
}

id objc_msgSend_setHoverTextTypingMisspelledTextColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingMisspelledTextColorData:");
}

id objc_msgSend_setHoverTextTypingTextColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingTextColorData:");
}

id objc_msgSend_setHoverTextTypingTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoverTextTypingTextStyle:");
}

id objc_msgSend_setIconFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconFilter:");
}

id objc_msgSend_setIconKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconKey:");
}

id objc_msgSend_setIconPickerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconPickerDelegate:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdleTimerDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:");
}

id objc_msgSend_setIgnoreCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreCase:");
}

id objc_msgSend_setIgnoreCustomSubstitutions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreCustomSubstitutions:");
}

id objc_msgSend_setIgnoreGroupsChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreGroupsChangedNotification:");
}

id objc_msgSend_setIgnoreTrackpad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreTrackpad:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImageAspectConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageAspectConstraint:");
}

id objc_msgSend_setImageCaptioningDisabledApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageCaptioningDisabledApps:");
}

id objc_msgSend_setImageDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageDescriptions:");
}

id objc_msgSend_setImageDescriptions_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageDescriptions:specifier:");
}

id objc_msgSend_setImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageView:");
}

id objc_msgSend_setIncludedIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludedIdentifiers:");
}

id objc_msgSend_setIncludedModulesGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludedModulesGroupSpecifier:");
}

id objc_msgSend_setIncludedSectionIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludedSectionIndex:");
}

id objc_msgSend_setIncludesHomeScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesHomeScreen:");
}

id objc_msgSend_setIncomingCallsTTY_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncomingCallsTTY:forContext:");
}

id objc_msgSend_setIndexHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndexHidden:animated:");
}

id objc_msgSend_setIndicatorView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndicatorView:");
}

id objc_msgSend_setInitialPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialPasscode:");
}

id objc_msgSend_setInstructionsText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstructionsText:");
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAccessibilityElement:");
}

id objc_msgSend_setIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEnabled:");
}

id objc_msgSend_setIsEphemeral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEphemeral:");
}

id objc_msgSend_setIsListening_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsListening:");
}

id objc_msgSend_setIsListeningForNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsListeningForNotifications:");
}

id objc_msgSend_setIsPlayingSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPlayingSample:");
}

id objc_msgSend_setIsTabDown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTabDown:");
}

id objc_msgSend_setItemSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemSize:");
}

id objc_msgSend_setItemType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemType:");
}

id objc_msgSend_setKShotDetectorIsEnabled_isEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKShotDetectorIsEnabled:isEnabled:");
}

id objc_msgSend_setKShotDetectorModelFailed_modelFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKShotDetectorModelFailed:modelFailed:");
}

id objc_msgSend_setKShotShouldSaveCurrentSound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKShotShouldSaveCurrentSound:");
}

id objc_msgSend_setKbScrollWheelSpecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKbScrollWheelSpecs:");
}

id objc_msgSend_setKbShortcutSpecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKbShortcutSpecs:");
}

id objc_msgSend_setKeepConnectionAlive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeepConnectionAlive:");
}

id objc_msgSend_setKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyChord:");
}

id objc_msgSend_setKeyChordDisplayText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyChordDisplayText:");
}

id objc_msgSend_setKeyChordPresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyChordPresenter:");
}

id objc_msgSend_setKeyRepeatDelaySpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyRepeatDelaySpecifier:");
}

id objc_msgSend_setKeyRepeatIntervalSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyRepeatIntervalSpecifier:");
}

id objc_msgSend_setKeyRepeatSpecificSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyRepeatSpecificSpecifiers:");
}

id objc_msgSend_setKeyboardMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardMode:");
}

id objc_msgSend_setKeyboardType_autoCaps_autoCorrection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardType:autoCaps:autoCorrection:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLabelText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelText:");
}

id objc_msgSend_setLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguage:");
}

id objc_msgSend_setLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguages:");
}

id objc_msgSend_setLaserZoomPanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaserZoomPanningStyle:");
}

id objc_msgSend_setLastAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastAction:");
}

id objc_msgSend_setLastSmartInvertColorsEnablement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSmartInvertColorsEnablement:");
}

id objc_msgSend_setLastSpeechRateAdjustmentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSpeechRateAdjustmentTime:");
}

id objc_msgSend_setLatestAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatestAsset:");
}

id objc_msgSend_setLaunchToRecipeSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchToRecipeSpecifiers:");
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMargins:");
}

id objc_msgSend_setLayoutMarginsRelativeArrangement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutMarginsRelativeArrangement:");
}

id objc_msgSend_setLearnMoreButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearnMoreButton:");
}

id objc_msgSend_setLearnMoreDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearnMoreDelegate:");
}

id objc_msgSend_setLearnMoreViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLearnMoreViewController:");
}

id objc_msgSend_setLeaveKeyboardUnzoomedSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeaveKeyboardUnzoomedSpecifier:");
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItem:");
}

id objc_msgSend_setLeftRightBalanceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftRightBalanceEnabled:");
}

id objc_msgSend_setLeftRightBalanceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftRightBalanceValue:");
}

id objc_msgSend_setLeftView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftView:");
}

id objc_msgSend_setLeftViewMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftViewMode:");
}

id objc_msgSend_setLetterFeedbackEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLetterFeedbackEnabled:");
}

id objc_msgSend_setLevels_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLevels:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setListLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListLayout:");
}

id objc_msgSend_setListeningDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningDuration:");
}

id objc_msgSend_setLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoading:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocalizedErrorMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedErrorMessage:");
}

id objc_msgSend_setLocalizedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedTitle:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocations:");
}

id objc_msgSend_setLockScreenClockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenClockEnabled:");
}

id objc_msgSend_setLongPressAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongPressAction:");
}

id objc_msgSend_setLongPressGameControlButtonPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongPressGameControlButtonPress:");
}

id objc_msgSend_setLongPressGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongPressGesture:");
}

id objc_msgSend_setLongPressShortcutIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongPressShortcutIdentifier:");
}

id objc_msgSend_setMagnifierEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMagnifierEnabled:");
}

id objc_msgSend_setMainButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainButton:");
}

id objc_msgSend_setMainSpecifiersGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMainSpecifiersGroup:");
}

id objc_msgSend_setMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMapping:");
}

id objc_msgSend_setMappings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMappings:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumContentSizeCategory:");
}

id objc_msgSend_setMaximumTrackTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumTrackTintColor:");
}

id objc_msgSend_setMaximumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumValue:");
}

id objc_msgSend_setMessageImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageImageView:");
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleName:");
}

id objc_msgSend_setMinimumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumContentSizeCategory:");
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumInteritemSpacing:");
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineSpacing:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setMinimumTrackTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumTrackTintColor:");
}

id objc_msgSend_setMinimumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumValue:");
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalInPresentation:");
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationCapturesStatusBarAppearance:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModeSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModeSpecifiers:");
}

id objc_msgSend_setModeToFooterTextExplanation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModeToFooterTextExplanation:");
}

id objc_msgSend_setModelSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelSwitch:");
}

id objc_msgSend_setModesSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModesSpecifiers:");
}

id objc_msgSend_setModifierKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifierKeys:");
}

id objc_msgSend_setModifierState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifierState:");
}

id objc_msgSend_setMoreIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMoreIdentifiers:");
}

id objc_msgSend_setMoreModulesGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMoreModulesGroupSpecifier:");
}

id objc_msgSend_setMoreSectionIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMoreSectionIndex:");
}

id objc_msgSend_setMotionTrackingSettingsHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMotionTrackingSettingsHelper:");
}

id objc_msgSend_setMovementToleranceSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMovementToleranceSpecifiers:");
}

id objc_msgSend_setMultipleTouchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultipleTouchEnabled:");
}

id objc_msgSend_setMuteSound_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteSound:specifier:");
}

id objc_msgSend_setMuteSpeech_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteSpeech:specifier:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setName_forItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:forItem:");
}

id objc_msgSend_setNavigationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationStyle:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsMigrationFor117558856_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsMigrationFor117558856:");
}

id objc_msgSend_setNeedsSpecifierRefresh(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsSpecifierRefresh];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNeedsUpdateOfSupportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateOfSupportedInterfaceOrientations];
}

id objc_msgSend_setNextButtonEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextButtonEnabled:");
}

id objc_msgSend_setNoneAtTop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNoneAtTop:");
}

id objc_msgSend_setNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNote:");
}

id objc_msgSend_setNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationsEnabled:");
}

id objc_msgSend_setNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingInfo:");
}

id objc_msgSend_setNumberFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberFeedback:");
}

id objc_msgSend_setNumberFeedback_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberFeedback:specifier:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfLoops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLoops:");
}

id objc_msgSend_setNumberOfPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfPages:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObscuresBackgroundDuringPresentation:");
}

id objc_msgSend_setObserverToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserverToken:");
}

id objc_msgSend_setObservingKeyValueChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservingKeyValueChanges:");
}

id objc_msgSend_setOkButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOkButton:");
}

id objc_msgSend_setOnOffLabelsEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnOffLabelsEnabled:specifier:");
}

id objc_msgSend_setOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalFrame:");
}

id objc_msgSend_setOriginalName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalName:");
}

id objc_msgSend_setOriginalString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalString:");
}

id objc_msgSend_setOrthography_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrthography:");
}

id objc_msgSend_setOverrideProcessName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideProcessName:");
}

id objc_msgSend_setPIN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPIN:");
}

id objc_msgSend_setPageControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageControl:");
}

id objc_msgSend_setPageHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageHeight:");
}

id objc_msgSend_setPageIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageIndex:");
}

id objc_msgSend_setPageIndicatorTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageIndicatorTintColor:");
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPagingEnabled:");
}

id objc_msgSend_setPairingStyle_andPasskey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingStyle:andPasskey:");
}

id objc_msgSend_setPanSpecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPanSpecs:");
}

id objc_msgSend_setParentBrailleController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentBrailleController:");
}

id objc_msgSend_setParentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentController:");
}

id objc_msgSend_setPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasscode:");
}

id objc_msgSend_setPasscodeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasscodeState:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPaymentSummaryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaymentSummaryItems:");
}

id objc_msgSend_setPerAppSettingsCustomizedAppIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerAppSettingsCustomizedAppIDs:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setPhonemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhonemes:");
}

id objc_msgSend_setPhoneticFeedbackEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneticFeedbackEnabled:");
}

id objc_msgSend_setPinCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinCode:");
}

id objc_msgSend_setPipCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipCount:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPopToRootSwitchViewControlAfterSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopToRootSwitchViewControlAfterSelection:");
}

id objc_msgSend_setPracticeViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPracticeViewController:");
}

id objc_msgSend_setPreferHorizontalText_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferHorizontalText:specifier:");
}

id objc_msgSend_setPreferNonBlinkingCursor_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferNonBlinkingCursor:specifier:");
}

id objc_msgSend_setPreferenceFor_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferenceFor:value:");
}

id objc_msgSend_setPreferenceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferenceValue:");
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredAction:");
}

id objc_msgSend_setPreferredRelayNumber_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredRelayNumber:forContext:");
}

id objc_msgSend_setPreferredSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSymbolConfiguration:");
}

id objc_msgSend_setPrepareToMemorizeNextKey_immediate_forDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrepareToMemorizeNextKey:immediate:forDisplayWithToken:");
}

id objc_msgSend_setPresentHUDViewTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentHUDViewTimer:");
}

id objc_msgSend_setPresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresenter:");
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingViewController:");
}

id objc_msgSend_setPreviewDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewDelegate:");
}

id objc_msgSend_setPreviewImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewImageView:");
}

id objc_msgSend_setPreviewPageController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewPageController:");
}

id objc_msgSend_setPrimaryBrailleDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryBrailleDisplay:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivateDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateDelegate:");
}

id objc_msgSend_setProductID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductID:");
}

id objc_msgSend_setProfileId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfileId:");
}

id objc_msgSend_setProfileName_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfileName:specifier:");
}

id objc_msgSend_setPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrompt:");
}

id objc_msgSend_setPromptedForDataCollection(void *a1, const char *a2, ...)
{
  return _[a1 setPromptedForDataCollection];
}

id objc_msgSend_setProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperties:");
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:");
}

id objc_msgSend_setProtectedConfiguration_forUser_credentialSet_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtectedConfiguration:forUser:credentialSet:error:");
}

id objc_msgSend_setPunctuation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPunctuation:");
}

id objc_msgSend_setPunctuationEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPunctuationEntry:");
}

id objc_msgSend_setPunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPunctuationGroup:");
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryItems:");
}

id objc_msgSend_setQuickSpeakHighlightOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickSpeakHighlightOption:");
}

id objc_msgSend_setQuickSpeakSentenceHighlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickSpeakSentenceHighlightColor:");
}

id objc_msgSend_setQuickSpeakSentenceHighlightOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickSpeakSentenceHighlightOption:");
}

id objc_msgSend_setQuickSpeakSpeakingRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickSpeakSpeakingRate:");
}

id objc_msgSend_setQuickSpeakWordHighlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickSpeakWordHighlightColor:");
}

id objc_msgSend_setQuickTypeWordFeedbackEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuickTypeWordFeedbackEnabled:");
}

id objc_msgSend_setRTTLiveTranscriptionsEnabled_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRTTLiveTranscriptionsEnabled:forContext:");
}

id objc_msgSend_setRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRate:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecentKeyChords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentKeyChords:");
}

id objc_msgSend_setRecipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipe:");
}

id objc_msgSend_setRecipes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecipes:");
}

id objc_msgSend_setReduceMotionEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceMotionEnabled:specifier:");
}

id objc_msgSend_setReduceMotionReduceSlideTransitionsEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceMotionReduceSlideTransitionsEnabled:specifier:");
}

id objc_msgSend_setReduceMotionReduceSlideTransitionsFooterSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceMotionReduceSlideTransitionsFooterSpecifier:");
}

id objc_msgSend_setReduceMotionReduceSlideTransitionsSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceMotionReduceSlideTransitionsSpecifier:");
}

id objc_msgSend_setReduceTransparencyEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceTransparencyEnabled:specifier:");
}

id objc_msgSend_setReduceWhitePointIntensitySpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceWhitePointIntensitySpecifier:");
}

id objc_msgSend_setReduceWhitePointSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReduceWhitePointSpecifier:");
}

id objc_msgSend_setRenameDetectorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenameDetectorDelegate:");
}

id objc_msgSend_setRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingMode:");
}

id objc_msgSend_setReplacement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReplacement:");
}

id objc_msgSend_setReplacementString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReplacementString:");
}

id objc_msgSend_setRequestType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestType:");
}

id objc_msgSend_setResizeSpecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResizeSpecs:");
}

id objc_msgSend_setResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResolver:");
}

id objc_msgSend_setReturnKeyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnKeyType:");
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:");
}

id objc_msgSend_setRightBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItem:animated:");
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:");
}

id objc_msgSend_setRightView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightView:");
}

id objc_msgSend_setRightViewMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightViewMode:");
}

id objc_msgSend_setRootController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootController:");
}

id objc_msgSend_setRowColumNumbers_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowColumNumbers:specifier:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setRule_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRule:");
}

id objc_msgSend_setSavedChannels_forOutput_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavedChannels:forOutput:forSource:");
}

id objc_msgSend_setSavesCategoryNameOnlyOnSliderEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavesCategoryNameOnlyOnSliderEvent:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setScanningEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanningEnabled:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setScrollAccelerationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollAccelerationFactor:");
}

id objc_msgSend_setScrollDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollDirection:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchController:");
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResultsUpdater:");
}

id objc_msgSend_setSectionHeadersPinToVisibleBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionHeadersPinToVisibleBounds:");
}

id objc_msgSend_setSectionInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionInset:");
}

id objc_msgSend_setSelectLongPress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectLongPress:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelectedApps(void *a1, const char *a2, ...)
{
  return _[a1 setSelectedApps];
}

id objc_msgSend_setSelectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedApps:");
}

id objc_msgSend_setSelectedColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedColor:");
}

id objc_msgSend_setSelectedFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedFont:");
}

id objc_msgSend_setSelectedHelpTopicID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedHelpTopicID:");
}

id objc_msgSend_setSelectedIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndexPath:");
}

id objc_msgSend_setSelectedLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedLanguages:");
}

id objc_msgSend_setSelectedPhonemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPhonemes:");
}

id objc_msgSend_setSelectedPopoverIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPopoverIcon:");
}

id objc_msgSend_setSelectedPopoverLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedPopoverLocation:");
}

id objc_msgSend_setSelectedSegmentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSegmentIndex:");
}

id objc_msgSend_setSelectedToneIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedToneIdentifier:");
}

id objc_msgSend_setSelectedVibrationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedVibrationIdentifier:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSensitivitySpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSensitivitySpecifiers:");
}

id objc_msgSend_setSentenceColorHighlightItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentenceColorHighlightItems:");
}

id objc_msgSend_setSentenceHighlightItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentenceHighlightItems:");
}

id objc_msgSend_setSentenceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentenceStyle:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSetDialectPreferencesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetDialectPreferencesCallback:");
}

id objc_msgSend_setSetPerVoiceSettingsCallack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetPerVoiceSettingsCallack:");
}

id objc_msgSend_setSetSelectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetSelectedApps:");
}

id objc_msgSend_setSetUnselectedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetUnselectedApps:");
}

id objc_msgSend_setSetUpNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetUpNavigationController:");
}

id objc_msgSend_setSetter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetter:");
}

id objc_msgSend_setSetterBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetterBlock:");
}

id objc_msgSend_setSettingText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingText:");
}

id objc_msgSend_setSettingsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsController:");
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOffset:");
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOpacity:");
}

id objc_msgSend_setShadowPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowPath:");
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowRadius:");
}

id objc_msgSend_setShortcutIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShortcutIdentifier:");
}

id objc_msgSend_setShouldAllowClearingKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowClearingKeyChord:");
}

id objc_msgSend_setShouldAllowEndingEventCapture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowEndingEventCapture:");
}

id objc_msgSend_setShouldAllowTabAsModifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowTabAsModifier:");
}

id objc_msgSend_setShouldDelayBeforePresentingHUDView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDelayBeforePresentingHUDView:");
}

id objc_msgSend_setShouldFlashForAlertInSilentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldFlashForAlertInSilentMode:");
}

id objc_msgSend_setShouldFlashWhileUnlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldFlashWhileUnlocked:");
}

id objc_msgSend_setShouldIgnoreNextEnabledChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreNextEnabledChangedNotification:");
}

id objc_msgSend_setShouldIgnoreNextSettingsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreNextSettingsUpdate:");
}

id objc_msgSend_setShouldLimitDisplayRefreshRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldLimitDisplayRefreshRate:");
}

id objc_msgSend_setShouldNotifyUserEventOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldNotifyUserEventOccurred:");
}

id objc_msgSend_setShouldPresentWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPresentWithAnimation:");
}

id objc_msgSend_setShouldPromptForPasswordOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPromptForPasswordOnly:");
}

id objc_msgSend_setShouldQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldQueue:");
}

id objc_msgSend_setShouldSaveProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSaveProfile:");
}

id objc_msgSend_setShouldShowCustomActionsRequireASTAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldShowCustomActionsRequireASTAlert:");
}

id objc_msgSend_setShowDialectPicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowDialectPicker:");
}

id objc_msgSend_setShowNeural_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowNeural:");
}

id objc_msgSend_setShowSentenceItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSentenceItems:");
}

id objc_msgSend_setShowSpeakingRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSpeakingRate:");
}

id objc_msgSend_setShowSpeechController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSpeechController:");
}

id objc_msgSend_setShowWordColorItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowWordColorItems:");
}

id objc_msgSend_setShowingAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingAlert:");
}

id objc_msgSend_setShowingAutoHideSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingAutoHideSettings:");
}

id objc_msgSend_setShowingSetupController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowingSetupController:");
}

id objc_msgSend_setShowsCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsCancelButton:");
}

id objc_msgSend_setShowsDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsDefault:");
}

id objc_msgSend_setShowsDictationButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsDictationButton:");
}

id objc_msgSend_setShowsEditButtonInNavigationBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsEditButtonInNavigationBar:");
}

id objc_msgSend_setShowsExtendedRangeSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsExtendedRangeSwitch:");
}

id objc_msgSend_setShowsHiddenApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHiddenApps:");
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHorizontalScrollIndicator:");
}

id objc_msgSend_setShowsListeningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsListeningState:");
}

id objc_msgSend_setShowsNone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsNone:");
}

id objc_msgSend_setShowsPhonemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsPhonemes:");
}

id objc_msgSend_setShowsRTTNotifications_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsRTTNotifications:forContext:");
}

id objc_msgSend_setShowsReorderControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsReorderControl:");
}

id objc_msgSend_setShowsResetSliderButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsResetSliderButton:");
}

id objc_msgSend_setShowsSaveButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsSaveButton:");
}

id objc_msgSend_setShowsSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsSpinner:");
}

id objc_msgSend_setShowsUserGenerated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsUserGenerated:");
}

id objc_msgSend_setShowsVibrations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVibrations:");
}

id objc_msgSend_setSilentModeToggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSilentModeToggleEnabled:");
}

id objc_msgSend_setSiriResponseShouldAlwaysPrint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriResponseShouldAlwaysPrint:");
}

id objc_msgSend_setSiriSpeechRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriSpeechRate:");
}

id objc_msgSend_setSizeCategoryBlock(void *a1, const char *a2, ...)
{
  return _[a1 setSizeCategoryBlock];
}

id objc_msgSend_setSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSlider:");
}

id objc_msgSend_setSmartInvertEnabled_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartInvertEnabled:specifier:");
}

id objc_msgSend_setSoundActionData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundActionData:");
}

id objc_msgSend_setSoundDetectionKShotListeningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundDetectionKShotListeningState:");
}

id objc_msgSend_setSoundDetectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundDetectionState:");
}

id objc_msgSend_setSoundDetectorsGroupSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundDetectorsGroupSpecifier:");
}

id objc_msgSend_setSoundDetectorsSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundDetectorsSpecifier:");
}

id objc_msgSend_setSoundMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundMuted:");
}

id objc_msgSend_setSoundURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoundURL:");
}

id objc_msgSend_setSounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSounds:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceType:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpatialAudioEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpatialAudioEnabled:");
}

id objc_msgSend_setSpeakCorrectionsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakCorrectionsEnabled:");
}

id objc_msgSend_setSpeakEmojis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakEmojis:");
}

id objc_msgSend_setSpeakEmojis_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakEmojis:specifier:");
}

id objc_msgSend_setSpeakScreenSettingsItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakScreenSettingsItems:");
}

id objc_msgSend_setSpeakScreenSettingsItemsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakScreenSettingsItemsHidden:");
}

id objc_msgSend_setSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifier:");
}

id objc_msgSend_setSpecifierBeforeFilterOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifierBeforeFilterOptions:");
}

id objc_msgSend_setSpecifierBeforeSelectionTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifierBeforeSelectionTable:");
}

id objc_msgSend_setSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifiers:");
}

id objc_msgSend_setSpeechControllerDoubleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechControllerDoubleTapAction:");
}

id objc_msgSend_setSpeechControllerIdleOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechControllerIdleOpacity:");
}

id objc_msgSend_setSpeechControllerLongPressAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechControllerLongPressAction:");
}

id objc_msgSend_setSpeechManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechManager:");
}

id objc_msgSend_setSpeechModelController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechModelController:");
}

id objc_msgSend_setSpeechMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechMuted:");
}

id objc_msgSend_setSpeechRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRate:");
}

id objc_msgSend_setSpeechSourceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechSourceKey:");
}

id objc_msgSend_setSpeechVoiceIdentifier_forLanguage_sourceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechVoiceIdentifier:forLanguage:sourceKey:");
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpinner:");
}

id objc_msgSend_setSpokenContentShouldUseLanguageDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpokenContentShouldUseLanguageDetection:");
}

id objc_msgSend_setStartPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartPoint:");
}

id objc_msgSend_setStartupSoundEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartupSoundEnabled:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateManager:");
}

id objc_msgSend_setStatusCellGeneral_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusCellGeneral:specifier:");
}

id objc_msgSend_setStatusCellText_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusCellText:specifier:");
}

id objc_msgSend_setStepValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStepValue:");
}

id objc_msgSend_setStepperDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStepperDelegate:");
}

id objc_msgSend_setStickyKeysBeepEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStickyKeysBeepEnabled:");
}

id objc_msgSend_setStickyKeysEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStickyKeysEnabled:");
}

id objc_msgSend_setStickyKeysShiftToggleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStickyKeysShiftToggleEnabled:");
}

id objc_msgSend_setStoreState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreState:");
}

id objc_msgSend_setStoredSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoredSwitch:");
}

id objc_msgSend_setStretchHorizontal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStretchHorizontal:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setStroke(void *a1, const char *a2, ...)
{
  return _[a1 setStroke];
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeColor:");
}

id objc_msgSend_setStyleDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyleDisabled:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestions:");
}

id objc_msgSend_setSwitchAlertCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchAlertCoordinator:");
}

id objc_msgSend_setSwitchControlAutoTapTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlAutoTapTimeout:");
}

id objc_msgSend_setSwitchControlCameraPointPickerDwellActivationTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlCameraPointPickerDwellActivationTimeout:");
}

id objc_msgSend_setSwitchControlCameraPointPickerDwellMovementToleranceRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlCameraPointPickerDwellMovementToleranceRadius:");
}

id objc_msgSend_setSwitchControlCameraPointPickerMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlCameraPointPickerMode:");
}

id objc_msgSend_setSwitchControlCameraPointPickerMovementToleranceInJoystickMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlCameraPointPickerMovementToleranceInJoystickMode:");
}

id objc_msgSend_setSwitchControlCameraPointPickerSensitivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlCameraPointPickerSensitivity:");
}

id objc_msgSend_setSwitchControlDeviceMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlDeviceMenuItems:");
}

id objc_msgSend_setSwitchControlDeviceTopLevelMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlDeviceTopLevelMenuItems:");
}

id objc_msgSend_setSwitchControlDwellTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlDwellTime:");
}

id objc_msgSend_setSwitchControlFirstLaunchScanningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlFirstLaunchScanningMode:");
}

id objc_msgSend_setSwitchControlGesturesMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlGesturesMenuItems:");
}

id objc_msgSend_setSwitchControlGesturesTopLevelMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlGesturesTopLevelMenuItems:");
}

id objc_msgSend_setSwitchControlIgnoreInvalidSwitchConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlIgnoreInvalidSwitchConfiguration:");
}

id objc_msgSend_setSwitchControlLaunchRecipeUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlLaunchRecipeUUID:");
}

id objc_msgSend_setSwitchControlMediaControlsMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlMediaControlsMenuItems:");
}

id objc_msgSend_setSwitchControlMediaControlsTopLevelMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlMediaControlsTopLevelMenuItems:");
}

id objc_msgSend_setSwitchControlPointPickerSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlPointPickerSelectionStyle:");
}

id objc_msgSend_setSwitchControlRestartScanningAtCurrentKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlRestartScanningAtCurrentKey:");
}

id objc_msgSend_setSwitchControlScanAfterTapLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlScanAfterTapLocation:");
}

id objc_msgSend_setSwitchControlScanningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlScanningStyle:");
}

id objc_msgSend_setSwitchControlSettingsMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlSettingsMenuItems:");
}

id objc_msgSend_setSwitchControlSettingsTopLevelMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlSettingsTopLevelMenuItems:");
}

id objc_msgSend_setSwitchControlShouldAlwaysActivateKeyboardKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlShouldAlwaysActivateKeyboardKeys:");
}

id objc_msgSend_setSwitchControlShouldUseExtendedKeyboardPredictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlShouldUseExtendedKeyboardPredictions:");
}

id objc_msgSend_setSwitchControlShouldUseShortFirstPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlShouldUseShortFirstPage:");
}

id objc_msgSend_setSwitchControlTapBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlTapBehavior:");
}

id objc_msgSend_setSwitchControlTopLevelMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlTopLevelMenuItems:");
}

id objc_msgSend_setSwitchControlUseCameraForPointMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchControlUseCameraForPointMode:");
}

id objc_msgSend_setSwitchOriginalAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchOriginalAction:");
}

id objc_msgSend_setSwitchRegistrar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchRegistrar:");
}

id objc_msgSend_setSwitchUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwitchUUID:");
}

id objc_msgSend_setSymbolColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSymbolColors:");
}

id objc_msgSend_setSymbolView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSymbolView:");
}

id objc_msgSend_setSystemFontType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemFontType:");
}

id objc_msgSend_setTTYHardwareEnabled_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTTYHardwareEnabled:forContext:");
}

id objc_msgSend_setTTYShouldBeRealtime_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTTYShouldBeRealtime:forContext:");
}

id objc_msgSend_setTTYSoftwareEnabled_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTTYSoftwareEnabled:forContext:");
}

id objc_msgSend_setTabKeyChord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTabKeyChord:");
}

id objc_msgSend_setTableHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableHeaders:");
}

id objc_msgSend_setTableHeaders_specifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableHeaders:specifier:");
}

id objc_msgSend_setTableRowAndColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableRowAndColumn:");
}

id objc_msgSend_setTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableView:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetDetector:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextualContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextualContexts:");
}

id objc_msgSend_setTimeOfLastSpaceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOfLastSpaceKey:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTimeoutSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutSpecifier:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTip:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleText_infoText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleText:infoText:");
}

id objc_msgSend_setTitleView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleView:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setToleranceSpecifierGroupTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToleranceSpecifierGroupTitle:");
}

id objc_msgSend_setTonePickerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTonePickerViewController:");
}

id objc_msgSend_setToolbarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:animated:");
}

id objc_msgSend_setToolbarItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarItems:");
}

id objc_msgSend_setTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopic:");
}

id objc_msgSend_setTouchAccommodationsAllowsSwipeGesturesToBypass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsAllowsSwipeGesturesToBypass:");
}

id objc_msgSend_setTouchAccommodationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsEnabled:");
}

id objc_msgSend_setTouchAccommodationsHoldDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsHoldDuration:");
}

id objc_msgSend_setTouchAccommodationsHoldDurationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsHoldDurationEnabled:");
}

id objc_msgSend_setTouchAccommodationsIgnoreRepeatDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsIgnoreRepeatDuration:");
}

id objc_msgSend_setTouchAccommodationsIgnoreRepeatEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsIgnoreRepeatEnabled:");
}

id objc_msgSend_setTouchAccommodationsSwipeGestureMinimumDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsSwipeGestureMinimumDistance:");
}

id objc_msgSend_setTouchAccommodationsTapActivationMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsTapActivationMethod:");
}

id objc_msgSend_setTouchAccommodationsTapActivationTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsTapActivationTimeout:");
}

id objc_msgSend_setTouchAccommodationsTripleClickConfirmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchAccommodationsTripleClickConfirmed:");
}

id objc_msgSend_setTrackingModeGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackingModeGroup:");
}

id objc_msgSend_setTrackpadBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackpadBorderColor:");
}

id objc_msgSend_setTrackpadInnerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackpadInnerColor:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTripleClickOrderedOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTripleClickOrderedOptions:");
}

id objc_msgSend_setTypingStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypingStyle:");
}

id objc_msgSend_setUnselectedApps(void *a1, const char *a2, ...)
{
  return _[a1 setUnselectedApps];
}

id objc_msgSend_setUpNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 setUpNavigationController];
}

id objc_msgSend_setUsage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsage:");
}

id objc_msgSend_setUseAtypicalSpeechModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseAtypicalSpeechModel:");
}

id objc_msgSend_setUseDeviceSpeakerForTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseDeviceSpeakerForTTS:");
}

id objc_msgSend_setUserAcceptedValidationResolutionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAcceptedValidationResolutionBlock:");
}

id objc_msgSend_setUserCanceledCommandSelectionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserCanceledCommandSelectionBlock:");
}

id objc_msgSend_setUserCanceledGestureSelectionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserCanceledGestureSelectionBlock:");
}

id objc_msgSend_setUserCanceledKeyChordSelectionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserCanceledKeyChordSelectionBlock:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInitiated:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserRejectedValidationResolutionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserRejectedValidationResolutionBlock:");
}

id objc_msgSend_setUserSelectedCommandBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSelectedCommandBlock:");
}

id objc_msgSend_setUserSelectedGestureBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSelectedGestureBlock:");
}

id objc_msgSend_setUserSelectedKeyChordBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSelectedKeyChordBlock:");
}

id objc_msgSend_setUserSubstitution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSubstitution:");
}

id objc_msgSend_setUsesAuxiliarySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesAuxiliarySession:");
}

id objc_msgSend_setUsesPrivateAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesPrivateAudioSession:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setValidationTargetName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationTargetName:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:animated:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValueInSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueInSettings:");
}

id objc_msgSend_setValueSelectedBlock(void *a1, const char *a2, ...)
{
  return _[a1 setValueSelectedBlock];
}

id objc_msgSend_setVerticalStackView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerticalStackView:");
}

id objc_msgSend_setVibrationPickerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVibrationPickerViewController:");
}

id objc_msgSend_setVibrationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVibrationTimer:");
}

id objc_msgSend_setVideoGravity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoGravity:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:");
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:animated:");
}

id objc_msgSend_setViewControllers_direction_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:direction:animated:completion:");
}

id objc_msgSend_setVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisible:");
}

id objc_msgSend_setVisualizationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisualizationView:");
}

id objc_msgSend_setVoBrailleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoBrailleDevice:");
}

id objc_msgSend_setVoCommandContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoCommandContext:");
}

id objc_msgSend_setVoiceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceId:");
}

id objc_msgSend_setVoiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceIdentifier:");
}

id objc_msgSend_setVoiceIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceIds:");
}

id objc_msgSend_setVoiceOverActionFeedbackFirstInListOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverActionFeedbackFirstInListOnly:");
}

id objc_msgSend_setVoiceOverActionsFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverActionsFeedback:");
}

id objc_msgSend_setVoiceOverActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverActivities:");
}

id objc_msgSend_setVoiceOverAdjustSoundVolumeIndependently_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverAdjustSoundVolumeIndependently:");
}

id objc_msgSend_setVoiceOverAlwaysTurnOnBluetooth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverAlwaysTurnOnBluetooth:");
}

id objc_msgSend_setVoiceOverAlwaysUseNemethCodeForMathEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverAlwaysUseNemethCodeForMathEnabled:");
}

id objc_msgSend_setVoiceOverAudioDuckingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverAudioDuckingEnabled:");
}

id objc_msgSend_setVoiceOverAudioFollowsHDMIAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverAudioFollowsHDMIAudio:");
}

id objc_msgSend_setVoiceOverBrailleAutoAdvanceDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleAutoAdvanceDuration:");
}

id objc_msgSend_setVoiceOverBrailleFormattingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleFormattingEnabled:");
}

id objc_msgSend_setVoiceOverBrailleGesturesTypingFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleGesturesTypingFeedback:");
}

id objc_msgSend_setVoiceOverBrailleGradeTwoAutoTranslateEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleGradeTwoAutoTranslateEnabled:");
}

id objc_msgSend_setVoiceOverBrailleKeyDebounceTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleKeyDebounceTimeout:");
}

id objc_msgSend_setVoiceOverBrailleLanguageRotorItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleLanguageRotorItems:");
}

id objc_msgSend_setVoiceOverBrailleTableIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleTableIdentifier:");
}

id objc_msgSend_setVoiceOverBrailleWordWrapEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverBrailleWordWrapEnabled:");
}

id objc_msgSend_setVoiceOverCapitalLetterFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverCapitalLetterFeedback:");
}

id objc_msgSend_setVoiceOverContainerOutputFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverContainerOutputFeedback:");
}

id objc_msgSend_setVoiceOverContinuousPathKeyboardStartTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverContinuousPathKeyboardStartTimeout:");
}

id objc_msgSend_setVoiceOverDeletionFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDeletionFeedback:");
}

id objc_msgSend_setVoiceOverDescribedMedia_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDescribedMedia:");
}

id objc_msgSend_setVoiceOverDetectionModeItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDetectionModeItems:");
}

id objc_msgSend_setVoiceOverDirectTouchEnabledApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDirectTouchEnabledApps:");
}

id objc_msgSend_setVoiceOverDiscoveredSensitiveContentFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDiscoveredSensitiveContentFeedback:");
}

id objc_msgSend_setVoiceOverDoubleTapInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverDoubleTapInterval:");
}

id objc_msgSend_setVoiceOverEditAppsActionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverEditAppsActionEnabled:");
}

id objc_msgSend_setVoiceOverEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverEnabled:");
}

id objc_msgSend_setVoiceOverFlashlightNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverFlashlightNotificationsEnabled:");
}

id objc_msgSend_setVoiceOverHapticIntensity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverHapticIntensity:");
}

id objc_msgSend_setVoiceOverHapticsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverHapticsEnabled:");
}

id objc_msgSend_setVoiceOverHardwareTypingFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverHardwareTypingFeedback:");
}

id objc_msgSend_setVoiceOverHelpMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverHelpMode:");
}

id objc_msgSend_setVoiceOverHintsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverHintsEnabled:");
}

id objc_msgSend_setVoiceOverIgnoreTrackpad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverIgnoreTrackpad:");
}

id objc_msgSend_setVoiceOverImageCaptionsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverImageCaptionsEnabled:");
}

id objc_msgSend_setVoiceOverInlineTextCompletionAppearanceFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverInlineTextCompletionAppearanceFeedback:");
}

id objc_msgSend_setVoiceOverInlineTextCompletionInsertionFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverInlineTextCompletionInsertionFeedback:");
}

id objc_msgSend_setVoiceOverKeyboardModifierChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverKeyboardModifierChoice:");
}

id objc_msgSend_setVoiceOverLargeCursorEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverLargeCursorEnabled:");
}

id objc_msgSend_setVoiceOverLinkFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverLinkFeedback:");
}

id objc_msgSend_setVoiceOverMediaDuckingAmount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverMediaDuckingAmount:");
}

id objc_msgSend_setVoiceOverMediaDuckingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverMediaDuckingMode:");
}

id objc_msgSend_setVoiceOverMoreContentOutputFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverMoreContentOutputFeedback:");
}

id objc_msgSend_setVoiceOverNavigateImagesOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverNavigateImagesOption:");
}

id objc_msgSend_setVoiceOverNavigationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverNavigationStyle:");
}

id objc_msgSend_setVoiceOverNeuralElementFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverNeuralElementFeedback:");
}

id objc_msgSend_setVoiceOverNumberFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverNumberFeedback:");
}

id objc_msgSend_setVoiceOverPhoneticsFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverPhoneticsFeedback:");
}

id objc_msgSend_setVoiceOverPitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverPitch:");
}

id objc_msgSend_setVoiceOverPunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverPunctuationGroup:");
}

id objc_msgSend_setVoiceOverQuickNavAnnouncementFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverQuickNavAnnouncementFeedback:");
}

id objc_msgSend_setVoiceOverRotorItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverRotorItems:");
}

id objc_msgSend_setVoiceOverRotorSummaryFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverRotorSummaryFeedback:");
}

id objc_msgSend_setVoiceOverRotorUpdatesWithElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverRotorUpdatesWithElement:");
}

id objc_msgSend_setVoiceOverSceneDescriptionsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSceneDescriptionsEnabled:");
}

id objc_msgSend_setVoiceOverShouldSpeakDiscoveredText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverShouldSpeakDiscoveredText:");
}

id objc_msgSend_setVoiceOverShowSoftwareKeyboardWithBraille_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverShowSoftwareKeyboardWithBraille:");
}

id objc_msgSend_setVoiceOverSoftwareTypingFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSoftwareTypingFeedback:");
}

id objc_msgSend_setVoiceOverSoundCurtain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSoundCurtain:");
}

id objc_msgSend_setVoiceOverSoundEffectsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSoundEffectsEnabled:");
}

id objc_msgSend_setVoiceOverSoundVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSoundVolume:");
}

id objc_msgSend_setVoiceOverSpeakActionConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakActionConfirmation:");
}

id objc_msgSend_setVoiceOverSpeakNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakNotificationsEnabled:");
}

id objc_msgSend_setVoiceOverSpeakTableColumnRowInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakTableColumnRowInformation:");
}

id objc_msgSend_setVoiceOverSpeakTableHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakTableHeaders:");
}

id objc_msgSend_setVoiceOverSpeakingRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakingRate:");
}

id objc_msgSend_setVoiceOverSpeakingRateInRotorEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeakingRateInRotorEnabled:");
}

id objc_msgSend_setVoiceOverSpeaksOverTelephoneCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverSpeaksOverTelephoneCalls:");
}

id objc_msgSend_setVoiceOverTouchBrailleDisplayInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleDisplayInputMode:");
}

id objc_msgSend_setVoiceOverTouchBrailleDisplayInputTableIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleDisplayInputTableIdentifier:");
}

id objc_msgSend_setVoiceOverTouchBrailleDisplayOutputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleDisplayOutputMode:");
}

id objc_msgSend_setVoiceOverTouchBrailleDisplayOutputTableIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleDisplayOutputTableIdentifier:");
}

id objc_msgSend_setVoiceOverTouchBrailleDisplaySyncInputOutputTables_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleDisplaySyncInputOutputTables:");
}

id objc_msgSend_setVoiceOverTouchBrailleGestureControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGestureControl:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesActivationGestureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesActivationGestureEnabled:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesAutoActivateOnTextFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesAutoActivateOnTextFields:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesDisplaysEnteredText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesDisplaysEnteredText:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesInputMode:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesInputTableIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesInputTableIdentifier:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesSoundOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesSoundOption:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesUsesHapticFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesUsesHapticFeedback:");
}

id objc_msgSend_setVoiceOverTouchBrailleGesturesUsesTypingSoundFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleGesturesUsesTypingSoundFeedback:");
}

id objc_msgSend_setVoiceOverTouchBraillePanningAutoTurnsReadingContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBraillePanningAutoTurnsReadingContent:");
}

id objc_msgSend_setVoiceOverTouchBrailleShouldReverseDots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleShouldReverseDots:");
}

id objc_msgSend_setVoiceOverTouchBrailleShowGeneralStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleShowGeneralStatus:");
}

id objc_msgSend_setVoiceOverTouchBrailleShowTextStyleStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchBrailleShowTextStyleStatus:");
}

id objc_msgSend_setVoiceOverTouchPerkinsChordKeyboardInputEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverTouchPerkinsChordKeyboardInputEnabled:");
}

id objc_msgSend_setVoiceOverVerbosityEmojiFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverVerbosityEmojiFeedback:");
}

id objc_msgSend_setVoiceOverVerbosityEmojiSuffixEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOverVerbosityEmojiSuffixEnabled:");
}

id objc_msgSend_setVoiceTriggerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerEnabled:");
}

id objc_msgSend_setVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:");
}

id objc_msgSend_setVolumeButtonsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeButtonsEnabled:");
}

id objc_msgSend_setVosOutputEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVosOutputEvent:");
}

id objc_msgSend_setWhatsNewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWhatsNewController:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWordColorHighlightItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWordColorHighlightItems:");
}

id objc_msgSend_setWordFeedbackEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWordFeedbackEnabled:");
}

id objc_msgSend_setXMagnitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXMagnitude:");
}

id objc_msgSend_setYMagnitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYMagnitude:");
}

id objc_msgSend_setZoomAdjustZoomLevelKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomAdjustZoomLevelKbShortcutEnabled:");
}

id objc_msgSend_setZoomAlwaysUseWindowedZoomForTyping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomAlwaysUseWindowedZoomForTyping:");
}

id objc_msgSend_setZoomControllerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomControllerColor:");
}

id objc_msgSend_setZoomCurrentLensEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomCurrentLensEffect:");
}

id objc_msgSend_setZoomEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomEnabled:");
}

id objc_msgSend_setZoomEnabled_initialFocusRect_contextId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomEnabled:initialFocusRect:contextId:");
}

id objc_msgSend_setZoomIdleSlugOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomIdleSlugOpacity:");
}

id objc_msgSend_setZoomInStandby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomInStandby:");
}

id objc_msgSend_setZoomInitialFocusRect_fromContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomInitialFocusRect:fromContext:");
}

id objc_msgSend_setZoomKeyboardShortcutsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomKeyboardShortcutsEnabled:");
}

id objc_msgSend_setZoomPanZoomKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomPanZoomKbShortcutEnabled:");
}

id objc_msgSend_setZoomPreferredCurrentDockPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomPreferredCurrentDockPosition:");
}

id objc_msgSend_setZoomPreferredCurrentLensMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomPreferredCurrentLensMode:");
}

id objc_msgSend_setZoomResizeZoomWindowKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomResizeZoomWindowKbShortcutEnabled:");
}

id objc_msgSend_setZoomScrollWheelKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomScrollWheelKbShortcutEnabled:");
}

id objc_msgSend_setZoomShouldFollowFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomShouldFollowFocus:");
}

id objc_msgSend_setZoomShouldShowSlug_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomShouldShowSlug:");
}

id objc_msgSend_setZoomShowWhileMirroring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomShowWhileMirroring:");
}

id objc_msgSend_setZoomSlugDoubleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomSlugDoubleTapAction:");
}

id objc_msgSend_setZoomSlugSingleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomSlugSingleTapAction:");
}

id objc_msgSend_setZoomSlugTapAndSlideToAdjustZoomLevelEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomSlugTapAndSlideToAdjustZoomLevelEnabled:");
}

id objc_msgSend_setZoomSlugTripleTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomSlugTripleTapAction:");
}

id objc_msgSend_setZoomSwitchZoomModeKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomSwitchZoomModeKbShortcutEnabled:");
}

id objc_msgSend_setZoomTempToggleZoomKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomTempToggleZoomKbShortcutEnabled:");
}

id objc_msgSend_setZoomToggleZoomKbShortcutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomToggleZoomKbShortcutEnabled:");
}

id objc_msgSend_setZoomTrackpadGestureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomTrackpadGestureEnabled:");
}

id objc_msgSend_set_dwellMovementToleranceHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_dwellMovementToleranceHelper:");
}

id objc_msgSend_set_suggestedColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_suggestedColors:");
}

id objc_msgSend_setter(void *a1, const char *a2, ...)
{
  return _[a1 setter];
}

id objc_msgSend_setterBlock(void *a1, const char *a2, ...)
{
  return _[a1 setterBlock];
}

id objc_msgSend_settingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 settingEnabled];
}

id objc_msgSend_settingText(void *a1, const char *a2, ...)
{
  return _[a1 settingText];
}

id objc_msgSend_settingsController(void *a1, const char *a2, ...)
{
  return _[a1 settingsController];
}

id objc_msgSend_settingsGetter(void *a1, const char *a2, ...)
{
  return _[a1 settingsGetter];
}

id objc_msgSend_settingsIconCache(void *a1, const char *a2, ...)
{
  return _[a1 settingsIconCache];
}

id objc_msgSend_settingsKeys(void *a1, const char *a2, ...)
{
  return _[a1 settingsKeys];
}

id objc_msgSend_settingsSetter(void *a1, const char *a2, ...)
{
  return _[a1 settingsSetter];
}

id objc_msgSend_setupAssetReader(void *a1, const char *a2, ...)
{
  return _[a1 setupAssetReader];
}

id objc_msgSend_setupLongTitleSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupLongTitleSpecifiers:");
}

id objc_msgSend_setupPreview(void *a1, const char *a2, ...)
{
  return _[a1 setupPreview];
}

id objc_msgSend_setupSiriSpeechRateSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupSiriSpeechRateSlider:");
}

id objc_msgSend_shakePasscode(void *a1, const char *a2, ...)
{
  return _[a1 shakePasscode];
}

id objc_msgSend_shareDataCallback(void *a1, const char *a2, ...)
{
  return _[a1 shareDataCallback];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedCommandCenter(void *a1, const char *a2, ...)
{
  return _[a1 sharedCommandCenter];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedDatabase(void *a1, const char *a2, ...)
{
  return _[a1 sharedDatabase];
}

id objc_msgSend_sharedGuard(void *a1, const char *a2, ...)
{
  return _[a1 sharedGuard];
}

id objc_msgSend_sharedInputModeController(void *a1, const char *a2, ...)
{
  return _[a1 sharedInputModeController];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedPairingAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedPairingAgent];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharedStyle(void *a1, const char *a2, ...)
{
  return _[a1 sharedStyle];
}

id objc_msgSend_sharedToneManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedToneManager];
}

id objc_msgSend_sharedUtilities(void *a1, const char *a2, ...)
{
  return _[a1 sharedUtilities];
}

id objc_msgSend_sharedUtilityProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedUtilityProvider];
}

id objc_msgSend_sharedVibrationManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedVibrationManager];
}

id objc_msgSend_shortcutBindingsForCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortcutBindingsForCommand:withResolver:");
}

id objc_msgSend_shortcutForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortcutForIdentifier:");
}

id objc_msgSend_shortcutIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 shortcutIdentifier];
}

id objc_msgSend_shortcutName(void *a1, const char *a2, ...)
{
  return _[a1 shortcutName];
}

id objc_msgSend_shortcuts(void *a1, const char *a2, ...)
{
  return _[a1 shortcuts];
}

id objc_msgSend_shouldAddBTLEDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAddBTLEDevice:");
}

id objc_msgSend_shouldAddClassicDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAddClassicDevice:");
}

id objc_msgSend_shouldAllowClearingKeyChord(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowClearingKeyChord];
}

id objc_msgSend_shouldAllowEndingEventCapture(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowEndingEventCapture];
}

id objc_msgSend_shouldAllowSelection(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowSelection];
}

id objc_msgSend_shouldAllowTabAsModifier(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowTabAsModifier];
}

id objc_msgSend_shouldBeShownInSettingsReturningAvailabilityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBeShownInSettingsReturningAvailabilityStatus:");
}

id objc_msgSend_shouldDelayBeforePresentingHUDView(void *a1, const char *a2, ...)
{
  return _[a1 shouldDelayBeforePresentingHUDView];
}

id objc_msgSend_shouldFlashForAlertInSilentMode(void *a1, const char *a2, ...)
{
  return _[a1 shouldFlashForAlertInSilentMode];
}

id objc_msgSend_shouldFlashWhileUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 shouldFlashWhileUnlocked];
}

id objc_msgSend_shouldIgnoreNextEnabledChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 shouldIgnoreNextEnabledChangedNotification];
}

id objc_msgSend_shouldIgnoreNextSettingsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 shouldIgnoreNextSettingsUpdate];
}

id objc_msgSend_shouldLimitDisplayRefreshRate(void *a1, const char *a2, ...)
{
  return _[a1 shouldLimitDisplayRefreshRate];
}

id objc_msgSend_shouldPresentWithAnimation(void *a1, const char *a2, ...)
{
  return _[a1 shouldPresentWithAnimation];
}

id objc_msgSend_shouldRecordRealTimeGesture(void *a1, const char *a2, ...)
{
  return _[a1 shouldRecordRealTimeGesture];
}

id objc_msgSend_shouldShowCustomActionsRequireASTAlert(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowCustomActionsRequireASTAlert];
}

id objc_msgSend_shouldShowFooterText(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowFooterText];
}

id objc_msgSend_shouldShowSentenceItems(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowSentenceItems];
}

id objc_msgSend_shouldShowWordColorItems(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowWordColorItems];
}

id objc_msgSend_show(void *a1, const char *a2, ...)
{
  return _[a1 show];
}

id objc_msgSend_showAlert_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAlert:withHandler:");
}

id objc_msgSend_showAlertWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAlertWithResult:");
}

id objc_msgSend_showBluetoothPowerAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBluetoothPowerAlert:");
}

id objc_msgSend_showConfirmationViewForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showConfirmationViewForSpecifier:");
}

id objc_msgSend_showController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showController:");
}

id objc_msgSend_showController_animate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showController:animate:");
}

id objc_msgSend_showController_withSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showController:withSpecifier:");
}

id objc_msgSend_showCorrectWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCorrectWithString:");
}

id objc_msgSend_showHiddenAppsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHiddenAppsWithCompletion:");
}

id objc_msgSend_showKeyboardWithoutSuppressionPolicy(void *a1, const char *a2, ...)
{
  return _[a1 showKeyboardWithoutSuppressionPolicy];
}

id objc_msgSend_showPINSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPINSheet:");
}

id objc_msgSend_showPicker_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPicker:animated:");
}

id objc_msgSend_showSpeechController(void *a1, const char *a2, ...)
{
  return _[a1 showSpeechController];
}

id objc_msgSend_showSpeechController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSpeechController:");
}

id objc_msgSend_showSpinner(void *a1, const char *a2, ...)
{
  return _[a1 showSpinner];
}

id objc_msgSend_showSwichAlreadyInUseAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSwichAlreadyInUseAlert:");
}

id objc_msgSend_showSwitchNamingAlertWithSwitch_message_successHandler_cancelHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSwitchNamingAlertWithSwitch:message:successHandler:cancelHandler:");
}

id objc_msgSend_showWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showWithViewController:");
}

id objc_msgSend_showWithWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showWithWindow:");
}

id objc_msgSend_showingAutoHideSettings(void *a1, const char *a2, ...)
{
  return _[a1 showingAutoHideSettings];
}

id objc_msgSend_showsRTTNotificationsForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsRTTNotificationsForContext:");
}

id objc_msgSend_showsSpinner(void *a1, const char *a2, ...)
{
  return _[a1 showsSpinner];
}

id objc_msgSend_silentModeToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 silentModeToggleEnabled];
}

id objc_msgSend_siriResponseShouldAlwaysPrint(void *a1, const char *a2, ...)
{
  return _[a1 siriResponseShouldAlwaysPrint];
}

id objc_msgSend_siriSpeechRate(void *a1, const char *a2, ...)
{
  return _[a1 siriSpeechRate];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_sizeWithFont_forWidth_lineBreakMode_letterSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithFont:forWidth:lineBreakMode:letterSpacing:");
}

id objc_msgSend_slider(void *a1, const char *a2, ...)
{
  return _[a1 slider];
}

id objc_msgSend_smartInvertEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smartInvertEnabled:");
}

id objc_msgSend_smoothingBufferSizeForEyeTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smoothingBufferSizeForEyeTracker:");
}

id objc_msgSend_softwareTTYAndHardwareTTYSpecificSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 softwareTTYAndHardwareTTYSpecificSpecifiers];
}

id objc_msgSend_softwareTTYIsSupportedForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "softwareTTYIsSupportedForContext:");
}

id objc_msgSend_softwareTTYSettingsSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 softwareTTYSettingsSpecifiers];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingSelector:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_soundActionsAssetDidUpdate(void *a1, const char *a2, ...)
{
  return _[a1 soundActionsAssetDidUpdate];
}

id objc_msgSend_soundActionsDownloadManager(void *a1, const char *a2, ...)
{
  return _[a1 soundActionsDownloadManager];
}

id objc_msgSend_soundActionslocalURL(void *a1, const char *a2, ...)
{
  return _[a1 soundActionslocalURL];
}

id objc_msgSend_soundAlertTopicForSoundDetectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "soundAlertTopicForSoundDetectionType:");
}

id objc_msgSend_soundAssetURLForOutputEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "soundAssetURLForOutputEvent:");
}

id objc_msgSend_soundDetectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 soundDetectionEnabled];
}

id objc_msgSend_soundDetectionKShotListeningState(void *a1, const char *a2, ...)
{
  return _[a1 soundDetectionKShotListeningState];
}

id objc_msgSend_soundDetectionState(void *a1, const char *a2, ...)
{
  return _[a1 soundDetectionState];
}

id objc_msgSend_soundDetectorsGroupSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 soundDetectorsGroupSpecifier];
}

id objc_msgSend_soundDetectorsSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 soundDetectorsSpecifier];
}

id objc_msgSend_soundEffectsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "soundEffectsEnabled:");
}

id objc_msgSend_soundMuted(void *a1, const char *a2, ...)
{
  return _[a1 soundMuted];
}

id objc_msgSend_soundURL(void *a1, const char *a2, ...)
{
  return _[a1 soundURL];
}

id objc_msgSend_sounds(void *a1, const char *a2, ...)
{
  return _[a1 sounds];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_spatialAudioEnabled(void *a1, const char *a2, ...)
{
  return _[a1 spatialAudioEnabled];
}

id objc_msgSend_speakCorrectionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 speakCorrectionsEnabled];
}

id objc_msgSend_speakEmojis(void *a1, const char *a2, ...)
{
  return _[a1 speakEmojis];
}

id objc_msgSend_speakEmojis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakEmojis:");
}

id objc_msgSend_speakPhonemes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakPhonemes:");
}

id objc_msgSend_speakScreenSettingsItems(void *a1, const char *a2, ...)
{
  return _[a1 speakScreenSettingsItems];
}

id objc_msgSend_speakStatusWithLanguage_rate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakStatusWithLanguage:rate:");
}

id objc_msgSend_speakWithSpeechRequest_didFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakWithSpeechRequest:didFinish:");
}

id objc_msgSend_specificLanguageID(void *a1, const char *a2, ...)
{
  return _[a1 specificLanguageID];
}

id objc_msgSend_specifier(void *a1, const char *a2, ...)
{
  return _[a1 specifier];
}

id objc_msgSend_specifierAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierAtIndex:");
}

id objc_msgSend_specifierAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierAtIndexPath:");
}

id objc_msgSend_specifierBeforeFilterOptions(void *a1, const char *a2, ...)
{
  return _[a1 specifierBeforeFilterOptions];
}

id objc_msgSend_specifierBeforeSelectionTable(void *a1, const char *a2, ...)
{
  return _[a1 specifierBeforeSelectionTable];
}

id objc_msgSend_specifierForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForDevice:");
}

id objc_msgSend_specifierForID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForID:");
}

id objc_msgSend_specifierForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForIndexPath:");
}

id objc_msgSend_specifierForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForKey:");
}

id objc_msgSend_specifierForKey_withSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierForKey:withSpecifiers:");
}

id objc_msgSend_specifierImmediatelyPrecedingDevices(void *a1, const char *a2, ...)
{
  return _[a1 specifierImmediatelyPrecedingDevices];
}

id objc_msgSend_specifierTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierTitle:");
}

id objc_msgSend_specifierWithSensitivityNames_minimumValue_maximumValue_target_set_get_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifierWithSensitivityNames:minimumValue:maximumValue:target:set:get:");
}

id objc_msgSend_specifiers(void *a1, const char *a2, ...)
{
  return _[a1 specifiers];
}

id objc_msgSend_specifiersByRemovingDetailItemsFromOriginalSpecifiers_ifHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifiersByRemovingDetailItemsFromOriginalSpecifiers:ifHidden:");
}

id objc_msgSend_specifiersForIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifiersForIDs:");
}

id objc_msgSend_specifiersForLanguagesAndAccents(void *a1, const char *a2, ...)
{
  return _[a1 specifiersForLanguagesAndAccents];
}

id objc_msgSend_specifiersForPolicyOptions_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifiersForPolicyOptions:force:");
}

id objc_msgSend_specifiersFromFile(void *a1, const char *a2, ...)
{
  return _[a1 specifiersFromFile];
}

id objc_msgSend_specifiersInGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifiersInGroup:");
}

id objc_msgSend_speechControllerDoubleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 speechControllerDoubleTapAction];
}

id objc_msgSend_speechControllerIdleOpacity(void *a1, const char *a2, ...)
{
  return _[a1 speechControllerIdleOpacity];
}

id objc_msgSend_speechControllerLongPressAction(void *a1, const char *a2, ...)
{
  return _[a1 speechControllerLongPressAction];
}

id objc_msgSend_speechManager(void *a1, const char *a2, ...)
{
  return _[a1 speechManager];
}

id objc_msgSend_speechModelController(void *a1, const char *a2, ...)
{
  return _[a1 speechModelController];
}

id objc_msgSend_speechMuted(void *a1, const char *a2, ...)
{
  return _[a1 speechMuted];
}

id objc_msgSend_speechRate(void *a1, const char *a2, ...)
{
  return _[a1 speechRate];
}

id objc_msgSend_speechVoiceIdentifierForLanguage_sourceKey_exists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechVoiceIdentifierForLanguage:sourceKey:exists:");
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _[a1 spinner];
}

id objc_msgSend_spokenContentDefaultFallbackLanguage(void *a1, const char *a2, ...)
{
  return _[a1 spokenContentDefaultFallbackLanguage];
}

id objc_msgSend_spokenContentShouldUseLanguageDetection(void *a1, const char *a2, ...)
{
  return _[a1 spokenContentShouldUseLanguageDetection];
}

id objc_msgSend_standardBundleIdentifierForClarityBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardBundleIdentifierForClarityBundleIdentifier:");
}

id objc_msgSend_standardCommandIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 standardCommandIdentifier];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 startAccessingSecurityScopedResource];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startListening(void *a1, const char *a2, ...)
{
  return _[a1 startListening];
}

id objc_msgSend_startListeningInPracticeSession(void *a1, const char *a2, ...)
{
  return _[a1 startListeningInPracticeSession];
}

id objc_msgSend_startListeningToTrainDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startListeningToTrainDetector:");
}

id objc_msgSend_startMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 startMonitoring];
}

id objc_msgSend_startPronunciationSession_resultCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPronunciationSession:resultCallback:");
}

id objc_msgSend_startReading(void *a1, const char *a2, ...)
{
  return _[a1 startReading];
}

id objc_msgSend_startupSoundEnabled(void *a1, const char *a2, ...)
{
  return _[a1 startupSoundEnabled];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateDidUpdate:");
}

id objc_msgSend_stateManager(void *a1, const char *a2, ...)
{
  return _[a1 stateManager];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _[a1 statusBarFrame];
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _[a1 statusBarManager];
}

id objc_msgSend_statusCellGeneral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusCellGeneral:");
}

id objc_msgSend_statusCellText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusCellText:");
}

id objc_msgSend_stepper(void *a1, const char *a2, ...)
{
  return _[a1 stepper];
}

id objc_msgSend_stepperCellCountChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepperCellCountChanged:");
}

id objc_msgSend_stepperDelegate(void *a1, const char *a2, ...)
{
  return _[a1 stepperDelegate];
}

id objc_msgSend_stickyKeysBeepEnabled(void *a1, const char *a2, ...)
{
  return _[a1 stickyKeysBeepEnabled];
}

id objc_msgSend_stickyKeysEnabled(void *a1, const char *a2, ...)
{
  return _[a1 stickyKeysEnabled];
}

id objc_msgSend_stickyKeysShiftToggleEnabled(void *a1, const char *a2, ...)
{
  return _[a1 stickyKeysShiftToggleEnabled];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 stopAccessingSecurityScopedResource];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_stopBackgroundAnimation(void *a1, const char *a2, ...)
{
  return _[a1 stopBackgroundAnimation];
}

id objc_msgSend_stopDownloadOfDetectors(void *a1, const char *a2, ...)
{
  return _[a1 stopDownloadOfDetectors];
}

id objc_msgSend_stopListening(void *a1, const char *a2, ...)
{
  return _[a1 stopListening];
}

id objc_msgSend_stopListeningAndTrainIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopListeningAndTrainIfPossible:");
}

id objc_msgSend_stopMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 stopMonitoring];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_stopPronunciationSession(void *a1, const char *a2, ...)
{
  return _[a1 stopPronunciationSession];
}

id objc_msgSend_stopRequestingMediaData(void *a1, const char *a2, ...)
{
  return _[a1 stopRequestingMediaData];
}

id objc_msgSend_stopScan(void *a1, const char *a2, ...)
{
  return _[a1 stopScan];
}

id objc_msgSend_stopSpeaking(void *a1, const char *a2, ...)
{
  return _[a1 stopSpeaking];
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return _[a1 store];
}

id objc_msgSend_storeState(void *a1, const char *a2, ...)
{
  return _[a1 storeState];
}

id objc_msgSend_storedSwitch(void *a1, const char *a2, ...)
{
  return _[a1 storedSwitch];
}

id objc_msgSend_stretchHorizontal(void *a1, const char *a2, ...)
{
  return _[a1 stretchHorizontal];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingCharactersInSet_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInSet:withString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringForSearchRotorItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForSearchRotorItem:");
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromByteCount:countStyle:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringValueForNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValueForNumber:");
}

id objc_msgSend_stringWithCharacters_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCharacters:length:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _[a1 stroke];
}

id objc_msgSend_strokeColorOptions(void *a1, const char *a2, ...)
{
  return _[a1 strokeColorOptions];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _[a1 style];
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _[a1 sublayers];
}

id objc_msgSend_subscriptionContexts(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionContexts];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_suggestions(void *a1, const char *a2, ...)
{
  return _[a1 suggestions];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedExpressionSensitivitiesAscending(void *a1, const char *a2, ...)
{
  return _[a1 supportedExpressionSensitivitiesAscending];
}

id objc_msgSend_supportedExpressions(void *a1, const char *a2, ...)
{
  return _[a1 supportedExpressions];
}

id objc_msgSend_supportedIPAPhonemeLanguages(void *a1, const char *a2, ...)
{
  return _[a1 supportedIPAPhonemeLanguages];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_supportedLanguageLocales(void *a1, const char *a2, ...)
{
  return _[a1 supportedLanguageLocales];
}

id objc_msgSend_supportedSoundDetectionTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedSoundDetectionTypes];
}

id objc_msgSend_supportsAccessibilityDisplayFilters(void *a1, const char *a2, ...)
{
  return _[a1 supportsAccessibilityDisplayFilters];
}

id objc_msgSend_supportsAdvancedDisplayFilters(void *a1, const char *a2, ...)
{
  return _[a1 supportsAdvancedDisplayFilters];
}

id objc_msgSend_supportsHaptic(void *a1, const char *a2, ...)
{
  return _[a1 supportsHaptic];
}

id objc_msgSend_supportsIconType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsIconType:");
}

id objc_msgSend_supportsLongPress(void *a1, const char *a2, ...)
{
  return _[a1 supportsLongPress];
}

id objc_msgSend_supportsPronunciationSessions(void *a1, const char *a2, ...)
{
  return _[a1 supportsPronunciationSessions];
}

id objc_msgSend_supportsSoundEffect(void *a1, const char *a2, ...)
{
  return _[a1 supportsSoundEffect];
}

id objc_msgSend_supportsTranslationMode8Dot(void *a1, const char *a2, ...)
{
  return _[a1 supportsTranslationMode8Dot];
}

id objc_msgSend_supportsTranslationModeContracted(void *a1, const char *a2, ...)
{
  return _[a1 supportsTranslationModeContracted];
}

id objc_msgSend_swatchHeightConstraints(void *a1, const char *a2, ...)
{
  return _[a1 swatchHeightConstraints];
}

id objc_msgSend_swatchWidthConstraints(void *a1, const char *a2, ...)
{
  return _[a1 swatchWidthConstraints];
}

id objc_msgSend_switchAlertCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 switchAlertCoordinator];
}

id objc_msgSend_switchControlAutoTapTimeout(void *a1, const char *a2, ...)
{
  return _[a1 switchControlAutoTapTimeout];
}

id objc_msgSend_switchControlCameraPointPickerDwellActivationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 switchControlCameraPointPickerDwellActivationTimeout];
}

id objc_msgSend_switchControlCameraPointPickerDwellMovementToleranceRadius(void *a1, const char *a2, ...)
{
  return _[a1 switchControlCameraPointPickerDwellMovementToleranceRadius];
}

id objc_msgSend_switchControlCameraPointPickerMode(void *a1, const char *a2, ...)
{
  return _[a1 switchControlCameraPointPickerMode];
}

id objc_msgSend_switchControlCameraPointPickerMovementToleranceInJoystickMode(void *a1, const char *a2, ...)
{
  return _[a1 switchControlCameraPointPickerMovementToleranceInJoystickMode];
}

id objc_msgSend_switchControlCameraPointPickerSensitivity(void *a1, const char *a2, ...)
{
  return _[a1 switchControlCameraPointPickerSensitivity];
}

id objc_msgSend_switchControlDeviceMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlDeviceMenuItems];
}

id objc_msgSend_switchControlDeviceTopLevelMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlDeviceTopLevelMenuItems];
}

id objc_msgSend_switchControlDwellTime(void *a1, const char *a2, ...)
{
  return _[a1 switchControlDwellTime];
}

id objc_msgSend_switchControlFirstLaunchScanningMode(void *a1, const char *a2, ...)
{
  return _[a1 switchControlFirstLaunchScanningMode];
}

id objc_msgSend_switchControlGesturesMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlGesturesMenuItems];
}

id objc_msgSend_switchControlGesturesTopLevelMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlGesturesTopLevelMenuItems];
}

id objc_msgSend_switchControlIgnoreInvalidSwitchConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 switchControlIgnoreInvalidSwitchConfiguration];
}

id objc_msgSend_switchControlLaunchRecipeUUID(void *a1, const char *a2, ...)
{
  return _[a1 switchControlLaunchRecipeUUID];
}

id objc_msgSend_switchControlLocStringForFirstLaunchScanningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchControlLocStringForFirstLaunchScanningMode:");
}

id objc_msgSend_switchControlMediaControlsMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlMediaControlsMenuItems];
}

id objc_msgSend_switchControlMediaControlsTopLevelMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlMediaControlsTopLevelMenuItems];
}

id objc_msgSend_switchControlPointPickerSelectionStyle(void *a1, const char *a2, ...)
{
  return _[a1 switchControlPointPickerSelectionStyle];
}

id objc_msgSend_switchControlRecipes(void *a1, const char *a2, ...)
{
  return _[a1 switchControlRecipes];
}

id objc_msgSend_switchControlRestartScanningAtCurrentKey(void *a1, const char *a2, ...)
{
  return _[a1 switchControlRestartScanningAtCurrentKey];
}

id objc_msgSend_switchControlScanAfterTapLocation(void *a1, const char *a2, ...)
{
  return _[a1 switchControlScanAfterTapLocation];
}

id objc_msgSend_switchControlScanningStyle(void *a1, const char *a2, ...)
{
  return _[a1 switchControlScanningStyle];
}

id objc_msgSend_switchControlSettingsMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlSettingsMenuItems];
}

id objc_msgSend_switchControlSettingsTopLevelMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlSettingsTopLevelMenuItems];
}

id objc_msgSend_switchControlShouldAlwaysActivateKeyboardKeys(void *a1, const char *a2, ...)
{
  return _[a1 switchControlShouldAlwaysActivateKeyboardKeys];
}

id objc_msgSend_switchControlShouldUseExtendedKeyboardPredictions(void *a1, const char *a2, ...)
{
  return _[a1 switchControlShouldUseExtendedKeyboardPredictions];
}

id objc_msgSend_switchControlShouldUseShortFirstPage(void *a1, const char *a2, ...)
{
  return _[a1 switchControlShouldUseShortFirstPage];
}

id objc_msgSend_switchControlTapBehavior(void *a1, const char *a2, ...)
{
  return _[a1 switchControlTapBehavior];
}

id objc_msgSend_switchControlTopLevelMenuItems(void *a1, const char *a2, ...)
{
  return _[a1 switchControlTopLevelMenuItems];
}

id objc_msgSend_switchControlUseCameraForPointMode(void *a1, const char *a2, ...)
{
  return _[a1 switchControlUseCameraForPointMode];
}

id objc_msgSend_switchDetailsViewControllerWithSwitch_parentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchDetailsViewControllerWithSwitch:parentController:");
}

id objc_msgSend_switchForUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchForUUID:");
}

id objc_msgSend_switchRegistrar(void *a1, const char *a2, ...)
{
  return _[a1 switchRegistrar];
}

id objc_msgSend_switchSpecifiersForSwitchesWithTarget_get_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchSpecifiersForSwitchesWithTarget:get:");
}

id objc_msgSend_switchSpecifiersForSwitchesWithTarget_get_isEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchSpecifiersForSwitchesWithTarget:get:isEnabled:");
}

id objc_msgSend_switchUUID(void *a1, const char *a2, ...)
{
  return _[a1 switchUUID];
}

id objc_msgSend_switchWithAction_name_source_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchWithAction:name:source:type:");
}

id objc_msgSend_symbolView(void *a1, const char *a2, ...)
{
  return _[a1 symbolView];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronizeNanoDomain_keys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeNanoDomain:keys:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemButtonWithImage_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemButtonWithImage:target:action:");
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemFontType(void *a1, const char *a2, ...)
{
  return _[a1 systemFontType];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGreenColor];
}

id objc_msgSend_systemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGroupedBackgroundColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLanguageID(void *a1, const char *a2, ...)
{
  return _[a1 systemLanguageID];
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:");
}

id objc_msgSend_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

id objc_msgSend_systemLightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemLightGrayColor];
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _[a1 systemOrangeColor];
}

id objc_msgSend_systemPinkColor(void *a1, const char *a2, ...)
{
  return _[a1 systemPinkColor];
}

id objc_msgSend_systemPolicySpecifiersIncludingForced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemPolicySpecifiersIncludingForced:");
}

id objc_msgSend_systemPunctuationGroups(void *a1, const char *a2, ...)
{
  return _[a1 systemPunctuationGroups];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 systemSpecifiers];
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 systemTimeZone];
}

id objc_msgSend_tabKeyChord(void *a1, const char *a2, ...)
{
  return _[a1 tabKeyChord];
}

id objc_msgSend_table(void *a1, const char *a2, ...)
{
  return _[a1 table];
}

id objc_msgSend_tableEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 tableEnumerator];
}

id objc_msgSend_tableEnumeratorWithSystemBundlePath(void *a1, const char *a2, ...)
{
  return _[a1 tableEnumeratorWithSystemBundlePath];
}

id objc_msgSend_tableHeaders(void *a1, const char *a2, ...)
{
  return _[a1 tableHeaders];
}

id objc_msgSend_tableHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableHeaders:");
}

id objc_msgSend_tableRowAndColumn(void *a1, const char *a2, ...)
{
  return _[a1 tableRowAndColumn];
}

id objc_msgSend_tableSeparatorLightColor(void *a1, const char *a2, ...)
{
  return _[a1 tableSeparatorLightColor];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableView_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:cellForRowAtIndexPath:");
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableView_editingStyleForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:editingStyleForRowAtIndexPath:");
}

id objc_msgSend_tableView_estimatedHeightForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:estimatedHeightForHeaderInSection:");
}

id objc_msgSend_tableView_estimatedHeightForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:estimatedHeightForRowAtIndexPath:");
}

id objc_msgSend_tableView_heightForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForHeaderInSection:");
}

id objc_msgSend_tableView_shouldIndentWhileEditingRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:shouldIndentWhileEditingRowAtIndexPath:");
}

id objc_msgSend_tableView_targetIndexPathForMoveFromRowAtIndexPath_toProposedIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:");
}

id objc_msgSend_tableView_titleForDeleteConfirmationButtonForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:");
}

id objc_msgSend_tableView_viewForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:viewForHeaderInSection:");
}

id objc_msgSend_tablesForLocale_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tablesForLocale:inBundle:");
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _[a1 tag];
}

id objc_msgSend_targetDetector(void *a1, const char *a2, ...)
{
  return _[a1 targetDetector];
}

id objc_msgSend_teachableItemsForFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teachableItemsForFeature:");
}

id objc_msgSend_tearDown(void *a1, const char *a2, ...)
{
  return _[a1 tearDown];
}

id objc_msgSend_telephonyContext(void *a1, const char *a2, ...)
{
  return _[a1 telephonyContext];
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiaryLabelColor];
}

id objc_msgSend_tertiarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiarySystemFillColor];
}

id objc_msgSend_testingInitialPunctuationGroup(void *a1, const char *a2, ...)
{
  return _[a1 testingInitialPunctuationGroup];
}

id objc_msgSend_testingPorts(void *a1, const char *a2, ...)
{
  return _[a1 testingPorts];
}

id objc_msgSend_testingRoute(void *a1, const char *a2, ...)
{
  return _[a1 testingRoute];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textCategory(void *a1, const char *a2, ...)
{
  return _[a1 textCategory];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textColorForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColorForSpecifier:");
}

id objc_msgSend_textField(void *a1, const char *a2, ...)
{
  return _[a1 textField];
}

id objc_msgSend_textFields(void *a1, const char *a2, ...)
{
  return _[a1 textFields];
}

id objc_msgSend_textForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textForItem:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRangeFromPosition:toPosition:");
}

id objc_msgSend_textRectForBounds_limitedToNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRectForBounds:limitedToNumberOfLines:");
}

id objc_msgSend_textStyle(void *a1, const char *a2, ...)
{
  return _[a1 textStyle];
}

id objc_msgSend_textualContexts(void *a1, const char *a2, ...)
{
  return _[a1 textualContexts];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeOfLastSpaceKey(void *a1, const char *a2, ...)
{
  return _[a1 timeOfLastSpaceKey];
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _[a1 timeout];
}

id objc_msgSend_timeoutSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 timeoutSpecifier];
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_tip(void *a1, const char *a2, ...)
{
  return _[a1 tip];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForItem:");
}

id objc_msgSend_titleForSettings(void *a1, const char *a2, ...)
{
  return _[a1 titleForSettings];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_toleranceSpecifierGroupTitle(void *a1, const char *a2, ...)
{
  return _[a1 toleranceSpecifierGroupTitle];
}

id objc_msgSend_tonePickerViewController(void *a1, const char *a2, ...)
{
  return _[a1 tonePickerViewController];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topItem(void *a1, const char *a2, ...)
{
  return _[a1 topItem];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _[a1 topic];
}

id objc_msgSend_totalUnarchivedFileSize(void *a1, const char *a2, ...)
{
  return _[a1 totalUnarchivedFileSize];
}

id objc_msgSend_touchAccommodationsAllowsSwipeGesturesToBypass(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsAllowsSwipeGesturesToBypass];
}

id objc_msgSend_touchAccommodationsAreConfigured(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsAreConfigured];
}

id objc_msgSend_touchAccommodationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsEnabled];
}

id objc_msgSend_touchAccommodationsHoldDuration(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsHoldDuration];
}

id objc_msgSend_touchAccommodationsHoldDurationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsHoldDurationEnabled];
}

id objc_msgSend_touchAccommodationsIgnoreRepeatDuration(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsIgnoreRepeatDuration];
}

id objc_msgSend_touchAccommodationsIgnoreRepeatEnabled(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsIgnoreRepeatEnabled];
}

id objc_msgSend_touchAccommodationsSwipeGestureMinimumDistance(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsSwipeGestureMinimumDistance];
}

id objc_msgSend_touchAccommodationsTapActivationMethod(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsTapActivationMethod];
}

id objc_msgSend_touchAccommodationsTapActivationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 touchAccommodationsTapActivationTimeout];
}

id objc_msgSend_trackRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackRectForBounds:");
}

id objc_msgSend_trackingModeGroup(void *a1, const char *a2, ...)
{
  return _[a1 trackingModeGroup];
}

id objc_msgSend_trackingType(void *a1, const char *a2, ...)
{
  return _[a1 trackingType];
}

id objc_msgSend_trackpadBorderColor(void *a1, const char *a2, ...)
{
  return _[a1 trackpadBorderColor];
}

id objc_msgSend_trackpadColorOptions(void *a1, const char *a2, ...)
{
  return _[a1 trackpadColorOptions];
}

id objc_msgSend_trackpadInnerColor(void *a1, const char *a2, ...)
{
  return _[a1 trackpadInnerColor];
}

id objc_msgSend_tracks(void *a1, const char *a2, ...)
{
  return _[a1 tracks];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_trainingController(void *a1, const char *a2, ...)
{
  return _[a1 trainingController];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionForImagePreferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 traitCollectionForImagePreferredContentSizeCategory];
}

id objc_msgSend_traitCollectionWithPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithPreferredContentSizeCategory:");
}

id objc_msgSend_transitioningToBiggerView(void *a1, const char *a2, ...)
{
  return _[a1 transitioningToBiggerView];
}

id objc_msgSend_translateKeycode(void *a1, const char *a2, ...)
{
  return _[a1 translateKeycode];
}

id objc_msgSend_translatorBundles(void *a1, const char *a2, ...)
{
  return _[a1 translatorBundles];
}

id objc_msgSend_transparencyType(void *a1, const char *a2, ...)
{
  return _[a1 transparencyType];
}

id objc_msgSend_tripleClickOrderedOptions(void *a1, const char *a2, ...)
{
  return _[a1 tripleClickOrderedOptions];
}

id objc_msgSend_ttsChannels(void *a1, const char *a2, ...)
{
  return _[a1 ttsChannels];
}

id objc_msgSend_ttyShouldBeRealtimeForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ttyShouldBeRealtimeForContext:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typeWithFilenameExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithFilenameExtension:");
}

id objc_msgSend_typeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithIdentifier:");
}

id objc_msgSend_typingStyle(void *a1, const char *a2, ...)
{
  return _[a1 typingStyle];
}

id objc_msgSend_unarchivedFileSize(void *a1, const char *a2, ...)
{
  return _[a1 unarchivedFileSize];
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unlockScreenTypeWithOutSimplePasscodeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockScreenTypeWithOutSimplePasscodeType:");
}

id objc_msgSend_unmodifiedInput(void *a1, const char *a2, ...)
{
  return _[a1 unmodifiedInput];
}

id objc_msgSend_unpair(void *a1, const char *a2, ...)
{
  return _[a1 unpair];
}

id objc_msgSend_unregisterShortcutsDidChangeBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterShortcutsDidChangeBlock:");
}

id objc_msgSend_unregisterUpdateBlockWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterUpdateBlockWithToken:");
}

id objc_msgSend_unselectedClarityUIApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 unselectedClarityUIApplicationIdentifiers];
}

id objc_msgSend_unselectedStandardApplicationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 unselectedStandardApplicationIdentifiers];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateAttentionSpec(void *a1, const char *a2, ...)
{
  return _[a1 updateAttentionSpec];
}

id objc_msgSend_updateBackTapEnabled(void *a1, const char *a2, ...)
{
  return _[a1 updateBackTapEnabled];
}

id objc_msgSend_updateButton_withIcon_layout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButton:withIcon:layout:");
}

id objc_msgSend_updateCellAccessories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCellAccessories:");
}

id objc_msgSend_updateCheckmarkState_checkmarkIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCheckmarkState:checkmarkIndex:");
}

id objc_msgSend_updateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 updateConstraints];
}

id objc_msgSend_updateContinueButtonForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContinueButtonForSpecifier:");
}

id objc_msgSend_updateCurrentAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCurrentAction:");
}

id objc_msgSend_updateCustomizableMouse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCustomizableMouse:");
}

id objc_msgSend_updateDetectorSpecifiersAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDetectorSpecifiersAnimated:");
}

id objc_msgSend_updateElementsInTopLevelWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateElementsInTopLevelWithItems:");
}

id objc_msgSend_updateEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEntry:");
}

id objc_msgSend_updateExpandButtonPosition(void *a1, const char *a2, ...)
{
  return _[a1 updateExpandButtonPosition];
}

id objc_msgSend_updateFooterTextWithBehavior_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFooterTextWithBehavior:animated:");
}

id objc_msgSend_updateHearingFeatureUsage(void *a1, const char *a2, ...)
{
  return _[a1 updateHearingFeatureUsage];
}

id objc_msgSend_updateItemsInPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateItemsInPreferences:");
}

id objc_msgSend_updateLayout(void *a1, const char *a2, ...)
{
  return _[a1 updateLayout];
}

id objc_msgSend_updateMediaDuckingSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMediaDuckingSpecifiers:");
}

id objc_msgSend_updateMotionCuesInCarStatus(void *a1, const char *a2, ...)
{
  return _[a1 updateMotionCuesInCarStatus];
}

id objc_msgSend_updatePairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 updatePairedDevices];
}

id objc_msgSend_updateProgressToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgressToState:");
}

id objc_msgSend_updatePunctuationGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePunctuationGroup:");
}

id objc_msgSend_updateRecipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRecipe:");
}

id objc_msgSend_updateSelectedPunctuationGroup(void *a1, const char *a2, ...)
{
  return _[a1 updateSelectedPunctuationGroup];
}

id objc_msgSend_updateSelectedVoiceIdentifier_forSpeechSourceKey_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectedVoiceIdentifier:forSpeechSourceKey:languageCode:");
}

id objc_msgSend_updateSlider(void *a1, const char *a2, ...)
{
  return _[a1 updateSlider];
}

id objc_msgSend_updateSmoothingBufferSize_forEyeTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSmoothingBufferSize:forEyeTracker:");
}

id objc_msgSend_updateSoundActionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSoundActionsWithDictionary:");
}

id objc_msgSend_updateSpecifierStateAndReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSpecifierStateAndReload:");
}

id objc_msgSend_updateSpecifiersForAutoHideSettingsChange(void *a1, const char *a2, ...)
{
  return _[a1 updateSpecifiersForAutoHideSettingsChange];
}

id objc_msgSend_updateSpecifiersForCallState(void *a1, const char *a2, ...)
{
  return _[a1 updateSpecifiersForCallState];
}

id objc_msgSend_updateSpecifiersForZoomModeSettingsChange(void *a1, const char *a2, ...)
{
  return _[a1 updateSpecifiersForZoomModeSettingsChange];
}

id objc_msgSend_updateState(void *a1, const char *a2, ...)
{
  return _[a1 updateState];
}

id objc_msgSend_updateStoreState(void *a1, const char *a2, ...)
{
  return _[a1 updateStoreState];
}

id objc_msgSend_updateSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 updateSubtitle];
}

id objc_msgSend_updateSystemFilter(void *a1, const char *a2, ...)
{
  return _[a1 updateSystemFilter];
}

id objc_msgSend_updateTableCheckedSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTableCheckedSelection:");
}

id objc_msgSend_updateText(void *a1, const char *a2, ...)
{
  return _[a1 updateText];
}

id objc_msgSend_updateVisibleCellsWithCheckedSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVisibleCellsWithCheckedSelection:");
}

id objc_msgSend_updateVoiceControlLanguageSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 updateVoiceControlLanguageSpecifiers];
}

id objc_msgSend_updateWithKeyChord_shouldSpeakChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithKeyChord:shouldSpeakChange:");
}

id objc_msgSend_updateWithMagnitudes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithMagnitudes:");
}

id objc_msgSend_updateWithValue_shouldUpdateTextField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithValue:shouldUpdateTextField:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_usage(void *a1, const char *a2, ...)
{
  return _[a1 usage];
}

id objc_msgSend_useAtypicalSpeechModel(void *a1, const char *a2, ...)
{
  return _[a1 useAtypicalSpeechModel];
}

id objc_msgSend_useDeviceSpeakerForTTS(void *a1, const char *a2, ...)
{
  return _[a1 useDeviceSpeakerForTTS];
}

id objc_msgSend_userAcceptedValidationResolutionBlock(void *a1, const char *a2, ...)
{
  return _[a1 userAcceptedValidationResolutionBlock];
}

id objc_msgSend_userAssignedCommandCountForDisplayWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAssignedCommandCountForDisplayWithToken:");
}

id objc_msgSend_userCanceledCommandSelectionBlock(void *a1, const char *a2, ...)
{
  return _[a1 userCanceledCommandSelectionBlock];
}

id objc_msgSend_userCanceledGestureSelectionBlock(void *a1, const char *a2, ...)
{
  return _[a1 userCanceledGestureSelectionBlock];
}

id objc_msgSend_userCanceledKeyChordSelectionBlock(void *a1, const char *a2, ...)
{
  return _[a1 userCanceledKeyChordSelectionBlock];
}

id objc_msgSend_userExposedPunctuationCharacters(void *a1, const char *a2, ...)
{
  return _[a1 userExposedPunctuationCharacters];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceLayoutDirection];
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userLocale(void *a1, const char *a2, ...)
{
  return _[a1 userLocale];
}

id objc_msgSend_userPresentableAllShortcutBindingsWithResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPresentableAllShortcutBindingsWithResolver:");
}

id objc_msgSend_userRejectedValidationResolutionBlock(void *a1, const char *a2, ...)
{
  return _[a1 userRejectedValidationResolutionBlock];
}

id objc_msgSend_userSelectedCommandBlock(void *a1, const char *a2, ...)
{
  return _[a1 userSelectedCommandBlock];
}

id objc_msgSend_userSelectedGestureBlock(void *a1, const char *a2, ...)
{
  return _[a1 userSelectedGestureBlock];
}

id objc_msgSend_userSelectedKeyChordBlock(void *a1, const char *a2, ...)
{
  return _[a1 userSelectedKeyChordBlock];
}

id objc_msgSend_userSettingsItems(void *a1, const char *a2, ...)
{
  return _[a1 userSettingsItems];
}

id objc_msgSend_userSubstitution(void *a1, const char *a2, ...)
{
  return _[a1 userSubstitution];
}

id objc_msgSend_usesTopButtonForMesa(void *a1, const char *a2, ...)
{
  return _[a1 usesTopButtonForMesa];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_validateAndUpdateRecipeIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndUpdateRecipeIfNeeded:");
}

id objc_msgSend_validateCanAddGesture_toCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateCanAddGesture:toCommand:withResolver:");
}

id objc_msgSend_validateCanAddKeyChord_toCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateCanAddKeyChord:toCommand:withResolver:");
}

id objc_msgSend_validateCanRemoveGesture_fromCommand_withResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateCanRemoveGesture:fromCommand:withResolver:");
}

id objc_msgSend_validateClass_hasInstanceMethod_withFullSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateClass:hasInstanceMethod:withFullSignature:");
}

id objc_msgSend_validateClass_hasInstanceVariable_withType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateClass:hasInstanceVariable:withType:");
}

id objc_msgSend_validateClass_isKindOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateClass:isKindOfClass:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForSpecifier:");
}

id objc_msgSend_valueInSettings(void *a1, const char *a2, ...)
{
  return _[a1 valueInSettings];
}

id objc_msgSend_valueLabel(void *a1, const char *a2, ...)
{
  return _[a1 valueLabel];
}

id objc_msgSend_valueWithCMTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCMTime:");
}

id objc_msgSend_valueWithNonretainedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithNonretainedObject:");
}

id objc_msgSend_values(void *a1, const char *a2, ...)
{
  return _[a1 values];
}

id objc_msgSend_vendorID(void *a1, const char *a2, ...)
{
  return _[a1 vendorID];
}

id objc_msgSend_vendorId(void *a1, const char *a2, ...)
{
  return _[a1 vendorId];
}

id objc_msgSend_verbosenessDictionaryForLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verbosenessDictionaryForLevel:");
}

id objc_msgSend_verticalPadding(void *a1, const char *a2, ...)
{
  return _[a1 verticalPadding];
}

id objc_msgSend_verticalStackView(void *a1, const char *a2, ...)
{
  return _[a1 verticalStackView];
}

id objc_msgSend_vibrationPickerViewController(void *a1, const char *a2, ...)
{
  return _[a1 vibrationPickerViewController];
}

id objc_msgSend_vibrationTimer(void *a1, const char *a2, ...)
{
  return _[a1 vibrationTimer];
}

id objc_msgSend_videoOverrideSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 videoOverrideSpecifiers];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _[a1 viewController];
}

id objc_msgSend_viewControllerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerAtIndex:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_visibleFrame(void *a1, const char *a2, ...)
{
  return _[a1 visibleFrame];
}

id objc_msgSend_visibleInSettings(void *a1, const char *a2, ...)
{
  return _[a1 visibleInSettings];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _[a1 visibleViewController];
}

id objc_msgSend_visualLayoutPickerSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 visualLayoutPickerSpecifier];
}

id objc_msgSend_visualTitleForEnumValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualTitleForEnumValue:");
}

id objc_msgSend_visualizationView(void *a1, const char *a2, ...)
{
  return _[a1 visualizationView];
}

id objc_msgSend_visualizerView(void *a1, const char *a2, ...)
{
  return _[a1 visualizerView];
}

id objc_msgSend_voBindingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 voBindingAvailability];
}

id objc_msgSend_voBrailleDevice(void *a1, const char *a2, ...)
{
  return _[a1 voBrailleDevice];
}

id objc_msgSend_voCommandContext(void *a1, const char *a2, ...)
{
  return _[a1 voCommandContext];
}

id objc_msgSend_voCommandItem_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voCommandItem:commandManager:resolver:");
}

id objc_msgSend_voCommandManager(void *a1, const char *a2, ...)
{
  return _[a1 voCommandManager];
}

id objc_msgSend_voCommandResolver(void *a1, const char *a2, ...)
{
  return _[a1 voCommandResolver];
}

id objc_msgSend_voCommandSubmenuWithTitle_childViewControllerClass_command_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voCommandSubmenuWithTitle:childViewControllerClass:command:commandManager:resolver:");
}

id objc_msgSend_voGenericSubmenuWithTitle_childViewControllerClass_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voGenericSubmenuWithTitle:childViewControllerClass:commandManager:resolver:");
}

id objc_msgSend_voGestureItem_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voGestureItem:commandManager:resolver:");
}

id objc_msgSend_voKeyboardShortcutBindingItem_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voKeyboardShortcutBindingItem:commandManager:resolver:");
}

id objc_msgSend_voKeyboardShortcutItem_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voKeyboardShortcutItem:commandManager:resolver:");
}

id objc_msgSend_voSubmenuForCommandCategory_commandManager_resolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voSubmenuForCommandCategory:commandManager:resolver:");
}

id objc_msgSend_voiceControlLanguageSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 voiceControlLanguageSpecifiers];
}

id objc_msgSend_voiceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceForIdentifier:");
}

id objc_msgSend_voiceId(void *a1, const char *a2, ...)
{
  return _[a1 voiceId];
}

id objc_msgSend_voiceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 voiceIdentifier];
}

id objc_msgSend_voiceIdentifierForLiveSpeechKeyboardID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceIdentifierForLiveSpeechKeyboardID:");
}

id objc_msgSend_voiceIds(void *a1, const char *a2, ...)
{
  return _[a1 voiceIds];
}

id objc_msgSend_voiceOverActionFeedbackFirstInListOnly(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverActionFeedbackFirstInListOnly];
}

id objc_msgSend_voiceOverActionsFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverActionsFeedback];
}

id objc_msgSend_voiceOverActivationWorkaround(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverActivationWorkaround];
}

id objc_msgSend_voiceOverActivities(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverActivities];
}

id objc_msgSend_voiceOverAdjustSoundVolumeIndependently(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverAdjustSoundVolumeIndependently];
}

id objc_msgSend_voiceOverAlwaysTurnOnBluetooth(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverAlwaysTurnOnBluetooth];
}

id objc_msgSend_voiceOverAlwaysUseNemethCodeForMathEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverAlwaysUseNemethCodeForMathEnabled];
}

id objc_msgSend_voiceOverAudioDuckingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverAudioDuckingEnabled];
}

id objc_msgSend_voiceOverAudioFollowsHDMIAudio(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverAudioFollowsHDMIAudio];
}

id objc_msgSend_voiceOverBrailleAlertDisplayDuration(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleAlertDisplayDuration];
}

id objc_msgSend_voiceOverBrailleAlertShowUntilDismissed(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleAlertShowUntilDismissed];
}

id objc_msgSend_voiceOverBrailleAlertsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleAlertsEnabled];
}

id objc_msgSend_voiceOverBrailleAutoAdvanceDuration(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleAutoAdvanceDuration];
}

id objc_msgSend_voiceOverBrailleDisplays(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleDisplays];
}

id objc_msgSend_voiceOverBrailleFormattingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleFormattingEnabled];
}

id objc_msgSend_voiceOverBrailleGesturesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleGesturesEnabled];
}

id objc_msgSend_voiceOverBrailleGesturesTypingFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleGesturesTypingFeedback];
}

id objc_msgSend_voiceOverBrailleGradeTwoAutoTranslateEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleGradeTwoAutoTranslateEnabled];
}

id objc_msgSend_voiceOverBrailleKeyDebounceTimeout(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleKeyDebounceTimeout];
}

id objc_msgSend_voiceOverBrailleLanguageRotorItems(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleLanguageRotorItems];
}

id objc_msgSend_voiceOverBrailleTableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleTableIdentifier];
}

id objc_msgSend_voiceOverBrailleWordWrapEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverBrailleWordWrapEnabled];
}

id objc_msgSend_voiceOverCapitalLetterFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverCapitalLetterFeedback];
}

id objc_msgSend_voiceOverContainerOutputFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverContainerOutputFeedback];
}

id objc_msgSend_voiceOverContinuousPathKeyboardStartTimeout(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverContinuousPathKeyboardStartTimeout];
}

id objc_msgSend_voiceOverDelayUntilSpeakUnderTouch(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDelayUntilSpeakUnderTouch];
}

id objc_msgSend_voiceOverDeletionFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDeletionFeedback];
}

id objc_msgSend_voiceOverDescribedMedia(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDescribedMedia];
}

id objc_msgSend_voiceOverDetectionModeItems(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDetectionModeItems];
}

id objc_msgSend_voiceOverDirectTouchEnabledApps(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDirectTouchEnabledApps];
}

id objc_msgSend_voiceOverDiscoveredSensitiveContentFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDiscoveredSensitiveContentFeedback];
}

id objc_msgSend_voiceOverDoubleTapInterval(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverDoubleTapInterval];
}

id objc_msgSend_voiceOverEditAppsActionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverEditAppsActionEnabled];
}

id objc_msgSend_voiceOverFlashlightNotificationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverFlashlightNotificationsEnabled];
}

id objc_msgSend_voiceOverHandwritingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHandwritingEnabled];
}

id objc_msgSend_voiceOverHapticEnabledForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceOverHapticEnabledForEvent:");
}

id objc_msgSend_voiceOverHapticIntensity(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHapticIntensity];
}

id objc_msgSend_voiceOverHapticsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHapticsEnabled];
}

id objc_msgSend_voiceOverHardwareTypingFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHardwareTypingFeedback];
}

id objc_msgSend_voiceOverHelpMode(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHelpMode];
}

id objc_msgSend_voiceOverHintsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverHintsEnabled];
}

id objc_msgSend_voiceOverIgnoreTrackpad(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverIgnoreTrackpad];
}

id objc_msgSend_voiceOverImageCaptionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverImageCaptionsEnabled];
}

id objc_msgSend_voiceOverInlineTextCompletionAppearanceFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverInlineTextCompletionAppearanceFeedback];
}

id objc_msgSend_voiceOverInlineTextCompletionInsertionFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverInlineTextCompletionInsertionFeedback];
}

id objc_msgSend_voiceOverKeyboardModifierChoice(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverKeyboardModifierChoice];
}

id objc_msgSend_voiceOverLargeCursorEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverLargeCursorEnabled];
}

id objc_msgSend_voiceOverLinkFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverLinkFeedback];
}

id objc_msgSend_voiceOverMediaDuckingAmount(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverMediaDuckingAmount];
}

id objc_msgSend_voiceOverMediaDuckingMode(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverMediaDuckingMode];
}

id objc_msgSend_voiceOverMoreContentOutputFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverMoreContentOutputFeedback];
}

id objc_msgSend_voiceOverNavigateImagesOption(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverNavigateImagesOption];
}

id objc_msgSend_voiceOverNavigationStyle(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverNavigationStyle];
}

id objc_msgSend_voiceOverNeuralElementFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverNeuralElementFeedback];
}

id objc_msgSend_voiceOverNumberFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverNumberFeedback];
}

id objc_msgSend_voiceOverPhoneticsFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverPhoneticsFeedback];
}

id objc_msgSend_voiceOverPitch(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverPitch];
}

id objc_msgSend_voiceOverPunctuationGroup(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverPunctuationGroup];
}

id objc_msgSend_voiceOverQuickNavAnnouncementFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverQuickNavAnnouncementFeedback];
}

id objc_msgSend_voiceOverRotorItems(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverRotorItems];
}

id objc_msgSend_voiceOverRotorSummaryFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverRotorSummaryFeedback];
}

id objc_msgSend_voiceOverRotorUpdatesWithElement(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverRotorUpdatesWithElement];
}

id objc_msgSend_voiceOverSceneDescriptionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSceneDescriptionsEnabled];
}

id objc_msgSend_voiceOverSetHapticEnabled_forEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceOverSetHapticEnabled:forEvent:");
}

id objc_msgSend_voiceOverSetSoundEnabled_forEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceOverSetSoundEnabled:forEvent:");
}

id objc_msgSend_voiceOverShouldSpeakDiscoveredText(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverShouldSpeakDiscoveredText];
}

id objc_msgSend_voiceOverShowSoftwareKeyboardWithBraille(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverShowSoftwareKeyboardWithBraille];
}

id objc_msgSend_voiceOverSoftwareTypingFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSoftwareTypingFeedback];
}

id objc_msgSend_voiceOverSoundCurtain(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSoundCurtain];
}

id objc_msgSend_voiceOverSoundEffectsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSoundEffectsEnabled];
}

id objc_msgSend_voiceOverSoundEnabledForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceOverSoundEnabledForEvent:");
}

id objc_msgSend_voiceOverSoundVolume(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSoundVolume];
}

id objc_msgSend_voiceOverSpeakActionConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakActionConfirmation];
}

id objc_msgSend_voiceOverSpeakNotificationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakNotificationsEnabled];
}

id objc_msgSend_voiceOverSpeakTableColumnRowInformation(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakTableColumnRowInformation];
}

id objc_msgSend_voiceOverSpeakTableHeaders(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakTableHeaders];
}

id objc_msgSend_voiceOverSpeakingRate(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakingRate];
}

id objc_msgSend_voiceOverSpeakingRateInRotorEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeakingRateInRotorEnabled];
}

id objc_msgSend_voiceOverSpeaksOverTelephoneCalls(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSpeaksOverTelephoneCalls];
}

id objc_msgSend_voiceOverSupportedInCurrentLanguage(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverSupportedInCurrentLanguage];
}

id objc_msgSend_voiceOverTouchBrailleDisplayInputMode(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleDisplayInputMode];
}

id objc_msgSend_voiceOverTouchBrailleDisplayInputTableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleDisplayInputTableIdentifier];
}

id objc_msgSend_voiceOverTouchBrailleDisplayOutputMode(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleDisplayOutputMode];
}

id objc_msgSend_voiceOverTouchBrailleDisplayOutputTableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleDisplayOutputTableIdentifier];
}

id objc_msgSend_voiceOverTouchBrailleDisplaySyncInputOutputTables(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleDisplaySyncInputOutputTables];
}

id objc_msgSend_voiceOverTouchBrailleGestureControl(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGestureControl];
}

id objc_msgSend_voiceOverTouchBrailleGesturesActivationGestureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesActivationGestureEnabled];
}

id objc_msgSend_voiceOverTouchBrailleGesturesAutoActivateOnTextFields(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesAutoActivateOnTextFields];
}

id objc_msgSend_voiceOverTouchBrailleGesturesDisplaysEnteredText(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesDisplaysEnteredText];
}

id objc_msgSend_voiceOverTouchBrailleGesturesInputMode(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesInputMode];
}

id objc_msgSend_voiceOverTouchBrailleGesturesInputTableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesInputTableIdentifier];
}

id objc_msgSend_voiceOverTouchBrailleGesturesSoundOption(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesSoundOption];
}

id objc_msgSend_voiceOverTouchBrailleGesturesUsesHapticFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesUsesHapticFeedback];
}

id objc_msgSend_voiceOverTouchBrailleGesturesUsesTypingSoundFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleGesturesUsesTypingSoundFeedback];
}

id objc_msgSend_voiceOverTouchBraillePanningAutoTurnsReadingContent(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBraillePanningAutoTurnsReadingContent];
}

id objc_msgSend_voiceOverTouchBrailleShouldReverseDots(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleShouldReverseDots];
}

id objc_msgSend_voiceOverTouchBrailleShowGeneralStatus(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleShowGeneralStatus];
}

id objc_msgSend_voiceOverTouchBrailleShowTextStyleStatus(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchBrailleShowTextStyleStatus];
}

id objc_msgSend_voiceOverTouchPerkinsChordKeyboardInputEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverTouchPerkinsChordKeyboardInputEnabled];
}

id objc_msgSend_voiceOverVerbosityEmojiFeedback(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverVerbosityEmojiFeedback];
}

id objc_msgSend_voiceOverVerbosityEmojiSuffixEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceOverVerbosityEmojiSuffixEnabled];
}

id objc_msgSend_voiceTriggerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerEnabled];
}

id objc_msgSend_voicesSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 voicesSpecifier];
}

id objc_msgSend_volume(void *a1, const char *a2, ...)
{
  return _[a1 volume];
}

id objc_msgSend_volumeButtonsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 volumeButtonsEnabled];
}

id objc_msgSend_vosOutputEvent(void *a1, const char *a2, ...)
{
  return _[a1 vosOutputEvent];
}

id objc_msgSend_wallpaperImage(void *a1, const char *a2, ...)
{
  return _[a1 wallpaperImage];
}

id objc_msgSend_wantsAccessibilityHUDDismissedForCustomCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsAccessibilityHUDDismissedForCustomCell:");
}

id objc_msgSend_wantsHeightUpdatedForCustomCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsHeightUpdatedForCustomCell:");
}

id objc_msgSend_wasDeviceDiscovered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasDeviceDiscovered:");
}

id objc_msgSend_wasPromptedForDataCollection(void *a1, const char *a2, ...)
{
  return _[a1 wasPromptedForDataCollection];
}

id objc_msgSend_whatsNewController(void *a1, const char *a2, ...)
{
  return _[a1 whatsNewController];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitePointEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitePointEnabled:");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_whitespaceNewlineAndSpecialCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceNewlineAndSpecialCharacterSet];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_willBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 willBecomeActive];
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_willResignActive(void *a1, const char *a2, ...)
{
  return _[a1 willResignActive];
}

id objc_msgSend_willTruncateForCellWidth_withText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willTruncateForCellWidth:withText:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_wordColorHighlightItems(void *a1, const char *a2, ...)
{
  return _[a1 wordColorHighlightItems];
}

id objc_msgSend_wordFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 wordFeedbackEnabled];
}

id objc_msgSend_xMagnitude(void *a1, const char *a2, ...)
{
  return _[a1 xMagnitude];
}

id objc_msgSend_xOffset(void *a1, const char *a2, ...)
{
  return _[a1 xOffset];
}

id objc_msgSend_yMagnitude(void *a1, const char *a2, ...)
{
  return _[a1 yMagnitude];
}

id objc_msgSend_zeroOut(void *a1, const char *a2, ...)
{
  return _[a1 zeroOut];
}

id objc_msgSend_zoomAdjustZoomLevelKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomAdjustZoomLevelKbShortcutEnabled];
}

id objc_msgSend_zoomAlwaysUseWindowedZoomForTyping(void *a1, const char *a2, ...)
{
  return _[a1 zoomAlwaysUseWindowedZoomForTyping];
}

id objc_msgSend_zoomControllerColor(void *a1, const char *a2, ...)
{
  return _[a1 zoomControllerColor];
}

id objc_msgSend_zoomCurrentLensEffect(void *a1, const char *a2, ...)
{
  return _[a1 zoomCurrentLensEffect];
}

id objc_msgSend_zoomIdleSlugOpacity(void *a1, const char *a2, ...)
{
  return _[a1 zoomIdleSlugOpacity];
}

id objc_msgSend_zoomKeyboardShortcutsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomKeyboardShortcutsEnabled];
}

id objc_msgSend_zoomPanZoomKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomPanZoomKbShortcutEnabled];
}

id objc_msgSend_zoomPreferredCurrentDockPosition(void *a1, const char *a2, ...)
{
  return _[a1 zoomPreferredCurrentDockPosition];
}

id objc_msgSend_zoomPreferredCurrentLensMode(void *a1, const char *a2, ...)
{
  return _[a1 zoomPreferredCurrentLensMode];
}

id objc_msgSend_zoomResizeZoomWindowKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomResizeZoomWindowKbShortcutEnabled];
}

id objc_msgSend_zoomScalePointerIsAllowed(void *a1, const char *a2, ...)
{
  return _[a1 zoomScalePointerIsAllowed];
}

id objc_msgSend_zoomScrollWheelKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomScrollWheelKbShortcutEnabled];
}

id objc_msgSend_zoomShouldFollowFocus(void *a1, const char *a2, ...)
{
  return _[a1 zoomShouldFollowFocus];
}

id objc_msgSend_zoomShouldShowSlug(void *a1, const char *a2, ...)
{
  return _[a1 zoomShouldShowSlug];
}

id objc_msgSend_zoomShowWhileMirroring(void *a1, const char *a2, ...)
{
  return _[a1 zoomShowWhileMirroring];
}

id objc_msgSend_zoomSlugDoubleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 zoomSlugDoubleTapAction];
}

id objc_msgSend_zoomSlugSingleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 zoomSlugSingleTapAction];
}

id objc_msgSend_zoomSlugTapAndSlideToAdjustZoomLevelEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomSlugTapAndSlideToAdjustZoomLevelEnabled];
}

id objc_msgSend_zoomSlugTripleTapAction(void *a1, const char *a2, ...)
{
  return _[a1 zoomSlugTripleTapAction];
}

id objc_msgSend_zoomSwitchZoomModeKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomSwitchZoomModeKbShortcutEnabled];
}

id objc_msgSend_zoomTempToggleZoomKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomTempToggleZoomKbShortcutEnabled];
}

id objc_msgSend_zoomToggleZoomKbShortcutEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomToggleZoomKbShortcutEnabled];
}

id objc_msgSend_zoomTrackpadGestureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 zoomTrackpadGestureEnabled];
}