void sub_100003AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100003AEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4 = [v3 updatedObjects];
  location = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6 = [WeakRetained contentItem];
  unsigned int v7 = [v4 containsObject:v6];

  if (v7)
  {
    id v8 = objc_loadWeakRetained(location);
    [v8 updateActionView];
  }
  v9 = [v3 deletedObjects];
  id v10 = [v9 count];

  if (v10)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v33 = v3;
    id obj = [v3 deletedObjects];
    id v11 = [obj countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v37;
      while (2)
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v37 != v13) {
            objc_enumerationMutation(obj);
          }
          v15 = *(void **)(*((void *)&v36 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v16 = v15;
            v17 = [v16 formID];
            id v18 = objc_loadWeakRetained(location);
            v19 = [v18 contentItem];
            v20 = [v19 ID];
            unsigned int v21 = [v17 isEqualToNumber:v20];

            if (v21)
            {
              id v22 = objc_loadWeakRetained(location);
              [v22 updateActionView];

              goto LABEL_16;
            }
          }
        }
        id v12 = [obj countByEnumeratingWithState:&v36 objects:v40 count:16];
        if (v12) {
          continue;
        }
        break;
      }
    }
LABEL_16:

    id v3 = v33;
  }
  id v23 = objc_loadWeakRetained(location);
  v24 = [v23 surveyBugForm];
  id v25 = objc_loadWeakRetained(location);
  v26 = [v25 team];
  v27 = [v24 draftResponsesContentItemsForTeam:v26];

  if (v27 && [v27 count])
  {
    v28 = [v3 deletedObjects];
    if (([v28 intersectsSet:v27] & 1) == 0)
    {
      v29 = [v3 updatedObjects];
      if (![v29 intersectsSet:v27])
      {
        v31 = [v3 insertedObjects];
        unsigned __int8 v32 = [v31 intersectsSet:v27];

        if ((v32 & 1) == 0) {
          goto LABEL_24;
        }
        goto LABEL_23;
      }
    }
LABEL_23:
    id v30 = objc_loadWeakRetained(location);
    [v30 updateActionView];
  }
LABEL_24:
}

id sub_100004114(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsLoading:0];
  [*(id *)(a1 + 32) updateWebView];
  [*(id *)(a1 + 32) updateActionView];
  v2 = *(void **)(a1 + 32);

  return _[v2 updateNavigation];
}

uint64_t sub_100004164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A3F30(v4);
    }

    v5 = +[NSBundle mainBundle];
    v6 = [v5 localizedStringForKey:@"SURVEY_LOAD_ERROR_TITLE" value:&stru_1000F6658 table:0];
    unsigned int v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"SURVEY_LOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    v9 = +[UIAlertController alertControllerWithTitle:v6 message:v8 preferredStyle:1];

    id v10 = +[NSBundle mainBundle];
    id v11 = [v10 localizedStringForKey:@"OK" value:&stru_1000F6658 table:0];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10000434C;
    v14[3] = &unk_1000F2540;
    v14[4] = *(void *)(a1 + 32);
    id v12 = +[UIAlertAction actionWithTitle:v11 style:1 handler:v14];
    [v9 addAction:v12];

    [*(id *)(a1 + 32) presentViewController:v9 animated:1 completion:0];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10000434C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) splitViewController];
  [v1 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
}

uint64_t sub_1000051A0(uint64_t inSystemSoundID)
{
  if (inSystemSoundID) {
    return AudioServicesDisposeSystemSoundID(inSystemSoundID);
  }
  return inSystemSoundID;
}

void sub_1000057AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000057DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v11 = [WeakRetained tableView:v9 cellForRowAtIndexPath:v8 withItemIdentifier:v7];

  [v11 setItemIdentifier:v7];

  return v11;
}

void sub_100005A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100005A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4 = [v3 object];
  v5 = +[FBALog appHandle];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = [v4 hashingKey];
    *(_DWORD *)buf = 138543362;
    v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "did get notification to show pin pairing for device [%{public}@]", buf, 0xCu);
  }
  id v7 = +[FBALog ded];
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v8)
    {
      *(_DWORD *)buf = 138543362;
      v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "will show pairing view for device [%{public}@]", buf, 0xCu);
    }

    id v9 = +[FBKDeviceManager sharedInstance];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100005CC0;
    v11[3] = &unk_1000F2638;
    id v12 = v4;
    objc_copyWeak(&v13, (id *)(a1 + 32));
    [v9 beginPairingDevice:v12 showUIBlock:v11];

    objc_destroyWeak(&v13);
    id v10 = v12;
  }
  else
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "could not show pairing view, given device is nil", buf, 2u);
    }

    id v10 = +[NSNotificationCenter defaultCenter];
    [v10 postNotificationName:FBKDEDHelperHereIsYourPairedDevice object:0];
  }
}

void sub_100005CA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100005CC0(uint64_t a1)
{
  id v3 = [[FBAOnDemandPinParingNavigationController alloc] initWithDevice:*(void *)(a1 + 32) completion:&stru_1000F25D0];
  [(FBAOnDemandPinParingNavigationController *)v3 setModalPresentationStyle:2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained presentViewController:v3 animated:1 completion:&stru_1000F2610];
}

void sub_100005D48(id a1, FBKGroupedDevice *a2)
{
  v2 = a2;
  id v3 = +[FBALog appHandle];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "did pick device [%{public}@]", (uint8_t *)&v5, 0xCu);
  }

  v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:FBKDEDHelperHereIsYourPairedDevice object:v2];
}

void sub_100006A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006AA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A3FB8(a1, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained unregisterApplicationNotifications];

  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  [v12 setDevicesController:0];

  id v13 = objc_loadWeakRetained((id *)(a1 + 40));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100006BFC;
  v15[3] = &unk_1000F2688;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  [v13 dismissViewControllerAnimated:1 completion:v15];

  uint64_t v14 = *(void *)(a1 + 32);
  if (v14) {
    (*(void (**)(void))(v14 + 16))();
  }
  objc_destroyWeak(&v16);
}

void sub_100006BE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100006BFC(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained launchAction];
  unsigned int v4 = [v3 isCaptive];

  if (v4)
  {
    id v6 = objc_loadWeakRetained(v1);
    uint64_t v5 = [v6 launchAction];
    +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", [v5 shouldMakeFBAVisible]);
  }
}

void sub_1000072E4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) draftingController];
  v2 = [*(id *)(a1 + 32) pendingQandA];
  [v3 attachAnswersToQuestionsWithGivenData:v2];
}

id sub_10000756C(uint64_t a1)
{
  [*(id *)(a1 + 32) unregisterApplicationNotifications];
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  v2 = *(void **)(a1 + 32);

  return _[v2 close];
}

void sub_100007814(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  v2 = +[FBADeviceDisplayCell reuseIdentifier];
  id v4 = [v1 dequeueReusableCellWithIdentifier:v2];

  [v4 spaceFromSuperViewToLabel];
  qword_100123F98 = v3;
}

id sub_100008EB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) deselectRowAtIndexPath:*(void *)(a1 + 40) animated:1];
}

void sub_100009C3C(uint64_t a1, int a2)
{
  id v4 = [*(id *)(a1 + 32) navigationItem];
  uint64_t v5 = [v4 rightBarButtonItem];
  [v5 setEnabled:0];

  id v6 = [*(id *)(a1 + 32) navigationItem];
  uint64_t v7 = [v6 leftBarButtonItem];
  [v7 setEnabled:0];

  uint64_t v8 = [*(id *)(a1 + 32) devicesController];
  [v8 removeAllAttachments];

  uint64_t v9 = [*(id *)(a1 + 32) formResponse];
  uint64_t v10 = [v9 ID];
  id v11 = [v10 intValue];

  if (!a2)
  {
    id v23 = *(void **)(a1 + 32);
    v24 = +[NSBundle mainBundle];
    id v25 = [v24 localizedStringForKey:@"SAVING_DRAFT" value:&stru_1000F6658 table:FBKCommonStrings];
    [v23 showSpinnerWithStatus:v25];

    v26 = +[FBKData sharedInstance];
    v27 = [*(id *)(a1 + 32) formResponse];
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10000A0C4;
    v39[3] = &unk_1000F2700;
    int v42 = (int)v11;
    v28 = *(void **)(a1 + 40);
    v39[4] = *(void *)(a1 + 32);
    id v40 = v28;
    id v41 = *(id *)(a1 + 48);
    [v26 saveFormResponse:v27 completion:v39];

    id v22 = v40;
    goto LABEL_7;
  }
  id v12 = +[FBALog ded];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    int v13 = *(_DWORD *)(a1 + 56);
    *(_DWORD *)buf = 67109120;
    int v48 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "will delete all bug sessions for form [%i]", buf, 8u);
  }

  uint64_t v14 = [*(id *)(a1 + 32) devicesController];
  [v14 abortAllSessions];

  v15 = *(void **)(a1 + 32);
  id v16 = +[NSBundle mainBundle];
  v17 = [v16 localizedStringForKey:@"DELETING_DRAFT" value:&stru_1000F6658 table:FBKCommonStrings];
  [v15 showSpinnerWithStatus:v17];

  id v18 = [*(id *)(a1 + 32) itemFromDraft];

  if (v18)
  {
    v19 = +[FBKData sharedInstance];
    v20 = [*(id *)(a1 + 32) itemFromDraft];
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_10000A038;
    v43[3] = &unk_1000F2700;
    int v46 = (int)v11;
    unsigned int v21 = *(void **)(a1 + 40);
    v43[4] = *(void *)(a1 + 32);
    id v44 = v21;
    id v45 = *(id *)(a1 + 48);
    [v19 deleteDraftFromContentItem:v20 completion:v43];

    id v22 = v44;
LABEL_7:

    return;
  }
  v29 = +[FBALog appHandle];
  if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
    sub_1000A4344((uint64_t)v11, v29, v30, v31, v32, v33, v34, v35);
  }

  long long v37 = *(void **)(a1 + 32);
  long long v36 = *(void **)(a1 + 40);
  long long v38 = [v36 preferredTeamForStubPreferringTeam:0];
  [v37 loadNewResponseForBugFormStub:v36 forTeam:v38];
}

void sub_10000A038(void *a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = +[FBALog appHandle];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000A43B0((uint64_t)a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }
  uint64_t v10 = (void *)a1[4];
  id v11 = (void *)a1[5];
  id v12 = [v11 preferredTeamForStubPreferringTeam:a1[6]];
  [v10 loadNewResponseForBugFormStub:v11 forTeam:v12];
}

void sub_10000A0C4(void *a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = +[FBALog appHandle];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000A4420((uint64_t)a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }
  uint64_t v10 = (void *)a1[4];
  id v11 = (void *)a1[5];
  id v12 = [v11 preferredTeamForStubPreferringTeam:a1[6]];
  [v10 loadNewResponseForBugFormStub:v11 forTeam:v12];
}

uint64_t sub_10000A150(uint64_t a1)
{
  v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = [*(id *)(a1 + 32) formResponse];
    uint64_t v4 = [v3 ID];
    v6[0] = 67109120;
    v6[1] = [v4 intValue];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "_changeToBugForm, deleting FR %d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_10000A240(uint64_t a1)
{
  v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = [*(id *)(a1 + 32) formResponse];
    uint64_t v4 = [v3 ID];
    v6[0] = 67109120;
    v6[1] = [v4 intValue];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "_changeToBugForm, saving FR %d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10000A604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000A620(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _changeToBugFormStub:*(void *)(a1 + 32) force:1];
}

void sub_10000A7F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10000A810(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = [WeakRetained currentTeam];
  LODWORD(v2) = [v2 isEqual:v5];

  if (v2)
  {
    uint64_t v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Selected the current team, not switching.", v13, 2u);
    }
  }
  else
  {
    id v7 = *v1;
    id v8 = objc_loadWeakRetained(v3);
    uint64_t v9 = [v8 formStub];
    uint64_t v6 = [v7 teamFormStubMatchingFromFormStub:v9];

    if (!v6)
    {
      uint64_t v10 = +[FBALog appHandle];
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_1000A4514(v3, v1, v10);
      }

      id v11 = objc_loadWeakRetained(v3);
      uint64_t v6 = [v11 formStub];
    }
    id v12 = objc_loadWeakRetained(v3);
    [v12 _changeToBugFormStub:v6 withTeam:*v1 force:1];
  }
}

void sub_10000AFA4(uint64_t a1)
{
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v36 objects:v44 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v37;
    *(void *)&long long v3 = 138543618;
    long long v25 = v3;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v37 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = *(void **)(*((void *)&v36 + 1) + 8 * (void)v5);
        id v7 = +[FBALog ded];
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
        {
          id v8 = [v6 publicLogDescription];
          uint64_t v9 = [*(id *)(a1 + 40) formResponse];
          uint64_t v10 = [v9 ID];
          unsigned int v11 = [v10 intValue];
          *(_DWORD *)buf = v25;
          id v41 = v8;
          __int16 v42 = 1024;
          unsigned int v43 = v11;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "tried to submit on non reachable device [%{public}@] FR [%i]", buf, 0x12u);
        }
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v2 != v5);
      id v2 = [v1 countByEnumeratingWithState:&v36 objects:v44 count:16];
    }
    while (v2);
  }

  id v12 = +[NSBundle mainBundle];
  int v13 = [v12 localizedStringForKey:@"MISSING_REQ_FILES" value:&stru_1000F6658 table:0];
  uint64_t v14 = +[UIAlertController alertControllerWithTitle:v13 message:*(void *)(a1 + 48) preferredStyle:1];

  objc_initWeak((id *)buf, *(id *)(a1 + 40));
  v15 = +[NSBundle mainBundle];
  id v16 = [v15 localizedStringForKey:@"CANCEL" value:&stru_1000F6658 table:0];

  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10000B4EC;
  v33[3] = &unk_1000F27A0;
  id v34 = *(id *)(a1 + 56);
  objc_copyWeak(&v35, (id *)buf);
  v17 = +[UIAlertAction actionWithTitle:v16 style:1 handler:v33];
  [v14 addAction:v17];

  id v18 = +[NSBundle mainBundle];
  v19 = [v18 localizedStringForKey:@"SAVE_DRAFT" value:&stru_1000F6658 table:0];

  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_10000B638;
  v30[3] = &unk_1000F27A0;
  id v31 = *(id *)(a1 + 56);
  objc_copyWeak(&v32, (id *)buf);
  v20 = +[UIAlertAction actionWithTitle:v19 style:0 handler:v30];
  [v14 addAction:v20];

  unsigned int v21 = +[NSBundle mainBundle];
  id v22 = [v21 localizedStringForKey:@"SUBMIT_WO_FILES" value:&stru_1000F6658 table:0];

  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_10000B788;
  v27[3] = &unk_1000F27A0;
  id v28 = *(id *)(a1 + 56);
  objc_copyWeak(&v29, (id *)buf);
  id v23 = +[UIAlertAction actionWithTitle:v22 style:0 handler:v27];
  [v14 addAction:v23];

  id WeakRetained = objc_loadWeakRetained((id *)buf);
  [WeakRetained presentViewController:v14 animated:1 completion:0];

  objc_destroyWeak(&v29);
  objc_destroyWeak(&v32);

  objc_destroyWeak(&v35);
  objc_destroyWeak((id *)buf);
}

void sub_10000B470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  objc_destroyWeak(v41);
  objc_destroyWeak(v40);
  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000B4EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10.opaque[0] = 0;
  v10.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v10);
  uint64_t v4 = +[FBALog ded];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = [WeakRetained formResponse];
    id v7 = [v6 ID];
    unsigned int v8 = [v7 intValue];
    *(_DWORD *)buf = 67109120;
    unsigned int v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Cancel] for missing devices for FR [%i]", buf, 8u);
  }
  id v9 = objc_loadWeakRetained((id *)(a1 + 40));
  [v9 updateSubmitButtonState];

  os_activity_scope_leave(&v10);
}

void sub_10000B614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_10000B638(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10.opaque[0] = 0;
  v10.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v10);
  uint64_t v4 = +[FBALog ded];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = [WeakRetained formResponse];
    id v7 = [v6 ID];
    unsigned int v8 = [v7 intValue];
    *(_DWORD *)buf = 67109120;
    unsigned int v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Save] for missing devices for FR [%i]", buf, 8u);
  }
  id v9 = objc_loadWeakRetained((id *)(a1 + 40));
  [v9 closeWithCompletion:0];

  os_activity_scope_leave(&v10);
}

void sub_10000B764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_10000B788(uint64_t a1, void *a2)
{
  id v3 = a2;
  v19.opaque[0] = 0;
  v19.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v19);
  uint64_t v4 = +[FBALog ded];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = [WeakRetained formResponse];
    id v7 = [v6 ID];
    unsigned int v8 = [v7 intValue];
    *(_DWORD *)buf = 67109120;
    unsigned int v21 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tapped [Without Files] for FR [%i]", buf, 8u);
  }
  id v9 = (id *)(a1 + 40);
  id v10 = objc_loadWeakRetained(v9);
  unsigned int v11 = [v10 formResponse];
  unsigned int v12 = [v11 bugForm];
  int v13 = [v12 questionWithRole:FBKQuestionRoleRequiredFileZone];

  id v14 = objc_loadWeakRetained(v9);
  v15 = [v14 formResponse];
  id v16 = [v13 ID];
  v17 = [v15 answerForQuestionID:v16];

  [v17 setOptedOut:1];
  id v18 = objc_loadWeakRetained(v9);
  [v18 checkLegalAndSubmit];

  os_activity_scope_leave(&v19);
}

void sub_10000B960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_10000B988(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000BA00;
  block[3] = &unk_1000F2518;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10000BA00(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) devicesController];
  id v3 = [*(id *)(a1 + 32) formResponse];
  uint64_t v4 = [v3 answersDictionary];
  [v2 gatherAllMissingRequirementsWithAnswers:v4];

  uint64_t v5 = *(void **)(a1 + 32);

  return [v5 checkLegalAndSubmit];
}

void sub_10000BA80(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) formResponse];
    uint64_t v4 = [v3 ID];
    v11[0] = 67109120;
    v11[1] = [v4 intValue];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presubmission: chose to submit without files for FR [%d]", (uint8_t *)v11, 8u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) formResponse];
  uint64_t v6 = [v5 bugForm];
  id v7 = [v6 questionWithRole:FBKQuestionRoleRequiredFileZone];

  unsigned int v8 = [*(id *)(a1 + 32) formResponse];
  id v9 = [v7 ID];
  id v10 = [v8 answerForQuestionID:v9];

  [v10 setOptedOut:1];
  [*(id *)(a1 + 32) checkLegalAndSubmit];
}

void sub_10000BBF8(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000BC70;
  block[3] = &unk_1000F2518;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10000BC70(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", 0, (char *)[v2 numberOfSections] - 1);
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  id v3 = [*(id *)(a1 + 32) tableView];
  [v3 scrollToRowAtIndexPath:v4 atScrollPosition:1 animated:1];

  [*(id *)(a1 + 32) updateSubmitButtonState];
}

id sub_10000BFCC(uint64_t a1)
{
  id v2 = +[iFBAConstants sharedUserDefaults];
  [v2 setBool:0 forKey:FBKSuppressPrivacyNoticePreferencesKey];

  id v3 = *(void **)(a1 + 32);

  return [v3 updateSubmitButtonState];
}

id sub_10000C02C(uint64_t a1)
{
  id v2 = +[iFBAConstants sharedUserDefaults];
  [v2 setBool:1 forKey:FBKSuppressPrivacyNoticePreferencesKey];

  id v3 = *(void **)(a1 + 32);

  return _[v3 submit];
}

void sub_10000C3F8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_10000C41C(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1000A4678(a1);
  }

  id result = [*(id *)(a1 + 40) endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = UIBackgroundTaskInvalid;
  return result;
}

void sub_10000C498(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = UIBackgroundTaskInvalid;
  if (v3)
  {
    id v4 = +[NSBundle mainBundle];
    uint64_t v5 = [v4 localizedStringForKey:@"GENERIC_SUBMIT_ERROR_TITLE" value:&stru_1000F6658 table:0];

    uint64_t v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"GENERIC_SUBMIT_ERROR_MESSAGE" value:&stru_1000F6658 table:0];

    unsigned int v8 = +[FBALog appHandle];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1000A4700(a1);
    }

    id v9 = +[UIAlertController alertControllerWithTitle:v5 message:v7 preferredStyle:1];
    id v10 = +[NSBundle mainBundle];
    unsigned int v11 = [v10 localizedStringForKey:@"OK" value:&stru_1000F6658 table:0];
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_10000C9AC;
    v38[3] = &unk_1000F2818;
    v38[4] = *(void *)(a1 + 40);
    id v39 = v3;
    unsigned int v12 = +[UIAlertAction actionWithTitle:v11 style:0 handler:v38];
    [v9 addAction:v12];

    [*(id *)(a1 + 40) presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    [*(id *)(a1 + 40) _stopSpinner];
    int v13 = +[FBALog appHandle];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      id v14 = [*(id *)(a1 + 40) formResponse];
      v15 = [v14 ID];
      LODWORD(buf) = 67109120;
      HIDWORD(buf) = [v15 intValue];
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Submission callback for FR %d: success", (uint8_t *)&buf, 8u);
    }
    SystemSoundID v16 = *(_DWORD *)(a1 + 64);
    if (v16)
    {
      Main = CFRunLoopGetMain();
      AudioServicesAddSystemSoundCompletion(v16, Main, 0, (AudioServicesSystemSoundCompletionProc)sub_1000051A0, 0);
      AudioServicesPlaySystemSound(*(_DWORD *)(a1 + 64));
    }
    id v18 = +[FBADraftManager sharedInstance];
    [v18 resetViewControllers];

    os_activity_scope_state_s v19 = +[NSBundle mainBundle];
    v20 = [v19 localizedStringForKey:@"THANK_YOU" value:&stru_1000F6658 table:0];
    unsigned int v21 = +[NSBundle mainBundle];
    id v22 = [v21 localizedStringForKey:@"THANK_YOU_MESSAGE" value:&stru_1000F6658 table:0];
    id v23 = +[UIAlertController alertControllerWithTitle:v20 message:v22 preferredStyle:1];

    v24 = *(void **)(a1 + 48);
    if (v24 && [v24 hasAttachmentsCollecting])
    {
      long long v25 = +[NSBundle mainBundle];
      v26 = [v25 localizedStringForKey:@"THANK_YOU_SUBMITTING_MESSAGE" value:&stru_1000F6658 table:0];
      [v23 setMessage:v26];
    }
    [*(id *)(a1 + 40) presentViewController:v23 animated:1 completion:0];
    v27 = [*(id *)(a1 + 40) formResponse];
    id v28 = [v27 ID];
    unsigned int v29 = [v28 intValue];

    objc_initWeak(&buf, *(id *)(a1 + 40));
    dispatch_time_t v30 = dispatch_time(0, 3000000000);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10000C9BC;
    v33[3] = &unk_1000F2868;
    uint64_t v31 = *(void *)(a1 + 40);
    id v34 = v23;
    uint64_t v35 = v31;
    id v32 = v23;
    objc_copyWeak(&v36, &buf);
    unsigned int v37 = v29;
    dispatch_after(v30, (dispatch_queue_t)&_dispatch_main_q, v33);
    objc_destroyWeak(&v36);

    objc_destroyWeak(&buf);
  }
}

id sub_10000C9AC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) closeWithError:*(void *)(a1 + 40) completion:0];
}

void sub_10000C9BC(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  id v2 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000CA88;
  v3[3] = &unk_1000F2840;
  objc_copyWeak(&v4, (id *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 56);
  [v2 dismissViewControllerAnimated:1 completion:v3];
  objc_destroyWeak(&v4);
}

void sub_10000CA74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10000CA88(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setDevicesController:0];

  id v4 = +[FBALog appHandle];
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a1 + 40);
    v15[0] = 67109120;
    v15[1] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "did dismiss feedback draft editor for form %d", (uint8_t *)v15, 8u);
  }

  id v6 = objc_loadWeakRetained(v2);
  id v7 = [v6 launchAction];
  unsigned int v8 = [v7 isCaptive];

  if (v8)
  {
    id v9 = +[FBADraftManager sharedInstance];
    id v10 = objc_loadWeakRetained(v2);
    unsigned int v11 = [v10 formResponse];
    unsigned int v12 = [v11 contentItem];
    id v13 = objc_loadWeakRetained(v2);
    id v14 = [v13 launchAction];
    [v9 showModalFeedbackControllerForContentItem:v12 launchAction:v14];
  }
}

void sub_10000D36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000D394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateCachedCandidateStubsCount];
}

void sub_10000D580(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resigning active: Saving form.", buf, 2u);
  }

  id v3 = [*(id *)(a1 + 32) firstResponder];
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v4 = v3;
      int v5 = [v4 superviewWithClass:objc_opt_class()];
      [v5 saveAnswer];
      id v6 = +[FBALog appHandle];
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)unsigned int v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Found and saved in-progress answer.", v8, 2u);
      }
    }
  }
  id v7 = +[FBADraftManager sharedInstance];
  [v7 saveDraftIfNeeded];
}

id sub_10000DABC(uint64_t a1)
{
  return [*(id *)(a1 + 32) closeDraftAndDelete:0 withError:0 completion:0];
}

void sub_10000DAD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!*(unsigned char *)(a1 + 40))
  {
    unsigned int v8 = *(void **)(a1 + 32);
    id v9 = 0;
LABEL_8:
    [v8 closeDraftAndDelete:1 withError:0 completion:v9];
    goto LABEL_9;
  }
  id v4 = +[NSProcessInfo processInfo];
  int v5 = [v4 environment];
  id v6 = [v5 objectForKeyedSubscript:@"FBK_UNIT_TEST"];

  if (!v6)
  {
    unsigned int v8 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10000DC24;
    v10[3] = &unk_1000F28B0;
    char v11 = *(unsigned char *)(a1 + 41);
    id v9 = v10;
    goto LABEL_8;
  }
  id v7 = +[FBALog appHandle];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unit test in progress, cannot log out.", buf, 2u);
  }

LABEL_9:
}

id sub_10000DC24(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Draft deleted, exiting restricted mode.", v4, 2u);
  }

  return +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:*(unsigned __int8 *)(a1 + 32)];
}

void sub_10000ED8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10000EDB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _resizeAndScrollTableAfterTextChangeInTextView:*(void *)(a1 + 40)];
}

void sub_10000EDBC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained tableView];
  id v4 = objc_loadWeakRetained(v2);
  [v4 keyboardHeight];
  [v1 scrollTableToAvoidKeyboardInTableView:v3];
}

void sub_10000F5BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 endEditing:1];

  id v9 = [*(id *)(a1 + 32) navigationController];
  id v3 = [v9 topViewController];
  id v4 = v3;
  if (v3 == *(void **)(a1 + 32))
  {
    int v5 = [v3 navigationItem];
    id v6 = [v5 leftBarButtonItem];
    unsigned int v7 = [v6 isEnabled];

    if (!v7) {
      return;
    }
    unsigned int v8 = *(void **)(a1 + 32);
    id v9 = [v8 navigationItem];
    id v4 = [v9 leftBarButtonItem];
    [v8 dismiss:v4];
  }
}

void sub_10000FCD4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

id sub_100010464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result = [*(id *)(a1 + 32) intersectsIndexesInRange:];
  if ((result & 1) == 0)
  {
    unsigned int v8 = *(void **)(a1 + 40);
    return [v8 removeAttribute:NSBackgroundColorAttributeName range:a3 a4];
  }
  return result;
}

id sub_100010754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result = [*(id *)(a1 + 32) intersectsIndexesInRange:];
  if (result)
  {
    unsigned int v8 = *(void **)(a1 + 40);
    return [v8 removeAttribute:NSBackgroundColorAttributeName range:a3, a4];
  }
  return result;
}

void sub_100011018(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) shortDescription];
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Confirmed closing Feedback [%{public}@].", (uint8_t *)&v5, 0xCu);
  }
  [*(id *)(a1 + 40) closeFeedbackWithItem:*(void *)(a1 + 32)];
  id v4 = [*(id *)(a1 + 40) presentedViewController];

  if (v4) {
    [*(id *)(a1 + 40) dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100011110(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) shortDescription];
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Cancelled closing Feedback [%{public}@].", (uint8_t *)&v5, 0xCu);
  }
  id v4 = [*(id *)(a1 + 40) presentedViewController];

  if (v4) {
    [*(id *)(a1 + 40) dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100011200(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = [*(id *)(a1 + 40) tableView];
    [v2 deselectRowAtIndexPath:*(void *)(a1 + 32) animated:1];
  }
}

void sub_10001137C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[FBALog appHandle];
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      int v13 = 138543362;
      id v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Closed Feedback failed with error [%{public}@].", (uint8_t *)&v13, 0xCu);
    }

    id v4 = [v3 userInfo];
    id v6 = [v4 objectForKeyedSubscript:NSLocalizedDescriptionKey];
    unsigned int v7 = [v4 objectForKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];
    unsigned int v8 = +[UIAlertController alertControllerWithTitle:v6 message:v7 preferredStyle:1];

    uint64_t v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"OK" value:&stru_1000F6658 table:0];
    char v11 = +[UIAlertAction actionWithTitle:v10 style:1 handler:0];
    [v8 addAction:v11];

    [*(id *)(a1 + 32) presentViewController:v8 animated:1 completion:0];
  }
  else if (v5)
  {
    unsigned int v12 = [*(id *)(a1 + 40) shortDescription];
    int v13 = 138543362;
    id v14 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Closed Feedback [%{public}@].", (uint8_t *)&v13, 0xCu);
  }
}

void sub_10001216C(uint64_t a1, void *a2)
{
  v11[0] = NSLinkAttributeName;
  id v3 = a2;
  id v4 = [v3 URL];
  v12[0] = v4;
  v11[1] = NSForegroundColorAttributeName;
  BOOL v5 = +[UIColor blueColor];
  _DWORD v11[2] = NSUnderlineStyleAttributeName;
  v12[1] = v5;
  v12[2] = &off_1000FA860;
  id v6 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:3];

  [*(id *)(a1 + 32) beginEditing];
  unsigned int v7 = *(void **)(a1 + 32);
  id v8 = [v3 range];
  uint64_t v10 = v9;

  [v7 addAttributes:v6 range:v8];
  [*(id *)(a1 + 32) endEditing];
}

void sub_100012EB4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) fileSizeLabel];
  id v4 = v3;
  if (v2)
  {
    [v3 setAlpha:0.0];

    BOOL v5 = [*(id *)(a1 + 32) fileNameLabel];
    [v5 setAlpha:0.0];

    id v6 = [*(id *)(a1 + 32) icon];
    [v6 setAlpha:0.0];

    unsigned int v7 = [*(id *)(a1 + 32) debugLabel];
    double v8 = 1.0;
  }
  else
  {
    [v3 setAlpha:1.0];

    uint64_t v9 = [*(id *)(a1 + 32) fileNameLabel];
    [v9 setAlpha:1.0];

    uint64_t v10 = [*(id *)(a1 + 32) icon];
    [v10 setAlpha:1.0];

    unsigned int v7 = [*(id *)(a1 + 32) debugLabel];
    double v8 = 0.0;
  }
  id v11 = v7;
  [v7 setAlpha:v8];
}

void sub_1000135C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) dedSharingDevice];
  [v1 didPinPairWithDevice:v2];
}

void sub_100014FE0(id a1)
{
  uint64_t v1 = objc_alloc_init(FBANetworkMonitor);
  id v2 = (void *)qword_100123FA0;
  qword_100123FA0 = (uint64_t)v1;

  id v3 = (void *)qword_100123FA0;

  _[v3 updateCache];
}

void sub_1000152F8(id a1)
{
  qword_100123FB0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "login");

  _objc_release_x1();
}

void sub_100015818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100015840(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = +[FBKData sharedInstance];
    id v4 = [v3 loginManager];
    id v5 = [v4 loginState];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v9 = WeakRetained;
    if (v5 == (id)1)
    {
      [WeakRetained dismissViewControllerAnimated:1 completion:&stru_1000F2A48];
    }
    else
    {
      double v8 = [*(id *)(a1 + 32) signInViewController];
      [v9 presentViewController:v8 animated:1 completion:&stru_1000F2A68];
    }
  }
  else
  {
    unsigned int v7 = sub_1000159F8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000A4918(v7);
    }
  }
}

void sub_100015948(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FBADidDismissLegalAgreementNotification" object:0];
}

void sub_1000159A0(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FBADidDismissLegalAgreementNotification" object:0];
}

id sub_1000159F8()
{
  if (qword_100123FC8 != -1) {
    dispatch_once(&qword_100123FC8, &stru_1000F2AD8);
  }
  v0 = (void *)qword_100123FC0;

  return v0;
}

uint64_t sub_100015F54(uint64_t a1, int a2, char a3)
{
  if (a2)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = &off_1000F3C78;
  }
  else if ((a3 & 2) != 0)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = &off_1000F3C80;
  }
  else
  {
    if ((a3 & 4) == 0)
    {
      id v6 = +[NSBundle mainBundle];
      uint64_t v7 = FBKCommonStrings;
      double v8 = [v6 localizedStringForKey:@"GENERIC_LOGIN_FAILURE_TITLE" value:&stru_1000F6658 table:FBKCommonStrings];
      id v9 = +[NSBundle mainBundle];
      uint64_t v10 = [v9 localizedStringForKey:@"GENERIC_LOGIN_FAILURE_MESSAGE" value:&stru_1000F6658 table:v7];
      id v11 = +[UIAlertController alertControllerWithTitle:v8 message:v10 preferredStyle:1];

      unsigned int v12 = +[NSBundle mainBundle];
      int v13 = [v12 localizedStringForKey:@"OK" value:&stru_1000F6658 table:0];
      id v14 = +[UIAlertAction actionWithTitle:v13 style:0 handler:0];
      [v11 addAction:v14];

      [*(id *)(a1 + 32) presentViewController:v11 animated:1 completion:0];
      goto LABEL_9;
    }
    id v4 = *(void **)(a1 + 32);
    id v5 = &off_1000F3C88;
  }
  [v4 performSegueWithIdentifier:*v5 sender:v4];
LABEL_9:
  [*(id *)(a1 + 32) showLogInUI];
  v15 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v15();
}

void sub_1000166A8(id a1)
{
  qword_100123FC0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "login-vc");

  _objc_release_x1();
}

id sub_100016C8C()
{
  if (qword_100123FE8 != -1) {
    dispatch_once(&qword_100123FE8, &stru_1000F2B38);
  }
  v0 = (void *)qword_100123FE0;

  return v0;
}

id sub_100017A30(uint64_t a1)
{
  return _[*(id *)(a1 + 32) fetchNextBatch];
}

void sub_100017BBC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_100123FD0;
  qword_100123FD0 = (uint64_t)v1;

  id v3 = (void *)qword_100123FD0;

  [v3 setDateFormat:@"YYYY-MM-dd HH:mm:ss'.'SSSSSSXX"];
}

void sub_100017C10(id a1)
{
  qword_100123FE0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "log-view");

  _objc_release_x1();
}

void sub_100017C54(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_100017C7C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100018460(id a1)
{
  id v1 = (objc_class *)objc_opt_class();
  qword_100123FF8 = NSStringFromClass(v1);

  _objc_release_x1();
}

void sub_100019854(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 128));
  _Unwind_Resume(a1);
}

void sub_1000198A0(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained hideSpinner];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateBarButton];

  id v4 = objc_loadWeakRetained(v1);
  [v4 updateHeader];

  id v5 = objc_loadWeakRetained(v1);
  [v5 updateContent];

  id v7 = objc_loadWeakRetained(v1);
  id v6 = [v7 tableView];
  [v6 reloadData];
}

void sub_10001994C(uint64_t a1)
{
  id v2 = +[FBKData sharedInstance];
  id v3 = [*(id *)(a1 + 32) contentItem];
  id v4 = [v3 feedback];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100019A20;
  v5[3] = &unk_1000F2B80;
  id v6 = *(id *)(a1 + 40);
  [v2 fetchFeedbackStatusForFeedback:v4 completion:v5];
}

uint64_t sub_100019A20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100019A30(uint64_t a1)
{
  id v2 = +[FBKData sharedInstance];
  id v3 = [*(id *)(a1 + 32) contentItem];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100019B38;
  v5[3] = &unk_1000F2BF8;
  objc_copyWeak(&v8, (id *)(a1 + 56));
  id v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  id v7 = *(id *)(a1 + 48);
  [v2 refreshFormResponseStubFromContentItem:v3 completion:v5];

  objc_destroyWeak(&v8);
}

void sub_100019B24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100019B38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v6)
  {
LABEL_9:
    if ([*(id *)(a1 + 32) shouldShowStatus]) {
      uint64_t v20 = *(void *)(a1 + 40);
    }
    else {
      uint64_t v20 = *(void *)(a1 + 48);
    }
    (*(void (**)(void))(v20 + 16))();
    goto LABEL_13;
  }
  unsigned int v8 = [v6 isFBAErrorWithCode:-1010];
  uint64_t v9 = +[FBALog appHandle];
  uint64_t v10 = v9;
  if (!v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000A4FCC(a1, v10);
    }

    id v11 = +[NSBundle mainBundle];
    unsigned int v12 = [v11 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_TITLE" value:&stru_1000F6658 table:0];
    int v13 = +[NSBundle mainBundle];
    id v14 = [v13 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    v15 = +[UIAlertController alertControllerWithTitle:v12 message:v14 preferredStyle:1];

    SystemSoundID v16 = +[NSBundle mainBundle];
    v17 = [v16 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100019DEC;
    v21[3] = &unk_1000F2BD0;
    objc_copyWeak(&v22, (id *)(a1 + 56));
    id v18 = +[UIAlertAction actionWithTitle:v17 style:1 handler:v21];
    [v15 addAction:v18];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained presentViewController:v15 animated:1 completion:0];

    objc_destroyWeak(&v22);
    goto LABEL_9;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "FormResponseStub fetched has been deleted. Ignoring", buf, 2u);
  }

LABEL_13:
}

void sub_100019DD4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100019DEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_100019EBC;
  v6[3] = &unk_1000F2688;
  objc_copyWeak(&v7, v4);
  [WeakRetained dismissViewControllerAnimated:1 completion:v6];

  objc_destroyWeak(&v7);
}

void sub_100019EA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100019EBC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained splitViewController];

  [v2 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
}

void sub_100019F1C(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 deletedObjects];
  unsigned int v4 = [v3 containsObject:*(void *)(a1 + 32)];

  if (v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v6 = [WeakRetained splitViewController];

    [v6 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
    goto LABEL_7;
  }
  id v7 = [v10 updatedObjects];
  if ([v7 containsObject:*(void *)(a1 + 32)])
  {
  }
  else
  {
    unsigned int v8 = [v10 refreshedObjects];
    unsigned int v9 = [v8 containsObject:*(void *)(a1 + 32)];

    if (!v9) {
      goto LABEL_7;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_7:
}

void sub_10001A3CC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_100124000;
  qword_100124000 = (uint64_t)v1;

  [(id)qword_100124000 setDateStyle:3];
  id v3 = (void *)qword_100124000;

  _[v3 setTimeStyle:2];
}

void sub_10001A788(uint64_t a1)
{
  id v3 = +[FBADraftManager sharedInstance];
  id v2 = [*(id *)(a1 + 32) contentItem];
  [v3 beginFeedbackWithDraft:v2];
}

id sub_10001A7F8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) deleteDraft:*(void *)(a1 + 32) completion:0];
}

uint64_t sub_10001AB08(uint64_t a1)
{
  id v2 = +[FBADraftManager sharedInstance];
  id v3 = [*(id *)(a1 + 32) contentItem];
  [v2 deleteDraftFromContentItem:v3 dismissViewOnCompletion:0];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

id sub_10001AB9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:*(void *)(a1 + 40)];
}

void sub_10001B028(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "performing batch updates during size change", v4, 2u);
  }

  id v3 = [*(id *)(a1 + 32) tableView];
  [v3 performBatchUpdates:&stru_1000F2CB0 completion:&stru_1000F2CF0];
}

void sub_10001B804(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[FBALog appHandle];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "background login on launch, success ? [%d]", (uint8_t *)v4, 8u);
  }
}

void sub_10001B9F8(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    id v3 = sub_10001BBC8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = [*(id *)(a1 + 32) biometricsState];
      int v14 = 134217984;
      id v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Application is active and logged in. Biometric state [%lu]", (uint8_t *)&v14, 0xCu);
    }

    [*(id *)(a1 + 32) _startBiometricsTimer];
    id v5 = +[FBKData sharedInstance];
    uint64_t v6 = [v5 currentUser];
    if (v6)
    {
      id v7 = (void *)v6;
      unsigned int v8 = +[FBADraftManager sharedInstance];
      unsigned __int8 v9 = [v8 hasOpenDraft];

      if ((v9 & 1) == 0)
      {
        id v10 = +[FBADraftManager sharedInstance];
        [v10 reloadApp];

        id v11 = +[NSUserDefaults standardUserDefaults];
        unsigned int v12 = [v11 BOOLForKey:FBKPushNotificationsEnabled];

        if (!v12) {
          return;
        }
        int v13 = +[FBANotificationManager sharedManager];
        [v13 requestPermission];
        goto LABEL_11;
      }
    }
    else
    {
    }
    int v13 = +[FBALog appHandle];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      LOWORD(v14) = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Application became active, but there's no user or a modal draft/feedback is presented. Will not reload.", (uint8_t *)&v14, 2u);
    }
LABEL_11:
  }
}

id sub_10001BBC8()
{
  if (qword_100124028 != -1) {
    dispatch_once(&qword_100124028, &stru_1000F2FA8);
  }
  v0 = (void *)qword_100124020;

  return v0;
}

void sub_10001C53C(uint64_t a1)
{
  BOOL v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Will authenticate with Launch Action", buf, 2u);
  }

  id v3 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10001C640;
  v7[3] = &unk_1000F2DB0;
  id v8 = v3;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void **)(a1 + 56);
  id v9 = v4;
  uint64_t v10 = v5;
  id v11 = v6;
  [v8 logOutIfNeededAndRun:v7];
}

void sub_10001C640(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10001C70C;
  v4[3] = &unk_1000F2D88;
  v4[4] = *(void *)(a1 + 48);
  id v5 = v2;
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 56);
  [v5 interactiveStartupWithLaunchAction:v3 completion:v4];
}

uint64_t sub_10001C70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(a1 + 32) handleInteractiveLoginResultWithLoginManager:*(void *)(a1 + 40) pendingUI:a3 startupFailures:a2 skipBiometrics:1];
  [*(id *)(a1 + 32) updateHomeScreenVisibilityFromLaunchAction:*(void *)(a1 + 48)];
  id v4 = +[FBADraftManager sharedInstance];
  [v4 respondToLaunchAction:*(void *)(a1 + 48)];

  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_10001C7A0(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v3 = +[FBALog newURLActionActivity];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001C898;
    block[3] = &unk_1000F2DD8;
    id v4 = *(void **)(a1 + 40);
    block[4] = *(void *)(a1 + 32);
    id v8 = v4;
    id v9 = *(id *)(a1 + 48);
    os_activity_apply(v3, block);
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      id v6 = *(void (**)(void))(v5 + 16);
      v6();
    }
  }
}

uint64_t sub_10001C898(uint64_t a1)
{
  [*(id *)(a1 + 32) updateHomeScreenVisibilityFromLaunchAction:*(void *)(a1 + 40)];
  BOOL v2 = +[FBADraftManager sharedInstance];
  [v2 respondToLaunchAction:*(void *)(a1 + 40)];

  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_10001CB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001CBB0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001CBC0(uint64_t a1)
{
}

id sub_10001CBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) handleInteractiveLoginResultWithLoginManager:*(void *)(a1 + 32) pendingUI:a3 startupFailures:a2];
}

void sub_10001D2EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001D484(uint64_t a1)
{
  BOOL v2 = (id *)(a1 + 32);
  if ([*(id *)(a1 + 32) biometricsState] == (id)13)
  {
    uint64_t v3 = sub_10001BBC8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1000A51F8(v2, v3);
    }
    goto LABEL_20;
  }
  uint64_t v3 = [*v2 lastUsedLAContext];
  id v4 = +[UIApplication sharedApplication];
  id v5 = [v4 applicationState];

  id v6 = sub_10001BBC8();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [*v2 biometricsState];
    int v14 = 134218240;
    id v15 = v7;
    __int16 v16 = 1024;
    BOOL v17 = v5 == 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Biometrics evaluation timer fired. Current state [%lu], Active? [%i]", (uint8_t *)&v14, 0x12u);
  }

  if (!v5 && [*(id *)(a1 + 40) isEqual:v3])
  {
    if ([*v2 biometricsState] == (id)3)
    {
      id v8 = sub_10001BBC8();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1000A52B4();
      }

      id v9 = *v2;
      uint64_t v10 = 4;
LABEL_16:
      [v9 setBiometricsState:v10];
      goto LABEL_20;
    }
    id v11 = [*v2 biometricsState];
    unsigned int v12 = sub_10001BBC8();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);
    if (v11 == (id)9)
    {
      if (v13) {
        sub_1000A52E8();
      }

      id v9 = *v2;
      uint64_t v10 = 10;
      goto LABEL_16;
    }
    if (v13) {
      sub_1000A531C(v2);
    }
  }
LABEL_20:
}

void sub_10001DC60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  _DWORD v11[2] = sub_10001DD3C;
  void v11[3] = &unk_1000F27C8;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  id v12 = v7;
  uint64_t v13 = v8;
  id v14 = v5;
  id v15 = v6;
  id v9 = v6;
  id v10 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
}

void sub_10001DD3C(uint64_t a1)
{
  BOOL v2 = _os_activity_create((void *)&_mh_execute_header, "Biometric callback", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10001DE18;
  v6[3] = &unk_1000F27C8;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  id v7 = v3;
  uint64_t v8 = v4;
  id v9 = v5;
  id v10 = *(id *)(a1 + 56);
  os_activity_apply(v2, v6);
}

void sub_10001DE18(uint64_t a1)
{
  BOOL v2 = sub_10001BBC8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Biometrics evaluation callback", buf, 2u);
  }

  id v3 = sub_10001BBC8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_1000A53D0(a1, v3);
  }

  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) lastUsedLAContext];
  LOBYTE(v4) = [v4 isEqual:v5];

  if (v4)
  {
    [*(id *)(a1 + 40) setBiometricsState:6];
    id v6 = +[UIApplication sharedApplication];
    id v7 = [v6 applicationState];

    if (v7 == (id)2)
    {
      uint64_t v8 = sub_10001BBC8();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int16 v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Biometrics evaluation completed in background", v16, 2u);
      }

      id v9 = *(void **)(a1 + 40);
      uint64_t v10 = 7;
    }
    else
    {
      id v12 = [*(id *)(a1 + 48) objectForKeyedSubscript:&off_1000FA8D8];
      unsigned int v13 = [v12 BOOLValue];

      if (v13)
      {
        id v9 = *(void **)(a1 + 40);
        uint64_t v10 = 13;
      }
      else
      {
        id v14 = *(void **)(a1 + 56);
        if (v14)
        {
          if ([v14 code] == (id)-2)
          {
            id v9 = *(void **)(a1 + 40);
            uint64_t v10 = 8;
          }
          else
          {
            id v15 = [*(id *)(a1 + 56) code];
            id v9 = *(void **)(a1 + 40);
            if (v15 == (id)-4) {
              uint64_t v10 = 9;
            }
            else {
              uint64_t v10 = 11;
            }
          }
        }
        else
        {
          id v9 = *(void **)(a1 + 40);
          uint64_t v10 = 12;
        }
      }
    }
    [v9 setBiometricsState:v10];
  }
  else
  {
    id v11 = sub_10001BBC8();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Biometrics handler context does not match last used context. Ignoring result", v17, 2u);
    }
  }
}

void sub_10001E554(id a1, NSError *a2)
{
  BOOL v2 = a2;
  id v3 = +[FBALog appHandle];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1000A5584(v2);
  }
}

uint64_t sub_10001E5B0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqualToString:FBKPushItemTypeAnnouncement])
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v2 = *(id *)(a1 + 40);
    }
    else
    {
      id v2 = [*(id *)(a1 + 48) instantiateViewControllerWithIdentifier:@"FBAAnnouncementViewController"];
    }
    uint64_t v4 = v2;
    id v5 = [*(id *)(a1 + 56) api];
    uint64_t v6 = *(void *)(a1 + 64);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10001E744;
    v9[3] = &unk_1000F2EE0;
    id v10 = v4;
    id v11 = *(id *)(a1 + 40);
    id v12 = *(id *)(a1 + 72);
    uint64_t v7 = *(void *)(a1 + 80);
    id v3 = v4;
    [v5 updateAnnouncementWithID:v6 success:v9 error:v7];

    goto LABEL_8;
  }
  if ([*(id *)(a1 + 32) isEqualToString:FBKPushItemTypeFollowup])
  {
    id v3 = [*(id *)(a1 + 56) loginManager];
    [v3 runAfterLogin:&stru_1000F2F20];
LABEL_8:
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 88) + 16))();
}

void sub_10001E744(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSOperationQueue mainQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10001E834;
  v6[3] = &unk_1000F27C8;
  id v7 = a1[4];
  id v8 = v3;
  id v9 = a1[5];
  id v10 = a1[6];
  id v5 = v3;
  [v4 addOperationWithBlock:v6];
}

void sub_10001E834(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) contentItem];
  [*(id *)(a1 + 32) setContentItem:v2];

  if (*(void *)(a1 + 32) != *(void *)(a1 + 48))
  {
    [*(id *)(a1 + 56) resetViewControllers:1];
    dispatch_time_t v3 = dispatch_time(0, 1000000000);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    _DWORD v4[2] = sub_10001E92C;
    v4[3] = &unk_1000F26D8;
    id v5 = *(id *)(a1 + 56);
    id v6 = *(id *)(a1 + 32);
    dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

void sub_10001E92C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [objc_alloc((Class)UINavigationController) initWithRootViewController:*(void *)(a1 + 40)];
  [v1 showDetailViewController:v2 sender:0];
}

void sub_10001E994(id a1, unint64_t a2)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1000A560C();
  }
}

void sub_10001EA38(id a1)
{
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 infoDictionary];
  dispatch_time_t v3 = [v2 objectForKeyedSubscript:UISupportedInterfaceOrientationsKey];

  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v14 = v3;
      id v4 = v3;
      id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (!v5) {
        goto LABEL_23;
      }
      id v6 = v5;
      uint64_t v7 = *(void *)v18;
      while (1)
      {
        id v8 = 0;
        do
        {
          if (*(void *)v18 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v8);
          if (objc_msgSend(v9, "isEqualToString:", @"UIInterfaceOrientationPortrait", v14))
          {
            uint64_t v10 = qword_100124010 | 2;
LABEL_16:
            qword_100124010 = v10;
            goto LABEL_17;
          }
          if ([v9 isEqualToString:@"UIInterfaceOrientationPortraitUpsideDown"])
          {
            uint64_t v10 = qword_100124010 | 4;
            goto LABEL_16;
          }
          if ([v9 isEqualToString:@"UIInterfaceOrientationLandscapeLeft"])
          {
            uint64_t v10 = qword_100124010 | 0x10;
            goto LABEL_16;
          }
          if ([v9 isEqualToString:@"UIInterfaceOrientationLandscapeRight"])
          {
            uint64_t v10 = qword_100124010 | 8;
            goto LABEL_16;
          }
          id v11 = +[FBALog appHandle];
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
            sub_1000A5674(&buf, v16, v11);
          }

LABEL_17:
          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v12 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
        id v6 = v12;
        if (!v12)
        {
LABEL_23:

          dispatch_time_t v3 = v14;
          goto LABEL_27;
        }
      }
    }
  }
  unsigned int v13 = +[FBALog appHandle];
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    sub_1000A5640();
  }

  qword_100124010 = 30;
LABEL_27:
}

void sub_10001EE60(id a1, BOOL a2)
{
  BOOL v2 = a2;
  dispatch_time_t v3 = +[FBALog appHandle];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "tried to login in background, success ? %d", (uint8_t *)v4, 8u);
  }
}

void sub_10001F214(id a1)
{
  qword_100124020 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "bio");

  _objc_release_x1();
}

void sub_10001F258(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10001F274(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_100020AE4()
{
  if (qword_100124038 != -1) {
    dispatch_once(&qword_100124038, &stru_1000F2FC8);
  }
  v0 = (void *)qword_100124030;

  return v0;
}

void sub_100020B38(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  BOOL v2 = (void *)qword_100124030;
  qword_100124030 = (uint64_t)v1;

  [(id)qword_100124030 setDateStyle:3];
  dispatch_time_t v3 = (void *)qword_100124030;

  _[v3 setTimeStyle:1];
}

id sub_100021440(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removeObserver:a2];
}

void sub_1000218CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100021918(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = [WeakRetained refreshControl];
  [v2 endRefreshing];

  id v3 = +[FBKData sharedInstance];
  [v3 beginObservingAllUploadTasks];
}

void sub_10002198C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (([WeakRetained isViewLoaded] & 1) == 0) {
    goto LABEL_18;
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = [v6 view];
  id v8 = [v7 window];

  if (v8)
  {
    id v9 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v10 = [v9 inbox];
    id v11 = [v10 type];

    if (v11 == (id)3)
    {
      id v12 = [v3 insertedObjects];
      id WeakRetained = [v12 ded_selectItemsPassingTest:&stru_1000F3040];

      unsigned int v13 = [v3 deletedObjects];
      id v14 = [v13 ded_selectItemsPassingTest:&stru_1000F3060];

      id v15 = NSStringFromSelector("localSubmissionStage");
      __int16 v16 = [v3 updatedObjects];
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472;
      v34[2] = sub_100021DF4;
      v34[3] = &unk_1000F3088;
      id v17 = v15;
      id v35 = v17;
      long long v18 = [v16 ded_selectItemsPassingTest:v34];

      long long v19 = [v3 refreshedObjects];
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_100021E7C;
      v32[3] = &unk_1000F3088;
      id v33 = v17;
      id v20 = v17;
      unsigned int v21 = [v19 ded_selectItemsPassingTest:v32];

      if ([WeakRetained count]
        || [v14 count]
        || [v21 count]
        || [v18 count])
      {
        id v22 = objc_loadWeakRetained(v4);
        [v22 reloadView];
      }
      goto LABEL_17;
    }
    id v23 = [*(id *)(a1 + 32) sortedInboxItems];
    id WeakRetained = +[NSSet setWithArray:v23];

    v24 = [v3 insertedObjects];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_100021F04;
    v31[3] = &unk_1000F30B0;
    v31[4] = *(void *)(a1 + 32);
    id v14 = [v24 ded_selectItemsPassingTest:v31];

    if (![v14 count])
    {
      long long v25 = [v3 updatedObjects];
      if (([v25 intersectsSet:WeakRetained] & 1) == 0)
      {
        v26 = [v3 refreshedObjects];
        if (![v26 intersectsSet:WeakRetained])
        {
          unsigned int v29 = [v3 deletedObjects];
          unsigned __int8 v30 = [v29 intersectsSet:WeakRetained];

          if ((v30 & 1) == 0) {
            goto LABEL_16;
          }
          goto LABEL_15;
        }
      }
    }
LABEL_15:
    id v27 = objc_loadWeakRetained(v4);
    [v27 reloadView];

LABEL_16:
    id v28 = objc_loadWeakRetained(v4);
    [v28 updateNewFeedbackButtonState];

LABEL_17:
LABEL_18:
  }
}

BOOL sub_100021D5C(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

BOOL sub_100021DA8(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

BOOL sub_100021DF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v3 changedValues];
    id v5 = [v4 valueForKey:*(void *)(a1 + 32)];
    BOOL v6 = v5 != 0;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

BOOL sub_100021E7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v3 changedValues];
    id v5 = [v4 valueForKey:*(void *)(a1 + 32)];
    BOOL v6 = v5 != 0;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

id sub_100021F04(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = v3;
    BOOL v6 = [v4 inbox];
    uint64_t v7 = [*(id *)(a1 + 32) team];
    id v8 = [v6 predicateForTeam:v7];

    id v9 = [v8 evaluateWithObject:v5];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void sub_1000228F0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v5 = a2;
  id v4 = [v3 activeInboxSource];
  [v4 removeObject:v5];

  [*(id *)(a1 + 32) destroyDraft:v5];
}

void sub_10002327C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000232BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 40));
    [v6 destroyItemAtIndexPath:*(void *)(a1 + 32)];
  }
  v7[2](v7, WeakRetained != 0);
}

void sub_100023784(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSPredicate predicateWithFormat:@"searchText CONTAINS[cd] %@", a2];
  [v2 addObject:v3];
}

id sub_10002484C(void *a1)
{
  id v1 = a1;

  return v1;
}

void sub_1000248E4(id a1)
{
  id v4 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleBody];
  id v1 = +[UIImageSymbolConfiguration configurationPreferringMulticolor];
  uint64_t v2 = [v4 configurationByApplyingConfiguration:v1];
  id v3 = (void *)qword_100124040;
  qword_100124040 = v2;
}

id sub_100024B6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) evaluateWithObject:a2];
}

void sub_100025570(id a1)
{
  id v1 = (objc_class *)objc_opt_class();
  qword_100124058 = NSStringFromClass(v1);

  _objc_release_x1();
}

uint64_t sub_100025F58(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 platform];
  if (!v4) {
    goto LABEL_4;
  }
  id v5 = (void *)v4;
  id v6 = [v3 platform];
  id v7 = [v6 length];

  if (!v7) {
    goto LABEL_4;
  }
  id v8 = [v3 platform];
  unsigned __int8 v9 = [v8 isEqualToString:DEDDevicePlatformUnspecified];

  if ((v9 & 1) == 0)
  {
    id v11 = [v3 platform];
    uint64_t v10 = (uint64_t)[v11 isEqualToString:*(void *)(a1 + 32)];
  }
  else
  {
LABEL_4:
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_100026120(uint64_t a1)
{
  [*(id *)(a1 + 32) setPinPairingInProgress:1];
  if ([*(id *)(a1 + 40) isViewLoaded])
  {
    uint64_t v2 = [*(id *)(a1 + 40) view];
    id v3 = [v2 window];

    if (v3)
    {
      uint64_t v4 = *(void **)(a1 + 48);
      id v5 = (objc_class *)objc_opt_class();
      id v6 = NSStringFromClass(v5);
      id v7 = [v4 instantiateViewControllerWithIdentifier:v6];

      [v7 setDevice:*(void *)(a1 + 56)];
      id v8 = [*(id *)(a1 + 40) navigationController];
      [v8 pushViewController:v7 animated:1];
    }
  }
  unsigned __int8 v9 = +[FBALog ded];
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "pin pairing UI block called on view controller no longer visible", v10, 2u);
  }
}

id sub_100026538(uint64_t a1)
{
  id result = *(id *)(a1 + 32);
  if (result) {
    return _[result pairingViewDidClose];
  }
  return result;
}

void sub_100026C3C(id a1)
{
  qword_100124060 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "debug");

  _objc_release_x1();
}

void sub_100026CD4(id a1)
{
  qword_100124070 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "upload");

  _objc_release_x1();
}

void sub_100026D6C(id a1)
{
  qword_100124080 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "model");

  _objc_release_x1();
}

void sub_100026E04(id a1)
{
  qword_100124090 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "ffu");

  _objc_release_x1();
}

void sub_100026E9C(id a1)
{
  qword_1001240A0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "Client");

  _objc_release_x1();
}

void sub_100026F34(id a1)
{
  qword_1001240B0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "net");

  _objc_release_x1();
}

void sub_100026FCC(id a1)
{
  qword_1001240C0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "Application");

  _objc_release_x1();
}

void sub_100027064(id a1)
{
  qword_1001240D0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "attach");

  _objc_release_x1();
}

void sub_1000270FC(id a1)
{
  qword_1001240E0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "reachability");

  _objc_release_x1();
}

void sub_100027194(id a1)
{
  qword_1001240F0 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "fded");

  _objc_release_x1();
}

void sub_1000275EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100027610(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained dimmingView];
  [v1 setAlpha:1.0];
}

void sub_10002773C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100027758(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained dimmingView];
  [v1 setAlpha:0.0];
}

void sub_100027D20(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:off_100121AF8 object:v3];
}

void sub_100028518(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentedViewController];

  if (v2)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v3 presentedViewController];
    LODWORD(v3) = [v3 canDismissPresentedController:v4];

    if (v3)
    {
      [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
      id v5 = *(void **)(a1 + 32);
      [v5 setPresentedSegueName:0];
    }
  }
}

id sub_100028630(uint64_t a1)
{
  [*(id *)(a1 + 32) setPendingStartupUI:4];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 performSegueWithIdentifier:@"FBALoginFlowModalPresentation" sender:v2];
}

id sub_1000286F4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) createAndShowNonParticipantView];
}

id sub_100028770(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentedViewController];
  if (v2
    && (id v3 = (void *)v2,
        [*(id *)(a1 + 32) presentedSegueName],
        id v4 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v5 = [@"FBAConnectivityErrorPresentation" isEqualToString:v4],
        v4,
        v3,
        (v5 & 1) == 0))
  {
    id v8 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100028880;
    v9[3] = &unk_1000F2518;
    void v9[4] = v8;
    return [v8 dismissViewControllerAnimated:1 completion:v9];
  }
  else
  {
    id v6 = *(void **)(a1 + 32);
    return [v6 performSegueWithIdentifier:@"FBAConnectivityErrorPresentation" sender:v6];
  }
}

id sub_100028880(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSegueWithIdentifier:@"FBAConnectivityErrorPresentation" sender:*(void *)(a1 + 32)];
}

id sub_10002890C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentedViewController];
  if (v2
    && (id v3 = (void *)v2,
        [*(id *)(a1 + 32) presentedSegueName],
        id v4 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v5 = [@"FBAVersionOutdatedPresentation" isEqualToString:v4],
        v4,
        v3,
        (v5 & 1) == 0))
  {
    id v8 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100028A1C;
    v9[3] = &unk_1000F2518;
    void v9[4] = v8;
    return [v8 dismissViewControllerAnimated:1 completion:v9];
  }
  else
  {
    id v6 = *(void **)(a1 + 32);
    return [v6 performSegueWithIdentifier:@"FBAVersionOutdatedPresentation" sender:v6];
  }
}

id sub_100028A1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSegueWithIdentifier:@"FBAVersionOutdatedPresentation" sender:*(void *)(a1 + 32)];
}

void sub_100028AB4(uint64_t a1)
{
  unsigned __int8 v2 = [(id)objc_opt_class() presentsAuthKitUIModally];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v10 = [v3 storyboard];
    id v4 = [*(id *)(a1 + 32) storyboard];
    unsigned __int8 v5 = [v4 instantiateViewControllerWithIdentifier:@"FBALoginViewController"];

    [v5 setPendingStartupUI:*(void *)(a1 + 40)];
    id v6 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v5];
    [v6 setModalPresentationStyle:0];
    [*(id *)(a1 + 32) presentViewController:v6 animated:0 completion:0];
  }
  else
  {
    id v7 = [v3 presentedViewController];

    if (v7)
    {
      if (qword_100124108 != -1) {
        dispatch_once(&qword_100124108, &stru_1000F3378);
      }
      id v8 = qword_100124100;
      if (os_log_type_enabled((os_log_t)qword_100124100, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint8_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Already presenting login view controller", buf, 2u);
      }
    }
    else
    {
      [*(id *)(a1 + 32) setPendingStartupUI:*(void *)(a1 + 40)];
      unsigned __int8 v9 = *(void **)(a1 + 32);
      [v9 performSegueWithIdentifier:@"FBALoginFlowModalPresentation" sender:v9];
    }
  }
}

void sub_100028D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028D48(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained(v1);
    [v3 presentVersionOutdatedUI];
  }
}

void sub_100028E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028E98(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained(v1);
    [v3 displayNonParticipant];
  }
}

void sub_1000290DC(id a1)
{
  qword_100124100 = (uint64_t)os_log_create("com.apple.appleseed.FeedbackAssistant", "split-vc");

  _objc_release_x1();
}

id *sub_100029BC4(id *result, uint64_t a2)
{
  if (a2)
  {
    unsigned __int8 v2 = result;
    id v3 = +[UIImage imageWithData:a2];
    id v4 = [v2[4] deviceIcon];
    [v4 setImage:v3];

    id v5 = v2[4];
    return (id *)[v5 setNeedsDisplay];
  }
  return result;
}

void sub_10002AC28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, id *a12, id *a13, id *a14, id *a15)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak((id *)(v17 - 128));
  _Unwind_Resume(a1);
}

void sub_10002ACE0(uint64_t a1, uint64_t a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsBatchUIEnabled:a2];

  id v5 = objc_loadWeakRetained(v3);
  [v5 updateUIAnimated:1];
}

id sub_10002AD54(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) hasContentItemsToShow];
  id v3 = +[FBALog appHandle];
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Showing cached content", buf, 2u);
    }

    [*(id *)(a1 + 32) updateUI];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "No cached content to show", buf, 2u);
    }
  }
  id v5 = *(void **)(a1 + 32);
  id v6 = +[FBADraftManager sharedInstance];
  [v5 setFBAPreferencesEnabled:[v6 inboxLiteMode] ^ 1];

  id v7 = [*(id *)(a1 + 32) splitViewController];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002AEB8;
  v9[3] = &unk_1000F2518;
  void v9[4] = *(void *)(a1 + 32);
  [v7 drainAndPresentConsentsWithCompletion:v9];

  return [*(id *)(a1 + 32) reloadApp];
}

id sub_10002AEB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadApp];
}

id sub_10002AEC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) runDelayedUrlActionIfNeeded];
}

void sub_10002AEC8(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained runDelayedUrlActionIfNeeded];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateUI];
}

void sub_10002AF28(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setHasLoadedFormItems:1];

  id v3 = objc_loadWeakRetained(v1);
  [v3 runDelayedUrlActionIfNeeded];

  id v4 = objc_loadWeakRetained(v1);
  [v4 updateUI];

  id v5 = objc_loadWeakRetained(v1);
  unsigned int v6 = [v5 userIsEnrolledInAnySeedingProgram];

  if (v6)
  {
    id v7 = +[FBADraftManager sharedInstance];
    [v7 setInboxLiteMode:0];

    id v8 = objc_loadWeakRetained(v1);
    [v8 setFBAPreferencesEnabled:1];
  }
}

void sub_10002B010(uint64_t a1)
{
  [*(id *)(a1 + 32) setFBAPreferencesEnabled:0];
  id v3 = [*(id *)(a1 + 32) splitViewController];
  [v3 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateUI];
}

void sub_10002B084(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateUI];
}

void sub_10002B0C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateUI];
}

void sub_10002B104(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showLoadingView];

  id v3 = objc_loadWeakRetained(v1);
  [v3 setHasLoadedFormItems:0];

  id v4 = objc_loadWeakRetained(v1);
  [v4 setHasFinishedFirstLoad:0];

  id v5 = objc_loadWeakRetained(v1);
  [v5 applySnapshot];

  id v6 = objc_loadWeakRetained(v1);
  id v7 = [v6 splitViewController];
  [v7 setIsPresentingConsentView:0];

  id v9 = objc_loadWeakRetained(v1);
  id v8 = [v9 collectionView];
  [v8 reloadData];
}

void sub_10002B1E8(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained hideLoadingView];

  id v3 = objc_loadWeakRetained(v1);
  [v3 hideSpinner];
}

id sub_10002B680(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removeObserver:a2];
}

void sub_10002B940(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

id sub_10002B978(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) diffableDataSource];
  id v8 = [v7 sectionIdentifierForIndex:[v6 section]];

  if ([v8 isEqualToString:@"smart-mailbox"])
  {
    id v9 = +[FBASmartMailboxCell reuseIdentifier];
    id v10 = [v5 dequeueReusableCellWithReuseIdentifier:v9 forIndexPath:v6];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    id v12 = [WeakRetained smartMailboxes];
    unsigned int v13 = [v12 objectAtIndexedSubscript:[v6 row]];
    [v10 configureWithInbox:v13];

LABEL_5:
    goto LABEL_6;
  }
  if ([v8 isEqualToString:@"enhanced-logging-section"])
  {
    uint64_t v14 = *(void *)(a1 + 40);
    id WeakRetained = [*(id *)(a1 + 32) enhancedLoggingInbox];
    id v10 = [v5 dequeueConfiguredReusableCellWithRegistration:v14 forIndexPath:v6 item:WeakRetained];
    goto LABEL_5;
  }
  if ([v8 isEqualToString:@"batch-ui-section"])
  {
    id v10 = [*(id *)(a1 + 32) batchUICellWithCollectionView:v5 indexPath:v6 reuseIdentifier:@"batch-ui-row"];
  }
  else
  {
    id v16 = [v6 row];
    id v17 = objc_loadWeakRetained((id *)(a1 + 56));
    long long v18 = [v17 inboxes];
    id v19 = [v18 count];

    id v20 = objc_loadWeakRetained((id *)(a1 + 56));
    unsigned int v21 = v20;
    if (v16 >= v19)
    {
      v24 = [v20 teamForIndexPath:v6];

      id v10 = [v5 dequeueConfiguredReusableCellWithRegistration:*(void *)(a1 + 48) forIndexPath:v6 item:v24];
    }
    else
    {
      id v22 = [v20 inboxes];
      id v23 = objc_msgSend(v22, "objectAtIndexedSubscript:", objc_msgSend(v6, "row"));

      id v10 = [v5 dequeueConfiguredReusableCellWithRegistration:*(void *)(a1 + 40) forIndexPath:v6 item:v23];
    }
  }
LABEL_6:

  return v10;
}

id sub_10002BC00(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a2;
  unsigned int v9 = [a3 isEqualToString:UICollectionElementKindSectionHeader];
  uint64_t v10 = 40;
  if (v9) {
    uint64_t v10 = 32;
  }
  id v11 = [v8 dequeueConfiguredReusableSupplementaryViewWithRegistration:*(void *)(a1 + v10) forIndexPath:v7];

  return v11;
}

void sub_10002BD74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10002BD98(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) diffableDataSource];
  id v7 = [v6 sectionIdentifierForIndex:a2];

  if (![v7 isEqualToString:@"smart-mailbox"])
  {
    if ([v7 isEqualToString:@"enhanced-logging-section"])
    {
      id v23 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
      uint64_t v10 = v23;
    }
    else
    {
      unsigned int v24 = [v7 isEqualToString:@"batch-ui-section"];
      id v23 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
      uint64_t v10 = v23;
      if (!v24)
      {
        id v34 = (id *)(a1 + 40);
        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
        id v36 = [WeakRetained sortedTeams];
        [v10 setHeaderMode:((unint64_t)[v36 count]) > 1];

        id v37 = objc_loadWeakRetained(v34);
        id v11 = [v37 teamForSection:a2];

        id v38 = objc_loadWeakRetained(v34);
        LODWORD(v34) = [v38 hasFinishedFirstLoad];

        if (v34) {
          uint64_t v39 = [v11 canStartNewFeedback] ^ 1;
        }
        else {
          uint64_t v39 = 0;
        }
        [v10 setFooterMode:v39];
        id v40 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
        id v41 = +[NSCollectionLayoutDimension estimatedDimension:44.0];
        id v19 = +[NSCollectionLayoutSize sizeWithWidthDimension:v40 heightDimension:v41];

        __int16 v42 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
        unsigned int v43 = +[NSCollectionLayoutDimension estimatedDimension:10.0];
        id v20 = +[NSCollectionLayoutSize sizeWithWidthDimension:v42 heightDimension:v43];

        id v44 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v19 elementKind:UICollectionElementKindSectionHeader alignment:1];
        id v45 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v20 elementKind:UICollectionElementKindSectionFooter alignment:5];
        id v22 = +[NSCollectionLayoutSection sectionWithListConfiguration:v10 layoutEnvironment:v5];
        v48[0] = v44;
        v48[1] = v45;
        int v46 = +[NSArray arrayWithObjects:v48 count:2];
        [v22 setBoundarySupplementaryItems:v46];

        goto LABEL_17;
      }
    }
    [v23 setHeaderMode:0];
    [v10 setFooterMode:0];
    id v22 = +[NSCollectionLayoutSection sectionWithListConfiguration:v10 layoutEnvironment:v5];
    [v22 contentInsets];
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    uint64_t v31 = [*(id *)(a1 + 32) sortedTeams];
    id v32 = [v31 count];

    if (v32 == (id)1) {
      double v33 = 0.0;
    }
    else {
      double v33 = v28;
    }
    [v22 setContentInsets:0.0, v26, v33, v30];
    goto LABEL_18;
  }
  id v8 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
  unsigned int v9 = +[NSCollectionLayoutDimension fractionalHeightDimension:1.0];
  uint64_t v10 = +[NSCollectionLayoutSize sizeWithWidthDimension:v8 heightDimension:v9];

  id v11 = +[NSCollectionLayoutItem itemWithLayoutSize:v10];
  id v12 = [v5 traitCollection];
  unsigned int v13 = [v12 preferredContentSizeCategory];
  BOOL IsAccessibilityCategory = UIContentSizeCategoryIsAccessibilityCategory(v13);

  id v15 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
  double v16 = 80.0;
  if (IsAccessibilityCategory)
  {
    double v16 = 100.0;
    uint64_t v17 = 1;
  }
  else
  {
    uint64_t v17 = 2;
  }
  long long v18 = +[NSCollectionLayoutDimension absoluteDimension:v16];
  id v19 = +[NSCollectionLayoutSize sizeWithWidthDimension:v15 heightDimension:v18];

  id v20 = +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:v19 subitem:v11 count:v17];
  unsigned int v21 = +[NSCollectionLayoutSpacing fixedSpacing:10.0];
  [v20 setInterItemSpacing:v21];

  id v22 = +[NSCollectionLayoutSection sectionWithGroup:v20];
  [v22 setInterGroupSpacing:10.0];
  [v22 setContentInsets:10.0, 20.0, 20.0, 20.0];
LABEL_17:

LABEL_18:

  return v22;
}

void sub_10002C3BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002C3E0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v11 = a2;
  id v6 = a4;
  id v7 = [*(id *)(a1 + 32) sortedTeams];
  id v8 = [v7 count];

  if ((unint64_t)v8 < 2)
  {
    [v11 hide];
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v10 = [WeakRetained teamForIndexPath:v6];

    [v11 configureForTeam:v10];
  }
}

void sub_10002C59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002C5C0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = a2;
  id v16 = +[UIListContentConfiguration groupedFooterConfiguration];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v9 = [WeakRetained teamForIndexPath:v6];

  if ([*(id *)(a1 + 32) hasFinishedFirstLoad]
    && ![v9 canStartNewFeedback])
  {
    id v10 = [v9 teamType];
    id v11 = +[NSBundle mainBundle];
    id v12 = v11;
    if (v10)
    {
      CFStringRef v13 = @"TEAM_MAILBOX_CLOSED_EXPLAIN";
      CFStringRef v14 = @"New feedback for this team has been disabled.";
    }
    else
    {
      CFStringRef v13 = @"MAILBOX_CLOSED_EXPLAIN";
      CFStringRef v14 = @"You are not a member of any active programs.";
    }
    id v15 = [v11 localizedStringForKey:v13 value:v14 table:0];
    [v16 setText:v15];
  }
  else
  {
    [v16 setText:0];
  }
  [v7 setContentConfiguration:v16];
}

void sub_10002C7B0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  unsigned int v9 = [*(id *)(a1 + 32) teamForIndexPath:a3];
  id v10 = +[UIListContentConfiguration valueCellConfiguration];
  id v11 = [v8 displayText];
  [v10 setText:v11];

  id v12 = [v8 unreadCountForTeam:v9];
  if (v12)
  {
    CFStringRef v13 = +[NSString stringWithFormat:@"%ld", v12];
    [v10 setSecondaryText:v13];
  }
  CFStringRef v14 = [v8 icon];
  [v10 setImage:v14];

  [v7 setContentConfiguration:v10];
  id v15 = objc_opt_new();
  id v22 = v15;
  id v16 = +[NSArray arrayWithObjects:&v22 count:1];
  [v7 setAccessories:v16];

  uint64_t v17 = [*(id *)(a1 + 32) data];
  long long v18 = [v17 currentUser];
  LODWORD(v16) = [v18 hasManagedTeams];

  if (v16)
  {
    id v19 = [v8 displayText];
    id v20 = [v9 name];
    unsigned int v21 = +[NSString stringWithFormat:@"%@, %@", v19, v20];
    [v7 setAccessibilityLabel:v21];
  }
  [v7 setAccessibilityTraits:UIAccessibilityTraitButton];
}

void sub_10002CA8C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v24 = a2;
  id v6 = a4;
  id v7 = +[UIListContentConfiguration cellConfiguration];
  id v8 = +[NSBundle mainBundle];
  unsigned int v9 = [v8 localizedStringForKey:@"NEW_FEEDBACK" value:@"New Feedback" table:0];
  [v7 setText:v9];

  id v10 = v6;
  id v11 = [*(id *)(a1 + 32) data];
  id v12 = [v11 currentUser];
  LODWORD(v9) = [v12 hasManagedTeams];

  if (v9)
  {
    CFStringRef v13 = [v10 name];
    CFStringRef v14 = [v7 text];
    id v15 = +[NSString stringWithFormat:@"%@, %@", v13, v14];
    [v24 setAccessibilityLabel:v15];
  }
  [v24 setAccessibilityTraits:UIAccessibilityTraitButton];
  id v16 = [v10 canStartNewFeedback];
  if (v16)
  {
    uint64_t v17 = +[iFBAConstants tintColor];
    long long v18 = [v7 textProperties];
    [v18 setColor:v17];

    +[iFBAConstants tintColor];
  }
  else
  {
    id v19 = +[UIColor lightGrayColor];
    id v20 = [v7 textProperties];
    [v20 setColor:v19];

    +[UIColor lightGrayColor];
  unsigned int v21 = };
  id v22 = [v7 imageProperties];
  [v22 setTintColor:v21];

  [v24 setUserInteractionEnabled:v16];
  id v23 = +[UIImage imageNamed:FBKImageNameNewFeedback];
  [v7 setImage:v23];
  [v24 setContentConfiguration:v7];
}

void sub_10002D648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10002D66C(uint64_t a1)
{
  return [*(id *)(a1 + 32) applySnapshotAnimated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10002D67C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsApplyingSnapshot:0];
}

id sub_10002DA00(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadApp];
}

void sub_10002E3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002E3BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10002E3CC(uint64_t a1)
{
}

void sub_10002E3D4(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  id v6 = [v2 pendingLaunchAction];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10002E490;
  v8[3] = &unk_1000F3530;
  uint64_t v7 = a1[8];
  v8[4] = a1[9];
  [v2 launchNewDraftViewControllerWithBugFormStub:v3 draftItem:v4 surveyBugForm:v5 launchAction:v6 team:v7 completion:v8];
}

void sub_10002E490(uint64_t a1)
{
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setPendingLaunchAction:0];
  uint64_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) collectionView];
  uint64_t v3 = [v2 indexPathsForSelectedItems];
  id v5 = [v3 firstObject];

  if (v5)
  {
    uint64_t v4 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) collectionView];
    [v4 deselectItemAtIndexPath:v5 animated:1];
  }
}

uint64_t sub_10002E550(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10002E5F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) refreshControl];
  [v1 endRefreshing];
}

void sub_10002E768(uint64_t a1, void *a2)
{
  id v11 = a2;
  [*(id *)(a1 + 32) setHasFinishedFirstLoad:1];
  [*(id *)(a1 + 32) didReloadApp];
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = +[UIApplication sharedApplication];
    id v5 = [v4 delegate];

    id v6 = [v11 userInfo];
    uint64_t v7 = [v6 objectForKeyedSubscript:NSLocalizedDescriptionKey];

    id v8 = [v11 userInfo];
    unsigned int v9 = [v8 objectForKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

    if (v7) {
      BOOL v10 = v9 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10) {
      [v5 showSimpleAlertWithErrorTitle:v7 message:v9];
    }

    uint64_t v3 = v11;
  }
}

void sub_10002E96C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) data];
  [v1 beginObservingAllUploadTasks];
}

BOOL sub_10002F5B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 ID];
  id v5 = [*(id *)(a1 + 32) itemID];
  if ([v4 isEqualToNumber:v5])
  {
    id v6 = [v3 type];
    BOOL v7 = [v6 unsignedIntValue] == 4;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

BOOL sub_10002F650(id a1, FBAInbox *a2, unint64_t a3, BOOL *a4)
{
  return (id)[(FBAInbox *)a2 type] == (id)2;
}

void sub_10002F674(uint64_t a1)
{
  uint64_t v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1000A5C4C();
  }

  id v3 = +[NSBundle mainBundle];
  uint64_t v4 = [v3 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_TITLE" value:&stru_1000F6658 table:0];
  id v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
  BOOL v7 = +[UIAlertController alertControllerWithTitle:v4 message:v6 preferredStyle:1];

  id v8 = +[NSBundle mainBundle];
  unsigned int v9 = [v8 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
  BOOL v10 = +[UIAlertAction actionWithTitle:v9 style:1 handler:&stru_1000F3608];
  [v7 addAction:v10];

  [*(id *)(a1 + 32) presentViewController:v7 animated:1 completion:0];
}

void sub_10002F804(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    id v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000A5C80(a1, v6, v7, v8, v9, v10, v11, v12);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    CFStringRef v13 = +[FBKData sharedInstance];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10002F93C;
    v16[3] = &unk_1000F3658;
    id v20 = *(id *)(a1 + 56);
    id v17 = *(id *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 48);
    id v18 = v14;
    uint64_t v19 = v15;
    [v13 getAllContentForFeedback:v5 completion:v16];
  }
}

void sub_10002F93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    uint64_t v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A5D60(a1, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else
  {
    uint64_t v11 = a1 + 32;
    if (![*(id *)(a1 + 32) isFFUAction]) {
      return;
    }
    uint64_t v12 = [*(id *)(a1 + 40) feedback];
    CFStringRef v13 = [v12 feedbackFollowups];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10002FAC4;
    v22[3] = &unk_1000F3630;
    id v23 = *(id *)(a1 + 32);
    id v14 = [v13 ded_findWithBlock:v22];

    if (v14)
    {
      [*(id *)(a1 + 48) setPendingItemToShow:*(void *)(a1 + 40)];
      [*(id *)(a1 + 48) setPendingFollowupToShow:v14];
      [*(id *)(a1 + 48) performSegueWithIdentifier:@"FBAFollowupResponsePresentation" sender:*(void *)(a1 + 48)];
    }
    else
    {
      uint64_t v15 = +[FBALog appHandle];
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_1000A5CF0(v11, v15, v16, v17, v18, v19, v20, v21);
      }
    }
    uint64_t v4 = v23;
  }
}

id sub_10002FAC4(uint64_t a1, void *a2)
{
  id v3 = [a2 ID];
  uint64_t v4 = [*(id *)(a1 + 32) ffuID];
  id v5 = [v3 isEqualToNumber:v4];

  return v5;
}

BOOL sub_10002FD58(id a1, FBAInbox *a2, unint64_t a3, BOOL *a4)
{
  return (id)[(FBAInbox *)a2 type] == (id)2;
}

BOOL sub_100030108(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 formTat];
  id v5 = [*(id *)(a1 + 32) formIdentifier];
  if ([v4 isEqualToString:v5])
  {
    uint64_t v6 = [v3 type];
    BOOL v7 = [v6 unsignedIntValue] == 3;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_1000301A4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) data];
  id v3 = [v2 currentUser];
  uint64_t v4 = [v3 contentItems];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100030314;
  v9[3] = &unk_1000F3170;
  id v10 = *(id *)(a1 + 40);
  id v5 = [v4 ded_findWithBlock:v9];

  if (v5)
  {
    uint64_t v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Found survey content item", v8, 2u);
    }

    [*(id *)(a1 + 32) reallyLaunchSurveyWithUrlAction:*(void *)(a1 + 40) team:*(void *)(a1 + 48) surveyItem:v5];
  }
  else
  {
    BOOL v7 = [*(id *)(a1 + 40) formIdentifier];
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:v7];

    [*(id *)(a1 + 32) showTargetedSurveyLoadErrorAlert];
  }
}

BOOL sub_100030314(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 formTat];
  id v5 = [*(id *)(a1 + 32) formIdentifier];
  if ([v4 isEqualToString:v5])
  {
    uint64_t v6 = [v3 type];
    BOOL v7 = [v6 unsignedIntValue] == 3;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_1000304BC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    uint64_t v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000A5F0C();
    }

    BOOL v7 = [*(id *)(a1 + 32) formIdentifier];
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:v7];

    [*(id *)(a1 + 40) showTargetedSurveyLoadErrorAlert];
  }
  else
  {
    uint64_t v8 = +[FBADraftManager sharedInstance];
    [v8 beginFeedbackForSurvey:v5 contentItem:*(void *)(a1 + 48) forTeam:*(void *)(a1 + 56)];
  }
}

void sub_100030ED8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    goto LABEL_2;
  }
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = +[FBKData sharedInstance];
  BOOL v7 = [v6 currentUser];
  uint64_t v8 = [v7 bugFormStubs];
  [v5 findExactMatchFormStubAndTeamWithFormStubs:v8];

  uint64_t v9 = [*(id *)(a1 + 32) exactMatchFormStub];

  if (!v9)
  {
LABEL_2:
    id v3 = [*(id *)(a1 + 32) formIdentifier];
    +[FBATargetedSurvey reportFailureToLaunchFormWithFormIdentifier:v3];

    uint64_t v4 = *(void **)(a1 + 40);
    _[v4 showTargetedFeedbackLoadErrorAlert];
  }
  else
  {
    id v10 = *(void **)(a1 + 40);
    id v13 = [*(id *)(a1 + 32) exactMatchFormStub];
    uint64_t v11 = [*(id *)(a1 + 32) teamForExactMatchFormStub];
    uint64_t v12 = [*(id *)(a1 + 40) composeFeedbackToolbarItem];
    [v10 tryLaunchingDraft:0 orStub:v13 forTeam:v11 withSender:v12];
  }
}

id sub_10003102C(uint64_t a1, void *a2)
{
  id v3 = [a2 ID];
  uint64_t v4 = [*(id *)(a1 + 32) bugFormID];
  id v5 = [v3 isEqualToNumber:v4];

  return v5;
}

void sub_100031314(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) traitCollection];
  id v3 = [v2 userInterfaceIdiom];

  if (!v3)
  {
    uint64_t v4 = *(void **)(a1 + 40);
    [v4 blockLandscapeOrientations:0];
  }
}

void sub_1000320DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_100032530(uint64_t a1)
{
  [*(id *)(a1 + 32) updateWebView];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 updateTitle];
}

uint64_t sub_10003256C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"ANNOUNCEMENT_LOAD_ERROR_TITLE" value:&stru_1000F6658 table:0];
    uint64_t v6 = +[NSBundle mainBundle];
    BOOL v7 = [v6 localizedStringForKey:@"ANNOUNCEMENT_LOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    uint64_t v8 = +[UIAlertController alertControllerWithTitle:v5 message:v7 preferredStyle:1];

    uint64_t v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"OK" value:&stru_1000F6658 table:0];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100032734;
    v13[3] = &unk_1000F2540;
    v13[4] = *(void *)(a1 + 32);
    uint64_t v11 = +[UIAlertAction actionWithTitle:v10 style:1 handler:v13];
    [v8 addAction:v11];

    [*(id *)(a1 + 32) presentViewController:v8 animated:1 completion:0];
  }
  else
  {
    [*(id *)(a1 + 32) setAnnouncement:a2];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100032734(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) splitViewController];
  [v1 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
}

id *sub_10003351C(id *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    id v3 = +[UIImage imageWithData:a2];
    uint64_t v4 = [v2[4] deviceImage];
    [v4 setImage:v3];

    id v5 = v2[4];
    return (id *)[v5 setNeedsDisplay];
  }
  return result;
}

uint64_t sub_1000339FC(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v2 = [v1 objectForKey:@"errors"];
    id v3 = sub_1000353C4(v2);

    if (v3)
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
    }
    else
    {
      char isKindOfClass = 0;
    }
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

id sub_100033AAC(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v2 = [v1 objectForKeyedSubscript:@"code"];
    id v3 = sub_1000353C4(v2);

    uint64_t v4 = [v1 objectForKeyedSubscript:@"message"];
    id v5 = sub_1000353C4(v4);

    uint64_t v6 = 0;
    if (v3 && v5)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v7 = [v3 integerValue];
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          uint64_t v8 = v5;
        }
        else {
          uint64_t v8 = &stru_1000F6658;
        }
        CFStringRef v11 = @"message";
        uint64_t v12 = v8;
        uint64_t v9 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
        uint64_t v6 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:v7 userInfo:v9];
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t sub_100033C74(void *a1, id a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 userInfo];
  id v5 = [v4 objectForKey:@"FBASeedPortalErrorsKey"];

  uint64_t v6 = [v3 userInfo];
  id v7 = [v6 objectForKey:@"FBAAggregatedErrorsKey"];

  if (v5)
  {
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v24;
LABEL_4:
      uint64_t v12 = 0;
      while (1)
      {
        if (*(void *)v24 != v11) {
          objc_enumerationMutation(v8);
        }
        if ([*(id *)(*((void *)&v23 + 1) + 8 * v12) code] == a2) {
          break;
        }
        if (v10 == (id)++v12)
        {
          id v10 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
          if (v10) {
            goto LABEL_4;
          }
          goto LABEL_20;
        }
      }
LABEL_21:
      uint64_t v17 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    if (!v7)
    {
      uint64_t v17 = 0;
      goto LABEL_23;
    }
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v8 = v7;
    id v13 = [v8 countByEnumeratingWithState:&v19 objects:v27 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v20;
LABEL_14:
      uint64_t v16 = 0;
      while (1)
      {
        if (*(void *)v20 != v15) {
          objc_enumerationMutation(v8);
        }
        if (sub_100033C74(*(void *)(*((void *)&v19 + 1) + 8 * v16), a2)) {
          goto LABEL_21;
        }
        if (v14 == (id)++v16)
        {
          id v14 = [v8 countByEnumeratingWithState:&v19 objects:v27 count:16];
          if (v14) {
            goto LABEL_14;
          }
          break;
        }
      }
    }
  }
LABEL_20:
  uint64_t v17 = 0;
LABEL_22:

LABEL_23:
  return v17;
}

id sub_100033E88(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100033F70(a1);
  id v5 = [v4 userInfo];
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v6 = [objc_alloc((Class)NSMutableDictionary) initWithDictionary:v5];
      [v6 setObject:v3 forKeyedSubscript:@"FBAAggregatedErrorsKey"];
      uint64_t v7 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:a1 userInfo:v6];

      uint64_t v4 = (void *)v7;
    }
  }

  return v4;
}

id sub_100033F70(uint64_t a1)
{
  switch(a1)
  {
    case -1021:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      uint64_t v17 = +[NSBundle mainBundle];
      uint64_t v18 = [v17 localizedStringForKey:@"FAILED_TO_ATTACH_FILE_FROM_ICLOUD_NOT_DOWNLOADED" value:@"You can’t attach files until they’ve been downloaded" table:0];
      [v2 setObject:v18 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1021;
      goto LABEL_25;
    case -1020:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      long long v19 = +[NSBundle mainBundle];
      long long v20 = [v19 localizedStringForKey:@"FailedToLoginNoDeviceToken" value:@"No device token given. Cannot log in" table:0];
      [v2 setObject:v20 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1020;
      goto LABEL_25;
    case -1019:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      long long v21 = +[NSBundle mainBundle];
      long long v22 = [v21 localizedStringForKey:@"FAILED_TO_ATTACH_FILE" value:@"The file could not be attached. Please try again later." table:0];
      [v2 setObject:v22 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1019;
      goto LABEL_25;
    case -1018:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      long long v23 = +[NSBundle mainBundle];
      long long v24 = [v23 localizedStringForKey:@"FAILED_TO_ATTACH_PHOTO" value:@"The photo could not be attached. Please try again later." table:0];
      [v2 setObject:v24 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1018;
      goto LABEL_25;
    case -1017:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      long long v25 = +[NSBundle mainBundle];
      long long v26 = [v25 localizedStringForKey:@"FAILED_TO_ATTACH_VIDEO" value:@"The video could not be attached. Please try again later." table:0];
      [v2 setObject:v26 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1017;
      goto LABEL_25;
    case -1016:
      uint64_t v27 = -1016;
      goto LABEL_20;
    case -1015:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      double v28 = +[NSBundle mainBundle];
      uint64_t v29 = FBKCommonStrings;
      double v30 = [v28 localizedStringForKey:@"ASSIGN_FEEDBACK_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v30 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v31 = +[NSBundle mainBundle];
      id v32 = [v31 localizedStringForKey:@"ASSIGN_FEEDBACK_ERROR_RECOVERY" value:&stru_1000F6658 table:v29];
      [v2 setObject:v32 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

      uint64_t v8 = -1015;
      goto LABEL_25;
    case -1014:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      double v33 = +[NSBundle mainBundle];
      uint64_t v34 = FBKCommonStrings;
      id v35 = [v33 localizedStringForKey:@"DEMOTE_FEEDBACK_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v35 forKeyedSubscript:NSLocalizedDescriptionKey];

      id v36 = +[NSBundle mainBundle];
      id v37 = [v36 localizedStringForKey:@"DEMOTE_FEEDBACK_ERROR_RECOVERY" value:&stru_1000F6658 table:v34];
      [v2 setObject:v37 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

      uint64_t v8 = -1014;
      goto LABEL_25;
    case -1013:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      id v38 = +[NSBundle mainBundle];
      uint64_t v39 = FBKCommonStrings;
      id v40 = [v38 localizedStringForKey:@"PROMOTE_FEEDBACK_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v40 forKeyedSubscript:NSLocalizedDescriptionKey];

      id v41 = +[NSBundle mainBundle];
      __int16 v42 = [v41 localizedStringForKey:@"PROMOTE_FEEDBACK_ERROR_RECOVERY" value:&stru_1000F6658 table:v39];
      [v2 setObject:v42 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

      uint64_t v8 = -1013;
      goto LABEL_25;
    case -1012:
      uint64_t v27 = -1012;
      goto LABEL_20;
    case -1011:
    case -1001:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      id v3 = +[NSBundle mainBundle];
      uint64_t v4 = FBKCommonStrings;
      id v5 = [v3 localizedStringForKey:@"UNEXPECTED_SERVER_DATA_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v5 forKeyedSubscript:NSLocalizedDescriptionKey];

      id v6 = +[NSBundle mainBundle];
      uint64_t v7 = [v6 localizedStringForKey:@"UNEXPECTED_SERVER_DATA_ERROR_RECOVERY" value:&stru_1000F6658 table:v4];
      [v2 setObject:v7 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

      uint64_t v8 = a1;
      goto LABEL_25;
    case -1010:
      uint64_t v27 = -1010;
LABEL_20:
      unsigned int v43 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:v27 userInfo:0];
      goto LABEL_28;
    case -1009:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      id v44 = +[NSBundle mainBundle];
      uint64_t v45 = FBKCommonStrings;
      int v46 = [v44 localizedStringForKey:@"CLOSE_FEEDBACK_ACTION_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v46 forKeyedSubscript:NSLocalizedDescriptionKey];

      v47 = +[NSBundle mainBundle];
      int v48 = [v47 localizedStringForKey:@"CLOSE_FEEDBACK_ACTION_ERROR_RECOVERY" value:&stru_1000F6658 table:v45];
      [v2 setObject:v48 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

      uint64_t v8 = -1009;
      goto LABEL_25;
    case -1008:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
      v49 = +[NSBundle mainBundle];
      v50 = [v49 localizedStringForKey:@"INVALID_DATA" value:&stru_1000F6658 table:FBKCommonStrings];
      [v2 setObject:v50 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1008;
      goto LABEL_25;
    case -1007:
      v67[0] = NSLocalizedDescriptionKey;
      v51 = +[NSBundle mainBundle];
      uint64_t v52 = FBKCommonStrings;
      v53 = [v51 localizedStringForKey:@"DRAFT_DELETE_ERROR_TITLE" value:&stru_1000F6658 table:FBKCommonStrings];
      v68[0] = v53;
      v67[1] = NSLocalizedRecoverySuggestionErrorKey;
      v54 = +[NSBundle mainBundle];
      v55 = [v54 localizedStringForKey:@"DRAFT_DELETE_ERROR" value:&stru_1000F6658 table:v52];
      v68[1] = v55;
      v56 = +[NSDictionary dictionaryWithObjects:v68 forKeys:v67 count:2];

      unsigned int v43 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:-1007 userInfo:v56];

      goto LABEL_28;
    case -1006:
    case -1005:
    case -1004:
    case -1003:
      goto LABEL_6;
    case -1002:
      id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:1];
      v57 = +[NSBundle mainBundle];
      v58 = [v57 localizedStringForKey:@"FailedToLoadDataError" value:@"Failed to load data." table:0];
      [v2 setObject:v58 forKeyedSubscript:NSLocalizedDescriptionKey];

      uint64_t v8 = -1002;
      goto LABEL_25;
    default:
      if (a1 == -8)
      {
        v65[0] = NSLocalizedDescriptionKey;
        id v2 = +[NSBundle mainBundle];
        uint64_t v60 = FBKCommonStrings;
        v61 = [v2 localizedStringForKey:@"UNEXPECTED_SERVER_DATA_ERROR" value:&stru_1000F6658 table:FBKCommonStrings];
        v66[0] = v61;
        v65[1] = NSLocalizedRecoverySuggestionErrorKey;
        v62 = +[NSBundle mainBundle];
        v63 = [v62 localizedStringForKey:@"UNEXPECTED_SERVER_DATA_ERROR_RECOVERY" value:&stru_1000F6658 table:v60];
        v66[1] = v63;
        v64 = +[NSDictionary dictionaryWithObjects:v66 forKeys:v65 count:2];
        unsigned int v43 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:-8 userInfo:v64];
      }
      else
      {
        if (a1 == 16)
        {
          id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:2];
          id v9 = +[NSBundle mainBundle];
          uint64_t v10 = FBKCommonStrings;
          uint64_t v11 = [v9 localizedStringForKey:@"GENERIC_LOGIN_FAILURE_TITLE" value:&stru_1000F6658 table:FBKCommonStrings];
          [v2 setObject:v11 forKeyedSubscript:NSLocalizedDescriptionKey];

          uint64_t v12 = +[NSBundle mainBundle];
          id v13 = [v12 localizedStringForKey:@"GENERIC_LOGIN_FAILURE_MESSAGE" value:&stru_1000F6658 table:v10];
          [v2 setObject:v13 forKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];

          uint64_t v8 = 16;
LABEL_25:
          id v16 = v2;
        }
        else
        {
LABEL_6:
          id v14 = +[FBALog appHandle];
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_1000A5F40(a1, v14);
          }

          id v2 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:1];
          uint64_t v15 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:a1 userInfo:0];
          [v2 setObject:v15 forKeyedSubscript:NSUnderlyingErrorKey];

          uint64_t v8 = -1;
          id v16 = 0;
        }
        unsigned int v43 = +[NSError errorWithDomain:@"com.apple.appleseed.FeedbackAssistant" code:v8 userInfo:v16];
      }

LABEL_28:
      return v43;
  }
}

uint64_t sub_100035360(void *a1)
{
  if (!a1) {
    return 1;
  }
  id v1 = a1;
  id v2 = +[NSNull null];
  BOOL v3 = v2 == v1;

  return v3;
}

id sub_1000353C4(void *a1)
{
  id v1 = a1;
  id v2 = +[NSNull null];
  if (v2 == v1) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v1;
  }
  id v4 = v3;

  return v4;
}

__CFString *sub_100035424(void *a1)
{
  id v1 = a1;
  id v2 = sub_1000353C4(v1);
  if (v2) {
    BOOL v3 = v1;
  }
  else {
    BOOL v3 = &stru_1000F6658;
  }
  id v4 = v3;

  return v4;
}

uint64_t sub_100035480(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = +[NSNull null];
    if (v2 == v1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = (uint64_t)[v1 BOOLValue];
    }
  }
  else
  {
    uint64_t v3 = 1;
  }

  return v3;
}

id sub_1000354F4(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = sub_100035564();
    uint64_t v3 = [v2 dateFromString:v1];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_100035564()
{
  if (qword_100124120 != -1) {
    dispatch_once(&qword_100124120, &stru_1000F37D8);
  }
  v0 = (void *)qword_100124118;

  return v0;
}

id sub_1000355B8(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v6 = v3;
  id v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v17;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v17 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v12 = objc_opt_class();
        if (objc_msgSend(v12, "isSubclassOfClass:", objc_opt_class(), (void)v16))
        {
          id v13 = [v11 objectForKeyedSubscript:v4];
          if (v13) {
            [v5 setObject:v11 forKey:v13];
          }
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v8);
  }

  id v14 = [objc_alloc((Class)NSDictionary) initWithDictionary:v5];

  return v14;
}

id sub_100035770(void *a1)
{
  return sub_1000355B8(a1, @"id");
}

void sub_10003577C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_100124118;
  qword_100124118 = (uint64_t)v1;

  id v3 = (void *)qword_100124118;
  id v4 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [v3 setLocale:v4];

  [(id)qword_100124118 setDateFormat:@"yyyy-MM-dd'T'HH:mm:ss'Z'"];
  id v5 = (void *)qword_100124118;
  id v6 = +[NSTimeZone timeZoneForSecondsFromGMT:0];
  [v5 setTimeZone:v6];
}

id sub_100036804(uint64_t a1)
{
  return _[*(id *)(a1 + 32) resetWarnings];
}

id sub_100036AF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setOn:0 animated:1];
}

void sub_100036F48(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_100037834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003784C(void *a1)
{
  id v2 = +[FBKContentItem fetchRequest];
  id v3 = +[FBKContentItem unreadInboxPredicateWithTeam:a1[4]];
  [v2 setPredicate:v3];

  id v4 = (void *)a1[5];
  id v7 = 0;
  id v5 = [v4 countForFetchRequest:v2 error:&v7];
  id v6 = v7;
  *(void *)(*(void *)(a1[6] + 8) + 24) = v5;
  if (v6) {
    *(void *)(*(void *)(a1[6] + 8) + 24) = 0;
  }
}

uint64_t start(int a1, char **a2)
{
  id v5 = (objc_class *)objc_opt_class();
  NSStringFromClass(v5);
  id v6 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = UIApplicationMain(a1, a2, 0, v6);

  return v7;
}

uint64_t sub_100038230(uint64_t a1)
{
  [*(id *)(a1 + 32) deselectRowAtIndexPath:*(void *)(a1 + 40) animated:0];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

uint64_t sub_100038280(uint64_t a1)
{
  [*(id *)(a1 + 32) deselectRowAtIndexPath:*(void *)(a1 + 40) animated:0];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

void sub_1000390A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000390BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v3 = +[FBKData sharedInstance];
    id v4 = [v3 loginManager];
    id v5 = [v4 loginState];

    if (v5 == (id)1)
    {
      id v6 = *(void **)(a1 + 32);
      [v6 dismissViewControllerAnimated:1 completion:&stru_1000F38E8];
    }
  }
}

void sub_100039160(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FBADidDismissLegalAgreementNotification" object:0];
}

void sub_1000398DC(id a1)
{
  qword_100124128 = objc_alloc_init(FBADraftManager);

  _objc_release_x1();
}

void sub_100039C68(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainViewController];
  [v2 respondToUrlAction:*(void *)(a1 + 40)];
}

void sub_100039CBC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainViewController];
  [v2 respondToUrlAction:*(void *)(a1 + 40)];
}

BOOL sub_100039FA0(id a1, FBKContentItem *a2)
{
  id v2 = [(FBKContentItem *)a2 formResponse];
  BOOL v3 = v2 != 0;

  return v3;
}

void sub_10003A1AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) formResponse];

  if (v2)
  {
    BOOL v3 = [*(id *)(a1 + 32) formResponse];
    +[FBKDEDHelper cleanupBugSessionDirectoriesForForm:v3];
  }
  else
  {
    id v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [*(id *)(a1 + 32) ID];
      *(_DWORD *)uint8_t buf = 67109120;
      unsigned int v11 = [v5 intValue];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "No form response for Draft Item with ID [%i]: Cannot cleanup BugSession", buf, 8u);
    }
  }
  id v6 = +[FBKData sharedInstance];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10003A330;
  v8[3] = &unk_1000F3970;
  char v9 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 32);
  v8[4] = *(void *)(a1 + 40);
  [v6 deleteDraftFromContentItem:v7 completion:v8];
}

void sub_10003A330(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A6268(v4);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    id v5 = [*(id *)(a1 + 32) rootController];
    [v5 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
  }
}

void sub_10003A8F8(id a1, UIAlertAction *a2)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Discarding URL Action with attachments", v3, 2u);
  }
}

void sub_10003A968(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) draftController];
  id v2 = [*(id *)(a1 + 40) attachments];
  [v3 postAttachFiles:v2];
}

void sub_10003A9D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) draftController];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10003AA78;
  v4[3] = &unk_1000F26D8;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 closeWithCompletion:v4];
}

void sub_10003AA78(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainViewController];
  [v2 respondToUrlAction:*(void *)(a1 + 40)];
}

void sub_10003AEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10003AEDC(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1000A62F0(a1, v2);
  }

  id result = [*(id *)(a1 + 32) endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
  return result;
}

void sub_10003AF58(uint64_t a1)
{
  [*(id *)(a1 + 32) endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v4[0] = 67109120;
    v4[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "finished saving FR [%d] when resigning active", (uint8_t *)v4, 8u);
  }
}

BOOL sub_10003B1AC(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

double sub_10003B5FC(uint64_t a1, void *a2)
{
  double v2 = *(double *)(a1 + 32);
  [a2 bounds];
  return fmin(v2, v3 + -100.0);
}

double sub_10003B6C0(uint64_t a1)
{
  [*(id *)(a1 + 32) preferredContentSize];
  return v1;
}

NSObject *sub_10003B710()
{
  v0 = +[NSThread callStackSymbols];
  if ((unint64_t)[v0 count] < 2)
  {
    double v1 = @"Unknown";
    goto LABEL_20;
  }
  double v2 = [v0 objectAtIndexedSubscript:2];
  double v3 = v2;
  if (!v2 || ![v2 length]) {
    goto LABEL_18;
  }
  id v4 = v3;
  id v15 = 0;
  id v5 = +[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", @"(^\\d+\\s+Feedback\\sAssistant\\s+[0-9A-F]x[0-9A-Fa-f]+\\s)(.*)(\\s\\+\\s\\d+)", 16, &v15);
  id v6 = v15;
  uint64_t v7 = [v5 matchesInString:v4 options:0 range:[v4 length]];
  id v8 = v7;
  if (v6)
  {
    char v9 = +[FBALog appHandle];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1000A64B0((uint64_t)v6, v9);
    }

    int v10 = 0;
    double v1 = @"Unknown";
  }
  else
  {
    if ([v7 count] == (id)1)
    {
      unsigned int v11 = [v8 lastObject];
      double v1 = [v11 rangeAtIndex:2];
      uint64_t v13 = v12;

      if (v1 != 0x7FFFFFFFFFFFFFFFLL && (char *)v1 + v13 <= [v4 length])
      {
        double v1 = [v4 substringWithRange:v1, v13];
        int v10 = 0;
        goto LABEL_17;
      }
    }
    else
    {
      double v1 = +[FBALog appHandle];
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR)) {
        sub_1000A6428((uint64_t)v4, (uint64_t)v0, v1);
      }
    }
    int v10 = 1;
  }
LABEL_17:

  if (v10) {
LABEL_18:
  }
    double v1 = @"Unknown";

LABEL_20:

  return v1;
}

void sub_10003C7F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003C814(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 length] == (id)6)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained tryPin:v4];
  }
}

void sub_10003CA4C(uint64_t a1, int a2, double a3)
{
  double v3 = *(void **)(a1 + 32);
  if (a2)
  {
    id v5 = [v3 navigationController];
    id v4 = [v5 popViewControllerAnimated:1];
  }
  else
  {
    LODWORD(a3) = 1.0;
    _[v3 showPINEntryUIWithFlags:1 inThrottleSeconds:a3];
  }
}

id sub_10003CD04(uint64_t a1)
{
  return [*(id *)(a1 + 32) showPINEntryUIWithFlags:*(unsigned int *)(a1 + 40)];
}

void sub_10003E7E8(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) completion];

  if (v2)
  {
    id v4 = [*(id *)(a1 + 32) completion];
    double v3 = +[NSSet setWithObject:*(void *)(a1 + 40)];
    v4[2](v4, v3);
  }
}

void sub_10003E9A4(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) completion];

  if (v2)
  {
    id v4 = [*(id *)(a1 + 32) completion];
    double v3 = +[NSSet set];
    v4[2](v4, v3);
  }
}

void sub_10003EB88(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) completion];

  if (v2)
  {
    id v4 = [*(id *)(a1 + 32) completion];
    v4[2](v4, *(void *)(a1 + 40));
  }
  else
  {
    double v3 = +[FBALog ded];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1000A66CC(v3);
    }
  }
}

void sub_10003ED08(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) completion];

  if (v2)
  {
    id v5 = [*(id *)(a1 + 32) completion];
    double v3 = +[NSSet set];
    v5[2](v5, v3);
  }
  else
  {
    id v4 = +[FBALog ded];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A66CC(v4);
    }
  }
}

void sub_10003EFFC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_10003F028(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setLoading:0];

  id v4 = objc_loadWeakRetained(v1);
  double v3 = [v4 tableView];
  [v3 reloadData];
}

void sub_10003F09C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setLoading:0];

  id v4 = objc_loadWeakRetained(v1);
  double v3 = [v4 tableView];
  [v3 reloadData];
}

uint64_t sub_10003FAF4(uint64_t a1)
{
  return a1 / 60;
}

id sub_10003FB10(uint64_t a1)
{
  uint64_t v1 = a1 / 60;
  double v2 = +[NSBundle mainBundle];
  double v3 = [v2 localizedStringForKey:@"After %lu minutes" value:&stru_1000F6658 table:@"Plurals"];
  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v1);

  return v4;
}

void sub_100041770(id a1, id a2, unint64_t a3, BOOL *a4)
{
}

void sub_10004177C(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = [v2 answer];
  id v4 = [v5 values];
  [v3 evaluateSelectionWithValues:v4];
}

void sub_100042B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100042B1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100042B2C(uint64_t a1)
{
}

void sub_100042B34(uint64_t a1, void *a2)
{
  id v3 = [a2 sortedArrayUsingComparator:&stru_1000F3BC0];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setExtensions:v3];
}

int64_t sub_100042B9C(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = [a2 name];
  id v6 = [v4 name];

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_10004308C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_100124148 = [v1 BOOLForKey:@"SupportsBiometricsLock"];
}

void sub_100044760(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) scrollView];
  [v1 setZoomScale:0 animated:1.0];
}

void sub_100044C7C(void *a1)
{
  double v2 = +[UIApplication sharedApplication];
  id v10 = [v2 keyWindow];

  if (v10)
  {
    [v10 frame];
    double v4 = (v3 + -300.0) * 0.5;
    [v10 frame];
    id v6 = [objc_alloc((Class)UIButton) initWithFrame:v4, v5 + -40.0, 300.0, 40.0];
    [v6 setTitle:a1[4] forState:0];
    [v6 addTarget:a1[5] action:"openLink:" forControlEvents:64];
    id v7 = +[UIColor secondaryLabelColor];
    [v6 setBackgroundColor:v7];

    id v8 = [v6 layer];
    [v8 setZPosition:1.79769313e308];

    [v6 setAccessibilityIdentifier:a1[6]];
    [v6 setAccessibilityTraits:UIAccessibilityTraitButton];
    [v6 setAccessibilityLabel:a1[6]];
    [v10 addSubview:v6];
  }
  char v9 = +[NSNotificationCenter defaultCenter];
  [v9 removeObserver:a1[5]];
}

void sub_100045110(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) reader];
  double v3 = [v2 tableNames];
  [*(id *)(a1 + 32) setTableNames:v3];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000451CC;
  block[3] = &unk_1000F2518;
  block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000451CC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_10004647C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000464A0(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained
    || (double v5 = WeakRetained,
        id v6 = objc_loadWeakRetained(v2),
        [v6 contentItem],
        id v7 = objc_claimAutoreleasedReturnValue(),
        v7,
        v6,
        v5,
        !v7))
  {
    id v8 = +[FBALog appHandle];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "iFBAFeedbackViewController has no content item, not updating with model changes.", v10, 2u);
    }
  }
  id v9 = objc_loadWeakRetained(v2);
  [v9 handleModelChanges:v3];
}

id sub_100046E18(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v4 = [v3 feedback];
    double v5 = [*(id *)(a1 + 32) contentItem];
    id v6 = [v5 feedback];
    id v7 = [v4 isEqual:v6];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

id sub_100046EC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v4 = [v3 feedback];
    double v5 = [*(id *)(a1 + 32) contentItem];
    id v6 = [v5 feedback];
    id v7 = [v4 isEqual:v6];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100047144(uint64_t a1)
{
  double v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1000A68C0();
  }

  id v3 = +[NSBundle mainBundle];
  double v4 = [v3 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_TITLE" value:&stru_1000F6658 table:0];
  double v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"FEEDBACK_LOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
  id v7 = +[UIAlertController alertControllerWithTitle:v4 message:v6 preferredStyle:1];

  id v8 = +[NSBundle mainBundle];
  id v9 = [v8 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  _DWORD v11[2] = sub_100047320;
  void v11[3] = &unk_1000F2540;
  void v11[4] = *(void *)(a1 + 32);
  id v10 = +[UIAlertAction actionWithTitle:v9 style:1 handler:v11];
  [v7 addAction:v10];

  [*(id *)(a1 + 32) presentViewController:v7 animated:1 completion:0];
}

id sub_100047320(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) launchAction];
  unsigned int v3 = [v2 isCaptive];

  double v4 = *(void ***)(a1 + 32);
  if (v3)
  {
    double v5 = (void ***)v10;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    id v6 = sub_100047400;
  }
  else
  {
    double v5 = &v8;
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472;
    id v6 = sub_100047460;
  }
  v5[2] = (void **)v6;
  v5[3] = (void **)&unk_1000F2518;
  void v5[4] = v4;
  return [v4 dismissViewControllerAnimated:1 completion:v8, v9];
}

void sub_100047400(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) launchAction];
  +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:](iFBKUtils, "exitCaptiveModeRemovingFromHomeScreen:", [v1 shouldMakeFBAVisible]);
}

void sub_100047460(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) splitViewController];
  [v1 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
}

void sub_1000474A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = [*(id *)(a1 + 32) feedback];
  if (!v5)
  {
    id v14 = +[FBALog appHandle];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1000A68F4();
    }

    goto LABEL_9;
  }
  if (a3)
  {
LABEL_9:
    [*(id *)(a1 + 32) hideSpinner];
    id v15 = [*(id *)(a1 + 32) refreshControl];
    [v15 endRefreshing];

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_10;
  }
  id v6 = dispatch_group_create();
  dispatch_group_enter(v6);
  id v7 = +[FBKData sharedInstance];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100047780;
  v19[3] = &unk_1000F3DC8;
  id v21 = *(id *)(a1 + 40);
  id v8 = v6;
  long long v20 = v8;
  [v7 getAllContentForFeedback:v5 completion:v19];

  uint64_t v9 = +[FBALog appHandle];
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    id v10 = [v5 ID];
    unsigned int v11 = [v10 intValue];
    *(_DWORD *)uint8_t buf = 67109120;
    unsigned int v23 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Will fetch Feedback Status with ID [%i]", buf, 8u);
  }
  dispatch_group_enter(v8);
  uint64_t v12 = +[FBKData sharedInstance];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1000477C8;
  v17[3] = &unk_1000F3DF0;
  long long v18 = v8;
  uint64_t v13 = v8;
  [v12 fetchFeedbackStatusForFeedback:v5 completion:v17];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1000477D0;
  v16[3] = &unk_1000F2518;
  void v16[4] = *(void *)(a1 + 32);
  dispatch_group_notify(v13, (dispatch_queue_t)&_dispatch_main_q, v16);

LABEL_10:
}

void sub_100047780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  double v4 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v4);
}

void sub_1000477C8(uint64_t a1)
{
}

void sub_1000477D0(uint64_t a1)
{
  [*(id *)(a1 + 32) updateEverything];
  [*(id *)(a1 + 32) hideSpinner];
  id v2 = [*(id *)(a1 + 32) refreshControl];
  [v2 endRefreshing];
}

void sub_100047C28(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 10000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100047CE0;
  block[3] = &unk_1000F3998;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = v3;
  uint64_t v7 = v4;
  char v8 = *(unsigned char *)(a1 + 48);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100047CE0(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100047D60;
  v3[3] = &unk_1000F29E0;
  id v1 = *(void **)(a1 + 32);
  void v3[4] = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  return [v1 dismissViewControllerAnimated:1 completion:v3];
}

id sub_100047D60(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100047DDC;
  v3[3] = &unk_1000F28B0;
  char v4 = *(unsigned char *)(a1 + 40);
  return [v1 dismissViewControllerAnimated:0 completion:v3];
}

id sub_100047DDC(uint64_t a1)
{
  return +[iFBKUtils exitCaptiveModeRemovingFromHomeScreen:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100048C88(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  dispatch_time_t v2 = (void *)qword_100124150;
  qword_100124150 = (uint64_t)v1;

  [(id)qword_100124150 setDateStyle:3];
  id v3 = (void *)qword_100124150;

  _[v3 setTimeStyle:0];
}

void sub_100049204(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = +[NSOperationQueue mainQueue];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000492E4;
  v10[3] = &unk_1000F3EA0;
  id v11 = v5;
  id v12 = v6;
  uint64_t v13 = *(void *)(a1 + 32);
  id v8 = v6;
  id v9 = v5;
  [v7 addOperationWithBlock:v10];
}

id sub_1000492E4(uint64_t a1)
{
  if (*(void *)(a1 + 32) && !*(void *)(a1 + 40))
  {
    uint64_t v7 = +[UIApplication sharedApplication];
    uint64_t v11 = *(void *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000494F0;
    v13[3] = &unk_1000F3AC8;
    v13[4] = *(void *)(a1 + 48);
    [v7 openURL:v11 options:&__NSDictionary0__struct completionHandler:v13];
  }
  else
  {
    dispatch_time_t v2 = +[NSBundle mainBundle];
    uint64_t v3 = FBKCommonStrings;
    char v4 = [v2 localizedStringForKey:@"FILE_DOWNLOAD_ERROR_TITLE" value:&stru_1000F6658 table:FBKCommonStrings];
    id v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"FILE_DOWNLOAD_ERROR_MESSAGE" value:&stru_1000F6658 table:v3];
    uint64_t v7 = +[UIAlertController alertControllerWithTitle:v4 message:v6 preferredStyle:1];

    id v8 = +[NSBundle mainBundle];
    id v9 = [v8 localizedStringForKey:@"OK" value:&stru_1000F6658 table:v3];
    id v10 = +[UIAlertAction actionWithTitle:v9 style:0 handler:&stru_1000F3E78];
    [v7 addAction:v10];

    [*(id *)(a1 + 48) presentViewController:v7 animated:1 completion:0];
    [*(id *)(a1 + 48) setFileDownloadInProgress:0];
  }

  return [*(id *)(a1 + 48) hideSpinner];
}

id sub_1000494F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFileDownloadInProgress:0];
}

id sub_100049C64(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100049CD8;
  v3[3] = &unk_1000F2518;
  void v3[4] = v1;
  return [v1 dismissViewControllerAnimated:1 completion:v3];
}

id sub_100049CD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSegueWithIdentifier:@"FBAUnsolicitedFollowupResponsePresentation" sender:0];
}

id sub_100049CF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) copyFeedbackID];
}

id sub_100049CF8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) copyFeedbackIDAndTitle];
}

void sub_100049D00(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) contentItem];
  uint64_t v3 = [v2 user];
  unsigned int v4 = [v3 hasManyManagedTeams];

  if (v4)
  {
    id v21 = +[UIStoryboard storyboardWithName:@"Teams" bundle:0];
    id v5 = [v21 instantiateViewControllerWithIdentifier:@"FBATeamPickerController"];
    [v5 setShowsDismissButton:1];
    [v5 setPickerDelegate:*(void *)(a1 + 32)];
    id v6 = [*(id *)(a1 + 32) contentItem];
    uint64_t v7 = [v6 singleTeam];
    [v5 setSelectedTeam:v7];

    id v8 = [*(id *)(a1 + 32) contentItem];
    id v9 = [v8 user];
    id v10 = [v9 activeManagedTeams];
    uint64_t v11 = +[FBKTeam sortDescriptors];
    id v12 = [v10 sortedArrayUsingDescriptors:v11];
    [v5 setTeams:v12];

    uint64_t v13 = [[FBAPartialSheetNavigationController alloc] initWithRootViewController:v5];
    id v14 = [*(id *)(a1 + 32) traitCollection];
    id v15 = [v14 preferredContentSizeCategory];
    [(FBAPartialSheetNavigationController *)v13 setDetentBehavior:UIContentSizeCategoryIsAccessibilityCategory(v15)];

    [(FBAPartialSheetNavigationController *)v13 setModalPresentationStyle:7];
    long long v16 = [*(id *)(a1 + 32) navigationItem];
    long long v17 = [v16 rightBarButtonItem];
    long long v18 = [(FBAPartialSheetNavigationController *)v13 presentationController];
    [v18 setBarButtonItem:v17];

    [*(id *)(a1 + 32) presentViewController:v13 animated:1 completion:0];
  }
  else
  {
    long long v19 = *(void **)(a1 + 32);
    id v21 = [v19 contentItem];
    id v5 = [v21 user];
    uint64_t v13 = [v5 managedTeams];
    long long v20 = [(FBAPartialSheetNavigationController *)v13 anyObject];
    [v19 promoteIndividualFeedbackToTeam:v20];
  }
}

id sub_100049F74(uint64_t a1)
{
  return _[*(id *)(a1 + 32) demoteIndividualFeedbackToOriginator];
}

id sub_100049F7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) performSegueWithIdentifier:@"AssignSingleFeedbackPresentation" sender:0];
}

void sub_100049F94(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [v1 contentItem];
  [v1 didTapCloseFeedbackWithItem:v2 atIndexPath:0];
}

void sub_10004ACE4(uint64_t a1)
{
  id v2 = +[FBALog appHandle];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "performing batch updates during size change", v4, 2u);
  }

  uint64_t v3 = [*(id *)(a1 + 32) tableView];
  [v3 performBatchUpdates:&stru_1000F3EE8 completion:&stru_1000F3F08];
}

void sub_10004B040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004B07C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v11 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v12 = *(void *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_10004B1B8;
    v13[3] = &unk_1000F3F30;
    objc_copyWeak(&v16, (id *)(a1 + 40));
    id v14 = *(id *)(a1 + 32);
    id v15 = v9;
    [v11 _confirmFilePromiseDeletionWithStub:v12 deletionHandler:v13];

    objc_destroyWeak(&v16);
  }
}

void sub_10004B1A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004B1B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _deleteFilePromise:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 40)];
}

void sub_10004B2FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  [*(id *)(a1 + 32) hideAttachmentDeletionSpinner];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v3 = v4;
  if (v4)
  {
    [*(id *)(a1 + 32) showAttachmentDeletionErrorAlertWithError:v4];
    uint64_t v3 = v4;
  }
}

void sub_10004B5D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) feedback];
  uint64_t v3 = [v2 formResponseStub];

  id v4 = *(id *)(a1 + 40);
  id v5 = v4;
  if (!v3)
  {
    id v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000A6A18();
    }
    goto LABEL_8;
  }
  if (!v4)
  {
    id v6 = +[FBALog appHandle];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1000A6A4C();
    }
LABEL_8:

    [*(id *)(a1 + 32) showAttachmentDeletionErrorAlert];
    goto LABEL_9;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_9:
}

void sub_10004BDCC(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  id v2 = +[FBKData sharedInstance];
  uint64_t v3 = [*(id *)(a1 + 32) contentItem];
  id v7 = v3;
  id v4 = +[NSArray arrayWithObjects:&v7 count:1];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10004BEE4;
  v6[3] = &unk_1000F35A8;
  uint64_t v5 = *(void *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  [v2 promoteFeedback:v4 toTeam:v5 completion:v6];
}

void sub_10004BEE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A6A80(a1, v3);
    }

    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"FEEDBACK_MOVE_ERROR_TITLE" value:&stru_1000F6658 table:0];
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"FEEDBACK_MOVE_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    id v9 = +[UIAlertController alertControllerWithTitle:v6 message:v8 preferredStyle:1];

    id v10 = +[NSBundle mainBundle];
    id v11 = [v10 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10004C100;
    v14[3] = &unk_1000F2540;
    v14[4] = *(void *)(a1 + 32);
    uint64_t v12 = +[UIAlertAction actionWithTitle:v11 style:1 handler:v14];
    [v9 addAction:v12];

    [*(id *)(a1 + 32) presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    uint64_t v13 = [*(id *)(a1 + 32) splitViewController];
    [v13 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
  }
}

id sub_10004C100(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

id sub_10004C110(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10004C4BC(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  id v2 = +[FBKData sharedInstance];
  id v3 = [*(id *)(a1 + 32) contentItem];
  id v6 = v3;
  id v4 = +[NSArray arrayWithObjects:&v6 count:1];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10004C5D4;
  v5[3] = &unk_1000F35A8;
  void v5[4] = *(void *)(a1 + 32);
  [v2 demoteFeedback:v4 completion:v5];
}

void sub_10004C5D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A6B48(a1, v3);
    }

    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"FEEDBACK_MOVE_ERROR_TITLE" value:&stru_1000F6658 table:0];
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"FEEDBACK_MOVE_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    id v9 = +[UIAlertController alertControllerWithTitle:v6 message:v8 preferredStyle:1];

    id v10 = +[NSBundle mainBundle];
    id v11 = [v10 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10004C7F0;
    v14[3] = &unk_1000F2540;
    v14[4] = *(void *)(a1 + 32);
    uint64_t v12 = +[UIAlertAction actionWithTitle:v11 style:1 handler:v14];
    [v9 addAction:v12];

    [*(id *)(a1 + 32) presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    uint64_t v13 = [*(id *)(a1 + 32) splitViewController];
    [v13 dismissSecondaryOrShowEmptyViewControllerAnimated:1];
  }
}

id sub_10004C7F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

id sub_10004C800(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10004C9E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[FBALog appHandle];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1000A6B48(a1, v3);
    }

    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"FEEDBACK_ASSIGN_ERROR_TITLE" value:&stru_1000F6658 table:0];
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"FEEDBACK_ASSIGN_ERROR_MESSAGE" value:&stru_1000F6658 table:0];
    id v9 = +[UIAlertController alertControllerWithTitle:v6 message:v8 preferredStyle:1];

    id v10 = +[NSBundle mainBundle];
    id v11 = [v10 localizedStringForKey:@"OK" value:&stru_1000F6658 table:FBKCommonStrings];
    uint64_t v12 = +[UIAlertAction actionWithTitle:v11 style:1 handler:&stru_1000F3F98];
    [v9 addAction:v12];

    [*(id *)(a1 + 32) presentViewController:v9 animated:1 completion:0];
  }
}

void sub_10004CD9C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_10004CDBC(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 authorizationStatus];
  if (!result)
  {
    sub_10004DE18();
    uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a2;
    aBlock[4] = sub_10004DE58;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000992C4;
    aBlock[3] = &unk_1000F41F8;
    id v15 = _Block_copy(aBlock);
    id v16 = a2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_10004E070((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10004DE60((uint64_t *)&unk_100122980);
    sub_10004DEA4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

void sub_10004D07C(void *a1)
{
  void v3[4] = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
  void v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10004D12C;
  v3[3] = &unk_1000F4220;
  id v2 = _Block_copy(v3);
  [a1 requestAuthorizationWithOptions:7 completionHandler:v2];
  _Block_release(v2);
}

void sub_10004D12C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10004D1A4(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t variable initialization expression of FBACustomBehavior.isCaptive()
{
  return 0;
}

uint64_t variable initialization expression of FBACustomBehavior.answers()
{
  return 0;
}

void type metadata accessor for LogicalType(uint64_t a1)
{
}

void type metadata accessor for FBKFilerFormType(uint64_t a1)
{
}

uint64_t sub_10004D35C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_10004D394(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004D3A0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10004D3C0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_10004D400(uint64_t a1, uint64_t a2)
{
  return sub_10004D790(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_10004D42C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_10004D434@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10004D448(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10004D45C(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_10004D470(void *a1, void *a2)
{
  return *a1 == *a2;
}

NSNumber sub_10004D484()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10004D48C(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Int._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10004D4E0(uint64_t a1, uint64_t a2)
{
  char v3 = static Int._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10004D538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static Int._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  return result;
}

NSNumber sub_10004D560()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10004D568(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10004D5BC(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10004D614@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

uint64_t sub_10004D63C(uint64_t a1, uint64_t a2)
{
  return sub_10004D790(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10004D654(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10004D6CC(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10004D74C@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10004D790(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10004D7D4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004D828()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_10004D89C(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_10004D8A8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10004D8DC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10004D8E8()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10004D978()
{
  sub_10004E070(&qword_1001220F0, type metadata accessor for OpenExternalURLOptionsKey);
  sub_10004E070(&qword_1001220F8, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10004DA34()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *sub_10004DAF0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_10004DB00@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10004DB0C()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10004DBD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004DC00()
{
  sub_10004E070(&qword_100122088, type metadata accessor for URLResourceKey);
  sub_10004E070(&qword_100122090, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10004DCBC()
{
  sub_10004E070(&qword_1001220C0, type metadata accessor for TraitKey);
  sub_10004E070(&qword_1001220C8, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10004DD78@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10004DDC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10004DDF8(void *a1)
{
  return sub_10004CDBC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10004DE00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004DE10()
{
  return swift_release();
}

unint64_t sub_10004DE18()
{
  unint64_t result = qword_100122970;
  if (!qword_100122970)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122970);
  }
  return result;
}

void sub_10004DE58()
{
  sub_10004D07C(*(void **)(v0 + 16));
}

uint64_t sub_10004DE60(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10004DEA4()
{
  unint64_t result = qword_100121FC0;
  if (!qword_100121FC0)
  {
    sub_10004DF00((uint64_t *)&unk_100122980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100121FC0);
  }
  return result;
}

uint64_t sub_10004DF00(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

__n128 initializeWithTake for SimpleError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10004DFB8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10004DFD8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_10004E028()
{
  return sub_10004E070(&qword_100122000, type metadata accessor for TraitKey);
}

uint64_t sub_10004E070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004E0B8()
{
  return sub_10004E070(&qword_100122008, type metadata accessor for TraitKey);
}

uint64_t sub_10004E100()
{
  return sub_10004E070(&qword_100122010, type metadata accessor for TraitKey);
}

uint64_t sub_10004E148()
{
  return sub_10004E070(&qword_100122018, type metadata accessor for Weight);
}

uint64_t sub_10004E190()
{
  return sub_10004E070(&qword_100122020, type metadata accessor for Weight);
}

uint64_t sub_10004E1D8()
{
  sub_10004E070((unint64_t *)&qword_100122098, type metadata accessor for AttributeName);
  sub_10004E070(&qword_1001220A0, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10004E294()
{
  return Int.hashValue.getter(*v0);
}

void sub_10004E29C()
{
  Hasher._combine(_:)(*v0);
}

uint64_t sub_10004E2C8(uint64_t a1)
{
  return static Hasher._hash(seed:_:)(a1, *v1);
}

uint64_t sub_10004E2D0()
{
  return Double.hashValue.getter(*v0);
}

void sub_10004E2D8()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10004E30C(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_10004E31C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10004E330()
{
  return sub_10004E070(&qword_100122028, type metadata accessor for Weight);
}

uint64_t sub_10004E378()
{
  return sub_10004E070(&qword_100122030, type metadata accessor for AttributeName);
}

uint64_t sub_10004E3C0()
{
  return sub_10004E070(&qword_100122038, type metadata accessor for AttributeName);
}

uint64_t sub_10004E408()
{
  return sub_10004E070(&qword_100122040, type metadata accessor for URLResourceKey);
}

uint64_t sub_10004E450()
{
  return sub_10004E070(&qword_100122048, type metadata accessor for URLResourceKey);
}

uint64_t sub_10004E498()
{
  return sub_10004E070(&qword_100122050, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10004E4E0()
{
  return sub_10004E070(&qword_100122058, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10004E528()
{
  return sub_10004E070(&qword_100122060, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_10004E570()
{
  return sub_10004E070(&qword_100122068, type metadata accessor for URLResourceKey);
}

uint64_t sub_10004E5B8()
{
  return sub_10004E070(&qword_100122070, type metadata accessor for AttributeName);
}

unint64_t sub_10004E600()
{
  unint64_t result = qword_1001220B8;
  if (!qword_1001220B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001220B8);
  }
  return result;
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void sub_10004E668(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10004E6B0()
{
  return sub_10004E070(&qword_1001220D8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10004E6F8()
{
  return sub_10004E070(&qword_1001220E0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10004E740()
{
  return sub_10004E070(&qword_1001220E8, type metadata accessor for OpenExternalURLOptionsKey);
}

void *sub_10004E7C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[1];
    if (v7)
    {
      uint64_t v8 = a2[2];
      v4[1] = v7;
      _DWORD v4[2] = v8;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    }
    uint64_t v10 = *(int *)(a3 + 24);
    id v11 = (void *)((char *)v4 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_10004DE60(&qword_100122280);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *id v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10004E90C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10004DE60(&qword_100122280);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10004E9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10004DE60(&qword_100122280);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10004EAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v9;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v10;
    swift_retain();
    goto LABEL_8;
  }
  _OWORD *v6 = *v8;
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_100052464(a1 + v11, &qword_100122280);
    sub_10004DE60(&qword_100122280);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10004EC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10004DE60(&qword_100122280);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10004ECFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v10;
    goto LABEL_8;
  }
  _OWORD *v6 = *v8;
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_100052464(a1 + v11, &qword_100122280);
    uint64_t v14 = sub_10004DE60(&qword_100122280);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004EE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004EE58);
}

uint64_t sub_10004EE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10004DE60(&qword_100122288);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10004EF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004EF2C);
}

uint64_t sub_10004EF2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10004DE60(&qword_100122288);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FBANotEnrolledView()
{
  uint64_t result = qword_1001222E8;
  if (!qword_1001222E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004F024()
{
  sub_10004F0C4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10004F0C4()
{
  if (!qword_1001222F8)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001222F8);
    }
  }
}

uint64_t sub_10004F11C()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10004F138(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10004F150()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10004F198()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10004F1C4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10004F208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10004DE60(&qword_100122330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100122338);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  uint64_t v10 = sub_10004DE60(&qword_100122340);
  sub_10004F3B0(v1, &v5[*(int *)(v10 + 44)]);
  char v11 = static Edge.Set.top.getter();
  sub_100052400((uint64_t)v5, (uint64_t)v9, &qword_100122330);
  uint64_t v12 = &v9[*(int *)(v7 + 44)];
  *uint64_t v12 = v11;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  v12[40] = 1;
  sub_100052464((uint64_t)v5, &qword_100122330);
  uint64_t v13 = static Alignment.center.getter();
  sub_10009F31C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v13, v14);
  return sub_100052464((uint64_t)v9, &qword_100122338);
}

uint64_t sub_10004F3B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = sub_10004DE60(&qword_100122348);
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10004DE60(&qword_100122350);
  uint64_t v5 = __chkstk_darwin(v55);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  v53 = (char *)&v48 - v9;
  __chkstk_darwin(v8);
  v50 = (char *)&v48 - v10;
  uint64_t v11 = sub_10004DE60(&qword_100122358);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  int v48 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v17 = (char *)&v48 - v16;
  __chkstk_darwin(v15);
  long long v19 = (char *)&v48 - v18;
  uint64_t v58 = a1;
  static Axis.Set.vertical.getter();
  sub_10004DE60(&qword_100122360);
  sub_10004FEC8();
  ScrollView.init(_:showsIndicators:content:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v17, v11);
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)(a1 + 16);
  v56 = a2;
  uint64_t v52 = v7;
  if (v21)
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v20;
    unsigned int v23 = sub_10004FFE0;
  }
  else
  {
    unsigned int v23 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
    uint64_t v22 = 0;
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v22;
  __chkstk_darwin(v24);
  *(&v48 - 2) = (char *)a1;
  sub_10004FFD0(v21);
  Button.init(action:label:)();
  unsigned __int8 v25 = static Edge.Set.leading.getter();
  unsigned __int8 v26 = static Edge.Set.bottom.getter();
  char v27 = static Edge.Set.trailing.getter();
  char v28 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v25) {
    char v28 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v26) {
    char v28 = Edge.Set.init(rawValue:)();
  }
  uint64_t v29 = v51;
  uint64_t v30 = (uint64_t)v52;
  uint64_t v31 = v49;
  Edge.Set.init(rawValue:)();
  char v32 = Edge.Set.init(rawValue:)();
  uint64_t v54 = v11;
  uint64_t v33 = v12;
  uint64_t v34 = v19;
  if (v32 != v27) {
    char v28 = Edge.Set.init(rawValue:)();
  }
  uint64_t v35 = (uint64_t)v50;
  id v36 = v48;
  uint64_t v37 = (uint64_t)v53;
  id v38 = v57;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v53, v57, v29);
  uint64_t v39 = v37 + *(int *)(v55 + 36);
  *(unsigned char *)uint64_t v39 = v28;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  *(unsigned char *)(v39 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v38, v29);
  sub_10005239C(v37, v35, &qword_100122350);
  id v40 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  id v41 = v34;
  __int16 v42 = v34;
  uint64_t v43 = v54;
  v40(v36, v42, v54);
  sub_100052400(v35, v30, &qword_100122350);
  id v44 = v56;
  v40(v56, v36, v43);
  uint64_t v45 = sub_10004DE60(&qword_100122380);
  sub_100052400(v30, (uint64_t)&v44[*(int *)(v45 + 48)], &qword_100122350);
  sub_100052464(v35, &qword_100122350);
  int v46 = *(void (**)(char *, uint64_t))(v33 + 8);
  v46(v41, v43);
  sub_100052464(v30, &qword_100122350);
  return ((uint64_t (*)(char *, uint64_t))v46)(v36, v43);
}

uint64_t sub_10004F924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for FBANotEnrolledView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_10004DE60(&qword_100122388);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_10004DE60(&qword_100122378);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10004DE60(&qword_100122360);
  __chkstk_darwin(v28);
  uint64_t v29 = (uint64_t)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = static HorizontalAlignment.center.getter();
  *((void *)v15 + 1) = 0x4030000000000000;
  v15[16] = 0;
  long long v17 = &v15[*(int *)(sub_10004DE60(&qword_100122390) + 44)];
  uint64_t v31 = sub_1000530AC();
  sub_1000521A0(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FBANotEnrolledView);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  sub_100051890((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  sub_10004DE60(&qword_100122398);
  sub_100052668(&qword_1001223A0, &qword_100122398);
  sub_100051988();
  sub_100052514(&qword_1001223B0, (void (*)(uint64_t))type metadata accessor for FBAProgramEnrollmentOffer);
  ForEach<>.init(_:content:)();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v20(v10, v12, v6);
  *(void *)long long v17 = 0x4050000000000000;
  uint64_t v21 = sub_10004DE60(&qword_1001223B8);
  v20(&v17[*(int *)(v21 + 48)], v10, v6);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v12, v6);
  v22(v10, v6);
  LOBYTE(v10) = static Edge.Set.leading.getter();
  unsigned __int8 v23 = static Edge.Set.trailing.getter();
  char v24 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v10) {
    char v24 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v23) {
    char v24 = Edge.Set.init(rawValue:)();
  }
  uint64_t v25 = v29;
  sub_100052400((uint64_t)v15, v29, &qword_100122378);
  uint64_t v26 = v25 + *(int *)(v28 + 36);
  *(unsigned char *)uint64_t v26 = v24;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(unsigned char *)(v26 + 40) = 1;
  sub_100052464((uint64_t)v15, &qword_100122378);
  return sub_10005239C(v25, v30, &qword_100122360);
}

uint64_t sub_10004FD98@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100050008(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_10004FEA0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10004FEC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004F924(*(void *)(v1 + 16), a1);
}

unint64_t sub_10004FEC8()
{
  unint64_t result = qword_100122368;
  if (!qword_100122368)
  {
    sub_10004DF00(&qword_100122360);
    sub_100052668(&qword_100122370, &qword_100122378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122368);
  }
  return result;
}

uint64_t sub_10004FF68()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004FFA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004FFC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10004FD98(a1);
}

uint64_t sub_10004FFD0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004FFE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100050008(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100050018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(_:bundle:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v46 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v42 = v56;
  int v41 = v57;
  uint64_t v43 = v58;
  int v40 = v59;
  uint64_t v44 = v61;
  uint64_t v45 = v60;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  LOBYTE(v3) = v9 & 1;
  static Font.title.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_100050008(v6, v8, v3);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v38 = Text.fontWeight(_:)();
  uint64_t v37 = v15;
  uint64_t v39 = v16;
  char v18 = v17 & 1;
  sub_100050008(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v19 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v21 = v20;
  LOBYTE(v3) = v22 & 1;
  static Font.body.getter();
  uint64_t v23 = Text.font(_:)();
  uint64_t v25 = v24;
  LOBYTE(v10) = v26;
  uint64_t v36 = v27;
  swift_release();
  sub_100050008(v19, v21, v3);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v47 = v18;
  char v29 = v41;
  char v55 = v41;
  char v30 = v40;
  char v53 = v40;
  char v51 = v18;
  char v49 = v10 & 1;
  uint64_t v31 = v42;
  *(void *)a1 = v46;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v29;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v54;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v54[3];
  *(void *)(a1 + 24) = v43;
  *(unsigned char *)(a1 + 32) = v30;
  LODWORD(v31) = *(_DWORD *)v52;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v52[3];
  *(_DWORD *)(a1 + 33) = v31;
  uint64_t v32 = v44;
  *(void *)(a1 + 40) = v45;
  *(void *)(a1 + 48) = v32;
  uint64_t v33 = v38;
  uint64_t v34 = v37;
  *(void *)(a1 + 56) = v38;
  *(void *)(a1 + 64) = v34;
  *(unsigned char *)(a1 + 72) = v18;
  LODWORD(v32) = *(_DWORD *)v50;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a1 + 73) = v32;
  *(void *)(a1 + 80) = v39;
  *(void *)(a1 + 88) = v23;
  *(void *)(a1 + 96) = v25;
  *(unsigned char *)(a1 + 104) = v10 & 1;
  LODWORD(v32) = *(_DWORD *)v48;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a1 + 105) = v32;
  *(void *)(a1 + 112) = v36;
  *(void *)(a1 + 120) = KeyPath;
  *(unsigned char *)(a1 + 128) = 1;
  swift_retain();
  sub_100052310(v33, v34, v18);
  swift_bridgeObjectRetain();
  sub_100052310(v23, v25, v10 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100050008(v23, v25, v10 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100050008(v33, v34, v47);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000504E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100050018(a1);
}

void sub_1000504EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedApplication];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)a1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_destination, v6);
  URL._bridgeToObjectiveC()(v11);
  char v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100083660((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100052514(&qword_1001220F0, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_allocObject();
  _DWORD v15[2] = a1;
  v15[3] = a2;
  void v15[4] = a3;
  aBlock[4] = sub_1000525A8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005157C;
  aBlock[3] = &unk_1000F4638;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  sub_10004FFD0(a2);
  swift_release();
  [v10 openURL:v13 options:isa completionHandler:v16];
  _Block_release(v16);
}

uint64_t sub_100050764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v46 = a2;
  uint64_t v49 = a5;
  uint64_t v6 = type metadata accessor for RoundedRectangle();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  char v9 = (_OWORD *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10004DE60(&qword_100122438);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10004DE60(&qword_100122420);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10004DE60(&qword_100122410);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10004DE60(&qword_100122400);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = 0x4020000000000000;
  uint8_t v16[16] = 0;
  uint64_t v24 = sub_10004DE60(&qword_100122440);
  sub_100050B38(v48, (uint64_t)&v16[*(int *)(v24 + 44)]);
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_100052400((uint64_t)v16, (uint64_t)v20, &qword_100122420);
  uint64_t v25 = &v20[*(int *)(v18 + 44)];
  *uint64_t v25 = a1;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  v25[40] = 1;
  sub_100052464((uint64_t)v16, &qword_100122420);
  uint64_t v26 = static Alignment.center.getter();
  sub_10009F378(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, INFINITY, 0, v26, v27);
  sub_100052464((uint64_t)v20, &qword_100122410);
  uint64_t v28 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v29 = enum case for RoundedCornerStyle.circular(_:);
  uint64_t v30 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #10.0 }
  _OWORD *v9 = _Q0;
  id v36 = [self tertiarySystemFillColor:v46, v47];
  uint64_t v37 = Color.init(uiColor:)();
  sub_1000521A0((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v13[*(int *)(v11 + 60)] = v37;
  *(_WORD *)&v13[*(int *)(v11 + 64)] = 256;
  sub_100052208((uint64_t)v9);
  uint64_t v38 = static Alignment.center.getter();
  uint64_t v40 = v39;
  uint64_t v41 = sub_10004DE60(&qword_1001223E8);
  uint64_t v42 = v49;
  uint64_t v43 = v49 + *(int *)(v41 + 36);
  sub_100052400((uint64_t)v13, v43, &qword_100122438);
  uint64_t v44 = (uint64_t *)(v43 + *(int *)(sub_10004DE60(&qword_100122430) + 36));
  *uint64_t v44 = v38;
  v44[1] = v40;
  sub_100052400((uint64_t)v23, v42, &qword_100122400);
  sub_100052464((uint64_t)v13, &qword_100122438);
  return sub_100052464((uint64_t)v23, &qword_100122400);
}

uint64_t sub_100050B38@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v3 = sub_10004DE60(&qword_100122448);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v61 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v7 = &v38[-v6];
  swift_bridgeObjectRetain();
  uint64_t v60 = Image.init(systemName:)();
  uint64_t v59 = static Color.accentColor.getter();
  uint64_t v58 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v8 = v62;
  unsigned __int8 v9 = v63;
  unsigned __int8 v10 = v65;
  uint64_t v11 = v67;
  uint64_t v56 = v64;
  uint64_t v57 = v66;
  uint64_t v49 = v67;
  uint64_t v50 = v62;
  int v55 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  unsigned __int8 v70 = v9;
  unsigned __int8 v69 = v10;
  unsigned __int8 v68 = 0;
  uint64_t v46 = static HorizontalAlignment.leading.getter();
  sub_100050F74((uint64_t)&v78);
  uint64_t v41 = v79;
  uint64_t v42 = v78;
  char v20 = v80;
  int v39 = v80;
  uint64_t v21 = v81;
  uint64_t v44 = v83;
  uint64_t v45 = v82;
  int v43 = v84;
  uint64_t v53 = v85;
  uint64_t v40 = swift_getKeyPath();
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v22 = &v7[*(int *)(sub_10004DE60(&qword_100122450) + 44)];
  uint64_t v47 = v7;
  sub_100051234(v22);
  unsigned __int8 v23 = v70;
  unsigned __int8 v24 = v69;
  int v51 = v70;
  int v52 = v69;
  unsigned __int8 v25 = v68;
  int v48 = v68;
  sub_100052400((uint64_t)v7, (uint64_t)v61, &qword_100122448);
  *(void *)&long long v71 = v60;
  *((void *)&v71 + 1) = v59;
  *(void *)&long long v72 = KeyPath;
  *((void *)&v72 + 1) = v58;
  *(void *)&long long v73 = v8;
  BYTE8(v73) = v23;
  *(void *)&long long v74 = v56;
  BYTE8(v74) = v24;
  *(void *)&long long v75 = v57;
  *((void *)&v75 + 1) = v11;
  LOBYTE(v76) = v55;
  *((void *)&v76 + 1) = v13;
  *(void *)&v77[0] = v15;
  *((void *)&v77[0] + 1) = v17;
  *(void *)&v77[1] = v19;
  BYTE8(v77[1]) = v25;
  long long v26 = v74;
  *(_OWORD *)(a2 + 32) = v73;
  *(_OWORD *)(a2 + 48) = v26;
  *(_OWORD *)(a2 + 105) = *(_OWORD *)((char *)v77 + 9);
  long long v27 = v77[0];
  long long v28 = v75;
  *(_OWORD *)(a2 + 80) = v76;
  *(_OWORD *)(a2 + 96) = v27;
  *(_OWORD *)(a2 + 64) = v28;
  long long v29 = v72;
  *(_OWORD *)a2 = v71;
  *(_OWORD *)(a2 + 16) = v29;
  uint64_t v30 = v45;
  *(void *)(a2 + 128) = v46;
  *(void *)(a2 + 136) = 0x4008000000000000;
  *(unsigned char *)(a2 + 144) = 0;
  uint64_t v31 = v41;
  uint64_t v32 = v42;
  *(void *)(a2 + 152) = v42;
  *(void *)(a2 + 160) = v31;
  *(unsigned char *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  *(void *)(a2 + 184) = v30;
  uint64_t v33 = v44;
  *(void *)(a2 + 192) = v44;
  char v34 = v43;
  *(unsigned char *)(a2 + 200) = v43;
  uint64_t v35 = v40;
  *(void *)(a2 + 208) = v53;
  *(void *)(a2 + 216) = v35;
  *(unsigned char *)(a2 + 224) = 0;
  *(void *)(a2 + 232) = 0;
  *(unsigned char *)(a2 + 240) = 1;
  uint64_t v36 = sub_10004DE60(&qword_100122458);
  sub_100052400((uint64_t)v61, a2 + *(int *)(v36 + 80), &qword_100122448);
  sub_1000522C0((uint64_t)&v71);
  LOBYTE(a2) = v39;
  sub_100052310(v32, v31, v39);
  swift_bridgeObjectRetain();
  sub_100052310(v30, v33, v34);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100052464((uint64_t)v47, &qword_100122448);
  sub_100052464((uint64_t)v61, &qword_100122448);
  sub_100050008(v32, v31, a2);
  swift_bridgeObjectRelease();
  sub_100050008(v30, v33, v34);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v78 = v60;
  uint64_t v79 = v59;
  uint64_t v80 = KeyPath;
  uint64_t v81 = v58;
  uint64_t v82 = v50;
  LOBYTE(v83) = v51;
  uint64_t v84 = v56;
  LOBYTE(v85) = v52;
  uint64_t v86 = v57;
  uint64_t v87 = v49;
  char v88 = v55;
  uint64_t v89 = v13;
  uint64_t v90 = v15;
  uint64_t v91 = v17;
  uint64_t v92 = v19;
  char v93 = v48;
  return sub_100052320((uint64_t)&v78);
}

uint64_t sub_100050F74@<X0>(uint64_t a1@<X8>)
{
  sub_1000524C0();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.headline.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_100050008(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Color.accentColor.getter();
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v35 = v13;
  uint64_t v36 = v12;
  uint64_t v37 = v14;
  char v34 = v15 & 1;
  sub_100050008(v7, v9, v11 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  static Font.callout.getter();
  uint64_t v21 = Text.font(_:)();
  uint64_t v23 = v22;
  char v25 = v24;
  swift_release();
  sub_100050008(v16, v18, v20);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v26 = Text.foregroundStyle<A>(_:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_100050008(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v35;
  *(unsigned char *)(a1 + 16) = v34;
  *(void *)(a1 + 24) = v37;
  *(void *)(a1 + 32) = v26;
  *(void *)(a1 + 40) = v28;
  *(unsigned char *)(a1 + 48) = v32;
  *(void *)(a1 + 56) = v30;
  sub_100052310(v36, v35, v34);
  swift_bridgeObjectRetain();
  sub_100052310(v26, v28, v32);
  swift_bridgeObjectRetain();
  sub_100050008(v26, v28, v32);
  swift_bridgeObjectRelease();
  sub_100050008(v36, v35, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100051234@<X0>(void *a1@<X8>)
{
  char v31 = a1;
  uint64_t v1 = sub_10004DE60(&qword_100122460);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10004DE60(&qword_100122468);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v30 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (uint64_t *)((char *)&v28 - v14);
  __chkstk_darwin(v13);
  uint64_t v29 = (uint64_t)&v28 - v16;
  uint64_t v17 = Image.init(systemName:)();
  id v18 = [self tertiaryLabelColor];
  uint64_t v19 = Color.init(uiColor:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  uint64_t *v4 = KeyPath;
  sub_100052400((uint64_t)v4, (uint64_t)v15 + *(int *)(v10 + 44), &qword_100122460);
  uint64_t *v15 = v17;
  v15[1] = v19;
  swift_retain();
  swift_retain();
  sub_100052464((uint64_t)v4, &qword_100122460);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  uint64_t v21 = v29;
  sub_10005239C((uint64_t)v15, v29, &qword_100122468);
  uint64_t v22 = v30;
  sub_100052400(v21, v30, &qword_100122468);
  uint64_t v23 = v31;
  void *v31 = 0;
  *((unsigned char *)v23 + 8) = 1;
  char v24 = v23;
  uint64_t v25 = sub_10004DE60(&qword_100122470);
  sub_100052400(v22, (uint64_t)v24 + *(int *)(v25 + 48), &qword_100122468);
  uint64_t v26 = (uint64_t)v24 + *(int *)(v25 + 64);
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  sub_100052464(v21, &qword_100122468);
  return sub_100052464(v22, &qword_100122468);
}

uint64_t sub_10005157C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1000515D0()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  static VerticalAlignment.top.getter();
  uint64_t v4 = (void *)swift_allocObject();
  _DWORD v4[2] = v2;
  v4[3] = v1;
  void v4[4] = v3;
  id v5 = v2;
  sub_10004FFD0(v1);
  sub_10004DE60(&qword_1001223E8);
  sub_10005203C();
  return Button.init(action:label:)();
}

uint64_t sub_1000516A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_10005176C()
{
  uint64_t v1 = type metadata accessor for FBANotEnrolledView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  if (*(void *)(v0 + v3 + 8)) {
    swift_release();
  }
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_10004DE60(&qword_100122280);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100051890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FBANotEnrolledView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000518F4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for FBANotEnrolledView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v9;
  id v10 = v7;

  return sub_10004FFD0(v8);
}

unint64_t sub_100051988()
{
  unint64_t result = qword_1001223A8;
  if (!qword_1001223A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001223A8);
  }
  return result;
}

void destroy for FBANotEnrolledProgramCell(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_release();
  }
}

void *_s18Feedback_Assistant25FBANotEnrolledProgramCellVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  uint64_t v7 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain();
  }
  else
  {
    _OWORD *v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for FBANotEnrolledProgramCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for FBANotEnrolledProgramCell(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FBANotEnrolledProgramCell(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[1];
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v7 = a2[2];
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[2];
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBANotEnrolledProgramCell(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FBANotEnrolledProgramCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FBANotEnrolledProgramCell()
{
  return &type metadata for FBANotEnrolledProgramCell;
}

ValueMetadata *type metadata accessor for FBANotEnrolledHeaderView()
{
  return &type metadata for FBANotEnrolledHeaderView;
}

unsigned char *initializeBufferWithCopyOfBuffer for FBANotEnrolledView.ExitButton(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FBANotEnrolledView.ExitButton(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FBANotEnrolledView.ExitButton(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100051DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100051E10(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100051E18(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FBANotEnrolledView.ExitButton()
{
  return &type metadata for FBANotEnrolledView.ExitButton;
}

uint64_t sub_100051E34()
{
  return sub_100051E70(&qword_1001223C0, &qword_1001223C8, (void (*)(void))sub_100051EF0);
}

uint64_t sub_100051E70(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004DF00(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100051EF0()
{
  unint64_t result = qword_1001223D0;
  if (!qword_1001223D0)
  {
    sub_10004DF00(&qword_100122338);
    sub_100052668(&qword_1001223D8, &qword_100122330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001223D0);
  }
  return result;
}

unint64_t sub_100051F94()
{
  unint64_t result = qword_1001223E0;
  if (!qword_1001223E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001223E0);
  }
  return result;
}

uint64_t sub_100051FE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052004()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100052024()
{
  sub_1000504EC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100052030@<X0>(uint64_t a1@<X8>)
{
  return sub_100050764(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_10005203C()
{
  unint64_t result = qword_1001223F0;
  if (!qword_1001223F0)
  {
    sub_10004DF00(&qword_1001223E8);
    sub_100051E70(&qword_1001223F8, &qword_100122400, (void (*)(void))sub_100052100);
    sub_100052668(&qword_100122428, &qword_100122430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001223F0);
  }
  return result;
}

unint64_t sub_100052100()
{
  unint64_t result = qword_100122408;
  if (!qword_100122408)
  {
    sub_10004DF00(&qword_100122410);
    sub_100052668(&qword_100122418, &qword_100122420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122408);
  }
  return result;
}

uint64_t sub_1000521A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005226C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100052298()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000522C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100052310(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100052320(uint64_t a1)
{
  return a1;
}

uint64_t sub_100052374()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10005239C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10004DE60(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052400(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10004DE60(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052464(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10004DE60(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000524C0()
{
  unint64_t result = qword_100122C10;
  if (!qword_100122C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122C10);
  }
  return result;
}

uint64_t sub_100052514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100052560()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000525A8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1000525D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000525E8()
{
  return swift_release();
}

uint64_t sub_1000525F0()
{
  return sub_100052668(&qword_100122478, &qword_100122480);
}

uint64_t sub_10005262C()
{
  return sub_100052668(&qword_100122488, &qword_100122490);
}

uint64_t sub_100052668(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004DF00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000526B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_100122498);
  sub_1000537C4(v0, (uint64_t)qword_100122498);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

id sub_100052730(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10004DE60(&qword_100122790);
  __chkstk_darwin();
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_16;
  }
  id v10 = v2;
  unint64_t v11 = sub_100073E94(1701667182, 0xE400000000000000);
  if ((v12 & 1) == 0 || (sub_100053854(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v49), (swift_dynamicCast() & 1) == 0))
  {

LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v13 = v48;
  if (!*(void *)(a1 + 16)
    || (uint64_t v14 = v47, v15 = sub_100073E94(0x7470697263736564, 0xEB000000006E6F69), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  sub_100053854(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v49);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v45._object = v48;
  if (!*(void *)(a1 + 16)
    || (v45._countAndFlagsBits = v47, unint64_t v17 = sub_100073E94(0x616E5F6567616D69, 0xEA0000000000656DLL), (v18 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  sub_100053854(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v49);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v44 = (uint64_t)v48;
  if (!*(void *)(a1 + 16)
    || (uint64_t v43 = v47, v19 = sub_100073E94(0x74616E6974736564, 0xEB000000006E6F69), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_100053854(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v49);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v42[1] = v48;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v22(v9, v5, v6);
    if (*(void *)(a1 + 16))
    {
      unint64_t v23 = sub_100073E94(0xD000000000000013, 0x80000001000E0A00);
      uint64_t countAndFlagsBits = v45._countAndFlagsBits;
      if (v25)
      {
        sub_100053854(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v49);
      }
      else
      {
        long long v49 = 0u;
        long long v50 = 0u;
      }
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
      uint64_t countAndFlagsBits = v45._countAndFlagsBits;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v50 + 1))
    {
      if swift_dynamicCast() && (v47)
      {
        uint64_t v26 = self;
        id v27 = [v26 mainBundle];
        v51._object = (void *)0xE000000000000000;
        v28._uint64_t countAndFlagsBits = v14;
        v28._object = v13;
        v29.value._uint64_t countAndFlagsBits = 0x74536E6F6D6D6F43;
        v29.value._object = (void *)0xED000073676E6972;
        v30._uint64_t countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        v51._uint64_t countAndFlagsBits = 0;
        Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v51);

        swift_bridgeObjectRelease();
        *(Swift::String *)&v10[OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name] = v31;
        id v32 = [v26 mainBundle];
        v52._object = (void *)0xE000000000000000;
        v33.value._uint64_t countAndFlagsBits = 0x74536E6F6D6D6F43;
        v33.value._object = (void *)0xED000073676E6972;
        v34._uint64_t countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        v52._uint64_t countAndFlagsBits = 0;
        Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v33, (NSBundle)v32, v34, v52);
        uint64_t countAndFlagsBits = v35._countAndFlagsBits;
        object = v35._object;

        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t v38 = (uint64_t *)&v10[OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_programDescription];
        *uint64_t v38 = countAndFlagsBits;
        v38[1] = (uint64_t)object;
        int v39 = (uint64_t *)&v10[OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_imageName];
        uint64_t v40 = v44;
        *int v39 = v43;
        v39[1] = v40;
        v22(&v10[OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_destination], v9, v6);

        uint64_t v41 = (objc_class *)type metadata accessor for FBAProgramEnrollmentOffer();
        v46.receiver = v10;
        v46.super_class = v41;
        return [super init];
      }
    }
    else
    {
      sub_100052464((uint64_t)&v49, (uint64_t *)&unk_100122D70);
    }
    uint64_t v37 = (uint64_t *)&v10[OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name];
    *uint64_t v37 = v14;
    v37[1] = (uint64_t)v13;
    object = v45._object;
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100052464((uint64_t)v5, &qword_100122790);
LABEL_17:
  type metadata accessor for FBAProgramEnrollmentOffer();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100052DA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAProgramEnrollmentOffer();
  return [super dealloc];
}

uint64_t sub_100052E8C()
{
  return type metadata accessor for FBAProgramEnrollmentOffer();
}

uint64_t type metadata accessor for FBAProgramEnrollmentOffer()
{
  uint64_t result = qword_1001224F0;
  if (!qword_1001224F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100052EE0()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_100052F80()
{
  return &protocol witness table for String;
}

uint64_t sub_100052F8C@<X0>(void *a1@<X8>)
{
  objc_super v2 = (void *)(*v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAProgramEnrollmentOffer_name);
  uint64_t v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

void *sub_100052FA8(uint64_t a1)
{
  uint64_t result = &_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (objc_class *)type metadata accessor for FBAProgramEnrollmentOffer();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      objc_allocWithZone(v4);
      uint64_t v6 = swift_bridgeObjectRetain();
      if (sub_100052730(v6))
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000530AC()
{
  sub_10004DE60(&qword_100122790);
  ((void (*)(void))__chkstk_darwin)();
  unint64_t v1 = (char *)v38 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v38 - v7;
  type metadata accessor for FBAProgramEnrollmentOffer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 URLForResource:v11 withExtension:v12];

  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
    goto LABEL_9;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v1, v6, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_9:
    sub_100052464((uint64_t)v1, &qword_100122790);
    if (qword_100121DA0 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000537C4(v21, (uint64_t)qword_100122498);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to find program enrollment offers file.", v24, 2u);
      swift_slowDealloc();
    }

    return &_swiftEmptyArrayStorage;
  }
  v14(v8, v1, v2);
  uint64_t v25 = Data.init(contentsOf:options:)();
  unint64_t v27 = v26;
  Swift::String v28 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&long long v40 = 0;
  id v30 = [v28 JSONObjectWithData:isa options:0 error:&v40];

  id v31 = (id)v40;
  if (!v30)
  {
    Swift::String v35 = v31;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1000537FC(v25, v27);
    if (qword_100121DA0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000537C4(v15, (uint64_t)qword_100122498);
    swift_errorRetain();
    swift_errorRetain();
    char v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)char v18 = 136446210;
      v38[1] = v18 + 4;
      swift_getErrorValue();
      uint64_t v19 = Error.localizedDescription.getter();
      *(void *)&long long v40 = sub_10009EC3C(v19, v20, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Encountered error while parsing program enrollments: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_28;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100053854((uint64_t)v42, (uint64_t)&v40);
  sub_10004DE60(&qword_100122500);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v32 = v39;
  if (*(void *)(v39 + 16) && (unint64_t v33 = sub_100073E94(0x736D6172676F7270, 0xE800000000000000), (v34 & 1) != 0))
  {
    sub_100053854(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v40);
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v41 + 1))
  {
    sub_1000537FC(v25, v27);
    sub_100052464((uint64_t)&v40, (uint64_t *)&unk_100122D70);
    goto LABEL_27;
  }
  sub_10004DE60(&qword_100122508);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    sub_1000537FC(v25, v27);
LABEL_27:
    sub_1000538B0((uint64_t)v42);
LABEL_28:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v36 = sub_100052FA8(v39);
  sub_1000537FC(v25, v27);
  swift_bridgeObjectRelease();
  sub_1000538B0((uint64_t)v42);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v36;
}

uint64_t sub_1000537C4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000537FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100053854(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000538B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *sub_100053900(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id sub_100053964()
{
  char v1 = v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];
  v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 0;
  if ((v1 & 1) == 0) {
    goto LABEL_4;
  }
  id result = [v0 text];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    uint64_t v7 = (uint64_t *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    *uint64_t v7 = v4;
    v7[1] = v6;
    swift_bridgeObjectRelease();
    sub_100053A40();
LABEL_4:
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for FBAExpandingTextView();
    return [super resignFirstResponder];
  }
  __break(1u);
  return result;
}

void sub_100053A40()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] != 1)
  {
    uint64_t v19 = &v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    uint64_t v20 = *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText + 8];
    uint64_t v40 = *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    uint64_t v41 = v20;
    uint64_t v21 = self;
    swift_bridgeObjectRetain();
    id v22 = [v21 whitespaceAndNewlineCharacterSet];
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000524C0();
    StringProtocol.trimmingCharacters(in:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    uint64_t v23 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v23 < 1)
    {
      *(void *)uint64_t v19 = 0;
      *((void *)v19 + 1) = 0xE000000000000000;
      swift_bridgeObjectRelease();
      static os_log_type_t.debug.getter();
      os_log(_:dso:log:_:_:)();
      id v33 = [self tertiaryLabelColor];
      [v1 setTextColor:v33];

      if (!*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText + 8])
      {
        NSString v36 = 0;
LABEL_26:
        [v1 setText:v36];

        return;
      }
    }
    else
    {
      static os_log_type_t.debug.getter();
      sub_10004DE60((uint64_t *)&unk_100122860);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1000D86F0;
      uint64_t v26 = *(void *)v19;
      uint64_t v25 = *((void *)v19 + 1);
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_100054550();
      *(void *)(v24 + 32) = v26;
      *(void *)(v24 + 40) = v25;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      id v27 = [self labelColor];
      [v1 setTextColor:v27];

      id v28 = [v1 text];
      if (v28)
      {
        Swift::String_optional v29 = v28;
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v32 = v31;

        if (v32)
        {
          if (v30 == *(void *)v19 && v32 == *((void *)v19 + 1)) {
            goto LABEL_15;
          }
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v37) {
            return;
          }
        }
      }
    }
    swift_bridgeObjectRetain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  static os_log_type_t.debug.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000D86F0;
  id v7 = [v0 text];
  if (v7)
  {
    objc_super v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_100054550();
    *(void *)(v6 + 32) = v9;
    *(void *)(v6 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v12 = [self labelColor];
    [v1 setTextColor:v12];

    id v13 = [v1 text];
    if (!v13) {
      goto LABEL_20;
    }
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    char v18 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
    if (!v17) {
      goto LABEL_20;
    }
    if (v15 == *(void *)v18 && v17 == *((void *)v18 + 1))
    {
LABEL_15:
      swift_bridgeObjectRelease();
      return;
    }
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
LABEL_20:
      swift_bridgeObjectRetain();
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setText:v39];
      Swift::String v35 = v39;
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100053FEC()
{
  id v1 = [self defaultCenter];
  id v2 = [self mainQueue];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v6[4] = sub_100054530;
  void v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _DWORD v6[2] = sub_100098000;
  v6[3] = &unk_1000F4688;
  uint64_t v4 = _Block_copy(v6);
  swift_release();
  id v5 = [v1 addObserverForName:UITextViewTextDidBeginEditingNotification object:v0 queue:v2 usingBlock:v4];
  _Block_release(v4);
  swift_unknownObjectRelease();
}

void sub_100054148()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (unsigned char *)Strong;
    static os_log_type_t.debug.getter();
    id v2 = *(id *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_log];
    os_log(_:dso:log:_:_:)();

    char v3 = v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];
    v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 1;
    if ((v3 & 1) == 0) {
      sub_100053A40();
    }
  }
}

id sub_100054208(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_log;
  sub_1000545A4();
  uint64_t v4 = v1;
  *(void *)&v1[v3] = OS_os_log.init(subsystem:category:)();
  v4[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing] = 0;
  id v5 = &v4[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_committedText];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  uint64_t v6 = &v4[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for FBAExpandingTextView();
  [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_100053FEC();
  }
  return v8;
}

id sub_100054340()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FBAExpandingTextView();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAExpandingTextView()
{
  return self;
}

uint64_t sub_1000544F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100054530()
{
}

uint64_t sub_100054538(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100054548()
{
  return swift_release();
}

unint64_t sub_100054550()
{
  unint64_t result = qword_100122F60;
  if (!qword_100122F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122F60);
  }
  return result;
}

unint64_t sub_1000545A4()
{
  unint64_t result = qword_100122558;
  if (!qword_100122558)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122558);
  }
  return result;
}

uint64_t Logger.init(fbaCategory:)()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  return Logger.init(subsystem:category:)();
}

uint64_t sub_100054640()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, static Logger.app);
  sub_1000537C4(v0, (uint64_t)static Logger.app);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.app.unsafeMutableAddressor()
{
  return sub_100054840(&qword_100121DA8, (uint64_t)static Logger.app);
}

uint64_t static Logger.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000548B8(&qword_100121DA8, (uint64_t)static Logger.app, a1);
}

uint64_t sub_1000546F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, static Logger.attachment);
  sub_1000537C4(v0, (uint64_t)static Logger.attachment);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.attachment.unsafeMutableAddressor()
{
  return sub_100054840(&qword_100121DB0, (uint64_t)static Logger.attachment);
}

uint64_t static Logger.attachment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000548B8(&qword_100121DB0, (uint64_t)static Logger.attachment, a1);
}

uint64_t sub_1000547AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, static Logger.model);
  sub_1000537C4(v0, (uint64_t)static Logger.model);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.model.unsafeMutableAddressor()
{
  return sub_100054840(&qword_100121DB8, (uint64_t)static Logger.model);
}

uint64_t sub_100054840(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();

  return sub_1000537C4(v3, a2);
}

uint64_t static Logger.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000548B8(&qword_100121DB8, (uint64_t)static Logger.model, a1);
}

uint64_t sub_1000548B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = sub_1000537C4(v5, a2);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

void sub_100054AD8()
{
  unk_100125F45 = 0;
  unk_100125F46 = -5120;
}

void sub_100054C14()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub);
  if (!v1) {
    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v17 = v1;
  if (Strong)
  {
    id v3 = [v17 name];
    [Strong setText:v3];
  }
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = [v17 formDescription];
    [v5 setText:v6];
  }
  id v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v7)
  {
    __break(1u);
    goto LABEL_20;
  }
  id v8 = v7;
  id v9 = [v7 text];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    swift_bridgeObjectRelease();
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (!v13)
    {
      uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v16)
      {
        uint64_t v15 = v16;
        [v16 setActive:1];
        goto LABEL_16;
      }
LABEL_21:
      __break(1u);
      return;
    }
  }
  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v15 = v14;
  [v14 setActive:0];
LABEL_16:
}

id sub_100054E50(char a1)
{
  v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = a1;
  if (a1) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = 0;
  }
  [v1 setAccessoryType:a1 & 1];

  return [v1 setSelectionStyle:v2];
}

id sub_100054EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_itemIdentifier];
  void *v6 = 0;
  v6[1] = 0xE000000000000000;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = 1;
  if (a3)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for FBATopicCell();
  [super initWithStyle:a1 reuseIdentifier:v7];

  return v8;
}

id sub_100054FF8(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_itemIdentifier];
  *id v3 = 0;
  v3[1] = 0xE000000000000000;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_formStub] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant12FBATopicCell_disclosesMoreForms] = 1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FBATopicCell();
  [super initWithCoder:a1];

  return v4;
}

id sub_1000550DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATopicCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBATopicCell()
{
  return self;
}

id sub_1000551B4()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1) {
    goto LABEL_9;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_100073E94(0xD000000000000014, 0x80000001000E0DD0), (v4 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100053854(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_100055344((uint64_t)&v8);
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    return (id)v7;
  }
LABEL_9:
  static os_log_type_t.fault.getter();
  id result = [self appHandle];
  if (result)
  {
    objc_super v6 = result;
    os_log(_:dso:log:_:_:)();

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100055344(uint64_t a1)
{
  uint64_t v2 = sub_10004DE60((uint64_t *)&unk_100122D70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_10005551C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = a1;
  swift_bridgeObjectRelease();
  id result = [v1 tableView];
  if (result)
  {
    char v4 = result;
    [result reloadData];

    v9.receiver = v1;
    v9.super_class = (Class)type metadata accessor for FBATeamPickerController();
    [super preferredContentSize];
    double v6 = v5;
    unint64_t v7 = *(void *)&v1[v2];
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    return [v1 setPreferredContentSize:v6, (double)v8 * 70.0 + 15.0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000556E4(char a1)
{
  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = a1;
  id v5 = [v1 navigationItem];
  if (a1)
  {
    id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v1 action:"dismissSelf"];
    [v5 setRightBarButtonItem:v3];

    char v4 = v3;
  }
  else
  {
    [v5 setRightBarButtonItem:0];
    char v4 = v5;
  }
}

void sub_1000557FC()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FBATeamPickerController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  [v1 setShowsVerticalScrollIndicator:0];

  id v3 = [v0 tableView];
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  char v4 = v3;
  [v3 setEstimatedRowHeight:60.0];

  id v5 = [v0 tableView];
  if (v5)
  {
    double v6 = v5;
    [v5 setRowHeight:UITableViewAutomaticDimension];

    return;
  }
LABEL_7:
  __break(1u);
}

unint64_t sub_100055B34(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 dequeueReusableCellWithIdentifier:v8 forIndexPath:isa];

  unint64_t result = IndexPath.section.getter();
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams];
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (result >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    __break(1u);
    return result;
  }
  id v13 = *(id *)(v12 + 8 * result + 32);
LABEL_5:
  static UIListContentConfiguration.subtitleCell()();
  id v14 = [v13 name];
  if (v14)
  {
    uint64_t v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v48 = v10;
  UIListContentConfiguration.text.setter();
  id v16 = [v13 typeString];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v21) {
      UIListContentConfiguration.secondaryText.setter();
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  id v22 = (void *)FBKSystemImageNameInbox;
  uint64_t v23 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v24 = v22;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v23 systemImageNamed:v25];

  UIListContentConfiguration.image.setter();
  id v27 = objc_allocWithZone((Class)UIColor);
  Swift::String v51 = sub_1000560B8;
  uint64_t v52 = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100079B94;
  long long v50 = &unk_1000F4700;
  id v28 = _Block_copy(aBlock);
  id v29 = [v27 initWithDynamicProvider:v28];
  _Block_release(v28);
  swift_release();
  id v30 = v29;
  uint64_t v31 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v31(aBlock, 0);
  id v32 = [v2 traitCollection];
  id v33 = [v32 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
  char v34 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  v34(aBlock, 0);
  id v35 = v30;
  NSString v36 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v36(aBlock, 0);
  char v37 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  v37(aBlock, 0);
  id v38 = v35;
  NSString v39 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.tintColor.setter();
  v39(aBlock, 0);
  long long v50 = (void *)v4;
  Swift::String v51 = (id (*)(void *))&protocol witness table for UIListContentConfiguration;
  uint64_t v40 = sub_100056D18(aBlock);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v40, v7, v4);
  uint64_t v41 = v48;
  UITableViewCell.contentConfiguration.setter();
  uint64_t v42 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam];
  if (v42
    && (sub_100056B94(0, &qword_100122610),
        id v43 = v13,
        id v44 = v42,
        char v45 = static NSObject.== infix(_:_:)(),
        v43,
        v44,
        (v45 & 1) != 0))
  {
    uint64_t v46 = 3;
  }
  else
  {
    uint64_t v46 = 0;
  }
  [v41 setAccessoryType:v46];

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (unint64_t)v41;
}

id sub_1000560B8(void *a1)
{
  if ([a1 userInterfaceStyle] == (id)2)
  {
    id v1 = [self labelColor];
    return v1;
  }
  else
  {
    id result = [self tintColor];
    if (!result) {
      __break(1u);
    }
  }
  return result;
}

void *sub_100056250(uint64_t a1)
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = result;
    if ([result respondsToSelector:"teamPickerDidCancel:"]) {
      [v3 teamPickerDidCancel:a1];
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000564BC()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 teamsMatchingFormID];
    sub_100056B94(0, &qword_100122610);
    sub_100056B2C();
    uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000869D4(v4);
    swift_bridgeObjectRelease();
    v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    Class isa = (Class)[self sortDescriptors];
    if (!isa)
    {
      sub_100056B94(0, &qword_100122620);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    id v7 = [(objc_class *)v5.super.isa sortedArrayUsingDescriptors:isa];

    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    objc_super v9 = sub_100085CBC(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams;
    *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = v9;
    swift_bridgeObjectRelease();
    id v11 = [v0 tableView];
    if (v11)
    {
      uint64_t v12 = v11;
      [v11 reloadData];

      v17.receiver = v0;
      v17.super_class = (Class)type metadata accessor for FBATeamPickerController();
      [super preferredContentSize];
      double v14 = v13;
      unint64_t v15 = *(void *)&v0[v10];
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      [v0 setPreferredContentSize:v14, (double)v16 * 70.0 + 15.0];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100056728(uint64_t a1)
{
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  *id v3 = 0xD000000000000012;
  v3[1] = 0x80000001000E0F50;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBATeamPickerController();
  return [super initWithStyle:a1];
}

id sub_100056808(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  void *v6 = 0xD000000000000012;
  v6[1] = 0x80000001000E0F50;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit();
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for FBATeamPickerController();
  [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_100056968(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_cellReuseIdentifier];
  *id v3 = 0xD000000000000012;
  v3[1] = 0x80000001000E0F50;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_formStub] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams] = &_swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_selectedTeam] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_showsDismissButton] = 0;
  swift_unknownObjectWeakInit();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FBATeamPickerController();
  [super initWithCoder:a1];

  return v4;
}

id sub_100056A54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATeamPickerController();
  return [super dealloc];
}

uint64_t type metadata accessor for FBATeamPickerController()
{
  return self;
}

unint64_t sub_100056B2C()
{
  unint64_t result = qword_100122618;
  if (!qword_100122618)
  {
    sub_100056B94(255, &qword_100122610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122618);
  }
  return result;
}

uint64_t sub_100056B94(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100056BD0()
{
  uint64_t v1 = v0;
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  id v3 = (void *)result;
  unint64_t result = IndexPath.section.getter();
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant23FBATeamPickerController_teams);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v5 = *(id *)(v4 + 8 * result + 32);
LABEL_6:
  [v3 teamPicker:v1 didSelectTeam:v5];

  return swift_unknownObjectRelease();
}

uint64_t sub_100056CC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_100056CF8()
{
  return sub_100056250(*(void *)(v0 + 16));
}

uint64_t sub_100056D00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100056D10()
{
  return swift_release();
}

uint64_t *sub_100056D18(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100056D7C(uint64_t a1)
{
  return a1;
}

id sub_100056DAC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10004DE60(&qword_100122698);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NSString v10 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [a1 dequeueReusableCellWithReuseIdentifier:v10 forIndexPath:isa];

  uint64_t v15 = v3;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  type metadata accessor for BatchUIButtonView();
  sub_1000592CC();
  UIHostingConfiguration<>.init(content:)();
  static Edge.Set.all.getter();
  v18[3] = v6;
  v18[4] = sub_100059324();
  sub_100056D18(v18);
  UIHostingConfiguration.margins(_:_:)();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  UICollectionViewCell.contentConfiguration.setter();
  return v12;
}

uint64_t sub_100056F60@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  return sub_10009F790((uint64_t)sub_10005948C, v10, a2);
}

void sub_1000570F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v1 collectionView:v3 didSelectItemAtIndexPath:isa];

      uint64_t v1 = isa;
    }
  }
}

uint64_t sub_1000572EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FBANotEnrolledView();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)&v8[*(int *)(v3 + 32)] = swift_getKeyPath();
  sub_10004DE60(&qword_100122280);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = 0;
  *((void *)v8 + 1) = sub_1000591F0;
  *((void *)v8 + 2) = v9;
  sub_100059200((uint64_t)v8, (uint64_t)v6);
  id v10 = objc_allocWithZone((Class)sub_10004DE60(&qword_100122690));
  id v11 = (void *)UIHostingController.init(rootView:)();
  [v11 setModalPresentationStyle:2];
  [v1 presentViewController:v11 animated:1 completion:0];

  return sub_100059264((uint64_t)v8);
}

void sub_100057464()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100057510(void *a1, id a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v79 = a7;
  uint64_t v80 = a5;
  uint64_t v81 = a6;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v78 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059198();
  uint64_t v16 = (void *)static UIStoryboard.feedbackDraftViewController.getter();
  self;
  id v83 = v16;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (!v17) {
    goto LABEL_55;
  }
  uint64_t v18 = v17;
  [v17 setDelegate:v8];
  [v18 setPendingStub:a1];
  [v18 setCanShowTopicPicker:1];
  [v18 setShouldShowUserSwitcherInForm:0];
  [v18 setCanShowTeamPicker:1];
  [v18 setLaunchAction:a4];
  [v18 setSubmissionStyle:0];
  unint64_t v19 = [v8 splitViewController];
  id v82 = v8;
  if (v19)
  {
    unint64_t v20 = v19;
    id v21 = [v19 traitCollection];
    id v22 = [v21 horizontalSizeClass];

    if (v22 == (id)2)
    {
      id v23 = [v20 view];
      if (!v23)
      {
        __break(1u);
LABEL_54:

        __break(1u);
LABEL_55:

        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      id v24 = v23;
      [v23 frame];
      double v26 = v25;
      double v28 = v27;

      id v29 = v83;
      [v18 setPreferredContentSize:v26 * 0.7, v28 * 0.7];
    }
  }
  else
  {
    if (qword_100121DA8 != -1) {
      swift_once();
    }
    sub_1000537C4(v13, (uint64_t)static Logger.app);
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v30, "No split view controller from Mailboxes. Cannot set preferred content size for BFTVC", v31, 2u);
      swift_slowDealloc();
    }
  }

  if (a4)
  {
    id v32 = a4;
    id v33 = [v32 exactMatchFormStub];
    if (v33)
    {
      char v34 = v33;
      id v35 = [self predicateForStub:v33];
      [v18 setCandidateFormStubsPredicate:v35];

      if (!a1) {
        goto LABEL_13;
      }
LABEL_21:
      id v47 = a1;
      id v48 = [v47 name];
      if (v48)
      {
        long long v49 = v48;
        uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v52 = v51;
      }
      else
      {
        uint64_t v50 = 0;
        unint64_t v52 = 0xE000000000000000;
      }
      if (qword_100121DA8 != -1) {
        swift_once();
      }
      sub_1000537C4(v13, (uint64_t)static Logger.app);
      a2 = v47;
      swift_bridgeObjectRetain();
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v78 = v50;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = (void *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 138543618;
        id v57 = [a2 ID];
        id v58 = v57;
        if (v57) {
          uint64_t v84 = (uint64_t)v57;
        }
        else {
          uint64_t v84 = 0;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v56 = v58;

        *(_WORD *)(v55 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_10009EC3C(v78, v52, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Will launch new draft for form: %{public}@ - %s", (uint8_t *)v55, 0x16u);
        sub_10004DE60(&qword_1001229C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      [v18 loadNewResponseForBugFormStub:a2 forTeam:v80];
      goto LABEL_48;
    }
  }
  id v46 = [self predicateForAllStubs];
  [v18 setCandidateFormStubsPredicate:v46];

  if (a1) {
    goto LABEL_21;
  }
LABEL_13:
  if (a3)
  {
    uint64_t v36 = qword_100121DA8;
    id v37 = a3;
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1000537C4(v13, (uint64_t)static Logger.app);
    uint64_t v39 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v15, v38, v13);
    a2 = v37;
    uint64_t v40 = Logger.logObject.getter();
    int v41 = static os_log_type_t.default.getter();
    v77 = v40;
    if (!os_log_type_enabled(v40, (os_log_type_t)v41))
    {

      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v13);
LABEL_43:
      [v18 loadNewResponseForSurvey:a2 forTeam:v80];
LABEL_48:

      goto LABEL_49;
    }
    uint64_t v42 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    aBlock[0] = v75;
    *(_DWORD *)uint64_t v42 = 134218242;
    id v43 = [a2 ID:v75];
    if (v43)
    {
      id v44 = v43;
      id v45 = [v43 integerValue];
    }
    else
    {
      id v45 = 0;
      id v44 = a2;
    }
    int v76 = v41;

    uint64_t v84 = (uint64_t)v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v42 + 12) = 2082;
    id v67 = [a2 name];
    if (v67)
    {
      unsigned __int8 v68 = v67;
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v71 = v70;

      uint64_t v84 = sub_10009EC3C(v69, v71, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      long long v72 = v77;
      _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v76, "Will new survey draft with form: %ld - %{public}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v78 + 8))(v15, v13);
      goto LABEL_43;
    }
    goto LABEL_54;
  }
  if (a2)
  {
    uint64_t v59 = qword_100121DA8;
    id v60 = a2;
    if (v59 != -1) {
      swift_once();
    }
    sub_1000537C4(v13, (uint64_t)static Logger.app);
    a2 = v60;
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      unsigned __int8 v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v63 = 138543362;
      id v65 = [a2 ID];
      id v66 = v65;
      if (v65) {
        aBlock[0] = (uint64_t)v65;
      }
      else {
        aBlock[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v64 = v66;

      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Will launch draft with ID: %{public}@", v63, 0xCu);
      sub_10004DE60(&qword_1001229C0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    [v18 loadDraft:a2];
    goto LABEL_48;
  }
LABEL_49:
  id v73 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v18];
  if (v81)
  {
    aBlock[4] = v81;
    aBlock[5] = v79;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000992C4;
    uint64_t aBlock[3] = (uint64_t)&unk_1000F47A0;
    long long v74 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    long long v74 = 0;
  }
  [v82 presentViewController:v73 animated:1 completion:v74];
  _Block_release(v74);
}

void FBAMailboxesViewController.controllerWillFinishSubmission(_:)(uint64_t a1)
{
}

void FBAMailboxesViewController.controllerWillResignFirstActive(_:)(uint64_t a1)
{
}

void sub_100058230(uint64_t a1, SEL *a2)
{
  id v3 = [self sharedInstance];
  [v3 *a2];
}

void sub_1000582A4(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v7 = self;
  id v8 = a3;
  id v9 = a1;
  id v10 = [v7 sharedInstance];
  [v10 *a4];
}

void sub_100058340(void *a1)
{
  uint64_t v2 = [a1 launchAction];
  if (v2)
  {
    uint64_t v12 = v2;
    if ([v2 isCaptive])
    {
      id v3 = [a1 formResponse];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = [self sharedInstance];
        uint64_t v6 = [v4 contentItem];
        if (!v6)
        {
          __break(1u);
          return;
        }
        uint64_t v7 = v6;
        [v5 showModalFeedbackControllerForContentItem:v6 launchAction:v12];
      }
      else
      {
        if (qword_100121DA8 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_1000537C4(v9, (uint64_t)static Logger.app);
        uint64_t v7 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v7, v10))
        {
          id v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, v10, "Form Response is nil. Cannot showModalFeedbackController", v11, 2u);
          swift_slowDealloc();
          uint64_t v5 = v12;
        }
        else
        {
          uint64_t v5 = v7;
          uint64_t v7 = v12;
        }
      }

      id v8 = v7;
    }
    else
    {
      id v8 = v12;
    }
  }
}

void sub_100058604(void *a1)
{
  id v1 = [a1 launchAction];
  if (v1)
  {
    id v2 = v1;
    if ([v1 isCaptive]) {
      [self exitCaptiveModeRemovingFromHomeScreen:[v2 shouldMakeFBAVisible]];
    }
  }
}

uint64_t FBAMailboxesViewController.batchEvaluationViewController(useNavigationStack:showsCloseButton:onDismiss:)()
{
  type metadata accessor for ScoreController();
  swift_allocObject();
  swift_retain();
  ScoreController.init()();
  id v0 = objc_allocWithZone((Class)type metadata accessor for BatchEvaluationViewController());
  return BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)();
}

uint64_t FBAMailboxesViewController.shouldShowBatchUI(completion:)()
{
  return static BatchEvaluationViewController.shouldShowBatchUI(completion:)();
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_37didClickSwitchAccountsWithCurrentUserySo015FBKBugFormTablebC0C_So7FBKUserCtF_0()
{
  if (qword_100121DA8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000537C4(v0, (uint64_t)static Logger.app);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)id v2 = 136315138;
    sub_10009EC3C(0xD000000000000034, 0x80000001000E1140, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "%s not supported in FBA", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_28didFinishSubmissionWithErrorySo015FBKBugFormTablebC0C_s0K0_pSgtF_0(void *a1)
{
  id v2 = v1;
  if (qword_100121DA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000537C4(v4, (uint64_t)static Logger.app);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10009EC3C(0xD00000000000002BLL, 0x80000001000E1110, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  aBlock[4] = (uint64_t)sub_100059530;
  aBlock[5] = v8;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000992C4;
  uint64_t aBlock[3] = (uint64_t)&unk_1000F48B8;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = a1;
  swift_release();
  [v2 dismissViewControllerAnimated:1 completion:v9];
  _Block_release(v9);
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_27didFailToLoadDraftWithErrorySo015FBKBugFormTablebC0C_s0M0_ptF_0()
{
  [v0 dismissViewControllerAnimated:1 completion:0];
  if (qword_100121DA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000537C4(v1, (uint64_t)static Logger.app);
  oslog = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)id v3 = 136315138;
    sub_10009EC3C(0xD00000000000002ALL, 0x80000001000E10E0, &v5);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void _sSo26FBAMailboxesViewControllerC18Feedback_AssistantE10controller_33didRequestDismissalWithSavedDraftySo015FBKBugFormTablebC0C_SbtF_0(void *a1)
{
  os_log_type_t v2 = v1;
  if (qword_100121DA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000537C4(v4, (uint64_t)static Logger.app);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10009EC3C(0xD000000000000030, 0x80000001000E10A0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  aBlock[4] = (uint64_t)sub_100059528;
  aBlock[5] = v8;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000992C4;
  uint64_t aBlock[3] = (uint64_t)&unk_1000F4868;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = a1;
  swift_release();
  [v2 dismissViewControllerAnimated:1 completion:v9];
  _Block_release(v9);
}

uint64_t sub_100059130()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100059168(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_100059180()
{
  return sub_1000929D0(*(void *)(v0 + 16));
}

uint64_t sub_100059188(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_100059198()
{
  unint64_t result = qword_100122688;
  if (!qword_100122688)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122688);
  }
  return result;
}

uint64_t sub_1000591D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000591E8()
{
  return swift_release();
}

void sub_1000591F0()
{
}

uint64_t sub_100059200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FBANotEnrolledView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100059264(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FBANotEnrolledView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000592C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100056F60(*(void *)(v1 + 32), a1);
}

unint64_t sub_1000592CC()
{
  unint64_t result = qword_1001226A0;
  if (!qword_1001226A0)
  {
    type metadata accessor for BatchUIButtonView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001226A0);
  }
  return result;
}

unint64_t sub_100059324()
{
  unint64_t result = qword_1001226A8;
  if (!qword_1001226A8)
  {
    sub_10004DF00(&qword_100122698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001226A8);
  }
  return result;
}

uint64_t sub_100059380()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000593B8()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10005948C()
{
  type metadata accessor for IndexPath();

  sub_1000570F4();
}

uint64_t sub_1000594F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100059528()
{
  sub_100058604(*(void **)(v0 + 16));
}

void sub_100059530()
{
  sub_100058340(*(void **)(v0 + 16));
}

id sub_10005969C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBANoBugSessionAlertViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FBANoBugSessionAlertViewController()
{
  return self;
}

void sub_1000596F4(void *a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  v22._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 19279;
  v7._object = (void *)0xE200000000000000;
  v8.value._uint64_t countAndFlagsBits = v2;
  v8.value._object = v4;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v22);
  swift_bridgeObjectRelease();

  id v10 = [v5 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v23._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
  v23._object = (void *)0x80000001000E1200;
  v11._object = (void *)0x80000001000E11C0;
  v12._object = (void *)0x80000001000E11E0;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v23);

  id v13 = [v5 mainBundle];
  v24._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
  v14._uint64_t countAndFlagsBits = 0xD00000000000005DLL;
  v24._object = (void *)0x80000001000E12E0;
  v15._object = (void *)0x80000001000E1260;
  v14._object = (void *)0x80000001000E1280;
  v15._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v13, v14, v24);

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [self actionWithTitle:v19 style:0 handler:0];

  [v18 addAction:v20];
  [a1 presentViewController:v18 animated:1 completion:0];
}

void sub_100059A68()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FBAFilterPickerController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10005A854();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    id v5 = [v0 navigationItem];
    id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v0 action:"dismissSelf"];
    [v5 setRightBarButtonItem:v6];

    id v7 = [v0 navigationItem];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = v9;
    id v11 = [self mainBundle];
    v17._object = (void *)0xE000000000000000;
    v12._uint64_t countAndFlagsBits = 0x535245544C4946;
    v12._object = (void *)0xE700000000000000;
    v13.value._uint64_t countAndFlagsBits = v8;
    v13.value._object = v10;
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v17._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v17);
    swift_bridgeObjectRelease();

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setTitle:v15];
  }
  else
  {
    __break(1u);
  }
}

void sub_100059DBC(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v6) {
    return;
  }
  id v7 = v6;
  unint64_t v8 = IndexPath.section.getter();
  uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups];
  if ((v9 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v10 = (char *)*(id *)(v9 + 8 * v8 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  id v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_6:
  unint64_t v11 = IndexPath.item.getter();
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain();

  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_24:
    Swift::String_optional v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_26:
    __break(1u);
    return;
  }
  Swift::String_optional v13 = (char *)*(id *)(v12 + 8 * v11 + 32);
LABEL_10:
  Swift::String v14 = v13;

  swift_bridgeObjectRelease();
  id v15 = [v5 textLabel];
  if (v15)
  {
    objc_super v16 = v15;
    id v17 = [v14 title];
    [v16 setText:v17];
  }
  id v18 = [v5 imageView];
  if (v18)
  {
    NSString v19 = v18;
    id v20 = *(id *)&v14[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image];
    [v19 setImage:v20];
  }
  id v21 = [v5 imageView];
  if (v21)
  {
    Swift::String v22 = v21;
    id v23 = [self tintColor];
    [v22 setTintColor:v23];
  }
  if ([v14 active]) {
    uint64_t v24 = 3;
  }
  else {
    uint64_t v24 = 0;
  }
  [v5 setAccessoryType:v24];
  [v5 setAccessibilityTraits:UIAccessibilityTraitButton];
}

id sub_10005A498()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterPickerController();
  [super dealloc];
}

uint64_t type metadata accessor for FBAFilterPickerController()
{
  return self;
}

unint64_t sub_10005A500(unint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    NSString v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_6:
    unint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    swift_bridgeObjectRetain();

    if (!(v5 >> 62))
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    NSString v4 = (char *)*(id *)(v3 + 8 * result + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_10005A60C(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager];
  if (v4)
  {
    id v5 = v4;
    sub_100080BAC();
  }
  id v6 = [v2 tableView];
  if (v6)
  {
    id v7 = v6;
    sub_10004DE60(&qword_100122708);
    uint64_t v8 = type metadata accessor for IndexPath();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1000D86F0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v11 + v10, a1, v8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 reloadRowsAtIndexPaths:isa withRowAnimation:100];
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_10005A780(unint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant25FBAFilterPickerController_filterManager);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    NSString v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    NSString v4 = (char *)*(id *)(v3 + 8 * result + 32);
LABEL_6:
    uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    swift_bridgeObjectRetain();

    return v5;
  }
  __break(1u);
  return result;
}

unint64_t sub_10005A854()
{
  unint64_t result = qword_100122710;
  if (!qword_100122710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122710);
  }
  return result;
}

id sub_10005ABC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAEnhancedLoggingInbox();
  [super dealloc];
}

uint64_t type metadata accessor for FBAEnhancedLoggingInbox()
{
  return self;
}

unint64_t sub_10005AC20()
{
  unint64_t result = qword_100122990;
  if (!qword_100122990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122990);
  }
  return result;
}

uint64_t sub_10005AC60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10004DE60(&qword_1001228D8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController____lazy_storage___temporaryDirectory;
  swift_beginAccess();
  sub_100052400(v9, (uint64_t)v8, &qword_1001228D8);
  uint64_t v10 = sub_10004DE60(&qword_100122790);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_10006048C((uint64_t)v8, a1);
  }
  sub_100052464((uint64_t)v8, &qword_1001228D8);
  sub_100056B94(0, (unint64_t *)&unk_1001228E0);
  static FBKFileManager.temporaryDirectory(pathComponents:)();
  sub_100052400(a1, (uint64_t)v6, &qword_100122790);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_100060ED8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_10005AF0C(void *a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  id v69 = self;
  id v8 = [v69 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v76._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001000E1970;
  v10.value._uint64_t countAndFlagsBits = v5;
  v10.value._object = v7;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v76._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v76);
  swift_bridgeObjectRelease();

  Swift::String_optional v13 = (void *)FBKSystemImageNameAttachDeviceDiagnostics;
  id v71 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v71 systemImageNamed:v15];

  id v17 = (void (*)(uint64_t))swift_allocObject();
  *((void *)v17 + 2) = v2;
  *((void *)v17 + 3) = a1;
  *((void *)v17 + 4) = ObjectType;
  id v18 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  NSString v19 = objc_allocWithZone(v18);
  uint64_t v20 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v12;
  id v21 = *(void **)&v19[v20];
  *(void *)&v19[v20] = v16;
  id v22 = v2;
  id v23 = a1;
  uint64_t v24 = v19;
  id v25 = v16;

  double v26 = (void (**)(uint64_t))&v24[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  void *v26 = sub_100060CB8;
  v26[1] = v17;
  swift_retain();

  v75.receiver = v24;
  v75.super_class = v18;
  [super init];

  swift_release();
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v29 = v28;
  id v30 = [v69 mainBundle];
  v31._uint64_t countAndFlagsBits = 0xD000000000000024;
  v77._object = (void *)0xE000000000000000;
  v31._object = (void *)0x80000001000E1990;
  v32.value._uint64_t countAndFlagsBits = v27;
  v32.value._object = v29;
  v33._uint64_t countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v77._uint64_t countAndFlagsBits = 0;
  Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v77);
  swift_bridgeObjectRelease();

  id v35 = (void *)FBKSystemImageNameAttachPhoto;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v36 = v35;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = [v71 systemImageNamed:v37];

  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v22;
  *(void *)(v39 + 24) = v23;
  uint64_t v40 = objc_allocWithZone(v18);
  uint64_t v41 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v40[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v40[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v40[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v34;
  uint64_t v42 = *(void **)&v40[v41];
  *(void *)&v40[v41] = v38;
  id v43 = v22;
  id v44 = v23;
  id v45 = v40;
  id v46 = v38;

  id v47 = (id (**)(uint64_t))&v45[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  unsigned char *v47 = sub_100060CC4;
  v47[1] = (id (*)(uint64_t))v39;
  swift_retain();

  v74.receiver = v45;
  v74.super_class = v18;
  [super init];

  swift_release();
  id v49 = [v69 mainBundle];
  v50._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v78._object = (void *)0x80000001000E19E0;
  v50._object = (void *)0x80000001000E19C0;
  v51._uint64_t countAndFlagsBits = 0x73656C6946;
  v51._object = (void *)0xE500000000000000;
  v78._uint64_t countAndFlagsBits = 0xD000000000000013;
  Swift::String v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v78);

  uint64_t v53 = (void *)FBKSystemImageNameFolder;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v54 = v53;
  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v56 = [v71 systemImageNamed:v55];

  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v43;
  *(void *)(v57 + 24) = v44;
  id v58 = objc_allocWithZone(v18);
  uint64_t v59 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v58[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v58[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  *(Swift::String *)&v58[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title] = v52;
  id v60 = *(void **)&v58[v59];
  *(void *)&v58[v59] = v56;
  id v61 = v43;
  id v62 = v44;
  unsigned __int8 v63 = v58;
  id v64 = v56;

  id v65 = (id (**)(uint64_t))&v63[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *id v65 = sub_100060CCC;
  v65[1] = (id (*)(uint64_t))v57;
  swift_retain();

  v73.receiver = v63;
  v73.super_class = v18;
  id v66 = [super init];

  swift_release();
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1000D88A0;
  *(void *)(v67 + 32) = v70;
  *(void *)(v67 + 40) = v66;
  *(void *)(v67 + 48) = v48;
  uint64_t v72 = v67;
  specialized Array._endMutation()();
  return v72;
}

void sub_10005B518(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  static os_log_type_t.default.getter();
  id v8 = [self attachHandle];
  if (v8)
  {
    Swift::String v9 = v8;
    os_log(_:dso:log:_:_:)();

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::String v11 = Strong;
      if ([Strong respondsToSelector:"attachmentsAlertDidSelectOption:"]) {
        [v11 attachmentsAlertDidSelectOption:a2];
      }
      swift_unknownObjectRelease();
    }
    uint64_t v12 = swift_unknownObjectWeakLoadStrong();
    if (v12)
    {
      Swift::String_optional v13 = (void *)v12;
      id v14 = (void *)swift_allocObject();
      v14[2] = a1;
      v14[3] = a3;
      v14[4] = a4;
      void v17[4] = sub_100060DDC;
      v17[5] = v14;
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 1107296256;
      v17[2] = sub_10005BD98;
      v17[3] = &unk_1000F4E30;
      NSString v15 = _Block_copy(v17);
      swift_unknownObjectRetain();
      id v16 = a3;
      swift_release();
      [v13 attachmentsAlert:a2 needsDeviceDiagnosticsController:v15];
      swift_unknownObjectRelease();
      _Block_release(v15);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10005B6E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = __chkstk_darwin(v9);
  Swift::String_optional v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v42 = v6;
    id v43 = a3;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    id v14 = a1;
    id v15 = [v14 additionalDeviceCandidates];
    sub_100056B94(0, (unint64_t *)&unk_100122F70);
    sub_100060DE8();
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    id v17 = objc_allocWithZone((Class)FBADevicePickingNavigationController);
    id v18 = v14;
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v48 = (uint64_t (*)())sub_100060E88;
    uint64_t v49 = v16;
    aBlock = _NSConcreteStackBlock;
    uint64_t v45 = 1107296256;
    id v46 = sub_100098DAC;
    id v47 = &unk_1000F4E80;
    uint64_t v20 = _Block_copy(&aBlock);
    id v21 = [v17 initWithDeviceChoices:isa allowsMultipleSelection:1 completion:v20];

    _Block_release(v20);
    swift_release();
    if (v21)
    {
      id v22 = v21;
      [v22 setModalPresentationStyle:2];
      type metadata accessor for FBAActionSheetController();
      uint64_t v23 = swift_dynamicCastClass();
      if (v23)
      {
        uint64_t v24 = (void *)v23;
        uint64_t v25 = swift_allocObject();
        double v26 = v43;
        *(void *)(v25 + 16) = v43;
        *(void *)(v25 + 24) = v22;
        id v48 = sub_100060E90;
        uint64_t v49 = v25;
        aBlock = _NSConcreteStackBlock;
        uint64_t v45 = 1107296256;
        id v46 = sub_1000992C4;
        id v47 = &unk_1000F4F20;
        uint64_t v27 = _Block_copy(&aBlock);
        id v28 = v22;
        id v29 = v26;
        swift_unknownObjectRetain();
        swift_release();
        [v24 dismissViewControllerAnimated:1 completion:v27];

        _Block_release(v27);
        swift_unknownObjectRelease();
      }
      else
      {
        sub_100056B94(0, (unint64_t *)&qword_100122970);
        Swift::String v34 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v35 = swift_allocObject();
        id v36 = v43;
        *(void *)(v35 + 16) = v43;
        *(void *)(v35 + 24) = v22;
        id v48 = sub_100060F94;
        uint64_t v49 = v35;
        aBlock = _NSConcreteStackBlock;
        uint64_t v45 = 1107296256;
        id v46 = sub_1000992C4;
        id v47 = &unk_1000F4ED0;
        NSString v37 = _Block_copy(&aBlock);
        id v38 = v22;
        id v39 = v36;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock = (void **)&_swiftEmptyArrayStorage;
        sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10004DE60((uint64_t *)&unk_100122980);
        sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v37);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v5);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
      }
      return;
    }
    static os_log_type_t.error.getter();
    id v32 = [self attachHandle];
    if (v32)
    {
      Swift::String v33 = v32;
      os_log(_:dso:log:_:_:)();

      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
  static os_log_type_t.error.getter();
  id v30 = [self attachHandle];
  if (!v30)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v43 = v30;
  os_log(_:dso:log:_:_:)();
  Swift::String v31 = v43;
}

void sub_10005BD3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_1000606B4(a1, v3);
}

void sub_10005BD98(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_10005BE04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v41 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PHPickerConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  static os_log_type_t.default.getter();
  id result = [self attachHandle];
  if (result)
  {
    id v18 = result;
    os_log(_:dso:log:_:_:)();

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v20 = Strong;
      if ([Strong respondsToSelector:"attachmentsAlertDidSelectOption:"]) {
        [v20 attachmentsAlertDidSelectOption:a2];
      }
      swift_unknownObjectRelease();
    }
    PHPickerConfiguration.init()();
    PHPickerConfiguration.selectionLimit.setter();
    sub_100056B94(0, &qword_1001228B8);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    id v21 = (void *)PHPickerViewController.init(configuration:)();
    sub_1000604F4((unint64_t *)&unk_1001228C0, (void (*)(uint64_t))type metadata accessor for FBAAddAttachmentsController);
    swift_unknownObjectRetain();
    PHPickerViewController.delegate.setter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    type metadata accessor for FBAActionSheetController();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = (void *)v22;
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = v41;
      *(void *)(v24 + 16) = v41;
      *(void *)(v24 + 24) = v21;
      id v46 = sub_100060D2C;
      uint64_t v47 = v24;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      id v44 = sub_1000992C4;
      uint64_t v45 = &unk_1000F4D90;
      double v26 = _Block_copy(&aBlock);
      id v27 = v25;
      id v28 = v21;
      swift_unknownObjectRetain();
      swift_release();
      [v23 dismissViewControllerAnimated:1 completion:v26];

      _Block_release(v26);
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      sub_100056B94(0, (unint64_t *)&qword_100122970);
      id v29 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v30 = swift_allocObject();
      Swift::String v31 = v41;
      *(void *)(v30 + 16) = v41;
      *(void *)(v30 + 24) = v21;
      id v46 = sub_100060D14;
      uint64_t v47 = v30;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      id v44 = sub_1000992C4;
      uint64_t v45 = &unk_1000F4D40;
      id v32 = _Block_copy(&aBlock);
      id v33 = v31;
      id v34 = v21;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock = (void **)&_swiftEmptyArrayStorage;
      sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10004DE60((uint64_t *)&unk_100122980);
      sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
      uint64_t v35 = v40;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v35);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10005C3E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  id result = [self attachHandle];
  if (result)
  {
    uint64_t v12 = result;
    os_log(_:dso:log:_:_:)();

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v14 = Strong;
      if ([Strong respondsToSelector:"attachmentsAlertDidSelectOption:"]) {
        [v14 attachmentsAlertDidSelectOption:a2];
      }
      swift_unknownObjectRelease();
    }
    sub_10004DE60(&qword_1001228B0);
    type metadata accessor for UTType();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000D86F0;
    static UTType.item.getter();
    id v15 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v15 initForOpeningContentTypes:isa asCopy:1];

    [v17 setDelegate:a2];
    [v17 setAllowsMultipleSelection:1];
    type metadata accessor for FBAActionSheetController();
    uint64_t v18 = swift_dynamicCastClass();
    if (v18)
    {
      NSString v19 = (void *)v18;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a3;
      *(void *)(v20 + 24) = v17;
      uint64_t v35 = sub_100060CD4;
      uint64_t v36 = v20;
      aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      id v33 = sub_1000992C4;
      id v34 = &unk_1000F4CA0;
      id v21 = _Block_copy(&aBlock);
      id v22 = a3;
      id v23 = v17;
      swift_unknownObjectRetain();
      swift_release();
      [v19 dismissViewControllerAnimated:1 completion:v21];

      _Block_release(v21);
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      sub_100056B94(0, (unint64_t *)&qword_100122970);
      uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a3;
      *(void *)(v25 + 24) = v17;
      uint64_t v35 = sub_100060F94;
      uint64_t v36 = v25;
      aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      id v33 = sub_1000992C4;
      id v34 = &unk_1000F4C50;
      double v26 = _Block_copy(&aBlock);
      id v27 = a3;
      id v28 = v17;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock = (void **)&_swiftEmptyArrayStorage;
      sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10004DE60((uint64_t *)&unk_100122980);
      sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005C978(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = a4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = v21;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  id v18 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v22);
}

char *sub_10005CC58(void *a1, uint64_t a2, void *a3)
{
  static os_log_type_t.info.getter();
  id result = (char *)[self appHandle];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  os_log(_:dso:log:_:_:)();

  id v7 = [self mainBundle];
  v20._object = (void *)0xE000000000000000;
  v8._uint64_t countAndFlagsBits = 0x415454415F444441;
  v8._object = (void *)0xEE00544E454D4843;
  v9.value._uint64_t countAndFlagsBits = 0x74536E6F6D6D6F43;
  v9.value._object = (void *)0xED000073676E6972;
  v10._uint64_t countAndFlagsBits = 0x6174744120646441;
  v10._object = (void *)0xEE00746E656D6863;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v20);

  uint64_t v12 = sub_10005AF0C(a1);
  id v13 = objc_allocWithZone((Class)type metadata accessor for FBAActionSheetController());
  id v14 = sub_100077C80(v11._countAndFlagsBits, (uint64_t)v11._object, 0, 0, v12);
  id result = (char *)[a1 tableView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v15 = result;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v15 deselectRowAtIndexPath:isa animated:1];

  if (a3)
  {
    id v17 = a3;
    id v18 = [v14 popoverPresentationController];
    if (v18)
    {
      NSString v19 = v18;
      [v17 bounds];
      [v19 setSourceRect:];
      [v19 setSourceView:v17];
      [v19 setPermittedArrowDirections:2];
    }
  }
  return v14;
}

id sub_10005D0B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAddAttachmentsController();
  return [super dealloc];
}

uint64_t sub_10005D138()
{
  return type metadata accessor for FBAAddAttachmentsController();
}

uint64_t type metadata accessor for FBAAddAttachmentsController()
{
  uint64_t result = qword_100122778;
  if (!qword_100122778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005D18C()
{
  sub_10005D228();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10005D228()
{
  if (!qword_100122788)
  {
    sub_10004DF00(&qword_100122790);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100122788);
    }
  }
}

void sub_10005D284(void *a1, uint64_t a2)
{
  static os_log_type_t.default.getter();
  id v5 = [self attachHandle];
  if (v5)
  {
    uint64_t v6 = v5;
    os_log(_:dso:log:_:_:)();

    [a1 dismissViewControllerAnimated:1 completion:0];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::String v8 = (void *)Strong;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a2;
      void v11[4] = sub_1000601BC;
      void v11[5] = v9;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      _DWORD v11[2] = sub_10005BD98;
      void v11[3] = &unk_1000F4908;
      Swift::String v10 = _Block_copy(v11);
      swift_bridgeObjectRetain();
      swift_release();
      [v8 attachmentsAlert:v2 needsDeviceDiagnosticsController:v10];
      swift_unknownObjectRelease();
      _Block_release(v10);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10005D40C(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    if (v3)
    {
      uint64_t v5 = *(void *)(type metadata accessor for PHPickerResult() - 8);
      uint64_t v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v7 = *(void *)(v5 + 72);
      id v8 = a1;
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v9 = (void *)PHPickerResult.itemProvider.getter();
        [v8 addAttachmentWithItemProvider:v9];

        v6 += v7;
        --v3;
      }
      while (v3);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    id v10 = [self attachHandle];
    if (v10)
    {
      id v11 = v10;
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10005D5B8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    static os_log_type_t.error.getter();
    id v28 = [self attachHandle];
    if (v28)
    {
      id v35 = v28;
      os_log(_:dso:log:_:_:)();
      id v29 = v35;

      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
  id v34 = v10;
  id v35 = a1;
  static os_log_type_t.debug.getter();
  id v11 = [self attachHandle];
  if (!v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v12 = v11;
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000D86F0;
  *(void *)(v13 + 56) = sub_10004DE60(&qword_100122898);
  *(void *)(v13 + 64) = sub_100052668((unint64_t *)&unk_1001228A0, &qword_100122898);
  *(void *)(v13 + 32) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v5 + 16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v32 = v16;
    id v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    NSString v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v20 = a2;
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v33 = v15;
    uint64_t v22 = (void (**)(char *, uint64_t))(v15 - 8);
    v30[2] = v20;
    swift_bridgeObjectRetain();
    v30[1] = (unint64_t)v18 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v34;
    while (1)
    {
      v32(v23, v17, v4);
      uint64_t v24 = *v18;
      (*v18)(v23, 0, 1, v4);
      if ((*v19)(v23, 1, v4) == 1) {
        break;
      }
      (*v21)(v7, v23, v4);
      URL._bridgeToObjectiveC()(v25);
      id v27 = v26;
      [v35 moveFileFrom:v26];

      uint64_t v23 = v34;
      (*v22)(v7, v4);
      v17 += v31;
      if (!--v14) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    uint64_t v23 = v34;
LABEL_13:
    v24(v23, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
}

void sub_10005DA28(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v58 = a4;
  uint64_t v59 = a3;
  uint64_t v57 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v56 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v49 - v16;
  id v18 = [a2 presentedViewController];

  if (v18)
  {
    sub_100056B94(0, (unint64_t *)&qword_100122970);
    uint64_t v51 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    Swift::String v50 = v17;
    + infix(_:_:)();
    NSString v19 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v52 = v11;
    uint64_t v53 = v19;
    v19(v15, v11);
    uint64_t v20 = (void *)swift_allocObject();
    uint64_t v21 = v57;
    uint64_t v22 = v58;
    v20[2] = v54;
    v20[3] = v21;
    uint64_t v54 = v8;
    uint64_t v23 = v21;
    uint64_t v24 = v59;
    v20[4] = a2;
    v20[5] = v24;
    v20[6] = v22;
    id v64 = sub_10006027C;
    id v65 = v20;
    aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    id v62 = sub_1000992C4;
    unsigned __int8 v63 = &unk_1000F49A8;
    uint64_t v25 = _Block_copy(&aBlock);
    id v26 = v23;
    id v27 = a2;
    id v28 = v24;
    swift_errorRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10004DE60((uint64_t *)&unk_100122980);
    sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v30 = v50;
    id v29 = (void *)v51;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v54);
    v53(v30, v52);
  }
  else
  {
    uint64_t v31 = self;
    id v32 = [v31 mainBundle];
    v66._uint64_t countAndFlagsBits = 0xD000000000000044;
    v66._object = (void *)0x80000001000E16E0;
    v33._object = (void *)0x80000001000E16C0;
    v34._uint64_t countAndFlagsBits = 0x545F44454C494146;
    v34._object = (void *)0xEE0059504F435F4FLL;
    v33._uint64_t countAndFlagsBits = 0xD000000000000014;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v32, v33, v66);

    swift_getErrorValue();
    Error.localizedDescription.getter();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [self alertControllerWithTitle:v35 message:v36 preferredStyle:1];

    id v38 = [v31 mainBundle];
    v67._object = (void *)0xE000000000000000;
    v39._uint64_t countAndFlagsBits = 19279;
    v39._object = (void *)0xE200000000000000;
    v40._uint64_t countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v67._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v67);

    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v59;
    uint64_t v43 = v57;
    *(void *)(v41 + 16) = v59;
    *(void *)(v41 + 24) = v43;
    id v44 = v43;
    id v45 = v42;
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v64 = sub_10006021C;
    id v65 = (void *)v41;
    aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    id v62 = sub_10004D1A4;
    unsigned __int8 v63 = &unk_1000F4958;
    uint64_t v47 = _Block_copy(&aBlock);
    swift_release();
    id v48 = [self actionWithTitle:v46 style:0 handler:v47];
    _Block_release(v47);

    [v37 addAction:v48];
    [a2 presentViewController:v37 animated:1 completion:0];
  }
}

id sub_10005E204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10004DE60(&qword_100122880);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return [objc_allocWithZone((Class)UITableViewDropProposal) initWithDropOperation:1];
  }
  uint64_t v12 = (void *)Strong;
  sub_100052400(a3, (uint64_t)v10, &qword_100122880);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  unsigned int v16 = [v12 isReadyForDropSessionFromController:v4 tableView:a1 dropSessionDidUpdate:a2 withDestinationIndexPath:isa];

  if (!v16)
  {
    swift_unknownObjectRelease();
    return [objc_allocWithZone((Class)UITableViewDropProposal) initWithDropOperation:1];
  }
  id v17 = [objc_allocWithZone((Class)UITableViewDropProposal) initWithDropOperation:2 intent:0];
  swift_unknownObjectRelease();
  return v17;
}

void sub_10005E548(char *a1)
{
  uint64_t v2 = v1;
  Swift::String v78 = a1;
  uint64_t v63 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v60 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchQoS();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(char **)(v8 - 8);
  uint64_t v10 = *((void *)v9 + 8);
  uint64_t v11 = __chkstk_darwin(v8);
  Swift::String v77 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter();
  uint64_t v76 = UTType.identifier.getter();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  dispatch_group_t v79 = dispatch_group_create();
  uint64_t v57 = v2;
  sub_10005AC60((uint64_t)v7);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v9 + 6))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100052464((uint64_t)v7, &qword_100122790);
    static os_log_type_t.error.getter();
    id v20 = [self attachHandle];
    if (v20)
    {
      uint64_t v21 = v20;
      os_log(_:dso:log:_:_:)();

      return;
    }
    goto LABEL_17;
  }
  id v70 = (void (*)(char *, char *, uint64_t))*((void *)v9 + 4);
  id v71 = v9 + 32;
  v70(v13, v7, v8);
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = _swiftEmptyArrayStorage;
  id v22 = [v78 items];
  sub_10004DE60(&qword_100122858);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v73 = v8;
  uint64_t v74 = v19;
  Swift::String v78 = v9;
  objc_super v75 = v13;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v25 = v79;
    if (!v24) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v25 = v79;
    if (!v24) {
      goto LABEL_13;
    }
  }
  if (v24 < 1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v26 = 0;
  unint64_t v67 = v23 & 0xC000000000000001;
  Swift::String v66 = v78 + 16;
  uint64_t v65 = v10 + 7;
  id v64 = &v83;
  uint64_t v68 = v24;
  unint64_t v69 = v23;
  do
  {
    if (v67)
    {
      id v27 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v27 = *(void **)(v23 + 8 * v26 + 32);
      swift_unknownObjectRetain();
    }
    id v28 = v78;
    id v29 = v75;
    ++v26;
    dispatch_group_enter(v25);
    id v30 = [v27 dragItem];
    id v31 = [v30 itemProvider];

    NSString v32 = String._bridgeToObjectiveC()();
    Swift::String v33 = v77;
    uint64_t v34 = v73;
    (*((void (**)(char *, char *, uint64_t))v28 + 2))(v77, v29, v73);
    unint64_t v35 = (v28[80] + 16) & ~(unint64_t)v28[80];
    unint64_t v36 = (v65 + v35) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = v34;
    uint64_t v25 = v79;
    v70((char *)(v37 + v35), v33, v38);
    *(void *)(v37 + v36) = v72;
    *(void *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v25;
    uint64_t v85 = sub_100060368;
    uint64_t v86 = v37;
    aBlock = _NSConcreteStackBlock;
    uint64_t v82 = 1107296256;
    id v83 = sub_10005FB88;
    uint64_t v84 = &unk_1000F4A20;
    Swift::String v39 = _Block_copy(&aBlock);
    swift_retain();
    Swift::String v40 = v25;
    swift_release();
    id v41 = [v31 loadFileRepresentationForTypeIdentifier:v32 completionHandler:v39];
    _Block_release(v39);
    swift_unknownObjectRelease();

    unint64_t v23 = v69;
  }
  while (v68 != v26);
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  dispatch_group_enter(v25);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = 0;
  uint64_t v43 = v57;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v45 = (void *)Strong;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v42;
    *(void *)(v46 + 24) = v25;
    uint64_t v85 = sub_10006043C;
    uint64_t v86 = v46;
    aBlock = _NSConcreteStackBlock;
    uint64_t v82 = 1107296256;
    id v83 = sub_10005BD98;
    uint64_t v84 = &unk_1000F4A98;
    uint64_t v47 = _Block_copy(&aBlock);
    id v48 = v25;
    swift_retain();
    swift_release();
    [v45 attachmentsAlert:v43 needsDeviceDiagnosticsController:v47];
    swift_unknownObjectRelease();
    _Block_release(v47);
  }
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  uint64_t v49 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v72;
  *(void *)(v50 + 16) = v42;
  *(void *)(v50 + 24) = v51;
  uint64_t v85 = sub_100060484;
  uint64_t v86 = v50;
  aBlock = _NSConcreteStackBlock;
  uint64_t v82 = 1107296256;
  id v83 = sub_1000992C4;
  uint64_t v84 = &unk_1000F4AE8;
  uint64_t v52 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  uint64_t v53 = v58;
  static DispatchQoS.unspecified.getter();
  uint64_t v80 = _swiftEmptyArrayStorage;
  sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
  uint64_t v54 = v60;
  uint64_t v55 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v52);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v54, v55);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v53, v61);
  (*((void (**)(char *, uint64_t))v78 + 1))(v75, v73);
  swift_release();
  swift_release();
  swift_release();
}

void sub_10005EF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v87 = a4;
  uint64_t v97 = a3;
  uint64_t v94 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for DispatchQoS();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v106 = *(void *)(v10 - 8);
  uint64_t v107 = v10;
  uint64_t v11 = *(void *)(v106 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v12);
  char v88 = (char *)&v84 - v14;
  __chkstk_darwin(v13);
  v104 = (char *)&v84 - v15;
  uint64_t v16 = sub_10004DE60(&qword_100122790);
  uint64_t v17 = __chkstk_darwin(v16);
  v98 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v96 = (char *)&v84 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v95 = (char *)&v84 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v99 = (uint64_t)&v84 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v27 = (char *)&v84 - v26;
  __chkstk_darwin(v25);
  id v29 = (char *)&v84 - v28;
  static os_log_type_t.default.getter();
  id v105 = self;
  id v30 = [v105 attachHandle];
  if (!v30)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v31 = v30;
  uint64_t v102 = sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v32 = swift_allocObject();
  long long v100 = xmmword_1000D86F0;
  *(_OWORD *)(v32 + 16) = xmmword_1000D86F0;
  sub_100052400(a1, (uint64_t)v29, &qword_100122790);
  uint64_t v33 = String.init<A>(describing:)();
  uint64_t v35 = v34;
  *(void *)(v32 + 56) = &type metadata for String;
  unint64_t v101 = sub_100054550();
  *(void *)(v32 + 64) = v101;
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  if (!a2) {
    goto LABEL_5;
  }
  static os_log_type_t.default.getter();
  id v36 = [v105 attachHandle];
  if (!v36)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  uint64_t v37 = v36;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v100;
  aBlock[0] = a2;
  swift_errorRetain();
  sub_10004DE60(&qword_100122878);
  uint64_t v39 = String.init<A>(describing:)();
  unint64_t v40 = v101;
  *(void *)(v38 + 56) = &type metadata for String;
  *(void *)(v38 + 64) = v40;
  *(void *)(v38 + 32) = v39;
  *(void *)(v38 + 40) = v41;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
LABEL_5:
  dispatch_group_t v103 = a5;
  sub_100052400(a1, (uint64_t)v27, &qword_100122790);
  uint64_t v43 = v106;
  uint64_t v42 = v107;
  id v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  if (v44(v27, 1, v107) == 1)
  {
    sub_100052464((uint64_t)v27, &qword_100122790);
    static os_log_type_t.error.getter();
    id v45 = [v105 attachHandle];
    if (v45)
    {
      uint64_t v46 = v45;
      os_log(_:dso:log:_:_:)();

      dispatch_group_leave(v103);
      return;
    }
    goto LABEL_23;
  }
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  v85(v104, v27, v42);
  char v47 = URL.hasDirectoryPath.getter();
  id v48 = self;
  URL._bridgeToObjectiveC()(v49);
  uint64_t v51 = v50;
  URL._bridgeToObjectiveC()(v52);
  uint64_t v54 = v53;
  if (v47)
  {
    id v55 = [v48 copyAndReturn:v51 toDir:v53];

    uint64_t v56 = v99;
    if (v55)
    {
      uint64_t v57 = (uint64_t)v95;
LABEL_13:
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v58 = 0;
      uint64_t v59 = v106;
      uint64_t v60 = v107;
      uint64_t v61 = (uint64_t)v98;
      goto LABEL_16;
    }
    uint64_t v58 = 1;
    uint64_t v59 = v106;
    uint64_t v60 = v107;
    uint64_t v61 = (uint64_t)v98;
    uint64_t v57 = (uint64_t)v95;
  }
  else
  {
    id v55 = [v48 copyItem:v51 toDestinationDir:v53 zipped:0];

    uint64_t v56 = v99;
    if (v55)
    {
      uint64_t v57 = (uint64_t)v96;
      goto LABEL_13;
    }
    uint64_t v58 = 1;
    uint64_t v59 = v106;
    uint64_t v60 = v107;
    uint64_t v61 = (uint64_t)v98;
    uint64_t v57 = (uint64_t)v96;
  }
LABEL_16:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v57, v58, 1, v60);
  sub_10006048C(v57, v56);
  sub_100052400(v56, v61, &qword_100122790);
  if (v44((char *)v61, 1, v60) == 1)
  {
    sub_100052464(v61, &qword_100122790);
    static os_log_type_t.error.getter();
    id v62 = [v105 attachHandle];
    if (v62)
    {
      uint64_t v63 = v62;
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = v100;
      sub_1000604F4(&qword_100122870, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v65 = v104;
      uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v67 = v101;
      *(void *)(v64 + 56) = &type metadata for String;
      *(void *)(v64 + 64) = v67;
      *(void *)(v64 + 32) = v66;
      *(void *)(v64 + 40) = v68;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      dispatch_group_leave(v103);
      sub_100052464(v56, &qword_100122790);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v60);
      return;
    }
    goto LABEL_24;
  }
  unint64_t v69 = v88;
  id v70 = (void (*)(unint64_t, char *, uint64_t))v85;
  v85(v88, (char *)v61, v60);
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  uint64_t v107 = static OS_dispatch_queue.main.getter();
  id v71 = v86;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v86, v69, v60);
  unint64_t v72 = (*(unsigned __int8 *)(v59 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v73 = (v11 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v87;
  v70(v74 + v72, v71, v60);
  dispatch_group_t v75 = v103;
  *(void *)(v74 + v73) = v103;
  aBlock[4] = sub_100060624;
  aBlock[5] = v74;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = &unk_1000F4B38;
  uint64_t v76 = _Block_copy(aBlock);
  swift_retain();
  Swift::String v77 = v75;
  swift_release();
  Swift::String v78 = v89;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000604F4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10004DE60((uint64_t *)&unk_100122980);
  uint64_t v79 = v59;
  sub_100052668((unint64_t *)&qword_100121FC0, (uint64_t *)&unk_100122980);
  uint64_t v80 = v91;
  uint64_t v81 = v94;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v82 = (void *)v107;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v76);

  (*(void (**)(char *, uint64_t))(v93 + 8))(v80, v81);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v78, v92);
  id v83 = *(void (**)(char *, uint64_t))(v79 + 8);
  v83(v69, v60);
  sub_100052464(v99, &qword_100122790);
  v83(v104, v60);
}

void sub_10005F9E0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (unint64_t *)(a1 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_beginAccess();
  unint64_t v11 = *(void *)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_10008654C(0, *(void *)(v11 + 16) + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_10008654C(v13 > 1, v14 + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  *(void *)(v11 + 16) = v14 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, v9, v6);
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_10005FB88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_100052464((uint64_t)v8, &qword_100122790);
}

void sub_10005FCD0(void *a1, uint64_t a2, NSObject *a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;
  id v7 = a1;

  dispatch_group_leave(a3);
}

void sub_10005FD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = *(void **)(a1 + 16);
  if (!v11)
  {
    static os_log_type_t.error.getter();
    id v32 = [self attachHandle];
    if (v32)
    {
      uint64_t v33 = v32;
      os_log(_:dso:log:_:_:)();

      return;
    }
    goto LABEL_15;
  }
  uint64_t v39 = v10;
  id v38 = v11;
  static os_log_type_t.info.getter();
  id v12 = [self attachHandle];
  if (!v12)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)(a2 + 16);
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000D86F0;
  swift_beginAccess();
  uint64_t v16 = *(void *)(*v14 + 16);
  *(void *)(v15 + 56) = &type metadata for Int;
  *(void *)(v15 + 64) = &protocol witness table for Int;
  *(void *)(v15 + 32) = v16;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = *v14;
  uint64_t v18 = *(void *)(*v14 + 16);
  if (v18)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v19 = v5 + 16;
    uint64_t v21 = v17 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v35 = *(void *)(v19 + 56);
    id v36 = v20;
    uint64_t v22 = v17;
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v37 = v19;
    uint64_t v26 = (void (**)(char *, uint64_t))(v19 - 8);
    v34[1] = v22;
    swift_bridgeObjectRetain();
    v34[0] = (unint64_t)v23 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v27 = v39;
    while (1)
    {
      v36(v27, v21, v4);
      uint64_t v28 = *v23;
      (*v23)(v27, 0, 1, v4);
      if ((*v24)(v27, 1, v4) == 1) {
        break;
      }
      (*v25)(v7, v27, v4);
      URL._bridgeToObjectiveC()(v29);
      id v31 = v30;
      (*v26)(v7, v4);
      [v38 moveFileFrom:v31 v34[0]];

      id v27 = v39;
      v21 += v35;
      if (!--v18) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    id v27 = v39;
LABEL_11:
    v28(v27, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_100060184()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000601BC(void *a1)
{
  sub_10005D40C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000601C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000601D4()
{
  return swift_release();
}

uint64_t sub_1000601DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10006021C()
{
  return [*(id *)(v0 + 16) removeAttachment:*(void *)(v0 + 24)];
}

uint64_t sub_10006022C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006027C()
{
  return sub_10005DA28(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1000602AC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100060368(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(NSObject **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10005EF34(a1, a2, v2 + v6, v8, v9);
}

uint64_t sub_100060420()
{
  return sub_100060D88((void (*)(void))&_swift_release, 32);
}

void sub_10006043C(void *a1)
{
  sub_10005FCD0(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100060444()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100060484()
{
  sub_10005FD34(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10006048C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100122790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000604F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006053C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100060624()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(NSObject **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10005F9E0(v3, v0 + v2, v4);
}

void sub_1000606B4(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100056B94(0, (unint64_t *)&unk_100122F70);
    sub_100060DE8();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v12 = v5;
      goto LABEL_29;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v17) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100060ED0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      [a2 addDevice:v13];

      uint64_t v5 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_100056B94(0, (unint64_t *)&unk_100122F70);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v24;
        swift_unknownObjectRelease();
        uint64_t v12 = v5;
        uint64_t v10 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_10006098C(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    void v7[4] = sub_100060C70;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_10005BD98;
    v7[3] = &unk_1000F4B88;
    unint64_t v6 = _Block_copy(v7);
    swift_bridgeObjectRetain();
    swift_release();
    [v4 attachmentsAlert:v1 needsDeviceDiagnosticsController:v6];
    swift_unknownObjectRelease();
    _Block_release(v6);
  }
}

uint64_t sub_100060A94(void *a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  sub_100056B94(0, &qword_100122888);
  if ([a1 canLoadObjectsOfClass:swift_getObjCClassFromMetadata()]) {
    return 1;
  }
  sub_10004DE60(&qword_100122890);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000D88B0;
  static UTType.movie.getter();
  uint64_t v11 = UTType.identifier.getter();
  uint64_t v13 = v12;
  int64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v8, v2);
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  static UTType.item.getter();
  uint64_t v15 = UTType.identifier.getter();
  uint64_t v17 = v16;
  v14(v6, v2);
  *(void *)(v10 + 48) = v15;
  *(void *)(v10 + 56) = v17;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [a1 hasItemsConformingToTypeIdentifiers:isa];

  return (uint64_t)v9;
}

void sub_100060C70(void *a1)
{
  sub_10005D5B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100060C78()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100060CB8(uint64_t a1)
{
  sub_10005B518(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

id sub_100060CC4(uint64_t a1)
{
  return sub_10005BE04(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_100060CCC(uint64_t a1)
{
  return sub_10005C3E8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100060CD4()
{
  return sub_10005C978(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000F4CD8, (uint64_t)sub_100060F94, (uint64_t)&unk_1000F4CF0);
}

id sub_100060D14()
{
  return [*(id *)(v0 + 16) presentViewController:*(void *)(v0 + 24) animated:1 completion:0];
}

uint64_t sub_100060D2C()
{
  return sub_10005C978(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000F4DC8, (uint64_t)sub_100060F94, (uint64_t)&unk_1000F4DE0);
}

uint64_t sub_100060D6C()
{
  return sub_100060D88((void (*)(void))&_swift_unknownObjectRelease, 40);
}

uint64_t sub_100060D88(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_100060DDC(void *a1)
{
  sub_10005B6E4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_100060DE8()
{
  unint64_t result = qword_1001228D0;
  if (!qword_1001228D0)
  {
    sub_100056B94(255, (unint64_t *)&unk_100122F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001228D0);
  }
  return result;
}

uint64_t sub_100060E50()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100060E88(uint64_t a1)
{
  sub_10005BD3C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100060E90()
{
  return sub_10005C978(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1000F4F58, (uint64_t)sub_100060F94, (uint64_t)&unk_1000F4F70);
}

uint64_t sub_100060ED0()
{
  return swift_release();
}

uint64_t sub_100060ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_1001228D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006100C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_1001228F0);
  sub_1000537C4(v0, (uint64_t)qword_1001228F0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100061084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    sub_100061CB4();
    if ([(id)swift_getObjCClassFromMetadata() platform] != (id)1)
    {
      v7._object = (void *)0x80000001000E0900;
      v7._uint64_t countAndFlagsBits = 0xD000000000000012;
      URL.appendPathComponent(_:)(v7);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v4, v2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_100121DC8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000537C4(v9, (uint64_t)qword_1001228F0);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to find old library URL.", v12, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    return v13(a1, 1, 1, v2);
  }
}

void sub_10006131C()
{
  uint64_t v0 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = self;
  id v11 = [v10 standardUserDefaults];
  os_log_t v57 = (os_log_t)"ssistant19FBAAppGroupMigrator";
  NSString v12 = String._bridgeToObjectiveC()();
  unsigned __int8 v13 = [v11 BOOLForKey:v12];

  if (v13)
  {
    if (qword_100121DC8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000537C4(v14, (uint64_t)qword_1001228F0);
    os_log_t v57 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v57, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v15, "App Group migration already done.", v16, 2u);
      swift_slowDealloc();
    }
    os_log_t v17 = v57;

    return;
  }
  sub_100061084((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100061C54((uint64_t)v2);
    if (qword_100121DC8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000537C4(v18, (uint64_t)qword_1001228F0);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Old library directory could not be derived, stopping migration", v21, 2u);
      swift_slowDealloc();
    }

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  if (qword_100121DC8 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = sub_1000537C4(v22, (uint64_t)qword_1001228F0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.info.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v55 = v23;
  uint64_t v56 = v10;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v54 = v4;
    uint64_t v28 = (uint8_t *)v27;
    id v59 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v29 = URL.absoluteString.getter();
    uint64_t v58 = sub_10009EC3C(v29, v30, (uint64_t *)&v59);
    uint64_t v10 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v31 = *(void (**)(char *, uint64_t))(v54 + 8);
    v31(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Old Library directory: %s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v54;
    swift_slowDealloc();
  }
  else
  {
    id v31 = *(void (**)(char *, uint64_t))(v4 + 8);
    v31(v7, v3);
  }

  Swift::Bool v32 = URL.checkResourceIsReachable()();
  if (v33) {
    goto LABEL_21;
  }
  if (v32)
  {
    id v40 = [self defaultManager];
    URL._bridgeToObjectiveC()(v41);
    uint64_t v43 = v42;
    id v59 = 0;
    unsigned int v44 = [v40 removeItemAtURL:v42 error:&v59];

    if (!v44)
    {
      id v51 = v59;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v10 = v56;
LABEL_21:
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v53 = v31;
        uint64_t v37 = (uint8_t *)v36;
        id v59 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v54 = v4;
        swift_getErrorValue();
        uint64_t v38 = Error.localizedDescription.getter();
        uint64_t v58 = sub_10009EC3C(v38, v39, (uint64_t *)&v59);
        uint64_t v10 = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to remove old library directory. %s", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v31 = v53;
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_27;
    }
    id v45 = v59;
    uint64_t v10 = v56;
  }
LABEL_27:
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    id v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Removed old library directory.", v48, 2u);
    uint64_t v10 = v56;
    swift_slowDealloc();
  }

  id v49 = [v10 standardUserDefaults];
  NSString v50 = String._bridgeToObjectiveC()();
  [v49 setBool:1 forKey:v50];

  v31(v9, v3);
}

id sub_100061BF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAppGroupMigrator();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAAppGroupMigrator()
{
  return self;
}

uint64_t sub_100061C54(uint64_t a1)
{
  uint64_t v2 = sub_10004DE60(&qword_100122790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100061CB4()
{
  unint64_t result = qword_100122930;
  if (!qword_100122930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122930);
  }
  return result;
}

void *sub_100061CF4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  unint64_t result = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for FBKFeedbackUpload.BugSession() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a1(&v11, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

uint64_t sub_100061E6C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_100122940);
  sub_1000537C4(v0, (uint64_t)qword_100122940);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

void sub_100061EE0()
{
  uint64_t v1 = v0;
  if (qword_100121DD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000537C4(v2, (uint64_t)qword_100122940);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Looking up uploads for tracking", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [v0 currentUser];
  if (v6)
  {
    Swift::String v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0;
    aBlock[4] = (uint64_t)sub_100065FD8;
    aBlock[5] = v8;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100062648;
    uint64_t aBlock[3] = (uint64_t)&unk_1000F50D8;
    uint64_t v9 = _Block_copy(aBlock);
    id v10 = v1;
    swift_release();
    [v10 allUploadTasksWithUser:v7 completion:v9];
    _Block_release(v9);
  }
  else
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136315138;
      void aBlock[6] = sub_10009EC3C(0xD00000000000001ELL, 0x80000001000E1BB0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "No user in %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000621CC(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100056B94(0, &qword_100122958);
    sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v34;
    uint64_t v4 = v35;
    uint64_t v5 = v36;
    uint64_t v6 = v37;
    unint64_t v7 = v38;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  unint64_t v12 = &selRef_filePromiseSortDescriptors;
  unsigned __int8 v13 = &off_100121000;
  while (v3 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_42;
    }
    sub_100056B94(0, &qword_100122958);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v14 = v33;
    swift_unknownObjectRelease();
    uint64_t v31 = v7;
    uint64_t v32 = v6;
    if (!v33) {
      goto LABEL_42;
    }
LABEL_31:
    id v20 = [v14 v12[27]];
    if (v20 || (id v20 = [v14 feedbackFollowup]) != 0)
    {
      uint64_t v21 = swift_dynamicCastObjCProtocolConditional();
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = v20;
        id v24 = [a2 uploadManager];
        if (v24)
        {
          os_log_type_t v25 = v24;
          [v24 trackUploadIfNeeded:v22];
        }
        goto LABEL_9;
      }
    }
    if (v13[442] != (_UNKNOWN *)-1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000537C4(v26, (uint64_t)qword_100122940);
    uint64_t v23 = v14;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      unint64_t v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138543362;
      *(void *)(v29 + 4) = v23;
      *unint64_t v30 = v14;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "No filer form found in task %{public}@", (uint8_t *)v29, 0xCu);
      sub_10004DE60(&qword_1001229C0);
      swift_arrayDestroy();
      unsigned __int8 v13 = &off_100121000;
      swift_slowDealloc();
      unint64_t v12 = &selRef_filePromiseSortDescriptors;
      swift_slowDealloc();
      uint64_t v14 = v27;
    }
    else
    {

      uint64_t v14 = v23;
    }
LABEL_9:
    unint64_t v7 = v31;

    uint64_t v6 = v32;
  }
  if (v7)
  {
    uint64_t v31 = (v7 - 1) & v7;
    uint64_t v32 = v6;
    unint64_t v15 = __clz(__rbit64(v7)) | (v6 << 6);
LABEL_30:
    uint64_t v14 = *(id *)(*(void *)(v3 + 48) + 8 * v15);
    if (!v14) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  int64_t v16 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v16 >= v11) {
      goto LABEL_42;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    uint64_t v18 = v6 + 1;
    if (!v17)
    {
      uint64_t v18 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v18);
      if (!v17)
      {
        uint64_t v18 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_42;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v18);
        if (!v17)
        {
          uint64_t v18 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_42;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v18);
          if (!v17)
          {
            uint64_t v19 = v6 + 5;
            while (v11 != v19)
            {
              unint64_t v17 = *(void *)(v4 + 8 * v19++);
              if (v17)
              {
                uint64_t v18 = v19 - 1;
                goto LABEL_29;
              }
            }
LABEL_42:
            sub_100060ED0();
            return;
          }
        }
      }
    }
LABEL_29:
    uint64_t v31 = (v17 - 1) & v17;
    uint64_t v32 = v18;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_100062648(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100056B94(0, &qword_100122958);
  sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100062740(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, objc_class *a7)
{
  Class isa = a7;
  unint64_t v67 = a6;
  uint64_t v68 = a5;
  dispatch_group_t v69 = a4;
  uint64_t v71 = type metadata accessor for FBKFeedbackUpload();
  uint64_t v11 = *(void *)(v71 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v71);
  uint64_t v66 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = a1;
  unint64_t v17 = (void *)FBKFeedbackUpload.feedbackID.getter();
  sub_100062E5C(a2, v17);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_100063188(a3, v17);
    if (v20)
    {
      if (qword_100121DD0 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_1000537C4(v21, (uint64_t)qword_100122940);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v24 = 134349056;
        aBlock[0] = (uint64_t)v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Feedback ID %{public}ld already tracked locally", v24, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      if (qword_100121DD0 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_1000537C4(v29, (uint64_t)qword_100122940);
      uint64_t v30 = v11;
      uint64_t v31 = v11 + 16;
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      uint64_t v33 = v71;
      id v62 = v32;
      uint64_t v63 = v31;
      v32(v15, a1, v71);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      BOOL v36 = os_log_type_enabled(v34, v35);
      uint64_t v64 = v7;
      if (v36)
      {
        os_log_t v60 = v34;
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        aBlock[0] = v59;
        uint64_t v61 = v16;
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v58 = v37 + 4;
        sub_100065D00(&qword_1001229A8, (void (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload);
        uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
        void aBlock[6] = sub_10009EC3C(v38, v39, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v33);
        os_log_t v40 = v60;
        _os_log_impl((void *)&_mh_execute_header, v60, v35, "Will create upload task for framework upload %s", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v16 = v61;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v33);
      }
      dispatch_group_t v41 = v69;
      dispatch_group_enter(v69);
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v68 = (void *)Strong;
        uint64_t v43 = (void (*)(void *))swift_allocObject();
        *((void *)v43 + 2) = v41;
        *((void *)v43 + 3) = v19;
        *((void *)v43 + 4) = isa;
        sub_100056B94(0, &qword_1001229A0);
        unsigned int v44 = v41;
        dispatch_group_t v69 = v19;
        swift_retain();
        Swift::Int v45 = FBKFeedbackUpload.formResponseID.getter();
        Class isa = NSNumber.init(integerLiteral:)(v45).super.super.isa;
        uint64_t v46 = v66;
        v62(v66, v16, v33);
        unint64_t v47 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        unint64_t v48 = (v12 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v50 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v50 + v47, v46, v33);
        id v51 = (void (**)(void *))(v50 + v48);
        void *v51 = sub_100065DE0;
        v51[1] = v43;
        uint64_t v53 = v67;
        uint64_t v52 = v68;
        *(void *)(v50 + v49) = v68;
        *(void *)(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8)) = v53;
        aBlock[4] = (uint64_t)sub_100065EBC;
        aBlock[5] = v50;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100064604;
        uint64_t aBlock[3] = (uint64_t)&unk_1000F5088;
        uint64_t v54 = _Block_copy(aBlock);
        swift_retain();
        id v55 = v52;
        id v56 = v53;
        swift_release();
        Class v57 = isa;
        [v55 refreshFormResponseOnlyWithID:isa completion:v54];
        _Block_release(v54);

        swift_release();
      }
      else
      {
      }
    }
  }
  else
  {
    if (qword_100121DD0 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000537C4(v25, (uint64_t)qword_100122940);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v28 = 134349056;
      aBlock[0] = (uint64_t)v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Feedback ID %{public}ld does not belong to this user. Will not track upload", v28, 0xCu);
      swift_slowDealloc();
    }
  }
}

void sub_100062E5C(uint64_t a1, id a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100056B94(0, (unint64_t *)&qword_100122990);
    sub_100065D48((unint64_t *)&qword_100122998, (unint64_t *)&qword_100122990);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v24;
    uint64_t v22 = v25;
    uint64_t v3 = v26;
    uint64_t v4 = v27;
    unint64_t v5 = v28;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  uint64_t v20 = v3;
  int64_t v21 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v21) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v21) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v22 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v21) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v22 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v21) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v22 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v21) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v22 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v21 != v16)
              {
                unint64_t v15 = *(void *)(v22 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
              goto LABEL_34;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (v13)
    {
      while (1)
      {
        id v17 = [v13 remoteID:v20];
        if (!v17) {
          goto LABEL_36;
        }
        uint64_t v18 = v17;
        id v19 = [v17 integerValue];

        if (v19 == a2) {
          break;
        }

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((v2 & 0x8000000000000000) == 0) {
          goto LABEL_8;
        }
LABEL_10:
        if (__CocoaSet.Iterator.next()())
        {
          sub_100056B94(0, (unint64_t *)&qword_100122990);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v29;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v29) {
            continue;
          }
        }
        break;
      }
    }
LABEL_34:
    sub_100060ED0();
    return;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_100063188(uint64_t a1, id a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100056B94(0, &qword_100122958);
    sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v27;
    uint64_t v25 = v28;
    uint64_t v3 = v29;
    uint64_t v4 = v30;
    unint64_t v5 = v31;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v24 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v9 = &selRef_filePromiseSortDescriptors;
  while (1)
  {
    uint64_t v10 = v4;
    if (v2 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_36;
      }
      sub_100056B94(0, &qword_100122958);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v32;
      swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_36;
      }
      goto LABEL_32;
    }
    if (!v5) {
      break;
    }
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v12 = v11 | (v4 << 6);
LABEL_31:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v13) {
      goto LABEL_36;
    }
LABEL_32:
    id v17 = [v13 v9[25]];

    if (v17)
    {
      uint64_t v18 = v2;
      id v19 = v9;
      id v20 = [v13 v9[25]];
      if (!v20) {
        goto LABEL_38;
      }
      int64_t v21 = v20;
      id v22 = [v20 integerValue];

      BOOL v23 = v22 == a2;
      uint64_t v9 = v19;
      uint64_t v2 = v18;
      if (v23) {
        goto LABEL_36;
      }
    }
    else
    {
    }
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v24) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v4;
    if (!v15)
    {
      uint64_t v4 = v10 + 2;
      if (v10 + 2 >= v24) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v4);
      if (!v15)
      {
        uint64_t v4 = v10 + 3;
        if (v10 + 3 >= v24) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v4);
        if (!v15)
        {
          uint64_t v4 = v10 + 4;
          if (v10 + 4 >= v24) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v4);
          if (!v15)
          {
            uint64_t v4 = v10 + 5;
            if (v10 + 5 >= v24) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v25 + 8 * v4);
            if (!v15)
            {
              uint64_t v16 = v10 + 6;
              while (v24 != v16)
              {
                unint64_t v15 = *(void *)(v25 + 8 * v16++);
                if (v15)
                {
                  uint64_t v4 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_36:
              sub_100060ED0();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_31;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1000634F4(void *a1, dispatch_group_t group, void *a3)
{
  if (a1)
  {
    id v5 = a1;
    id v6 = [v5 formResponse];
    [a3 setFormResponse:v6];

    swift_beginAccess();
    id v7 = v5;
    sub_100088140(&v8, v7);
    swift_endAccess();

    dispatch_group_leave(group);
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_1000635E4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 16);
  if ((v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_14;
    }
  }
  else if (!*(void *)(v7 + 16))
  {
    goto LABEL_14;
  }
  id v9 = [a2 mainQueueContext];
  if (v9)
  {
    uint64_t v10 = v9;
    v23[0] = 0;
    unsigned int v11 = [v9 save:v23];

    if (v11)
    {
      id v12 = v23[0];
    }
    else
    {
      id v13 = v23[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_100121DD0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_1000537C4(v14, (uint64_t)qword_100122940);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        id v17 = (uint8_t *)swift_slowAlloc();
        v23[0] = (id)swift_slowAlloc();
        *(_DWORD *)id v17 = 136446210;
        swift_errorRetain();
        sub_10004DE60((uint64_t *)&unk_100123020);
        uint64_t v18 = String.init<A>(describing:)();
        sub_10009EC3C(v18, v19, (uint64_t *)v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to save after creating FBK upload tasks %{public}s", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  swift_beginAccess();
  swift_beginAccess();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_100063958(v20);
  swift_endAccess();
LABEL_14:
  swift_beginAccess();
  uint64_t v21 = swift_bridgeObjectRetain();
  a4(v21);
  return swift_bridgeObjectRelease();
}

void sub_100063958(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100056B94(0, &qword_100122958);
    sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
    Set.Iterator.init(_cocoa:)();
    unint64_t v1 = (unint64_t)v17[1];
    os_log_type_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    os_log_type_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      unsigned int v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    unsigned int v11 = (char *)v3 + 1;
    if (!v14)
    {
      unsigned int v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        unsigned int v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          unsigned int v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            unsigned int v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              unint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  unsigned int v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100060ED0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_100088140(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_100056B94(0, &qword_100122958);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        unsigned int v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_100063C9C(uint64_t a1, uint64_t a2)
{
  sub_100056B94(0, &qword_100122958);
  sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

void sub_100063E00(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for FBKFeedbackUpload();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v17 = a1;
    [a6 prepareFilerFormForSubmission:v17];
    id v18 = [v17 uploadTask];
    if (v18)
    {
      unint64_t v19 = v18;
      id v20 = [v17 ID];
      [v19 setTaskIdentifier:v20];

      [v19 setLocalSubmissionStage:2];
      uint64_t v21 = FBKFeedbackUpload.bugSessions.getter();
      id v22 = sub_100086AD0(v21);
      uint64_t v23 = swift_bridgeObjectRelease();
      __chkstk_darwin(v23);
      v34[-2] = a7;
      v34[-1] = a3;
      int64_t v24 = sub_100061CF4((void (*)(uint64_t *__return_ptr, uint64_t))sub_100065F84, (uint64_t)&v34[-4], (uint64_t)v22);
      swift_release();
      sub_10008BAE0((unint64_t)v24);
      swift_bridgeObjectRelease();
      sub_100056B94(0, &qword_1001229B0);
      sub_100065D48(&qword_1001229B8, &qword_1001229B0);
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v19 setBugSessions:isa];

      id v26 = v19;
      a4(v19);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_100121DD0 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_1000537C4(v27, (uint64_t)qword_100122940);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      os_log_type_t v35 = a4;
      uint64_t v37 = v31;
      v34[1] = a5;
      *(_DWORD *)uint64_t v30 = 136446210;
      sub_100065D00(&qword_1001229A8, (void (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v36 = sub_10009EC3C(v32, v33, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "FR fetch failed. Cannot track upload on %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      a4 = v35;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }

    a4(0);
  }
}

void sub_100064268(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v22 = a3;
  uint64_t v5 = type metadata accessor for FBKFeedbackUpload();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = [self entityName];
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v10 = [self insertNewObjectForEntityForName:v9 inManagedObjectContext:a1];

  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    id v12 = (void *)v11;
    FBKFeedbackUpload.BugSession.sessionIdentifier.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setIdentifier:v13];

    FBKFeedbackUpload.BugSession.deviceIdentifier.getter();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setDeviceIdentifier:v14];
  }
  else
  {

    if (qword_100121DD0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000537C4(v15, (uint64_t)qword_100122940);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)id v18 = 136315138;
      uint64_t v21 = v18 + 4;
      sub_100065D00(&qword_1001229A8, (void (*)(uint64_t))&type metadata accessor for FBKFeedbackUpload);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v23 = sub_10009EC3C(v19, v20, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Could not create FBA bug session for feedback upload %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    id v12 = 0;
  }
  *id v22 = v12;
}

void sub_100064604(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100064690(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_100064748(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1000648AC((unint64_t *)((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    uint64_t v7 = v6;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1000648AC((unint64_t *)v8, v4, v2);
    uint64_t v7 = v9;
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

void sub_1000648AC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_18:
    id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    id v16 = [v15 filerForm];
    if (v16)
    {
      id v17 = [v16 filerFormType];

      swift_unknownObjectRelease();
      if (!v17)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v24++, 1);
        if (v12) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      if (qword_100121DD0 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_1000537C4(v18, (uint64_t)qword_100122940);
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Found upload task without a valid filer form, skipping.", v21, 2u);
        swift_slowDealloc();
      }
    }
  }
  BOOL v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v4 >= v9) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    goto LABEL_31;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_31:
    swift_retain();
    sub_100087C48(a1, a2, v24, a3);
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v4 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_100064B4C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, objc_class *a7)
{
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v34 = a4;
  os_log_type_t v35 = a5;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v9 = type metadata accessor for FBKFeedbackUpload();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v28 - v14;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v30 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v31 = v10 + 16;
  os_log_type_t v20 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v15, *(void *)(v38 + 48) + *(void *)(v10 + 72) * i, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    sub_100062740((uint64_t)v13, v32, v33, v34, v35, v36, v37);
    if (v7)
    {
      (*v20)(v13, v9);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v20)(v13, v9);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v30) {
      return swift_release();
    }
    unint64_t v26 = *(void *)(v29 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_17:
    unint64_t v19 = (v26 - 1) & v26;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v30) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v22 + 2;
  if (v22 + 2 >= v30) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v22 + 3;
  if (v22 + 3 >= v30) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v22 + 4;
  if (v22 + 4 >= v30) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
LABEL_16:
    int64_t v22 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v30) {
      return swift_release();
    }
    unint64_t v26 = *(void *)(v29 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100064E30(objc_class *a1, char **a2, void (**a3)(void, void))
{
  Class isa = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  _Block_copy(a3);
  id v14 = [a2 mainQueueContext];
  if (!v14)
  {
    if (qword_100121DD0 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_1000537C4(v43, (uint64_t)qword_100122940);
    unsigned int v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "No main queue managed object context found", v46, 2u);
      swift_slowDealloc();
    }

    sub_100056B94(0, &qword_100122958);
    sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    ((void (**)(void, Class))a3)[2](a3, isa);
    swift_release();
    Class v47 = isa;

    return;
  }
  Swift::String v77 = v12;
  uint64_t v78 = v10;
  uint64_t v79 = v8;
  uint64_t v80 = v9;
  uint64_t v81 = v6;
  id v15 = v14;
  uint64_t v16 = swift_allocObject();
  id v75 = v15;
  id v17 = [a2 uploadTasksFromDatabaseWithContext:v15];
  uint64_t v18 = (void *)sub_100056B94(0, &qword_100122958);
  sub_100065D48((unint64_t *)&unk_100122960, &qword_100122958);
  uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v76 = v16;
  *(void *)(v16 + 16) = v19;
  uint64_t v82 = v5;
  uint64_t v83 = v13;
  if ((v19 & 0xC000000000000001) == 0)
  {
    uint64_t v48 = swift_bridgeObjectRetain();
    id v20 = (id)sub_100064748(v48);
    uint64_t v74 = 0;
    goto LABEL_37;
  }
  uint64_t v74 = 0;
  id v20 = &_swiftEmptySetSingleton;
  aBlock[0] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  uint64_t v21 = (objc_class *)__CocoaSet.makeIterator()();
  uint64_t v22 = __CocoaSet.Iterator.next()();
  if (!v22) {
    goto LABEL_35;
  }
  unint64_t v73 = a2;
  unint64_t v23 = (char *)&type metadata for Swift.AnyObject + 8;
  dispatch_group_t v24 = (dispatch_group_t)qword_100122940;
  a2 = &selRef_touchIDCell;
  do
  {
    uint64_t v85 = v22;
    swift_dynamicCast();
    id v25 = [v86 filerForm];
    if (!v25)
    {
      if (qword_100121DD0 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_1000537C4(v35, (uint64_t)qword_100122940);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Found upload task without a valid filer form, skipping.", v38, 2u);
        swift_slowDealloc();
      }

LABEL_6:
      goto LABEL_7;
    }
    id v26 = [v25 filerFormType];
    swift_unknownObjectRelease();
    if (v26) {
      goto LABEL_6;
    }
    id v20 = v86;
    uint64_t v27 = aBlock[0];
    unint64_t v28 = *(void *)(aBlock[0] + 16);
    if (*(void *)(aBlock[0] + 24) <= v28)
    {
      sub_100087038(v28 + 1);
      uint64_t v27 = aBlock[0];
    }
    Swift::Int v29 = NSObject._rawHashValue(seed:)(*(void *)(v27 + 40));
    uint64_t v30 = v27 + 56;
    uint64_t v31 = -1 << *(unsigned char *)(v27 + 32);
    unint64_t v32 = v29 & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v27 + 56 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v27 + 56 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        BOOL v41 = v33 == v40;
        if (v33 == v40) {
          unint64_t v33 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v30 + 8 * v33);
      }
      while (v42 == -1);
      unint64_t v34 = __clz(__rbit64(~v42)) + (v33 << 6);
    }
    *(void *)(v30 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    *(void *)(*(void *)(v27 + 48) + 8 * v34) = v20;
    ++*(void *)(v27 + 16);
LABEL_7:
    uint64_t v22 = __CocoaSet.Iterator.next()();
  }
  while (v22);
  id v20 = (id)aBlock[0];
  a2 = v73;
LABEL_35:
  swift_release();
LABEL_37:
  id v49 = [(objc_class *)isa feedbackContentItems];
  if (v49)
  {
    uint64_t v50 = v49;
    sub_100056B94(0, (unint64_t *)&qword_100122990);
    sub_100065D48((unint64_t *)&qword_100122998, (unint64_t *)&qword_100122990);
    uint64_t v18 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v18 = &_swiftEmptySetSingleton;
  }
  uint64_t v21 = (objc_class *)swift_allocObject();
  *((void *)v21 + 2) = &_swiftEmptySetSingleton;
  dispatch_group_t v24 = dispatch_group_create();
  id v51 = [self sharedUserDefaults];
  unint64_t v23 = (char *)static FBKFeedbackUpload.allFeedbackUploads(_:)();

  if (*((void *)v23 + 2))
  {
    if (qword_100121DD0 != -1) {
LABEL_52:
    }
      swift_once();
    uint64_t v52 = type metadata accessor for Logger();
    sub_1000537C4(v52, (uint64_t)qword_100122940);
    swift_bridgeObjectRetain();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      id v55 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v55 = 134217984;
      aBlock[0] = *((void *)v23 + 2);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v56 = "Found %ld FBK uploads to track";
      Class v57 = v53;
      os_log_type_t v58 = v54;
      uint64_t v59 = v55;
      uint32_t v60 = 12;
      goto LABEL_48;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100121DD0 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000537C4(v61, (uint64_t)qword_100122940);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      id v56 = "No FBK uploads found.";
      Class v57 = v53;
      os_log_type_t v58 = v62;
      uint64_t v59 = v63;
      uint32_t v60 = 2;
LABEL_48:
      _os_log_impl((void *)&_mh_execute_header, v57, v58, v56, v59, v60);
      swift_slowDealloc();
    }
  }
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v64 = v24;
  uint64_t v65 = (objc_class *)v75;
  swift_retain();
  Class isa = v65;
  sub_100064B4C((uint64_t)v23, (uint64_t)v18, (uint64_t)v20, v64, aBlock, v65, v21);
  swift_bridgeObjectRelease_n();
  swift_release_n();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  uint64_t v66 = (void *)static OS_dispatch_queue.main.getter();
  unint64_t v67 = (void *)swift_allocObject();
  void v67[2] = v21;
  v67[3] = a2;
  unint64_t v73 = (char **)v21;
  v67[4] = v76;
  v67[5] = sub_100065C48;
  v67[6] = v83;
  aBlock[4] = sub_100065CD8;
  aBlock[5] = v67;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = &unk_1000F5010;
  uint64_t v68 = _Block_copy(aBlock);
  swift_retain();
  dispatch_group_t v69 = a2;
  swift_retain();
  swift_retain();
  id v70 = v77;
  static DispatchQoS.unspecified.getter();
  uint64_t v86 = _swiftEmptyArrayStorage;
  sub_100065D00((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_10004DEA4();
  uint64_t v71 = v79;
  uint64_t v72 = v82;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();

  _Block_release(v68);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v70, v80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

id sub_100065954()
{
  id result = [self entityName];
  if (result)
  {
    uint64_t v1 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v2 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v4 = [v2 initWithEntityName:v3];

    sub_100056B94(0, &qword_100122958);
    unint64_t v5 = NSManagedObjectContext.fetch<A>(_:)();
    uint64_t v6 = sub_10008BABC(v5);

    swift_bridgeObjectRelease();
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100065C10()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100065C48(uint64_t a1)
{
  sub_100063C9C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100065C50()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100065C88()
{
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100065CD8()
{
  return sub_1000635E4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_100065CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100065CF8()
{
  return swift_release();
}

uint64_t sub_100065D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065D48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100056B94(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065D98()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100065DE0(void *a1)
{
  sub_1000634F4(a1, *(dispatch_group_t *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100065DEC()
{
  uint64_t v1 = type metadata accessor for FBKFeedbackUpload();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v7 + 8, v5);
}

void sub_100065EBC(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FBKFeedbackUpload() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void (**)(void *))(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v7 + 8);
  uint64_t v11 = *(void **)(v2 + v8);
  uint64_t v12 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100063E00(a1, a2, v2 + v6, v9, v10, v11, v12);
}

void sub_100065F84(void *a1@<X8>)
{
  sub_100064268(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100065FA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100065FD8(uint64_t a1)
{
  sub_1000621CC(a1, *(void **)(v1 + 16));
}

void sub_100066038()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController] searchBar];
  id v7 = [v6 text];

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
    Swift::String v16 = String.lowercased()();
    swift_bridgeObjectRetain();
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_1000524C0();
    StringProtocol.trimmingCharacters(in:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    if (String.count.getter())
    {
      unint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_100067B04(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = v10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = v8;
    swift_bridgeObjectRelease();
    id v11 = [v1 tableView];
    if (v11)
    {
      uint64_t v12 = v11;
      [v11 reloadData];

      return;
    }
    __break(1u);
    goto LABEL_11;
  }
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = [v1 tableView];
  if (!v13)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v15 = v13;
  [v13 reloadData];
  id v14 = v15;
}

void sub_1000662DC()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  id v2 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"dismissSelf"];
  [v1 setRightBarButtonItem:v2];

  uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  [*(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController] setSearchResultsUpdater:v0];
  [*(id *)&v0[v3] setDelegate:v0];
  [*(id *)&v0[v3] setObscuresBackgroundDuringPresentation:0];
  id v4 = [*(id *)&v0[v3] searchBar];
  [v4 setDelegate:v0];

  [*(id *)&v0[v3] setHidesNavigationBarDuringPresentation:0];
  [v0 setDefinesPresentationContext:1];
  id v5 = [v0 navigationItem];
  [v5 setSearchController:*(void *)&v0[v3]];
}

void sub_10006649C(void *a1)
{
  id v3 = [a1 singleTeam];
  if (v3)
  {
    id v4 = v3;
    if ([v3 teamType])
    {
      id v5 = [a1 assignee];
      objc_super v6 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee];
      *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = v5;

      id v7 = [a1 originator];
      unint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator];
      *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = v7;

      sub_1000668AC(v4);
      id v9 = [self sharedInstance];
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v4;
      *(void *)(v10 + 24) = v1;
      void v16[4] = sub_100067E04;
      void v16[5] = v10;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 1107296256;
      v16[2] = sub_100068E84;
      v16[3] = &unk_1000F5128;
      id v11 = _Block_copy(v16);
      id v12 = v4;
      id v13 = v1;
      swift_release();
      [v9 refreshParticipantsWithTeam:v12 completion:v11];
      _Block_release(v11);

      return;
    }
  }
  static os_log_type_t.error.getter();
  id v14 = [self appHandle];
  if (v14)
  {
    id v15 = v14;
    os_log(_:dso:log:_:_:)();

    [v1 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000666E4(uint64_t a1, id a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    id v2 = [self appHandle];
    if (v2)
    {
      id v3 = v2;
      sub_10004DE60((uint64_t *)&unk_100122860);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1000D86F0;
      swift_getErrorValue();
      uint64_t v5 = Error.localizedDescription.getter();
      uint64_t v7 = v6;
      *(void *)(v4 + 56) = &type metadata for String;
      *(void *)(v4 + 64) = sub_100054550();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v7;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v9 = [a2 managedObjectContext];
    if (v9)
    {
      uint64_t v10 = v9;
      [v9 refreshObject:a2 mergeChanges:1];
    }
    sub_1000668AC(a2);
  }
}

void sub_1000668AC(void *a1)
{
  id v2 = [a1 participants];
  if (v2)
  {
    id v3 = v2;
    sub_100056B94(0, (unint64_t *)&qword_100122C18);
    sub_100067D5C();
    static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_100056B94(0, (unint64_t *)&qword_100122C18);
  sub_100067D5C();
  v4.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class isa = (Class)[self sortDescriptors];
  if (!isa)
  {
    sub_100056B94(0, &qword_100122620);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v6 = [(objc_class *)v4.super.isa sortedArrayUsingDescriptors:isa];

  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = sub_100085CE4(v7);
  swift_bridgeObjectRelease();
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = v8;
  swift_bridgeObjectRelease();
  sub_100066038();
  id v9 = [v1 tableView];
  if (v9)
  {
    id v10 = v9;
    [v9 reloadData];
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100066B34(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 dequeueReusableCellWithIdentifier:v8 forIndexPath:isa];

  unint64_t result = IndexPath.row.getter();
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants);
  if ((v12 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v13 = *(id *)(v12 + 8 * result + 32);
      goto LABEL_5;
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  static UIListContentConfiguration.valueCell()();
  id v14 = [v13 contactImage];
  UIListContentConfiguration.image.setter();
  id v15 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.maximumSize.setter();
  v15(v36, 0);
  Swift::String v16 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.cornerRadius.setter();
  v16(v36, 0);
  id v17 = [v13 fullName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UIListContentConfiguration.text.setter();
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator);
  if (v18)
  {
    sub_100056B94(0, (unint64_t *)&qword_100122C18);
    id v19 = v13;
    id v20 = v18;
    char v21 = static NSObject.== infix(_:_:)();

    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      dispatch_group_t v24 = v23;
      id v25 = [self mainBundle];
      v37._object = (void *)0xE000000000000000;
      v26._uint64_t countAndFlagsBits = 0x54414E494749524FLL;
      v26._object = (void *)0xEA0000000000524FLL;
      v27.value._uint64_t countAndFlagsBits = v22;
      v27.value._object = v24;
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      v37._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v37);
      swift_bridgeObjectRelease();
    }
  }
  UIListContentConfiguration.secondaryText.setter();
  v36[3] = v4;
  v36[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  Swift::Int v29 = sub_100056D18(v36);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v29, v7, v4);
  UITableViewCell.contentConfiguration.setter();
  uint64_t v30 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee);
  if (v30
    && (sub_100056B94(0, (unint64_t *)&qword_100122C18),
        id v31 = v13,
        id v32 = v30,
        char v33 = static NSObject.== infix(_:_:)(),
        v32,
        v31,
        (v33 & 1) != 0))
  {
    uint64_t v34 = 3;
  }
  else
  {
    uint64_t v34 = 0;
  }
  [v10 setAccessoryType:v34];

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (unint64_t)v10;
}

unint64_t sub_10006706C(uint64_t a1)
{
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  id v3 = (void *)result;
  unint64_t result = IndexPath.row.getter();
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants);
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v5 = *(id *)(v4 + 8 * result + 32);
LABEL_6:
  [v3 participantController:a1 didSelectParticipant:v5];

  return swift_unknownObjectRelease();
}

id sub_10006737C(uint64_t a1)
{
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(void *)id v3 = 0xD000000000000015;
  *((void *)v3 + 1) = 0x80000001000E1DC0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  id v5 = objc_allocWithZone((Class)UISearchController);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = [v5 initWithSearchResultsController:0];

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  return [super initWithStyle:a1];
}

id sub_1000674A8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_unknownObjectWeakInit();
  uint64_t v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(void *)uint64_t v6 = 0xD000000000000015;
  *((void *)v6 + 1) = 0x80000001000E1DC0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  uint64_t v7 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  id v8 = objc_allocWithZone((Class)UISearchController);
  id v9 = v3;
  *(void *)&v3[v7] = [v8 initWithSearchResultsController:0];

  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  [super initWithNibName:v10 bundle:a3];

  return v11;
}

id sub_100067654(void *a1)
{
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_cellReuseIdentifier];
  *(void *)id v3 = 0xD000000000000015;
  *((void *)v3 + 1) = 0x80000001000E1DC0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_assignee] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_originator] = 0;
  uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_searchController;
  id v5 = objc_allocWithZone((Class)UISearchController);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = [v5 initWithSearchResultsController:0];

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  [super initWithCoder:a1];

  return v7;
}

id sub_10006778C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAParticipantTableViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAParticipantTableViewController()
{
  return self;
}

void sub_100067884(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 searchBar];
  id v9 = [v8 text];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v10 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_participants];
    Swift::String v16 = String.lowercased()();
    swift_bridgeObjectRetain();
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_1000524C0();
    StringProtocol.trimmingCharacters(in:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    if (String.count.getter())
    {
      unint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = sub_100067B04(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v10 = v12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAParticipantTableViewController_displayedParticipants] = v10;
    swift_bridgeObjectRelease();
    id v13 = [v2 tableView];
    if (v13)
    {
      id v14 = v13;
      [v13 reloadData];
    }
    else
    {
      __break(1u);
    }
  }
}

void *sub_100067B04(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_17;
        }
        id v7 = [v4 fullName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        sub_1000524C0();
        char v8 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if (v8) {
          goto LABEL_4;
        }
        id v9 = [v5 emailAddress];
        if (!v9) {
          goto LABEL_13;
        }
        NSString v10 = v9;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        char v11 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if (v11)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
LABEL_13:
        }
        ++v3;
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100067D5C()
{
  unint64_t result = qword_100122C20;
  if (!qword_100122C20)
  {
    sub_100056B94(255, (unint64_t *)&qword_100122C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122C20);
  }
  return result;
}

uint64_t sub_100067DC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100067E04(uint64_t a1)
{
  sub_1000666E4(a1, *(id *)(v1 + 16));
}

uint64_t sub_100067E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100067E1C()
{
  return swift_release();
}

uint64_t sub_100067E24()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100067EF0()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 + 16);

  return sub_10006706C(v1);
}

char *sub_10006810C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  id v7 = &v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = a3;
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  swift_bridgeObjectRelease();
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for FBAFilterGroup();
  char v8 = (char *)[super init];
  unint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    unint64_t result = v8;
    if (v10) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    return v8;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v15 = v8;
  unint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v9 + 8 * i + 32);
      }
      id v14 = v13;
      swift_unknownObjectWeakAssign();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_10006832C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterGroup();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAFilterGroup()
{
  return self;
}

uint64_t static FBATargetedSurvey.reportFailureToLaunchForm(formIdentifier:)()
{
  return static FBKSAdmin.reportFailureToLaunchForm(formIdentifier:completion:)();
}

id FBATargetedSurvey.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id FBATargetedSurvey.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATargetedSurvey();
  return [super init];
}

uint64_t type metadata accessor for FBATargetedSurvey()
{
  return self;
}

id FBATargetedSurvey.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATargetedSurvey();
  return [super dealloc];
}

void *sub_10006857C()
{
  id v1 = (NSString *)String._bridgeToObjectiveC()();
  Class v2 = NSClassFromString(v1);

  if (v2)
  {
    id v3 = [v0 subviews];
    sub_1000688A0();
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62) {
      goto LABEL_16;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v4 + 8 * v6);
        char v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        if ([v7 isKindOfClass:v2])
        {
          swift_bridgeObjectRelease_n();
          return v8;
        }

        ++v6;
        if (v9 == v5) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_100068754(uint64_t a1)
{
  id v3 = [v1 navigationController];
  if (v3)
  {
    unint64_t v4 = v3;
    id v9 = [v3 navigationBar];

    if (v9)
    {
      unsigned int v5 = [v9 shouldHideBarButtonItem];
      id v6 = [v1 navigationItem];
      id v7 = v6;
      if (v5) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = a1;
      }
      [v6 setRightBarButtonItem:v8];
    }
  }
}

unint64_t sub_1000688A0()
{
  unint64_t result = qword_100122D00;
  if (!qword_100122D00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122D00);
  }
  return result;
}

id sub_100068A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAAddAttachmentsCell_itemIdentifier];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAAddAttachmentsCell_button] = 0;
  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  uint64_t v12 = (objc_class *)type metadata accessor for FBAAddAttachmentsCell();
  v33.receiver = v3;
  v33.super_class = v12;
  id v13 = [super initWithStyle:a1 reuseIdentifier:v11];

  id v14 = v13;
  static UIListContentConfiguration.cell()();
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = v16;
  id v18 = [self mainBundle];
  v34._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0x415454415F444441;
  v19._object = (void *)0xEE00544E454D4843;
  v20.value._uint64_t countAndFlagsBits = v15;
  v20.value._object = v17;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v34);
  swift_bridgeObjectRelease();

  UIListContentConfiguration.text.setter();
  uint64_t v22 = (void *)FBKSystemImageNamePaperclip;
  unint64_t v23 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v24 = v22;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v23 systemImageNamed:v25];

  UIListContentConfiguration.image.setter();
  id result = [self tintColor];
  if (result)
  {
    Swift::String v28 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v28(v32, 0);
    v32[3] = v6;
    void v32[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    Swift::Int v29 = sub_100056D18(v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v29, v9, v6);
    id v30 = v14;
    UITableViewCell.contentConfiguration.setter();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100068DDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAddAttachmentsCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAAddAttachmentsCell()
{
  return self;
}

void sub_100068E84(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void NSNotification.keyboardAttributes.getter(uint64_t a1@<X8>)
{
  id v3 = [v1 userInfo];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100073F10((uint64_t)v28), (v7 & 1) != 0))
    {
      sub_100053854(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v29);
    }
    else
    {
      long long v29 = 0u;
      long long v30 = 0u;
    }
    sub_100073F54((uint64_t)v28);
    if (*((void *)&v30 + 1))
    {
      sub_100056B94(0, &qword_1001229A0);
      if (swift_dynamicCast())
      {
        uint64_t v8 = (void *)v22;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v5 + 16) && (unint64_t v9 = sub_100073F10((uint64_t)v28), (v10 & 1) != 0))
        {
          sub_100053854(*(void *)(v5 + 56) + 32 * v9, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        sub_100073F54((uint64_t)v28);
        if (*((void *)&v30 + 1))
        {
          if (swift_dynamicCast())
          {
            NSString v11 = (void *)v23;
            *(void *)&long long v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            *((void *)&v24 + 1) = v12;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v5 + 16) && (unint64_t v13 = sub_100073F10((uint64_t)v28), (v14 & 1) != 0))
            {
              sub_100053854(*(void *)(v5 + 56) + 32 * v13, (uint64_t)&v29);
            }
            else
            {
              long long v29 = 0u;
              long long v30 = 0u;
            }
            sub_100073F54((uint64_t)v28);
            if (*((void *)&v30 + 1))
            {
              type metadata accessor for CGRect(0);
              if (swift_dynamicCast())
              {
                long long v15 = v24;
                *(void *)&long long v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                *((void *)&v25 + 1) = v16;
                AnyHashable.init<A>(_:)();
                if (*(void *)(v5 + 16) && (unint64_t v17 = sub_100073F10((uint64_t)v28), (v18 & 1) != 0))
                {
                  sub_100053854(*(void *)(v5 + 56) + 32 * v17, (uint64_t)&v29);
                }
                else
                {
                  long long v29 = 0u;
                  long long v30 = 0u;
                }
                swift_bridgeObjectRelease();
                sub_100073F54((uint64_t)v28);
                if (*((void *)&v30 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    id v19 = [v8 unsignedIntegerValue];
                    [v11 doubleValue];
                    uint64_t v21 = v20;

                    *(void *)a1 = v19;
                    *(void *)(a1 + 8) = v21;
                    *(_OWORD *)(a1 + 16) = v15;
                    *(void *)(a1 + 32) = v26;
                    *(void *)(a1 + 40) = v27;
                    *(_OWORD *)(a1 + 48) = v25;
                    *(void *)(a1 + 64) = v26;
                    *(void *)(a1 + 72) = v27;
                    return;
                  }
                }
                else
                {
                  sub_100052464((uint64_t)&v29, (uint64_t *)&unk_100122D70);
                }
              }
            }
            else
            {
              sub_100052464((uint64_t)&v29, (uint64_t *)&unk_100122D70);
            }
          }
        }
        else
        {
          sub_100052464((uint64_t)&v29, (uint64_t *)&unk_100122D70);
        }
      }
    }
    else
    {
      sub_100052464((uint64_t)&v29, (uint64_t *)&unk_100122D70);
    }
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100069384()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100056B94(0, (unint64_t *)&qword_100122558);
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100125F48 = result;
  return result;
}

id sub_10006967C(uint64_t a1)
{
  return sub_100069B24(a1, type metadata accessor for FBAFollowupDisplayTextCell);
}

void sub_1000696E4()
{
  qword_100125F50 = 0x403E000000000000;
}

id sub_100069700()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_100069768(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v7 = (uint64_t *)(a1 + *a4);
  *char v7 = v6;
  v7[1] = v8;

  return swift_bridgeObjectRelease();
}

id sub_100069928(uint64_t a1)
{
  return sub_100069B24(a1, type metadata accessor for FBALastEmptyCell);
}

uint64_t sub_100069954()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_10006DE24();
    char v3 = v2;

    swift_unknownObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1000699BC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v10 = (void *)Strong;
    id v11 = a3;
    id v12 = a1;
    sub_10006DE24();
    char v14 = v13;

    swift_unknownObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14 & 1;
}

uint64_t sub_100069AF8()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_100069B08()
{
  return sub_100069B24(0, type metadata accessor for FollowupDataSource);
}

id sub_100069B24(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100069B5C()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_100069B6C()
{
  NSString v0 = objc_allocWithZone((Class)type metadata accessor for FollowupDataSource());
  v0[qword_100122DE8] = 0;
  swift_unknownObjectWeakInit();
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t sub_100069BE0(char a1)
{
  return *(void *)&aNotSet[8 * a1];
}

BOOL sub_100069C00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100069C14()
{
  return sub_100069BE0(*v0);
}

void sub_100069C1C(unsigned __int8 a1)
{
  uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState;
  if (v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] == a1) {
    return;
  }
  static os_log_type_t.default.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = 8 * (char)v1[v2];
  uint64_t v5 = *(void *)&aNotSet[v4];
  *(_OWORD *)(v3 + 16) = xmmword_1000D86F0;
  uint64_t v6 = *(void *)&aReadyTosubmitt[v4 + 16];
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_100054550();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  switch(v1[v2])
  {
    case 2u:
      [v1 setModalInPresentation:1];
      char v10 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      if (!v10) {
        goto LABEL_27;
      }
      [v10 setEnabled:0];
      id v11 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
      if (!v11) {
        goto LABEL_28;
      }
      [v11 setEnabled:0];
      id v12 = [v1 navigationItem];
      id v13 = [v12 leftBarButtonItem];
      goto LABEL_20;
    case 3u:
      [v1 setModalInPresentation:1];
      char v14 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      if (!v14) {
        goto LABEL_29;
      }
      [v14 setEnabled:0];
      long long v15 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
      if (!v15) {
        goto LABEL_30;
      }
      [v15 setEnabled:0];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v18 = v17;
      id v19 = [self mainBundle];
      v41._object = (void *)0xE000000000000000;
      v20._object = (void *)0x80000001000E26A0;
      v20._uint64_t countAndFlagsBits = 0xD000000000000010;
      v21.value._uint64_t countAndFlagsBits = v16;
      v21.value._object = v18;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v41._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v41);
      swift_bridgeObjectRelease();

      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 showSpinnerWithStatus:v23 userInteractionEnabled:0];

      id v24 = [v1 navigationItem];
      id v25 = [v24 leftBarButtonItem];
      goto LABEL_16;
    case 4u:
      [v1 setModalInPresentation:1];
      uint64_t v36 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      if (!v36) {
        goto LABEL_33;
      }
      [v36 setEnabled:1];
      Swift::String v37 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
      if (!v37) {
        goto LABEL_34;
      }
      id v38 = [v37 setEnabled:1];
      v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
      sub_10006A208(v38);
      [v1 hideSpinner];
      id v12 = [v1 navigationItem];
      id v13 = [v12 leftBarButtonItem];
LABEL_20:
      id v39 = v13;

      goto LABEL_21;
    case 5u:
      [v1 setModalInPresentation:1];
      uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      if (!v26) {
        goto LABEL_31;
      }
      [v26 setEnabled:0];
      uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
      if (!v27) {
        goto LABEL_32;
      }
      [v27 setEnabled:0];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v30 = v29;
      id v31 = [self mainBundle];
      v42._object = (void *)0xE000000000000000;
      v32._uint64_t countAndFlagsBits = 0x495454494D425553;
      v32._object = (void *)0xEA0000000000474ELL;
      v33.value._uint64_t countAndFlagsBits = v28;
      v33.value._object = v30;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v42._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v42);
      swift_bridgeObjectRelease();

      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 showSpinnerWithStatus:v35 userInteractionEnabled:0];

      id v24 = [v1 navigationItem];
      id v25 = [v24 leftBarButtonItem];
LABEL_16:
      id v39 = v25;

      [v39 setEnabled:0];
      goto LABEL_22;
    default:
      [v1 setModalInPresentation:0];
      uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
      if (!v7)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x10006A1F0);
      }
      [v7 setEnabled:0];
      uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
      if (!v8) {
        goto LABEL_26;
      }
      [v8 setEnabled:0];
      id v9 = [v1 navigationItem];
      id v39 = [v9 leftBarButtonItem];

      if (v39)
      {
LABEL_21:
        [v39 setEnabled:1];
LABEL_22:
      }
      return;
  }
}

void sub_10006A208()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState;
  int v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState);
  if (v7 != 3)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting))
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState) = 5;
      sub_100069C1C(v7);
    }
    else
    {
      uint64_t v8 = (void *)sub_100071780();
      sub_100091854();
      uint64_t v10 = v9;
      uint64_t v12 = v11;

      v18[0] = v10;
      v18[1] = v12;
      id v13 = [self whitespaceAndNewlineCharacterSet];
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000524C0();
      StringProtocol.trimmingCharacters(in:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      uint64_t v14 = String.count.getter();
      swift_bridgeObjectRelease();
      if (sub_100073D8C(v14 != 0))
      {
        unsigned __int8 v15 = *(unsigned char *)(v1 + v6);
        char v16 = 4;
      }
      else if (v14 {
             || (unint64_t v17 = *(void **)(v1
      }
                                + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController)) != 0
             && ([v17 hasFilePromises] & 1) != 0
             || *(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice) != 2)
      {
        unsigned __int8 v15 = *(unsigned char *)(v1 + v6);
        char v16 = 2;
      }
      else
      {
        unsigned __int8 v15 = *(unsigned char *)(v1 + v6);
        char v16 = 1;
      }
      *(unsigned char *)(v1 + v6) = v16;
      sub_100069C1C(v15);
    }
  }
}

void sub_10006A43C(char a1)
{
  int v2 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions) = a1;
  if (v2 != (a1 & 1))
  {
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v3) {
      [v3 collectsFiles];
    }
    if (*(unsigned char *)(v1
                  + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce) == 1)
      sub_10006E588();
    sub_10006A208();
  }
}

void sub_10006A524(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  if (v4 && a1)
  {
    id v14 = *(id *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    id v13 = a1;
    id v5 = v14;
    static os_log_type_t.fault.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1000D88B0;
    id v7 = [v5 ID];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [v7 integerValue];

      *(void *)(v6 + 56) = &type metadata for Int;
      *(void *)(v6 + 64) = &protocol witness table for Int;
      *(void *)(v6 + 32) = v9;
      id v10 = [v13 ID];
      if (v10)
      {
        uint64_t v11 = v10;
        id v12 = [v10 integerValue];

        *(void *)(v6 + 96) = &type metadata for Int;
        *(void *)(v6 + 104) = &protocol witness table for Int;
        *(void *)(v6 + 72) = v12;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        uint64_t v4 = *(void **)(v1 + v3);
        goto LABEL_6;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_6:
  *(void *)(v1 + v3) = a1;
}

id sub_10006A734()
{
  uint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController;
  int v2 = *(void **)(v0
                + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController);
  }
  else
  {
    uint64_t v4 = (objc_class *)type metadata accessor for FBAAddAttachmentsController();
    id v5 = (char *)objc_allocWithZone(v4);
    swift_unknownObjectWeakInit();
    uint64_t v6 = &v5[OBJC_IVAR____TtC18Feedback_Assistant27FBAAddAttachmentsController____lazy_storage___temporaryDirectory];
    uint64_t v7 = sub_10004DE60(&qword_100122790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    swift_unknownObjectWeakAssign();
    v12.receiver = v5;
    v12.super_class = v4;
    [super init];
    id v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    int v2 = 0;
  }
  id v10 = v2;
  return v3;
}

void sub_10006A840()
{
  qword_100122D60 = 1852399949;
  *(void *)algn_100122D68 = 0xE400000000000000;
}

id sub_10006A85C()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText);
  if (*(void *)(v0
                 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText
                 + 8))
  {
    id v2 = *v1;
  }
  else
  {
    id v2 = sub_10006A8D8(v0);
    *uint64_t v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_10006A8D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) == 1)
  {
    id v1 = [self mainBundle];
    v9._object = (void *)0xE000000000000000;
    v2._object = (void *)0x80000001000E3060;
    v2._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v3._uint64_t countAndFlagsBits = 0;
    v3._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  if (!v5)
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    return 0;
  }
  id v6 = v5;
  id result = [v6 displayText];
  if (result)
  {
    id v8 = result;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)countAndFlagsBits;
  }
  __break(1u);
  return result;
}

unint64_t sub_10006AA20()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice);
  if (v1 == 2)
  {
    v2._uint64_t countAndFlagsBits = 63;
    v2._object = (void *)0xE100000000000000;
    String.append(_:)(v2);
  }
  else
  {
    if (v1) {
      uint64_t v3 = 1702195828;
    }
    else {
      uint64_t v3 = 0x65736C6166;
    }
    if (v1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    unint64_t v5 = v4;
    String.append(_:)(*(Swift::String *)&v3);
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000015;
}

void sub_10006AADC()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  [super awakeFromNib];
  id v1 = [v0 navigationController];
  if (v1)
  {
    Swift::String v2 = v1;
    id v3 = [v1 presentationController];
    if (v3)
    {
      unint64_t v4 = v3;
      [v3 setDelegate:v0];
    }
  }
  else
  {
    id v5 = [v0 presentationController];
    if (!v5) {
      return;
    }
    Swift::String v2 = v5;
    [v5 setDelegate:v0];
  }
}

void sub_10006ABE8()
{
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  [super viewDidLoad];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v1) {
    goto LABEL_6;
  }
  Swift::String v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (!v2) {
    goto LABEL_6;
  }
  id v3 = v1;
  id v4 = v2;
  static os_log_type_t.info.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000D88B0;
  id v6 = [v3 ID];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 unsignedLongLongValue];

    *(void *)(v5 + 56) = &type metadata for UInt64;
    *(void *)(v5 + 64) = &protocol witness table for UInt64;
    *(void *)(v5 + 32) = v8;
    id v9 = [v4 ID];
    if (v9)
    {
      id v10 = v9;
      id v11 = [v9 unsignedIntegerValue];

      *(void *)(v5 + 96) = &type metadata for UInt;
      *(void *)(v5 + 104) = &protocol witness table for UInt;
      *(void *)(v5 + 72) = v11;
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
LABEL_6:
      sub_100071AC0();
      sub_100070B88();
      sub_10007231C();
      sub_10006A208();
      sub_10007016C(0, 0, 0, 0, 0, 0);
      id v12 = [self defaultCenter];
      id v13 = [self mainQueue];
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      void v17[4] = sub_100076EDC;
      v17[5] = v14;
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 1107296256;
      v17[2] = sub_100098000;
      v17[3] = &unk_1000F59D0;
      unsigned __int8 v15 = _Block_copy(v17);
      swift_release();
      id v16 = [v12 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:v13 usingBlock:v15];
      _Block_release(v15);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10006AED8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_10006E588();
  }
}

void sub_10006AF74(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  [super viewDidAppear:a1 & 1];
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 1;
  if (!*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController]
    && *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    sub_100071FDC();
  }
  if (*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem]) {
    [v1 updateRightBarButtonItemVisibility:];
  }
  else {
    __break(1u);
  }
}

id sub_10006B064()
{
  static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  [super dealloc];
}

void sub_10006B2C0(void *a1, double a2, double a3)
{
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  id v7 = [v3 tableView];
  if (v7)
  {
    id v8 = v7;
    [v7 setContentOffset:0 animated:0.0];

    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v3;
    v12[4] = sub_100076EB8;
    v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10006B440;
    void v12[3] = &unk_1000F59A8;
    id v10 = _Block_copy(v12);
    id v11 = v3;
    swift_release();
    [a1 animateAlongsideTransition:0 completion:v10];
    _Block_release(v10);
    if (*(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem])
    {
      [v11 updateRightBarButtonItemVisibility:];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10006B440(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10006B520(void *a1)
{
  id v2 = [a1 identifier];
  if (!v2) {
    goto LABEL_10;
  }
  objc_super v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (v4 != 0xD000000000000024 || v6 != 0x80000001000E3200)
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_6;
    }
LABEL_10:
    static os_log_type_t.error.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1000D86F0;
    id v18 = [a1 identifier];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0;
    }
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_100054550();
    if (v22) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 0;
    }
    unint64_t v24 = 0xE000000000000000;
    if (v22) {
      unint64_t v24 = v22;
    }
    *(void *)(v17 + 32) = v23;
    *(void *)(v17 + 40) = v24;
    os_log(_:dso:log:_:_:)();
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  id v8 = [a1 destinationViewController];
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    id v10 = [v9 topViewController];
    if (v10)
    {
      id v11 = v10;
      type metadata accessor for FBAFFUDisplayTextViewController();
      uint64_t v12 = swift_dynamicCastClass();
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = sub_10006A85C();
        unsigned __int8 v15 = (void *)(v13 + OBJC_IVAR____TtC18Feedback_Assistant31FBAFFUDisplayTextViewController_displayText);
        void *v15 = v14;
        v15[1] = v16;

LABEL_19:
        return swift_bridgeObjectRelease();
      }
    }
  }

  uint64_t v26 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(47);
  id v27 = [a1 identifier];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v30;
  }
  else
  {
    uint64_t v29 = 0;
  }
  v31._uint64_t countAndFlagsBits = v29;
  v31._object = v26;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v32._object = (void *)0x80000001000E3290;
  String.append(_:)(v32);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10006B8B4()
{
  id v1 = (void *)sub_100071780();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_super v3 = (void *)Strong;
  int v4 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  uint64_t v5 = &selRef_sortDescriptorWithKey_ascending_;
  uint64_t v6 = &qword_100122000;
  if (v4 != 1)
  {
LABEL_11:
    static os_log_type_t.default.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000D88B0;
    uint64_t v20 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    if (v20)
    {
      unint64_t v21 = v6;
      id v22 = [v20 ID];
      if (!v22)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v23 = v22;
      id v24 = [v22 v5[155]];

      Swift::String v32 = &protocol witness table for UInt;
      Swift::String v31 = &type metadata for UInt;
      *(void *)&long long v30 = v24;
      sub_100076BC8(&v30, v19 + 32);
      uint64_t v6 = v21;
    }
    else
    {
      *(void *)(v19 + 56) = &type metadata for Int;
      *(void *)(v19 + 64) = &protocol witness table for Int;
      *(void *)(v19 + 32) = 0;
    }
    id v25 = *(void **)&v0[v6[465]];
    if (v25)
    {
      id v26 = [v25 ID];
      if (v26)
      {
        id v27 = v26;
        id v28 = [v26 v5[155]];

        *(void *)(v19 + 96) = &type metadata for UInt;
        *(void *)(v19 + 104) = &protocol witness table for UInt;
        *(void *)(v19 + 72) = v28;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v29 = v0;
        sub_100074FA0(v29, v29);

        return;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  char v7 = (void *)sub_100071780();
  id v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = v8;
  [v8 resignFirstResponder];

  static os_log_type_t.default.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000D88B0;
  id v11 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v11)
  {
    *(void *)(v10 + 56) = &type metadata for Int;
    *(void *)(v10 + 64) = &protocol witness table for Int;
    *(void *)(v10 + 32) = 0;
    goto LABEL_8;
  }
  id v12 = [v11 ID];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 unsignedIntegerValue];

    Swift::String v32 = &protocol witness table for UInt;
    Swift::String v31 = &type metadata for UInt;
    *(void *)&long long v30 = v14;
    sub_100076BC8(&v30, v10 + 32);
    uint64_t v6 = &qword_100122000;
LABEL_8:
    unsigned __int8 v15 = *(void **)&v0[v6[465]];
    if (!v15)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    id v16 = [v15 ID];
    if (!v16)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v17 = v16;
    uint64_t v5 = &selRef_sortDescriptorWithKey_ascending_;
    id v18 = [v16 unsignedIntegerValue];

    *(void *)(v10 + 96) = &type metadata for UInt;
    *(void *)(v10 + 104) = &protocol witness table for UInt;
    *(void *)(v10 + 72) = v18;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_25:
  __break(1u);
}

void sub_10006BC44(char a1, unsigned char *a2)
{
  a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 1;
  sub_10006A208();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 24) = a1;
  if (*(void *)&a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    uint64_t v5 = a2;
    sub_100071FDC();
    sub_10006C184(a1 & 1);

    swift_release();
  }
  else if (a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] == 1)
  {
    uint64_t v17 = a2;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    uint64_t v6 = (void (**)())&v17[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    uint64_t v7 = *(void *)&v17[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    unint64_t *v6 = sub_100076E30;
    v6[1] = (void (*)())v4;
    sub_100059188(v7);
  }
  else
  {
    if (a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] == 1)
    {
      a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 1;
      id v8 = self;
      uint64_t v9 = a2;
      id v10 = [v8 sharedInstance];
      id v11 = *(void **)&v9[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
      if (v11)
      {
        id v12 = v10;
        uint64_t v13 = (void *)swift_allocObject();
        v13[2] = v9;
        v13[3] = sub_100076E30;
        void v13[4] = v4;
        aBlock[4] = sub_100077000;
        aBlock[5] = v13;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100064604;
        uint64_t aBlock[3] = &unk_1000F5930;
        id v14 = _Block_copy(aBlock);
        unsigned __int8 v15 = v9;
        swift_retain();
        id v16 = v11;
        swift_release();
        [v12 createUnsolicitedFeedbackFollowupForItem:v16 completion:v14];
        _Block_release(v14);

        swift_release();
        return;
      }

      __break(1u);
    }
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

void sub_10006BFA0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  *(unsigned char *)(a3 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup) = 0;
  if (a1 && !a2)
  {
    id v11 = a1;
    sub_10006A524(a1);
    a4();
    uint64_t v7 = (uint64_t *)(a3
                   + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler);
    id v8 = *(void (**)(uint64_t))(a3
                                        + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler);
    if (v8)
    {
      uint64_t v9 = swift_retain();
      v8(v9);
      uint64_t v10 = *v7;
      *uint64_t v7 = 0;
      v7[1] = 0;
      sub_100059188(v10);

      sub_100059188((uint64_t)v8);
    }
    else
    {
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    if (*(unsigned char *)(a3 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting) == 1) {
      sub_10006CBF8();
    }
  }
}

uint64_t sub_10006C0F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v5) {
    [v5 gatherAllMissingRequirementsWithAnswers:0];
  }
  return a3(0);
}

void sub_10006C184(char a1)
{
  id v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 1;
  sub_10006A208();
  static os_log_type_t.default.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000D8AE0;
  uint64_t v49 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!v5)
  {
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = 0;
LABEL_5:
    uint64_t v9 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
    if (v10)
    {
      id v11 = [v10 ID];
      if (v11)
      {
        id v12 = v11;
        id v13 = [v11 unsignedIntegerValue];

        *(void *)(v4 + 96) = &type metadata for UInt;
        *(void *)(v4 + 104) = &protocol witness table for UInt;
        *(void *)(v4 + 72) = v13;
        *(void *)(v4 + 136) = &type metadata for Bool;
        *(void *)(v4 + 144) = &protocol witness table for Bool;
        *(unsigned char *)(v4 + 112) = a1 & 1;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        id v14 = [self sharedApplication];
        *(void *)&long long aBlock = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        swift_bridgeObjectRelease();
        strcpy((char *)&aBlock, "FFU-sub:item");
        BYTE13(aBlock) = 0;
        HIWORD(aBlock) = -5120;
        unsigned __int8 v15 = *(void **)&v1[v9];
        if (v15)
        {
          char v48 = a1;
          [v15 ID];
          sub_10004DE60(&qword_100123018);
          v16._uint64_t countAndFlagsBits = String.init<A>(describing:)();
          String.append(_:)(v16);
          swift_bridgeObjectRelease();
          v17._uint64_t countAndFlagsBits = 45;
          v17._object = (void *)0xE100000000000000;
          String.append(_:)(v17);
          id v18 = *(void **)&v1[v49];
          if (!v18 || (Class isa = (Class)[v18 ID]) == 0)
          {
            sub_100056B94(0, &qword_1001229A0);
            Class isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
          }
          id v20 = [(objc_class *)isa description];
          uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v23 = v22;

          v24._uint64_t countAndFlagsBits = v21;
          v24._object = v23;
          String.append(_:)(v24);

          swift_bridgeObjectRelease();
          v25._uint64_t countAndFlagsBits = 0x63696C6F736E752DLL;
          v25._object = (void *)0xEC00000064657469;
          String.append(_:)(v25);
          if (v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited]) {
            uint64_t v26 = 1702195828;
          }
          else {
            uint64_t v26 = 0x65736C6166;
          }
          if (v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited]) {
            unint64_t v27 = 0xE400000000000000;
          }
          else {
            unint64_t v27 = 0xE500000000000000;
          }
          unint64_t v28 = v27;
          String.append(_:)(*(Swift::String *)&v26);
          swift_bridgeObjectRelease();
          long long v29 = aBlock;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = 0;
          *(unsigned char *)(v30 + 24) = 1;
          NSString v31 = String._bridgeToObjectiveC()();
          uint64_t v32 = swift_allocObject();
          *(void *)(v32 + 16) = v2;
          *(_OWORD *)(v32 + 24) = v29;
          *(void *)(v32 + 40) = v14;
          *(void *)(v32 + 48) = v30;
          uint64_t v53 = sub_100076CF8;
          uint64_t v54 = v32;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          id v51 = sub_1000992C4;
          uint64_t v52 = &unk_1000F5750;
          Swift::String_optional v33 = _Block_copy(&aBlock);
          Swift::String v34 = v2;
          id v35 = v14;
          swift_retain();
          swift_release();
          id v36 = [v35 beginBackgroundTaskWithName:v31 expirationHandler:v33];
          _Block_release(v33);

          swift_beginAccess();
          *(void *)(v30 + 16) = v36;
          *(unsigned char *)(v30 + 24) = 0;
          Swift::String v37 = sub_10006CFB8();
          id v38 = [self sharedInstance];
          id v39 = *(void **)&v2[v49];
          if (v39)
          {
            unint64_t v40 = v38;
            id v41 = v39;
            sub_10008167C((uint64_t)v37);
            swift_bridgeObjectRelease();
            v42.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            uint64_t v43 = *(void **)&v34[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
            if (v43)
            {
              uint64_t v44 = swift_allocObject();
              *(void *)(v44 + 16) = v34;
              uint64_t v53 = sub_100076D08;
              uint64_t v54 = v44;
              *(void *)&long long aBlock = _NSConcreteStackBlock;
              *((void *)&aBlock + 1) = 1107296256;
              id v51 = sub_100068E84;
              uint64_t v52 = &unk_1000F57A0;
              os_log_type_t v45 = _Block_copy(&aBlock);
              uint64_t v46 = v34;
              id v47 = v43;
              swift_release();
              [v40 beginSubmissionForFollowup:v41 withResponses:v42.super.isa didOptOut:v48 & 1 withCollector:v47 completion:v45];
              _Block_release(v45);

              swift_release();
              return;
            }
            goto LABEL_24;
          }
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  id v6 = [v5 ID];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 unsignedIntegerValue];

    uint64_t v53 = &protocol witness table for UInt;
    uint64_t v52 = &type metadata for UInt;
    *(void *)&long long aBlock = v8;
    sub_100076BC8(&aBlock, v4 + 32);
    goto LABEL_5;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10006C7C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  static os_log_type_t.error.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000D86F0;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_100054550();
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a5 + 24))
  {
    __break(1u);
  }
  else
  {
    [a4 endBackgroundTask:*(void *)(a5 + 16)];
    uint64_t result = swift_beginAccess();
    *(void *)(a5 + 16) = UIBackgroundTaskInvalid;
    *(unsigned char *)(a5 + 24) = 0;
  }
  return result;
}

id sub_10006C900(uint64_t a1, char *a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1000D86F0;
    swift_errorRetain();
    sub_10004DE60((uint64_t *)&unk_100123020);
    uint64_t v4 = String.init<A>(describing:)();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_100054550();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10006CBF8();
    return (id)swift_errorRelease();
  }
  static os_log_type_t.default.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000D86F0;
  uint64_t v9 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  id result = *(id *)&a2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id result = [result ID];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  id v11 = [result integerValue];

  *(void *)(v8 + 56) = &type metadata for Int;
  *(void *)(v8 + 64) = &protocol witness table for Int;
  *(void *)(v8 + 32) = v11;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v12 = *(void **)&a2[v9];
  if (v12)
  {
    id v13 = self;
    id v14 = v12;
    id v15 = [v13 sharedInstance];
    id v16 = [v15 sessions];

    sub_100056B94(0, (unint64_t *)&unk_100122F80);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v18 = v14;
    uint64_t v19 = sub_100074DD0(v17, v18);
    swift_bridgeObjectRelease();

    if (v19)
    {
      id v20 = [v13 sharedInstance];
      [v20 deleteSession:v19];
    }
  }

  return [a2 dismissViewControllerAnimated:1 completion:0];
}

void sub_10006CBF8()
{
  id v1 = self;
  id v2 = [v1 mainBundle];
  v19._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001000E2D90;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v19);

  id v5 = [v1 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD000000000000017;
  v20._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001000E2DB0;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v20);

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v8 message:v9 preferredStyle:1];

  id v11 = [v1 mainBundle];
  v21._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 19279;
  v12._object = (void *)0xE200000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v21);

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100076C90;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004D1A4;
  uint64_t aBlock[3] = &unk_1000F56D8;
  id v16 = _Block_copy(aBlock);
  swift_release();
  id v17 = [self actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);
  swift_release();

  [v10 addAction:v17];
  [v0 presentViewController:v10 animated:1 completion:0];
}

void sub_10006CEEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (unsigned char *)Strong;
    static os_log_type_t.default.getter();
    id v2 = *(id *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
    os_log(_:dso:log:_:_:)();

    v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 1;
    unsigned __int8 v3 = v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState];
    v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 4;
    sub_100069C1C(v3);
  }
}

void *sub_10006CFB8()
{
  uint64_t v1 = v0;
  sub_10006E9C4();
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  id v5 = (void *)sub_100071780();
  sub_100091854();
  uint64_t v7 = v6;
  uint64_t v9 = v8;

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000749CC(v7, v9, v2, v4, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v11 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice);
  if (v11 != 2
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    Swift::String v12 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v12)
    {
      id v13 = [v12 type];
      if (v13 == (id)7 || v13 == (id)4)
      {
        if (v11) {
          uint64_t v15 = 1702195828;
        }
        else {
          uint64_t v15 = 0x65736C6166;
        }
        if (v11) {
          uint64_t v16 = 0xE400000000000000;
        }
        else {
          uint64_t v16 = 0xE500000000000000;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;
        char v20 = swift_isUniquelyReferenced_nonNull_native();
        sub_1000749CC(v15, v16, v17, v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  return &_swiftEmptyDictionarySingleton;
}

void sub_10006D148()
{
  static os_log_type_t.default.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000D88B0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (v2)
  {
    id v3 = [v2 ID];
    if (!v3)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v4 = v3;
    id v5 = [v3 unsignedIntegerValue];

    char v20 = &protocol witness table for UInt;
    uint64_t v19 = &type metadata for UInt;
    *(void *)&long long v18 = v5;
    sub_100076BC8(&v18, v1 + 32);
  }
  else
  {
    *(void *)(v1 + 56) = &type metadata for Int;
    *(void *)(v1 + 64) = &protocol witness table for Int;
    *(void *)(v1 + 32) = 0;
  }
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (!v6)
  {
    __break(1u);
    goto LABEL_17;
  }
  id v7 = [v6 ID];
  if (!v7)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v7;
  id v9 = [v7 unsignedIntegerValue];

  *(void *)(v1 + 96) = &type metadata for UInt;
  *(void *)(v1 + 104) = &protocol witness table for UInt;
  *(void *)(v1 + 72) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] == 5) {
    return;
  }
  id v10 = (void *)sub_100071780();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  Swift::String v12 = (void *)Strong;
  int v13 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  if (v13 == 1)
  {
    uint64_t v14 = (void *)sub_100071780();
    uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v15)
    {
      uint64_t v16 = v15;
      [v15 resignFirstResponder];

      return;
    }
    goto LABEL_20;
  }
  if ([v0 isModalInPresentation])
  {
    id v17 = sub_10006D96C();
    [v0 presentViewController:v17 animated:1 completion:0];
  }
  else
  {
    sub_10006D3F0();
  }
}

void sub_10006D3F0()
{
  static os_log_type_t.default.getter();
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log);
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000D88B0;
  id v3 = (char *)OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup;
  uint64_t v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
  id v5 = &off_100116000;
  if (v4)
  {
    id v6 = [v4 ID];
    if (!v6)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    id v7 = v6;
    id v8 = [v6 unsignedIntegerValue];

    id v41 = &protocol witness table for UInt;
    unint64_t v40 = &type metadata for UInt;
    *(void *)&long long v38 = v8;
    sub_100076BC8(&v38, v2 + 32);
  }
  else
  {
    *(void *)(v2 + 56) = &type metadata for Int;
    *(void *)(v2 + 64) = &protocol witness table for Int;
    *(void *)(v2 + 32) = 0;
  }
  uint64_t v9 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem;
  id v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem);
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v11 = [v10 ID];
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::String v12 = v11;
  id v13 = [v11 unsignedIntegerValue];

  *(void *)(v2 + 96) = &type metadata for UInt;
  *(void *)(v2 + 104) = &protocol witness table for UInt;
  *(void *)(v2 + 72) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  unsigned __int8 v14 = *((unsigned char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState);
  *((unsigned char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState) = 3;
  sub_100069C1C(v14);
  uint64_t v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  uint64_t v16 = v0;
  id v17 = v1;
  [v15 abortAllSessions];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  if (v16[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] != 1
    || (uint64_t v19 = *(void **)&v3[(void)v0]) == 0)
  {
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v17;
    id v41 = sub_100076C28;
    NSDictionary v42 = (void *)v31;
    *(void *)&long long v38 = _NSConcreteStackBlock;
    *((void *)&v38 + 1) = 1107296256;
    id v39 = sub_1000992C4;
    unint64_t v40 = &unk_1000F5610;
    uint64_t v32 = _Block_copy(&v38);
    id v33 = v17;
    Swift::String v34 = v16;
    id v35 = v33;
    id v36 = v34;
    id v37 = v35;
    swift_release();
    [v36 dismissViewControllerAnimated:1 completion:v32];
    _Block_release(v32);

    swift_release();
    goto LABEL_12;
  }
  char v20 = self;
  Swift::String v21 = v16;
  id v22 = v17;
  id v5 = v21;
  id v3 = (char *)v22;
  id v23 = v19;
  id v24 = [v20 sharedInstance];
  Swift::String v25 = *(void **)((char *)v0 + v9);
  if (v25)
  {
    uint64_t v26 = v24;
    unint64_t v27 = (void *)swift_allocObject();
    v27[2] = v5;
    v27[3] = sub_100076C20;
    void v27[4] = v18;
    id v41 = sub_100076C84;
    NSDictionary v42 = v27;
    *(void *)&long long v38 = _NSConcreteStackBlock;
    *((void *)&v38 + 1) = 1107296256;
    id v39 = sub_100068E84;
    unint64_t v40 = &unk_1000F5660;
    unint64_t v28 = _Block_copy(&v38);
    long long v29 = v5;
    id v30 = v25;
    swift_retain();
    swift_release();
    [v26 deleteUnsolicitedFollowup:v23 withFeedbackItem:v30 completion:v28];
    _Block_release(v28);

    swift_release();
LABEL_12:

    return;
  }
LABEL_16:

  __break(1u);
}

void sub_10006D844(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  void v7[4] = sub_100076F74;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000992C4;
  v7[3] = &unk_1000F56B0;
  id v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [a1 dismissViewControllerAnimated:1 completion:v5];
  _Block_release(v5);
}

id sub_10006D96C()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v3._uint64_t countAndFlagsBits = 0xD000000000000017;
  v4._uint64_t countAndFlagsBits = 0xD000000000000034;
  v33._uint64_t countAndFlagsBits = 0xD000000000000045;
  v33._object = (void *)0x80000001000E2C00;
  v3._object = (void *)0x80000001000E2BA0;
  v4._object = (void *)0x80000001000E2BC0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v33);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:0 message:v5 preferredStyle:0];

  id v7 = [v1 mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v34._object = (void *)0x80000001000E2C70;
  v8._object = (void *)0x80000001000E2C50;
  v8._uint64_t countAndFlagsBits = 0xD000000000000011;
  v9._uint64_t countAndFlagsBits = 0x6574656C6544;
  v9._object = (void *)0xE600000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v34);

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  id v26 = v0;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_100076BA4;
  uint64_t v32 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  long long v29 = sub_10004D1A4;
  id v30 = &unk_1000F5570;
  Swift::String v12 = _Block_copy(&aBlock);
  swift_release();
  id v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:2 handler:v12];
  _Block_release(v12);

  [v6 addAction:v14];
  id v15 = [v1 mainBundle];
  v35._object = (void *)0xED00006E6F747475;
  v16._uint64_t countAndFlagsBits = 0x4C45434E4143;
  v16._object = (void *)0xE600000000000000;
  v17._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v17._object = (void *)0xE600000000000000;
  v35._uint64_t countAndFlagsBits = 0x62206C65636E6143;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v35);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void (*)())FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
  uint64_t v32 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  long long v29 = sub_10004D1A4;
  id v30 = &unk_1000F5598;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v13 actionWithTitle:v18 style:1 handler:v19];
  _Block_release(v19);

  [v6 addAction:v20];
  id v21 = [v6 presentationController];
  if (v21)
  {
    id v22 = v21;
    id v23 = [v26 navigationItem];
    id v24 = [v23 leftBarButtonItem];

    [v22 setBarButtonItem:v24];
  }
  return v6;
}

uint64_t sub_10006DDB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a1)
  {
    static os_log_type_t.error.getter();
    a1 = os_log(_:dso:log:_:_:)();
  }
  return a3(a1);
}

void sub_10006DE24()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();

      if (!v10) {
        goto LABEL_6;
      }
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [v3 maybeAttachmentWithIdentifier:v5];

      if (v6)
      {
        swift_bridgeObjectRelease();
        if ([v3 canDeleteAttachment:v6])
        {
LABEL_6:

          return;
        }
        unsigned __int8 v8 = [v3 canCancelAttachmentCollection:v6];
      }
      else
      {
        NSString v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v6 = [v3 maybeDeviceWithIdentifier:v7];

        if (!v6) {
          goto LABEL_6;
        }
        unsigned __int8 v8 = [v3 canRemoveDevice:v6];
      }
      unsigned __int8 v9 = v8;

      if ((v9 & 1) == 0) {
    }
      }
    else
    {
      __break(1u);
    }
  }
}

void sub_10006E0B4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (unsigned char *)Strong;
    static os_log_type_t.default.getter();
    uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
    NSString v5 = *(void **)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1000D86F0;
    *(void *)(v6 + 56) = &type metadata for Int;
    *(void *)(v6 + 64) = &protocol witness table for Int;
    *(void *)(v6 + 32) = a1;
    id v7 = v5;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    if (a1)
    {
      if (a1 == 2)
      {
        char v8 = v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
        v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 1;
        if (v8) {
          goto LABEL_13;
        }
      }
      else
      {
        if (a1 != 1)
        {
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          return;
        }
        int v10 = v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
        v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 0;
        if (v10 != 2 && (v10 & 1) == 0) {
          goto LABEL_13;
        }
      }
      sub_10007016C(0, 0, 0, 0, 0, 0);
      sub_10006A208();
    }
    else
    {
      static os_log_type_t.debug.getter();
      unsigned __int8 v9 = *(id *)&v3[v4];
      os_log(_:dso:log:_:_:)();

      id v3 = v9;
    }
LABEL_13:
  }
}

uint64_t sub_10006E2A0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10006E3EC()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_10007016C(1, 1, 1, 0, (uint64_t)sub_1000742E8, v0);
  return swift_release_n();
}

void sub_10006E470()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    id v2 = (void *)sub_100071780();
    double v3 = *(double *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight];
    id v4 = [v1 tableView];
    if (v4)
    {
      NSString v5 = v4;
      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        id v7 = (void *)v6;
        char v8 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          unsigned __int8 v9 = v8;
          [v8 frame];
          double v11 = v10;

          [v7 scrollTableToAvoidKeyboardInTableView:v5 keyboardHeight:v3 withPadding:v11];
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

id sub_10006E588()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100123008);
  uint64_t v7 = *(void *)(v6 - 8);
  id result = (id)__chkstk_darwin(v6);
  double v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (!v11)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v12 = v11;
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();

  v44[0] = 0xD000000000000010;
  v44[1] = 0x80000001000D8B30;
  NSDiffableDataSourceSnapshot.indexOfItem(_:)();
  char v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v14)
  {
    static os_log_type_t.error.getter();
    return (id)os_log(_:dso:log:_:_:)();
  }
  IndexPath.init(row:section:)();
  id result = [v1 tableView];
  if (!result) {
    goto LABEL_16;
  }
  id v15 = result;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v15 rectForRowAtIndexPath:isa];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  id v25 = [v1 tableView];
  if (!v25)
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v26 = v25;
  id result = [v1 tableView];
  if (result)
  {
    unint64_t v27 = result;
    [result convertRect:v26 toCoordinateSpace:v18, v20, v22, v24];
    double v29 = v28;
    double v31 = v30;

    id v32 = [v1 navigationController];
    if (v32)
    {
      Swift::String v33 = v32;
      id v34 = [v32 navigationBar];

      [v34 frame];
      double v36 = v35;

      [v26 frame];
      double v38 = v37 - v36 - (v29 + v31);
      if (v38 > 0.0)
      {
        id v39 = (void *)sub_100071780();
        [v39 frame];
        double v41 = v40;

        NSDictionary v42 = (char *)sub_100071780();
        uint64_t v43 = (double *)&v42[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
        *uint64_t v43 = v38 + v41;
        *((unsigned char *)v43 + 8) = 0;
        sub_10009197C();
      }
      sub_10007016C(0, 0, 1, 0, 0, 0);
    }
    else
    {
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10006E9C4()
{
  uint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments);
  if (v2 != 2) {
    return v2 & 1;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited))
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (result) {
      uint64_t result = (uint64_t)[(id)result requiresComments];
    }
  }
  *(unsigned char *)(v0 + v1) = result;
  return result;
}

objc_class *sub_10006EA34(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v89 = a2;
  char v8 = (void *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v88 = *(v8 - 1);
  __chkstk_darwin(v8);
  double v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = (void *)type metadata accessor for DispatchQoS();
  uint64_t v87 = *(v11 - 1);
  __chkstk_darwin(v11);
  char v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.debug.getter();
  uint64_t v90 = v4;
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000D86F0;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_100054550();
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (qword_100122D10 == a3 && off_100122D18 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    Class v17 = (Class)[a1 dequeueReusableCellWithIdentifier:v15 forIndexPath:isa];

    double v18 = v17;
    id v19 = sub_1000715D4();
    [v19 separatorInset];
    double v21 = v20;

    if (v18)
    {
      -[objc_class setSeparatorInset:](v18, "setSeparatorInset:", 0.0, v21, 0.0, 0.0);

      return v18;
    }
    __break(1u);
    goto LABEL_61;
  }
  double v23 = (char *)sub_100071780();
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  Class v25 = *(Class *)&v23[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain();

  if (v24 == a3 && v25 == (Class)a4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_19:
    double v29 = v90;
    uint64_t v30 = sub_100071780();
    double v31 = (void *)sub_100071780();
    id v32 = *(void **)&v29[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    id v33 = v32;
    sub_1000916FC(v32);

    return (objc_class *)v30;
  }
  Class v28 = (Class)0xD000000000000010;
  if ((a3 != 0xD00000000000001ALL || a4 != (char *)0x80000001000D8B10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (a3 == 0xD000000000000010 && a4 == (char *)0x80000001000D8B30
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v34 = (objc_class *)[v90 tableView];
      if (v34)
      {
        Class v28 = v34;
        NSString v35 = String._bridgeToObjectiveC()();
        Class v25 = IndexPath._bridgeToObjectiveC()().super.isa;
        double v18 = (objc_class *)[(objc_class *)v28 dequeueReusableCellWithIdentifier:v35 forIndexPath:v25];

        if (v18)
        {
          -[objc_class setSeparatorInset:](v18, "setSeparatorInset:", 0.0, INFINITY, 0.0, 0.0);
          sub_100056B94(0, (unint64_t *)&qword_100122970);
          double v36 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v37 = swift_allocObject();
          id v38 = v90;
          *(void *)(v37 + 16) = v90;
          v95 = sub_100076B9C;
          uint64_t v96 = v37;
          long long aBlock = _NSConcreteStackBlock;
          unint64_t v92 = 1107296256;
          uint64_t v93 = sub_1000992C4;
          uint64_t v94 = &unk_1000F5520;
          id v39 = _Block_copy(&aBlock);
          id v40 = v38;
          swift_release();
          static DispatchQoS.unspecified.getter();
          long long aBlock = (void **)_swiftEmptyArrayStorage;
          sub_100076AC4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10004DE60((uint64_t *)&unk_100122980);
          sub_10004DEA4();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v39);

          (*(void (**)(char *, void *))(v88 + 8))(v10, v8);
          (*(void (**)(char *, void *))(v87 + 8))(v13, v11);
          return v18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      v41._uint64_t countAndFlagsBits = 0xD000000000000015;
      v41._object = (void *)0x80000001000E2AC0;
      if (!String.hasPrefix(_:)(v41))
      {
        uint32_t v60 = v90;
        uint64_t v61 = *(void **)&v90[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
        if (v61)
        {
          char v8 = v61;
          NSString v62 = String._bridgeToObjectiveC()();
          id v63 = [v8 maybeDeviceWithIdentifier:v62];

          NSString v64 = String._bridgeToObjectiveC()();
          double v11 = [v8 maybeAttachmentWithIdentifier:v64];

          if (v63)
          {
            uint64_t v65 = self;
            double v10 = (char *)v63;
            NSString v66 = [v65 reuseIdentifier];
            if (!v66)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v66 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            Class v67 = IndexPath._bridgeToObjectiveC()().super.isa;
            Class v25 = (Class)[a1 dequeueReusableCellWithIdentifier:v66 forIndexPath:v67];

            self;
            uint64_t v68 = swift_dynamicCastObjCClass();
            if (v68)
            {
              double v18 = (objc_class *)v68;
              Class v17 = v25;
              [(objc_class *)v18 updateWithDevice:v10];
              if (qword_100121DE8 == -1)
              {
LABEL_39:
                if (sub_10006F7C4(a3, (uint64_t)a4, qword_100122D60, *(char **)algn_100122D68)) {
                  double v69 = sub_100071A50();
                }
                else {
                  double v69 = sub_1000718D8();
                }
                [(objc_class *)v18 updateWithSeparatorSpacing:v69];

                return v18;
              }
LABEL_61:
              swift_once();
              goto LABEL_39;
            }
            goto LABEL_70;
          }
          if (v11)
          {
            id v70 = self;
            uint64_t v71 = v11;
            NSString v72 = [v70 reuseIdentifier];
            if (!v72)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v72 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            Class v73 = IndexPath._bridgeToObjectiveC()().super.isa;
            Class v25 = (Class)[a1 dequeueReusableCellWithIdentifier:v72 forIndexPath:v73];

            self;
            uint64_t v74 = swift_dynamicCastObjCClass();
            if (v74)
            {
              double v18 = (objc_class *)v74;
              id v75 = v25;
              [(objc_class *)v18 setShowsIcon:0];
              [(objc_class *)v18 setAttachment:v71];
              uint64_t v76 = *(void **)&v60[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
              if (v76)
              {
                Swift::String v77 = self;
                id v78 = v76;
                id v79 = [v77 sharedInstance];
                id v80 = [v79 sessions];

                sub_100056B94(0, (unint64_t *)&unk_100122F80);
                unint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                id v82 = v78;
                uint64_t v83 = sub_100074DD0(v81, v82);
                swift_bridgeObjectRelease();

                if (v83)
                {
                  if ([v71 state] == (id)8) {
                    [(objc_class *)v18 updateDeferredStateWith:v83];
                  }
                }
              }
              if (qword_100121DE8 != -1) {
                swift_once();
              }
              if (sub_10006F7C4(a3, (uint64_t)a4, qword_100122D60, *(char **)algn_100122D68)) {
                double v84 = sub_100071A50();
              }
              else {
                double v84 = sub_1000718D8();
              }
              [(objc_class *)v18 updateWithSeparatorSpacing:v84];
              [(objc_class *)v18 updateSuperviewToAttachmentLabelSpacing:sub_1000718D8()];

              return v18;
            }
            goto LABEL_70;
          }
        }
        long long aBlock = 0;
        unint64_t v92 = 0xE000000000000000;
        _StringGuts.grow(_:)(41);
        swift_bridgeObjectRelease();
        long long aBlock = (void **)0xD000000000000027;
        unint64_t v92 = 0x80000001000E2AE0;
        v85._uint64_t countAndFlagsBits = a3;
        v85._object = a4;
        String.append(_:)(v85);
LABEL_71:
        uint64_t result = (objc_class *)_assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      NSDictionary v42 = v90;
      id v43 = [v90 tableView];
      if (v43)
      {
        uint64_t v44 = v43;
        NSString v45 = String._bridgeToObjectiveC()();
        Class v46 = IndexPath._bridgeToObjectiveC()().super.isa;
        Class v25 = (Class)[v44 dequeueReusableCellWithIdentifier:v45 forIndexPath:v46];

        type metadata accessor for FBAFFUValidationCell();
        uint64_t v47 = swift_dynamicCastClass();
        if (!v47)
        {
LABEL_70:

          goto LABEL_71;
        }
        double v18 = (objc_class *)v47;
        char v48 = v42[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice];
        *(unsigned char *)(v47 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice) = v48;
        Class v28 = v25;
        Class v25 = v18;
        sub_100097A54(v48);
        uint64_t v49 = *(void **)&v42[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
        if (v49)
        {
          id v50 = v49;
          id v51 = [v50 choiceText];
          if (!v51)
          {
LABEL_65:

            __break(1u);
            goto LABEL_70;
          }
          uint64_t v52 = v51;
          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;

          id v56 = (uint64_t *)((char *)v18 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery);
          uint64_t *v56 = v53;
          v56[1] = v55;
          swift_bridgeObjectRelease();
          id v57 = [(objc_class *)v18 textLabel];
          if (v57)
          {
            os_log_type_t v58 = v57;
            swift_bridgeObjectRetain();
            NSString v59 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v58 setText:v59];

            return v18;
          }
        }
        return v18;
      }
    }
    __break(1u);
    goto LABEL_65;
  }

  return (objc_class *)sub_1000715D4();
}

unsigned char *sub_10006F760(unsigned char *result)
{
  uint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce;
  char v2 = result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce];
  result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 1;
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void **)&result[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
    if (!v4) {
      return sub_10006E588();
    }
    uint64_t result = [v4 collectsFiles];
    if (v3[v1] == 1) {
      return sub_10006E588();
    }
  }
  return result;
}

uint64_t sub_10006F7C4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v9 = sub_10004DE60(&qword_100123008);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v13 = *(void **)(v4 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
  if (!v13) {
    goto LABEL_7;
  }
  id v14 = v13;
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();

  uint64_t v26 = a3;
  char v27 = a4;
  NSString v15 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = sub_10006F9F0(a1, a2, v15);
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = v16;
    uint64_t v26 = qword_100122D10;
    char v27 = off_100122D18;
    __chkstk_darwin(v16);
    uint64_t v23 = (uint64_t)&v26;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100074D10(sub_100076B0C, (uint64_t)&v25[-32], (uint64_t)v15);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    if (!__OFSUB__(v19, 1)) {
      return v18 == v19 - 1;
    }
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  int v24 = 0;
  uint64_t v23 = 933;
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006F9F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

void *sub_10006FAD8()
{
  if (qword_100121DE8 != -1) {
    swift_once();
  }
  id v1 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSectionIdentifier:v2];

  sub_10006A85C();
  uint64_t v4 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v4 >= 1)
  {
    id v5 = [v3 givenRowIdentifiers];
    uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1000867B4(0, v6[2] + 1, 1, v6);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1000867B4((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    _DWORD v6[2] = v8 + 1;
    uint64_t v9 = &v6[2 * v8];
    void v9[4] = 0xD00000000000001ALL;
    void v9[5] = 0x80000001000D8B10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setGivenRowIdentifiers:isa];
  }
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v11)
    {
      id v12 = [v11 type];
      if (v12 == (id)7 || v12 == (id)4)
      {
        unint64_t v14 = sub_10006AA20();
        uint64_t v16 = v15;
        id v17 = [v3 givenRowIdentifiers];
        uint64_t v18 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1000867B4(0, v18[2] + 1, 1, v18);
        }
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1)
        {
          uint64_t v54 = sub_1000867B4((void *)(v19 > 1), v20 + 1, 1, v18);
          unint64_t v21 = v20 + 1;
          uint64_t v18 = v54;
        }
        void v18[2] = v21;
        double v22 = &v18[2 * v20];
        void v22[4] = v14;
        v22[5] = v16;
        Class v23 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v3 setGivenRowIdentifiers:v23];
      }
    }
  }
  int v24 = (char *)sub_100071780();
  uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain();

  id v27 = [v3 givenRowIdentifiers];
  Class v28 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Class v28 = sub_1000867B4(0, v28[2] + 1, 1, v28);
  }
  unint64_t v30 = v28[2];
  unint64_t v29 = v28[3];
  if (v30 >= v29 >> 1) {
    Class v28 = sub_1000867B4((void *)(v29 > 1), v30 + 1, 1, v28);
  }
  v28[2] = v30 + 1;
  double v31 = &v28[2 * v30];
  v31[4] = v26;
  void v31[5] = v25;
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setGivenRowIdentifiers:v32];

  id v33 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (v33)
  {
    id v34 = [v33 generateSnapshotIdentifiersTrackingLastDevice:1];
    uint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v36 = [v3 givenRowIdentifiers];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000839E0(v35);
    Class v37 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setGivenRowIdentifiers:v37];
  }
  uint64_t v39 = qword_100122D10;
  id v38 = off_100122D18;
  swift_bridgeObjectRetain();
  id v40 = [v3 givenRowIdentifiers];
  Swift::String v41 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v41 = sub_1000867B4(0, v41[2] + 1, 1, v41);
  }
  unint64_t v43 = v41[2];
  unint64_t v42 = v41[3];
  if (v43 >= v42 >> 1) {
    Swift::String v41 = sub_1000867B4((void *)(v42 > 1), v43 + 1, 1, v41);
  }
  v41[2] = v43 + 1;
  uint64_t v44 = &v41[2 * v43];
  v44[4] = v39;
  v44[5] = v38;
  Class v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setGivenRowIdentifiers:v45];

  id v46 = [v3 givenRowIdentifiers];
  uint64_t v47 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v47 = sub_1000867B4(0, v47[2] + 1, 1, v47);
  }
  unint64_t v49 = v47[2];
  unint64_t v48 = v47[3];
  if (v49 >= v48 >> 1) {
    uint64_t v47 = sub_1000867B4((void *)(v48 > 1), v49 + 1, 1, v47);
  }
  v47[2] = v49 + 1;
  id v50 = &v47[2 * v49];
  v50[4] = 0xD000000000000010;
  v50[5] = 0x80000001000D8B30;
  Class v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setGivenRowIdentifiers:v51];

  id v52 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return _swiftEmptyArrayStorage;
}

void sub_10007016C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v80 = a5;
  uint64_t v81 = a6;
  LODWORD(v84) = a3;
  LODWORD(v79) = a2;
  int v82 = a1;
  uint64_t v9 = sub_10004DE60(&qword_100123000);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  id v78 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v76 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v76 - v16;
  __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v76 - v18;
  uint64_t v19 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v86 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v85 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  int v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = [v6 view];
  if (!v25)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v26 = v25;
  id v27 = [v25 window];

  uint64_t v83 = v7;
  uint64_t v28 = *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (v27)
  {
    if (!v28)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v29 = (uint64_t)v87;
    if ((*(unsigned char *)(v28 + qword_100122DE8) & 1) == 0)
    {
      uint64_t v77 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource;
      unint64_t v30 = v83;
      char v31 = (char)v84;
      if ((v79 & 1) == 0)
      {
        static os_log_type_t.info.getter();
        sub_10004DE60((uint64_t *)&unk_100122860);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1000D88B0;
        *(void *)(v32 + 56) = &type metadata for Bool;
        *(void *)(v32 + 64) = &protocol witness table for Bool;
        *(unsigned char *)(v32 + 32) = v82 & 1;
        *(void *)(v32 + 96) = &type metadata for Bool;
        *(void *)(v32 + 104) = &protocol witness table for Bool;
        *(unsigned char *)(v32 + 72) = v31 & 1;
        uint64_t v29 = (uint64_t)v87;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(void *)&v30[v77];
        if (!v28) {
          goto LABEL_54;
        }
      }
      *(unsigned char *)(v28 + qword_100122DE8) = 1;
      uint64_t v33 = sub_10004DE60(&qword_100123008);
      uint64_t v79 = *(void *)(v33 - 8);
      id v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
      v34(v29, 1, 1, v33);
      uint64_t v86 = v33;
      if (v31)
      {
        uint64_t v35 = *(void **)&v30[v77];
        if (!v35)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        id v36 = v35;
        dispatch thunk of UITableViewDiffableDataSource.snapshot()();

        v34((uint64_t)v17, 0, 1, v86);
        uint64_t v37 = (uint64_t)v87;
        sub_100076968((uint64_t)v17, (uint64_t)v87);
        uint64_t v38 = (uint64_t)v78;
LABEL_37:
        uint64_t i = v79;
LABEL_38:
        NSString v72 = *(void **)&v30[v77];
        if (v72)
        {
          sub_1000769D0(v37, v38);
          uint64_t v73 = v86;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(i + 48))(v38, 1, v86) != 1)
          {
            id v74 = v72;
            dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

            (*(void (**)(uint64_t, uint64_t))(i + 8))(v38, v73);
            uint64_t v75 = *(void *)&v30[v77];
            if (v75)
            {
              *(unsigned char *)(v75 + qword_100122DE8) = 0;
              sub_100052464((uint64_t)v87, &qword_100123000);
              return;
            }
            goto LABEL_53;
          }
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      NSDiffableDataSourceSnapshot.init()();
      v34((uint64_t)v14, 0, 1, v33);
      sub_100076968((uint64_t)v14, v29);
      id v46 = sub_10006FAD8();
      uint64_t v47 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
      *(void *)&v30[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot] = v46;
      swift_bridgeObjectRelease();
      unint64_t v48 = *(void *)&v30[v47];
      if (v48 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
        if (v49) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v49)
        {
LABEL_15:
          uint64_t v85 = v47;
          long long aBlock = (void **)_swiftEmptyArrayStorage;
          sub_100086D3C(0, v49 & ~(v49 >> 63), 0);
          if ((v49 & 0x8000000000000000) == 0)
          {
            uint64_t v50 = 0;
            Class v51 = aBlock;
            do
            {
              if ((v48 & 0xC000000000000001) != 0) {
                id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v52 = *(id *)(v48 + 8 * v50 + 32);
              }
              uint64_t v53 = v52;
              id v54 = [v52 sectionIdentifier];
              uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              id v57 = v56;

              long long aBlock = v51;
              unint64_t v59 = (unint64_t)v51[2];
              unint64_t v58 = (unint64_t)v51[3];
              if (v59 >= v58 >> 1)
              {
                sub_100086D3C(v58 > 1, v59 + 1, 1);
                Class v51 = aBlock;
              }
              ++v50;
              v51[2] = (void *)(v59 + 1);
              uint32_t v60 = &v51[2 * v59];
              v60[4] = (void *)v55;
              v60[5] = v57;
            }
            while (v49 != v50);
            swift_bridgeObjectRelease();
            unint64_t v30 = v83;
            uint64_t v47 = v85;
            goto LABEL_26;
          }
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
      }
      swift_bridgeObjectRelease();
      Class v51 = (void **)_swiftEmptyArrayStorage;
LABEL_26:
      double v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
      uint64_t v85 = v79 + 48;
      if (v84(v87, 1, v86) == 1)
      {
LABEL_56:
        __break(1u);
        return;
      }
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v51);
      swift_bridgeObjectRelease();
      unint64_t v61 = *(void *)&v30[v47];
      if (v61 >> 62) {
        goto LABEL_44;
      }
      uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (uint64_t i = v79; v62; uint64_t i = v79)
      {
        uint64_t v64 = 4;
        while (1)
        {
          uint64_t v65 = (v61 & 0xC000000000000001) != 0
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : (char *)*(id *)(v61 + 8 * v64);
          unint64_t v30 = v65;
          uint64_t v66 = v64 - 3;
          if (__OFADD__(v64 - 4, 1)) {
            break;
          }
          id v67 = [v65 rowIdentifiers];
          static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v68 = [v30 sectionIdentifier];
          uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v71 = v70;

          long long aBlock = (void **)v69;
          uint64_t v89 = v71;
          if (v84(v87, 1, v86) == 1) {
            goto LABEL_47;
          }
          NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          ++v64;
          if (v66 == v62)
          {
            swift_bridgeObjectRelease();
            unint64_t v30 = v83;
            uint64_t v38 = (uint64_t)v78;
            uint64_t v37 = (uint64_t)v87;
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_44:
        swift_bridgeObjectRetain();
        uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = (uint64_t)v78;
      uint64_t v37 = (uint64_t)v87;
      goto LABEL_38;
    }
  }
  else if (!v28)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  static os_log_type_t.debug.getter();
  uint64_t v39 = v83;
  os_log(_:dso:log:_:_:)();
  if (a4 <= 2)
  {
    sub_100056B94(0, (unint64_t *)&qword_100122970);
    uint64_t v87 = (char *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = a4;
    *(void *)(v40 + 24) = v39;
    *(unsigned char *)(v40 + 32) = v82 & 1;
    uint64_t v42 = v80;
    uint64_t v41 = v81;
    *(void *)(v40 + 40) = v80;
    *(void *)(v40 + 48) = v41;
    unint64_t v92 = sub_100076A80;
    uint64_t v93 = v40;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v89 = 1107296256;
    uint64_t v90 = sub_1000992C4;
    uint64_t v91 = &unk_1000F54D0;
    unint64_t v43 = _Block_copy(&aBlock);
    uint64_t v44 = v39;
    sub_10004FFD0(v42);
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100076AC4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10004DE60((uint64_t *)&unk_100122980);
    sub_10004DEA4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    Class v45 = v87;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v19);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v24, v22);
  }
}

void sub_100070B88()
{
  id v1 = v0;
  id v2 = [v0 tableView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v3 = v2;
  [v2 setEditing:0];

  id v4 = [v1 tableView];
  if (!v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v5 = v4;
  id v6 = sub_10006A734();
  [v5 setDropDelegate:v6];

  id v7 = [self reuseIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v8 = self;
  id v9 = [v8 mainBundle];
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v11 = self;
  id v12 = [v11 nibWithNibName:v10 bundle:v9];

  id v13 = v12;
  id v14 = [v1 tableView];
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v15 = v14;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 registerNib:v13 forCellReuseIdentifier:v16];

  id v17 = [v8 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v11 nibWithNibName:v18 bundle:v17];

  id v20 = v19;
  id v21 = [v1 tableView];
  if (!v21)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  [v22 registerNib:v20 forCellReuseIdentifier:v23];

  id v24 = [self reuseIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100056B94(0, (unint64_t *)&unk_100122F90);
  id v25 = (void *)static NSBundle.feedbackCoreFramework.getter();
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v11 nibWithNibName:v26 bundle:v25];

  sub_10004DE60((uint64_t *)&unk_1001238F0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1000D86F0;
  id v29 = v27;
  id v30 = [v29 description];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  v34._uint64_t countAndFlagsBits = v31;
  v34._object = v33;
  String.append(_:)(v34);

  swift_bridgeObjectRelease();
  *(void *)(v28 + 56) = &type metadata for String;
  *(void *)(v28 + 32) = 0x62696E206C6C6543;
  *(void *)(v28 + 40) = 0xE900000000000020;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  id v35 = [v1 tableView];
  if (!v35)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v36 = v35;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v36 registerNib:v29 forCellReuseIdentifier:v37];

  id v38 = [v8 mainBundle];
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [v11 nibWithNibName:v39 bundle:v38];

  id v66 = v40;
  id v41 = [v1 tableView];
  if (!v41)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v42 = v41;
  NSString v43 = String._bridgeToObjectiveC()();
  [v42 registerNib:v66 forCellReuseIdentifier:v43];

  id v44 = [v1 tableView];
  if (!v44)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  Class v45 = v44;
  type metadata accessor for FBAAddAttachmentsCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v45 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v47];

  id v48 = [v1 tableView];
  if (!v48)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v49 = v48;
  [v48 setRowHeight:UITableViewAutomaticDimension];

  id v50 = [v1 tableView];
  if (!v50)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  Class v51 = v50;
  [v50 setEstimatedRowHeight:80.0];

  id v52 = [v1 tableView];
  if (!v52)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v53 = v52;
  id v54 = [v1 tableView];
  if (!v54)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v55 = v54;
  [v54 frame];
  double v57 = v56;

  id v58 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v57, 1.0];
  [v53 setTableFooterView:v58];

  if (![v1 tableView])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v59 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  *((unsigned char *)objc_allocWithZone((Class)type metadata accessor for FollowupDataSource()) + qword_100122DE8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_1000768F8;
  *(void *)(v60 + 24) = v59;
  uint64_t v61 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  uint64_t v62 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource;
  id v63 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = v61;

  if (!*(void *)&v1[v62])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_unknownObjectWeakAssign();
  id v64 = [v1 tableView];
  if (!v64)
  {
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v65 = v64;
  [v64 setDelegate:v1];
}

uint64_t sub_1000713A8(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v9 = sub_10006EA34(a1, a2, a3, a4);

  uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
  if (v10 || (uint64_t v10 = swift_dynamicCastObjCProtocolConditional()) != 0)
  {
    uint64_t v11 = (void *)v10;
    id v12 = v9;
    NSString v13 = String._bridgeToObjectiveC()();
    [v11 setItemIdentifier:v13];

    return (uint64_t)v9;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_1000715D4()
{
  uint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell];
  }
  else
  {
    id v4 = (void *)sub_100071638(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100071638(void *a1)
{
  id v2 = [a1 tableView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  id v1 = [v3 dequeueReusableCellWithIdentifier:v4];

  if (v1)
  {
    type metadata accessor for FBAFollowupDisplayTextCell();
    uint64_t v5 = swift_dynamicCastClass();
    if (!v5)
    {
LABEL_8:

      goto LABEL_9;
    }
    uint64_t v6 = v5;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v8 = (void *)Strong;
      sub_10006A85C();
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v8 setText:v9];

      return v6;
    }
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100071780()
{
  uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell];
  if (v3)
  {
    uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell];
LABEL_7:
    id v11 = v3;
    return v4;
  }
  id v5 = [v1 tableView];
  if (!v5)
  {
    __break(1u);
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v6 = v5;
  NSString v7 = String._bridgeToObjectiveC()();
  id v0 = [v6 dequeueReusableCellWithIdentifier:v7];

  if (v0)
  {
    type metadata accessor for FBAExpandingTextInputCell();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v4 = v8;
      *(void *)(v8 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate + 8) = &off_1000F5230;
      swift_unknownObjectWeakAssign();
      NSString v9 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v4;
      id v10 = v0;

      id v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
LABEL_10:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double sub_1000718D8()
{
  id v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  if ((v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset
         + 8] & 1) == 0)
    return *(double *)v1;
  sub_100071920(v0);
  *(double *)id v1 = result;
  v1[8] = 0;
  return result;
}

void sub_100071920(void *a1)
{
  id v2 = [a1 tableView];
  if (v2)
  {
    id v3 = v2;
    NSString v4 = [self reuseIdentifier];
    if (!v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v1 = [v3 dequeueReusableCellWithIdentifier:v4];

    if (!v1) {
      goto LABEL_9;
    }
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      [v5 spaceFromSuperViewToLabel];

      return;
    }
  }
  else
  {
    __break(1u);
  }

LABEL_9:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_100071A50()
{
  id v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset
                 + 8) & 1) == 0)
    return *(double *)v1;
  id v2 = (void *)sub_100071780();
  [v2 separatorInset];
  double v4 = v3;

  *(double *)id v1 = v4;
  v1[8] = 0;
  return v4;
}

void sub_100071AC0()
{
  id v1 = [v0 navigationItem];
  [v1 setLargeTitleDisplayMode:0];

  id v2 = [v0 navigationController];
  if (v2)
  {
    double v3 = v2;
    id v4 = [v2 navigationBar];

    [v4 setPrefersLargeTitles:1];
  }
  id v5 = [v0 navigationItem];
  id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v0 action:"userDidCancel"];
  [v5 setLeftBarButtonItem:v6];

  id v7 = [v0 navigationItem];
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v9 = [v8 itemTitle];
  [v7 setTitle:v9];

  id v10 = [self mainBundle];
  v38._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0x425F54494D425553;
  v11._object = (void *)0xED00004E4F545455;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v38);

  NSString v13 = (void *)FBKSystemImageNameSendArrowUp;
  id v14 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = v13;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v14 systemImageNamed:v16];

  id v18 = objc_allocWithZone((Class)UIBarButtonItem);
  id v19 = v0;
  id v20 = [v18 initWithImage:v17 style:0 target:v19 action:"userDidTapSend"];

  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 setAccessibilityLabel:v22];

  NSString v23 = *(void **)&v19[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem];
  *(void *)&v19[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = v21;
  id v36 = v21;

  id v24 = [v19 navigationItem];
  [v24 setRightBarButtonItem:0];

  id v25 = [self configurationWithPointSize:32.0];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = v15;
  id v27 = v25;
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [v14 systemImageNamed:v28 withConfiguration:v27];

  if (!v29)
  {
LABEL_9:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  id v30 = [self systemButtonWithImage:v29 target:v19 action:"userDidTapSend"];
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v30 setAccessibilityLabel:v31];

  uint64_t v32 = *(void **)&v19[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton];
  *(void *)&v19[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = v30;
  id v33 = v30;

  id v34 = [v19 navigationItem];
  [v34 _setLargeTitleAccessoryView:v33 alignToBaseline:0 horizontalAlignment:1];

  id v35 = [v19 navigationItem];
  [v35 _setLargeTitleTwoLineMode:2];
}

void sub_100071FDC()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController;
    if (*(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController])
    {
      id v22 = v1;
      static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      double v3 = self;
      id v4 = v1;
      id v5 = [v3 sharedInstance];
      id v6 = [v5 sessions];

      sub_100056B94(0, (unint64_t *)&unk_100122F80);
      unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v8 = v4;
      id v9 = sub_100074DD0(v7, v8);
      swift_bridgeObjectRelease();

      if (v9)
      {
        id v10 = [v9 deviceIdentifiers];

        uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = sub_1000929DC(v11);
        uint64_t v14 = v13;
        swift_bridgeObjectRelease();
        if (v14)
        {
          sub_10004DE60(&qword_100122890);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1000D86F0;
          *(void *)(inited + 32) = v12;
          *(void *)(inited + 40) = v14;
          uint64_t v14 = sub_10008BCA8(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      id v16 = [self sharedInstance];
      id v17 = v8;
      id v18 = v0;
      if (v14)
      {
        v19.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        v19.super.Class isa = 0;
      }
      id v20 = [objc_allocWithZone((Class)FBKDeviceDiagnosticsController) initWithDeviceManager:v16 delegate:v0 filerForm:v8 pendingFileUrls:0 pendingURLExtensions:0 draftDeviceIds:v19.super.isa];

      id v21 = *(void **)&v0[v2];
      *(void *)&v0[v2] = v20;
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
  }
}

void sub_10007231C()
{
  static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)();
  id v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 addObserver:v0 selector:"keyboardWillShowWithNotification:" name:UIKeyboardWillShowNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"keyboardWillHideWithNotification:" name:UIKeyboardWillHideNotification object:0];
}

id sub_10007268C(uint64_t a1)
{
  id v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000D8AF0;
  id v6 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  unint64_t v7 = v2;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 initWithSectionIdentifier:v8];

  *(void *)(v5 + 32) = v9;
  uint64_t v19 = v5;
  specialized Array._endMutation()();
  *(void *)&v2[v4] = v5;
  uint64_t v10 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100121DD8 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_100125F48;
  *(void *)&v7[v10] = qword_100125F48;
  uint64_t v12 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  uint64_t v13 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  uint64_t v14 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  id v15 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(void *)id v15 = 0;
  v15[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  id v16 = v11;

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  return [super initWithStyle:a1];
}

id sub_100072938(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  uint64_t v7 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000D8AF0;
  id v9 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  uint64_t v10 = v4;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 initWithSectionIdentifier:v11];

  *(void *)(v8 + 32) = v12;
  uint64_t v24 = v8;
  specialized Array._endMutation()();
  *(void *)&v4[v7] = v8;
  uint64_t v13 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100121DD8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100125F48;
  *(void *)&v10[v13] = qword_100125F48;
  id v15 = &v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(void *)id v15 = 0;
  *((void *)v15 + 1) = 0;
  v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  id v16 = &v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  id v17 = &v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(void *)id v17 = 0;
  v17[8] = 1;
  objc_super v18 = &v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(void *)objc_super v18 = 0;
  v18[8] = 1;
  *(void *)&v10[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  id v19 = v14;

  if (a2)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  v23.receiver = v10;
  v23.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  id v21 = [super initWithNibName:v20 bundle:a3];

  return v21;
}

id sub_100072C64(void *a1)
{
  id v2 = v1;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_readinessState] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isSubmitting] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_submissionFailed] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___addAttachmentsController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource] = 0;
  uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_modelSnapshot;
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000D8AF0;
  id v6 = objc_allocWithZone((Class)FBKSectionIdentifierGroup);
  uint64_t v7 = v2;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 initWithSectionIdentifier:v8];

  *(void *)(v5 + 32) = v9;
  uint64_t v20 = v5;
  specialized Array._endMutation()();
  *(void *)&v2[v4] = v5;
  uint64_t v10 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log;
  if (qword_100121DD8 != -1) {
    swift_once();
  }
  NSString v11 = (void *)qword_100125F48;
  *(void *)&v7[v10] = qword_100125F48;
  id v12 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___displayText];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice] = 2;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear] = 0;
  uint64_t v13 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_hasRenderedAllCellsAtLeastOnce] = 0;
  v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___requiresComments] = 2;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_bigSendButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedFollowupDisplayTextCell] = 0;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___cachedCommentsCell] = 0;
  uint64_t v14 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsCellSeparatorInset];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  id v15 = &v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController____lazy_storage___deviceAttachmentsLastCellSeparatorInset];
  *(void *)id v15 = 0;
  v15[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_keyboardHeight] = 0;
  id v16 = v11;

  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for FBAFollowupResponseViewController();
  id v17 = [super initWithCoder:a1];

  return v17;
}

uint64_t sub_1000733A0(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a1;
  sub_10006A208();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 1;
  *(void *)(v15 + 24) = v14;
  id v16 = v14;
  sub_10007016C(1, 0, 0, 0, a7, v15);

  return swift_release();
}

void sub_100073548(void *a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)();
      sub_10006A43C(1);
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v4;
      id v6 = [self mainBundle];
      v14._object = (void *)0xE000000000000000;
      v7._object = (void *)0x80000001000E2840;
      v7._uint64_t countAndFlagsBits = 0xD000000000000015;
      v8.value._uint64_t countAndFlagsBits = v3;
      v8.value._object = v5;
      v9._uint64_t countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v14._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v14);
      swift_bridgeObjectRelease();

      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v2 showSpinnerWithStatus:v10 userInteractionEnabled:1];

      goto LABEL_4;
    case 1:
    case 2:
      static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)();
      [v2 hideSpinner];
      sub_10006A43C(0);
      *((unsigned char *)v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) = 0;
      sub_10006A208();
      return;
    case 3:
      static os_log_type_t.info.getter();
      os_log(_:dso:log:_:_:)();
      *((unsigned char *)v2 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) = 1;
      sub_10006A208();
      sub_100073844((uint64_t)[a1 filesBeingAttachedCount]);
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v2 showSpinnerWithStatus:v12 userInteractionEnabled:1];

LABEL_4:
      sub_10006E588();
      return;
    default:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100073834);
  }
}

uint64_t sub_100073844(uint64_t a1)
{
  if (a1 < 1)
  {
    id v12 = [self mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000053;
    v17._object = (void *)0x80000001000E2870;
    v13._uint64_t countAndFlagsBits = 0x5F474E4959504F43;
    v13._object = (void *)0xED000053454C4946;
    v14._uint64_t countAndFlagsBits = 0x6E69686361747441;
    v14._object = (void *)0xEF73656C69662067;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v17)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  else
  {
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v4 = v3;
    id v5 = [self mainBundle];
    v16._object = (void *)0xE000000000000000;
    v6._object = (void *)0x80000001000E28D0;
    v6._uint64_t countAndFlagsBits = 0xD000000000000012;
    v7.value._uint64_t countAndFlagsBits = v2;
    v7.value._object = v4;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v16);
    swift_bridgeObjectRelease();

    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1000D86F0;
    *(void *)(v9 + 56) = &type metadata for Int;
    *(void *)(v9 + 64) = &protocol witness table for Int;
    *(void *)(v9 + 32) = a1;
    uint64_t v10 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    return v10;
  }
}

void sub_100073BB4(uint64_t a1, void (*a2)(void *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    if (!*(void *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup))
    {
      static os_log_type_t.error.getter();
      id v5 = *(id *)&v4[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
      os_log(_:dso:log:_:_:)();
    }
    sub_100071FDC();
    Swift::String v6 = *(void **)&v4[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
    id v7 = v6;
    a2(v6);
  }
}

BOOL sub_100073D8C(char a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isStartingSessions) & 1) != 0
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCopyingFiles) & 1) != 0
    || (sub_10006E9C4() & 1) != 0 && (a1 & 1) == 0)
  {
    return 0;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited) & 1) == 0)
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup);
    if (v4)
    {
      id v5 = [v4 type];
      if (v5 == (id)7 || v5 == (id)4) {
        return *(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_validationChoice) != 2;
      }
    }
  }
  return 1;
}

unint64_t sub_100073E94(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100074380(a1, a2, v4);
}

unint64_t sub_100073F10(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100074464(a1, v4);
}

uint64_t sub_100073F54(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for FBAFollowupDisplayTextCell()
{
  return self;
}

uint64_t type metadata accessor for FBALastEmptyCell()
{
  return self;
}

uint64_t type metadata accessor for FollowupDataSource()
{
  uint64_t result = qword_100122E08;
  if (!qword_100122E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007403C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100074090()
{
  return type metadata accessor for FollowupDataSource();
}

uint64_t type metadata accessor for FBAFollowupResponseViewController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FBAFollowupResponseViewController.ReadinessState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FBAFollowupResponseViewController.ReadinessState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100074218);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_100074240(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FBAFollowupResponseViewController.ReadinessState()
{
  return &type metadata for FBAFollowupResponseViewController.ReadinessState;
}

unint64_t sub_10007425C()
{
  unint64_t result = qword_100122F58;
  if (!qword_100122F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122F58);
  }
  return result;
}

uint64_t sub_1000742B0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000742E8()
{
}

unint64_t sub_1000742F0(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10007452C(a1, v2);
}

unint64_t sub_100074380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        Swift::String v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100074464(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100076EE4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100073F54((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10007452C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1000746A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10004DE60(&qword_100123010);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  NSString v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    id v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    objc_super v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000749CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100073E94(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100074B54();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000746A4(v17, a5 & 1);
  unint64_t v23 = sub_100073E94(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *unint64_t v25 = a3;
  v25[1] = a4;
  int64_t v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

void *sub_100074B54()
{
  uint64_t v1 = v0;
  sub_10004DE60(&qword_100123010);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    char v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100074D10(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t *)(a3 + 16 * v4 + 24);
    do
    {
      uint64_t v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain();
      char v8 = a1(v10);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v6 -= 2;
      --v4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

void *sub_100074DD0(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v17 = v3;
      unint64_t v18 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      while (1)
      {
        if (v18) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v3 + 8 * v5);
        }
        uint64_t v6 = v7;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        id v9 = [v7 followupID];
        id v10 = [a2 ID];
        uint64_t v11 = v10;
        if (!v9) {
          break;
        }
        if (!v10)
        {
          uint64_t v11 = v9;
LABEL_5:

          uint64_t v6 = v11;
          goto LABEL_6;
        }
        sub_100056B94(0, &qword_1001229A0);
        uint64_t v12 = v4;
        int64_t v13 = a2;
        id v14 = v9;
        char v15 = static NSObject.== infix(_:_:)();

        a2 = v13;
        uint64_t v4 = v12;
        unint64_t v3 = v17;

        if (v15)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v6;
        }
LABEL_6:

        ++v5;
        if (v8 == v4) {
          goto LABEL_20;
        }
      }
      if (!v10) {
        goto LABEL_17;
      }
      goto LABEL_5;
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100074FA0(char *a1, unsigned char *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
  if (v5)
  {
    uint64_t v6 = a2;
    if ([v5 hasUnmetRequirementAttachments])
    {
      id v7 = self;
      id v8 = [v7 mainBundle];
      v50._object = (void *)0xE000000000000000;
      v9._object = (void *)0x80000001000E2F40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000011;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v50._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v50);

      id v11 = [v7 mainBundle];
      v12._uint64_t countAndFlagsBits = 0xD000000000000019;
      v51._object = (void *)0xE000000000000000;
      v12._object = (void *)0x80000001000E2F60;
      v13._uint64_t countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      v51._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v51);

      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

      id v17 = [v7 mainBundle];
      v52._object = (void *)0xE000000000000000;
      v18._object = (void *)0x80000001000E2F80;
      v18._uint64_t countAndFlagsBits = 0xD000000000000011;
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v52._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v52);

      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = a1;
      v20[3] = sub_100076D10;
      v20[4] = v4;
      uint64_t v21 = a1;
      swift_retain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v47 = sub_100076D1C;
      id v48 = v20;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      Class v45 = sub_10004D1A4;
      id v46 = &unk_1000F5818;
      unint64_t v23 = _Block_copy(&aBlock);
      swift_release();
      char v24 = self;
      id v42 = [v24 actionWithTitle:v22 style:0 handler:v23];
      _Block_release(v23);

      [v16 addAction:v42];
      id v25 = [v7 mainBundle];
      v53._object = (void *)0xE000000000000000;
      v26._uint64_t countAndFlagsBits = 0x575F54494D425553;
      v26._object = (void *)0xEF53454C49465F4FLL;
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v53._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v53);

      BOOL v28 = (void *)swift_allocObject();
      v28[2] = v21;
      v28[3] = sub_100076D10;
      v28[4] = v4;
      uint64_t v29 = v21;
      swift_retain();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v47 = sub_100076D2C;
      id v48 = v28;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      Class v45 = sub_10004D1A4;
      id v46 = &unk_1000F5868;
      uint64_t v31 = _Block_copy(&aBlock);
      swift_release();
      id v32 = [v24 actionWithTitle:v30 style:0 handler:v31];
      _Block_release(v31);

      [v16 addAction:v32];
      id v33 = [v7 mainBundle];
      v54._object = (void *)0xE000000000000000;
      v34._uint64_t countAndFlagsBits = 0x5F4F545F4B434142;
      v34._object = (void *)0xED00005446415244;
      v35._uint64_t countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v54._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v54);

      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v29;
      uint64_t v37 = v29;
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v47 = sub_100076D98;
      id v48 = (void *)v36;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      Class v45 = sub_10004D1A4;
      id v46 = &unk_1000F58B8;
      NSString v39 = _Block_copy(&aBlock);
      swift_release();
      id v40 = [v24 actionWithTitle:v38 style:1 handler:v39];
      _Block_release(v39);

      [v16 addAction:v40];
      [v37 presentViewController:v16 animated:1 completion:0];
      swift_release();

      return;
    }
  }
  else
  {
    uint64_t v41 = a2;
  }
  sub_10006BC44(0, a2);

  swift_release();
}

id sub_100075624()
{
  sub_10006DE24();
  if (!v2) {
    return 0;
  }
  unsigned __int8 v3 = v1;
  swift_unknownObjectRetain();
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (((v4 != 0) & v3) != 1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRetain();
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    if (v9)
    {
      if (v3)
      {
        Swift::String v10 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
        if (v10)
        {
          uint64_t v11 = v9;
          id v7 = v10;
          id v8 = [v7 trailingSwipeActionConfigurationWithDevice:v11 fromViewController:v0];
          goto LABEL_9;
        }
      }
    }
    goto LABEL_10;
  }
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController);
  if (!v5)
  {
LABEL_10:
    swift_unknownObjectRelease_n();
    return 0;
  }
  uint64_t v6 = v4;
  id v7 = v5;
  id v8 = [v7 trailingSwipeActionConfigurationWithAttachment:v6 fromViewController:v0];
LABEL_9:
  id v12 = v8;

  swift_unknownObjectRelease_n();
  return v12;
}

void sub_100075758(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)type metadata accessor for IndexPath();
  uint64_t v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  id v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void *)sub_100071780();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_43;
  }
  Swift::String v10 = Strong;
  [Strong resignFirstResponder];

  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource];
  if (!v11)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v12 = v11;
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();

  Swift::String v13 = (char *)v44;
  if (!v44)
  {
LABEL_47:
    (*(void (**)(char *, uint64_t, void *))(v5 + 16))(v7, a1, v4);
    long long aBlock = 0;
    unint64_t v44 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    long long aBlock = (void **)0xD00000000000002ALL;
    unint64_t v44 = 0x80000001000E3150;
    sub_100076AC4((unint64_t *)&unk_100123040, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  id v7 = (char *)aBlock;
  static os_log_type_t.default.getter();
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000D86F0;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_100054550();
  *(void *)(v14 + 32) = v7;
  *(void *)(v14 + 40) = v13;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  NSString v15 = (char *)sub_100071780();
  id v17 = *(char **)&v15[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  id v16 = *(char **)&v15[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier + 8];
  swift_bridgeObjectRetain();

  if (v7 == v17 && v13 == v16)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0
    || v7 == (char *)0xD000000000000010 && v13 == (char *)0x80000001000D8B30
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    goto LABEL_11;
  }
  if (v7 == (char *)0xD00000000000001ALL && v13 == (char *)0x80000001000D8B10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = String._bridgeToObjectiveC()();
    id v18 = sub_1000715D4();
    [v2 performSegueWithIdentifier:v4 sender:v18];

    id v19 = [v2 tableView];
    if (v19)
    {
LABEL_16:
      uint64_t v20 = v19;
      v21.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v20 deselectRowAtIndexPath:v21.super.isa animated:1];
LABEL_17:

      return;
    }
    goto LABEL_44;
  }
  if ((v7 != (char *)qword_100122D10 || v13 != off_100122D18)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    v31._uint64_t countAndFlagsBits = 0xD000000000000015;
    v31._object = (void *)0x80000001000E2AC0;
    if (String.hasPrefix(_:)(v31))
    {
      swift_bridgeObjectRelease();
      id v32 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup];
      if (!v32)
      {
        while (1)
        {
LABEL_48:
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
LABEL_49:
          __break(1u);
        }
      }
      id v33 = self;
      id v27 = v32;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      NSString v47 = sub_100076EB0;
      uint64_t v48 = v34;
      long long aBlock = _NSConcreteStackBlock;
      unint64_t v44 = 1107296256;
      Class v45 = sub_10006E2A0;
      id v46 = &unk_1000F5958;
      Swift::String v35 = _Block_copy(&aBlock);
      swift_release();
      [v33 showValidationChoicesForCellAtIndexPath:isa followup:v27 fromViewController:v2 completion:v35];
      _Block_release(v35);
      goto LABEL_25;
    }
    uint64_t v5 = OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController;
    uint64_t v36 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController];
    if (v36)
    {
      id v37 = v36;
      id v7 = (char *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Swift::String v13 = (char *)[v37 maybeAttachmentWithIdentifier:v7];

      if (v13)
      {
        if ([v13 canStartGathering])
        {
          NSString v38 = *(void **)&v2[v5];
          if (!v38) {
            goto LABEL_49;
          }
          id v39 = v38;
          uint64_t v4 = Dictionary._bridgeToObjectiveC()().super.isa;
          [v39 gatherAttachment:v13 answers:v4];

LABEL_40:
          id v41 = [v2 tableView];
          if (v41)
          {
            uint64_t v20 = v41;
            v21.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            [v20 deselectRowAtIndexPath:v21.super.isa animated:1];

            goto LABEL_17;
          }
          goto LABEL_46;
        }
LABEL_37:
        if ([v13 isReadyToDisplayContents])
        {
          Class v40 = IndexPath._bridgeToObjectiveC()().super.isa;
          [v2 presentAttachment:v13 fromIndexPath:v40];
        }
        else
        {
          static os_log_type_t.info.getter();
          os_log(_:dso:log:_:_:)();
        }
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v19 = [v2 tableView];
    if (v19) {
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  id v22 = [v2 tableView];
  if (!v22)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  unint64_t v23 = v22;
  Class v24 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v25 = [v23 cellForRowAtIndexPath:v24];

  id v26 = sub_10006A734();
  id v27 = v25;
  Class isa = sub_10005CC58(v2, a1, v25);

  id v29 = [isa popoverPresentationController];
  if (v29)
  {
    NSString v30 = v29;
    [v29 setPermittedArrowDirections:3];
  }
  [v2 presentViewController:isa animated:1 completion:0];
LABEL_25:
}

void sub_100075FC8()
{
  unsigned __int8 v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_dataSource);
  if (!v1)
  {
    __break(1u);
    return;
  }
  id v2 = v1;
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();

  if (v5)
  {
    if (v4 == 0xD000000000000010 && v5 == 0x80000001000D8B30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0) {
        return;
      }
    }
    if (qword_100121DE0 != -1) {
      swift_once();
    }
  }
}

void sub_1000760D0()
{
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_didAppear])
  {
    if (*(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_sendButtonInItem])
    {
      [v0 updateRightBarButtonItemVisibility];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:_:_:)();
  }
}

void sub_10007616C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    if (!*(void *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup))
    {
      static os_log_type_t.error.getter();
      id v5 = *(id *)&v4[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_log];
      os_log(_:dso:log:_:_:)();
    }
    sub_100071FDC();
    (*(void (**)(uint64_t, void))(a2 + 16))(a2, *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_devicesController]);
  }
}

uint64_t sub_100076244(unsigned char *a1, const void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void (*)())swift_allocObject();
  *((void *)v6 + 2) = v5;
  *((void *)v6 + 3) = sub_1000767C4;
  *((void *)v6 + 4) = v4;
  if (*(void *)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_followup])
  {
    swift_retain_n();
    swift_retain_n();
    _Block_copy(a2);
    sub_10007616C(v5, (uint64_t)a2);
    swift_release();
    swift_release();
LABEL_5:
    swift_release();
LABEL_6:
    swift_release();
    return swift_release();
  }
  if (a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup])
  {
    swift_retain_n();
    swift_retain_n();
    _Block_copy(a2);
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    id v7 = (void (**)())&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_createFollowupSavedHandler];
    *id v7 = sub_100076818;
    v7[1] = v6;
    sub_100059188(v8);
    swift_release();
    goto LABEL_5;
  }
  if (a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isUnsolicited] == 1)
  {
    a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_isCreatingFollowup] = 1;
    Swift::String v10 = self;
    swift_retain_n();
    swift_retain_n();
    _Block_copy(a2);
    id v11 = [v10 sharedInstance];
    id v12 = *(void **)&a1[OBJC_IVAR____TtC18Feedback_Assistant33FBAFollowupResponseViewController_contentItem];
    if (v12)
    {
      Swift::String v13 = v11;
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = a1;
      v14[3] = sub_100076818;
      v14[4] = v6;
      aBlock[4] = sub_100076828;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100064604;
      uint64_t aBlock[3] = &unk_1000F5318;
      NSString v15 = _Block_copy(aBlock);
      swift_retain();
      id v16 = v12;
      id v17 = a1;
      swift_release();
      [v13 createUnsolicitedFeedbackFollowupForItem:v16 completion:v15];
      _Block_release(v15);
      swift_release();
      swift_release();
      swift_release();

      goto LABEL_6;
    }
    swift_release();
    swift_release();
    _Block_release(a2);
    __break(1u);
  }
  swift_release();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000765D0()
{
  uint64_t v0 = (void *)sub_100071780();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v2 = (void *)Strong;
  int v3 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  if (v3 != 1) {
    return;
  }
  uint64_t v4 = (void *)sub_100071780();
  uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 resignFirstResponder];
}

void sub_1000766A4()
{
  static os_log_type_t.info.getter();
  os_log(_:dso:log:_:_:)();
  uint64_t v0 = (void *)sub_100071780();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v2 = (void *)Strong;
  int v3 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing);

  if (v3 == 1)
  {
    uint64_t v4 = (void *)sub_100071780();
    uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      id v6 = v5;
      [v5 resignFirstResponder];

      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    return;
  }
LABEL_5:

  sub_10006D148();
}

uint64_t sub_10007678C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000767C4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000767D8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100076818()
{
  sub_100073BB4(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

void sub_100076828(void *a1, uint64_t a2)
{
  sub_10006BFA0(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_100076834(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100076844()
{
  return swift_release();
}

uint64_t sub_10007684C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100076888()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    return sub_10006E588();
  }
  return result;
}

void sub_1000768B8(uint64_t a1)
{
  sub_100098B78(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000768C0()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000768F8(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  return sub_1000713A8(a1, a2, a3, a4);
}

uint64_t sub_100076900()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100076938(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v3 + 16))(a1, a2, *a3, a3[1]);
}

uint64_t sub_100076968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100123000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000769D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100123000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100076A38()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100076A80()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!__OFADD__(v1, 1)) {
    return sub_10007016C(*(unsigned __int8 *)(v0 + 32), 0, 0, v1 + 1, *(void *)(v0 + 40), *(void *)(v0 + 48));
  }
  __break(1u);
  return result;
}

uint64_t sub_100076AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100076B0C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

uint64_t sub_100076B64()
{
  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *sub_100076B9C()
{
  return sub_10006F760(*(unsigned char **)(v0 + 16));
}

void sub_100076BA4()
{
}

uint64_t sub_100076BC8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100076BE0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100076C20()
{
  sub_10006D844(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100076C28()
{
  static os_log_type_t.default.getter();

  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100076C84(uint64_t a1)
{
  return sub_10006DDB4(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_100076C90()
{
}

uint64_t sub_100076C98()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100076CA8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100076CF8()
{
  return sub_10006C7C4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48));
}

id sub_100076D08(uint64_t a1)
{
  return sub_10006C900(a1, *(char **)(v1 + 16));
}

void sub_100076D10(char a1)
{
  sub_10006BC44(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_100076D1C(uint64_t a1)
{
  return sub_10006C0F4(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_100076D2C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  return v1(1);
}

uint64_t sub_100076D98()
{
  static os_log_type_t.default.getter();

  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100076DF8()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_100076E30()
{
  char v1 = *(unsigned char *)(v0 + 24);
  sub_100071FDC();
  sub_10006C184(v1);
}

uint64_t sub_100076E70()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100076EB0(uint64_t a1)
{
}

id sub_100076EB8()
{
  return sub_10006E588();
}

void sub_100076EDC()
{
}

uint64_t sub_100076EE4(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_100077348()
{
  return sub_100079AEC(type metadata accessor for FBAActionControllerAction);
}

uint64_t type metadata accessor for FBAActionControllerAction()
{
  return self;
}

id sub_1000773E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions];
  *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions] = &_swiftEmptyArrayStorage;
  Swift::String v10 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title];
  *(void *)Swift::String v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = &v5[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)Swift::String v10 = a1;
  *((void *)v10 + 1) = a2;
  id v12 = v5;
  swift_bridgeObjectRelease();
  *(void *)id v11 = a3;
  *((void *)v11 + 1) = a4;
  swift_bridgeObjectRelease();
  if (a5)
  {
    swift_beginAccess();
    *(void *)uint64_t v9 = a5;

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  v14.receiver = v12;
  v14.super_class = (Class)type metadata accessor for FBAActionMenuController();
  return [super init];
}

uint64_t sub_1000774F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v11 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  id v12 = objc_allocWithZone(v11);
  uint64_t v13 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  objc_super v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  void *v14 = a1;
  v14[1] = a2;
  NSString v15 = *(void **)&v12[v13];
  *(void *)&v12[v13] = a3;
  id v16 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  id v17 = v12;

  id v18 = &v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(void *)id v18 = a4;
  *((void *)v18 + 1) = a5;
  swift_retain();

  v21.receiver = v17;
  v21.super_class = v11;
  [super init];

  swift_release();
  id v19 = (void *)(v5 + OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

Class sub_10007773C()
{
  char v1 = v0;
  long long v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title + 8];
  if (v2)
  {
    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_title];
    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = v3;
    v4._object = v2;
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle + 8];
  if (v5)
  {
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_subtitle];
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = 10;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8._uint64_t countAndFlagsBits = v6;
    v8._object = v5;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = 0;
  Swift::String v10 = (void *)0xE000000000000000;
  id v11 = &v0[OBJC_IVAR____TtC18Feedback_Assistant23FBAActionMenuController_actions];
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if (!(*(void *)v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v14 = v1;
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_7;
    }
LABEL_22:
    swift_bridgeObjectRelease();

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_23:
      sub_100056B94(0, &qword_100123190);
      swift_bridgeObjectRetain();
      preferredElementSize = (void *)_bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
LABEL_18:
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100056B94(0, &qword_100123190);
    preferredElementSize = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_100056B94(0, &qword_100123198);
    v24._uint64_t countAndFlagsBits = v9;
    v24._object = v10;
    v31.value.super.Class isa = 0;
    v31.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v24, (Swift::String_optional)0, v31, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, children).super.super.isa;
  }
LABEL_21:
  id v25 = v1;
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_22;
  }
LABEL_7:
  Class result = (Class)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v13 & 0x8000000000000000) == 0)
  {
    id v27 = v10;
    uint64_t v28 = v9;
    unint64_t v29 = v12 & 0xC000000000000001;
    sub_100056B94(0, &qword_100123188);
    uint64_t v16 = 0;
    uint64_t v30 = v12;
    do
    {
      if (v13 == v16)
      {
        __break(1u);
        goto LABEL_21;
      }
      if (v29) {
        id v17 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v12 + 8 * v16 + 32);
      }
      id v18 = v17;
      ++v16;
      id v19 = *(void **)&v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image];
      if (v17[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive]) {
        uint64_t v20 = 2;
      }
      else {
        uint64_t v20 = 0;
      }
      Swift::String v10 = (void *)swift_allocObject();
      void v10[2] = v18;
      v10[3] = v1;
      id v21 = v19;
      id v22 = v1;
      swift_bridgeObjectRetain();
      children._rawValue = (void *)v20;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v12 = v30;
    }
    while (v13 != v16);
    swift_bridgeObjectRelease();

    Swift::String v10 = v27;
    uint64_t v9 = v28;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_100077BE0()
{
  return sub_100079AEC(type metadata accessor for FBAActionMenuController);
}

uint64_t type metadata accessor for FBAActionMenuController()
{
  return self;
}

char *sub_100077C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = objc_allocWithZone((Class)type metadata accessor for _FBAActionSheetController());
  sub_100078274(a1, a2, a3, a4, a5);
  id v14 = v13;
  NSString v15 = (char *)[v6 initWithRootViewController:v13];
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController];
  *(void *)&v15[OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController] = v14;
  id v17 = v15;
  id v18 = v14;

  [v17 setModalPresentationStyle:7];
  id v19 = [v17 presentationController];
  if (v19)
  {
    uint64_t v20 = v19;
    [v19 setDelegate:v17];
  }
  return v17;
}

void sub_100077D94()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FBAActionSheetController();
  [super viewDidLoad];
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  [v0 setDetentBehavior:UIContentSizeCategory.isAccessibilityCategory.getter() & 1];
}

void sub_100077E78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC18Feedback_Assistant24FBAActionSheetController_actionSheetController);
  if (v6)
  {
    id v12 = (objc_class *)type metadata accessor for FBAActionControllerAction();
    uint64_t v13 = objc_allocWithZone(v12);
    uint64_t v14 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
    *(void *)&v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
    v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
    NSString v15 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
    void *v15 = a1;
    v15[1] = a2;
    uint64_t v16 = *(void **)&v13[v14];
    *(void *)&v13[v14] = a3;
    id v17 = a3;
    id v18 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    id v19 = v13;

    uint64_t v20 = &v19[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
    *(void *)uint64_t v20 = a4;
    *((void *)v20 + 1) = a5;
    swift_retain();

    v22.receiver = v19;
    v22.super_class = v12;
    [super init];

    swift_release();
    sub_100078D90(v21);
  }
  else
  {
    __break(1u);
  }
}

id sub_100078228()
{
  return sub_100079AEC(type metadata accessor for FBAActionSheetController);
}

uint64_t type metadata accessor for FBAActionSheetController()
{
  return self;
}

void sub_100078274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = (char *)[v6 initWithStyle:2];
  uint64_t v13 = v12;
  if (a5)
  {
    uint64_t v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
    swift_beginAccess();
    *(void *)uint64_t v14 = a5;
    NSString v15 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v12;
  }
  id v17 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle];
  *(void *)id v17 = a1;
  *((void *)v17 + 1) = a2;
  swift_bridgeObjectRelease();
  id v18 = &v13[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle];
  *(void *)id v18 = a3;
  *((void *)v18 + 1) = a4;
  swift_bridgeObjectRelease();
  id v19 = [v13 tableView];
  if (!v19)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v20 = v19;
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self nibWithNibName:v21 bundle:0];

  NSString v23 = String._bridgeToObjectiveC()();
  [v20 registerNib:v22 forCellReuseIdentifier:v23];

  id v24 = [v13 tableView];
  if (!v24)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v25 = v24;
  id v26 = [self systemBackgroundColor];
  [v25 setBackgroundColor:v26];

  id v27 = [v13 tableView];
  if (!v27)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v28 = v27;
  [v27 setRowHeight:UITableViewAutomaticDimension];

  id v29 = [v13 tableView];
  if (!v29)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v30 = v29;
  [v29 setEstimatedRowHeight:60.0];

  id v31 = [v13 tableView];
  if (v31)
  {
    [v31 reloadData];

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_100078528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a4;
  if (a3)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
    if (v8) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v13 = 0;
    if (a5) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v14 = 0;
    return a6(v9, v11, v8, v13, v14);
  }
  uint64_t v9 = 0;
  uint64_t v11 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  if (!a5) {
    goto LABEL_7;
  }
LABEL_4:
  type metadata accessor for FBAActionControllerAction();
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  return a6(v9, v11, v8, v13, v14);
}

id sub_1000785E0()
{
  id v1 = (objc_class *)type metadata accessor for _FBAActionSheetController();
  v6.receiver = v0;
  v6.super_class = v1;
  [super viewDidLoad];
  id result = [v0 tableView];
  if (result)
  {
    objc_super v3 = result;
    [result setShowsVerticalScrollIndicator:0];

    Swift::String v4 = &v0[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
    swift_beginAccess();
    if (*(void *)v4 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v5.receiver = v0;
    v5.super_class = v1;
    [super preferredContentSize];
    return [v0 setPreferredContentSize:];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000787BC(char a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for _FBAActionSheetController();
  [super viewWillAppear:a1 & 1];
  if (*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle + 8])
  {
    id v3 = objc_allocWithZone((Class)UIStackView);
    swift_bridgeObjectRetain();
    id v4 = [v3 init];
    [v4 setAxis:1];
    [v4 setSpacing:1.0];
    id v5 = [objc_allocWithZone((Class)UILabel) init];
    objc_super v6 = self;
    id v7 = [v6 systemFontOfSize:16.0 weight:UIFontWeightSemibold];
    [v5 setFont:v7];

    if (*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle + 8])
    {
      swift_bridgeObjectRetain();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v8 = 0;
    }
    [v5 setText:v8];

    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 addArrangedSubview:v5];
    id v11 = [objc_allocWithZone((Class)UILabel) init];
    id v12 = [v6 systemFontOfSize:14.0 weight:UIFontWeightRegular];
    [v11 setFont:v12];

    id v13 = [self secondaryLabelColor];
    [v11 setTextColor:v13];

    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 setText:v14];

    [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 addArrangedSubview:v11];
    id v9 = [v1 navigationItem];
    NSString v10 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v4];
    [v9 setLeftBarButtonItem:v10];
  }
  else
  {
    id v9 = [v1 navigationItem];
    if (*(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle + 8])
    {
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v10 = 0;
    }
    [v9 setTitle:v10];
  }
}

void sub_100078B84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  NSString v10 = (objc_class *)type metadata accessor for FBAActionControllerAction();
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  id v13 = &v11[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  *id v13 = a1;
  v13[1] = a2;
  NSString v14 = *(void **)&v11[v12];
  *(void *)&v11[v12] = a3;
  id v15 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = v11;

  id v17 = &v16[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(void *)id v17 = a4;
  *((void *)v17 + 1) = a5;
  swift_retain();

  v19.receiver = v16;
  v19.super_class = v10;
  [super init];

  swift_release();
  sub_100078D90(v18);
}

uint64_t sub_100078CBC(void *a1, int a2, int a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, void *, uint64_t, uint64_t))
{
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  id v17 = a4;
  id v18 = a1;
  a8(v13, v15, a4, a7, v16);

  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_100078D90(void *a1)
{
  id v2 = v1;
  id v4 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
  swift_beginAccess();
  id v5 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  id result = [v2 tableView];
  if (result)
  {
    id v7 = result;
    [result reloadData];

    if (*(void *)v4 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v8.receiver = v2;
    v8.super_class = (Class)type metadata accessor for _FBAActionSheetController();
    [super preferredContentSize];
    return [v2 setPreferredContentSize:];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100079144(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithIdentifier:v4 forIndexPath:isa];

  type metadata accessor for FBAActionSheetCell();
  id v7 = (char *)swift_dynamicCastClassUnconditional();
  unint64_t v8 = IndexPath.section.getter();
  id v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions);
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *v9;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v8 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v12 = (char *)*(id *)(v11 + 8 * v8 + 32);
LABEL_5:
  [v7 setSelectionStyle:2];
  uint64_t v13 = OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionTitleLabel;
  uint64_t v14 = *(void **)&v7[OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionTitleLabel];
  if (v14)
  {
    id v15 = v14;
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 setText:v16];
  }
  uint64_t v17 = OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionImageView;
  id v18 = *(void **)&v7[OBJC_IVAR____TtC18Feedback_Assistant18FBAActionSheetCell_actionImageView];
  if (v18) {
    [v18 setImage:*(void *)&v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image]];
  }
  id v19 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_1000560B8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100079B94;
  uint64_t aBlock[3] = &unk_1000F59F8;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = [v19 initWithDynamicProvider:v20];
  _Block_release(v20);
  swift_release();
  id v22 = *(void **)&v7[v13];
  if (v22) {
    [v22 setTextColor:v21];
  }
  NSString v23 = *(void **)&v7[v17];
  if (v23) {
    [v23 setTintColor:v21];
  }
  UIAccessibilityTraits v24 = UIAccessibilityTraitButton;
  id v25 = v6;
  [v7 setAccessibilityTraits:v24];

  return (uint64_t)v7;
}

id sub_1000795D8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions] = _swiftEmptyArrayStorage;
  id v5 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerTitle];
  void *v5 = 0;
  v5[1] = 0;
  id v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_headerSubtitle];
  void *v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_dismissesOnAction] = 0;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for _FBAActionSheetController();
  id v8 = [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_100079780()
{
  return sub_100079AEC(type metadata accessor for _FBAActionSheetController);
}

uint64_t sub_1000797B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for _FBAActionSheetController()
{
  return self;
}

id sub_100079AD4()
{
  return sub_100079AEC(type metadata accessor for FBAActionSheetCell);
}

id sub_100079AEC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAActionSheetCell()
{
  return self;
}

id sub_100079B94(uint64_t a1, void *a2)
{
  objc_super v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_100079BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100079C0C()
{
  return swift_release();
}

id sub_100079C14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image;
  *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_image] = 0;
  v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_destructive] = 0;
  objc_super v10 = &v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_title];
  *objc_super v10 = a1;
  v10[1] = a2;
  uint64_t v11 = *(void **)&v5[v9];
  *(void *)&v5[v9] = a3;
  uint64_t v12 = v5;
  id v13 = a3;

  uint64_t v14 = &v12[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  *(void *)uint64_t v14 = a4;
  *((void *)v14 + 1) = a5;
  swift_retain();

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for FBAActionControllerAction();
  return [super init];
}

void sub_100079CC8()
{
  id v1 = [v0 presentingViewController];
  if (v1
    && (v2 = v1, id v5 = [v1 traitCollection], v2, v5))
  {
    if ([v5 horizontalSizeClass] == (id)1 || objc_msgSend(v5, "verticalSizeClass") == (id)1)
    {
      id v3 = [v0 navigationItem];
      id v4 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"dismissSelf"];
      [v3 setRightBarButtonItem:v4];

      goto LABEL_8;
    }
  }
  else
  {
    id v5 = 0;
  }
  id v4 = [v0 navigationItem];
  [v4 setRightBarButtonItem:0];
LABEL_8:
}

void sub_100079E14()
{
  id v1 = v0;
  unint64_t v2 = IndexPath.section.getter();
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_actions];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if ((v4 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = (char *)*(id *)(v4 + 8 * v2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  id v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  id v6 = *(void (**)(uint64_t))&v5[OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler];
  swift_retain();

  id v7 = [v1 navigationController];
  if (!v7)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v8 = v7;
  type metadata accessor for FBAActionSheetController();
  uint64_t v9 = swift_dynamicCastClassUnconditional();
  v6(v9);
  swift_release();

  if (v1[OBJC_IVAR____TtC18Feedback_Assistant25_FBAActionSheetController_dismissesOnAction] == 1) {
    [v1 dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_100079F70()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100079FA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100079FE8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void (**)(uint64_t))(*(void *)(v0 + 16)
                                      + OBJC_IVAR____TtC18Feedback_Assistant25FBAActionControllerAction_actionHandler);
  swift_retain();
  v2(v1);

  return swift_release();
}

uint64_t sub_10007A064()
{
  uint64_t v1 = type metadata accessor for FBANotEnrolledView();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = __chkstk_darwin(v1);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v15 - v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v0;
  *(void *)&v7[*(int *)(v2 + 32)] = swift_getKeyPath();
  sub_10004DE60(&qword_100122280);
  swift_storeEnumTagMultiPayload();
  *id v7 = 1;
  *((void *)v7 + 1) = sub_10007ADDC;
  *((void *)v7 + 2) = v8;
  sub_100059200((uint64_t)v7, (uint64_t)v5);
  id v9 = objc_allocWithZone((Class)sub_10004DE60(&qword_100122690));
  id v10 = v0;
  uint64_t v11 = (void *)UIHostingController.init(rootView:)();
  id v12 = [v10 traitCollection];
  id v13 = [v12 horizontalSizeClass];

  if (v13 == (id)1)
  {
    [v11 setModalPresentationStyle:0];
  }
  else
  {
    [v11 setModalPresentationStyle:2];
    [v11 setModalInPresentation:1];
  }
  [v10 presentViewController:v11 animated:1 completion:0];

  return sub_100059264((uint64_t)v7);
}

void sub_10007A34C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AgreementConsentView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v24 - v11;
  if ([v3 isPresentingConsentView]) {
    return;
  }
  [v3 setIsPresentingConsentView:1];
  id v13 = [self sharedInstance];
  id v14 = [v13 pendingConsents];

  if (!v14) {
    return;
  }
  sub_100056B94(0, &qword_1001231A8);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v16 = *(id *)(v15 + 32);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  id v18 = (void *)swift_allocObject();
  void v18[2] = v3;
  v18[3] = v17;
  v18[4] = a1;
  uint64_t v18[5] = a2;
  id v19 = v17;
  id v20 = v3;
  sub_10004FFD0(a1);
  AgreementConsentView.init(consent:completion:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  id v21 = objc_allocWithZone((Class)sub_10004DE60(&qword_1001231A0));
  id v22 = (void *)UIHostingController.init(rootView:)();
  [v22 setModalPresentationStyle:2];
  [v22 setModalInPresentation:1];
  [v20 presentViewController:v22 animated:1 completion:0];

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

void sub_10007A684(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for AgreementConsentView.ConsentResult();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a2 setIsPresentingConsentView:0];
  id v13 = [self sharedInstance];
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for AgreementConsentView.ConsentResult.accepted(_:), v9);
  char v14 = static AgreementConsentView.ConsentResult.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  aBlock[4] = sub_10007ACB8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = &unk_1000F5BB0;
  id v16 = _Block_copy(aBlock);
  sub_10004FFD0(a4);
  swift_release();
  [v13 recordConsentResponseForConsent:a3 response:v14 & 1 completion:v16];
  _Block_release(v16);
}

uint64_t sub_10007A890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_10007AD1C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = &unk_1000F5C00;
  id v13 = _Block_copy(aBlock);
  sub_10004FFD0(a1);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007AD4C();
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_10004DEA4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t sub_10007AC20()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007AC58()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10007ACA8(uint64_t a1)
{
  sub_10007A684(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10007ACB8()
{
  return sub_10007A890(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10007ACC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007ACD0()
{
  return swift_release();
}

uint64_t sub_10007ACDC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007AD1C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

unint64_t sub_10007AD4C()
{
  unint64_t result = qword_100121FB0;
  if (!qword_100121FB0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100121FB0);
  }
  return result;
}

uint64_t sub_10007ADA4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10007ADDC()
{
  return [*(id *)(v0 + 16) signOutHandler];
}

uint64_t sub_10007ADEC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10007AE10()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10007AE34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

void sub_10007AF50()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FBAFFUDisplayTextViewController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  [v1 setLargeTitleDisplayMode:2];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v4];

    id v5 = [v0 navigationItem];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    id v9 = [self mainBundle];
    v17._object = (void *)0xE000000000000000;
    v10._object = (void *)0x80000001000E3770;
    v10._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v11.value._uint64_t countAndFlagsBits = v6;
    v11.value._object = v8;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v17._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v17);
    swift_bridgeObjectRelease();

    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setTitle:v13];

    id v14 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v0 action:"didTapDone"];
    id v15 = [v0 navigationItem];
    [v15 setRightBarButtonItem:v14];
  }
  else
  {
    __break(1u);
  }
}

id sub_10007B330()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFFUDisplayTextViewController();
  [super dealloc];
}

uint64_t type metadata accessor for FBAFFUDisplayTextViewController()
{
  return self;
}

uint64_t FBKFilerFormType.description.getter(uint64_t a1)
{
  uint64_t v1 = 1414743380;
  uint64_t v2 = 5588550;
  if (a1 != 1) {
    uint64_t v2 = 0;
  }
  if (a1 != 2) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 21062;
  }
}

uint64_t sub_10007B424()
{
  return FBKFilerFormType.description.getter(*v0);
}

uint64_t sub_10007B42C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_1001231E8);
  sub_1000537C4(v0, (uint64_t)qword_1001231E8);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10007B4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10004DE60(&qword_100123228);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10004DE60(&qword_100123248);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10004DE60((uint64_t *)&unk_100123250);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DateComponents();
  uint64_t v16 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, 1, 1, v3);
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  uint64_t v20 = v29;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  DateComponents.day.setter();
  id v21 = [self currentCalendar];
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  Date.init()();
  Calendar.date(byAdding:to:wrappingComponents:)();
  uint64_t v22 = v31;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v31);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v22) == 1)
  {
    uint64_t v23 = v30;
    sub_100052464((uint64_t)v9, &qword_100123228);
    if (qword_100121DF0 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000537C4(v24, (uint64_t)qword_1001231E8);
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Could not build date object for draft directories cleanup", v27, 2u);
      swift_slowDealloc();
    }

    static Date.distantFuture.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v30);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v32, v9, v22);
  }
}

uint64_t sub_10007BA0C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004DE18();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.background(_:), v7);
  uint64_t v11 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v15[1];
  aBlock[4] = sub_10007DD74;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  uint64_t aBlock[3] = &unk_1000F5C78;
  uint64_t v13 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_10007DD94((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_10004DEA4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  return swift_release();
}

void sub_10007BD70()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100121DF0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000537C4(v4, (uint64_t)qword_1001231E8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Did start draft cleanup", v7, 2u);
    swift_slowDealloc();
  }

  sub_10007B4A4((uint64_t)v3);
  sub_10007DDDC((uint64_t)v3, 0);
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  sub_10007B4A4((uint64_t)v3);
  sub_10007DDDC((uint64_t)v3, 1);
  v8(v3, v0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Did start draft cleanup", v11, 2u);
    swift_slowDealloc();
  }
}

id sub_10007C190()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADraftDirectoriesCleanUp();
  [super dealloc];
}

uint64_t type metadata accessor for FBADraftDirectoriesCleanUp()
{
  return self;
}

void *sub_10007C1EC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_10007C290@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_10007C2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v158 = a2;
  uint64_t v148 = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v164 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v162 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v152 - 8);
  uint64_t v7 = __chkstk_darwin(v152);
  v147 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v169 = (char *)&v126 - v9;
  uint64_t v10 = sub_10004DE60(&qword_100123228);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v150 = (uint64_t)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v149 = (char *)&v126 - v14;
  __chkstk_darwin(v13);
  uint64_t v151 = (uint64_t)&v126 - v15;
  uint64_t v154 = type metadata accessor for URLResourceValues();
  v172 = *(char **)(v154 - 8);
  uint64_t v16 = __chkstk_darwin(v154);
  v155 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v157 = (char *)&v126 - v18;
  uint64_t v19 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v170 - 8);
  uint64_t v23 = __chkstk_darwin(v170);
  v153 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  id v27 = (char *)&v126 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  v146 = (char *)&v126 - v29;
  __chkstk_darwin(v28);
  v163 = (char *)&v126 - v30;
  uint64_t v161 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v32 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = [self defaultManager];
  sub_10004DE60(&qword_100123230);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1000D88B0;
  *(void *)(v34 + 32) = NSURLContentModificationDateKey;
  *(void *)(v34 + 40) = NSURLCreationDateKey;
  Swift::String v35 = NSURLContentModificationDateKey;
  uint64_t v36 = NSURLCreationDateKey;
  id v165 = v33;
  id v37 = NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();
  if (!v37)
  {
    swift_bridgeObjectRelease();
    if (qword_100121DF0 != -1) {
      swift_once();
    }
    sub_1000537C4(v4, (uint64_t)qword_1001231E8);
    uint64_t v110 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, a3, v170);
    v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v177 = swift_slowAlloc();
      *(_DWORD *)v113 = 136315138;
      sub_10007DD94(&qword_100122870, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v114 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v176 = sub_10009EC3C(v114, v115, (uint64_t *)&v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v110);
      _os_log_impl((void *)&_mh_execute_header, v111, v112, "Could not reach enumerator at url %s", v113, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v110);
    }
    return;
  }
  uint64_t v159 = v34;
  id v156 = v37;
  NSEnumerator.makeIterator()();
  v168 = v32;
  NSFastEnumerationIterator.next()();
  if (!v178.super.isa)
  {
    uint64_t v145 = 0;
    uint64_t v39 = 0;
    NSString v43 = v168;
    uint64_t v45 = v164;
    unint64_t v44 = &off_100121000;
    goto LABEL_55;
  }
  uint64_t v39 = 0;
  uint64_t v145 = 0;
  uint64_t v144 = 0;
  Class v40 = (void (**)(void, void, void, void))(v22 + 56);
  v167 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v142 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  v137 = (void (**)(char *, char *, uint64_t))(v172 + 16);
  v140 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v139 = (NSObject **)(v172 + 8);
  v136 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v134 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  v135 = (void (**)(char *, uint64_t))(v6 + 8);
  v143 = (void (**)(char *, uint64_t))(v22 + 8);
  v141 = (void (**)(char *, char *, uint64_t))(v22 + 16);
  v132 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v131 = FBKDraftDirectoriesCleanUpDryRun;
  v172 = (char *)&type metadata for Any + 8;
  unint64_t v133 = 0x80000001000E3800;
  *(void *)&long long v38 = 136315394;
  long long v138 = v38;
  *(void *)&long long v38 = 136315138;
  long long v166 = v38;
  uint64_t v41 = v170;
  Swift::String v42 = v169;
  NSString v43 = v168;
  unint64_t v44 = &off_100121000;
  v171 = v40;
  while (2)
  {
    uint64_t v45 = v39;
    while (1)
    {
      sub_10007DC98(&v177, &v176);
      uint64_t v39 = v45 + 1;
      if (__OFADD__(v45, 1))
      {
        __break(1u);
        goto LABEL_73;
      }
      sub_100053854((uint64_t)&v176, (uint64_t)&v175);
      int v46 = swift_dynamicCast();
      NSString v47 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v40;
      if (!v46)
      {
        v47(v21, 1, 1, v41);
        goto LABEL_12;
      }
      v47(v21, 0, 1, v41);
      if ((*v167)(v21, 1, v41) != 1) {
        break;
      }
LABEL_12:
      sub_100052464((uint64_t)v21, &qword_100122790);
      if (v44[446] != (_UNKNOWN *)-1) {
        swift_once();
      }
      sub_1000537C4(v4, (uint64_t)qword_1001231E8);
      sub_100053854((uint64_t)&v176, (uint64_t)&v175);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v174 = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = v166;
        sub_100053854((uint64_t)&v175, (uint64_t)&v173);
        uint64_t v51 = String.init<A>(describing:)();
        *(void *)(v50 + 4) = sub_10009EC3C(v51, v52, &v174);
        NSString v43 = v168;
        swift_bridgeObjectRelease();
        sub_1000538B0((uint64_t)&v175);
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Failed to parse enumerated object as a URL: %s", (uint8_t *)v50, 0xCu);
        uint64_t v41 = v170;
        swift_arrayDestroy();
        Swift::String v42 = v169;
        swift_slowDealloc();
        unint64_t v44 = &off_100121000;
        swift_slowDealloc();
      }
      else
      {

        sub_1000538B0((uint64_t)&v175);
      }
      sub_1000538B0((uint64_t)&v176);
      NSFastEnumerationIterator.next()();
      ++v45;
      Class v40 = v171;
      if (!v178.super.isa)
      {
        uint64_t v45 = v164;
        goto LABEL_55;
      }
    }
    (*v142)(v163, v21, v41);
    uint64_t v53 = v159;
    type metadata accessor for URLResourceKey(0);
    sub_10007DD94(&qword_100122088, type metadata accessor for URLResourceKey);
    swift_bridgeObjectRetain();
    id v175 = (id)Set.init(minimumCapacity:)();
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54)
    {
      for (uint64_t i = 0; i != v54; ++i)
      {
        double v56 = *(void **)(v53 + 8 * i + 32);
        sub_10008830C(&v173, v56);
      }
    }
    swift_bridgeObjectRelease();
    double v57 = v157;
    uint64_t v58 = v144;
    URL.resourceValues(forKeys:)();
    uint64_t v59 = v155;
    if (v58)
    {
      swift_bridgeObjectRelease();
      uint64_t v144 = 0;
      uint64_t v45 = v164;
      goto LABEL_27;
    }
    uint64_t v144 = 0;
    swift_bridgeObjectRelease();
    uint64_t v60 = (uint64_t)v149;
    URLResourceValues.contentModificationDate.getter();
    uint64_t v61 = v154;
    (*v137)(v59, v57, v154);
    uint64_t v62 = v152;
    v130 = *v140;
    if (v130(v60, 1, v152) == 1)
    {
      uint64_t v63 = v151;
      URLResourceValues.creationDate.getter();
      uint64_t v62 = v152;
      id v64 = v59;
      uint64_t v65 = v63;
      v129 = *v139;
      ((void (*)(char *, uint64_t))v129)(v64, v61);
      sub_100052464(v60, &qword_100123228);
    }
    else
    {
      v129 = *v139;
      ((void (*)(char *, uint64_t))v129)(v59, v61);
      uint64_t v65 = v151;
      (*v136)(v151, v60, v62);
      (*v134)(v65, 0, 1, v62);
    }
    uint64_t v45 = v164;
    uint64_t v66 = v150;
    sub_10007DCA8(v65, v150);
    if (v130(v66, 1, v62) == 1)
    {
      sub_100052464(v66, &qword_100123228);
      sub_10007DD10();
      swift_allocError();
      *id v67 = 0xD000000000000011;
      v67[1] = v133;
      swift_willThrow();
      uint64_t v68 = v65;
LABEL_26:
      sub_100052464(v68, &qword_100123228);
      ((void (*)(char *, uint64_t))v129)(v157, v154);
      uint64_t v144 = 0;
LABEL_27:
      uint64_t v69 = v153;
      if (qword_100121DF0 != -1) {
        swift_once();
      }
      sub_1000537C4(v4, (uint64_t)qword_1001231E8);
      (*v141)(v69, v163, v41);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.error.getter();
      int v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v73 = swift_slowAlloc();
        v129 = v70;
        id v74 = v69;
        uint64_t v75 = v73;
        v130 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
        id v175 = v130;
        *(_DWORD *)uint64_t v75 = v138;
        sub_10007DD94(&qword_100122870, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
        LODWORD(v127) = v72;
        *(void *)(v75 + 4) = sub_10009EC3C(v76, v77, (uint64_t *)&v175);
        swift_bridgeObjectRelease();
        v128 = *v143;
        v128(v74, v41);
        *(_WORD *)(v75 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v78 = Error.localizedDescription.getter();
        *(void *)(v75 + 14) = sub_10009EC3C(v78, v79, (uint64_t *)&v175);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v80 = v129;
        _os_log_impl((void *)&_mh_execute_header, v129, (os_log_type_t)v127, "Failed to clean up draft directory: %s error: %s", (uint8_t *)v75, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v128(v163, v41);
        Swift::String v42 = v169;
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        uint64_t v81 = *v143;
        (*v143)(v69, v41);
        swift_errorRelease();
        v81(v163, v41);
      }
      goto LABEL_32;
    }
    (*v136)((uint64_t)v42, v66, v62);
    char v82 = static Date.< infix(_:_:)();
    uint64_t v83 = v154;
    unint64_t v44 = &off_100121000;
    if (v82)
    {
      double v84 = v146;
      if (qword_100121DF0 != -1) {
        swift_once();
      }
      sub_1000537C4(v4, (uint64_t)qword_1001231E8);
      (*v141)(v84, v163, v41);
      uint64_t v85 = v147;
      uint64_t v86 = v42;
      uint64_t v87 = v152;
      (*v132)(v147, v86, v152);
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.info.getter();
      int v90 = v89;
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v91 = swift_slowAlloc();
        LODWORD(v128) = v90;
        uint64_t v92 = v91;
        v127 = (void *)swift_slowAlloc();
        id v175 = v127;
        *(_DWORD *)uint64_t v92 = v138;
        os_log_t v126 = v88;
        uint64_t v93 = URL.path.getter();
        *(void *)(v92 + 4) = sub_10009EC3C(v93, v94, (uint64_t *)&v175);
        swift_bridgeObjectRelease();
        v130 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v143;
        ((void (*)(char *, uint64_t))v130)(v84, v41);
        *(_WORD *)(v92 + 12) = 2082;
        sub_10007DD94(&qword_100123240, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v95 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v92 + 14) = sub_10009EC3C(v95, v96, (uint64_t *)&v175);
        swift_bridgeObjectRelease();
        uint64_t v97 = v85;
        v98 = *v135;
        (*v135)(v97, v87);
        os_log_t v99 = v126;
        _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v128, "Deleting stale draft directory: %s date: %{public}s", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v130 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v143;
        ((void (*)(char *, uint64_t))v130)(v84, v41);
        long long v100 = v85;
        v98 = *v135;
        (*v135)(v100, v87);
      }
      BOOL v101 = __OFADD__(v145++, 1);
      Swift::String v42 = v169;
      NSString v43 = v168;
      if (v101) {
        __break(1u);
      }
      id v102 = [self standardUserDefaults];
      unsigned __int8 v103 = [v102 BOOLForKey:v131];

      if (v103)
      {
        v98(v42, v152);
        sub_100052464(v151, &qword_100123228);
        ((void (*)(char *, uint64_t))v129)(v157, v154);
        ((void (*)(char *, uint64_t))v130)(v163, v41);
        sub_1000538B0((uint64_t)&v176);
      }
      else
      {
        v104 = v163;
        URL._bridgeToObjectiveC()(&v178);
        uint64_t v106 = v105;
        id v175 = 0;
        unsigned int v107 = [v165 removeItemAtURL:v105 error:&v175];

        id v108 = v175;
        if (!v107)
        {
          v109 = v108;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          v98(v42, v152);
          uint64_t v68 = v151;
          goto LABEL_26;
        }
        v98(v42, v152);
        sub_100052464(v151, &qword_100123228);
        ((void (*)(char *, uint64_t))v129)(v157, v154);
        ((void (*)(char *, uint64_t))v130)(v104, v41);
LABEL_32:
        sub_1000538B0((uint64_t)&v176);
        NSString v43 = v168;
      }
      unint64_t v44 = &off_100121000;
    }
    else
    {
      (*v135)(v42, v62);
      sub_100052464(v151, &qword_100123228);
      ((void (*)(char *, uint64_t))v129)(v157, v83);
      (*v143)(v163, v41);
      sub_1000538B0((uint64_t)&v176);
      NSString v43 = v168;
    }
    NSFastEnumerationIterator.next()();
    Class v40 = v171;
    if (v178.super.isa) {
      continue;
    }
    break;
  }
LABEL_55:
  (*(void (**)(char *, uint64_t))(v160 + 8))(v43, v161);
  swift_bridgeObjectRelease();
  if (v44[446] != (_UNKNOWN *)-1) {
LABEL_73:
  }
    swift_once();
  uint64_t v116 = sub_1000537C4(v4, (uint64_t)qword_1001231E8);
  v117 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v162, v116, v4);
  v118 = Logger.logObject.getter();
  os_log_type_t v119 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v118, v119))
  {
    uint64_t v120 = swift_slowAlloc();
    *(void *)&long long v177 = swift_slowAlloc();
    *(_DWORD *)uint64_t v120 = 134218498;
    *(void *)&long long v176 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v121 = 0xE000000000000000;
    *(_WORD *)(v120 + 12) = 2080;
    uint64_t v122 = 1414743380;
    uint64_t v123 = 5588550;
    if (v158 == 1) {
      unint64_t v121 = 0xE300000000000000;
    }
    else {
      uint64_t v123 = 0;
    }
    if (v158 == 2) {
      unint64_t v121 = 0xE400000000000000;
    }
    else {
      uint64_t v122 = v123;
    }
    if (v158) {
      uint64_t v124 = v122;
    }
    else {
      uint64_t v124 = 21062;
    }
    if (v158) {
      unint64_t v125 = v121;
    }
    else {
      unint64_t v125 = 0xE200000000000000;
    }
    *(void *)&long long v176 = sub_10009EC3C(v124, v125, (uint64_t *)&v177);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v120 + 22) = 2048;
    *(void *)&long long v176 = v145;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v118, v119, "Found [%ld] %s draft directories, deleted [%ld]", (uint8_t *)v120, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v117, v4);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v45 + 8))(v117, v4);
  }
}

_OWORD *sub_10007DC98(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10007DCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100123228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007DD10()
{
  unint64_t result = qword_100123238;
  if (!qword_100123238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123238);
  }
  return result;
}

uint64_t sub_10007DD64()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10007DD74()
{
}

uint64_t sub_10007DD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007DD8C()
{
  return swift_release();
}

uint64_t sub_10007DD94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007DDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v18 - v12;
  id v14 = [self draftDirectoryForFilerType:a2];
  if (v14)
  {
    uint64_t v15 = v14;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if (result != 1)
    {
      v16(v13, v6, v7);
      sub_10007C2C0(a1, a2, (uint64_t)v13);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_10007E00C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100056B94(0, (unint64_t *)&qword_100122558);
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100123260 = result;
  return result;
}

int64x2_t sub_10007E084()
{
  int64x2_t result = vdupq_n_s64(0x4044000000000000uLL);
  xmmword_100123268 = (__int128)result;
  return result;
}

id sub_10007E0F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAAvatarHelper();
  [super dealloc];
}

uint64_t type metadata accessor for FBAAvatarHelper()
{
  return self;
}

id sub_10007E17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = (void *)a5(v6, v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v11;
}

id sub_10007E250(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8 = [objc_allocWithZone((Class)PRMonogram) init];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100092A5C(a1, a2);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100092A5C(a3, a4);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v17];

  return v8;
}

uint64_t sub_10007E36C(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)CNContactStore) init];
  uint64_t v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 predicateForContactsMatchingEmailAddress:v6];

  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000D8AF0;
  *(void *)(v8 + 32) = CNContactThumbnailImageDataKey;
  specialized Array._endMutation()();
  uint64_t v9 = CNContactThumbnailImageDataKey;
  sub_10004DE60(&qword_1001232A8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = 0;
  id v11 = [v4 unifiedContactsMatchingPredicate:v7 keysToFetch:isa error:&v23];

  id v12 = v23;
  if (!v11)
  {
    id v17 = v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    if (qword_100121DF8 == -1)
    {
LABEL_10:
      sub_10004DE60((uint64_t *)&unk_100122860);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1000D88B0;
      *(void *)(v18 + 56) = &type metadata for String;
      unint64_t v19 = sub_100054550();
      *(void *)(v18 + 64) = v19;
      *(void *)(v18 + 32) = a1;
      *(void *)(v18 + 40) = a2;
      swift_getErrorValue();
      swift_bridgeObjectRetain();
      uint64_t v20 = Error.localizedDescription.getter();
      *(void *)(v18 + 96) = &type metadata for String;
      *(void *)(v18 + 104) = v19;
      *(void *)(v18 + 72) = v20;
      *(void *)(v18 + 80) = v21;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();

      return 0;
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  sub_100056B94(0, &qword_1001232B0);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = v12;

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_8;
    }
    goto LABEL_4;
  }
  uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v15)
  {
LABEL_4:
    if ((v13 & 0xC000000000000001) != 0)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_7;
    }
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v16 = *(id *)(v13 + 32);
LABEL_7:
      uint64_t v15 = (uint64_t)v16;
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_8:
  swift_bridgeObjectRelease();

  return v15;
}

void sub_10007E6C0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8 = [objc_allocWithZone((Class)PRMonogram) init];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100092A5C(a1, a2);
  id v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100092A5C(a3, a4);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v17];

  id v18 = [self mainScreen];
  [v18 scale];
  double v20 = v19;

  id v21 = [v8 snapshotWithSize:0 scale:24.0 options:v20];
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = [v21 imageWithRenderingMode:1];

    if (v23) {
      goto LABEL_8;
    }
  }
  uint64_t v24 = (void *)FBKSystemImageNameGenericUser;
  uint64_t v25 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = v24;
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v25 systemImageNamed:v27];

  if (v28) {
LABEL_8:
  }

  else {
    __break(1u);
  }
}

void sub_10007E8F0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8 = [objc_allocWithZone((Class)PRMonogram) init];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_100092A5C(a1, a2);
  id v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100092A5C(a3, a4);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v17];

  id v18 = [v8 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v19 >= 1)
  {
    if (qword_100121E00 != -1) {
      swift_once();
    }
    long long v20 = xmmword_100123268;
    id v21 = [self mainScreen];
    [v21 scale];
    double v23 = v22;

    id v24 = [v8 snapshotWithSize:0 scale:v20 options:v23];
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = [v24 imageWithRenderingMode:1];

      if (v26) {
        goto LABEL_11;
      }
    }
  }
  NSString v27 = (void *)FBKSystemImageNameGenericUser;
  id v28 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v29 = v27;
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = [v28 systemImageNamed:v30];

  if (v31) {
LABEL_11:
  }

  else {
    __break(1u);
  }
}

id sub_10007EBB0(uint64_t a1, uint64_t a2)
{
  objc_super v2 = (objc_class *)sub_10007E36C(a1, a2);
  if (!v2) {
    return 0;
  }
  Class v3 = v2;
  id v4 = [(objc_class *)v2 thumbnailImageData];
  if (v4)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    id v8 = objc_allocWithZone((Class)UIImage);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v4 = [v8 initWithData:isa];
    sub_1000537FC(v5, v7);

    Class v3 = isa;
  }

  return v4;
}

void sub_10007EE38(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active) = a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (id)Strong;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    if (v3)
    {
      id v4 = (void *)v3;
      swift_getKeyPath();
      _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
      uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v5)
      {
        [v5 filterManager:v4 didToggleFilter:v1];
        swift_unknownObjectRelease();
      }
      swift_getKeyPath();
      _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
    }
    else
    {
    }
  }
}

char *sub_10007EFDC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = a1;
  uint64_t v9 = &v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title];
  void *v9 = a2;
  v9[1] = a3;
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for FBAFilter();
  id v10 = a1;
  id v11 = [super init];
  Swift::String v12 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = (char *)v11;
  id v14 = a4;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v12 systemImageNamed:v15];

  NSString v17 = *(void **)&v13[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image];
  *(void *)&v13[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = v16;

  return v13;
}

void sub_10007F24C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (id)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      swift_getKeyPath();
      _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v4)
      {
        [v4 filterManager:v3 didToggleFilter:v0];
        swift_unknownObjectRelease();
      }
      swift_getKeyPath();
      _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
    }
    else
    {
    }
  }
}

id sub_10007F38C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilter();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAFilter()
{
  return self;
}

const char *sub_10007F458()
{
  return "active";
}

id sub_10007F464@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 active];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10007F498(unsigned __int8 *a1, id *a2)
{
  return [*a2 setActive:*a1];
}

id sub_10007F4AC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = a1;
  id v10 = &v4[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title];
  *id v10 = a2;
  v10[1] = a3;
  id v11 = *(void **)&v4[v9];
  *(void *)&v4[v9] = a4;
  id v12 = a1;
  id v13 = a4;

  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for FBAFilter();
  return [super init];
}

uint64_t sub_10007F67C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
}

void *sub_10007F6E0(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = a1;
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  id v4 = result;
  if (a1)
  {
    if (!result) {
      return result;
    }
    id v5 = &selRef_filterManagerDidActivate_;
  }
  else
  {
    if (!result) {
      return result;
    }
    id v5 = &selRef_filterManagerDidDeactivate_;
  }
  if ([result respondsToSelector:*v5]) {
    [v4 *v5:v1];
  }

  return (void *)swift_unknownObjectRelease();
}

void *sub_10007F7AC()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (void *)swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain_n();
  id result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = (char *)*(id *)(v1 + 8 * v4 + 32);
      }
      id v6 = v5;
      ++v4;
      unint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100083B38(v7);
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

Class sub_10007F904(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  type metadata accessor for FBAFilter();
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

void *sub_10007F970()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)result;
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (void *)swift_bridgeObjectRetain_n();
  }
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        NSArray v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        NSArray v5 = (char *)*(id *)(v1 + 8 * v4 + 32);
      }
      id v6 = v5;
      ++v4;
      unint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100083B38(v7);
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
  }
  id result = (void *)swift_bridgeObjectRelease_n();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_12;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  id result = (void *)swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_21;
  }
LABEL_12:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      id v10 = (id)_swiftEmptyArrayStorage[i + 4];
      if ([v10 active])
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
  return result;
}

id sub_10007FBD4()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if (v1 >> 62) {
    goto LABEL_63;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    unint64_t v3 = 0;
    uint64_t v30 = v2;
    unint64_t v31 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v28 = v1 + 32;
    while (1)
    {
      if (v31)
      {
        id v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)(v29 + 16)) {
          goto LABEL_62;
        }
        id v6 = (char *)*(id *)(v28 + 8 * v3);
      }
      NSArray v5 = v6;
      if (__OFADD__(v3++, 1)) {
        break;
      }
      unint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters;
      unint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v32 = v5;
        if (!v9)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_44;
          }
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v32 = v5;
        if (!v9) {
          goto LABEL_27;
        }
      }
      if (v9 < 1) {
        goto LABEL_59;
      }
      for (uint64_t i = 0; i != v9; ++i)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v11 = *(id *)(v8 + 8 * i + 32);
        }
        id v12 = v11;
        if (objc_msgSend(v11, "active", v28))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      NSArray v5 = v32;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_44;
      }
LABEL_28:
      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
      {
        uint64_t v13 = _swiftEmptyArrayStorage[2];
        goto LABEL_30;
      }
LABEL_44:
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
LABEL_30:
      swift_release();
      if (v13)
      {
        uint64_t v14 = *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType];
        unint64_t v15 = *(void *)&v5[v1];
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
          if (!v16) {
            goto LABEL_46;
          }
LABEL_33:
          if (v16 < 1) {
            goto LABEL_60;
          }
          for (uint64_t j = 0; j != v16; ++j)
          {
            if ((v15 & 0xC000000000000001) != 0) {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = *(id *)(v15 + 8 * j + 32);
            }
            objc_super v19 = v18;
            if (objc_msgSend(v18, "active", v28))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              unint64_t v1 = _swiftEmptyArrayStorage[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_55;
          }
LABEL_47:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
            goto LABEL_55;
          }
          uint64_t v20 = _swiftEmptyArrayStorage[2];
          if (!v20)
          {
LABEL_4:
            swift_release();
            unint64_t v1 = (unint64_t)objc_allocWithZone((Class)NSCompoundPredicate);
            sub_1000815E0();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [(id)v1 initWithType:v14 subpredicates:isa];

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            NSArray v5 = v32;
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v16) {
            goto LABEL_33;
          }
LABEL_46:
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0) {
            goto LABEL_47;
          }
LABEL_55:
          swift_bridgeObjectRetain();
          uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          if (!v20) {
            goto LABEL_4;
          }
        }
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v20 < 0) {
          goto LABEL_61;
        }
        uint64_t v21 = 0;
        do
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
            double v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            double v22 = (char *)(id)_swiftEmptyArrayStorage[v21 + 4];
          }
          double v23 = v22;
          ++v21;
          id v24 = *(id *)&v22[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v20 != v21);
        goto LABEL_4;
      }
LABEL_7:

      if (v3 == v30) {
        goto LABEL_64;
      }
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_64:
  swift_bridgeObjectRelease();
  sub_1000815E0();
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [self andPredicateWithSubpredicates:v25];

  return v26;
}

uint64_t sub_10008028C()
{
  int64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v0 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
    }
    else {
      uint64_t v0 = (void *)(v7 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain_n();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  id v10 = _swiftEmptyArrayStorage;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v2 = 0;
    NSArray v5 = (char **)(v7 & 0xC000000000000001);
    uint64_t v0 = _swiftEmptyArrayStorage;
    unint64_t v6 = (unint64_t)&OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters;
    do
    {
      if (v5) {
        id v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = (char *)*(id *)(v7 + 8 * v2 + 32);
      }
      unint64_t v3 = v11;
      ++v2;
      unint64_t v4 = *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100083B38(v4);
      swift_bridgeObjectRelease();
    }
    while (v8 != v2);
  }
  else
  {
    uint64_t v0 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n();
  NSString v47 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_13:
      if (v7 >= 1)
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          id v13 = (id)_swiftEmptyArrayStorage[i + 4];
          if ([v13 active])
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v0 = _swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
          goto LABEL_30;
        }
        goto LABEL_27;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      sub_100086D3C(v9 > 1, v4, 1);
      double v23 = v47;
LABEL_37:
      v23[2] = v4;
      id v37 = &v23[2 * v6];
      v37[4] = v2;
      v37[5] = v3;
      if (v7 != 1)
      {
        if (v10) {
          id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v38 = (id)v0[5];
        }
        uint64_t v39 = v38;
        id v40 = [v38 v5[123]];
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        unint64_t v45 = v23[2];
        unint64_t v44 = v23[3];
        if (v45 >= v44 >> 1) {
          sub_100086D3C(v44 > 1, v45 + 1, 1);
        }
        v23[2] = v45 + 1;
        int v46 = &v23[2 * v45];
        v46[4] = v41;
        v46[5] = v43;
      }
      swift_release();
      sub_10004DE60((uint64_t *)&unk_1001238D0);
      sub_100081620();
      uint64_t v22 = BidirectionalCollection<>.joined(separator:)();
      goto LABEL_45;
    }
  }
  else
  {
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
    int64_t v7 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v0 = _swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
LABEL_27:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    int64_t v7 = _swiftEmptyArrayStorage[2];
    if (v7 <= 2) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  int64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v7 <= 2)
  {
LABEL_31:
    if (v7 < 1)
    {
      swift_release();
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v27 = v26;
      id v28 = [self mainBundle];
      v49._object = (void *)0xE000000000000000;
      v29._object = (void *)0x80000001000E3AF0;
      v29._uint64_t countAndFlagsBits = 0xD000000000000012;
      v30.value._uint64_t countAndFlagsBits = v25;
      v30.value._object = v27;
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      v49._uint64_t countAndFlagsBits = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v49)._countAndFlagsBits;
      swift_bridgeObjectRelease();

      return countAndFlagsBits;
    }
    sub_100086D3C(0, v7, 0);
    double v23 = _swiftEmptyArrayStorage;
    id v10 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = (id)_swiftEmptyArrayStorage[4];
    }
    uint64_t v34 = v24;
    NSArray v5 = &selRef_sortDescriptorWithKey_ascending_;
    id v35 = [v24 title];
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v3 = v36;

    NSString v47 = _swiftEmptyArrayStorage;
    unint64_t v6 = _swiftEmptyArrayStorage[2];
    unint64_t v9 = _swiftEmptyArrayStorage[3];
    unint64_t v4 = v6 + 1;
    if (v6 < v9 >> 1) {
      goto LABEL_37;
    }
    goto LABEL_48;
  }
LABEL_29:
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  id v17 = [self mainBundle];
  v48._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0x65746C6946207525;
  v18._object = (void *)0xEA00000000007372;
  v19.value._uint64_t countAndFlagsBits = v14;
  v19.value._object = v16;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v48._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v48);
  swift_bridgeObjectRelease();

  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1000D86F0;
  swift_release();
  *(void *)(v21 + 56) = &type metadata for Int;
  *(void *)(v21 + 64) = &protocol witness table for Int;
  *(void *)(v21 + 32) = v7;
  uint64_t v22 = String.init(format:_:)();
LABEL_45:
  swift_bridgeObjectRelease();
  return v22;
}

char *sub_10008080C(uint64_t a1)
{
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups] = a1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FBAFilterManager();
  unint64_t v3 = (char *)[super init];
  unint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    id result = v3;
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    return v3;
  }
  swift_bridgeObjectRetain_n();
  id v10 = v3;
  id result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      unint64_t v9 = v8;
      swift_unknownObjectWeakAssign();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1000809A0()
{
  unint64_t v1 = IndexPath.section.getter();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v1 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v3 = (char *)*(id *)(v2 + 8 * v1 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  unint64_t v4 = IndexPath.item.getter();
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain();

  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_13:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 8 * v4 + 32);
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

void sub_100080BAC()
{
  uint64_t v1 = v0;
  unint64_t v2 = IndexPath.section.getter();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v4 = (char *)*(id *)(v3 + 8 * v2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  unint64_t v5 = IndexPath.item.getter();
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  swift_bridgeObjectRetain();

  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v6 + 8 * v5 + 32);
      goto LABEL_9;
    }
    __break(1u);
    return;
  }
LABEL_16:
  id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
  id v8 = v7;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
  [v8 setActive:[v8 active] ^ 1];
  swift_getKeyPath();
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong filterManager:v1 didToggleFilter:v8];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void *sub_100080D68@<X0>(void *a1@<X8>)
{
  id result = sub_10007F970();
  *a1 = result;
  return result;
}

void sub_100080E7C(unint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_filterGroups);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = v1;
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = v1;
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v6 = (char *)*(id *)(v3 + 8 * v5 + 32);
    }
    id v7 = v6;
    ++v5;
    unint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100083B38(v8);
    swift_bridgeObjectRelease();
  }
  while (v4 != v5);
LABEL_10:
  swift_bridgeObjectRelease_n();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v9 = (id)_swiftEmptyArrayStorage[a1 + 4];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
  [v9 setActive:[v9 active] ^ 1];
  swift_getKeyPath();
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong filterManager:v11 didToggleFilter:v9];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1000810F4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
  uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active;
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = v3 ^ 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = Strong;
  if (v3)
  {
    if (!Strong) {
      goto LABEL_9;
    }
    uint64_t v6 = &selRef_filterManagerDidDeactivate_;
  }
  else
  {
    if (!Strong) {
      goto LABEL_9;
    }
    uint64_t v6 = &selRef_filterManagerDidActivate_;
  }
  if ([Strong respondsToSelector:*v6]) {
    [v5 *v6 v1];
  }
  swift_unknownObjectRelease();
LABEL_9:
  swift_getKeyPath();
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
  sub_1000813EC();
  return *(unsigned __int8 *)(v1 + v2);
}

void sub_10008121C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      if ([Strong respondsToSelector:"filterManagerDidActivate:"]) {
        [v2 filterManagerDidActivate:v0];
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100081304()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active) = 0;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      if ([Strong respondsToSelector:"filterManagerDidDeactivate:"]) {
        [v2 filterManagerDidDeactivate:v0];
      }
      swift_unknownObjectRelease();
    }
  }
}

void *sub_1000813EC()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  char v3 = result;
  if (v1 == 1)
  {
    if (!result) {
      return result;
    }
    uint64_t v4 = &selRef_filterManagerDidActivate_;
  }
  else
  {
    if (!result) {
      return result;
    }
    uint64_t v4 = &selRef_filterManagerDidDeactivate_;
  }
  if ([result respondsToSelector:*v4]) {
    [v3 *v4 v0];
  }

  return (void *)swift_unknownObjectRelease();
}

id sub_1000814D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFilterManager();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAFilterManager()
{
  return self;
}

void *sub_100081574@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC18Feedback_Assistant16FBAFilterManager_active);
  return result;
}

void *sub_10008158C(char *a1)
{
  return sub_10007F6E0(*a1);
}

void *sub_1000815B4@<X0>(void *a1@<X8>)
{
  id result = sub_10007F970();
  *a1 = result;
  return result;
}

unint64_t sub_1000815E0()
{
  unint64_t result = qword_100123348;
  if (!qword_100123348)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100123348);
  }
  return result;
}

unint64_t sub_100081620()
{
  unint64_t result = qword_100123350;
  if (!qword_100123350)
  {
    sub_10004DF00((uint64_t *)&unk_1001238D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123350);
  }
  return result;
}

uint64_t sub_10008167C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10004DE60(&qword_100123398);
    objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_10007DC98(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_10007DC98(v35, v36);
    sub_10007DC98(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_10007DC98(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_100060ED0();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_100081A3C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10004DE60(&qword_100123390);
    objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  id v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Swift.AnyObject + 8;
  unint64_t v11 = (char *)&type metadata for Any + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_100060ED0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    BOOL v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_10007DC98(v6, v7);
    sub_10007DC98(v7, v40);
    sub_10007DC98(v40, &v38);
    unint64_t result = sub_100073E94(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      int64_t v15 = v11;
      int64_t v16 = v10;
      id v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      unint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      id v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_1000538B0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_10007DC98(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_10007DC98(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_100081DA4(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2 >> 62;
  uint64_t v4 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_45;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v5) {
        return v4;
      }
      long long v38 = _swiftEmptyArrayStorage;
      int64_t v8 = v5 & ~(v5 >> 63);
      sub_100086D3C(0, v8, 0);
      uint64_t v9 = a1;
      uint64_t v4 = _swiftEmptyArrayStorage;
      if (!v3)
      {
        if ((v5 & 0x8000000000000000) == 0)
        {
          uint64_t v10 = 0;
          goto LABEL_14;
        }
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
      }
      if (v3 == 1) {
        uint64_t v10 = (int)a1;
      }
      else {
        uint64_t v10 = *(void *)(a1 + 16);
      }
      if (v5 < 0) {
        goto LABEL_44;
      }
      while (1)
      {
LABEL_14:
        if (!v8)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        int64_t v30 = v8;
        if (v3)
        {
          if (v3 == 1)
          {
            if (v10 < (int)a1 || v10 >= a1 >> 32) {
              goto LABEL_38;
            }
            unint64_t v11 = v4;
            uint64_t v12 = v2;
            uint64_t v13 = __DataStorage._bytes.getter();
            if (!v13) {
              goto LABEL_48;
            }
            uint64_t v14 = v13;
            uint64_t v15 = __DataStorage._offset.getter();
            uint64_t v16 = v10 - v15;
            if (__OFSUB__(v10, v15)) {
              goto LABEL_41;
            }
          }
          else
          {
            if (v10 < *(void *)(v9 + 16)) {
              goto LABEL_40;
            }
            if (v10 >= *(void *)(v9 + 24)) {
              goto LABEL_42;
            }
            unint64_t v11 = v4;
            uint64_t v12 = v2;
            uint64_t v18 = __DataStorage._bytes.getter();
            if (!v18) {
              goto LABEL_49;
            }
            uint64_t v14 = v18;
            uint64_t v19 = __DataStorage._offset.getter();
            uint64_t v16 = v10 - v19;
            if (__OFSUB__(v10, v19)) {
              goto LABEL_43;
            }
          }
          char v17 = *(unsigned char *)(v14 + v16);
          uint64_t v2 = v12;
          uint64_t v9 = a1;
        }
        else
        {
          if (v10 >= BYTE6(a2)) {
            goto LABEL_39;
          }
          unint64_t v11 = v4;
          char v31 = v9;
          int v32 = *(_DWORD *)((char *)&a1 + 1);
          __int16 v33 = *(_WORD *)((char *)&a1 + 5);
          char v34 = HIBYTE(a1);
          int v35 = a2;
          __int16 v36 = WORD2(a2);
          char v17 = *(&v31 + v10);
        }
        char v31 = v17;
        sub_100082444(&v31, v37);
        if (v2) {
          break;
        }
        uint64_t v20 = v9;
        unint64_t v21 = v3;
        uint64_t v23 = v37[0];
        uint64_t v22 = v37[1];
        uint64_t v4 = v11;
        long long v38 = v11;
        unint64_t v25 = v11[2];
        unint64_t v24 = v11[3];
        if (v25 >= v24 >> 1)
        {
          sub_100086D3C(v24 > 1, v25 + 1, 1);
          uint64_t v20 = a1;
          uint64_t v4 = v38;
        }
        _DWORD v4[2] = v25 + 1;
        char v26 = &v4[2 * v25];
        v26[4] = v23;
        v26[5] = v22;
        ++v10;
        int64_t v8 = v30 - 1;
        --v5;
        unint64_t v3 = v21;
        uint64_t v9 = v20;
        if (!v5) {
          return v4;
        }
      }
      swift_release();
      return v4;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_46;
    case 3uLL:
      return v4;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

id sub_100082210()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for FBANotificationManager()) init];
  qword_100125F58 = (uint64_t)result;
  return result;
}

uint64_t sub_1000822EC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_100081DA4(a1, a2);
  sub_10004DE60((uint64_t *)&unk_1001238D0);
  sub_100081620();
  uint64_t v4 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant22FBANotificationManager_apnsToken);
  *uint64_t v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  sub_10004DE60((uint64_t *)&unk_1001238F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000D86F0;
  strcpy((char *)v15, "APNS Token: ");
  BYTE5(v15[1]) = 0;
  HIWORD(v15[1]) = -5120;
  if (v7[1])
  {
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)v7[1];
  }
  else
  {
    uint64_t v10 = (void *)0xE800000000000000;
    uint64_t v9 = 0x6E656B6F74206F6ELL;
  }
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v15[0];
  uint64_t v13 = v15[1];
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 32) = v12;
  *(void *)(v8 + 40) = v13;
  debugPrint(_:separator:terminator:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100082444@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000D86F0;
  *(void *)(v4 + 56) = &type metadata for UInt8;
  *(void *)(v4 + 64) = &protocol witness table for UInt8;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t result = String.init(format:_:)();
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_10008255C(void *a1, void *a2)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant22FBANotificationManager_apnsToken + 8))
  {
    sub_100061CB4();
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    [ObjCClassFromMetadata platform];
    sub_10004DE60(&qword_100123388);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000D8AE0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v7;
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 64) = v9;
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = v10;
    *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 88) = v11;
    [a1 integerValue];
    *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
    unint64_t v12 = sub_100083688(inited);
    sub_100081A3C(v12);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unint64_t v21 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
    uint64_t v22 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1000828A8;
    uint64_t v20 = &unk_1000F5CA0;
    uint64_t v14 = _Block_copy(&aBlock);
    unint64_t v21 = FBAMailboxesViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:);
    uint64_t v22 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100082930;
    uint64_t v20 = &unk_1000F5CC8;
    uint64_t v15 = _Block_copy(&aBlock);
    [a2 registerAPNSWithRequestDictionary:isa success:v14 error:v15];
    _Block_release(v15);
    _Block_release(v14);
  }
  else
  {
    sub_10004DE60((uint64_t *)&unk_1001238F0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1000D86F0;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 32) = 0xD000000000000043;
    *(void *)(v16 + 40) = 0x80000001000E3BB0;
    debugPrint(_:separator:terminator:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000828A8(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_1000537FC(v5, v7);

  return swift_release();
}

void sub_100082930(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_100082A14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBANotificationManager();
  return [super dealloc];
}

uint64_t type metadata accessor for FBANotificationManager()
{
  return self;
}

uint64_t sub_100082A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100082A90()
{
  return swift_release();
}

void sub_100082AA0()
{
  BYTE5(qword_1001233A8) = 0;
  HIWORD(qword_1001233A8) = -5120;
}

void sub_100082ACC()
{
  qword_1001233B0 = 0x64695F6D726F66;
  qword_1001233B8 = 0xE700000000000000;
}

void sub_100082AF0()
{
  qword_1001233C0 = 0x73726577736E61;
  qword_1001233C8 = 0xE700000000000000;
}

void sub_100082B14()
{
  qword_1001233D0 = 0x69747061635F7369;
  qword_1001233D8 = 0xEA00000000006576;
}

id FBACustomBehavior.__allocating_init(dictionary:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return FBACustomBehavior.init(dictionary:)(a1);
}

id FBACustomBehavior.init(dictionary:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible] = 0;
  uint64_t v5 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload] = 0;
  uint64_t v33 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId;
  *(void *)&v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId] = 0;
  uint64_t v6 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_answers;
  *(void *)&v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_answers] = 0;
  uint64_t v7 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft] = 0;
  uint64_t v8 = OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive;
  v2[OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive] = 0;
  uint64_t v9 = qword_100121E10;
  NSString v10 = v2;
  if (v9 == -1)
  {
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      goto LABEL_8;
    }
  }
  else
  {
    swift_once();
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      goto LABEL_8;
    }
  }
  uint64_t v12 = qword_1001233A8;
  uint64_t v13 = qword_1001233A0;
  swift_bridgeObjectRetain();
  sub_100073E94(v13, v12);
  if (v14)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast())
    {
      LOBYTE(v11) = v34;
      goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v11) = 0;
LABEL_8:
  v2[v4] = v11;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    sub_100073E94(0xD000000000000010, 0x80000001000E3C20);
    if ((v16 & 1) != 0 && (swift_unknownObjectRetain(), swift_dynamicCast())) {
      LOBYTE(v15) = v34;
    }
    else {
      LOBYTE(v15) = 0;
    }
  }
  v2[v5] = v15;
  if (qword_100121E20 == -1)
  {
    uint64_t v17 = *(void *)(a1 + 16);
    if (!v17) {
      goto LABEL_20;
    }
  }
  else
  {
    swift_once();
    uint64_t v17 = *(void *)(a1 + 16);
    if (!v17) {
      goto LABEL_20;
    }
  }
  uint64_t v18 = qword_1001233C8;
  uint64_t v19 = qword_1001233C0;
  swift_bridgeObjectRetain();
  sub_100073E94(v19, v18);
  if (v20)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    sub_10004DE60(&qword_100123410);
    if (swift_dynamicCast())
    {
      uint64_t v17 = v34;
      goto LABEL_20;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = 0;
LABEL_20:
  *(void *)&v2[v6] = v17;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    sub_100073E94(0xD000000000000010, 0x80000001000E3C40);
    if ((v22 & 1) != 0 && (swift_unknownObjectRetain(), swift_dynamicCast())) {
      LOBYTE(v21) = v34;
    }
    else {
      LOBYTE(v21) = 0;
    }
  }
  v2[v7] = v21;
  if (qword_100121E28 == -1)
  {
    uint64_t v23 = *(void *)(a1 + 16);
    if (!v23) {
      goto LABEL_32;
    }
  }
  else
  {
    swift_once();
    uint64_t v23 = *(void *)(a1 + 16);
    if (!v23) {
      goto LABEL_32;
    }
  }
  uint64_t v24 = qword_1001233D8;
  uint64_t v25 = qword_1001233D0;
  swift_bridgeObjectRetain();
  sub_100073E94(v25, v24);
  if (v26)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast())
    {
      LOBYTE(v23) = v34;
      goto LABEL_32;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v23) = 0;
LABEL_32:
  v2[v8] = v23;
  if (qword_100121E18 == -1)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_38:
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
  }
  else
  {
    swift_once();
    if (!*(void *)(a1 + 16)) {
      goto LABEL_38;
    }
  }
  uint64_t v27 = qword_1001233B8;
  uint64_t v28 = qword_1001233B0;
  swift_bridgeObjectRetain();
  sub_100073E94(v28, v27);
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_39:

    goto LABEL_40;
  }
  id v30 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v34];
  char v31 = *(void **)&v2[v33];
  *(void *)&v2[v33] = v30;

LABEL_40:
  v35.receiver = v10;
  v35.super_class = (Class)type metadata accessor for FBACustomBehavior();
  return [super init];
}

uint64_t FBACustomBehavior.description.getter()
{
  _StringGuts.grow(_:)(109);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001000E3C60;
  String.append(_:)(v1);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive)) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_isCaptive)) {
    unint64_t v3 = 0xE400000000000000;
  }
  else {
    unint64_t v3 = 0xE500000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x736956656B616D20;
  v5._object = (void *)0xEE00203A656C6269;
  String.append(_:)(v5);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible)) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_makeVisible)) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001000E3C80;
  v9._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v9);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload)) {
    uint64_t v10 = 1702195828;
  }
  else {
    uint64_t v10 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_notifyOnUpload)) {
    unint64_t v11 = 0xE400000000000000;
  }
  else {
    unint64_t v11 = 0xE500000000000000;
  }
  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x3A64496D726F6620;
  v13._object = (void *)0xE900000000000020;
  String.append(_:)(v13);
  id v14 = *(id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_formId);
  sub_10004DE60(&qword_100123018);
  v15._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x80000001000E3CA0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v16);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft)) {
    uint64_t v17 = 1702195828;
  }
  else {
    uint64_t v17 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant17FBACustomBehavior_launchNewDraft)) {
    unint64_t v18 = 0xE400000000000000;
  }
  else {
    unint64_t v18 = 0xE500000000000000;
  }
  unint64_t v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0x73726577736E6120;
  v20._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v20);
  swift_bridgeObjectRetain();
  sub_10004DE60(&qword_100123418);
  v21._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  return 0;
}

void FBACustomBehavior.init()()
{
}

id FBACustomBehavior.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBACustomBehavior();
  [super dealloc];
}

uint64_t type metadata accessor for FBACustomBehavior()
{
  return self;
}

unint64_t sub_100083660(uint64_t a1)
{
  return sub_1000838B0(a1, &qword_1001234C8, &qword_1001234D0, (uint64_t (*)(uint64_t))sub_100073F0C);
}

unint64_t sub_100083688(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004DE60(&qword_1001234C0);
  objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_100073E94(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000837A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004DE60(&qword_1001234B8);
  objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_100073F0C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000838B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004DE60(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100052400(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10007DC98(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000839E0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1000867B4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100083B38(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10008AD14(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_100083D04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000868C4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100083FA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_questionGroupsStack];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v4 = (void *)Strong;
  sub_1000848C4();

  int64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v5) {
    goto LABEL_77;
  }
  unint64_t v6 = v5;
  [v5 setSpacing:20.0];

  uint64_t v7 = OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_contentItem;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAResponseItemDetailCell_contentItem];
  if (!v8)
  {
    id v18 = [self appHandle];
    if (v18)
    {
      long long v19 = v18;
      static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)();

      goto LABEL_51;
    }
    goto LABEL_80;
  }
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  unint64_t v10 = (void *)v9;
  id v67 = v8;
  id v11 = [v67 displayTitle];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  uint64_t v15 = *(void **)&v1[v7];
  if (v15)
  {
    id v16 = [v15 feedback];
    id v17 = [v16 status];
  }
  else
  {
    id v17 = 0;
  }
  sub_100084A04(v12, v14, v17, (char)[v67 isClosedFeedback]);

  swift_bridgeObjectRelease();
  id v20 = [v67 formResponseStub];
  if (!v20)
  {

    goto LABEL_51;
  }
  Swift::String v21 = v20;
  id v22 = [v20 questionGroupStubs];
  if (!v22)
  {

    goto LABEL_51;
  }
  uint64_t v23 = v22;
  uint64_t v65 = v21;
  sub_100056B94(0, &qword_100123480);
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v68 = v24;
  uint64_t v66 = v1;
  if (v24 >> 62) {
    goto LABEL_47;
  }
  uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25)
  {
    unint64_t v26 = 0;
    uint64_t v70 = v2;
    uint64_t v69 = v25;
    while (1)
    {
      if ((v68 & 0xC000000000000001) != 0)
      {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v26 >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_46;
        }
        id v27 = *(id *)(v68 + 32 + 8 * v26);
      }
      uint64_t v28 = v27;
      if (__OFADD__(v26++, 1)) {
        break;
      }
      uint64_t v30 = swift_unknownObjectWeakLoadStrong();
      if (!v30) {
        goto LABEL_74;
      }
      char v31 = (void *)v30;
      id v32 = [objc_allocWithZone((Class)UIStackView) init:v65];
      [v32 setAxis:1];
      [v32 setSpacing:20.0];
      id v33 = [v28 title];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10008502C();
      swift_bridgeObjectRelease();
      id v34 = [v28 questionAnswerPairs];
      sub_100056B94(0, &qword_100123488);
      unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v71 = v28;
      if (v35 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v2)
        {
LABEL_23:
          if (v2 < 1) {
            goto LABEL_45;
          }
          uint64_t v36 = 0;
          do
          {
            if ((v35 & 0xC000000000000001) != 0) {
              id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v37 = *(id *)(v35 + 8 * v36 + 32);
            }
            long long v38 = v37;
            ++v36;
            id v39 = sub_10008558C(v37);
            [v32 addArrangedSubview:v39];
          }
          while (v2 != v36);
        }
      }
      else
      {
        uint64_t v2 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v2) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      [v31 addArrangedSubview:v32];

      uint64_t v2 = v70;
      uint64_t v40 = swift_unknownObjectWeakLoadStrong();
      if (!v40) {
        goto LABEL_75;
      }
      uint64_t v41 = (void *)v40;
      id v42 = [objc_allocWithZone((Class)UIView) init];
      [v42 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v43 = [v42 heightAnchor];
      id v44 = [v43 constraintEqualToConstant:0.5];

      [v44 setActive:1];
      id v45 = [self separatorColor];
      [v42 setBackgroundColor:v45];

      [v41 addArrangedSubview:v42];
      [v41 setCustomSpacing:v42 afterView:8.0];

      if (v26 == v69) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_32:
  swift_bridgeObjectRelease();
  int v46 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v46) {
    goto LABEL_81;
  }
  NSString v47 = v46;
  id v48 = [v46 arrangedSubviews];

  sub_100056B94(0, (unint64_t *)&qword_100122D00);
  unint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v1 = v66;
  unint64_t v50 = (unint64_t)v67;
  if (!(v49 >> 62))
  {
    uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v51) {
      goto LABEL_35;
    }
LABEL_50:

    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v51) {
    goto LABEL_50;
  }
LABEL_35:
  unint64_t v52 = v51 - 1;
  if (__OFSUB__(v51, 1)) {
    goto LABEL_70;
  }
  if ((v49 & 0xC000000000000001) != 0) {
    goto LABEL_71;
  }
  if ((v52 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_73;
  }
  if (v52 >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  for (id i = *(id *)(v49 + 8 * v52 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v54 = i;
    swift_bridgeObjectRelease();
    uint64_t v55 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v55) {
      break;
    }
    double v56 = v55;
    [v55 removeArrangedSubview:v54];

    [v54 removeFromSuperview];
LABEL_51:
    double v57 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v57) {
      goto LABEL_78;
    }
    uint64_t v58 = v57;
    id v59 = [v57 arrangedSubviews];

    sub_100056B94(0, (unint64_t *)&qword_100122D00);
    unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v60) {
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v60 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v60) {
        goto LABEL_66;
      }
    }
    if (v60 >= 1)
    {
      for (uint64_t j = 0; j != v60; ++j)
      {
        if ((v50 & 0xC000000000000001) != 0) {
          id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v62 = *(id *)(v50 + 8 * j + 32);
        }
        uint64_t v63 = v62;
        self;
        if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
LABEL_66:
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_100085DEC((unint64_t)_swiftEmptyArrayStorage);
      swift_release();
      sub_100083D04(v64);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v1 setAccessibilityElements:isa];

      return;
    }
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    ;
  }
LABEL_82:
  __break(1u);
}

void sub_1000848C4()
{
  id v1 = [v0 arrangedSubviews];
  sub_100056B94(0, (unint64_t *)&qword_100122D00);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
    }
    unint64_t v6 = v5;
    ++v4;
    [v0 removeArrangedSubview:v5];
    [v6 removeFromSuperview];
  }
  while (v3 != v4);
LABEL_10:

  swift_bridgeObjectRelease();
}

void sub_100084A04(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v7 = [objc_allocWithZone((Class)UILabel) init];
  [v7 setNumberOfLines:0];
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setText:v8];

  id v9 = sub_10008537C();
  [v7 setFont:v9];

  [v4 addArrangedSubview:v7];
  if ((a4 & 1) == 0)
  {
    id v25 = v7;
    if (!a3) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = v7;
  id v25 = [v10 init];
  [v25 setNumberOfLines:0];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  id v15 = [self mainBundle];
  v27._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001000E3F40;
  v16._uint64_t countAndFlagsBits = 0xD000000000000015;
  v17.value._uint64_t countAndFlagsBits = v12;
  v17.value._object = v14;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v27);
  swift_bridgeObjectRelease();

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setText:v19];

  id v20 = [self secondaryLabelColor];
  [v25 setTextColor:v20];

  [v4 addArrangedSubview:v25];
  [v4 setCustomSpacing:v11 afterView:5.0];

  if (a3)
  {
LABEL_5:
    id v21 = objc_allocWithZone((Class)UILabel);
    id v22 = a3;
    id v23 = [v21 init];
    [v23 setNumberOfLines:0];
    id v24 = [v22 attributedStringRepresentation];
    [v23 setAttributedText:v24];

    [v4 addArrangedSubview:v23];
    [v4 setCustomSpacing:v25 afterView:5.0];

    id v25 = v23;
  }
LABEL_6:
  sub_100084D20();
}

void sub_100084D20()
{
  id v4 = [objc_allocWithZone((Class)UIView) init];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [v4 heightAnchor];
  id v2 = [v1 constraintEqualToConstant:0.5];

  [v2 setActive:1];
  id v3 = [self separatorColor];
  [v4 setBackgroundColor:v3];

  [v0 addArrangedSubview:v4];
  [v0 setCustomSpacing:v4 afterView:8.0];
}

void sub_100084E48()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FBAResponseItemDetailCell();
  [super layoutSubviews];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_15;
  }
  id v2 = Strong;
  [Strong sizeToFit];

  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v4 = v3;
  id v5 = [v3 arrangedSubviews];

  sub_100056B94(0, (unint64_t *)&qword_100122D00);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_12;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    id v10 = v9;
    [v9 layoutSubviews];
  }
LABEL_12:
  swift_bridgeObjectRelease();
  id v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    uint64_t v12 = v11;
    [v11 layoutSubviews];

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_10008502C()
{
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setNumberOfLines:0];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v4 setFont:v1];

  String.uppercased()();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v2];

  id v3 = [self secondaryLabelColor];
  [v4 setTextColor:v3];

  [v0 addArrangedSubview:v4];
  [v0 setCustomSpacing:v4 afterView:8.0];
}

id sub_1000852D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAResponseItemDetailCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAResponseItemDetailCell()
{
  return self;
}

id sub_10008537C()
{
  sub_10004DE60(&qword_100123490);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000D86F0;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightBold;
  id v1 = UIFontWeightTrait;
  unint64_t v2 = sub_1000837A4(inited);
  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline];
  sub_10004DE60(&qword_100123498);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000D86F0;
  *(void *)(v4 + 32) = UIFontDescriptorTraitsAttribute;
  *(void *)(v4 + 64) = sub_10004DE60(&qword_1001234A0);
  *(void *)(v4 + 40) = v2;
  id v5 = UIFontDescriptorTraitsAttribute;
  sub_1000838B0(v4, &qword_1001234A8, &qword_1001234B0, (uint64_t (*)(uint64_t))sub_100073F0C);
  type metadata accessor for AttributeName(0);
  sub_1000858C8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 fontDescriptorByAddingAttributes:isa];

  id v8 = [self fontWithDescriptor:v7 size:20.0];
  id v9 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
  id v10 = [v9 scaledFontForFont:v8];

  return v10;
}

id sub_10008558C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UIStackView) init];
  [v2 setAxis:1];
  [v2 setSpacing:3.0];
  id v3 = [objc_allocWithZone((Class)UILabel) init];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setNumberOfLines:0];
  uint64_t v4 = self;
  id v5 = [v4 preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v3 setFont:v5];

  NSString v6 = [a1 questionText];
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v3 setText:v6];

  id v7 = [objc_allocWithZone((Class)UILabel) init];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setNumberOfLines:0];
  id v8 = [v4 preferredFontForTextStyle:UIFontTextStyleBody];
  [v7 setFont:v8];

  id v9 = [a1 answerText];
  if (!v9) {
    goto LABEL_7;
  }
  id v10 = v9;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v11 < 1)
  {

LABEL_7:
    id v12 = [self mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000026;
    v17._object = (void *)0x80000001000E3F10;
    v13._object = (void *)0x80000001000E3EF0;
    v13._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v17);

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setText:v15];

    id v10 = [self secondaryLabelColor];
    [v7 setTextColor:v10];
    goto LABEL_8;
  }
  [v7 setText:v10];
LABEL_8:

  [v2 addArrangedSubview:v3];
  [v2 addArrangedSubview:v7];

  return v2;
}

unint64_t sub_1000858C8()
{
  unint64_t result = qword_100122098;
  if (!qword_100122098)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122098);
  }
  return result;
}

void sub_100085920(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100056B94(0, (unint64_t *)&qword_100122990);
    sub_10008DD38((unint64_t *)&qword_100122998, (unint64_t *)&qword_100122990);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v27;
    uint64_t v26 = v28;
    uint64_t v3 = v29;
    uint64_t v2 = v30;
    unint64_t v4 = v31;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
  }
  uint64_t v23 = v3;
  int64_t v25 = (unint64_t)(v3 + 64) >> 6;
  id v24 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v8 = v2;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_38;
    }
    sub_100056B94(0, (unint64_t *)&qword_100122990);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v32;
    swift_unknownObjectRelease();
    if (!v32) {
      goto LABEL_38;
    }
LABEL_31:
    id v15 = [v11 area:v23];
    if (v15)
    {
      Swift::String v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v24 = sub_1000867B4(0, v24[2] + 1, 1, v24);
      }
      unint64_t v21 = v24[2];
      unint64_t v20 = v24[3];
      if (v21 >= v20 >> 1) {
        id v24 = sub_1000867B4((void *)(v20 > 1), v21 + 1, 1, v24);
      }
      v24[2] = v21 + 1;
      id v22 = &v24[2 * v21];
      void v22[4] = v17;
      v22[5] = v19;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v2 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v12 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v12 >= v25) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v2;
    if (!v13)
    {
      uint64_t v2 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v2);
      if (!v13)
      {
        uint64_t v2 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v2);
        if (!v13)
        {
          uint64_t v2 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v2);
          if (!v13)
          {
            uint64_t v2 = v8 + 5;
            if (v8 + 5 >= v25) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v26 + 8 * v2);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v25 != v14)
              {
                unint64_t v13 = *(void *)(v26 + 8 * v14++);
                if (v13)
                {
                  uint64_t v2 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_100060ED0();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v2 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void *sub_100085CBC(uint64_t a1)
{
  return sub_100085CF8(a1, &qword_100122610);
}

uint64_t sub_100085CD0(unint64_t a1)
{
  return sub_100085E00(a1, (unint64_t *)&qword_100122990);
}

void *sub_100085CE4(uint64_t a1)
{
  return sub_100085CF8(a1, (unint64_t *)&qword_100122C18);
}

void *sub_100085CF8(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = &_swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v8 = &_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = a1 + 32;
    do
    {
      sub_100053854(v6, (uint64_t)&v7);
      sub_100056B94(0, a2);
      swift_dynamicCast();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 32;
      --v3;
    }
    while (v3);
    return v8;
  }
  return result;
}

uint64_t sub_100085DEC(unint64_t a1)
{
  return sub_100085E00(a1, (unint64_t *)&qword_100122D00);
}

uint64_t sub_100085E00(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = &_swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  id v15 = &_swiftEmptyArrayStorage;
  uint64_t result = sub_100086D1C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100056B94(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100086D1C(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = v5[2];
        unint64_t v8 = v5[3];
        if (v9 >= v8 >> 1)
        {
          sub_100086D1C(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v9 + 1;
        sub_10007DC98(v14, &v5[4 * v9 + 4]);
      }
    }
    else
    {
      unint64_t v10 = (id *)(a1 + 32);
      sub_100056B94(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100086D1C(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = v5[2];
        unint64_t v12 = v5[3];
        if (v13 >= v12 >> 1)
        {
          sub_100086D1C(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v13 + 1;
        sub_10007DC98(v14, &v5[4 * v13 + 4]);
        ++v10;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

char *sub_10008629C@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  id v3 = *a1;
  id v4 = [*a1 teamType];
  uint64_t v5 = (id *)&FBKSystemImageNameFilterPersonalTeam;
  if (v4) {
    uint64_t v5 = (id *)&FBKSystemImageNameFilterOtherTeam;
  }
  id v6 = *v5;
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000D86F0;
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000D8AF0;
  *(void *)(inited + 32) = v3;
  unint64_t v18 = inited;
  specialized Array._endMutation()();
  id v9 = v3;
  uint64_t v10 = sub_10008BB04(v18, &qword_100122610, (uint64_t)FBKTeam_ptr, (unint64_t *)&qword_100122618, &qword_100123508);
  swift_bridgeObjectRelease();
  *(void *)(v7 + 56) = sub_10004DE60(&qword_1001234F8);
  *(void *)(v7 + 64) = sub_100052668(&qword_100123500, &qword_1001234F8);
  *(void *)(v7 + 32) = v10;
  id v11 = NSPredicate.init(format:_:)();
  uint64_t result = (char *)[v9 name];
  if (result)
  {
    unint64_t v13 = result;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id v17 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
    uint64_t result = sub_10007EFDC(v11, v14, v16, v6);
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008654C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10004DE60(&qword_100123540);
  uint64_t v10 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10008B964(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1000867B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10004DE60(&qword_100122890);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10008B870(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000868C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10004DE60((uint64_t *)&unk_1001238F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10008BD40(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000869D4(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaSet.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    id v3 = &_swiftEmptyArrayStorage;
  }
  else
  {
    sub_10004DE60((uint64_t *)&unk_100123030);
    id v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10008B070(&v8, v3 + 4, v2, a1);
  uint64_t result = (void *)sub_100060ED0();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_100086AD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10004DE60(&qword_100123538);
  uint64_t v3 = *(void *)(type metadata accessor for FBKFeedbackUpload.BugSession() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      _DWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_10008B390(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_100060ED0();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100086C24(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10004DE60((uint64_t *)&unk_100123030);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10008AD14((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

uint64_t sub_100086D1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100086D5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100086D3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100086ECC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100086D5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10004DE60((uint64_t *)&unk_1001238F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100086ECC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10004DE60(&qword_100122890);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100087038(uint64_t a1)
{
  return sub_100087638(a1, &qword_100123528);
}

uint64_t sub_100087044()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10004DE60(&qword_1001234F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_100087324()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10004DE60(&qword_100123520);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_100087638(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10004DE60(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1000878D8(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_10008795C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_100087AC0((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_100087AC0((uint64_t)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_100087AC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_5:
    unint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v14);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
    if ((v16 & 0x2000000000000000) != 0) {
      uint64_t v19 = HIBYTE(v16) & 0xF;
    }
    else {
      uint64_t v19 = v18;
    }
    if (v19)
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_27:
        swift_retain();
        return sub_100087EA8(v5, a2, v6, a3);
      }
    }
  }
  int64_t v20 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v20 >= v12) {
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v8 + 8 * v20);
  ++v7;
  if (v21) {
    goto LABEL_23;
  }
  int64_t v7 = v20 + 1;
  if (v20 + 1 >= v12) {
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v8 + 8 * v7);
  if (v21) {
    goto LABEL_23;
  }
  int64_t v7 = v20 + 2;
  if (v20 + 2 >= v12) {
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v8 + 8 * v7);
  if (v21)
  {
LABEL_23:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v14 = __clz(__rbit64(v21)) + (v7 << 6);
    goto LABEL_5;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v12) {
    goto LABEL_27;
  }
  unint64_t v21 = *(void *)(v8 + 8 * v22);
  if (v21)
  {
    int64_t v7 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v8 + 8 * v7);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100087C48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10004DE60(&qword_100123528);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100087EA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10004DE60(&qword_1001234F0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100088140(void *a1, void *a2)
{
  return sub_100088538(a1, a2, &qword_100122958, (uint64_t)FBKUploadTask_ptr, &qword_100123528);
}

uint64_t sub_10008815C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *char v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100088B9C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *char v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10008830C(void *a1, void *a2)
{
  char v3 = v2;
  uint64_t v6 = *v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *char v3 = 0x8000000000000000;
    id v24 = a2;
    sub_100088D38((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *char v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;
        if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  BOOL v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_100088538(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = __CocoaSet.member(for:)();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_100056B94(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_100088804(v12, result + 1, a5, a3);
    long long v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_100087638(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = (void *)v27;
      id v30 = v13;
    }
    sub_1000878D8((uint64_t)v13, v29);
    *uint64_t v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = NSObject._rawHashValue(seed:)(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_100056B94(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = static NSObject.== infix(_:_:)();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    id v32 = a2;
    sub_100088A08((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

Swift::Int sub_100088804(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_10004DE60(a3);
    uint64_t v6 = static _SetStorage.convert(_:capacity:)();
    uint64_t v19 = v6;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100056B94(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_100087638(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

void sub_100088A08(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_100087638(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1000892C8(a4);
      goto LABEL_14;
    }
    sub_1000899FC(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100056B94(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

Swift::Int sub_100088B9C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100087044();
  }
  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (Swift::Int)sub_100088F68();
      goto LABEL_22;
    }
    sub_10008946C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    id v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        id v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100088D38(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_100087324();
  }
  else
  {
    if (v8 > v7)
    {
      Swift::Int result = (uint64_t)sub_10008911C();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_10008971C();
  }
  uint64_t v9 = *v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  Swift::Int result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  Swift::Int result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for URLResourceKey(0);
  Swift::Int result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_100088F68()
{
  uint64_t v1 = v0;
  sub_10004DE60(&qword_1001234F0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    Swift::Int result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10008911C()
{
  uint64_t v1 = v0;
  sub_10004DE60(&qword_100123520);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    char v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1000892C8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10004DE60(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10008946C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10004DE60(&qword_1001234F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10008971C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10004DE60(&qword_100123520);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v18 = v17;
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000899FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10004DE60(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  id v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100089C74(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10008B85C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100089CF0(v6);
  return specialized ContiguousArray._endMutation()();
}

Swift::Int sub_100089CF0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_10008A5AC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  Swift::Int v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v133 = (uint64_t)_swiftEmptyArrayStorage;
    v128 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v11 >= 2)
      {
        uint64_t v111 = *v117;
        do
        {
          unint64_t v112 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = *(void *)&v8[16 * v112 + 32];
          uint64_t v114 = *(void *)&v8[16 * v11 + 24];
          sub_10008A730((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(void *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_10008AD00((uint64_t)v8);
          }
          if (v112 >= *((void *)v8 + 2)) {
            goto LABEL_147;
          }
          unint64_t v115 = &v8[16 * v112 + 32];
          *(void *)unint64_t v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v8 + 2);
          if (v11 > v116) {
            goto LABEL_148;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((void *)v8 + 2) = v116 - 1;
          unint64_t v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for FBAFilter();
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v125 = v3;
  uint64_t v129 = *a1;
  while (2)
  {
    Swift::Int v12 = v9 + 1;
    Swift::Int v124 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_45;
    }
    unint64_t v121 = v8;
    unint64_t v13 = *(void **)(v10 + 8 * v9);
    id v14 = *(id *)(v10 + 8 * v12);
    id v15 = v13;
    id v16 = [v14 title];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    id v20 = [v15 title];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23) {
      int v126 = 0;
    }
    else {
      int v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    Swift::Int v12 = v9 + 2;
    Swift::Int v3 = v125;
    if (v9 + 2 >= v125) {
      goto LABEL_36;
    }
    unint64_t v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      Swift::Int v130 = v12;
      unint64_t v27 = *(v25 - 1);
      id v28 = *v25;
      id v29 = v27;
      id v30 = [v28 title];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      id v34 = [v29 title];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if (v126)
        {
          uint64_t v8 = v121;
          Swift::Int v9 = v124;
          Swift::Int v3 = v125;
          uint64_t v10 = v129;
          Swift::Int v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 ^ v26)) {
        break;
      }
LABEL_25:
      Swift::Int v12 = v130 + 1;
      ++v25;
      Swift::Int v3 = v125;
      if (v125 == v130 + 1)
      {
        Swift::Int v12 = v125;
        goto LABEL_35;
      }
    }
    Swift::Int v3 = v125;
    Swift::Int v12 = v130;
LABEL_35:
    Swift::Int v9 = v124;
LABEL_36:
    uint64_t v8 = v121;
    uint64_t v10 = v129;
    if (v126)
    {
LABEL_37:
      if (v12 < v9) {
        goto LABEL_151;
      }
      if (v9 < v12)
      {
        uint64_t v39 = (uint64_t *)(v119 + 8 * v12);
        Swift::Int v40 = v12;
        Swift::Int v41 = v9;
        id v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10) {
              goto LABEL_156;
            }
            uint64_t v43 = *v42;
            *id v42 = *v39;
            *uint64_t v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3) {
      goto LABEL_68;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_149;
    }
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9) {
        goto LABEL_144;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_10008AB48(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v63 = *((void *)v8 + 2);
      unint64_t v62 = *((void *)v8 + 3);
      unint64_t v11 = v63 + 1;
      if (v63 >= v62 >> 1) {
        uint64_t v8 = sub_10008AB48((char *)(v62 > 1), v63 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      uint64_t v64 = v8 + 32;
      uint64_t v65 = &v8[16 * v63 + 32];
      *(void *)uint64_t v65 = v9;
      *((void *)v65 + 1) = v12;
      Swift::Int v132 = v12;
      if (!v63)
      {
        unint64_t v11 = 1;
LABEL_14:
        Swift::Int v3 = v125;
        Swift::Int v9 = v132;
        if (v132 >= v125) {
          goto LABEL_116;
        }
        continue;
      }
      while (1)
      {
        unint64_t v66 = v11 - 1;
        if (v11 >= 4)
        {
          id v71 = &v64[16 * v11];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_133;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_134;
          }
          unint64_t v78 = v11 - 2;
          unint64_t v79 = &v64[16 * v11 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_136;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_139;
          }
          if (v83 >= v74)
          {
            BOOL v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_143;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v95 = *((void *)v8 + 4);
            uint64_t v96 = *((void *)v8 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_99;
          }
          uint64_t v68 = *((void *)v8 + 4);
          uint64_t v67 = *((void *)v8 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_135;
        }
        unint64_t v78 = v11 - 2;
        double v84 = &v64[16 * v11 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_138;
        }
        int v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_141;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_142;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_105:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v89) {
          goto LABEL_137;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_140;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10) {
          goto LABEL_155;
        }
        uint64_t v106 = &v64[16 * v105];
        uint64_t v107 = *(void *)v106;
        id v108 = &v64[16 * v66];
        uint64_t v109 = *((void *)v108 + 1);
        sub_10008A730((void **)(v10 + 8 * *(void *)v106), (id *)(v10 + 8 * *(void *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1) {
          goto LABEL_127;
        }
        if (v109 < v107) {
          goto LABEL_130;
        }
        if (v66 > *((void *)v8 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v64[16 * v105 + 8] = v109;
        unint64_t v110 = *((void *)v8 + 2);
        if (v66 >= v110) {
          goto LABEL_132;
        }
        unint64_t v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((void *)v8 + 2) = v110 - 1;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v120)) {
    goto LABEL_152;
  }
  if (v9 + v120 >= v3) {
    Swift::Int v44 = v3;
  }
  else {
    Swift::Int v44 = v9 + v120;
  }
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      uint64_t v122 = v8;
      Swift::Int v123 = v44;
      uint64_t v45 = v119 + 8 * v12;
      do
      {
        NSString v47 = *(void **)(v10 + 8 * v12);
        uint64_t v127 = v45;
        Swift::Int v131 = v12;
        while (1)
        {
          id v48 = *(void **)v45;
          id v49 = v47;
          id v50 = v48;
          id v51 = [v49 title];
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v54 = v53;

          id v55 = [v50 title];
          uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v10 = v129;
            Swift::Int v46 = v131;
            goto LABEL_56;
          }
          char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v129;
          if ((v60 & 1) == 0) {
            break;
          }
          if (!v129) {
            goto LABEL_154;
          }
          uint64_t v61 = *(void **)v45;
          NSString v47 = *(void **)(v45 + 8);
          *(void *)uint64_t v45 = v47;
          *(void *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          Swift::Int v46 = v131;
          if (v131 == v9) {
            goto LABEL_56;
          }
        }
        Swift::Int v46 = v131;
LABEL_56:
        Swift::Int v12 = v46 + 1;
        uint64_t v45 = v127 + 8;
        Swift::Int v9 = v124;
      }
      while (v12 != v123);
      Swift::Int v12 = v123;
      uint64_t v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008A5AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v25 + 8 * a3);
    uint64_t v7 = v23;
    uint64_t v24 = v4;
    uint64_t v26 = a3;
    while (1)
    {
      uint64_t v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = [v9 title];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      id v15 = [v10 title];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        Swift::Int result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v24 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      uint64_t v5 = v26;
      if ((v20 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v25) {
        break;
      }
      uint64_t v21 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10008A730(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v61 = __src;
  char v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v51 = v4;
    uint64_t v31 = &v4[v13];
    id v59 = v31;
    uint64_t v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_10008AC44((void **)&v61, (const void **)&v60, &v59);
      return 1;
    }
    uint64_t v32 = v6;
    uint64_t v56 = v7;
    while (1)
    {
      uint64_t v52 = v31;
      uint64_t v54 = v6;
      uint64_t v58 = v5;
      id v34 = *--v31;
      uint64_t v33 = v34;
      uint64_t v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = [v36 title];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      id v42 = [v37 title];
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v48 = v58;
      uint64_t v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      uint64_t v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        id *v5 = *v32;
      }
      uint64_t v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        uint64_t v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    id v48 = v58;
    uint64_t v5 = v58 - 1;
LABEL_46:
    uint64_t v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    id v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      id *v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v53 = &v4[v10];
    id v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v57 = v5;
      while (1)
      {
        id v55 = v7;
        uint64_t v14 = v6;
        id v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = [v16 title];
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        id v22 = [v17 title];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        id v28 = v14 + 1;
        id v29 = v55;
        id v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          void *v55 = *v14;
        }
LABEL_26:
        uint64_t v7 = v29 + 1;
        if (v4 < v53)
        {
          uint64_t v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        uint64_t v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      id v29 = v55;
      id v30 = v57;
      if (v55 != v4) {
        void *v55 = *v4;
      }
      char v60 = ++v4;
      id v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10008AB48(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10004DE60(&qword_1001234E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10008AC44(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_10008AD00(uint64_t a1)
{
  return sub_10008AB48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10008AD14(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100052668(&qword_1001234E0, &qword_1001234D8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10004DE60(&qword_1001234D8);
          uint64_t v12 = sub_10008AF38(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for FBAFilter();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void (*sub_10008AF38(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10008AFE8(v6, a2, a3);
  return sub_10008AFA0;
}

void sub_10008AFA0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_10008AFE8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  Swift::Int v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)Swift::Int v3 = v4;
    return sub_10008B068;
  }
  __break(1u);
  return result;
}

void sub_10008B068(id *a1)
{
}

void *sub_10008B070(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  uint64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100056B94(0, &qword_100122610);
    sub_10008DD38((unint64_t *)&qword_100122618, &qword_100122610);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    id v22 = v24;
LABEL_41:
    *id v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    void v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_100056B94(0, &qword_100122610);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      id v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_10008B390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FBKFeedbackUpload.BugSession();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  id v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    int64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10008B6D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_10008B778(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10008B85C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10008B870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008B964(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008BABC(unint64_t a1)
{
  return sub_10008BB04(a1, &qword_100122958, (uint64_t)FBKUploadTask_ptr, (unint64_t *)&unk_100122960, &qword_100123528);
}

uint64_t sub_10008BAE0(unint64_t a1)
{
  return sub_10008BB04(a1, &qword_1001229B0, (uint64_t)FBKBugSession_ptr, &qword_1001229B8, &qword_100123530);
}

uint64_t sub_10008BB04(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100056B94(0, a2);
  sub_10008DD38(a4, a2);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100088538(&v17, v14, a2, a3, a5);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_100088538(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008BCA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10008815C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10008BD40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10008BE38()
{
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  uint64_t v0 = NSPredicate.init(format:_:)();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  id v4 = [self mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000016;
  v12._object = (void *)0xE000000000000000;
  v5._object = (void *)0x80000001000E4280;
  v6.value._uint64_t countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v12);
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)FBKSystemImageNameFilterNeedsAttention;
  id v10 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
  return sub_10007EFDC(v0, v8._countAndFlagsBits, (uint64_t)v8._object, v9);
}

char *sub_10008BF78()
{
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  uint64_t v0 = NSPredicate.init(format:_:)();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  id v4 = [self mainBundle];
  v13._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x4F5F5245544C4946;
  v5._object = (void *)0xEB000000004E4550;
  v6.value._uint64_t countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v13);
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)FBKSystemImageNameFilterOpen;
  id v10 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
  unint64_t v11 = sub_10007EFDC(v0, v8._countAndFlagsBits, (uint64_t)v8._object, v9);
  [v11 setActive:1];
  return v11;
}

void sub_10008C0D0()
{
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000D86F0;
  id v1 = [self sharedInstance];
  id v2 = [v1 currentUser];

  if (v2)
  {
    id v3 = [v2 ID];

    if (v3)
    {
      sub_100056B94(0, (unint64_t *)&qword_100123348);
      *(void *)(v0 + 56) = sub_100056B94(0, &qword_1001229A0);
      *(void *)(v0 + 64) = sub_10008DD38(&qword_100123510, &qword_1001229A0);
      *(void *)(v0 + 32) = v3;
      id v4 = NSPredicate.init(format:_:)();
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v7 = v6;
      id v8 = [self mainBundle];
      v15._object = (void *)0xE000000000000000;
      v9._object = (void *)0x80000001000E4320;
      v9._uint64_t countAndFlagsBits = 0xD000000000000015;
      v10.value._uint64_t countAndFlagsBits = v5;
      v10.value._object = v7;
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v15._uint64_t countAndFlagsBits = 0;
      Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v15);
      swift_bridgeObjectRelease();

      Swift::String v13 = (void *)FBKSystemImageNameFilterAssignedToMe;
      id v14 = objc_allocWithZone((Class)type metadata accessor for FBAFilter());
      [sub_10007EFDC(v4, v12._countAndFlagsBits, (uint64_t)v12._object, v13) setActive:1];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10008C314()
{
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000D86F0;
  id v1 = [self sharedInstance];
  id v2 = [v1 currentUser];

  if (v2)
  {
    id v3 = [v2 ID];

    if (v3)
    {
      sub_100056B94(0, (unint64_t *)&qword_100123348);
      *(void *)(v0 + 56) = sub_100056B94(0, &qword_1001229A0);
      *(void *)(v0 + 64) = sub_10008DD38(&qword_100123510, &qword_1001229A0);
      *(void *)(v0 + 32) = v3;
      id v4 = NSPredicate.init(format:_:)();
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v7 = v6;
      id v8 = [self mainBundle];
      v25._object = (void *)0xE000000000000000;
      v9._object = (void *)0x80000001000E42E0;
      v9._uint64_t countAndFlagsBits = 0xD000000000000017;
      v10.value._uint64_t countAndFlagsBits = v5;
      v10.value._object = v7;
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v25._uint64_t countAndFlagsBits = 0;
      Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v25);
      swift_bridgeObjectRelease();

      Swift::String v13 = (void *)FBKImageNameFilterOriginatedByMe;
      id v14 = self;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v15 = v13;
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v17 = [v14 imageNamed:v16];

      uint64_t v18 = (objc_class *)type metadata accessor for FBAFilter();
      unint64_t v19 = objc_allocWithZone(v18);
      uint64_t v20 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
      *(void *)&v19[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
      v19[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
      swift_unknownObjectWeakInit();
      *(void *)&v19[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v4;
      *(Swift::String *)&v19[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v12;
      uint64_t v21 = *(void **)&v19[v20];
      *(void *)&v19[v20] = v17;
      id v22 = v4;
      id v23 = v17;

      v24.receiver = v19;
      v24.super_class = v18;
      [super init];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10008C634()
{
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  uint64_t v0 = NSPredicate.init(format:_:)();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = v2;
  id v4 = [self mainBundle];
  v23._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x4F5F5245544C4946;
  v5._object = (void *)0xEF44454E41485052;
  v6.value._uint64_t countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v23);
  swift_bridgeObjectRelease();

  Swift::String v9 = (void *)FBKImageNameFilterOrphaned;
  Swift::String_optional v10 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 imageNamed:v12];

  id v14 = (objc_class *)type metadata accessor for FBAFilter();
  id v15 = objc_allocWithZone(v14);
  uint64_t v16 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(void *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v0;
  *(Swift::String *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v8;
  id v17 = *(void **)&v15[v16];
  *(void *)&v15[v16] = v13;
  id v18 = v0;
  id v19 = v13;

  v22.receiver = v15;
  v22.super_class = v14;
  [super init];

  return v20;
}

char *sub_10008C86C(void *a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 currentUser];

  if (!v3)
  {
    if (!a1) {
      goto LABEL_15;
    }
LABEL_6:
    if (![a1 teamType]) {
      goto LABEL_15;
    }
LABEL_7:
    sub_10004DE60((uint64_t *)&unk_100123030);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1000D9100;
    *(void *)(v5 + 32) = sub_10008BE38();
    *(void *)(v5 + 40) = sub_10008BF78();
    sub_10008C0D0();
    *(void *)(v5 + 48) = v6;
    sub_10008C314();
    *(void *)(v5 + 56) = v7;
    *(void *)(v5 + 64) = sub_10008C634();
    uint64_t v49 = v5;
    specialized Array._endMutation()();
    uint64_t v8 = v5;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v11 = v10;
    id v12 = [self mainBundle];
    v50._object = (void *)0xE000000000000000;
    v13._object = (void *)0x80000001000E4220;
    v13._uint64_t countAndFlagsBits = 0xD000000000000011;
    v14.value._uint64_t countAndFlagsBits = v9;
    v14.value._object = v11;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v50._uint64_t countAndFlagsBits = 0;
    Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v50);
    swift_bridgeObjectRelease();

    id v17 = (objc_class *)type metadata accessor for FBAFilterGroup();
    id v18 = (char *)objc_allocWithZone(v17);
    swift_unknownObjectWeakInit();
    id v19 = (Swift::String *)&v18[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    v19->_uint64_t countAndFlagsBits = 0;
    v19->_object = 0;
    *(void *)&v18[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
    *(void *)&v18[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v8;
    Swift::String *v19 = v16;
    swift_bridgeObjectRelease();
    v47.receiver = v18;
    v47.super_class = v17;
    id v20 = [super init];
    unint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v45 = v20;
      uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v22 = (uint64_t)result;
      if (!result) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t result = v20;
      if (!v22) {
        goto LABEL_26;
      }
    }
    if (v22 >= 1)
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        if ((v21 & 0xC000000000000001) != 0) {
          id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v25 = *(id *)(v21 + 8 * i + 32);
        }
        unint64_t v26 = v25;
        swift_unknownObjectWeakAssign();
      }
      goto LABEL_26;
    }
    __break(1u);
    goto LABEL_28;
  }
  unsigned __int8 v4 = [v3 hasManagedTeams];

  if (a1) {
    goto LABEL_6;
  }
  if (v4) {
    goto LABEL_7;
  }
LABEL_15:
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000D9110;
  *(void *)(v27 + 32) = sub_10008BE38();
  *(void *)(v27 + 40) = sub_10008BF78();
  uint64_t v49 = v27;
  specialized Array._endMutation()();
  uint64_t v28 = v27;
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;
  id v32 = [self mainBundle];
  v51._object = (void *)0xE000000000000000;
  v33._object = (void *)0x80000001000E4220;
  v33._uint64_t countAndFlagsBits = 0xD000000000000011;
  v34.value._uint64_t countAndFlagsBits = v29;
  v34.value._object = v31;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v51._uint64_t countAndFlagsBits = 0;
  Swift::String v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v51);
  swift_bridgeObjectRelease();

  uint64_t v37 = (objc_class *)type metadata accessor for FBAFilterGroup();
  uint64_t v38 = (char *)objc_allocWithZone(v37);
  swift_unknownObjectWeakInit();
  uint64_t v39 = (Swift::String *)&v38[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v39->_uint64_t countAndFlagsBits = 0;
  v39->_object = 0;
  *(void *)&v38[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(void *)&v38[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v28;
  *uint64_t v39 = v36;
  swift_bridgeObjectRelease();
  v48.receiver = v38;
  v48.super_class = v37;
  id v20 = [super init];
  unint64_t v40 = *(void *)&v20[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!(v40 >> 62))
  {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t result = v20;
    if (v41) {
      goto LABEL_17;
    }
LABEL_26:

    swift_bridgeObjectRelease_n();
    return v20;
  }
  swift_bridgeObjectRetain_n();
  Swift::Int v46 = v20;
  uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v41 = (uint64_t)result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_17:
  if (v41 >= 1)
  {
    for (uint64_t j = 0; j != v41; ++j)
    {
      if ((v40 & 0xC000000000000001) != 0) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v40 + 8 * j + 32);
      }
      uint64_t v44 = v43;
      swift_unknownObjectWeakAssign();
    }
    goto LABEL_26;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10008CD8C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10004DE60(&qword_100123518);
      id v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  id v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100056B94(0, (unint64_t *)&qword_100122990);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100056B94(0, (unint64_t *)&qword_100122990);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_10008D0E8(uint64_t a1)
{
  sub_100085920(a1);
  unint64_t v2 = (char *)v1;
  uint64_t v3 = sub_10008BCA8(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_10008795C(v3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    objc_super v48 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    int64_t v6 = sub_10008B6D8(v4);
    uint64_t v8 = v7;
    unint64_t v10 = v9 & 1;
    sub_100056B94(0, (unint64_t *)&qword_100123348);
    do
    {
      if (v6 < 0 || v6 >= 1 << *(unsigned char *)(v4 + 32))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      if (((*(void *)(v4 + 56 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_21;
      }
      if (*(_DWORD *)(v4 + 36) != v8) {
        goto LABEL_22;
      }
      uint64_t v11 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v6);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      sub_10004DE60((uint64_t *)&unk_100122860);
      char v45 = v10;
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1000D86F0;
      *(void *)(v14 + 56) = &type metadata for String;
      *(void *)(v14 + 64) = sub_100054550();
      *(void *)(v14 + 32) = v12;
      *(void *)(v14 + 40) = v13;
      swift_bridgeObjectRetain_n();
      unint64_t v15 = NSPredicate.init(format:_:)();
      uint64_t v16 = (objc_class *)type metadata accessor for FBAFilter();
      id v17 = objc_allocWithZone(v16);
      unint64_t v2 = (char *)OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
      *(void *)((char *)v17 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image) = 0;
      *((unsigned char *)v17 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active) = 0;
      swift_unknownObjectWeakInit();
      *(void *)((char *)v17 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate) = v15;
      id v18 = (char *)v17 + OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title;
      *id v18 = v12;
      v18[1] = v13;
      char v19 = *(void **)&v2[(void)v17];
      *(void *)&v2[(void)v17] = 0;
      id v20 = v15;

      v47.receiver = v17;
      v47.super_class = v16;
      [super init];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      int64_t v21 = sub_10008B778(v6, (int)v8, v45 & 1, v4);
      int64_t v6 = v21;
      uint64_t v8 = (uint64_t *)v22;
      unint64_t v10 = v23 & 1;
      --v5;
    }
    while (v5);
    sub_10008D5F8(v21, v22, v23 & 1);
    unint64_t v24 = (unint64_t)v48;
    swift_release();
    swift_bridgeObjectRetain();
    if ((v24 & 0x8000000000000000) != 0 || (uint64_t v25 = (void *)v24, (v24 & 0x4000000000000000) != 0))
    {
      uint64_t v25 = sub_100086C24(v24);
      swift_release();
    }
    objc_super v48 = v25;
    sub_100089C74((uint64_t *)&v48);
    swift_release();
    Swift::Int v26 = v48;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;
    id v30 = [self mainBundle];
    v49._object = (void *)0xE000000000000000;
    v31._object = (void *)0x80000001000E4110;
    v31._uint64_t countAndFlagsBits = 0xD000000000000019;
    v32.value._uint64_t countAndFlagsBits = v27;
    v32.value._object = v29;
    v33._uint64_t countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v49._uint64_t countAndFlagsBits = 0;
    Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v49);
    swift_bridgeObjectRelease();

    char v35 = (objc_class *)type metadata accessor for FBAFilterGroup();
    uint64_t v36 = (char *)objc_allocWithZone(v35);
    swift_unknownObjectWeakInit();
    id v37 = (Swift::String *)&v36[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
    v37->_uint64_t countAndFlagsBits = 0;
    v37->_object = 0;
    uint64_t v8 = &OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType;
    *(void *)&v36[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
    *(void *)&v36[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v26;
    *id v37 = v34;
    swift_bridgeObjectRelease();
    v46.receiver = v36;
    v46.super_class = v35;
    unint64_t v2 = (char *)[v46 init];
    unint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
    if (!(v10 >> 62))
    {
      uint64_t v38 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = v2;
      if (v38) {
        goto LABEL_13;
      }
LABEL_24:

      swift_bridgeObjectRelease_n();
      *(void *)&v2[*v8] = 2;
      return (uint64_t)v2;
    }
LABEL_23:
    swift_bridgeObjectRetain_n();
    uint64_t v43 = v2;
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    if (!v38) {
      goto LABEL_24;
    }
LABEL_13:
    if (v38 >= 1)
    {
      for (uint64_t i = 0; i != v38; ++i)
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v41 = *(id *)(v10 + 8 * i + 32);
        }
        uint64_t v42 = v41;
        swift_unknownObjectWeakAssign();
      }
      goto LABEL_24;
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_10008D5F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10008D608(void *a1)
{
  unint64_t v2 = sub_10008C86C(a1);
  id v3 = [a1 contentItems];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_100056B94(0, (unint64_t *)&qword_100122990);
    sub_10008DD38((unint64_t *)&qword_100122998, (unint64_t *)&qword_100122990);
    uint64_t v5 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 {
         && _CocoaArrayWrapper.endIndex.getter())
  }
  {
    sub_10008CD8C((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v5 = v10;
  }
  else
  {
    uint64_t v5 = &_swiftEmptySetSingleton;
  }
  int64_t v6 = (void *)sub_10008D0E8((uint64_t)v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v6)
  {
    id v8 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_10008D7E8()
{
  id v0 = [self sharedInstance];
  uint64_t v1 = (char *)[v0 currentUser];

  if (!v1) {
    return (uint64_t)v1;
  }
  id v2 = [v1 teams];
  if (!v2)
  {

    return 0;
  }
  id v3 = v2;
  sub_100056B94(0, &qword_100122610);
  sub_10008DD38((unint64_t *)&qword_100122618, &qword_100122610);
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if (([v1 hasManagedTeams] & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1000869D4(v4);
  swift_bridgeObjectRelease();
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  Class isa = (Class)[self sortDescriptors];
  if (!isa)
  {
    sub_100056B94(0, &qword_100122620);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v7 = [(objc_class *)v5.super.isa sortedArrayUsingDescriptors:isa];

  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = (unint64_t)sub_100085CF8(v8, &qword_100122610);
  swift_bridgeObjectRelease();
  if (v9 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    while (1)
    {
      id v37 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v10 < 0) {
        break;
      }
      uint64_t v11 = 0;
      while (v10 != v11)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v9 + 8 * v11 + 32);
        }
        uint64_t v13 = v12;
        id v35 = v12;
        sub_10008629C(&v35, &v36);

        ++v11;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v10 == v11)
        {
          uint64_t v14 = v37;
          swift_bridgeObjectRelease();

          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v10) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_21:
  swift_bridgeObjectRelease();

  uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = v16;
  id v18 = [self mainBundle];
  v38._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001000E4200;
  v19._uint64_t countAndFlagsBits = 0xD000000000000011;
  v20.value._uint64_t countAndFlagsBits = v15;
  v20.value._object = v17;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);
  swift_bridgeObjectRelease();

  char v23 = (objc_class *)type metadata accessor for FBAFilterGroup();
  unint64_t v24 = (char *)objc_allocWithZone(v23);
  swift_unknownObjectWeakInit();
  uint64_t v25 = (Swift::String *)&v24[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v25->_uint64_t countAndFlagsBits = 0;
  v25->_object = 0;
  *(void *)&v24[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(void *)&v24[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v14;
  *uint64_t v25 = v22;
  swift_bridgeObjectRelease();
  v34.receiver = v24;
  v34.super_class = v23;
  uint64_t v1 = (char *)[super init];
  unint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!(v26 >> 62))
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    Swift::Int v28 = v1;
    if (v27) {
      goto LABEL_24;
    }
LABEL_31:

    swift_bridgeObjectRelease_n();
    *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 2;
    return (uint64_t)v1;
  }
  swift_bridgeObjectRetain_n();
  Swift::String_optional v32 = v1;
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  if (!v27) {
    goto LABEL_31;
  }
LABEL_24:
  if (v27 >= 1)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v30 = *(id *)(v26 + 8 * i + 32);
      }
      Swift::String v31 = v30;
      swift_unknownObjectWeakAssign();
    }
    goto LABEL_31;
  }
LABEL_34:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10008DD38(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100056B94(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10008DD7C()
{
  id v0 = sub_10008C86C(0);
  uint64_t v1 = (void *)sub_10008D7E8();
  id v2 = [self sharedInstance];
  id v3 = [v2 currentUser];

  if (!v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v4 = [v3 contentItems];

  if (!v4)
  {
LABEL_15:
    __break(1u);
    return;
  }
  sub_100056B94(0, (unint64_t *)&qword_100122990);
  sub_10008DD38((unint64_t *)&qword_100122998, (unint64_t *)&qword_100122990);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v6 = (void *)sub_10008D0E8(v5);
  swift_bridgeObjectRelease();
  id v7 = v0;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v1)
  {
    id v8 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v6)
  {
    id v9 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
}

id sub_10008DFDC()
{
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  id v0 = NSPredicate.init(format:_:)();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = v2;
  id v4 = [self mainBundle];
  v23._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x435F5245544C4946;
  v5._object = (void *)0xED00004445534F4CLL;
  v6.value._uint64_t countAndFlagsBits = v1;
  v6.value._object = v3;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v23);
  swift_bridgeObjectRelease();

  id v9 = (void *)FBKImageNameCloseFeedback;
  uint64_t v10 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 imageNamed:v12];

  uint64_t v14 = (objc_class *)type metadata accessor for FBAFilter();
  uint64_t v15 = objc_allocWithZone(v14);
  uint64_t v16 = OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image;
  *(void *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_image] = 0;
  v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_active] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_predicate] = v0;
  *(Swift::String *)&v15[OBJC_IVAR____TtC18Feedback_Assistant9FBAFilter_title] = v8;
  id v17 = *(void **)&v15[v16];
  *(void *)&v15[v16] = v13;
  id v18 = v0;
  id v19 = v13;

  v22.receiver = v15;
  v22.super_class = v14;
  id v20 = [super init];

  return v20;
}

char *sub_10008E214()
{
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000D9110;
  *(void *)(v0 + 32) = sub_10008BE38();
  *(void *)(v0 + 40) = sub_10008BF78();
  uint64_t v22 = v0;
  specialized Array._endMutation()();
  uint64_t v1 = v0;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v3;
  id v5 = [self mainBundle];
  v23._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001000E4220;
  v6._uint64_t countAndFlagsBits = 0xD000000000000011;
  v7.value._uint64_t countAndFlagsBits = v2;
  v7.value._object = v4;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v23);
  swift_bridgeObjectRelease();

  uint64_t v10 = (objc_class *)type metadata accessor for FBAFilterGroup();
  id v11 = (char *)objc_allocWithZone(v10);
  swift_unknownObjectWeakInit();
  NSString v12 = (Swift::String *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_title];
  v12->_uint64_t countAndFlagsBits = 0;
  v12->_object = 0;
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_compoundType] = 1;
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters] = v1;
  *NSString v12 = v9;
  swift_bridgeObjectRelease();
  v21.receiver = v11;
  v21.super_class = v10;
  id v13 = [super init];
  unint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC18Feedback_Assistant14FBAFilterGroup_filters];
  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t result = v13;
    if (v15) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    return v13;
  }
  swift_bridgeObjectRetain_n();
  id v20 = v13;
  uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v15 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v15 >= 1)
  {
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v18 = *(id *)(v14 + 8 * i + 32);
      }
      id v19 = v18;
      swift_unknownObjectWeakAssign();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008E47C()
{
  type metadata accessor for FBATeamListHeaderView();
  sub_10004DE60((uint64_t *)&unk_100123590);
  uint64_t result = String.init<A>(describing:)();
  qword_100125F60 = result;
  *(void *)algn_100125F68 = v1;
  return result;
}

void sub_10008E600(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView] = 0;
  v78.receiver = v4;
  v78.super_class = (Class)type metadata accessor for FBATeamListHeaderView();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = (char *)v9;
  id v12 = [v10 init];
  uint64_t v13 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel;
  unint64_t v14 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel] = v12;

  uint64_t v15 = *(void **)&v11[v13];
  if (!v15) {
    goto LABEL_30;
  }
  uint64_t v16 = self;
  id v17 = v15;
  id v18 = [v16 preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v17 setFont:v18];

  id v19 = *(void **)&v11[v13];
  if (!v19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  [v19 setAdjustsFontForContentSizeCategory:1];
  id v20 = *(void **)&v11[v13];
  if (!v20)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_super v21 = self;
  id v22 = v20;
  id v23 = [v21 labelColor];
  [v22 setTextColor:v23];

  unint64_t v24 = *(void **)&v11[v13];
  if (!v24)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v25 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v26 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel;
  uint64_t v27 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel] = v25;

  Swift::Int v28 = *(void **)&v11[v26];
  if (!v28)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v29 = v28;
  id v30 = [v21 labelColor];
  [v29 setTextColor:v30];

  Swift::String v31 = *(void **)&v11[v26];
  if (!v31)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  [v31 setAdjustsFontForContentSizeCategory:1];
  Swift::String_optional v32 = *(void **)&v11[v26];
  if (!v32)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v33 = v32;
  id v34 = [v16 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v33 setFont:v34];

  id v35 = *(void **)&v11[v26];
  if (!v35)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 traitCollectionDidChange:0];
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1000D9110;
  id v37 = *(void **)&v11[v13];
  if (!v37)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  *(void *)(v36 + 32) = v37;
  Swift::String v38 = *(void **)&v11[v26];
  if (!v38)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  *(void *)(v36 + 40) = v38;
  specialized Array._endMutation()();
  id v39 = objc_allocWithZone((Class)UIStackView);
  sub_100056B94(0, (unint64_t *)&qword_100122D00);
  id v40 = v37;
  id v41 = v38;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v43 = [v39 initWithArrangedSubviews:isa];

  uint64_t v44 = OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView;
  char v45 = *(void **)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView];
  *(void *)&v11[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView] = v43;

  objc_super v46 = *(void **)&v11[v44];
  if (!v46)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  [v46 setAxis:1];
  objc_super v47 = *(void **)&v11[v44];
  if (!v47)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  [v47 setSpacing:2.5];
  objc_super v48 = *(void **)&v11[v44];
  if (!v48)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  [v48 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v49 = [v11 subviews];
  unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v51) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v51) {
      goto LABEL_23;
    }
  }
  if (v51 < 1)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  for (uint64_t i = 0; i != v51; ++i)
  {
    if ((v50 & 0xC000000000000001) != 0) {
      id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v53 = *(id *)(v50 + 8 * i + 32);
    }
    uint64_t v54 = v53;
    [v53 removeFromSuperview];
  }
LABEL_23:
  swift_bridgeObjectRelease();
  if (!*(void *)&v11[v44])
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  [v11 addSubview:];
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1000D9120;
  uint64_t v56 = *(void **)&v11[v44];
  if (!v56)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v57 = [v56 trailingAnchor];
  id v58 = [v11 layoutMarginsGuide];
  id v59 = [v58 trailingAnchor];

  id v60 = [v57 constraintEqualToAnchor:v59];
  *(void *)(v55 + 32) = v60;
  uint64_t v61 = *(void **)&v11[v44];
  if (!v61)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  id v62 = [v61 leadingAnchor];
  id v63 = [v11 layoutMarginsGuide];
  id v64 = [v63 leadingAnchor];

  id v65 = [v62 constraintEqualToAnchor:v64];
  *(void *)(v55 + 40) = v65;
  unint64_t v66 = *(void **)&v11[v44];
  if (!v66)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v67 = [v66 topAnchor];
  id v68 = [v11 layoutMarginsGuide];
  id v69 = [v68 topAnchor];

  id v70 = [v67 constraintEqualToAnchor:v69];
  *(void *)(v55 + 48) = v70;
  id v71 = *(void **)&v11[v44];
  if (v71)
  {
    uint64_t v72 = self;
    id v73 = [v71 bottomAnchor];
    id v74 = [v11 layoutMarginsGuide];
    id v75 = [v74 bottomAnchor];

    id v76 = [v73 constraintEqualToAnchor:v75 constant:-7.0];
    *(void *)(v55 + 56) = v76;
    specialized Array._endMutation()();
    sub_100056B94(0, &qword_100123588);
    Class v77 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v72 activateConstraints:v77];

    return;
  }
LABEL_47:
  __break(1u);
}

id sub_10008EE8C(void *a1)
{
  uint64_t v2 = v1;
  id result = *(id *)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_stackView];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  id result = [result setHidden:0];
  id v5 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  if (!v5)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v6 = v5;
  id v7 = [a1 name];
  [v6 setText:v7];

  id result = [a1 typeString];
  if (!result) {
    goto LABEL_8;
  }
  Swift::String v8 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id result = [a1 role];
  if (result != (id)2)
  {
    id result = (id)swift_bridgeObjectRelease();
LABEL_8:
    id v17 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
    if (v17)
    {
      id v10 = v17;
      NSString v16 = [a1 typeString];
      goto LABEL_10;
    }
    goto LABEL_15;
  }
  id v9 = *(void **)&v2[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  if (!v9)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  id v10 = v9;
  v11._uint64_t countAndFlagsBits = 2108704;
  v11._object = (void *)0xE300000000000000;
  String.append(_:)(v11);
  id v12 = [self mainBundle];
  v19._object = (void *)0x80000001000E44B0;
  v13._uint64_t countAndFlagsBits = 0x4E494D4441;
  v13._object = (void *)0xE500000000000000;
  v14._uint64_t countAndFlagsBits = 0x6E696D6441;
  v14._object = (void *)0xE500000000000000;
  v19._uint64_t countAndFlagsBits = 0xD000000000000024;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v19);

  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_10:
  [v10 setText:v16];

  return [v2 setNeedsLayout];
}

id sub_10008F170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBATeamListHeaderView();
  [super dealloc];
}

uint64_t type metadata accessor for FBATeamListHeaderView()
{
  return self;
}

id sub_10008F224()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamNameLabel];
  if ((v1 & 1) == 0)
  {
    if (result)
    {
      uint64_t v4 = 1;
      [result setNumberOfLines:1];
      id result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
      if (result) {
        goto LABEL_7;
      }
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  [result setNumberOfLines:0];
  id result = *(id *)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBATeamListHeaderView_teamTypeLabel];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = 0;
LABEL_7:

  return [result setNumberOfLines:v4];
}

void sub_10008F354()
{
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit();
  id v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10008F480(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_stubsPredicate] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  return [super initWithStyle:1];
}

Swift::Int sub_10008F550()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10008F598()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_10008F5DC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_10008F724()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  id v2 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"dismissPicker"];
  [v1 setRightBarButtonItem:v2];

  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context];
  if (v3 == 1)
  {
    id v4 = [v0 navigationItem];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = v6;
    id v8 = [self mainBundle];
    v20._object = (void *)0xE000000000000000;
    v9._object = (void *)0x80000001000E4780;
    v9._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v10.value._uint64_t countAndFlagsBits = v5;
    v10.value._object = v7;
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v20);
    swift_bridgeObjectRelease();

    NSString v12 = String._bridgeToObjectiveC()();
  }
  else
  {
    if (v3)
    {
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      return;
    }
    id v4 = [v0 navigationItem];
    id v13 = [self mainBundle];
    v21._object = (void *)0xE000000000000000;
    v14._uint64_t countAndFlagsBits = 0x465F455441455243;
    v14._object = (void *)0xEF4B434142444545;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v21._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v21);

    NSString v12 = String._bridgeToObjectiveC()();
  }
  swift_bridgeObjectRelease();
  [v4 setTitle:v12];

  id v16 = [v0 navigationController];
  if (v16)
  {
    id v17 = v16;
    id v18 = [v16 presentationController];

    if (v18)
    {
      [v18 setDelegate:v0];
    }
  }
  sub_1000902C4();
}

void sub_10008FBE0(void *a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [a1 dequeueReusableCellWithIdentifier:v4];

  if (!v5)
  {
    id v6 = objc_allocWithZone((Class)UITableViewCell);
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [v6 initWithStyle:3 reuseIdentifier:v7];
  }
  unint64_t v8 = IndexPath.row.getter();
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs);
  if (!v9) {
    goto LABEL_22;
  }
  if ((v9 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v10 = *(id *)(v9 + 8 * v8 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_22:

    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_8:
  Swift::String v11 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection);
  if (v11)
  {
    sub_100056B94(0, &qword_100123688);
    id v12 = v11;
    if (static NSObject.== infix(_:_:)())
    {
      LOBYTE(v13) = 1;
    }
    else
    {
      Swift::String v14 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team);
      if (v14)
      {
        id v13 = [v14 teamFormStubMatchingFromFormStub:v12];
        if (v13)
        {
          sub_100056B94(0, (unint64_t *)&unk_100123678);
          id v15 = v10;
          id v16 = v13;
          LOBYTE(v13) = static NSObject.== infix(_:_:)();
        }
      }
      else
      {
        LOBYTE(v13) = 0;
      }
    }
  }
  else
  {
    LOBYTE(v13) = 0;
  }
  if (v5)
  {
    [v5 configureWithBugFormStub:v10 isSelected:v13 & 1];

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_100090048(char a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  [super viewDidAppear:a1 & 1];
  id v3 = [self sharedInstance];
  id v4 = [v3 notificationCenter];

  uint64_t v5 = FBKDidRefreshFormStubsNotification;
  id v6 = [self mainQueue];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = sub_100090D1C;
  uint64_t v14 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100098000;
  uint64_t ObjectType = &unk_1000F5D38;
  unint64_t v8 = _Block_copy(aBlock);
  swift_release();
  id v9 = [v4 addObserverForName:v5 object:0 queue:v6 usingBlock:v8];
  _Block_release(v8);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v9;
  uint64_t v10 = (uint64_t)v1 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver;
  swift_beginAccess();
  sub_100090D3C((uint64_t)aBlock, v10);
  swift_endAccess();
}

void sub_10009021C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000902C4();
  }
}

void sub_1000902C4()
{
  id v1 = [self sharedInstance];
  id v2 = [v1 currentUser];

  if (!v2)
  {
    static os_log_type_t.error.getter();
    id v6 = [self appHandle];
    if (v6)
    {
      id v7 = v6;
      os_log(_:dso:log:_:_:)();
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  id v3 = [v2 bugFormStubsForPickerWithPredicate:*(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_stubsPredicate] team:*(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team]];
  sub_100056B94(0, (unint64_t *)&unk_100123678);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = v4;
  swift_bridgeObjectRelease();
  id v5 = [v0 tableView];
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v7 = v5;
  [v5 reloadData];

LABEL_6:
}

uint64_t sub_100090454(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  [super viewDidDisappear:a1 & 1];
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver;
  swift_beginAccess();
  sub_100090C38(v3, (uint64_t)&v7);
  if (!v8) {
    return sub_100055344((uint64_t)&v7);
  }
  sub_10007DC98(&v7, &v9);
  id v4 = [self sharedInstance];
  id v5 = [v4 notificationCenter];

  sub_100090CA0(&v9, v10);
  [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

  swift_unknownObjectRelease();
  return sub_1000538B0((uint64_t)&v9);
}

void sub_1000905BC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = Strong;
    if ([Strong respondsToSelector:"bugFormPickerDidCancel:"]) {
      [v2 bugFormPickerDidCancel:v0];
    }
    swift_unknownObjectRelease();
  }
  id v3 = [v0 presentingViewController];
  if (v3)
  {
    id v4 = v3;
    [v3 dismissViewControllerAnimated:1 completion:0];
  }
}

id sub_1000907B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBABugFormPickerController();
  return [super dealloc];
}

uint64_t type metadata accessor for FBABugFormPickerController()
{
  return self;
}

void sub_100090894(void *a1, char a2)
{
  id v5 = self;
  [v5 labelFontSize];
  id v24 = [v5 systemFontOfSize:];
  id v6 = [v2 textLabel];
  if (v6)
  {
    long long v7 = v6;
    id v8 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
    id v9 = [v8 scaledFontForFont:v24];

    [v7 setFont:v9];
  }
  id v10 = [v2 textLabel];
  if (v10)
  {
    objc_super v11 = v10;
    [v10 setAdjustsFontForContentSizeCategory:1];
  }
  id v12 = [v2 textLabel];
  if (v12)
  {
    id v13 = v12;
    id v14 = [a1 name];
    [v13 setText:v14];
  }
  id v15 = [v2 detailTextLabel];
  if (v15)
  {
    id v16 = v15;
    id v17 = [a1 formDescription];
    [v16 setText:v17];
  }
  if (a2) {
    uint64_t v18 = 3;
  }
  else {
    uint64_t v18 = 0;
  }
  [v2 setAccessoryType:v18];
  [v2 setAccessibilityTraits:((unint64_t)[v2 accessibilityTraits] | UIAccessibilityTraitButton)];
  id v19 = [v2 detailTextLabel];
  if (v19)
  {
    Swift::String v20 = v19;
    id v21 = [v2 traitCollection];
    id v22 = [v21 preferredContentSizeCategory];

    LOBYTE(v21) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if (v21) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = 3;
    }
    [v20 setNumberOfLines:v23];
  }
}

ValueMetadata *type metadata accessor for FBABugFormPickerController.Context()
{
  return &type metadata for FBABugFormPickerController.Context;
}

unint64_t sub_100090BE4()
{
  unint64_t result = qword_100123670;
  if (!qword_100123670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123670);
  }
  return result;
}

uint64_t sub_100090C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60((uint64_t *)&unk_100122D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100090CA0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100090CE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100090D1C()
{
}

uint64_t sub_100090D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100090D34()
{
  return swift_release();
}

uint64_t sub_100090D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60((uint64_t *)&unk_100122D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100090DA4()
{
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_team] = 0;
  swift_unknownObjectWeakInit();
  id v1 = &v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formsRefreshObserver];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100090E78()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_context);
  if (v1 == 1)
  {
    id v2 = [self mainBundle];
    unint64_t v9 = 0xE000000000000000;
    unint64_t v3 = 0x80000001000E4730;
    unint64_t v4 = 0xD00000000000001DLL;
LABEL_5:
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    uint64_t v6 = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (!v1)
  {
    id v2 = [self mainBundle];
    unint64_t v4 = 0xD000000000000020;
    unint64_t v9 = 0xE000000000000000;
    unint64_t v3 = 0x80000001000E4750;
    goto LABEL_5;
  }
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_100090FA0(void *a1, uint64_t a2)
{
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v12 = a1;
    id v7 = [v6 textLabel];
    if (v7)
    {
      id v8 = v7;
      id v9 = [v2 tableView];
      if (!v9)
      {
        __break(1u);
        return;
      }
      id v10 = v9;
      id v11 = [v2 tableView:v9 titleForHeaderInSection:a2];

      [v8 setText:v11];
    }
  }
}

void sub_1000910AC()
{
  uint64_t v1 = v0;
  unint64_t v2 = IndexPath.row.getter();
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_formStubs];
  if (!v3) {
    goto LABEL_27;
  }
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v3 + 8 * v2 + 32);
      goto LABEL_6;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_6:
  unint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant26FBABugFormPickerController_currentSelection];
  if (v4)
  {
    sub_100056B94(0, &qword_100123688);
    id v11 = v4;
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v6 = Strong;
        if ([Strong respondsToSelector:"bugFormPickerDidCancel:"]) {
          [v6 bugFormPickerDidCancel:v1];
        }
        swift_unknownObjectRelease();
      }
      id v7 = [v1 presentingViewController];
      if (v7)
      {
        id v10 = v7;
        [v7 dismissViewControllerAnimated:1 completion:0];

        id v8 = v10;
      }
      else
      {

        id v8 = v11;
      }
      goto LABEL_21;
    }
  }
  id v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
    id v8 = v12;
LABEL_21:

    return;
  }
  [v9 bugFormPicker:v1 didSelectBugFormStub:v12];

  swift_unknownObjectRelease();
}

void sub_1000912B0()
{
  sub_1000551B4();
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self storyboardWithName:v1 bundle:v0];

  qword_100125F70 = (uint64_t)v2;
}

uint64_t sub_1000913B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_10009148C()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup);
  if (v1)
  {
    uint64_t v18 = v1;
    unsigned int v2 = [v18 requiresComments];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    unint64_t v4 = (char *)Strong;
    if (!v2)
    {
      if (Strong)
      {
        uint64_t v5 = (objc_class *)[self mainBundle];
        unint64_t v17 = 0x80000001000E4A40;
        unint64_t v7 = 0x80000001000E4A20;
        unint64_t v6 = 0xD000000000000015;
        v8.super.Class isa = v5;
        uint64_t v9 = 0;
        unint64_t v10 = 0xE000000000000000;
        uint64_t v11 = 0x100000000000001ALL;
        goto LABEL_9;
      }
LABEL_15:
      __break(1u);
      return;
    }
    if (Strong)
    {
      uint64_t v5 = (objc_class *)[self mainBundle];
      unint64_t v17 = 0xAFA680E273746E65;
      unint64_t v6 = 0x4D4D4F435F444441;
      unint64_t v7 = 0xEC00000053544E45;
      v8.super.Class isa = v5;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      uint64_t v11 = 0x6D6D6F6320646441;
LABEL_9:
      Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, v8, *(Swift::String *)&v9, *(Swift::String *)&v11);

      *(Swift::String *)&v4[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText] = v16;
      swift_bridgeObjectRelease();
      sub_100053A40();

      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v18 = (char *)swift_unknownObjectWeakLoadStrong();
  if (!v18)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v12 = [self mainBundle];
  v20._object = (void *)0x80000001000E4A40;
  v13._object = (void *)0x80000001000E4A20;
  v13._uint64_t countAndFlagsBits = 0xD000000000000015;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0x100000000000001ALL;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v20);

  *(Swift::String *)&v18[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_placeholderText] = v15;
  swift_bridgeObjectRelease();
  sub_100053A40();
LABEL_10:
}

void sub_1000916FC(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup);
  *(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup) = a1;
  id v5 = a1;
  id v10 = v5;
  if (a1)
  {
    if (v4)
    {
      sub_100092790();
      id v6 = v4;
      id v7 = v10;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        unint64_t v4 = v6;
        id v10 = v7;
LABEL_7:

        unint64_t v4 = v10;
        goto LABEL_8;
      }
    }
    else
    {
      id v9 = v5;
    }
    sub_10009148C();
    goto LABEL_7;
  }
LABEL_8:
}

void sub_100091854()
{
  uint64_t Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v1 = Strong[OBJC_IVAR____TtC18Feedback_Assistant20FBAExpandingTextView_isEditing];

  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = v2;
  if (v1 == 1)
  {
    if (v2)
    {
      id v4 = [v2 text];

      if (v4)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        return;
      }
      goto LABEL_10;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v2)
  {
    swift_bridgeObjectRetain();

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_10009197C()
{
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight + 8]) {
    return;
  }
  double v1 = *(double *)&v0[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
  if (v1 < 88.5)
  {
    static os_log_type_t.debug.getter();
    id v2 = [self appHandle];
    if (!v2)
    {
LABEL_14:
      __break(1u);
      return;
    }
    uint64_t v3 = v2;
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1000D86F0;
    *(void *)(v4 + 56) = &type metadata for CGFloat;
    *(void *)(v4 + 64) = sub_100092968();
    *(double *)(v4 + 32) = v1;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    double v1 = 88.5;
  }
  static os_log_type_t.debug.getter();
  id v5 = [self appHandle];
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v6 = v5;
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000D86F0;
  *(void *)(v7 + 56) = &type metadata for CGFloat;
  *(void *)(v7 + 64) = sub_100092968();
  *(double *)(v7 + 32) = v1;
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  [v0 frame];
  double v9 = v8;
  id v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  [v10 frame];
  double v13 = v12;

  [Strong setConstant:v1 - (v9 - v13)];
}

void sub_100091BE8()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  [super awakeFromNib];
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v2 = Strong;
  [Strong setScrollEnabled:0];

  uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  [v3 setDelegate:v0];

  id v5 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v6 = v5;
  [v5 setAdjustsFontForContentSizeCategory:1];

  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v8 = v7;
  id v9 = [v7 text];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v10 = String.count.getter();
    swift_bridgeObjectRelease();
    sub_100091DD4(v10);
    sub_10009148C();
    [v0 setSelectionStyle:0];
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_100091DD4(uint64_t a1)
{
  uint64_t v1 = FBKTextAreaAnswerCharacterLimit - a1;
  if (__OFSUB__(FBKTextAreaAnswerCharacterLimit, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v13 = Strong;
  if (v1 <= 99)
  {
    if (Strong)
    {
      [Strong setHidden:0];

      uint64_t v3 = swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        uint64_t v4 = (void *)v3;
        id v5 = [self mainBundle];
        v15._object = (void *)0xE000000000000000;
        v6._uint64_t countAndFlagsBits = 0x4554434152414843;
        v6._object = (void *)0xEF5446454C5F5352;
        v7._uint64_t countAndFlagsBits = 0;
        v7._object = (void *)0xE000000000000000;
        v15._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v15);

        sub_10004DE60((uint64_t *)&unk_100122860);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1000D86F0;
        *(void *)(v8 + 56) = &type metadata for Int;
        *(void *)(v8 + 64) = &protocol witness table for Int;
        *(void *)(v8 + 32) = v1;
        String.init(format:_:)();
        swift_bridgeObjectRelease();
        NSString v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v4 setText:v9];

        uint64_t v10 = swift_unknownObjectWeakLoadStrong();
        objc_super v11 = (void *)v10;
        if (v1 < 0)
        {
          if (v10)
          {
            id v12 = [self redColor];
            goto LABEL_12;
          }
LABEL_21:
          __break(1u);
          return;
        }
        if (v10)
        {
          id v12 = [self secondaryLabelColor];
LABEL_12:
          id v13 = v12;
          [v11 setTextColor:];

          goto LABEL_13;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!Strong)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  [Strong setHidden:1];
LABEL_13:
}

id sub_1000920E4(void *a1)
{
  id result = [a1 text];
  if (!result) {
    goto LABEL_6;
  }
  id v2 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = String.count.getter();
  swift_bridgeObjectRelease();
  sub_100091DD4(v3);
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    sub_10006A208();
    uint64_t v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_100092760;
    *(void *)(v7 + 24) = v6;
    void v10[4] = sub_10004FFE0;
    void v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    void v10[2] = sub_1000913B4;
    v10[3] = &unk_1000F5DC0;
    uint64_t v8 = _Block_copy(v10);
    id v9 = v4;
    swift_retain();
    swift_release();
    [(id)v5 performWithoutAnimation:v8];
    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    id result = (id)swift_release();
    if (v5)
    {
      __break(1u);
LABEL_6:
      __break(1u);
    }
  }
  return result;
}

id sub_1000923B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  *(void *)uint64_t v6 = 0xD000000000000019;
  *((void *)v6 + 1) = 0x80000001000D9290;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v7 = &v3[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  if (a3)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  [super initWithStyle:a1 reuseIdentifier:v8];

  return v9;
}

id sub_100092528(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_itemIdentifier];
  *(void *)uint64_t v3 = 0xD000000000000019;
  *((void *)v3 + 1) = 0x80000001000D9290;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_followup] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v4 = &v1[OBJC_IVAR____TtC18Feedback_Assistant25FBAExpandingTextInputCell_minimumHeight];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  [super initWithCoder:a1];

  return v5;
}

id sub_100092640()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAExpandingTextInputCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAExpandingTextInputCell()
{
  return self;
}

uint64_t sub_100092728()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100092760()
{
  return sub_10006E3EC();
}

uint64_t sub_100092768()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100092778(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100092788()
{
  return swift_release();
}

unint64_t sub_100092790()
{
  unint64_t result = qword_100123758;
  if (!qword_100123758)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100123758);
  }
  return result;
}

uint64_t sub_1000927D0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    sub_10006A208();
    uint64_t v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1000929C8;
    *(void *)(v4 + 24) = v3;
    void v7[4] = sub_1000929BC;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000913B4;
    v7[3] = &unk_1000F5E38;
    id v5 = _Block_copy(v7);
    id v6 = v1;
    swift_retain();
    swift_release();
    [(id)v2 performWithoutAnimation:v5];
    _Block_release(v5);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = swift_release();
    if (v2) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100092958()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100092968()
{
  unint64_t result = qword_100123760;
  if (!qword_100123760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123760);
  }
  return result;
}

uint64_t sub_1000929D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1000929DC(uint64_t a1)
{
  uint64_t result = sub_10008B6D8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_1000954F4(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100092A5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

void sub_100092C24(void *a1, uint64_t a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for URLRequest();
  __chkstk_darwin(v12 - 8);
  id v13 = _Block_copy(a4);
  Swift::String v14 = _Block_copy(a5);
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = a1;
  _Block_release(v13);
  _Block_release(v14);
  static os_log_type_t.info.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000D86F0;
  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = sub_100054550();
  *(void *)(v16 + 32) = a6;
  *(void *)(v16 + 40) = a7;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100093004(void *a1, uint64_t a2)
{
  sub_100090CA0(a1, a1[3]);
  uint64_t v3 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v3);

  return swift_unknownObjectRelease();
}

void sub_100093304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = (void (*)(char *, uint64_t))URL.path.getter();
  unint64_t v11 = v10;
  uint64_t v12 = URL.query.getter();
  uint64_t v52 = a2;
  uint64_t v51 = a4;
  if (v13)
  {
    uint64_t v14 = v12;
    id v15 = v13;
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = URL.path.getter();
    *((void *)&aBlock + 1) = v16;
    swift_bridgeObjectRetain();
    v17._uint64_t countAndFlagsBits = 63;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = v14;
    v18._object = v15;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = *((void *)&aBlock + 1);
    id v9 = (void (*)(char *, uint64_t))aBlock;
  }
  uint64_t v19 = URL.path.getter();
  unint64_t v21 = v20;
  *(void *)&long long aBlock = v19;
  *((void *)&aBlock + 1) = v20;
  *(void *)&v59[0] = 63;
  *((void *)&v59[0] + 1) = 0xE100000000000000;
  sub_1000524C0();
  if (StringProtocol.contains<A>(_:)())
  {
    id v22 = objc_allocWithZone((Class)NSURLComponents);
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v24 = [v22 initWithString:v23];

    uint64_t v50 = a3;
    id v49 = v24;
    if (v24)
    {
      id v25 = [v24 path];
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v27;
      }
      else
      {
        unint64_t v21 = 0xE100000000000000;
        uint64_t v19 = 45;
      }
      id v30 = [v24 queryItems];
      if (v30)
      {
        Swift::String v31 = v30;
        type metadata accessor for URLQueryItem();
        static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v29 = Array.description.getter();
        unint64_t v28 = v32;
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v28 = 0xE100000000000000;
        uint64_t v29 = 45;
      }
    }
    else
    {
      unint64_t v28 = 0xE100000000000000;
      uint64_t v29 = 45;
      uint64_t v19 = 45;
      unint64_t v21 = 0xE100000000000000;
    }
    static os_log_type_t.debug.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1000D88B0;
    *(void *)(v33 + 56) = &type metadata for String;
    unint64_t v34 = sub_100054550();
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v28;
    *(void *)(v33 + 96) = &type metadata for String;
    *(void *)(v33 + 104) = v34;
    *(void *)(v33 + 64) = v34;
    *(void *)(v33 + 72) = v19;
    *(void *)(v33 + 80) = v21;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    a3 = v50;
  }
  sub_100094550(v9, v11, &aBlock);
  if (v56)
  {
    swift_bridgeObjectRelease();
    sub_10007DC98(&aBlock, v59);
    static os_log_type_t.debug.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1000D86F0;
    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = sub_100054550();
    *(void *)(v35 + 32) = v9;
    *(void *)(v35 + 40) = v11;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v36 = [self mainQueue];
    sub_100053854((uint64_t)v59, (uint64_t)v53);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v52;
    *(void *)(v37 + 24) = a3;
    sub_10007DC98(v53, (_OWORD *)(v37 + 32));
    id v57 = sub_100096094;
    id v58 = (void *)v37;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    Swift::String v38 = &unk_1000F5FC8;
LABEL_18:
    uint64_t v55 = sub_1000992C4;
    uint64_t v56 = v38;
    id v41 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v36 addOperationWithBlock:v41];
    _Block_release(v41);

    sub_1000538B0((uint64_t)v59);
    return;
  }
  swift_bridgeObjectRelease();
  sub_100052464((uint64_t)&aBlock, (uint64_t *)&unk_100122D70);
  sub_100094550((void (*)(char *, uint64_t))v19, v21, &aBlock);
  if (v56)
  {
    sub_10007DC98(&aBlock, v59);
    static os_log_type_t.debug.getter();
    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1000D86F0;
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_100054550();
    *(void *)(v39 + 32) = v19;
    *(void *)(v39 + 40) = v21;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v36 = [self mainQueue];
    sub_100053854((uint64_t)v59, (uint64_t)v53);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v52;
    *(void *)(v40 + 24) = a3;
    sub_10007DC98(v53, (_OWORD *)(v40 + 32));
    id v57 = sub_100095D8C;
    id v58 = (void *)v40;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    Swift::String v38 = &unk_1000F5F78;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  sub_100052464((uint64_t)&aBlock, (uint64_t *)&unk_100122D70);
  id v42 = objc_allocWithZone((Class)NSError);
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v42 initWithDomain:v43 code:1001 userInfo:0];

  id v45 = [self mainQueue];
  objc_super v46 = (void *)swift_allocObject();
  v46[2] = v51;
  v46[3] = a5;
  v46[4] = v44;
  id v57 = sub_100095C88;
  id v58 = v46;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v55 = sub_1000992C4;
  uint64_t v56 = &unk_1000F5F28;
  objc_super v47 = _Block_copy(&aBlock);
  swift_retain();
  id v48 = v44;
  swift_release();
  [v45 addOperationWithBlock:v47];
  _Block_release(v47);
}

void sub_100094224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = URL.query.getter();
  if (v10)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    unint64_t v32 = (void (*)(char *, uint64_t))URL.path.getter();
    uint64_t v33 = v13;
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = 63;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v15._uint64_t countAndFlagsBits = v11;
    v15._object = v12;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v32;
    unint64_t v17 = v33;
  }
  else
  {
    uint64_t v16 = (void (*)(char *, uint64_t))URL.path.getter();
    unint64_t v17 = v18;
  }
  id v19 = sub_1000947B0(v16, v17);
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21 >> 60 == 15)
  {
    id v22 = objc_allocWithZone((Class)NSError);
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v22 initWithDomain:v23 code:1002 userInfo:0];

    id v25 = [self mainQueue];
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = a4;
    v26[3] = a5;
    v26[4] = v24;
    id v36 = sub_100095C88;
    uint64_t v37 = v26;
    unint64_t v32 = (void (*)(char *, uint64_t))_NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    unint64_t v34 = sub_1000992C4;
    uint64_t v35 = &unk_1000F5E88;
    unint64_t v27 = _Block_copy(&v32);
    swift_retain();
    id v28 = v24;
    swift_release();
    [v25 addOperationWithBlock:v27];
    _Block_release(v27);
  }
  else
  {
    id v29 = [self mainQueue];
    id v30 = (void *)swift_allocObject();
    v30[2] = a2;
    void v30[3] = a3;
    void v30[4] = v19;
    v30[5] = v21;
    id v36 = sub_100095CE4;
    uint64_t v37 = v30;
    unint64_t v32 = (void (*)(char *, uint64_t))_NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    unint64_t v34 = sub_1000992C4;
    uint64_t v35 = &unk_1000F5ED8;
    Swift::String v31 = _Block_copy(&v32);
    swift_retain();
    sub_100095C5C((uint64_t)v19, v21);
    swift_release();
    [v29 addOperationWithBlock:v31];
    _Block_release(v31);

    sub_100095C70((uint64_t)v19, v21);
  }
}

double sub_100094550@<D0>(void (*a1)(char *, uint64_t)@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  id v4 = sub_1000947B0(a1, a2);
  if (v5 >> 60 == 15)
  {
    sub_10004DE60((uint64_t *)&unk_1001238F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1000D86F0;
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 32) = 0x61746164206F6ELL;
    *(void *)(v6 + 40) = 0xE700000000000000;
    print(_:separator:terminator:)();
  }
  else
  {
    uint64_t v7 = (uint64_t)v4;
    unint64_t v8 = v5;
    uint64_t v9 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v19 = 0;
    id v11 = [v9 JSONObjectWithData:isa options:4 error:&v19];

    id v12 = v19;
    if (v11)
    {
      _bridgeAnyObjectToAny(_:)();
      sub_100095C70(v7, v8);
      swift_unknownObjectRelease();
      return result;
    }
    Swift::String v14 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10004DE60((uint64_t *)&unk_1001238F0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1000D86F0;
    id v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v16._object = (void *)0x80000001000E4C30;
    v16._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v16);
    sub_10004DE60((uint64_t *)&unk_100123020);
    _print_unlocked<A, B>(_:_:)();
    id v17 = v19;
    unint64_t v18 = v20;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v18;
    print(_:separator:terminator:)();
    sub_100095C70(v7, v8);
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  double result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

id sub_1000947B0(void (*a1)(char *, uint64_t), unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v102 = a1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v6 = v101;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v93 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v98 = (char *)v87 - v9;
  uint64_t v10 = sub_10004DE60(&qword_100122790);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v95 = (uint64_t)v87 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v97 = (uint64_t)v87 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  BOOL v94 = (char *)v87 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)v87 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = (char *)v87 - v24;
  __chkstk_darwin(v23);
  unint64_t v27 = (char *)v87 - v26;
  uint64_t v96 = v6;
  id v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  id v28 = (char *)(v6 + 56);
  v29((char *)v87 - v26, 1, 1, v5);
  uint64_t v30 = sub_100095548();
  uint64_t v91 = v13;
  uint64_t v99 = v29;
  uint64_t v100 = v2;
  if (!v31)
  {
    sub_10004DE60(&qword_100122890);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1000D88B0;
    *(void *)(v37 + 32) = 0xD000000000000010;
    *(void *)(v37 + 40) = 0x80000001000E4B70;
    uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir + 8);
    *(void *)(v37 + 48) = *(void *)(v2 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir);
    *(void *)(v37 + 56) = v38;
    uint64_t v103 = v37;
    swift_bridgeObjectRetain();
    sub_10004DE60((uint64_t *)&unk_1001238D0);
    sub_100081620();
    uint64_t v39 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v90 = v39;
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v3 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log);
    int v89 = static os_log_type_t.debug.getter();
    uint64_t v92 = sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v43 = swift_allocObject();
    uint64_t v88 = v27;
    id v44 = (void *)v43;
    *(_OWORD *)(v43 + 16) = xmmword_1000D8AE0;
    *(void *)(v43 + 56) = &type metadata for String;
    unint64_t v45 = sub_100054550();
    v44[4] = 0xD000000000000014;
    v44[5] = 0x80000001000E4BB0;
    v44[12] = &type metadata for String;
    v44[13] = v45;
    v44[8] = v45;
    v44[9] = v39;
    v44[10] = v41;
    v44[17] = &type metadata for String;
    v44[18] = v45;
    v87[0] = v45;
    v44[14] = v102;
    v44[15] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87[1] = v42;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v46 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v100
                                                                + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_bundle), "bundleURL"));
    objc_super v47 = v93;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v48 = v98;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v49 = v101;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v101 + 8);
    v50(v47, v5);
    URL.appendingPathComponent(_:)();
    uint64_t v51 = v48;
    unint64_t v27 = v88;
    v50(v51, v5);
    sub_100052464((uint64_t)v27, &qword_100122790);
    v99(v25, 0, 1, v5);
    sub_10006048C((uint64_t)v25, (uint64_t)v27);
    static os_log_type_t.debug.getter();
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1000D86F0;
    uint64_t v53 = (uint64_t)v94;
    sub_10009569C((uint64_t)v27, (uint64_t)v94);
    uint64_t v101 = *(void *)(v49 + 48);
    id result = (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v101)(v53, 1, v5);
    if (result == 1)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v55 = URL.path.getter();
    uint64_t v56 = v87[0];
    *(void *)(v52 + 56) = &type metadata for String;
    *(void *)(v52 + 64) = v56;
    *(void *)(v52 + 32) = v55;
    *(void *)(v52 + 40) = v57;
    uint64_t v102 = v50;
    v50((char *)v53, v5);
    os_log(_:dso:log:type:_:)();
    goto LABEL_13;
  }
  uint64_t v92 = v30;
  uint64_t v93 = v28;
  BOOL v94 = v25;
  swift_bridgeObjectRetain();
  unint64_t v32 = v102;
  uint64_t v33 = sub_100092A5C((uint64_t)v102, a2);
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  id v36 = v98;
  if (!v35) {
    goto LABEL_10;
  }
  if (v33 != 47 || v35 != 0xE100000000000000)
  {
    char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v58) {
      goto LABEL_9;
    }
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRetain();
  sub_100095844(1, (uint64_t)v32, a2);
  swift_bridgeObjectRelease();
  static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
LABEL_11:
  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  uint64_t v59 = (uint64_t)v94;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v60 = v101;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v101 + 8);
  v61(v36, v5);
  sub_100052464((uint64_t)v27, &qword_100122790);
  v99((char *)v59, 0, 1, v5);
  sub_10006048C(v59, (uint64_t)v27);
  uint64_t v100 = *(void *)(v100 + OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log);
  LODWORD(v99) = static os_log_type_t.debug.getter();
  sub_10004DE60((uint64_t *)&unk_100122860);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_1000D88B0;
  *(void *)(v62 + 56) = &type metadata for String;
  unint64_t v63 = sub_100054550();
  *(void *)(v62 + 64) = v63;
  *(void *)(v62 + 32) = 0xD000000000000014;
  *(void *)(v62 + 40) = 0x80000001000E4BB0;
  sub_10009569C((uint64_t)v27, (uint64_t)v22);
  uint64_t v101 = *(void *)(v60 + 48);
  id result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v22, 1, v5);
  if (result == 1)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v64 = URL.description.getter();
  *(void *)(v62 + 96) = &type metadata for String;
  *(void *)(v62 + 104) = v63;
  *(void *)(v62 + 72) = v64;
  *(void *)(v62 + 80) = v65;
  uint64_t v102 = v61;
  v61(v22, v5);
  os_log(_:dso:log:type:_:)();
LABEL_13:
  swift_bridgeObjectRelease();
  id v66 = [self defaultManager];
  uint64_t v67 = v97;
  sub_10009569C((uint64_t)v27, v97);
  id v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v101;
  id result = (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v101)(v67, 1, v5);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  URL.path.getter();
  NSString v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v102((char *)v67, v5);
  unsigned __int8 v70 = [v66 fileExistsAtPath:v69];

  if ((v70 & 1) == 0)
  {
    sub_100095704();
    uint64_t v72 = swift_allocError();
    *id v73 = 0xD000000000000013;
    v73[1] = 0x80000001000E4BF0;
    sub_1000958F4(v72, (uint64_t)v27);
    sub_100052464((uint64_t)v27, &qword_100122790);
    swift_errorRelease();
    return 0;
  }
  uint64_t v71 = v95;
  sub_10009569C((uint64_t)v27, v95);
  id result = (id)v68(v71, 1, v5);
  if (result == 1) {
    goto LABEL_26;
  }
  uint64_t v74 = Data.init(contentsOf:options:)();
  unint64_t v76 = v75;
  v102((char *)v71, v5);
  id result = [self sharedInstance];
  if (result)
  {
    Class v77 = result;
    uint64_t v78 = (uint64_t)v91;
    sub_10009569C((uint64_t)v27, (uint64_t)v91);
    int v79 = v68(v78, 1, v5);
    sub_100095C04(v74, v76);
    if (v79 == 1)
    {
      uint64_t v81 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v80);
      uint64_t v81 = v82;
      v102((char *)v78, v5);
    }
    id v83 = objc_allocWithZone((Class)FBKRequestRecordWrapper);
    NSString v84 = String._bridgeToObjectiveC()();
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1000537FC(v74, v76);
    id v86 = [v83 initWithURL:v81 httpMethod:v84 responseData:isa];

    [v77 addRequest:v86];
    sub_100052464((uint64_t)v27, &qword_100122790);
    return (id)v74;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000952D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADataClientStub();
  [super dealloc];
}

uint64_t type metadata accessor for FBADataClientStub()
{
  return self;
}

id sub_10009538C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    uint64_t v13 = v14;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100095C70(a4, a5);
  }
  id v17 = [v6 initWithURL:v13 httpMethod:v15 responseData:isa];

  return v17;
}

uint64_t sub_1000954F4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_100095548()
{
  id v0 = [self processInfo];
  id v1 = [v0 environment];

  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_100073E94(0x545849465F414246, 0xEC00000053455255), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v6 = [self standardUserDefaults];
    id v7 = [v6 stringForKey:FBKFixturePath];

    if (v7)
    {
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v5;
}

uint64_t sub_10009569C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100122790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100095704()
{
  unint64_t result = qword_1001238E0;
  if (!qword_1001238E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001238E0);
  }
  return result;
}

id sub_100095758(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_Log;
  sub_1000545A4();
  uint64_t v4 = (objc_class *)type metadata accessor for FBADataClientStub();
  uint64_t v10 = v4;
  uint64_t v5 = v1;
  sub_10004DE60((uint64_t *)&unk_100123900);
  String.init<A>(describing:)();
  *(void *)&v1[v3] = OS_os_log.init(subsystem:category:)();
  *(void *)&v5[OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_bundle] = a1;
  id v6 = &v5[OBJC_IVAR____TtC18Feedback_Assistant17FBADataClientStub_testFixtureDir];
  *(void *)id v6 = 0x4950412D3356;
  *((void *)v6 + 1) = 0xE600000000000000;
  id v7 = a1;

  v9.receiver = v5;
  v9.super_class = v4;
  return [super init];
}

uint64_t sub_100095844(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return String.subscript.getter();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t v6 = String.index(_:offsetBy:limitedBy:)();
  if (v7) {
    unint64_t v6 = v5;
  }
  if (4 * v3 < v6 >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

id sub_1000958F4(uint64_t a1, uint64_t a2)
{
  v23[0] = a2;
  uint64_t v3 = sub_10004DE60(&qword_100122790);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.Encoding();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  v10._object = (void *)0x80000001000E4C10;
  v10._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v10);
  uint64_t v25 = a1;
  sub_10004DE60((uint64_t *)&unk_100123020);
  _print_unlocked<A, B>(_:_:)();
  sub_10004DE60((uint64_t *)&unk_1001238F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000D86F0;
  swift_getErrorValue();
  uint64_t v12 = v23[1];
  uint64_t v13 = v24;
  *(void *)(v11 + 56) = v24;
  uint64_t v14 = sub_100056D18((uint64_t *)(v11 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v14, v12, v13);
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  static String.Encoding.utf8.getter();
  uint64_t v15 = String.data(using:allowLossyConversion:)();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10009569C(v23[0], (uint64_t)v5);
  id v18 = objc_allocWithZone((Class)FBKRequestRecordWrapper);
  sub_100095C5C(v15, v17);
  id v19 = sub_10009538C((uint64_t)v5, 0x45525554584946, 0xE700000000000000, v15, v17);
  uint64_t v20 = v19;
  if (v19) {
    [v19 setIsFailure:1];
  }
  id result = [self sharedInstance];
  if (result)
  {
    id v22 = result;
    [result addRequest:v20];

    return (id)sub_100095C70(v15, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100095C04(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100095C5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100095C04(a1, a2);
  }
  return a1;
}

uint64_t sub_100095C70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000537FC(a1, a2);
  }
  return a1;
}

uint64_t sub_100095C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100095C9C()
{
  return swift_release();
}

uint64_t sub_100095CA4()
{
  swift_release();
  sub_1000537FC(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100095CE4()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100095D18()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100095D58()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100095D8C()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + 32);
}

uint64_t sub_100095DC0()
{
  swift_release();
  sub_1000538B0(v0 + 32);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100095E00()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100095E40(void *a1)
{
  return sub_100093004(a1, *(void *)(v1 + 16));
}

void sub_100095E48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(v1 + 16))(v1, isa);
}

void sub_100095EA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)_convertErrorToNSError(_:)();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void *initializeBufferWithCopyOfBuffer for SimpleError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SimpleError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SimpleError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SimpleError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleError()
{
  return &type metadata for SimpleError;
}

uint64_t sub_10009609C()
{
  uint64_t v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FBASmartMailbox();
  id v2 = [super diffableIdentifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  uint64_t v10 = v3;
  uint64_t v11 = v5;
  v6._uint64_t countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  [v1 unreadCountForTeam:0];
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1000961DC()
{
  return sub_100097360(type metadata accessor for FBASmartMailbox);
}

uint64_t type metadata accessor for FBASmartMailbox()
{
  return self;
}

id sub_1000963A0()
{
  return sub_100097360(type metadata accessor for FBAAllInbox);
}

uint64_t type metadata accessor for FBAAllInbox()
{
  return self;
}

uint64_t sub_1000964F0(uint64_t a1)
{
  sub_100056B94(0, (unint64_t *)&qword_100122990);
  id v3 = [(id)swift_getObjCClassFromMetadata() entityName];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v5 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithEntityName:v6];

    id v8 = [v1 predicateForTeam:a1];
    [v7 setPredicate:v8];

    id v9 = [self sharedInstance];
    id v10 = [v9 mainQueueContext];

    if (v10)
    {
      uint64_t v11 = NSManagedObjectContext.count<A>(for:)();

      if ((v11 & 0x8000000000000000) == 0) {
        return v11;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }

    return 0;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_100096774()
{
  return sub_100097360(type metadata accessor for FBARecentsInbox);
}

uint64_t type metadata accessor for FBARecentsInbox()
{
  return self;
}

uint64_t sub_1000968CC(uint64_t a1)
{
  id v3 = self;
  id v4 = [v3 sharedInstance];
  id v5 = [v4 currentUser];

  if (!v5) {
    return 0;
  }
  sub_100056B94(0, (unint64_t *)&qword_100122990);
  id v6 = [(id)swift_getObjCClassFromMetadata() entityName];
  if (v6)
  {
    id v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v8 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [v8 initWithEntityName:v9];

    id v11 = [v1 predicateForTeam:a1];
    uint64_t v12 = self;
    id v13 = [v12 needsActionPredicate];
    id v14 = [v12 assignedPredicateForUser:v5];
    if (v11)
    {
      id v15 = v11;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v13)
    {
      id v16 = v13;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v14)
    {
      id v17 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }

    sub_100056B94(0, (unint64_t *)&qword_100123348);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v19 = [self andPredicateWithSubpredicates:isa];

    [v10 setPredicate:v19];
    id v20 = [v3 sharedInstance];
    id v21 = [v20 mainQueueContext];

    if (v21)
    {
      uint64_t v22 = NSManagedObjectContext.count<A>(for:)();

      if ((v22 & 0x8000000000000000) == 0) {
        return v22;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }

    return 0;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_100096D78()
{
  return sub_100097360(type metadata accessor for FBARequestsInbox);
}

uint64_t type metadata accessor for FBARequestsInbox()
{
  return self;
}

uint64_t sub_100096EC8(uint64_t a1)
{
  sub_100056B94(0, (unint64_t *)&qword_100122990);
  id v3 = [(id)swift_getObjCClassFromMetadata() entityName];
  if (v3)
  {
    id v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v5 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithEntityName:v6];

    sub_10004DE60((uint64_t *)&unk_100123030);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1000D9110;
    id v9 = [v1 predicateForTeam:a1];
    if (v9)
    {
      *(void *)(v8 + 32) = v9;
      sub_100056B94(0, (unint64_t *)&qword_100123348);
      *(void *)(v8 + 40) = NSPredicate.init(format:_:)();
      specialized Array._endMutation()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v11 = [self andPredicateWithSubpredicates:isa];

      [v7 setPredicate:v11];
      id v12 = [self sharedInstance];
      id v13 = [v12 mainQueueContext];

      if (v13)
      {
        uint64_t v14 = NSManagedObjectContext.count<A>(for:)();

        if ((v14 & 0x8000000000000000) == 0) {
          return v14;
        }
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_100097304(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return [super init];
}

id sub_100097348()
{
  return sub_100097360(type metadata accessor for FBAAnnouncementsInbox);
}

id sub_100097360(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAAnnouncementsInbox()
{
  return self;
}

id sub_100097508()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  objc_super v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  NSString v6 = (char *)&v16 - v5;
  Date.init(timeIntervalSinceNow:)();
  Date.init()();
  sub_10004DE60((uint64_t *)&unk_1001238F0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000D88B0;
  *(void *)(v7 + 56) = v0;
  uint64_t v8 = sub_100056D18((uint64_t *)(v7 + 32));
  id v9 = *(void (**)(uint64_t *, char *, uint64_t))(v1 + 16);
  v9(v8, v6, v0);
  *(void *)(v7 + 88) = v0;
  id v10 = sub_100056D18((uint64_t *)(v7 + 64));
  v9(v10, v4, v0);
  NSString v11 = String._bridgeToObjectiveC()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self predicateWithFormat:v11 argumentArray:isa];

  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v4, v0);
  v14(v6, v0);
  return v13;
}

id sub_100097708()
{
  sub_10004DE60((uint64_t *)&unk_100123030);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000D9110;
  sub_100056B94(0, (unint64_t *)&qword_100123348);
  *(void *)(v0 + 32) = NSPredicate.init(format:_:)();
  *(void *)(v0 + 40) = [self isSurveyAvailablePredicate];
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [self orPredicateWithSubpredicates:isa];

  return v2;
}

unint64_t sub_100097820()
{
  unint64_t result = qword_100122998;
  if (!qword_100122998)
  {
    sub_100056B94(255, (unint64_t *)&qword_100122990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100122998);
  }
  return result;
}

id sub_100097938()
{
  uint64_t v1 = OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setNumberOfLines:0];
    id v5 = [self secondaryLabelColor];
    [v4 setTextColor:v5];

    id v6 = [self preferredFontForTextStyle:UIFontTextStyleCallout];
    [v4 setFont:v6];

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100097A54(char a1)
{
  if (a1 == 2)
  {
    id v2 = [self mainBundle];
    unint64_t v9 = 0xE000000000000000;
    unint64_t v3 = 0x80000001000E5030;
    unint64_t v4 = 0xD000000000000014;
  }
  else
  {
    id v2 = [self mainBundle];
    unint64_t v9 = 0xE000000000000000;
    if (a1)
    {
      unint64_t v4 = 5457241;
      unint64_t v3 = 0xE300000000000000;
    }
    else
    {
      unint64_t v4 = 20302;
      unint64_t v3 = 0xE200000000000000;
    }
  }
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v9 - 1));

  id v7 = sub_100097938();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8];

  id v10 = sub_100097938();
  [v10 sizeToFit];
}

void sub_100097BA8()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  [super awakeFromNib];
  id v1 = sub_100097938();
  [v0 setAccessoryView:v1];

  id v2 = [self mainBundle];
  v12._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001000E5030;
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v12);

  id v5 = sub_100097938();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v6];

  id v7 = sub_100097938();
  [v7 sizeToFit];

  id v8 = [v0 textLabel];
  if (v8)
  {
    unint64_t v9 = v8;
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setText:v10];
  }
}

id sub_100097D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = &v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_itemIdentifier];
  void *v5 = 0;
  v5[1] = 0xE000000000000000;
  NSString v6 = &v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery];
  void *v6 = 0;
  v6[1] = 0xE000000000000000;
  v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice] = 2;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel] = 0;
  if (a3)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  id v8 = [super initWithStyle:a1 reuseIdentifier:v7];

  return v8;
}

id sub_100097E8C(void *a1)
{
  Swift::String v3 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_itemIdentifier];
  *Swift::String v3 = 0;
  v3[1] = 0xE000000000000000;
  Swift::String v4 = &v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_validationQuery];
  void *v4 = 0;
  v4[1] = 0xE000000000000000;
  v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell_choice] = 2;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant20FBAFFUValidationCell____lazy_storage___choiceLabel] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  id v5 = [super initWithCoder:a1];

  return v5;
}

id sub_100097F44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAFFUValidationCell();
  [super dealloc];
}

uint64_t type metadata accessor for FBAFFUValidationCell()
{
  return self;
}

uint64_t sub_100098000(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

Class sub_10009810C(void *a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = a1;
  sub_100098448();

  swift_bridgeObjectRelease();
  sub_100056B94(0, &qword_100123AD8);
  sub_100098B10();
  v3.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

uint64_t sub_100098214()
{
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  id v1 = [(objc_class *)isa userInfo];

  if (!v1)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v9 + 1) = v3;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v2 + 16) && (unint64_t v4 = sub_100073F10((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_100053854(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100073F54((uint64_t)v8);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_9;
  }
  uint64_t v6 = 1;
LABEL_10:
  sub_100055344((uint64_t)&v9);
  return v6;
}

uint64_t sub_100098374()
{
  Notification.object.getter();
  if (v3)
  {
    sub_100056B94(0, &qword_100123AD0);
    if (swift_dynamicCast()) {
      return v1;
    }
  }
  else
  {
    sub_100055344((uint64_t)v2);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100098448()
{
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  id v1 = [(objc_class *)isa userInfo];

  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_10:
    sub_100055344((uint64_t)&v7);
    return &_swiftEmptySetSingleton;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_100073F10((uint64_t)v6), (v4 & 1) != 0))
  {
    sub_100053854(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100073F54((uint64_t)v6);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_10;
  }
  sub_10004DE60(&qword_100123AC8);
  if (swift_dynamicCast()) {
    return (void *)v6[0];
  }
  return &_swiftEmptySetSingleton;
}

id sub_1000985CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAManagedObjectChanges();
  return [super dealloc];
}

uint64_t sub_100098670()
{
  return type metadata accessor for FBAManagedObjectChanges();
}

uint64_t type metadata accessor for FBAManagedObjectChanges()
{
  uint64_t result = qword_100123AB8;
  if (!qword_100123AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000986C4()
{
  uint64_t result = type metadata accessor for Notification();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100098754(uint64_t a1, uint64_t a2)
{
  id v5 = [self defaultCenter];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  void v10[4] = sub_100098AF0;
  void v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_100098000;
  v10[3] = &unk_1000F6310;
  long long v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  id v8 = [v5 addObserverForName:NSManagedObjectContextObjectsDidChangeNotification object:v2 queue:0 usingBlock:v7];
  _Block_release(v7);

  return v8;
}

void sub_10009888C(uint64_t a1, void (*a2)(id))
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  long long v9 = (objc_class *)type metadata accessor for FBAManagedObjectChanges();
  long long v10 = (char *)objc_allocWithZone(v9);
  v8(&v10[OBJC_IVAR____TtC18Feedback_Assistant23FBAManagedObjectChanges_notification], (uint64_t)v7, v4);
  v12.receiver = v10;
  v12.super_class = v9;
  [super init];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2(v11);
}

uint64_t sub_100098A80()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100098AB8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100098AF0(uint64_t a1)
{
  sub_10009888C(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_100098AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100098B08()
{
  return swift_release();
}

unint64_t sub_100098B10()
{
  unint64_t result = qword_100123AE0;
  if (!qword_100123AE0)
  {
    sub_100056B94(255, &qword_100123AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123AE0);
  }
  return result;
}

void sub_100098B78(uint64_t a1, uint64_t a2)
{
  sub_100056B94(0, (unint64_t *)&unk_100122F70);
  sub_100060DE8();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_100098D1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADevicePickerCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for FBADevicePickerCoordinator()
{
  return self;
}

uint64_t sub_100098D74()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100098DAC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100056B94(0, (unint64_t *)&unk_100122F70);
  sub_100060DE8();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100098E3C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  long long v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100056B94(0, (unint64_t *)&qword_100122970);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_100060D14;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000992C4;
  void aBlock[3] = &unk_1000F63B0;
  id v13 = _Block_copy(aBlock);
  id v14 = a2;
  id v15 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007AD4C();
  sub_10004DE60((uint64_t *)&unk_100122980);
  sub_10004DEA4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
}

void sub_1000990D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_allocWithZone((Class)FBADevicePickingNavigationController);
  sub_100056B94(0, (unint64_t *)&unk_100122F70);
  sub_100060DE8();
  swift_bridgeObjectRetain();
  swift_retain();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12[4] = a3;
  v12[5] = a4;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100098DAC;
  void v12[3] = &unk_1000F6360;
  uint64_t v9 = _Block_copy(v12);
  id v10 = [v7 initWithDeviceChoices:isa allowsMultipleSelection:1 completion:v9];

  _Block_release(v9);
  swift_release();
  if (v10)
  {
    id v11 = v10;
    sub_100098E3C(v11, a2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100099224(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100099234()
{
  return swift_release();
}

uint64_t sub_10009923C()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for FBAError.NotLocalized()
{
  return &type metadata for FBAError.NotLocalized;
}

uint64_t sub_100099294()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000992C4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1000993E0()
{
  qword_100125F78 = 0x65437265746C6946;
  unk_100125F80 = 0xEA00000000006C6CLL;
}

id sub_100099494()
{
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  id v6 = [self tintColor];
  [v5 setTintColor:v6];

  id v7 = [v0 traitCollection];
  id v8 = [v7 preferredContentSizeCategory];

  sub_1000996F8();
  [v0 setIsAccessibilityElement:1];
  UIAccessibilityTraits v9 = UIAccessibilityTraitButton;

  return [v0 setAccessibilityTraits:v9];
}

void sub_1000996F8()
{
  char v0 = UIContentSizeCategory.isAccessibilityCategory.getter();
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = Strong;
  if ((v0 & 1) == 0)
  {
    if (Strong)
    {
      [Strong setNumberOfLines:1];

      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        uint64_t v4 = (void *)v6;
        id v5 = [self boldSystemFontOfSize:24.0];
        goto LABEL_8;
      }
LABEL_14:
      __break(1u);
      return;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!Strong)
  {
    __break(1u);
    goto LABEL_12;
  }
  [Strong setNumberOfLines:2];

  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (!v3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = (void *)v3;
  id v5 = [self boldSystemFontOfSize:32.0];
LABEL_8:
  id v7 = v5;
  [v4 setFont:];
}

void sub_100099838(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v5 = (void *)Strong;
  NSString v6 = [a1 displayText];
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v5 setText:v6];

  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (!v7) {
    goto LABEL_16;
  }
  id v8 = (void *)v7;
  id v9 = [a1 iconConfiguration];
  [v8 setPreferredSymbolConfiguration:v9];

  id v10 = [a1 unreadCountForTeam:0];
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = (void *)v11;
  dispatch thunk of CustomStringConvertible.description.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v13];

  uint64_t v14 = swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  id v15 = (void *)v14;
  id v16 = [a1 icon];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [self configurationWithPointSize:20.0];
    id v19 = [v17 imageByApplyingSymbolConfiguration:v18];
  }
  else
  {
    id v19 = 0;
  }
  [v15 setImage:v19];

  uint64_t v20 = swift_unknownObjectWeakLoadStrong();
  if (!v20) {
    goto LABEL_19;
  }
  id v21 = (void *)v20;
  id v22 = [self tintColor];
  [v21 setTintColor:v22];

  sub_100099C6C((uint64_t)v10, a1);
  if (v23)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v24 = 0;
  }
  [v2 setAccessibilityLabel:v24];

  id v25 = [v2 contentView];
  id v26 = [v25 layer];

  [v26 setCornerRadius:15.0];
  id v27 = [v2 contentView];
  id v28 = [v27 layer];

  [v28 setBorderWidth:1.0];
  id v29 = [v2 contentView];
  id v30 = [v29 layer];

  id v31 = [self clearColor];
  id v32 = [v31 CGColor];

  [v30 setBorderColor:v32];
  id v33 = [v2 contentView];
  id v34 = [v33 layer];

  [v34 setMasksToBounds:1];
}

uint64_t sub_100099C6C(uint64_t a1, id a2)
{
  unsigned int v4 = [a2 isCountingUnreadOnly];
  if (a1 == 1)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    id v8 = [self mainBundle];
    if (v4)
    {
      unint64_t v9 = 0xD000000000000021;
      unint64_t v36 = 0xE000000000000000;
      unint64_t v10 = 0x80000001000E53A0;
    }
    else
    {
      unint64_t v9 = 0xD00000000000001ALL;
      unint64_t v36 = 0xE000000000000000;
      unint64_t v10 = 0x80000001000E5380;
    }
    v11.value._uint64_t countAndFlagsBits = v5;
    v11.value._object = v7;
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    uint64_t v13 = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v11, (NSBundle)v8, v12, *(Swift::String *)(&v36 - 1));
    swift_bridgeObjectRelease();

    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1000D86F0;
    id v25 = [a2 displayText];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100054550();
    *(void *)(v14 + 32) = v26;
    *(void *)(v14 + 40) = v28;
  }
  else
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
    id v18 = [self mainBundle];
    unint64_t v37 = 0xE000000000000000;
    if (v4)
    {
      unint64_t v19 = 0x80000001000E5360;
      unint64_t v20 = 0xD000000000000013;
    }
    else
    {
      unint64_t v20 = 0x69207525202C4025;
      unint64_t v19 = 0xEC000000736D6574;
    }
    v21.value._uint64_t countAndFlagsBits = v15;
    v21.value._object = v17;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    uint64_t v23 = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, v21, (NSBundle)v18, v22, *(Swift::String *)(&v37 - 1));
    swift_bridgeObjectRelease();

    sub_10004DE60((uint64_t *)&unk_100122860);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1000D88B0;
    id v29 = [a2 displayText];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v33 = sub_100054550();
    *(void *)(v24 + 32) = v30;
    *(void *)(v24 + 40) = v32;
    *(void *)(v24 + 96) = &type metadata for UInt;
    *(void *)(v24 + 104) = &protocol witness table for UInt;
    *(void *)(v24 + 64) = v33;
    *(void *)(v24 + 72) = a1;
  }
  uint64_t v34 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v34;
}

void sub_10009A098(void *a1)
{
  id v1 = [a1 contentView];
  id v2 = [self tintColor];
  [v1 setBackgroundColor:v2];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_7;
  }
  unsigned int v4 = (void *)Strong;
  uint64_t v5 = self;
  id v6 = [v5 whiteColor];
  [v4 setTextColor:v6];

  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v8 = (void *)v7;
  id v9 = [v5 whiteColor];
  [v8 setTextColor:v9];
}

void sub_10009A1E4(void *a1)
{
  id v1 = [a1 contentView];
  id v2 = self;
  id v3 = [v2 tableCellGroupedBackgroundColor];
  [v1 setBackgroundColor:v3];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = (void *)Strong;
  id v6 = [v2 labelColor];
  [v5 setTextColor:v6];

  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v8 = (void *)v7;
  id v9 = [v2 labelColor];
  [v8 setTextColor:v9];
}

void sub_10009A3C0(char a1)
{
  id v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  if (a1)
  {
    Swift::String v12 = sub_10009A760;
    uint64_t v13 = v4;
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v5 = &unk_1000F64D0;
  }
  else
  {
    Swift::String v12 = sub_10009A740;
    uint64_t v13 = v4;
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v5 = &unk_1000F6480;
  }
  unint64_t v10 = sub_1000992C4;
  Swift::String_optional v11 = v5;
  id v6 = _Block_copy(&v8);
  id v7 = v1;
  swift_release();
  [v3 animateWithDuration:v6 animations:0.07, v8, v9];
  _Block_release(v6);
}

id sub_10009A654()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBASmartMailboxCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBASmartMailboxCell()
{
  return self;
}

uint64_t sub_10009A708()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10009A740()
{
  sub_10009A1E4(*(void **)(v0 + 16));
}

uint64_t sub_10009A748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009A758()
{
  return swift_release();
}

void sub_10009A760()
{
  sub_10009A098(*(void **)(v0 + 16));
}

void sub_10009A9BC()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
  if (v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState])
  {
    uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView;
    uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
    if (!v4)
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    [v4 setHidden:0];
    uint64_t v82 = v3;
    if (v0[v2] == 4)
    {
      uint64_t v5 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel;
      id v6 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (!v6)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      id v7 = self;
      id v8 = v6;
      id v9 = [v7 tintColor];
      [v8 setTextColor:v9];

      if (qword_100121E50 == -1)
      {
        unint64_t v10 = *(void **)&v1[v3];
        if (v10)
        {
LABEL_7:
          Swift::String_optional v11 = *(void **)&v1[v5];
          if (!v11)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          double v12 = *((double *)&xmmword_100123B58 + 1);
          double v13 = *(double *)&xmmword_100123B58;
          uint64_t v14 = qword_100123B68;
          double v15 = unk_100123B70;
          uint64_t v16 = qword_100123B78;
          uint64_t v17 = unk_100123B80;
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (!Strong)
          {
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          unint64_t v19 = (void *)Strong;
          uint64_t v81 = v16;
          uint64_t v20 = swift_unknownObjectWeakLoadStrong();
          if (!v20)
          {
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          Swift::String_optional v21 = (void *)v20;
          id v22 = v10;
          id v23 = v11;
          id v24 = [v22 layer];
          [v24 setBorderWidth:v15];

          id v25 = [v22 layer];
          goto LABEL_24;
        }
      }
      else
      {
        swift_once();
        unint64_t v10 = *(void **)&v1[v3];
        if (v10) {
          goto LABEL_7;
        }
      }
      __break(1u);
    }
    else if (qword_100121E58 == -1)
    {
      uint64_t v32 = *(void **)&v0[v3];
      if (!v32)
      {
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_20:
      unint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (!v33)
      {
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      double v12 = *((double *)&xmmword_100123B88 + 1);
      double v13 = *(double *)&xmmword_100123B88;
      uint64_t v14 = qword_100123B98;
      double v34 = unk_100123BA0;
      uint64_t v35 = qword_100123BA8;
      uint64_t v17 = unk_100123BB0;
      uint64_t v36 = swift_unknownObjectWeakLoadStrong();
      if (!v36)
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      unint64_t v19 = (void *)v36;
      uint64_t v81 = v35;
      uint64_t v37 = swift_unknownObjectWeakLoadStrong();
      if (!v37)
      {
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      Swift::String_optional v21 = (void *)v37;
      id v22 = v32;
      id v23 = v33;
      id v38 = [v22 layer];
      [v38 setBorderWidth:v34];

      id v25 = [v22 layer];
LABEL_24:
      id v39 = v25;
      [v39 setCornerRadius:*(double *)&v14];

      [v22 setBackgroundColor:v17];
      [v19 setConstant:v13];
      [v21 setConstant:v12];
      [v23 setFont:v81];

      uint64_t v40 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (v1[v2] == 1)
      {
        if (!v40)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v41 = self;
        id v42 = v40;
        id v43 = [v41 systemGrayColor];
      }
      else
      {
        if (!v40)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        id v44 = self;
        id v42 = v40;
        id v43 = [v44 tintColor];
      }
      id v45 = v43;
      [v42 setTextColor:v45];

      sub_10009B31C();
      int v46 = v1[v2];
      if (v46 == 4)
      {
        uint64_t v56 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
        if (!v56)
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        uint64_t v57 = self;
        id v52 = v56;
        id v58 = [v57 mainBundle];
        v84._object = (void *)0x80000001000E5610;
        v59._uint64_t countAndFlagsBits = 0x4E47495353414552;
        v59._object = (void *)0xE800000000000000;
        v60._uint64_t countAndFlagsBits = 0x6E67697373616552;
        v60._object = (void *)0xE800000000000000;
        v84._uint64_t countAndFlagsBits = 0xD000000000000056;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v84);

        NSString v61 = String._bridgeToObjectiveC()();
      }
      else
      {
        if (v46 == 1)
        {
          objc_super v47 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
          if (!v47)
          {
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v50 = v49;
          uint64_t v51 = self;
          id v52 = v47;
          id v53 = [v51 mainBundle];
          unint64_t v80 = 0xE000000000000000;
          uint64_t v54 = 0x54414E494749524FLL;
          unint64_t v55 = 0xEA0000000000524FLL;
        }
        else
        {
          uint64_t v62 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
          if (!v62)
          {
LABEL_71:
            __break(1u);
            return;
          }
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v50 = v63;
          uint64_t v64 = self;
          id v52 = v62;
          id v53 = [v64 mainBundle];
          unint64_t v80 = 0xE000000000000000;
          uint64_t v54 = 0x45454E4749535341;
          unint64_t v55 = 0xE800000000000000;
        }
        v65.value._uint64_t countAndFlagsBits = v48;
        v65.value._object = v50;
        v66._uint64_t countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        uint64_t v67 = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v54, v65, (NSBundle)v53, v66, *(Swift::String *)(&v80 - 1));
        swift_bridgeObjectRelease();

        NSString v61 = String._bridgeToObjectiveC()();
      }
      swift_bridgeObjectRelease();
      [v52 setText:v61];

      id v68 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
      if (v68)
      {
        id v69 = v68;
        NSString v70 = [v69 text];
        if (v70)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1000524C0();
          StringProtocol.localizedUppercase.getter();
          swift_bridgeObjectRelease();
          NSString v70 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v69 setText:v70];

        uint64_t v71 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint;
        [*(id *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint] setActive:0];
        if (v1[v2] != 4)
        {
          unint64_t v75 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
          if (v75)
          {
            id v73 = [v75 centerYAnchor];
            uint64_t v74 = *(void **)&v1[v82];
            if (v74) {
              goto LABEL_46;
            }
            goto LABEL_68;
          }
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        id v72 = [v1 contentView];
        id v73 = [v72 centerYAnchor];

        uint64_t v74 = *(void **)&v1[v82];
        if (v74)
        {
LABEL_46:
          id v76 = [v74 centerYAnchor];
          id v77 = [v73 constraintEqualToAnchor:v76];

          uint64_t v78 = *(void **)&v1[v71];
          *(void *)&v1[v71] = v77;

          int v79 = *(void **)&v1[v71];
          if (v79) {
            [v79 setActive:1];
          }
          return;
        }
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      goto LABEL_54;
    }
    swift_once();
    uint64_t v32 = *(void **)&v1[v3];
    if (!v32) {
      goto LABEL_52;
    }
    goto LABEL_20;
  }
  uint64_t v26 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
  if (!v26)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  id v27 = v26;
  NSString v28 = String._bridgeToObjectiveC()();
  [v27 setText:v28];

  id v29 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
  if (!v29)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  [v29 setHidden:1];
  uint64_t v30 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint;
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint];
  if (v31)
  {
    [v31 setActive:0];
    uint64_t v31 = *(void **)&v1[v30];
  }
  *(void *)&v1[v30] = 0;
}

void sub_10009B31C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) != 1)
  {
    if (v1)
    {
      id v2 = [v1 layer];
      id v5 = [self tintColor];
      if (v5)
      {
        id v3 = v5;
        id v4 = [v5 CGColor];
        goto LABEL_7;
      }
LABEL_12:
      __break(1u);
      return;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v2 = [v1 layer];
  id v3 = [self systemGrayColor];
  id v4 = [v3 CGColor];
LABEL_7:
  id v6 = v4;

  [v2 setBorderColor:v6];
}

void sub_10009B44C()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  [super awakeFromNib];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel];
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if (!v2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView;
  id v4 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel];
  if (!v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v6 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView;
  id v7 = *(void **)&v0[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView];
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = *(void **)&v0[v3];
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v9 = [v8 layer];
  unint64_t v10 = *(void **)&v0[v3];
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  [v10 frame];
  [v9 setCornerRadius:v11 * 0.5];

  double v12 = *(void **)&v0[v6];
  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v13 = [v12 layer];
  [v13 setCornerRadius:5.0];

  uint64_t v14 = *(void **)&v0[v6];
  if (v14)
  {
    id v15 = [v14 layer];
    [v15 setBorderWidth:1.0];

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_10009B640(void *a1)
{
  if (!a1)
  {
    id v8 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
    if (v8)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      double v11 = v10;
      double v12 = self;
      id v13 = v8;
      id v14 = [v12 mainBundle];
      v26._object = (void *)0xE000000000000000;
      v15._uint64_t countAndFlagsBits = 0x5F4E574F4E4B4E55;
      v15._object = (void *)0xEC00000052455355;
      v16.value._uint64_t countAndFlagsBits = v9;
      v16.value._object = v11;
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v26._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v26);
      swift_bridgeObjectRelease();

      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v13 setText:v18];

      unint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
      if (v19)
      {
        uint64_t v20 = (void *)FBKSystemImageNameGenericUser;
        Swift::String_optional v21 = self;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v7 = v19;
        id v22 = v20;
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v24 = [v21 systemImageNamed:v23];

        [v7 setImage:v24];
        goto LABEL_10;
      }
LABEL_16:
      __break(1u);
      return;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v3 = a1;
  id v4 = v2;
  NSString v5 = [v3 fullName];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v4 setText:v5];

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
  if (!v6) {
    goto LABEL_14;
  }
  id v7 = v6;
  id v24 = [v3 contactImage];
  [v7 setImage:];

LABEL_10:
}

void sub_10009B8E4(void *a1)
{
  id v2 = v1;
  id v4 = [a1 originator];
  sub_10009B640(v4);

  NSString v5 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if (!v5)
  {
    __break(1u);
    return;
  }
  id v6 = v5;
  NSString v7 = [a1 formattedCreationDate];
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v6 setText:v7];

  id v8 = [a1 singleTeam];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 teamType];

    if (!v10)
    {
      char v16 = 0;
      goto LABEL_16;
    }
  }
  id v11 = [a1 originator];
  id v12 = [a1 assignee];
  id v13 = v12;
  if (v11)
  {
    if (v12)
    {
      sub_10009D52C();
      id v14 = v11;
      char v15 = static NSObject.== infix(_:_:)();

      if ((v15 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    id v13 = v11;
LABEL_14:

LABEL_15:
    char v16 = 1;
    goto LABEL_16;
  }
  if (v12) {
    goto LABEL_14;
  }
LABEL_11:
  char v16 = 3;
LABEL_16:
  v2[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = v16;
  sub_10009A9BC();
  if ([a1 canReassignFeedback]) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = 0;
  }

  [v2 setSelectionStyle:v17];
}

void sub_10009BB28(void *a1)
{
  uint64_t v3 = sub_10004DE60(&qword_100123228);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v70 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v70 - v14;
  id v16 = [a1 originator];
  uint64_t v71 = v1;
  sub_10009B640(v16);

  id v17 = [a1 respondedToAt];
  if (!v17)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v20(v8, 1, 1, v9);
    goto LABEL_10;
  }
  NSString v18 = v17;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v8, v13, v9);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v20(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_10009D4CC((uint64_t)v8);
    Swift::String v26 = *(void **)(v71 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
    if (!v26)
    {
LABEL_58:
      __break(1u);
LABEL_59:
      v20(v6, 1, 1, v9);
      goto LABEL_60;
    }
    uint64_t v27 = qword_100121E48;
    id v28 = v26;
    if (v27 != -1) {
      swift_once();
    }
    id v29 = (void *)qword_100123B50;
    id v30 = [a1 createdAt];
    if (!v30) {
      goto LABEL_59;
    }
    uint64_t v31 = v30;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v13, v9);
    v20(v6, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    NSString v33 = [v29 stringFromDate:isa];

    if (!v33)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v34;
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v28 setText:v33];

LABEL_18:
    id v35 = [a1 feedback];
    if (v35)
    {
      uint64_t v36 = v35;
      id v37 = [v35 contentItem];

      if (v37)
      {
        id v38 = [v37 singleTeam];
        if (v38)
        {
          id v39 = v38;
          id v40 = [v38 teamType];

          if (!v40) {
            goto LABEL_53;
          }
        }
        id v41 = [a1 originator];
        id v42 = [v37 originator];
        id v43 = v42;
        if (v41)
        {
          if (!v42)
          {
LABEL_34:
            id v43 = v41;
            goto LABEL_36;
          }
          sub_10009D52C();
          id v44 = v41;
          char v45 = static NSObject.== infix(_:_:)();

          if ((v45 & 1) == 0)
          {
LABEL_37:
            id v58 = [a1 originator];
            id v59 = [v37 originator];
            Swift::String v60 = v59;
            if (v58)
            {
              if (v59)
              {
                sub_10009D52C();
                id v61 = v58;
                char v62 = static NSObject.== infix(_:_:)();

                if ((v62 & 1) == 0)
                {
LABEL_45:
                  id v65 = [a1 originator];
                  id v66 = [v37 assignee];
                  uint64_t v67 = v66;
                  if (v65)
                  {
                    if (v66)
                    {
                      sub_10009D52C();
                      id v68 = v65;
                      char v69 = static NSObject.== infix(_:_:)();

                      if ((v69 & 1) == 0) {
                        goto LABEL_53;
                      }
                      goto LABEL_50;
                    }
                    uint64_t v67 = v65;
                  }
                  else if (!v66)
                  {
LABEL_50:
                    uint64_t v63 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
                    char v64 = 2;
                    goto LABEL_55;
                  }

LABEL_53:
                  *(unsigned char *)(v71 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) = 0;
LABEL_56:
                  sub_10009A9BC();

                  return;
                }
LABEL_42:
                uint64_t v63 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
                char v64 = 1;
LABEL_55:
                *(unsigned char *)(v71 + v63) = v64;
                goto LABEL_56;
              }
              Swift::String v60 = v58;
            }
            else if (!v59)
            {
              goto LABEL_42;
            }

            goto LABEL_45;
          }
        }
        else if (v42)
        {
          goto LABEL_36;
        }
        id v41 = [v37 originator];
        id v55 = [v37 assignee];
        id v43 = v55;
        if (v41)
        {
          if (v55)
          {
            sub_10009D52C();
            id v56 = v41;
            char v57 = static NSObject.== infix(_:_:)();

            if ((v57 & 1) == 0) {
              goto LABEL_37;
            }
LABEL_54:
            uint64_t v63 = OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState;
            char v64 = 3;
            goto LABEL_55;
          }
          goto LABEL_34;
        }
        if (!v55) {
          goto LABEL_54;
        }
LABEL_36:

        goto LABEL_37;
      }
      static os_log_type_t.error.getter();
      id v46 = [self appHandle];
      if (v46)
      {
        objc_super v47 = v46;
        sub_10004DE60((uint64_t *)&unk_100122860);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1000D86F0;
        id v49 = [a1 ID];
        if (v49)
        {
          uint64_t v50 = v49;
          id v51 = [v49 stringValue];

          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v54 = v53;

          *(void *)(v48 + 56) = &type metadata for String;
          *(void *)(v48 + 64) = sub_100054550();
          *(void *)(v48 + 32) = v52;
          *(void *)(v48 + 40) = v54;
          os_log(_:dso:log:_:_:)();

          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_62;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    __break(1u);
    goto LABEL_58;
  }
  v19(v15, v8, v9);
  Swift::String_optional v21 = *(void **)(v71 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
  if (v21)
  {
    uint64_t v22 = qword_100121E48;
    id v6 = v21;
    if (v22 != -1) {
      swift_once();
    }
    NSString v23 = (void *)qword_100123B50;
    Class v24 = Date._bridgeToObjectiveC()().super.isa;
    NSString v25 = [v23 stringFromDate:v24];

    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v6 setText:v25];

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    goto LABEL_18;
  }
LABEL_63:
  __break(1u);
}

id sub_10009C414(void *a1)
{
  id v3 = [a1 assignee];
  sub_10009B640(v3);

  if ([a1 canReassignFeedback]) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 0;
  }
  [v1 setSelectionStyle:v4];
  id result = [a1 isOrphaned];
  id v6 = *(void **)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel];
  if (result)
  {
    if (v6)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      uint64_t v10 = self;
      id v11 = v6;
      id v12 = [v10 mainBundle];
      v30._object = (void *)0xE000000000000000;
      v13._uint64_t countAndFlagsBits = 0x44454E414850524FLL;
      v13._object = (void *)0xEE004C4542414C5FLL;
      v14.value._uint64_t countAndFlagsBits = v7;
      v14.value._object = v9;
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v30._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v30);
      swift_bridgeObjectRelease();

      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v11 setText:v16];

      if ([a1 canReassignFeedback]) {
        char v17 = 4;
      }
      else {
        char v17 = 0;
      }
      v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = v17;
      sub_10009A9BC();
      uint64_t v18 = 0;
      goto LABEL_12;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if (!v6) {
    goto LABEL_16;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String_optional v21 = v20;
  uint64_t v22 = self;
  id v23 = v6;
  id v24 = [v22 mainBundle];
  v31._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0x45454E4749535341;
  v25._object = (void *)0xE800000000000000;
  v26.value._uint64_t countAndFlagsBits = v19;
  v26.value._object = v21;
  v27._uint64_t countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v31);
  swift_bridgeObjectRelease();

  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setText:v28];

  v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
  sub_10009A9BC();
  uint64_t v18 = [a1 canReassignFeedback];
LABEL_12:

  return [v1 setAccessoryType:v18];
}

void sub_10009C748(void *a1)
{
  uint64_t v2 = v1;
  id v38 = a1;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10004DE60(&qword_100123228);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel);
  if (!v10)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v13 = v12;
  Swift::String_optional v14 = self;
  id v15 = v10;
  id v16 = [v14 mainBundle];
  v39._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v39._object = (void *)0x80000001000E55F0;
  v17._object = (void *)0x80000001000E55D0;
  v17._uint64_t countAndFlagsBits = 0xD000000000000013;
  v18.value._uint64_t countAndFlagsBits = v11;
  v18.value._object = v13;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v39);
  swift_bridgeObjectRelease();

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v20];

  Swift::String_optional v21 = *(void **)(v2 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel);
  if (!v21)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    goto LABEL_14;
  }
  uint64_t v22 = v2;
  uint64_t v23 = qword_100121E48;
  id v24 = v21;
  if (v23 != -1) {
    swift_once();
  }
  Swift::String v25 = (void *)qword_100123B50;
  id v26 = [v38 createdAt];
  if (!v26) {
    goto LABEL_13;
  }
  Swift::String v27 = v26;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  NSString v29 = [v25 stringFromDate:isa];

  if (!v29)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v24 setText:v29];

  Swift::String v30 = *(void **)(v22 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView);
  if (v30)
  {
    Swift::String v31 = (void *)FBKImageNameAppleAvatar;
    uint64_t v32 = self;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v30;
    id v34 = v31;
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v32 imageNamed:v35];

    [v33 setImage:v36];
    *(unsigned char *)(v22 + OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState) = 0;
    sub_10009A9BC();
    return;
  }
LABEL_15:
  __break(1u);
}

id sub_10009CD68()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v0 setDateStyle:2];
  id result = [v0 setTimeStyle:1];
  qword_100123B50 = (uint64_t)v0;
  return result;
}

id sub_10009CDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint] = 0;
  v3[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
  if (a3)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  [super initWithStyle:a1 reuseIdentifier:v6];

  return v7;
}

id sub_10009CF1C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_nameLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_dateLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_contactImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleLabel] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleCenteringConstraint] = 0;
  v1[OBJC_IVAR____TtC18Feedback_Assistant21FBAResponseHeaderCell_roleState] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id sub_10009D010()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAResponseHeaderCell();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAResponseHeaderCell()
{
  return self;
}

uint64_t getEnumTagSinglePayload for RoleState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RoleState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009D270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoleState()
{
  return &type metadata for RoleState;
}

unint64_t sub_10009D2AC()
{
  unint64_t result = qword_100123C28;
  if (!qword_100123C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123C28);
  }
  return result;
}

double sub_10009D300()
{
  id v0 = [self boldSystemFontOfSize:14.0];
  id v1 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleCaption1];
  id v2 = [v1 scaledFontForFont:v0 maximumPointSize:18.0];

  id v3 = [self tertiarySystemFillColor];
  double result = 15.0;
  xmmword_100123B58 = xmmword_1000D9590;
  *(_OWORD *)&qword_100123B68 = xmmword_1000D95A0;
  qword_100123B78 = (uint64_t)v2;
  unk_100123B80 = v3;
  return result;
}

double sub_10009D3E0()
{
  id v0 = [self systemFontOfSize:10.0 weight:UIFontWeightBold];
  id v1 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleCaption1];
  id v2 = [v1 scaledFontForFont:v0 maximumPointSize:18.0];

  id v3 = [self clearColor];
  double result = 7.0;
  xmmword_100123B88 = xmmword_1000D95B0;
  *(_OWORD *)&qword_100123B98 = xmmword_1000D95C0;
  qword_100123BA8 = (uint64_t)v2;
  unk_100123BB0 = v3;
  return result;
}

uint64_t sub_10009D4CC(uint64_t a1)
{
  uint64_t v2 = sub_10004DE60(&qword_100123228);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10009D52C()
{
  unint64_t result = qword_100122C18;
  if (!qword_100122C18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100122C18);
  }
  return result;
}

uint64_t sub_10009D56C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_100125F88);
  sub_1000537C4(v0, (uint64_t)qword_100125F88);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

void sub_10009D5E4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  os_log_t v21 = *(os_log_t *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self standardUserDefaults];
  unsigned int v12 = [v11 BOOLForKey:FBKDirectoriesMigratorDidRun];

  if (v12)
  {
    if (qword_100121E60 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000537C4(v13, (uint64_t)qword_100125F88);
    os_log_t v21 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v14, "Directory migration already done", v15, 2u);
      swift_slowDealloc();
    }
    os_log_t v16 = v21;
  }
  else
  {
    sub_10004DE18();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.background(_:), v7);
    Swift::String v17 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v20[1];
    aBlock[4] = sub_10009F2B4;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000992C4;
    void aBlock[3] = &unk_1000F65B0;
    Swift::String v19 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter();
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_10009F2D4((unint64_t *)&qword_100121FB0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10004DE60((uint64_t *)&unk_100122980);
    sub_10004DEA4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    ((void (*)(char *, uint64_t))v21[1].isa)(v2, v0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
  }
}

void sub_10009DA78()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100121E60 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000537C4(v4, (uint64_t)qword_100125F88);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Migrating directories", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [self defaultManager];
  id v9 = [v8 URLsForDirectory:5 inDomains:1];

  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v10 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v10 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v0);
    swift_bridgeObjectRelease();
    sub_10009DEC4();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Did finish migrating directories", v13, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10009DD3C()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultManager];
  id v5 = [v4 URLsForDirectory:14 inDomains:1];

  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v6 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v6 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v0);
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10009DEC4()
{
  uint64_t v1 = v0;
  uint64_t v94 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v94 - 8);
  uint64_t v3 = __chkstk_darwin(v94);
  id v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  id v8 = (char *)&v82 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v82 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v82 - v12;
  uint64_t v14 = (objc_class *)[self defaultManager];
  URL.appendingPathComponent(_:)();
  id v15 = self;
  URL._bridgeToObjectiveC()(v16);
  uint64_t v18 = v17;
  id v92 = v15;
  unsigned __int8 v19 = [v15 isValidDirectory:v17];

  if (v19)
  {
    uint64_t v86 = v1;
    uint64_t v91 = v14;
    if (qword_100121E60 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    uint64_t v21 = sub_1000537C4(v20, (uint64_t)qword_100125F88);
    id v83 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v83(v11, v13, v94);
    uint64_t v87 = v21;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v90 = v13;
    Swift::String v84 = v5;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v89 = v2;
      id v26 = (uint8_t *)v25;
      id v96 = (id)swift_slowAlloc();
      uint64_t v85 = v8;
      uint64_t v27 = v94;
      *(_DWORD *)id v26 = 136315138;
      sub_10009F2D4(&qword_100122870, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v95 = sub_10009EC3C(v28, v29, (uint64_t *)&v96);
      uint64_t v30 = v27;
      uint64_t v13 = v90;
      id v8 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v88 = *(void (**)(char *, uint64_t))(v89 + 8);
      v88(v11, v30);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Deleting %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v89;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v88 = *(void (**)(char *, uint64_t))(v2 + 8);
      v88(v11, v94);
    }

    Class v34 = v91;
    id v93 = self;
    id v40 = [v93 standardUserDefaults];
    id v41 = (id)FBKDirectoriesMigratorDryRun;
    unsigned __int8 v42 = [v40 BOOLForKey:FBKDirectoriesMigratorDryRun];

    if ((v42 & 1) == 0)
    {
      URL._bridgeToObjectiveC()(v43);
      char v45 = v44;
      id v96 = 0;
      unsigned int v46 = [(objc_class *)v34 removeItemAtURL:v44 error:&v96];

      if (!v46)
      {
        id v92 = v41;
        uint64_t v89 = v2;
        id v63 = v96;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        goto LABEL_29;
      }
      id v47 = v96;
    }
    sub_10009DD3C();
    URL._bridgeToObjectiveC()(v48);
    uint64_t v50 = v49;
    unsigned __int8 v51 = [v92 isValidDirectory:v49];

    if ((v51 & 1) == 0)
    {
      Swift::String v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v60, v61))
      {
        char v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Feedback Assistant App Support directory is not reachable", v62, 2u);
        swift_slowDealloc();
      }

      goto LABEL_25;
    }
    uint64_t v52 = v84;
    v83(v84, v8, v94);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v85 = v8;
      uint64_t v56 = v94;
      char v57 = (uint8_t *)v55;
      id v96 = (id)swift_slowAlloc();
      id v92 = v41;
      *(_DWORD *)char v57 = 136315138;
      sub_10009F2D4(&qword_100122870, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v95 = sub_10009EC3C(v58, v59, (uint64_t *)&v96);
      Class v34 = v91;
      id v41 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v88(v52, v56);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Deleting %s", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v8 = v85;
      swift_slowDealloc();
    }
    else
    {
      v88(v52, v94);
    }

    id v64 = [v93 standardUserDefaults];
    unsigned __int8 v65 = [v64 BOOLForKey:v41];

    uint64_t v13 = v90;
    if (v65)
    {
LABEL_25:
      v88(v8, v94);
      goto LABEL_33;
    }
    URL._bridgeToObjectiveC()(v66);
    id v68 = v67;
    id v96 = 0;
    unsigned int v69 = [(objc_class *)v34 removeItemAtURL:v67 error:&v96];

    if (v69)
    {
      id v70 = v96;
      v88(v8, v94);
      goto LABEL_33;
    }
    id v92 = v41;
    id v71 = v96;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v89 = v2;
    v88(v8, v94);
LABEL_29:
    swift_errorRetain();
    swift_errorRetain();
    id v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      id v96 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315138;
      swift_getErrorValue();
      uint64_t v75 = Error.localizedDescription.getter();
      uint64_t v95 = sub_10009EC3C(v75, v76, (uint64_t *)&v96);
      Class v34 = v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Directory migration failure: %s", v74, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v2 = v89;
    uint64_t v13 = v90;
    id v41 = v92;
LABEL_33:
    id v77 = [v93 standardUserDefaults];
    unsigned __int8 v78 = [v77 BOOLForKey:v41];

    if ((v78 & 1) == 0)
    {
      id v39 = [v93 standardUserDefaults];
      goto LABEL_35;
    }
    goto LABEL_36;
  }
  if (qword_100121E60 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_1000537C4(v31, (uint64_t)qword_100125F88);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  Class v34 = v14;
  if (os_log_type_enabled(v32, v33))
  {
    NSString v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Feedback Assistant Library directory does not exist", v35, 2u);
    swift_slowDealloc();
  }

  id v36 = self;
  id v37 = [v36 standardUserDefaults];
  unsigned __int8 v38 = [v37 BOOLForKey:FBKDirectoriesMigratorDryRun];

  if ((v38 & 1) == 0)
  {
    id v39 = [v36 standardUserDefaults];
LABEL_35:
    id v79 = v39;
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    [v79 setValue:isa forKey:FBKDirectoriesMigratorDidRun];

    Class v34 = isa;
  }
LABEL_36:

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v13, v94);
}

id sub_10009EB04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBADirectoriesMigrator();
  return [super dealloc];
}

uint64_t type metadata accessor for FBADirectoriesMigrator()
{
  return self;
}

uint64_t sub_10009EB60(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_10009EB9C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10009EBC4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10009EC3C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10009EC3C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10009ED10(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100053854((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100053854((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000538B0((uint64_t)v12);
  return v7;
}

uint64_t sub_10009ED10(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10009EECC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10009EECC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10009EF64(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10009F144(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10009F144(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10009EF64(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10009F0DC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10009F0DC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10004DE60(&qword_100123C58);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _DWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10009F144(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10004DE60(&qword_100123C58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char **sub_10009F294(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_10009F2A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10009F2B4()
{
}

uint64_t sub_10009F2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009F2CC()
{
  return swift_release();
}

uint64_t sub_10009F2D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10009F31C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10009F3D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100122338, &qword_1001223C8).n128_u64[0];
  return result;
}

double sub_10009F378@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10009F3D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100122410, &qword_100122400).n128_u64[0];
  return result;
}

__n128 sub_10009F3D4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  unsigned __int8 v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    unsigned __int8 v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100052400(v17, a9, a16);
  unint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_10004DE60(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

__n128 sub_10009F5A4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    os_log_type_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_10004DE60(&qword_100123DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_10004DE60(&qword_100123D98) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_10009F790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0x402C000000000000;
  uint64_t v8 = enum case for Font.TextStyle.body(_:);
  int64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Font.TextStyle.body(_:), v4);
  sub_10009FB10();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v10 = (int *)type metadata accessor for BatchUIButtonView();
  uint64_t v26 = 0x4038000000000000;
  v9(v7, v8, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v26 = 0x4034000000000000;
  v9(v7, v8, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v26 = 0x4024000000000000;
  v9(v7, v8, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  size_t v11 = (uint64_t *)(a3 + v10[8]);
  *size_t v11 = swift_getKeyPath();
  sub_10004DE60(&qword_100123C68);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v10[9];
  sub_10004DE60(&qword_100123C70);
  uint64_t v12 = type metadata accessor for ContentSizeCategory();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000D96C0;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, enum case for ContentSizeCategory.accessibilityMedium(_:), v12);
  v18(v17 + v14, enum case for ContentSizeCategory.accessibilityLarge(_:), v12);
  v18(v17 + 2 * v14, enum case for ContentSizeCategory.accessibilityExtraLarge(_:), v12);
  v18(v17 + 3 * v14, enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:), v12);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v18)(v17 + 4 * v14, enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:), v12);
  uint64_t v20 = v24;
  *(void *)(a3 + v23) = v16;
  uint64_t v21 = (void *)(a3 + v10[10]);
  uint64_t v22 = v25;
  *uint64_t v21 = v20;
  v21[1] = v22;
  return result;
}

unint64_t sub_10009FB10()
{
  unint64_t result = qword_100123C60;
  if (!qword_100123C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123C60);
  }
  return result;
}

uint64_t type metadata accessor for BatchUIButtonView()
{
  uint64_t result = qword_100123CE0;
  if (!qword_100123CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009FBB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = type metadata accessor for BorderedButtonStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100123D40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10004DE60(&qword_100123D48);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BatchUIButtonView();
  uint64_t v24 = v1;
  swift_retain();
  sub_10004DE60(&qword_100123D50);
  sub_1000A2DF8();
  Button.init(action:label:)();
  BorderedButtonStyle.init()();
  sub_100052668(&qword_100123DB8, &qword_100123D40);
  sub_1000A3598(&qword_100123DC0, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
  uint64_t v14 = v21;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v23, v13, v10);
  uint64_t v18 = (uint64_t *)(v17 + *(int *)(sub_10004DE60(&qword_100123DC8) + 36));
  *uint64_t v18 = KeyPath;
  v18[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10009FEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v45 = sub_10004DE60(&qword_100123DD0);
  __chkstk_darwin(v45);
  uint64_t v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10004DE60(&qword_100123D88);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100123D78);
  uint64_t v7 = __chkstk_darwin(v6);
  int64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v44 = sub_10004DE60(&qword_100123D68);
  uint64_t v12 = __chkstk_darwin(v44);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v43 - v15;
  id v17 = [self currentDevice];
  id v18 = [v17 userInterfaceIdiom];

  sub_1000A0348((uint64_t)v5);
  char v19 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  if (v18)
  {
    sub_100052400((uint64_t)v5, (uint64_t)v9, &qword_100123D88);
    long long v28 = &v9[*(int *)(v6 + 36)];
    char *v28 = v19;
    *((void *)v28 + 1) = v21;
    *((void *)v28 + 2) = v23;
    *((void *)v28 + 3) = v25;
    *((void *)v28 + 4) = v27;
    unsigned char v28[40] = 0;
    sub_100052464((uint64_t)v5, &qword_100123D88);
    sub_10005239C((uint64_t)v9, (uint64_t)v11, &qword_100123D78);
    sub_100052400((uint64_t)v11, (uint64_t)v2, &qword_100123D78);
    swift_storeEnumTagMultiPayload();
    sub_1000A2F00(&qword_100123D60, &qword_100123D68, (void (*)(void))sub_1000A2EA0);
    sub_1000A2EA0();
    _ConditionalContent<>.init(storage:)();
    uint64_t v29 = (uint64_t)v11;
    __n128 v30 = &qword_100123D78;
  }
  else
  {
    sub_100052400((uint64_t)v5, (uint64_t)v11, &qword_100123D88);
    long long v31 = &v11[*(int *)(v6 + 36)];
    char *v31 = v19;
    *((void *)v31 + 1) = v21;
    *((void *)v31 + 2) = v23;
    *((void *)v31 + 3) = v25;
    *((void *)v31 + 4) = v27;
    v31[40] = 0;
    sub_100052464((uint64_t)v5, &qword_100123D88);
    char v32 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    sub_100052400((uint64_t)v11, (uint64_t)v14, &qword_100123D78);
    id v41 = &v14[*(int *)(v44 + 36)];
    *id v41 = v32;
    *((void *)v41 + 1) = v34;
    *((void *)v41 + 2) = v36;
    *((void *)v41 + 3) = v38;
    *((void *)v41 + 4) = v40;
    v41[40] = 0;
    sub_100052464((uint64_t)v11, &qword_100123D78);
    sub_10005239C((uint64_t)v14, (uint64_t)v16, &qword_100123D68);
    sub_100052400((uint64_t)v16, (uint64_t)v2, &qword_100123D68);
    swift_storeEnumTagMultiPayload();
    sub_1000A2F00(&qword_100123D60, &qword_100123D68, (void (*)(void))sub_1000A2EA0);
    sub_1000A2EA0();
    _ConditionalContent<>.init(storage:)();
    uint64_t v29 = (uint64_t)v16;
    __n128 v30 = &qword_100123D68;
  }
  return sub_100052464(v29, v30);
}

uint64_t sub_1000A0348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = sub_10004DE60(&qword_100123DA0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100123DD8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10004DE60(&qword_100123D98);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v1;
  uint64_t v22 = v1;
  sub_10004DE60(&qword_100123DE0);
  sub_10004DE60(&qword_100123DE8);
  sub_1000A3438();
  sub_1000A34F8();
  Label.init(title:icon:)();
  sub_100052668(&qword_100123DA8, &qword_100123DA0);
  sub_1000A306C();
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  __n128 v13 = sub_10009F5A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v13);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v14 = v21;
  sub_100052400((uint64_t)v12, v21, &qword_100123D98);
  uint64_t v15 = (_OWORD *)(v14 + *(int *)(sub_10004DE60(&qword_100123D88) + 36));
  long long v16 = v29;
  void v15[4] = v28;
  v15[5] = v16;
  v15[6] = v30;
  long long v17 = v25;
  _OWORD *v15 = v24;
  v15[1] = v17;
  long long v18 = v27;
  void v15[2] = v26;
  v15[3] = v18;
  return sub_100052464((uint64_t)v12, &qword_100123D98);
}

uint64_t sub_1000A06D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_10004DE60(&qword_100123E10);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10004DE60(&qword_100123E50);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ContentSizeCategory();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  __n128 v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = *(void *)(a1 + *(int *)(type metadata accessor for BatchUIButtonView() + 36));
  uint64_t v47 = a1;
  swift_bridgeObjectRetain();
  sub_1000A30C0((uint64_t)v15);
  uint64_t v51 = *(void *)(v16 + 16);
  uint64_t v52 = v15;
  if (!v51)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v52, v9);
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    uint64_t v26 = sub_10004DE60(&qword_100123E58);
    sub_1000A1070(&v5[*(int *)(v26 + 44)]);
    sub_100052400((uint64_t)v5, (uint64_t)v8, &qword_100123E10);
    swift_storeEnumTagMultiPayload();
    sub_10004DE60(&qword_100123E00);
    sub_100052668(&qword_100123DF8, &qword_100123E00);
    sub_100052668(&qword_100123E08, &qword_100123E10);
    _ConditionalContent<>.init(storage:)();
    return sub_100052464((uint64_t)v5, &qword_100123E10);
  }
  uint64_t v46 = v3;
  uint64_t v43 = v5;
  uint64_t v45 = v6;
  unint64_t v44 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v50(v13, v16 + v44, v9);
  uint64_t v17 = sub_1000A3598(&qword_100123E38, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  swift_bridgeObjectRetain();
  char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  if (v18)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v19(v52, v9);
    swift_bridgeObjectRelease();
    uint64_t v27 = static VerticalAlignment.center.getter();
    sub_1000A0D20(v47, (uint64_t)&v53);
    char v28 = v54;
    uint64_t v29 = v55;
    char v30 = v56;
    char v31 = v59;
    uint64_t v32 = v60;
    char v33 = v61;
    uint64_t v34 = v63;
    long long v35 = v53;
    long long v36 = v57;
    long long v37 = v58;
    long long v38 = v62;
    LOBYTE(v53) = 1;
    char v66 = v54;
    char v65 = v59;
    char v64 = v61;
    *(void *)uint64_t v8 = v27;
    *((void *)v8 + 1) = 0;
    uint8_t v8[16] = 1;
    *(_OWORD *)(v8 + 24) = v35;
    unsigned char v8[40] = v28;
    *((void *)v8 + 6) = v29;
    v8[56] = v30;
    *((_OWORD *)v8 + 4) = v36;
    *((_OWORD *)v8 + 5) = v37;
    v8[96] = v31;
    *((void *)v8 + 13) = v32;
    v8[112] = v33;
    *(_OWORD *)(v8 + 120) = v38;
    *((void *)v8 + 17) = v34;
    swift_storeEnumTagMultiPayload();
    sub_10004DE60(&qword_100123E00);
    sub_100052668(&qword_100123DF8, &qword_100123E00);
    sub_100052668(&qword_100123E08, &qword_100123E10);
    return _ConditionalContent<>.init(storage:)();
  }
  uint64_t v49 = v17;
  uint64_t v42 = v16;
  uint64_t v41 = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v51 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v43;
LABEL_12:
    v19(v52, v9);
    goto LABEL_13;
  }
  uint64_t v40 = v8;
  uint64_t v20 = *(void *)(v10 + 72);
  unint64_t v21 = v42 + v20 + v44;
  uint64_t v22 = 1;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v50)(v13, v21, v9);
    uint64_t v24 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
    v19(v13, v9);
    if (v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v40;
      goto LABEL_15;
    }
    ++v22;
    v21 += v20;
    if (v24 == v51)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v40;
      uint64_t v5 = v43;
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A0D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v3 = sub_10004DE60(&qword_100123E60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.body.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  int v36 = v14;
  uint64_t v16 = v15;
  swift_release();
  sub_100050008(v6, v8, v10);
  swift_bridgeObjectRelease();
  char v17 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  id v26 = [self currentDevice:v35];
  id v27 = [v26 userInterfaceIdiom];

  uint64_t v28 = 0;
  uint64_t KeyPath = 0;
  uint64_t v30 = 0;
  if (!v27)
  {
    id v31 = [self sharedApplication];
    [v31 userInterfaceLayoutDirection];

    uint64_t v28 = Image.init(systemName:)();
    sub_10004DE60(&qword_100123C78);
    ScaledMetric.wrappedValue.getter();
    static Font.Weight.bold.getter();
    uint64_t v32 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 1, 1, v32);
    uint64_t v30 = static Font.system(size:weight:design:)();
    sub_100052464((uint64_t)v5, &qword_100123E60);
    uint64_t KeyPath = swift_getKeyPath();
  }
  char v33 = v36 & 1;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 1;
  *(void *)(a2 + 96) = v28;
  *(void *)(a2 + 104) = KeyPath;
  *(void *)(a2 + 112) = v30;
  sub_100052310(v11, v13, v33);
  swift_bridgeObjectRetain();
  sub_1000A35E0(v28);
  sub_1000A3630(v28);
  sub_100050008(v11, v13, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1070@<X0>(void *a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_10004DE60(&qword_100123E60);
  __chkstk_darwin(v1 - 8);
  long long v53 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ScoreIndicator();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  char v59 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v52 - v6;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.body.getter();
  uint64_t v13 = Text.font(_:)();
  uint64_t v60 = v14;
  uint64_t v61 = v13;
  char v16 = v15;
  uint64_t v62 = v17;
  swift_release();
  sub_100050008(v8, v10, v12);
  swift_bridgeObjectRelease();
  int v56 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  type metadata accessor for BatchUIButtonView();
  sub_10004DE60(&qword_100123C78);
  ScaledMetric.wrappedValue.getter();
  id v26 = v7;
  ScoreIndicator.init(size:)();
  id v27 = [self currentDevice];
  id v28 = [v27 userInterfaceIdiom];

  uint64_t v29 = 0;
  uint64_t KeyPath = 0;
  uint64_t v31 = 0;
  if (!v28)
  {
    id v32 = [self sharedApplication];
    [v32 userInterfaceLayoutDirection];

    uint64_t v29 = Image.init(systemName:)();
    ScaledMetric.wrappedValue.getter();
    static Font.Weight.bold.getter();
    uint64_t v33 = type metadata accessor for Font.Design();
    uint64_t v34 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v53, 1, 1, v33);
    uint64_t v31 = static Font.system(size:weight:design:)();
    sub_100052464(v34, &qword_100123E60);
    uint64_t KeyPath = swift_getKeyPath();
  }
  long long v53 = (char *)v31;
  char v54 = v26;
  LOBYTE(v65) = v16 & 1;
  char v64 = 0;
  char v63 = 1;
  uint64_t v35 = v57;
  uint64_t v36 = v29;
  long long v37 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  long long v38 = v59;
  uint64_t v39 = v26;
  uint64_t v40 = v58;
  v37(v59, v39, v58);
  char v41 = v65;
  char v42 = v64;
  uint64_t v43 = v55;
  uint64_t v44 = v60;
  void *v55 = v61;
  v43[1] = v44;
  *((unsigned char *)v43 + 16) = v41;
  v43[3] = v62;
  *((unsigned char *)v43 + 32) = v56;
  void v43[5] = v19;
  v43[6] = v21;
  v43[7] = v23;
  v43[8] = v25;
  *((unsigned char *)v43 + 72) = v42;
  char v45 = v63;
  v43[10] = 0;
  *((unsigned char *)v43 + 88) = v45;
  uint64_t v46 = sub_10004DE60(&qword_100123E68);
  v37((char *)v43 + *(int *)(v46 + 64), v38, v40);
  uint64_t v47 = (void *)((char *)v43 + *(int *)(v46 + 80));
  uint64_t *v47 = v29;
  v47[1] = KeyPath;
  v47[2] = (uint64_t)v53;
  uint64_t v49 = v60;
  uint64_t v48 = v61;
  sub_100052310(v61, v60, v41);
  swift_bridgeObjectRetain();
  sub_1000A35E0(v36);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v35 + 8);
  v50(v54, v40);
  sub_1000A3630(v36);
  v50(v59, v40);
  sub_100050008(v48, v49, v65);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_10004DE60(&qword_100123E30);
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_10004DE60(&qword_100123E28);
  __chkstk_darwin(v42);
  uint64_t v7 = (void *)((char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ContentSizeCategory();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v34 - v13;
  uint64_t v15 = type metadata accessor for BatchUIButtonView();
  uint64_t v16 = *(int *)(v15 + 36);
  uint64_t v41 = v15;
  uint64_t v17 = *(void *)(a1 + v16);
  swift_bridgeObjectRetain();
  sub_1000A30C0((uint64_t)v14);
  uint64_t v46 = *(void *)(v17 + 16);
  if (!v46)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
LABEL_11:
    swift_bridgeObjectRelease();
    id v28 = [self mainBundle];
    uint64_t *v5 = Image.init(_:bundle:)();
    swift_storeEnumTagMultiPayload();
    sub_100052668(&qword_100123E20, &qword_100123E28);
    return _ConditionalContent<>.init(storage:)();
  }
  uint64_t v39 = v3;
  uint64_t v40 = v5;
  long long v37 = v7;
  uint64_t v38 = a1;
  unint64_t v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  v18(v12, v17 + v36, v8);
  uint64_t v19 = sub_1000A3598(&qword_100123E38, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  swift_bridgeObjectRetain();
  uint64_t v47 = v14;
  uint64_t v20 = v19;
  LOBYTE(v19) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  if (v19)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v40;
    v21(v47, v8);
    swift_bridgeObjectRelease();
    sub_10004DE60(&qword_100123C78);
    ScaledMetric.wrappedValue.getter();
    uint64_t v30 = v48;
    uint64_t v31 = static HorizontalAlignment.center.getter();
    uint64_t v32 = (uint64_t)v37;
    *long long v37 = v31;
    *(void *)(v32 + 8) = v30;
    *(unsigned char *)(v32 + 16) = 0;
    uint64_t v33 = sub_10004DE60(&qword_100123E40);
    sub_1000A1A74((uint64_t *)(v32 + *(int *)(v33 + 44)));
    sub_100052400(v32, v29, &qword_100123E28);
    swift_storeEnumTagMultiPayload();
    sub_100052668(&qword_100123E20, &qword_100123E28);
    _ConditionalContent<>.init(storage:)();
    return sub_100052464(v32, &qword_100123E28);
  }
  else
  {
    char v45 = (uint64_t (*)(char *, unint64_t, uint64_t))v18;
    v34[1] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v35 = v17;
    if (v46 == 1)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v5 = v40;
      v21(v47, v8);
      goto LABEL_11;
    }
    uint64_t v44 = v20;
    uint64_t v22 = *(void *)(v9 + 72);
    unint64_t v23 = v35 + v22 + v36;
    uint64_t v24 = 1;
    while (1)
    {
      uint64_t result = v45(v12, v23, v8);
      uint64_t v26 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        break;
      }
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      v21(v12, v8);
      if (v27) {
        goto LABEL_12;
      }
      ++v24;
      v23 += v22;
      if (v26 == v46) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A1A74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ScoreIndicator();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  id v9 = [self mainBundle];
  uint64_t v10 = Image.init(_:bundle:)();
  type metadata accessor for BatchUIButtonView();
  sub_10004DE60(&qword_100123C78);
  ScaledMetric.wrappedValue.getter();
  ScoreIndicator.init(size:)();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v11(v6, v8, v2);
  *a1 = v10;
  uint64_t v12 = sub_10004DE60(&qword_100123E48);
  v11((char *)a1 + *(int *)(v12 + 48), v6, v2);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  swift_retain();
  v13(v8, v2);
  v13(v6, v2);
  return swift_release();
}

uint64_t sub_1000A1C50@<X0>(char *a1@<X8>)
{
  id v28 = a1;
  uint64_t v1 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = v27;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  LabelStyleConfiguration.icon.getter();
  LabelStyleConfiguration.title.getter();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v12, v14, v8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v5, v7, v1);
  uint64_t v17 = v28;
  v15(v28, v12, v8);
  uint64_t v18 = sub_10004DE60(&qword_100123E90);
  uint64_t v19 = v25;
  v16(&v17[*(int *)(v18 + 48)], v5, v25);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v7;
  uint64_t v22 = v19;
  v20(v21, v19);
  unint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v14, v8);
  v20(v5, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v8);
}

uint64_t sub_1000A1ED4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_10004DE60(&qword_100123E88);
  return sub_1000A1C50((char *)(a1 + *(int *)(v2 + 44)));
}

uint64_t sub_1000A1F24()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_1000A1F48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t *sub_1000A2014(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_10004DE60(&qword_100123C78);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    v8((uint64_t *)((char *)v4 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)v4 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)v4 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    uint64_t v9 = a3[8];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10004DE60(&qword_100123C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000A21F4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10004DE60(&qword_100123C78);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  uint64_t v6 = a1 + a2[8];
  sub_10004DE60(&qword_100123C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1000A2344(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100123C78);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10004DE60(&qword_100123C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000A24D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100123C78);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_100052464(a1 + v8, &qword_100123C68);
    sub_10004DE60(&qword_100123C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000A269C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100123C78);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10004DE60(&qword_100123C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1000A2824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100123C78);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_100052464(a1 + v8, &qword_100123C68);
    uint64_t v11 = sub_10004DE60(&qword_100123C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_1000A29DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A29F0);
}

uint64_t sub_1000A29F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10004DE60(&qword_100123C78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10004DE60(&qword_100123C80);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 32);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1000A2B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A2B20);
}

uint64_t sub_1000A2B20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10004DE60(&qword_100123C78);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10004DE60(&qword_100123C80);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 32);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1000A2C38()
{
  sub_1000A2D20();
  if (v0 <= 0x3F)
  {
    sub_1000A2D7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000A2D20()
{
  if (!qword_100123CF0)
  {
    sub_10009FB10();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100123CF0);
    }
  }
}

void sub_1000A2D7C()
{
  if (!qword_100123CF8)
  {
    type metadata accessor for ContentSizeCategory();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100123CF8);
    }
  }
}

uint64_t sub_1000A2DD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A2DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_10009FEF4(a1);
}

unint64_t sub_1000A2DF8()
{
  unint64_t result = qword_100123D58;
  if (!qword_100123D58)
  {
    sub_10004DF00(&qword_100123D50);
    sub_1000A2F00(&qword_100123D60, &qword_100123D68, (void (*)(void))sub_1000A2EA0);
    sub_1000A2EA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123D58);
  }
  return result;
}

uint64_t sub_1000A2EA0()
{
  return sub_1000A2F00(&qword_100123D70, &qword_100123D78, (void (*)(void))sub_1000A2ED0);
}

uint64_t sub_1000A2ED0()
{
  return sub_1000A2F00(&qword_100123D80, &qword_100123D88, (void (*)(void))sub_1000A2F7C);
}

uint64_t sub_1000A2F00(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004DF00(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A2F7C()
{
  unint64_t result = qword_100123D90;
  if (!qword_100123D90)
  {
    sub_10004DF00(&qword_100123D98);
    sub_10004DF00(&qword_100123DA0);
    sub_100052668(&qword_100123DA8, &qword_100123DA0);
    sub_1000A306C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123D90);
  }
  return result;
}

unint64_t sub_1000A306C()
{
  unint64_t result = qword_100123DB0;
  if (!qword_100123DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123DB0);
  }
  return result;
}

uint64_t sub_1000A30C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10004DE60(&qword_100123C68);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100052400(v2, (uint64_t)v10, &qword_100123C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    uint64_t v14 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      void v18[2] = sub_10009EC3C(0xD000000000000013, 0x80000001000E5950, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1000A3378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000A33A4()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000A33D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000A33FC()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_1000A3428@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A06D8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000A3430@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A1558(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000A3438()
{
  unint64_t result = qword_100123DF0;
  if (!qword_100123DF0)
  {
    sub_10004DF00(&qword_100123DE0);
    sub_100052668(&qword_100123DF8, &qword_100123E00);
    sub_100052668(&qword_100123E08, &qword_100123E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123DF0);
  }
  return result;
}

unint64_t sub_1000A34F8()
{
  unint64_t result = qword_100123E18;
  if (!qword_100123E18)
  {
    sub_10004DF00(&qword_100123DE8);
    sub_100052668(&qword_100123E20, &qword_100123E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123E18);
  }
  return result;
}

uint64_t sub_1000A3598(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A35E0(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000A3630(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A367C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000A36A8()
{
  return EnvironmentValues.font.setter();
}

ValueMetadata *type metadata accessor for CenterAligned()
{
  return &type metadata for CenterAligned;
}

unint64_t sub_1000A36E8()
{
  unint64_t result = qword_100123E70;
  if (!qword_100123E70)
  {
    sub_10004DF00(&qword_100123DC8);
    sub_10004DF00(&qword_100123D40);
    type metadata accessor for BorderedButtonStyle();
    sub_100052668(&qword_100123DB8, &qword_100123D40);
    sub_1000A3598(&qword_100123DC0, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100052668(&qword_100123E78, &qword_100123E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100123E70);
  }
  return result;
}

uint64_t sub_1000A3830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A384C()
{
  return sub_100052668(&qword_100123E98, &qword_100123EA0);
}

uint64_t sub_1000A3888()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100053900(v0, qword_100123EA8);
  sub_1000537C4(v0, (uint64_t)qword_100123EA8);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  return Logger.init(subsystem:category:)();
}

id sub_1000A3944()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBAUserDefaultsMigrator();
  return [super dealloc];
}

uint64_t type metadata accessor for FBAUserDefaultsMigrator()
{
  return self;
}

uint64_t sub_1000A39A0(uint64_t result, unsigned char **a2)
{
  objc_super v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1000A3EB8()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_1000A3EEC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "item is nil in _controllerForItem", v1, 2u);
}

void sub_1000A3F30(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error fetching survey", v1, 2u);
}

void sub_1000A3F74(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot delete draft because content item is nil", v1, 2u);
}

void sub_1000A3FB8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A4028(void *a1)
{
  uint64_t v6 = [a1 description];
  sub_10000FCC4();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);
}

void sub_1000A40B8(void *a1)
{
  uint64_t v6 = [a1 description];
  sub_10000FCC4();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0x16u);
}

void sub_1000A415C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Selected cell with identifier [%@] is not a question-answer cell.", (uint8_t *)&v2, 0xCu);
}

void sub_1000A41D4(void *a1, void *a2, NSObject *a3)
{
  uint64_t v6 = [a1 role];
  uint64_t v7 = [a2 formResponse];
  uint64_t v8 = [a1 ID];
  uint64_t v9 = [v7 answerForQuestionID:v8];
  uint64_t v10 = [v9 values];
  uint64_t v11 = [v10 componentsJoinedByString:@","];
  int v12 = 138412546;
  os_log_type_t v13 = v6;
  __int16 v14 = 2112;
  os_log_type_t v15 = v11;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Q: [%@] A: [%@]", (uint8_t *)&v12, 0x16u);
}

void sub_1000A4300(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Device Diagnostics matched no device", v1, 2u);
}

void sub_1000A4344(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A43B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A4420(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A4490(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[FBABugFormTableViewController bugFormPickerDidCancel:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_1000A4514(id *a1, id *a2, NSObject *a3)
{
  id WeakRetained = objc_loadWeakRetained(a1);
  uint64_t v6 = [WeakRetained currentTeam];
  uint64_t v7 = [v6 ID];
  uint64_t v8 = [v7 stringValue];
  uint64_t v9 = [*a2 ID];
  uint64_t v10 = [v9 stringValue];
  id v11 = objc_loadWeakRetained(a1);
  int v12 = [v11 formStub];
  os_log_type_t v13 = [v12 serverID];
  __int16 v14 = [v13 stringValue];
  *(_DWORD *)uint8_t buf = 138543874;
  uint64_t v17 = v8;
  __int16 v18 = 2114;
  uint64_t v19 = v10;
  __int16 v20 = 2114;
  uint64_t v21 = v14;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Attempted to switch from team [%{public}@] to team [%{public}@] for stub [%{public}@] but new team does not have a matching form stub. Falling back to old stub.", buf, 0x20u);
}

void sub_1000A4678(uint64_t a1)
{
  [*(id *)(a1 + 32) intValue];
  sub_10000FCC4();
  _os_log_error_impl(v1, v2, v3, v4, v5, 8u);
}

void sub_1000A4700(uint64_t a1)
{
  int v1 = [*(id *)(a1 + 40) formResponse];
  os_log_t v2 = [v1 ID];
  [v2 intValue];
  sub_10000FCC4();
  _os_log_error_impl(v3, v4, v5, v6, v7, 0xEu);
}

void sub_1000A47C0(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  os_log_type_t v3 = "-[FBABugFormTableViewController didTapDevice:indexPath:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000A484C(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "cannot display item", v1, 2u);
}

void sub_1000A4890(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "will display document on detail view controller from file browser", v1, 2u);
}

void sub_1000A48D4(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "will display FBA file controller from file browser", v1, 2u);
}

void sub_1000A4918(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Legal agreement completion called without acceptance", v1, 2u);
}

void sub_1000A495C(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a2 objectForKeyedSubscript:AKAuthenticationIDMSTokenKey];
  int v6 = 138412546;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Sign in authenticated for user %@ with tokens %@", (uint8_t *)&v6, 0x16u);
}

void sub_1000A4A1C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "AuthKit login error: [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_1000A4A94(void *a1, NSObject *a2)
{
  __int16 v4 = [a1 loggerLib];
  uint64_t v5 = [v4 startDate];
  int v6 = [v5 fba_toString];
  uint64_t v7 = [a1 loggerLib];
  __int16 v8 = [v7 endDate];
  uint64_t v9 = [v8 fba_toString];
  int v10 = 138543618;
  id v11 = v6;
  __int16 v12 = 2114;
  os_log_type_t v13 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Log Archive has invalid dates. Start Date [%{public}@], end date: [%{public}@]", (uint8_t *)&v10, 0x16u);
}

void sub_1000A4BA8(void *a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a1 logArchivePath];
  int v6 = [a2 description];
  int v7 = 138543618;
  __int16 v8 = v5;
  __int16 v9 = 2114;
  int v10 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not initialize FBAOSLogViewerDataSource with logarchive file: [%{public}@] error: [%{public}@]", (uint8_t *)&v7, 0x16u);
}

void sub_1000A4C6C(void *a1)
{
  [a1 numberOfEmptyFetches];
  sub_100017C7C((void *)&_mh_execute_header, v1, v2, "Empty page count: [%lu]", v3, v4, v5, v6, 0);
}

void sub_1000A4CE8(void *a1, NSObject *a2)
{
  v3[0] = 67109120;
  v3[1] = [a1 count];
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Fetched [%i] log events from data range batch", (uint8_t *)v3, 8u);
}

void sub_1000A4D74(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error fetching page [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_1000A4DEC()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Got log events", v2, v3, v4, v5, v6);
}

void sub_1000A4E20()
{
  sub_100017C70();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Too many fetches. Aborting", v1, 2u);
}

void sub_1000A4E60()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, will read another batch", v2, v3, v4, v5, v6);
}

void sub_1000A4E94()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, done reading, next page requested ", v2, v3, v4, v5, v6);
}

void sub_1000A4EC8(void *a1)
{
  uint64_t v1 = [a1 savedEvents];
  [v1 count];
  sub_100017C7C((void *)&_mh_execute_header, v2, v3, "Log events count: [%lu] on completion block", v4, v5, v6, v7, 0);
}

void sub_1000A4F54()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Reading for date range finished, done reading ", v2, v3, v4, v5, v6);
}

void sub_1000A4F88(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Done button not supported for multi-select picker", v1, 2u);
}

void sub_1000A4FCC(uint64_t a1, NSObject *a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v4 = [WeakRetained contentItem];
  uint64_t v5 = [v4 ID];
  v6[0] = 67109120;
  v6[1] = [v5 intValue];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while fetching response stub with ID [%i]", (uint8_t *)v6, 8u);
}

void sub_1000A5094(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Response stub is nil", v1, 2u);
}

void sub_1000A50D8()
{
  int v1 = 136315394;
  uint64_t v2 = "-[AppDelegate application:didFinishLaunchingWithOptions:]";
  sub_10001F294();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s with launchOptions %@", (uint8_t *)&v1, 0x16u);
}

void sub_1000A515C()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "not logged in, removing blur view", v2, v3, v4, v5, v6);
}

void sub_1000A5190()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Will add blur view", v2, v3, v4, v5, v6);
}

void sub_1000A51C4()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Will remove blur view", v2, v3, v4, v5, v6);
}

void sub_1000A51F8(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 blurView];
  uint64_t v4 = [v3 superview];
  v5[0] = 67109120;
  v5[1] = v4 != 0;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Timer Fired, Authenticated, blurView visible? [%i]", (uint8_t *)v5, 8u);
}

void sub_1000A52B4()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Biometrics Evaluation stuck evaluating. Will lock out", v2, v3, v4, v5, v6);
}

void sub_1000A52E8()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Biometrics Evaluation stuck in cancelled state. Will lock out", v2, v3, v4, v5, v6);
}

void sub_1000A531C(id *a1)
{
  [*a1 biometricsState];
  sub_10001F274((void *)&_mh_execute_header, v1, v2, "Biometrics Evaluation stuck in state [%lu]", v3, v4, v5, v6, 0);
}

void sub_1000A539C()
{
  sub_100017C70();
  sub_100017C54((void *)&_mh_execute_header, v0, v1, "Biometrics disabled. Will not save bio timer", v2, v3, v4, v5, v6);
}

void sub_1000A53D0(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = [*(id *)(a1 + 40) lastUsedLAContext];
  int v5 = 138412546;
  uint64_t v6 = v3;
  sub_10001F294();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "context [%@] last context used [%@]", (uint8_t *)&v5, 0x16u);
}

void sub_1000A5478(void *a1)
{
  uint64_t v1 = [a1 localizedDescription];
  sub_10001F274((void *)&_mh_execute_header, v2, v3, "APNS Error: %@", v4, v5, v6, v7, 2u);
}

void sub_1000A5500()
{
  int v1 = 136446466;
  uint64_t v2 = "-[AppDelegate userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]";
  sub_10001F294();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%{public}s %@", (uint8_t *)&v1, 0x16u);
}

void sub_1000A5584(void *a1)
{
  int v1 = [a1 localizedDescription];
  sub_10001F274((void *)&_mh_execute_header, v2, v3, "Error: %@", v4, v5, v6, v7, 2u);
}

void sub_1000A560C()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Viewing Followups from notification has been disabled", v2, v3, v4, v5, v6);
}

void sub_1000A5640()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Could not get UISupportedInterfaceOrientations", v2, v3, v4, v5, v6);
}

void sub_1000A5674(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *uint8_t buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Found unknown interface orientation", buf, 2u);
}

void sub_1000A56B4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot display item of type Unknown", v1, 2u);
}

void sub_1000A56F8(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 shortDescription];
  int v4 = 138543362;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Cannot track upload progress for item [%{public}@]", (uint8_t *)&v4, 0xCu);
}

void sub_1000A5790()
{
  sub_100026BDC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "selected [%@] for pairing", v1, 0xCu);
}

void sub_1000A5804(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "tapped on this device detail", v1, 2u);
}

void sub_1000A5848(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 publicLogDescription];
  sub_100026BDC();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "device [%{public}@] is not valid for FBA pairing removal", v4, 0xCu);
}

void sub_1000A58DC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "tapped on debug, device is not paired or local, will attempt pairing", v1, 2u);
}

void sub_1000A5920()
{
  sub_100026BDC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "tapped on debug section %@", v1, 0xCu);
}

void sub_1000A5994()
{
  sub_100026BDC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Tapped on device not ready to be configured [%{public}@]", v1, 0xCu);
}

void sub_1000A5A08()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "No draft, stub or form given. Cannot launch feedback.", v2, v3, v4, v5, v6);
}

void sub_1000A5A3C(os_log_t log)
{
  int v1 = 136446210;
  uint64_t v2 = "-[FBAMailboxesViewController runDelayedUrlActionIfNeeded]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[%{public}s] action not handled", (uint8_t *)&v1, 0xCu);
}

void sub_1000A5AC0(void *a1, NSObject *a2)
{
  [a1 newFeedbackButtonState];
  sub_100026BDC();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Compose button state [%lu]", v3, 0xCu);
}

void sub_1000A5B48()
{
  sub_100026BDC();
  sub_1000320DC((void *)&_mh_execute_header, v0, v1, "Show Item url action failed. Item not found: [%{public}@]", v2, v3, v4, v5, v6);
}

void sub_1000A5BB0()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Submitted inbox is missing!", v2, v3, v4, v5, v6);
}

void sub_1000A5BE4()
{
  sub_100026BDC();
  sub_1000320DC((void *)&_mh_execute_header, v0, v1, "Show Item url action is not supported [%{public}@]", v2, v3, v4, v5, v6);
}

void sub_1000A5C4C()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Error refreshing feedback", v2, v3, v4, v5, v6);
}

void sub_1000A5C80(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A5CF0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A5D60(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000A5DD0()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "No teams are available.", v2, v3, v4, v5, v6);
}

void sub_1000A5E04()
{
  sub_100026BDC();
  __int16 v3 = 2048;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Submitted inbox is missing (row: %ld, section: %ld)!", v2, 0x16u);
}

void sub_1000A5E88(os_log_t log)
{
  int v1 = 136446210;
  uint64_t v2 = "-[FBAMailboxesViewController launchSurveyWithUrlAction:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "[%{public}s] with action that does not launch survey", (uint8_t *)&v1, 0xCu);
}

void sub_1000A5F0C()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Error fetching targeted survey", v2, v3, v4, v5, v6);
}

void sub_1000A5F40(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error creation with type [%li] not implemented", (uint8_t *)&v2, 0xCu);
}

void sub_1000A5FB8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "dbFile does not exist, setting to nil", v1, 2u);
}

void sub_1000A5FFC(sqlite3 **a1, NSObject *a2)
{
  uint64_t v3 = sqlite3_errmsg(*a1);
  int v4 = 136315138;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v4, 0xCu);
}

void sub_1000A608C(void *a1)
{
  uint8_t v6 = [a1 action];
  sub_10000FCC4();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);
}

void sub_1000A611C(void *a1)
{
  uint64_t v1 = [a1 ID];
  [v1 intValue];
  sub_10000FCC4();
  _os_log_error_impl(v2, v3, v4, v5, v6, 8u);
}

void sub_1000A61B0(void *a1)
{
  os_log_t v2 = [a1 ID];
  [v2 intValue];
  [a1 itemType];
  sub_10000FCC4();
  _os_log_error_impl(v3, v4, v5, v6, v7, 0x12u);
}

void sub_1000A6268(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error deleting draft", v1, 2u);
}

void sub_1000A62AC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "could not find drafting controller or response: cannot save", v1, 2u);
}

void sub_1000A62F0(uint64_t a1, NSObject *a2)
{
  int v2 = *(_DWORD *)(a1 + 48);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "background task expired for saving FR [%d]", (uint8_t *)v3, 8u);
}

void sub_1000A636C(uint64_t a1, os_log_t log)
{
  if (a1)
  {
    os_log_type_t v5 = (objc_class *)objc_opt_class();
    os_log_t v4 = NSStringFromClass(v5);
  }
  else
  {
    os_log_t v4 = 0;
  }
  int v6 = 138412290;
  uint64_t v7 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Modal feedback editor [%@]", (uint8_t *)&v6, 0xCu);
  if (a1) {
}
  }

void sub_1000A6428(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to generate caller name from string [%{public}@] from [%{public}@]", (uint8_t *)&v3, 0x16u);
}

void sub_1000A64B0(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to generate caller name with error [%{public}@]", (uint8_t *)&v2, 0xCu);
}

void sub_1000A6528(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 ID];
  int v4 = 134217984;
  id v5 = [v3 integerValue];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Tried to load Information Cell with a non-information type question, question id: %ld", (uint8_t *)&v4, 0xCu);
}

void sub_1000A65C4(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[FBAPinPairingViewController tryPin:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_1000A6648(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[FBADevicePickingNavigationController pairingViewDidClose]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s", (uint8_t *)&v1, 0xCu);
}

void sub_1000A66CC(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Device choices made but no completion block given", v1, 2u);
}

void sub_1000A6710(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 question];
  int v4 = 134218242;
  id v5 = [v3 answerType];
  __int16 v6 = 2082;
  uint64_t v7 = "-[FBABugFormDetailTableViewController tableView:didSelectRowAtIndexPath:]";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Question type [%lu] not handled in in %{public}s", (uint8_t *)&v4, 0x16u);
}

void sub_1000A67C0(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error copying file: [%{public}@] ", (uint8_t *)&v2, 0xCu);
}

void sub_1000A6838(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "error parsing url [%{public}@] with error [%{public}@]", (uint8_t *)&v3, 0x16u);
}

void sub_1000A68C0()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Error refreshing feedback. Will show alert and back out", v2, v3, v4, v5, v6);
}

void sub_1000A68F4()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "viewControllerFeedback is nil", v2, v3, v4, v5, v6);
}

void sub_1000A6928(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *uint8_t buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FFU has no visible files", buf, 2u);
}

void sub_1000A6968(uint8_t *a1, void *a2, unsigned int *a3, NSObject *a4)
{
  uint64_t v7 = [a2 ID];
  unsigned int v8 = [v7 intValue];
  *(_DWORD *)a1 = 67109120;
  *a3 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_ERROR, "Found complete validation FFU [%i] without response, this is invalid state", a1, 8u);
}

void sub_1000A69E4()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "No content item. Cannot delete file promise", v2, v3, v4, v5, v6);
}

void sub_1000A6A18()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Nil formResponseStub. Cannot delete attachment", v2, v3, v4, v5, v6);
}

void sub_1000A6A4C()
{
  sub_100017C70();
  sub_10001F258((void *)&_mh_execute_header, v0, v1, "Nil filePromise. Cannot delete attachment", v2, v3, v4, v5, v6);
}

void sub_1000A6A80(uint64_t a1, void *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) contentItem];
  uint64_t v4 = [v3 remoteID];
  [v4 unsignedIntegerValue];
  uint64_t v5 = [a2 description];
  sub_10004CD84();
  sub_10004CD9C((void *)&_mh_execute_header, v6, v7, "Error promoting feedback [%lu]: %{public}@", v8, v9, v10, v11, v12);
}

void sub_1000A6B48(uint64_t a1, void *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) contentItem];
  uint64_t v4 = [v3 remoteID];
  [v4 unsignedIntegerValue];
  uint64_t v5 = [a2 description];
  sub_10004CD84();
  sub_10004CD9C((void *)&_mh_execute_header, v6, v7, "Error demoting feedback [%lu]: %{public}@", v8, v9, v10, v11, v12);
}

uint64_t static URLRequest._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URLRequest.url.getter()
{
  return URLRequest.url.getter();
}

uint64_t type metadata accessor for URLRequest()
{
  return type metadata accessor for URLRequest();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)Notification._bridgeToObjectiveC()();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t DateComponents.day.setter()
{
  return DateComponents.day.setter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t URLResourceValues.creationDate.getter()
{
  return URLResourceValues.creationDate.getter();
}

uint64_t URLResourceValues.contentModificationDate.getter()
{
  return URLResourceValues.contentModificationDate.getter();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t _KeyValueCodingAndObserving.willChangeValue<A>(for:)()
{
  return _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
}

uint64_t _KeyValueCodingAndObserving.didChangeValue<A>(for:)()
{
  return _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
}

uint64_t URL.description.getter()
{
  return URL.description.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.resourceValues(forKeys:)()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.hasDirectoryPath.getter()
{
  return URL.hasDirectoryPath.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

Swift::Void __swiftcall URL.appendPathComponent(_:)(Swift::String a1)
{
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.checkResourceIsReachable()()
{
  return URL.checkResourceIsReachable()();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.query.getter()
{
  return URL.query.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.distantFuture.getter()
{
  return static Date.distantFuture.getter();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Calendar.date(byAdding:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static FBKFeedbackUpload.allFeedbackUploads(_:)()
{
  return static FBKFeedbackUpload.allFeedbackUploads(_:)();
}

uint64_t FBKFeedbackUpload.BugSession.deviceIdentifier.getter()
{
  return FBKFeedbackUpload.BugSession.deviceIdentifier.getter();
}

uint64_t FBKFeedbackUpload.BugSession.sessionIdentifier.getter()
{
  return FBKFeedbackUpload.BugSession.sessionIdentifier.getter();
}

uint64_t type metadata accessor for FBKFeedbackUpload.BugSession()
{
  return type metadata accessor for FBKFeedbackUpload.BugSession();
}

uint64_t FBKFeedbackUpload.feedbackID.getter()
{
  return FBKFeedbackUpload.feedbackID.getter();
}

uint64_t FBKFeedbackUpload.bugSessions.getter()
{
  return FBKFeedbackUpload.bugSessions.getter();
}

uint64_t FBKFeedbackUpload.formResponseID.getter()
{
  return FBKFeedbackUpload.formResponseID.getter();
}

uint64_t type metadata accessor for FBKFeedbackUpload()
{
  return type metadata accessor for FBKFeedbackUpload();
}

uint64_t static FBKSAdmin.reportFailureToLaunchForm(formIdentifier:completion:)()
{
  return static FBKSAdmin.reportFailureToLaunchForm(formIdentifier:completion:)();
}

uint64_t UTType.identifier.getter()
{
  return UTType.identifier.getter();
}

uint64_t static UTType.item.getter()
{
  return static UTType.item.getter();
}

uint64_t static UTType.movie.getter()
{
  return static UTType.movie.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static UIListContentConfiguration.subtitleCell()()
{
  return static UIListContentConfiguration.subtitleCell()();
}

uint64_t UIListContentConfiguration.secondaryText.setter()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t UIListContentConfiguration.TextProperties.numberOfLines.setter()
{
  return UIListContentConfiguration.TextProperties.numberOfLines.setter();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return UIListContentConfiguration.TextProperties.color.setter();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t UIListContentConfiguration.ImageProperties.maximumSize.setter()
{
  return UIListContentConfiguration.ImageProperties.maximumSize.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.cornerRadius.setter()
{
  return UIListContentConfiguration.ImageProperties.cornerRadius.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.tintColor.setter()
{
  return UIListContentConfiguration.ImageProperties.tintColor.setter();
}

uint64_t UIListContentConfiguration.imageProperties.modify()
{
  return UIListContentConfiguration.imageProperties.modify();
}

uint64_t UIListContentConfiguration.secondaryTextProperties.modify()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t static UIListContentConfiguration.valueCell()()
{
  return static UIListContentConfiguration.valueCell()();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

uint64_t NSDiffableDataSourceSnapshot.indexOfItem(_:)()
{
  return NSDiffableDataSourceSnapshot.indexOfItem(_:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)()
{
  return NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t UITableViewDiffableDataSource.init(tableView:cellProvider:)()
{
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.snapshot()()
{
  return dispatch thunk of UITableViewDiffableDataSource.snapshot()();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)()
{
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

uint64_t ScaledMetric.wrappedValue.getter()
{
  return ScaledMetric.wrappedValue.getter();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.sizeCategory.getter()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t EnvironmentValues.sizeCategory.setter()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t static VerticalAlignment.top.getter()
{
  return static VerticalAlignment.top.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t BorderedButtonStyle.init()()
{
  return BorderedButtonStyle.init()();
}

uint64_t type metadata accessor for BorderedButtonStyle()
{
  return type metadata accessor for BorderedButtonStyle();
}

uint64_t type metadata accessor for ContentSizeCategory()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t UIHostingConfiguration.margins(_:_:)()
{
  return UIHostingConfiguration.margins(_:_:)();
}

uint64_t UIHostingConfiguration<>.init(content:)()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t type metadata accessor for LabelStyleConfiguration.Icon()
{
  return type metadata accessor for LabelStyleConfiguration.Icon();
}

uint64_t LabelStyleConfiguration.icon.getter()
{
  return LabelStyleConfiguration.icon.getter();
}

uint64_t type metadata accessor for LabelStyleConfiguration.Title()
{
  return type metadata accessor for LabelStyleConfiguration.Title();
}

uint64_t LabelStyleConfiguration.title.getter()
{
  return LabelStyleConfiguration.title.getter();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Axis.Set.vertical.getter()
{
  return static Axis.Set.vertical.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Edge.Set.leading.getter()
{
  return static Edge.Set.leading.getter();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t static Font.title.getter()
{
  return static Font.title.getter();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t static Font.callout.getter()
{
  return static Font.callout.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.bold()()
{
  return Text.bold()();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.labelStyle<A>(_:)()
{
  return View.labelStyle<A>(_:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t static Color.accentColor.getter()
{
  return static Color.accentColor.getter();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t type metadata accessor for Image.Scale()
{
  return type metadata accessor for Image.Scale();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Image.init(_:bundle:)()
{
  return Image.init(_:bundle:)();
}

uint64_t Label.init(title:icon:)()
{
  return Label.init(title:icon:)();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

uint64_t ScoreIndicator.init(size:)()
{
  return ScoreIndicator.init(size:)();
}

uint64_t type metadata accessor for ScoreIndicator()
{
  return type metadata accessor for ScoreIndicator();
}

uint64_t ScoreController.init()()
{
  return ScoreController.init()();
}

uint64_t type metadata accessor for ScoreController()
{
  return type metadata accessor for ScoreController();
}

uint64_t static AgreementConsentView.ConsentResult.== infix(_:_:)()
{
  return static AgreementConsentView.ConsentResult.== infix(_:_:)();
}

uint64_t type metadata accessor for AgreementConsentView.ConsentResult()
{
  return type metadata accessor for AgreementConsentView.ConsentResult();
}

uint64_t AgreementConsentView.init(consent:completion:)()
{
  return AgreementConsentView.init(consent:completion:)();
}

uint64_t type metadata accessor for AgreementConsentView()
{
  return type metadata accessor for AgreementConsentView();
}

uint64_t static BatchEvaluationViewController.shouldShowBatchUI(completion:)()
{
  return static BatchEvaluationViewController.shouldShowBatchUI(completion:)();
}

uint64_t BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)()
{
  return BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)();
}

uint64_t type metadata accessor for BatchEvaluationViewController()
{
  return type metadata accessor for BatchEvaluationViewController();
}

uint64_t PHPickerResult.itemProvider.getter()
{
  return PHPickerResult.itemProvider.getter();
}

uint64_t type metadata accessor for PHPickerResult()
{
  return type metadata accessor for PHPickerResult();
}

uint64_t PHPickerConfiguration.selectionLimit.setter()
{
  return PHPickerConfiguration.selectionLimit.setter();
}

uint64_t PHPickerConfiguration.init()()
{
  return PHPickerConfiguration.init()();
}

uint64_t type metadata accessor for PHPickerConfiguration()
{
  return type metadata accessor for PHPickerConfiguration();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(format:arguments:)()
{
  return String.init(format:arguments:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t NSEnumerator.makeIterator()()
{
  return NSEnumerator.makeIterator()();
}

uint64_t static UIStoryboard.feedbackDraftViewController.getter()
{
  return static UIStoryboard.feedbackDraftViewController.getter();
}

uint64_t NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)()
{
  return NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static FBKFileManager.temporaryDirectory(pathComponents:)()
{
  return static FBKFileManager.temporaryDirectory(pathComponents:)();
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t NSManagedObjectContext.count<A>(for:)()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t NSManagedObjectContext.fetch<A>(_:)()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t PHPickerViewController.init(configuration:)()
{
  return PHPickerViewController.init(configuration:)();
}

uint64_t PHPickerViewController.delegate.setter()
{
  return PHPickerViewController.delegate.setter();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t static NSBundle.feedbackCoreFramework.getter()
{
  return static NSBundle.feedbackCoreFramework.getter();
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t debugPrint(_:separator:terminator:)()
{
  return debugPrint(_:separator:terminator:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

OSStatus AudioServicesAddSystemSoundCompletion(SystemSoundID inSystemSoundID, CFRunLoopRef inRunLoop, CFStringRef inRunLoopMode, AudioServicesSystemSoundCompletionProc inCompletionRoutine, void *inClientData)
{
  return _AudioServicesAddSystemSoundCompletion(inSystemSoundID, inRunLoop, inRunLoopMode, inCompletionRoutine, inClientData);
}

OSStatus AudioServicesCreateSystemSoundID(CFURLRef inFileURL, SystemSoundID *outSystemSoundID)
{
  return _AudioServicesCreateSystemSoundID(inFileURL, outSystemSoundID);
}

OSStatus AudioServicesDisposeSystemSoundID(SystemSoundID inSystemSoundID)
{
  return _AudioServicesDisposeSystemSoundID(inSystemSoundID);
}

void AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
{
}

CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName)
{
  return _CFBundleCopyResourceURL(bundle, resourceName, resourceType, subDirName);
}

CFBundleRef CFBundleGetMainBundle(void)
{
  return _CFBundleGetMainBundle();
}

void CFRelease(CFTypeRef cf)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

uint64_t FBKIsInternalInstall()
{
  return _FBKIsInternalInstall();
}

uint64_t LocalizableGTStringKeyForKey()
{
  return _LocalizableGTStringKeyForKey();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return _SCNetworkReachabilityCreateWithAddress(allocator, address);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return _SCNetworkReachabilityCreateWithName(allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

Boolean SCNetworkReachabilityScheduleWithRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityScheduleWithRunLoop(target, runLoop, runLoopMode);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return _SCNetworkReachabilitySetCallback(target, callout, context);
}

Boolean SCNetworkReachabilityUnscheduleFromRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityUnscheduleFromRunLoop(target, runLoop, runLoopMode);
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _FBKResetDefaultsIfNeeded()
{
  return __FBKResetDefaultsIfNeeded();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return __os_activity_create(dso, description, activity, flags);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

int sqlite3_close(sqlite3 *a1)
{
  return _sqlite3_close(a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return _sqlite3_column_count(pStmt);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return _sqlite3_column_name(a1, N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return _sqlite3_errmsg(a1);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

int sqlite3_open(const char *filename, sqlite3 **ppDb)
{
  return _sqlite3_open(filename, ppDb);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathExtension:];
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingPathExtension];
}

id objc_msgSend_URLByRemovingInvalidExtensions_(void *a1, const char *a2, ...)
{
  return [a1 URLByRemovingInvalidExtensions:];
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:];
}

id objc_msgSend_URLForResource_withExtension_subdirectory_localization_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:subdirectory:localization:];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__allDevices(void *a1, const char *a2, ...)
{
  return _[a1 _allDevices];
}

id objc_msgSend__beginBugForTeam_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginBugForTeam:sender:");
}

id objc_msgSend__changeToBugFormStub_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeToBugFormStub:force:");
}

id objc_msgSend__changeToBugFormStub_withTeam_force_(void *a1, const char *a2, ...)
{
  return [a1 _changeToBugFormStub:withTeam:force:];
}

id objc_msgSend__confirmFilePromiseDeletionWithStub_deletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 _confirmFilePromiseDeletionWithStub:deletionHandler:];
}

id objc_msgSend__deleteFilePromise_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteFilePromise:completionHandler:");
}

id objc_msgSend__detentWithContainerViewBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detentWithContainerViewBlock:");
}

id objc_msgSend__dimmingViewColor(void *a1, const char *a2, ...)
{
  return _[a1 _dimmingViewColor];
}

id objc_msgSend__dynamicColorWithColorsByTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicColorWithColorsByTraitCollection:");
}

id objc_msgSend__filePromiseSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 _filePromiseSortDescriptors];
}

id objc_msgSend__handleLoadingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLoadingError:");
}

id objc_msgSend__initLabel(void *a1, const char *a2, ...)
{
  return _[a1 _initLabel];
}

id objc_msgSend__internalMode(void *a1, const char *a2, ...)
{
  return _[a1 _internalMode];
}

id objc_msgSend__invalidateWatchDogTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateWatchDogTimer];
}

id objc_msgSend__isConnectedToCellNetwork(void *a1, const char *a2, ...)
{
  return _[a1 _isConnectedToCellNetwork];
}

id objc_msgSend__largeDetent(void *a1, const char *a2, ...)
{
  return _[a1 _largeDetent];
}

id objc_msgSend__largeTitleAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 _largeTitleAccessoryView];
}

id objc_msgSend__logOutForBiometricsAuthFailure(void *a1, const char *a2, ...)
{
  return _[a1 _logOutForBiometricsAuthFailure];
}

id objc_msgSend__mediumDetent(void *a1, const char *a2, ...)
{
  return _[a1 _mediumDetent];
}

id objc_msgSend__opaqueVCWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_opaqueVCWithItem:");
}

id objc_msgSend__performBiometricsEvaluationWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBiometricsEvaluationWithContext:");
}

id objc_msgSend__performInteractiveLoginWithManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performInteractiveLoginWithManager:");
}

id objc_msgSend__refreshFeedbackContent(void *a1, const char *a2, ...)
{
  return _[a1 _refreshFeedbackContent];
}

id objc_msgSend__resizeAndScrollTableAfterTextChangeInTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resizeAndScrollTableAfterTextChangeInTextView:");
}

id objc_msgSend__separatorInset(void *a1, const char *a2, ...)
{
  return _[a1 _separatorInset];
}

id objc_msgSend__setColorFilterEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setColorFilterEnabled:");
}

id objc_msgSend__setDetents_(void *a1, const char *a2, ...)
{
  return [a1 _setDetents:];
}

id objc_msgSend__setHeaderAndFooterViewsFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeaderAndFooterViewsFloat:");
}

id objc_msgSend__setLargeTitleAccessoryView_alignToBaseline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLargeTitleAccessoryView:alignToBaseline:");
}

id objc_msgSend__setSectionContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionContentInset:");
}

id objc_msgSend__setShouldDismissWhenTappedOutside_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldDismissWhenTappedOutside:");
}

id objc_msgSend__showFormPickerWithSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showFormPickerWithSender:");
}

id objc_msgSend__showInternalUIIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _showInternalUIIfNeeded];
}

id objc_msgSend__showSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSpinnerWithStatus:userInteractionEnabled:");
}

id objc_msgSend__startBiometricsTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startBiometricsTimer];
}

id objc_msgSend__stopSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _stopSpinner];
}

id objc_msgSend__tableView_canEditRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tableView:canEditRowAtIndexPath:");
}

id objc_msgSend__touchIDDidTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _touchIDDidTimeout];
}

id objc_msgSend__updateLabels(void *a1, const char *a2, ...)
{
  return _[a1 _updateLabels];
}

id objc_msgSend_abortAllSessions(void *a1, const char *a2, ...)
{
  return _[a1 abortAllSessions];
}

id objc_msgSend_absoluteDimension_(void *a1, const char *a2, ...)
{
  return [a1 absoluteDimension:];
}

id objc_msgSend_acceptButton(void *a1, const char *a2, ...)
{
  return _[a1 acceptButton];
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityTraits];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionButton(void *a1, const char *a2, ...)
{
  return _[a1 actionButton];
}

id objc_msgSend_actionView(void *a1, const char *a2, ...)
{
  return _[a1 actionView];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_actionWithURL_(void *a1, const char *a2, ...)
{
  return [a1 actionWithURL:];
}

id objc_msgSend_active(void *a1, const char *a2, ...)
{
  return _[a1 active];
}

id objc_msgSend_activeInboxSource(void *a1, const char *a2, ...)
{
  return _[a1 activeInboxSource];
}

id objc_msgSend_activeManagedTeams(void *a1, const char *a2, ...)
{
  return _[a1 activeManagedTeams];
}

id objc_msgSend_activeTeams(void *a1, const char *a2, ...)
{
  return _[a1 activeTeams];
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicator];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addActionWithTitle_image_actionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addActionWithTitle:image:actionHandler:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return [a1 addArcWithCenter:radius:startAngle:endAngle:clockwise:];
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 addArrangedSubview:];
}

id objc_msgSend_addAttachmentCell(void *a1, const char *a2, ...)
{
  return _[a1 addAttachmentCell];
}

id objc_msgSend_addAttachmentsController(void *a1, const char *a2, ...)
{
  return _[a1 addAttachmentsController];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttributes:range:];
}

id objc_msgSend_addBlurView(void *a1, const char *a2, ...)
{
  return _[a1 addBlurView];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return [a1 addConstraint:];
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return [a1 addConstraints:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return [a1 addIndex:];
}

id objc_msgSend_addKeyCommand_(void *a1, const char *a2, ...)
{
  return [a1 addKeyCommand:];
}

id objc_msgSend_addLayoutManager_(void *a1, const char *a2, ...)
{
  return [a1 addLayoutManager:];
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return [a1 addLineToPoint:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsDidChangeNotificationObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsDidChangeNotificationObserver:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 addOperationWithBlock:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addTimer:forMode:];
}

id objc_msgSend_addToHomeScreen(void *a1, const char *a2, ...)
{
  return _[a1 addToHomeScreen];
}

id objc_msgSend_addVisibleClickableLinkWithIdentifier_andUrlString_(void *a1, const char *a2, ...)
{
  return [a1 addVisibleClickableLinkWithIdentifier:andUrlString:];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_alertControllerForDismissWithLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerForDismissWithLaunchAction:];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_allChoices(void *a1, const char *a2, ...)
{
  return _[a1 allChoices];
}

id objc_msgSend_allDevices(void *a1, const char *a2, ...)
{
  return _[a1 allDevices];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allRowsForTable_(void *a1, const char *a2, ...)
{
  return [a1 allRowsForTable:];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allowCellDefaultKey(void *a1, const char *a2, ...)
{
  return _[a1 allowCellDefaultKey];
}

id objc_msgSend_allowCellUploads(void *a1, const char *a2, ...)
{
  return _[a1 allowCellUploads];
}

id objc_msgSend_allowCellUploadsLabel(void *a1, const char *a2, ...)
{
  return _[a1 allowCellUploadsLabel];
}

id objc_msgSend_allowUnsolicitedFollowup(void *a1, const char *a2, ...)
{
  return _[a1 allowUnsolicitedFollowup];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _[a1 alpha];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 andPredicateWithSubpredicates:];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 animationWithKeyPath:];
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _[a1 annotation];
}

id objc_msgSend_announcement(void *a1, const char *a2, ...)
{
  return _[a1 announcement];
}

id objc_msgSend_answer(void *a1, const char *a2, ...)
{
  return _[a1 answer];
}

id objc_msgSend_answerDidChangeForQuestion_(void *a1, const char *a2, ...)
{
  return [a1 answerDidChangeForQuestion:];
}

id objc_msgSend_answerForQuestionID_(void *a1, const char *a2, ...)
{
  return [a1 answerForQuestionID:];
}

id objc_msgSend_answerTextView(void *a1, const char *a2, ...)
{
  return _[a1 answerTextView];
}

id objc_msgSend_answerType(void *a1, const char *a2, ...)
{
  return _[a1 answerType];
}

id objc_msgSend_answersDictionary(void *a1, const char *a2, ...)
{
  return _[a1 answersDictionary];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_api(void *a1, const char *a2, ...)
{
  return _[a1 api];
}

id objc_msgSend_app(void *a1, const char *a2, ...)
{
  return _[a1 app];
}

id objc_msgSend_appHandle(void *a1, const char *a2, ...)
{
  return _[a1 appHandle];
}

id objc_msgSend_appIconForChoice_(void *a1, const char *a2, ...)
{
  return [a1 appIconForChoice:];
}

id objc_msgSend_appStoryboard(void *a1, const char *a2, ...)
{
  return _[a1 appStoryboard];
}

id objc_msgSend_appendItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 appendItemsWithIdentifiers:];
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 appendItemsWithIdentifiers:intoSectionWithIdentifier:];
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 appendSectionsWithIdentifiers:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_appleSeedURL(void *a1, const char *a2, ...)
{
  return _[a1 appleSeedURL];
}

id objc_msgSend_appleSeedWebsiteButton(void *a1, const char *a2, ...)
{
  return _[a1 appleSeedWebsiteButton];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applySnapshot(void *a1, const char *a2, ...)
{
  return _[a1 applySnapshot];
}

id objc_msgSend_applySnapshot_animatingDifferences_completion_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshot:animatingDifferences:completion:];
}

id objc_msgSend_applySnapshotAnimated_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshotAnimated:];
}

id objc_msgSend_archiveVersion(void *a1, const char *a2, ...)
{
  return _[a1 archiveVersion];
}

id objc_msgSend_arguments(void *a1, const char *a2, ...)
{
  return _[a1 arguments];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_assignFeedback_toParticipant_completion_(void *a1, const char *a2, ...)
{
  return [a1 assignFeedback:toParticipant:completion:];
}

id objc_msgSend_assignee(void *a1, const char *a2, ...)
{
  return _[a1 assignee];
}

id objc_msgSend_attachAnswersToQuestionsWithGivenData_(void *a1, const char *a2, ...)
{
  return [a1 attachAnswersToQuestionsWithGivenData:];
}

id objc_msgSend_attachHandle(void *a1, const char *a2, ...)
{
  return _[a1 attachHandle];
}

id objc_msgSend_attachToBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 attachToBarButtonItem:];
}

id objc_msgSend_attachedPath(void *a1, const char *a2, ...)
{
  return _[a1 attachedPath];
}

id objc_msgSend_attachmentDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 attachmentDisplayName];
}

id objc_msgSend_attachmentItems(void *a1, const char *a2, ...)
{
  return _[a1 attachmentItems];
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _[a1 attachments];
}

id objc_msgSend_attachmentsBeingDeletedCount(void *a1, const char *a2, ...)
{
  return _[a1 attachmentsBeingDeletedCount];
}

id objc_msgSend_attemptedSubmission(void *a1, const char *a2, ...)
{
  return _[a1 attemptedSubmission];
}

id objc_msgSend_attributedStringRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 attributedStringRepresentation];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_attributesAtIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return [a1 attributesAtIndex:effectiveRange:];
}

id objc_msgSend_authenticationContextForUsername_(void *a1, const char *a2, ...)
{
  return [a1 authenticationContextForUsername:];
}

id objc_msgSend_autoLogOutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 autoLogOutIfNeeded];
}

id objc_msgSend_automaticallyFillInAllAnswers(void *a1, const char *a2, ...)
{
  return _[a1 automaticallyFillInAllAnswers];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundStartupWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 backgroundStartupWithCompletion:];
}

id objc_msgSend_batchEvaluationViewControllerWithUseNavigationStack_showsCloseButton_onDismiss_(void *a1, const char *a2, ...)
{
  return [a1 batchEvaluationViewControllerWithUseNavigationStack:showsCloseButton:onDismiss:];
}

id objc_msgSend_batchUICellWithCollectionView_indexPath_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchUICellWithCollectionView:indexPath:reuseIdentifier:");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithName:nil expirationHandler:nil];
}

id objc_msgSend_beginBugForTeam_sender_(void *a1, const char *a2, ...)
{
  return [a1 beginBugForTeam:sender:];
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return _[a1 beginEditing];
}

id objc_msgSend_beginEditingQuestion(void *a1, const char *a2, ...)
{
  return _[a1 beginEditingQuestion];
}

id objc_msgSend_beginFeedbackForSurvey_contentItem_forTeam_(void *a1, const char *a2, ...)
{
  return [a1 beginFeedbackForSurvey:contentItem:forTeam:];
}

id objc_msgSend_beginFeedbackForSurvey_forTeam_(void *a1, const char *a2, ...)
{
  return [a1 beginFeedbackForSurvey:forTeam:];
}

id objc_msgSend_beginFeedbackForTeam_sender_(void *a1, const char *a2, ...)
{
  return [a1 beginFeedbackForTeam:sender:];
}

id objc_msgSend_beginFeedbackWithDraft_(void *a1, const char *a2, ...)
{
  return [a1 beginFeedbackWithDraft:];
}

id objc_msgSend_beginFeedbackWithDraftItem_(void *a1, const char *a2, ...)
{
  return [a1 beginFeedbackWithDraftItem:];
}

id objc_msgSend_beginFileDownloadForFilePromise_(void *a1, const char *a2, ...)
{
  return [a1 beginFileDownloadForFilePromise:];
}

id objc_msgSend_beginObserving_(void *a1, const char *a2, ...)
{
  return [a1 beginObserving:];
}

id objc_msgSend_beginObservingAllUploadTasks(void *a1, const char *a2, ...)
{
  return _[a1 beginObservingAllUploadTasks];
}

id objc_msgSend_beginObservingResponse_(void *a1, const char *a2, ...)
{
  return [a1 beginObservingResponse:];
}

id objc_msgSend_beginPairingDevice_showUIBlock_(void *a1, const char *a2, ...)
{
  return [a1 beginPairingDevice:showUIBlock:];
}

id objc_msgSend_beginRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 beginRefreshing];
}

id objc_msgSend_beginScanning(void *a1, const char *a2, ...)
{
  return _[a1 beginScanning];
}

id objc_msgSend_beginSubmissionForFormResponse_withCollector_completion_(void *a1, const char *a2, ...)
{
  return [a1 beginSubmissionForFormResponse:withCollector:completion:];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _[a1 beginningOfDocument];
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _[a1 bezierPath];
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithOvalInRect:];
}

id objc_msgSend_biometricsState(void *a1, const char *a2, ...)
{
  return _[a1 biometricsState];
}

id objc_msgSend_biometricsWatchDog(void *a1, const char *a2, ...)
{
  return _[a1 biometricsWatchDog];
}

id objc_msgSend_blockLandscapeOrientations_(void *a1, const char *a2, ...)
{
  return [a1 blockLandscapeOrientations:];
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _[a1 blueColor];
}

id objc_msgSend_blurView(void *a1, const char *a2, ...)
{
  return _[a1 blurView];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_(void *a1, const char *a2, ...)
{
  return [a1 boundarySupplementaryItemWithLayoutSize:elementKind:alignment:];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bugForm(void *a1, const char *a2, ...)
{
  return _[a1 bugForm];
}

id objc_msgSend_bugFormEditorDelegate(void *a1, const char *a2, ...)
{
  return _[a1 bugFormEditorDelegate];
}

id objc_msgSend_bugFormFromForDraftItem_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 bugFormFromForDraftItem:withCompletion:];
}

id objc_msgSend_bugFormID(void *a1, const char *a2, ...)
{
  return _[a1 bugFormID];
}

id objc_msgSend_bugFormStubs(void *a1, const char *a2, ...)
{
  return _[a1 bugFormStubs];
}

id objc_msgSend_bugFormStubsForPickerWithPredicate_team_(void *a1, const char *a2, ...)
{
  return [a1 bugFormStubsForPickerWithPredicate:team:];
}

id objc_msgSend_bugFormStubsMatchingBuild_forPlatform_withStubs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bugFormStubsMatchingBuild:forPlatform:withStubs:");
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return _[a1 build];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass:];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bytesToUpload(void *a1, const char *a2, ...)
{
  return _[a1 bytesToUpload];
}

id objc_msgSend_bytesUploaded(void *a1, const char *a2, ...)
{
  return _[a1 bytesUploaded];
}

id objc_msgSend_cachedCandidateStubsCount(void *a1, const char *a2, ...)
{
  return _[a1 cachedCandidateStubsCount];
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _[a1 callStackSymbols];
}

id objc_msgSend_canCancelAttachmentCollection_(void *a1, const char *a2, ...)
{
  return [a1 canCancelAttachmentCollection:];
}

id objc_msgSend_canCloseFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canCloseFeedback];
}

id objc_msgSend_canDeleteAttachment_(void *a1, const char *a2, ...)
{
  return [a1 canDeleteAttachment:];
}

id objc_msgSend_canDeleteFiles(void *a1, const char *a2, ...)
{
  return _[a1 canDeleteFiles];
}

id objc_msgSend_canDemoteFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canDemoteFeedback];
}

id objc_msgSend_canDismissPresentedController_(void *a1, const char *a2, ...)
{
  return [a1 canDismissPresentedController:];
}

id objc_msgSend_canDisplayExtension_strict_(void *a1, const char *a2, ...)
{
  return [a1 canDisplayExtension:strict:];
}

id objc_msgSend_canDisplayURL_(void *a1, const char *a2, ...)
{
  return [a1 canDisplayURL:];
}

id objc_msgSend_canDownloadFiles(void *a1, const char *a2, ...)
{
  return _[a1 canDownloadFiles];
}

id objc_msgSend_canEvaluatePolicy_error_(void *a1, const char *a2, ...)
{
  return [a1 canEvaluatePolicy:error:];
}

id objc_msgSend_canLaunchFeedbackDraft(void *a1, const char *a2, ...)
{
  return _[a1 canLaunchFeedbackDraft];
}

id objc_msgSend_canLaunchSurveyDraft(void *a1, const char *a2, ...)
{
  return _[a1 canLaunchSurveyDraft];
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return [a1 canOpenURL:];
}

id objc_msgSend_canPerformPaste(void *a1, const char *a2, ...)
{
  return _[a1 canPerformPaste];
}

id objc_msgSend_canPreviewItem_(void *a1, const char *a2, ...)
{
  return [a1 canPreviewItem:];
}

id objc_msgSend_canPromoteFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canPromoteFeedback];
}

id objc_msgSend_canReassignFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canReassignFeedback];
}

id objc_msgSend_canRemoveDevice_(void *a1, const char *a2, ...)
{
  return [a1 canRemoveDevice:];
}

id objc_msgSend_canResolveNeedsAction(void *a1, const char *a2, ...)
{
  return _[a1 canResolveNeedsAction];
}

id objc_msgSend_canRespond(void *a1, const char *a2, ...)
{
  return _[a1 canRespond];
}

id objc_msgSend_canSelect(void *a1, const char *a2, ...)
{
  return _[a1 canSelect];
}

id objc_msgSend_canShowBatchUIWithAction_(void *a1, const char *a2, ...)
{
  return [a1 canShowBatchUIWithAction:];
}

id objc_msgSend_canShowItems(void *a1, const char *a2, ...)
{
  return _[a1 canShowItems];
}

id objc_msgSend_canStartGathering(void *a1, const char *a2, ...)
{
  return _[a1 canStartGathering];
}

id objc_msgSend_canStartNewFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canStartNewFeedback];
}

id objc_msgSend_canTakeForTeam_(void *a1, const char *a2, ...)
{
  return [a1 canTakeForTeam:];
}

id objc_msgSend_cancelBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 cancelBarButtonItem];
}

id objc_msgSend_candidateFormStubsPredicate(void *a1, const char *a2, ...)
{
  return _[a1 candidateFormStubsPredicate];
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 cellConfiguration];
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForItemAtIndexPath:];
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForRowAtIndexPath:];
}

id objc_msgSend_cellHeights(void *a1, const char *a2, ...)
{
  return _[a1 cellHeights];
}

id objc_msgSend_changedValues(void *a1, const char *a2, ...)
{
  return _[a1 changedValues];
}

id objc_msgSend_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:");
}

id objc_msgSend_characterLimit(void *a1, const char *a2, ...)
{
  return _[a1 characterLimit];
}

id objc_msgSend_checkLegalAndSubmit(void *a1, const char *a2, ...)
{
  return _[a1 checkLegalAndSubmit];
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 checkResourceIsReachableAndReturnError:];
}

id objc_msgSend_checkboxAnswersAtStart(void *a1, const char *a2, ...)
{
  return _[a1 checkboxAnswersAtStart];
}

id objc_msgSend_choice(void *a1, const char *a2, ...)
{
  return _[a1 choice];
}

id objc_msgSend_choiceDelegate(void *a1, const char *a2, ...)
{
  return _[a1 choiceDelegate];
}

id objc_msgSend_choiceSetResolver(void *a1, const char *a2, ...)
{
  return _[a1 choiceSetResolver];
}

id objc_msgSend_circleRectForFrame_(void *a1, const char *a2, ...)
{
  return [a1 circleRectForFrame:];
}

id objc_msgSend_cleanupBugSessionDirectoriesForForm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupBugSessionDirectoriesForForm:");
}

id objc_msgSend_clearBlockingUI(void *a1, const char *a2, ...)
{
  return _[a1 clearBlockingUI];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearDetail(void *a1, const char *a2, ...)
{
  return _[a1 clearDetail];
}

id objc_msgSend_clearLoginTaskQueue(void *a1, const char *a2, ...)
{
  return _[a1 clearLoginTaskQueue];
}

id objc_msgSend_closeDraftAndDelete_withError_completion_(void *a1, const char *a2, ...)
{
  return [a1 closeDraftAndDelete:withError:completion:];
}

id objc_msgSend_closeFeedbackItems_completion_(void *a1, const char *a2, ...)
{
  return [a1 closeFeedbackItems:completion:];
}

id objc_msgSend_closeFeedbackWithItem_(void *a1, const char *a2, ...)
{
  return [a1 closeFeedbackWithItem:];
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return _[a1 closePath];
}

id objc_msgSend_closeWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 closeWithCompletion:];
}

id objc_msgSend_closedLabel(void *a1, const char *a2, ...)
{
  return _[a1 closedLabel];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collectsFiles(void *a1, const char *a2, ...)
{
  return _[a1 collectsFiles];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_comesFromFeedbackd(void *a1, const char *a2, ...)
{
  return _[a1 comesFromFeedbackd];
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _[a1 commonInit];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_composeCellRegistration(void *a1, const char *a2, ...)
{
  return _[a1 composeCellRegistration];
}

id objc_msgSend_composeFeedbackToolbarItem(void *a1, const char *a2, ...)
{
  return _[a1 composeFeedbackToolbarItem];
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 configurationByApplyingConfiguration:];
}

id objc_msgSend_configurationPreferringMulticolor(void *a1, const char *a2, ...)
{
  return _[a1 configurationPreferringMulticolor];
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithActions:];
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:];
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithTextStyle:];
}

id objc_msgSend_configurationWithWeight_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithWeight:];
}

id objc_msgSend_configureActionsMenu(void *a1, const char *a2, ...)
{
  return _[a1 configureActionsMenu];
}

id objc_msgSend_configureAssigneeForContentItem_(void *a1, const char *a2, ...)
{
  return [a1 configureAssigneeForContentItem:];
}

id objc_msgSend_configureCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 configureCollectionView];
}

id objc_msgSend_configureForAppleFeedbackWithFollowup_(void *a1, const char *a2, ...)
{
  return [a1 configureForAppleFeedbackWithFollowup:];
}

id objc_msgSend_configureForContentItem_(void *a1, const char *a2, ...)
{
  return [a1 configureForContentItem:];
}

id objc_msgSend_configureForFollowup_(void *a1, const char *a2, ...)
{
  return [a1 configureForFollowup:];
}

id objc_msgSend_configureForTeam_(void *a1, const char *a2, ...)
{
  return [a1 configureForTeam:];
}

id objc_msgSend_configureForTeam_disclosesMoreTeams_(void *a1, const char *a2, ...)
{
  return [a1 configureForTeam:disclosesMoreTeams:];
}

id objc_msgSend_configureKeyboardShortcuts(void *a1, const char *a2, ...)
{
  return _[a1 configureKeyboardShortcuts];
}

id objc_msgSend_configureUserCell(void *a1, const char *a2, ...)
{
  return _[a1 configureUserCell];
}

id objc_msgSend_configureWithContentItem_(void *a1, const char *a2, ...)
{
  return [a1 configureWithContentItem:];
}

id objc_msgSend_configureWithInbox_(void *a1, const char *a2, ...)
{
  return [a1 configureWithInbox:];
}

id objc_msgSend_configuredDevices(void *a1, const char *a2, ...)
{
  return _[a1 configuredDevices];
}

id objc_msgSend_connectionDidChangeToCellular(void *a1, const char *a2, ...)
{
  return _[a1 connectionDidChangeToCellular];
}

id objc_msgSend_connectionDidChangeToWifi(void *a1, const char *a2, ...)
{
  return _[a1 connectionDidChangeToWifi];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _[a1 constant];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return [a1 constraintsWithVisualFormat:options:metrics:views:];
}

id objc_msgSend_contactImageForEmailAddress_(void *a1, const char *a2, ...)
{
  return [a1 contactImageForEmailAddress:];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _[a1 container];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containsAnyAdditionsOrRemovals(void *a1, const char *a2, ...)
{
  return _[a1 containsAnyAdditionsOrRemovals];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _[a1 contentInsets];
}

id objc_msgSend_contentItem(void *a1, const char *a2, ...)
{
  return _[a1 contentItem];
}

id objc_msgSend_contentItemObserver(void *a1, const char *a2, ...)
{
  return _[a1 contentItemObserver];
}

id objc_msgSend_contentItems(void *a1, const char *a2, ...)
{
  return _[a1 contentItems];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentUnavailableLabel(void *a1, const char *a2, ...)
{
  return _[a1 contentUnavailableLabel];
}

id objc_msgSend_contentUnavailableView(void *a1, const char *a2, ...)
{
  return _[a1 contentUnavailableView];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return _[a1 contents];
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return [a1 contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return [a1 contextualActionWithStyle:title:handler:];
}

id objc_msgSend_controllerForItem_(void *a1, const char *a2, ...)
{
  return [a1 controllerForItem:];
}

id objc_msgSend_controllerForUrl_(void *a1, const char *a2, ...)
{
  return [a1 controllerForUrl:];
}

id objc_msgSend_controllerForUrl_useFallback_(void *a1, const char *a2, ...)
{
  return [a1 controllerForUrl:useFallback:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 countForFetchRequest:error:];
}

id objc_msgSend_csvRepresentationForTable_(void *a1, const char *a2, ...)
{
  return [a1 csvRepresentationForTable:];
}

id objc_msgSend_currDetailIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 currDetailIndexPath];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDeviceAttachmentManager(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceAttachmentManager];
}

id objc_msgSend_currentDeviceBugSession(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceBugSession];
}

id objc_msgSend_currentGroupedDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentGroupedDevice];
}

id objc_msgSend_currentIDMSEnvironmentMatchesCurrentFBKSEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 currentIDMSEnvironmentMatchesCurrentFBKSEnvironment];
}

id objc_msgSend_currentLegalVersion(void *a1, const char *a2, ...)
{
  return _[a1 currentLegalVersion];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationCenter];
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 currentReachabilityStatus];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentTeam(void *a1, const char *a2, ...)
{
  return _[a1 currentTeam];
}

id objc_msgSend_currentURLActionActivity(void *a1, const char *a2, ...)
{
  return _[a1 currentURLActionActivity];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_currentiOSLegalDoc(void *a1, const char *a2, ...)
{
  return _[a1 currentiOSLegalDoc];
}

id objc_msgSend_customDetentHeight(void *a1, const char *a2, ...)
{
  return _[a1 customDetentHeight];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataChangeObserver(void *a1, const char *a2, ...)
{
  return _[a1 dataChangeObserver];
}

id objc_msgSend_dataDetectorWithTypes_error_(void *a1, const char *a2, ...)
{
  return [a1 dataDetectorWithTypes:error:];
}

id objc_msgSend_databaseReader(void *a1, const char *a2, ...)
{
  return _[a1 databaseReader];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return [a1 dateFromString:];
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _[a1 dateLabel];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSince1970:];
}

id objc_msgSend_dbFile(void *a1, const char *a2, ...)
{
  return _[a1 dbFile];
}

id objc_msgSend_dbUrl(void *a1, const char *a2, ...)
{
  return _[a1 dbUrl];
}

id objc_msgSend_dbUrlForMetadataUrl_(void *a1, const char *a2, ...)
{
  return [a1 dbUrlForMetadataUrl:];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_debugDetails(void *a1, const char *a2, ...)
{
  return _[a1 debugDetails];
}

id objc_msgSend_debugLabel(void *a1, const char *a2, ...)
{
  return _[a1 debugLabel];
}

id objc_msgSend_declineButton(void *a1, const char *a2, ...)
{
  return _[a1 declineButton];
}

id objc_msgSend_ded(void *a1, const char *a2, ...)
{
  return _[a1 ded];
}

id objc_msgSend_dedSharingDevice(void *a1, const char *a2, ...)
{
  return _[a1 dedSharingDevice];
}

id objc_msgSend_ded_findWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 ded_findWithBlock:];
}

id objc_msgSend_ded_selectItemsPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 ded_selectItemsPassingTest:];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultTeam(void *a1, const char *a2, ...)
{
  return _[a1 defaultTeam];
}

id objc_msgSend_delayedUrlAction(void *a1, const char *a2, ...)
{
  return _[a1 delayedUrlAction];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAllDraftDirectories(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllDraftDirectories];
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return [a1 deleteCharactersInRange:];
}

id objc_msgSend_deleteDraftFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return [a1 deleteDraftFromContentItem:completion:];
}

id objc_msgSend_deleteDraftFromContentItem_dismissViewOnCompletion_(void *a1, const char *a2, ...)
{
  return [a1 deleteDraftFromContentItem:dismissViewOnCompletion:];
}

id objc_msgSend_deleteFilePromiseWithUUID_object_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteFilePromiseWithUUID:object:completion:");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteStaleAttachmentLegalTextEntries(void *a1, const char *a2, ...)
{
  return _[a1 deleteStaleAttachmentLegalTextEntries];
}

id objc_msgSend_deletedObjects(void *a1, const char *a2, ...)
{
  return _[a1 deletedObjects];
}

id objc_msgSend_demoteFeedback_completion_(void *a1, const char *a2, ...)
{
  return [a1 demoteFeedback:completion:];
}

id objc_msgSend_dequeueConfiguredReusableCellWithRegistration_forIndexPath_item_(void *a1, const char *a2, ...)
{
  return [a1 dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:];
}

id objc_msgSend_dequeueConfiguredReusableSupplementaryViewWithRegistration_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithReuseIdentifier:forIndexPath:];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectItemAtIndexPath:animated:];
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectRowAtIndexPath:animated:];
}

id objc_msgSend_destinationViewController(void *a1, const char *a2, ...)
{
  return _[a1 destinationViewController];
}

id objc_msgSend_destroyDraft_(void *a1, const char *a2, ...)
{
  return [a1 destroyDraft:];
}

id objc_msgSend_destroyItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 destroyItemAtIndexPath:];
}

id objc_msgSend_destructiveBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 destructiveBarButtonItem];
}

id objc_msgSend_detailLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailLabel];
}

id objc_msgSend_detailLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 detailLabelTrailingConstraint];
}

id objc_msgSend_detailLabelTrailingConstraintInitial(void *a1, const char *a2, ...)
{
  return _[a1 detailLabelTrailingConstraintInitial];
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 detailTextLabel];
}

id objc_msgSend_detailedItem(void *a1, const char *a2, ...)
{
  return _[a1 detailedItem];
}

id objc_msgSend_detentBehavior(void *a1, const char *a2, ...)
{
  return _[a1 detentBehavior];
}

id objc_msgSend_detentForCustomHeight_(void *a1, const char *a2, ...)
{
  return [a1 detentForCustomHeight:];
}

id objc_msgSend_detentForPreferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 detentForPreferredContentSize];
}

id objc_msgSend_developerURL(void *a1, const char *a2, ...)
{
  return _[a1 developerURL];
}

id objc_msgSend_developerWebsiteButton(void *a1, const char *a2, ...)
{
  return _[a1 developerWebsiteButton];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceChoices(void *a1, const char *a2, ...)
{
  return _[a1 deviceChoices];
}

id objc_msgSend_deviceChoicesController_didChooseDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceChoicesController:didChooseDevices:");
}

id objc_msgSend_deviceChoicesControllerDidCancelWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceChoicesControllerDidCancelWithController:");
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _[a1 deviceClass];
}

id objc_msgSend_deviceGroups(void *a1, const char *a2, ...)
{
  return _[a1 deviceGroups];
}

id objc_msgSend_deviceIcon(void *a1, const char *a2, ...)
{
  return _[a1 deviceIcon];
}

id objc_msgSend_deviceImage(void *a1, const char *a2, ...)
{
  return _[a1 deviceImage];
}

id objc_msgSend_deviceSupportsFaceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsFaceID];
}

id objc_msgSend_devicesController(void *a1, const char *a2, ...)
{
  return _[a1 devicesController];
}

id objc_msgSend_devicesId(void *a1, const char *a2, ...)
{
  return _[a1 devicesId];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didChangeAnswerToQuestion_(void *a1, const char *a2, ...)
{
  return [a1 didChangeAnswerToQuestion:];
}

id objc_msgSend_didChangeDeviceParingWithDeviceAdded_removed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeDeviceParingWithDeviceAdded:removed:");
}

id objc_msgSend_didFetchFormItems(void *a1, const char *a2, ...)
{
  return _[a1 didFetchFormItems];
}

id objc_msgSend_didFetchFormStubs(void *a1, const char *a2, ...)
{
  return _[a1 didFetchFormStubs];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didPinPairWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 didPinPairWithDevice:];
}

id objc_msgSend_didPressChangeBugForm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPressChangeBugForm:");
}

id objc_msgSend_didRefreshFormStubsNotificationObserver(void *a1, const char *a2, ...)
{
  return _[a1 didRefreshFormStubsNotificationObserver];
}

id objc_msgSend_didReloadApp(void *a1, const char *a2, ...)
{
  return _[a1 didReloadApp];
}

id objc_msgSend_didResetWarnings_(void *a1, const char *a2, ...)
{
  return [a1 didResetWarnings:];
}

id objc_msgSend_didTapAttachment_indexPath_(void *a1, const char *a2, ...)
{
  return [a1 didTapAttachment:indexPath:];
}

id objc_msgSend_didTapCloseFeedbackWithItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapCloseFeedbackWithItem:atIndexPath:");
}

id objc_msgSend_didTapDevice_indexPath_(void *a1, const char *a2, ...)
{
  return [a1 didTapDevice:indexPath:];
}

id objc_msgSend_didTapDone_(void *a1, const char *a2, ...)
{
  return [a1 didTapDone:];
}

id objc_msgSend_didTapForgetDevice_(void *a1, const char *a2, ...)
{
  return [a1 didTapForgetDevice:];
}

id objc_msgSend_didTapSignOut_(void *a1, const char *a2, ...)
{
  return [a1 didTapSignOut:];
}

id objc_msgSend_diffableDataSource(void *a1, const char *a2, ...)
{
  return _[a1 diffableDataSource];
}

id objc_msgSend_diffableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 diffableIdentifier];
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _[a1 digits];
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _[a1 dimmingView];
}

id objc_msgSend_directoryList(void *a1, const char *a2, ...)
{
  return _[a1 directoryList];
}

id objc_msgSend_dismiss_(void *a1, const char *a2, ...)
{
  return [a1 dismiss:];
}

id objc_msgSend_dismissSecondaryOrShowEmptyViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 dismissSecondaryOrShowEmptyViewControllerAnimated:];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:completion:];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayNonParticipant(void *a1, const char *a2, ...)
{
  return _[a1 displayNonParticipant];
}

id objc_msgSend_displaySortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 displaySortDescriptors];
}

id objc_msgSend_displayText(void *a1, const char *a2, ...)
{
  return _[a1 displayText];
}

id objc_msgSend_displayText_(void *a1, const char *a2, ...)
{
  return [a1 displayText:];
}

id objc_msgSend_displayTextForAnswer_(void *a1, const char *a2, ...)
{
  return [a1 displayTextForAnswer:];
}

id objc_msgSend_displayTitle(void *a1, const char *a2, ...)
{
  return _[a1 displayTitle];
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _[a1 displayType];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadState(void *a1, const char *a2, ...)
{
  return _[a1 downloadState];
}

id objc_msgSend_draftController(void *a1, const char *a2, ...)
{
  return _[a1 draftController];
}

id objc_msgSend_draftDevices(void *a1, const char *a2, ...)
{
  return _[a1 draftDevices];
}

id objc_msgSend_draftResponsesContentItemsForTeam_(void *a1, const char *a2, ...)
{
  return [a1 draftResponsesContentItemsForTeam:];
}

id objc_msgSend_draftingController(void *a1, const char *a2, ...)
{
  return _[a1 draftingController];
}

id objc_msgSend_drainAndPresentConsentsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 drainAndPresentConsentsWithCompletion:];
}

id objc_msgSend_editBarButton(void *a1, const char *a2, ...)
{
  return _[a1 editBarButton];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_editorDidDismissForQuestion_(void *a1, const char *a2, ...)
{
  return [a1 editorDidDismissForQuestion];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 endBackgroundTask:];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return _[a1 endEditing];
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return [a1 endEditing:];
}

id objc_msgSend_endEditingQuestion(void *a1, const char *a2, ...)
{
  return _[a1 endEditingQuestion];
}

id objc_msgSend_endRefreshing(void *a1, const char *a2, ...)
{
  return _[a1 endRefreshing];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_enhancedLoggingInbox(void *a1, const char *a2, ...)
{
  return _[a1 enhancedLoggingInbox];
}

id objc_msgSend_enteringDetail(void *a1, const char *a2, ...)
{
  return _[a1 enteringDetail];
}

id objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateAttribute:inRange:options:usingBlock:];
}

id objc_msgSend_enumerateMatchesInString_options_range_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateMatchesInString:options:range:usingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_environmentDescription(void *a1, const char *a2, ...)
{
  return _[a1 environmentDescription];
}

id objc_msgSend_errorArrow(void *a1, const char *a2, ...)
{
  return _[a1 errorArrow];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_estimatedDimension_(void *a1, const char *a2, ...)
{
  return [a1 estimatedDimension:];
}

id objc_msgSend_estimatedRowHeight(void *a1, const char *a2, ...)
{
  return _[a1 estimatedRowHeight];
}

id objc_msgSend_evaluateJavaScript_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 evaluateJavaScript:completionHandler:];
}

id objc_msgSend_evaluatePolicy_options_reply_(void *a1, const char *a2, ...)
{
  return [a1 evaluatePolicy:options:reply:];
}

id objc_msgSend_evaluateSelectionWithValue_(void *a1, const char *a2, ...)
{
  return [a1 evaluateSelectionWithValue:];
}

id objc_msgSend_evaluateSelectionWithValues_(void *a1, const char *a2, ...)
{
  return [a1 evaluateSelectionWithValues:];
}

id objc_msgSend_evaluateWithObject_(void *a1, const char *a2, ...)
{
  return [a1 evaluateWithObject:];
}

id objc_msgSend_eventCountForCurrentPage(void *a1, const char *a2, ...)
{
  return _[a1 eventCountForCurrentPage];
}

id objc_msgSend_eventMessage(void *a1, const char *a2, ...)
{
  return _[a1 eventMessage];
}

id objc_msgSend_exactMatchFormStub(void *a1, const char *a2, ...)
{
  return _[a1 exactMatchFormStub];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_exitCaptiveModeRemovingFromHomeScreen_(void *a1, const char *a2, ...)
{
  return [a1 exitCaptiveModeRemovingFromHomeScreen:];
}

id objc_msgSend_extensionIsTextFile_(void *a1, const char *a2, ...)
{
  return [a1 extensionIsTextFile:];
}

id objc_msgSend_extensions(void *a1, const char *a2, ...)
{
  return _[a1 extensions];
}

id objc_msgSend_fallbackToOpaqueViewer(void *a1, const char *a2, ...)
{
  return _[a1 fallbackToOpaqueViewer];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fauxAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 fauxAccessoryView];
}

id objc_msgSend_fbaDataObservers(void *a1, const char *a2, ...)
{
  return _[a1 fbaDataObservers];
}

id objc_msgSend_fbaMainStoryboard(void *a1, const char *a2, ...)
{
  return _[a1 fbaMainStoryboard];
}

id objc_msgSend_fbaNameLabel(void *a1, const char *a2, ...)
{
  return _[a1 fbaNameLabel];
}

id objc_msgSend_fba_hasValidStartAndEndDates(void *a1, const char *a2, ...)
{
  return [a1 fba_hasValidStartAndEndDates];
}

id objc_msgSend_fba_toString(void *a1, const char *a2, ...)
{
  return [a1 fba_toString];
}

id objc_msgSend_feedback(void *a1, const char *a2, ...)
{
  return _[a1 feedback];
}

id objc_msgSend_feedbackFollowups(void *a1, const char *a2, ...)
{
  return _[a1 feedbackFollowups];
}

id objc_msgSend_feedbackIDAndTitleString(void *a1, const char *a2, ...)
{
  return _[a1 feedbackIDAndTitleString];
}

id objc_msgSend_feedbackIDString(void *a1, const char *a2, ...)
{
  return _[a1 feedbackIDString];
}

id objc_msgSend_fetchErrorBlock(void *a1, const char *a2, ...)
{
  return _[a1 fetchErrorBlock];
}

id objc_msgSend_fetchFeedbackStatusForFeedback_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchFeedbackStatusForFeedback:completion:];
}

id objc_msgSend_fetchFormItemByTat_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchFormItemByTat:completion:];
}

id objc_msgSend_fetchFromStartDate_toEndDate_(void *a1, const char *a2, ...)
{
  return [a1 fetchFromStartDate:toEndDate:];
}

id objc_msgSend_fetchIconImageDataForScale_completionCompletion_(void *a1, const char *a2, ...)
{
  return [a1 fetchIconImageDataForScale:completionCompletion:];
}

id objc_msgSend_fetchRequesForInboxItemsInTeam_(void *a1, const char *a2, ...)
{
  return [a1 fetchRequesForInboxItemsInTeam:];
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 fetchRequest];
}

id objc_msgSend_fetchWatchdog(void *a1, const char *a2, ...)
{
  return _[a1 fetchWatchdog];
}

id objc_msgSend_ffu(void *a1, const char *a2, ...)
{
  return _[a1 ffu];
}

id objc_msgSend_ffuID(void *a1, const char *a2, ...)
{
  return _[a1 ffuID];
}

id objc_msgSend_fileDownloadInProgress(void *a1, const char *a2, ...)
{
  return _[a1 fileDownloadInProgress];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:];
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:isDirectory:];
}

id objc_msgSend_fileNameLabel(void *a1, const char *a2, ...)
{
  return _[a1 fileNameLabel];
}

id objc_msgSend_filePromiseSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 filePromiseSortDescriptors];
}

id objc_msgSend_filePromiseStubs(void *a1, const char *a2, ...)
{
  return _[a1 filePromiseStubs];
}

id objc_msgSend_filePromises(void *a1, const char *a2, ...)
{
  return _[a1 filePromises];
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _[a1 fileSize];
}

id objc_msgSend_fileSizeLabel(void *a1, const char *a2, ...)
{
  return _[a1 fileSizeLabel];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_filename(void *a1, const char *a2, ...)
{
  return _[a1 filename];
}

id objc_msgSend_filesBeingAttachedCount(void *a1, const char *a2, ...)
{
  return _[a1 filesBeingAttachedCount];
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _[a1 fill];
}

id objc_msgSend_filterContentForFilterManager_(void *a1, const char *a2, ...)
{
  return [a1 filterContentForFilterManager:];
}

id objc_msgSend_filterGroupsForAll(void *a1, const char *a2, ...)
{
  return _[a1 filterGroupsForAll];
}

id objc_msgSend_filterGroupsForTeam_(void *a1, const char *a2, ...)
{
  return [a1 filterGroupsForTeam:];
}

id objc_msgSend_filterManager(void *a1, const char *a2, ...)
{
  return _[a1 filterManager];
}

id objc_msgSend_filterPlatform(void *a1, const char *a2, ...)
{
  return _[a1 filterPlatform];
}

id objc_msgSend_filterSource(void *a1, const char *a2, ...)
{
  return _[a1 filterSource];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filteredArrayUsingPredicate:];
}

id objc_msgSend_filteredInboxItems(void *a1, const char *a2, ...)
{
  return _[a1 filteredInboxItems];
}

id objc_msgSend_findExactMatchFormStubAndTeamWithFormStubs_(void *a1, const char *a2, ...)
{
  return [a1 findExactMatchFormStubAndTeamWithFormStubs:];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstResponder(void *a1, const char *a2, ...)
{
  return _[a1 firstResponder];
}

id objc_msgSend_fixedSpacing_(void *a1, const char *a2, ...)
{
  return [a1 fixedSpacing];
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return _[a1 flashScrollIndicators];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_footerRegistration(void *a1, const char *a2, ...)
{
  return _[a1 footerRegistration];
}

id objc_msgSend_formID(void *a1, const char *a2, ...)
{
  return _[a1 formID];
}

id objc_msgSend_formIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 formIdentifier];
}

id objc_msgSend_formResponse(void *a1, const char *a2, ...)
{
  return _[a1 formResponse];
}

id objc_msgSend_formResponseStub(void *a1, const char *a2, ...)
{
  return _[a1 formResponseStub];
}

id objc_msgSend_formStub(void *a1, const char *a2, ...)
{
  return _[a1 formStub];
}

id objc_msgSend_formTat(void *a1, const char *a2, ...)
{
  return _[a1 formTat];
}

id objc_msgSend_formattedMailboxSortDate(void *a1, const char *a2, ...)
{
  return _[a1 formattedMailboxSortDate];
}

id objc_msgSend_forms(void *a1, const char *a2, ...)
{
  return _[a1 forms];
}

id objc_msgSend_foundCorruptDate(void *a1, const char *a2, ...)
{
  return _[a1 foundCorruptDate];
}

id objc_msgSend_fractionalHeightDimension_(void *a1, const char *a2, ...)
{
  return [a1 fractionalHeightDimension:];
}

id objc_msgSend_fractionalWidthDimension_(void *a1, const char *a2, ...)
{
  return [a1 fractionalWidthDimension];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameOfPresentedViewInContainerView(void *a1, const char *a2, ...)
{
  return _[a1 frameOfPresentedViewInContainerView];
}

id objc_msgSend_fullAnnouncementHTML(void *a1, const char *a2, ...)
{
  return _[a1 fullAnnouncementHTML];
}

id objc_msgSend_fullHTMLContent(void *a1, const char *a2, ...)
{
  return _[a1 fullHTMLContent];
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _[a1 fullName];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return [a1 functionWithName:];
}

id objc_msgSend_gatherAllMissingRequirementsWithAnswers_(void *a1, const char *a2, ...)
{
  return [a1 gatherAllMissingRequirementsWithAnswers:];
}

id objc_msgSend_gatherAttachment_answers_(void *a1, const char *a2, ...)
{
  return [a1 gatherAttachment:answers:];
}

id objc_msgSend_gatherFilesWithDedExtension_answers_(void *a1, const char *a2, ...)
{
  return [a1 gatherFilesWithDedExtension:answers:];
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _[a1 generalPasteboard];
}

id objc_msgSend_getAllContentForFeedback_completion_(void *a1, const char *a2, ...)
{
  return [a1 getAllContentForFeedback:completion:];
}

id objc_msgSend_getFeedbackForContentItem_completion_(void *a1, const char *a2, ...)
{
  return [a1 getFeedbackForContentItem:completion:];
}

id objc_msgSend_getFeedbackForContentItem_forceRefresh_completion_(void *a1, const char *a2, ...)
{
  return [a1 getFeedbackForContentItem:forceRefresh:completion:];
}

id objc_msgSend_getFileDownloadURLForFilePromise_completion_(void *a1, const char *a2, ...)
{
  return [a1 getFileDownloadURLForFilePromise:completion:];
}

id objc_msgSend_getPathToScrollTo(void *a1, const char *a2, ...)
{
  return _[a1 getPathToScrollTo];
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 getResourceValue:forKey:error:];
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_gotDelegateCallbackInLastFetch(void *a1, const char *a2, ...)
{
  return _[a1 gotDelegateCallbackInLastFetch];
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return _[a1 group];
}

id objc_msgSend_groupedFooterConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 groupedFooterConfiguration];
}

id objc_msgSend_handleDeviceTapWithDevice_inSection_(void *a1, const char *a2, ...)
{
  return [a1 handleDeviceTapWithDevice:inSection:];
}

id objc_msgSend_handleInteractiveLoginResultWithLoginManager_pendingUI_startupFailures_skipBiometrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInteractiveLoginResultWithLoginManager:pendingUI:startupFailures:skipBiometrics:");
}

id objc_msgSend_handleLaunchAction_completion_(void *a1, const char *a2, ...)
{
  return [a1 handleLaunchAction:completion:];
}

id objc_msgSend_handleModelChanges_(void *a1, const char *a2, ...)
{
  return [a1 handleModelChanges:];
}

id objc_msgSend_handlesLogin(void *a1, const char *a2, ...)
{
  return _[a1 handlesLogin];
}

id objc_msgSend_hasAttachments(void *a1, const char *a2, ...)
{
  return _[a1 hasAttachments];
}

id objc_msgSend_hasAttachmentsCollecting(void *a1, const char *a2, ...)
{
  return _[a1 hasAttachmentsCollecting];
}

id objc_msgSend_hasCandidateStubs(void *a1, const char *a2, ...)
{
  return _[a1 hasCandidateStubs];
}

id objc_msgSend_hasContentItemsToShow(void *a1, const char *a2, ...)
{
  return _[a1 hasContentItemsToShow];
}

id objc_msgSend_hasFileArea(void *a1, const char *a2, ...)
{
  return _[a1 hasFileArea];
}

id objc_msgSend_hasFinishedFirstLoad(void *a1, const char *a2, ...)
{
  return _[a1 hasFinishedFirstLoad];
}

id objc_msgSend_hasForms(void *a1, const char *a2, ...)
{
  return _[a1 hasForms];
}

id objc_msgSend_hasGroup(void *a1, const char *a2, ...)
{
  return _[a1 hasGroup];
}

id objc_msgSend_hasIps_dot_synced_(void *a1, const char *a2, ...)
{
  return [a1 hasIps_dot_synced:];
}

id objc_msgSend_hasKeyboardFocus(void *a1, const char *a2, ...)
{
  return _[a1 hasKeyboardFocus];
}

id objc_msgSend_hasLoadedFormItems(void *a1, const char *a2, ...)
{
  return _[a1 hasLoadedFormItems];
}

id objc_msgSend_hasLog_dot_number_(void *a1, const char *a2, ...)
{
  return [a1 hasLog_dot_number];
}

id objc_msgSend_hasLoggingSessions(void *a1, const char *a2, ...)
{
  return _[a1 hasLoggingSessions];
}

id objc_msgSend_hasManagedTeams(void *a1, const char *a2, ...)
{
  return _[a1 hasManagedTeams];
}

id objc_msgSend_hasManyManagedTeams(void *a1, const char *a2, ...)
{
  return _[a1 hasManyManagedTeams];
}

id objc_msgSend_hasMoreLogs(void *a1, const char *a2, ...)
{
  return _[a1 hasMoreLogs];
}

id objc_msgSend_hasOpenDraft(void *a1, const char *a2, ...)
{
  return _[a1 hasOpenDraft];
}

id objc_msgSend_hasOpenModalFeedbackController(void *a1, const char *a2, ...)
{
  return _[a1 hasOpenModalFeedbackController];
}

id objc_msgSend_hasPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaceholder];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasUnmetRequirementAttachments(void *a1, const char *a2, ...)
{
  return _[a1 hasUnmetRequirementAttachments];
}

id objc_msgSend_hasVisibleFiles(void *a1, const char *a2, ...)
{
  return _[a1 hasVisibleFiles];
}

id objc_msgSend_hashingKey(void *a1, const char *a2, ...)
{
  return _[a1 hashingKey];
}

id objc_msgSend_headerRegistration(void *a1, const char *a2, ...)
{
  return _[a1 headerRegistration];
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return _[a1 height];
}

id objc_msgSend_heightNeededForContentWidth_(void *a1, const char *a2, ...)
{
  return [a1 heightNeededForContentWidth:];
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _[a1 hide];
}

id objc_msgSend_hideAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 hideAccessoryView];
}

id objc_msgSend_hideAllInboxes(void *a1, const char *a2, ...)
{
  return _[a1 hideAllInboxes];
}

id objc_msgSend_hideAttachmentDeletionSpinner(void *a1, const char *a2, ...)
{
  return _[a1 hideAttachmentDeletionSpinner];
}

id objc_msgSend_hideContentUnavailableView(void *a1, const char *a2, ...)
{
  return _[a1 hideContentUnavailableView];
}

id objc_msgSend_hideLoadingView(void *a1, const char *a2, ...)
{
  return _[a1 hideLoadingView];
}

id objc_msgSend_hideQuestions(void *a1, const char *a2, ...)
{
  return _[a1 hideQuestions];
}

id objc_msgSend_hideSpinner(void *a1, const char *a2, ...)
{
  return _[a1 hideSpinner];
}

id objc_msgSend_hideTouchID(void *a1, const char *a2, ...)
{
  return _[a1 hideTouchID];
}

id objc_msgSend_horizontalGroupWithLayoutSize_subitem_count_(void *a1, const char *a2, ...)
{
  return [a1 horizontalGroupWithLayoutSize:subitem:count:];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_humansCanReadFile_(void *a1, const char *a2, ...)
{
  return [a1 humansCanReadFile:];
}

id objc_msgSend_icon(void *a1, const char *a2, ...)
{
  return _[a1 icon];
}

id objc_msgSend_iconConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 iconConfiguration];
}

id objc_msgSend_iconForFileName_(void *a1, const char *a2, ...)
{
  return [a1 iconForFileName:];
}

id objc_msgSend_iconForRequirement(void *a1, const char *a2, ...)
{
  return _[a1 iconForRequirement];
}

id objc_msgSend_iconSystemImageName(void *a1, const char *a2, ...)
{
  return _[a1 iconSystemImageName];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForVisibleQuestion_hasAttemptedSubmission_(void *a1, const char *a2, ...)
{
  return [a1 identifierForVisibleQuestion:hasAttemptedSubmission:];
}

id objc_msgSend_imageForImageDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 imageForImageDescriptor:];
}

id objc_msgSend_imageForNeedsAction(void *a1, const char *a2, ...)
{
  return _[a1 imageForNeedsAction];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return _[a1 imageProperties];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return [a1 imageWithCGImage:scale:orientation:];
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 imageWithConfiguration:];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_inbox(void *a1, const char *a2, ...)
{
  return _[a1 inbox];
}

id objc_msgSend_inboxItemsForTeam_withSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 inboxItemsForTeam:withSortDescriptors:];
}

id objc_msgSend_inboxLiteMode(void *a1, const char *a2, ...)
{
  return _[a1 inboxLiteMode];
}

id objc_msgSend_inboxes(void *a1, const char *a2, ...)
{
  return _[a1 inboxes];
}

id objc_msgSend_indeterminateSpinner(void *a1, const char *a2, ...)
{
  return _[a1 indeterminateSpinner];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObjectPassingTest:];
}

id objc_msgSend_indexPathForItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItemIdentifier:];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForSelectedRow];
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForSelectedItems];
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForSelectedRows];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityIndicatorStyle:];
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityItems:applicationActivities:];
}

id objc_msgSend_initWithAppearance_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppearance:];
}

id objc_msgSend_initWithArchive_pageSize_pageCompletion_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithArchive:pageSize:pageCompletion:error:];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:copyItems:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithCollectionView_cellProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionView:cellProvider:];
}

id objc_msgSend_initWithCollectorIdentifier_deviceUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectorIdentifier:deviceUUID:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithDatabaseFile_(void *a1, const char *a2, ...)
{
  return [a1 initWithDatabaseFile:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDevice_completion_(void *a1, const char *a2, ...)
{
  return [a1 initWithDevice:completion:];
}

id objc_msgSend_initWithDeviceManager_delegate_filerForm_pendingFileUrls_pendingURLExtensions_draftDeviceIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceManager:delegate:filerForm:pendingFileUrls:pendingURLExtensions:draftDeviceIds:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithFile_(void *a1, const char *a2, ...)
{
  return [a1 initWithFile:];
}

id objc_msgSend_initWithFilterGroups_(void *a1, const char *a2, ...)
{
  return [a1 initWithFilterGroups:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:configuration:];
}

id objc_msgSend_initWithFrame_title_style_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:title:style:];
}

id objc_msgSend_initWithGroup_(void *a1, const char *a2, ...)
{
  return [a1 initWithGroup:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:style:target:action:];
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocaleIdentifier:];
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentedViewController:presentingViewController:];
}

id objc_msgSend_initWithQuestionGroup_questionAnswerPairs_(void *a1, const char *a2, ...)
{
  return [a1 initWithQuestionGroup:questionAnswerPairs:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return [a1 initWithSearchResultsController:];
}

id objc_msgSend_initWithSectionProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithSectionProvider:];
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:];
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:scale:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStubsPredicate_(void *a1, const char *a2, ...)
{
  return [a1 initWithStubsPredicate:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:reuseIdentifier:];
}

id objc_msgSend_initWithTableView_cellProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithTableView:cellProvider:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTitle_image_actionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:image:actionHandler:];
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:style:target:action:];
}

id objc_msgSend_initWithTitle_subtitle_actions_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:subtitle:actions:];
}

id objc_msgSend_initWithTitle_subtitle_object_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:subtitle:object:];
}

id objc_msgSend_initWithTitle_type_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:type:];
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:];
}

id objc_msgSend_initWithURL_options_documentAttributes_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:options:documentAttributes:error:];
}

id objc_msgSend_initWithUrl_(void *a1, const char *a2, ...)
{
  return [a1 initWithUrl:];
}

id objc_msgSend_initializeWithFileName_requirement_font_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeWithFileName:requirement:font:textColor:");
}

id objc_msgSend_insertArrangedSubview_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertArrangedSubview:atIndex:];
}

id objc_msgSend_insertedObjects(void *a1, const char *a2, ...)
{
  return _[a1 insertedObjects];
}

id objc_msgSend_inspectFBKPairing(void *a1, const char *a2, ...)
{
  return _[a1 inspectFBKPairing];
}

id objc_msgSend_instantiateViewControllerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 instantiateViewControllerWithIdentifier:];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return [a1 integerForKey:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactionControllerWithURL_(void *a1, const char *a2, ...)
{
  return [a1 interactionControllerWithURL:];
}

id objc_msgSend_interactiveStartupWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 interactiveStartupWithCompletion:];
}

id objc_msgSend_interactiveStartupWithLaunchAction_completion_(void *a1, const char *a2, ...)
{
  return [a1 interactiveStartupWithLaunchAction:completion:];
}

id objc_msgSend_intersectsIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 intersectsIndexesInRange:];
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectsSet:];
}

id objc_msgSend_invalidQuestionIDs(void *a1, const char *a2, ...)
{
  return _[a1 invalidQuestionIDs];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAnswerExpectedForQuestion_(void *a1, const char *a2, ...)
{
  return [a1 isAnswerExpectedForQuestion:];
}

id objc_msgSend_isApplyingSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 isApplyingSnapshot];
}

id objc_msgSend_isBatchUIEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBatchUIEnabled];
}

id objc_msgSend_isCaptive(void *a1, const char *a2, ...)
{
  return _[a1 isCaptive];
}

id objc_msgSend_isCaptiveModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isCaptiveModeEnabled];
}

id objc_msgSend_isCaptiveModeEnabledForLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 isCaptiveModeEnabledForLaunchAction:];
}

id objc_msgSend_isClosedFeedback(void *a1, const char *a2, ...)
{
  return _[a1 isClosedFeedback];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return _[a1 isComplete];
}

id objc_msgSend_isConnectedToCellNetwork(void *a1, const char *a2, ...)
{
  return _[a1 isConnectedToCellNetwork];
}

id objc_msgSend_isCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentDevice];
}

id objc_msgSend_isCurrentPageComplete(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentPageComplete];
}

id objc_msgSend_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 isDirectory:];
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _[a1 isDirty];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToAttributedString:];
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToNumber:];
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToSet:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFBAErrorWithCode_(void *a1, const char *a2, ...)
{
  return [a1 isFBAErrorWithCode:];
}

id objc_msgSend_isFBKPaired(void *a1, const char *a2, ...)
{
  return _[a1 isFBKPaired];
}

id objc_msgSend_isFFUAction(void *a1, const char *a2, ...)
{
  return _[a1 isFFUAction];
}

id objc_msgSend_isFileCollectionGroup(void *a1, const char *a2, ...)
{
  return _[a1 isFileCollectionGroup];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _[a1 isLoading];
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _[a1 isLocal];
}

id objc_msgSend_isMultiSelect(void *a1, const char *a2, ...)
{
  return _[a1 isMultiSelect];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _[a1 isOn];
}

id objc_msgSend_isOrphaned(void *a1, const char *a2, ...)
{
  return _[a1 isOrphaned];
}

id objc_msgSend_isPresentingFullScreen(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingFullScreen];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isReadyToDisplayContents(void *a1, const char *a2, ...)
{
  return _[a1 isReadyToDisplayContents];
}

id objc_msgSend_isRefreshingForms(void *a1, const char *a2, ...)
{
  return _[a1 isRefreshingForms];
}

id objc_msgSend_isReloadingContentAndFormItems(void *a1, const char *a2, ...)
{
  return _[a1 isReloadingContentAndFormItems];
}

id objc_msgSend_isShowContentItemAction(void *a1, const char *a2, ...)
{
  return _[a1 isShowContentItemAction];
}

id objc_msgSend_isStub(void *a1, const char *a2, ...)
{
  return _[a1 isStub];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isSubclassOfClass];
}

id objc_msgSend_isSubmitted(void *a1, const char *a2, ...)
{
  return _[a1 isSubmitted];
}

id objc_msgSend_isSubmitting(void *a1, const char *a2, ...)
{
  return _[a1 isSubmitting];
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _[a1 isToolbarHidden];
}

id objc_msgSend_isUpdatingTable(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingTable];
}

id objc_msgSend_isUploadingFiles(void *a1, const char *a2, ...)
{
  return _[a1 isUploadingFiles];
}

id objc_msgSend_isValidated(void *a1, const char *a2, ...)
{
  return _[a1 isValidated];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isVisibleToDED(void *a1, const char *a2, ...)
{
  return _[a1 isVisibleToDED];
}

id objc_msgSend_isWarningsOn(void *a1, const char *a2, ...)
{
  return _[a1 isWarningsOn];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemForIndexPath:];
}

id objc_msgSend_itemFromDraft(void *a1, const char *a2, ...)
{
  return _[a1 itemFromDraft];
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _[a1 itemID];
}

id objc_msgSend_itemIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemIdentifierForIndexPath:];
}

id objc_msgSend_itemSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 itemSubtitle];
}

id objc_msgSend_itemTitleColor(void *a1, const char *a2, ...)
{
  return _[a1 itemTitleColor];
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _[a1 itemType];
}

id objc_msgSend_itemWithLayoutSize_(void *a1, const char *a2, ...)
{
  return [a1 itemWithLayoutSize:];
}

id objc_msgSend_itemWithURL_(void *a1, const char *a2, ...)
{
  return [a1 itemWithURL:];
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return [a1 keyCommandWithInput:modifierFlags:action:];
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _[a1 keyWindow];
}

id objc_msgSend_keyboardHeight(void *a1, const char *a2, ...)
{
  return _[a1 keyboardHeight];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_lastFetchReturnedZeroEvents(void *a1, const char *a2, ...)
{
  return _[a1 lastFetchReturnedZeroEvents];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastStage(void *a1, const char *a2, ...)
{
  return _[a1 lastStage];
}

id objc_msgSend_lastUsedLAContext(void *a1, const char *a2, ...)
{
  return _[a1 lastUsedLAContext];
}

id objc_msgSend_launchAction(void *a1, const char *a2, ...)
{
  return _[a1 launchAction];
}

id objc_msgSend_launchFeedbackDraftWithUrlAction_(void *a1, const char *a2, ...)
{
  return [a1 launchFeedbackDraftWithUrlAction:];
}

id objc_msgSend_launchInboxWithLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 launchInboxWithLaunchAction:];
}

id objc_msgSend_launchNewDraftViewControllerWithBugFormStub_draftItem_surveyBugForm_launchAction_team_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchNewDraftViewControllerWithBugFormStub:draftItem:surveyBugForm:launchAction:team:completion:");
}

id objc_msgSend_launchSurveyWithUrlAction_(void *a1, const char *a2, ...)
{
  return [a1 launchSurveyWithUrlAction:];
}

id objc_msgSend_launchesBatchUI(void *a1, const char *a2, ...)
{
  return _[a1 launchesBatchUI];
}

id objc_msgSend_launchesFeedback(void *a1, const char *a2, ...)
{
  return _[a1 launchesFeedback];
}

id objc_msgSend_launchesInbox(void *a1, const char *a2, ...)
{
  return _[a1 launchesInbox];
}

id objc_msgSend_launchesSurvey(void *a1, const char *a2, ...)
{
  return _[a1 launchesSurvey];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutManager(void *a1, const char *a2, ...)
{
  return _[a1 layoutManager];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 leftBarButtonItem];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 lightGrayColor];
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return _[a1 lineBreakMode];
}

id objc_msgSend_linkedAttributedFromString_withFont_(void *a1, const char *a2, ...)
{
  return [a1 linkedAttributedFromString:withFont:];
}

id objc_msgSend_linkedAttributedFromString_withFont_textColor_(void *a1, const char *a2, ...)
{
  return [a1 linkedAttributedFromString:withFont:textColor:];
}

id objc_msgSend_listCellRegistration(void *a1, const char *a2, ...)
{
  return _[a1 listCellRegistration];
}

id objc_msgSend_listDiagnosticExtensionsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 listDiagnosticExtensionsWithCompletion:];
}

id objc_msgSend_loadFormResponseFromContentItem_(void *a1, const char *a2, ...)
{
  return [a1 loadFormResponseFromContentItem:];
}

id objc_msgSend_loadHTMLString_baseURL_(void *a1, const char *a2, ...)
{
  return [a1 loadHTMLString:];
}

id objc_msgSend_loadNewResponseForBugForm_withTeam_(void *a1, const char *a2, ...)
{
  return [a1 loadNewResponseForBugForm:withTeam:];
}

id objc_msgSend_loadNewResponseForBugFormStub_forTeam_(void *a1, const char *a2, ...)
{
  return [a1 loadNewResponseForBugFormStub:forTeam:];
}

id objc_msgSend_loadNewResponseForBugFormStub_withTeam_(void *a1, const char *a2, ...)
{
  return [a1 loadNewResponseForBugFormStub:withTeam:];
}

id objc_msgSend_loadNibNamed_owner_options_(void *a1, const char *a2, ...)
{
  return [a1 loadNibNamed:owner:options:];
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return [a1 loadRequest:];
}

id objc_msgSend_loadResponseForFeedbackObject_withTeam_(void *a1, const char *a2, ...)
{
  return [a1 loadResponseForFeedbackObject:withTeam:];
}

id objc_msgSend_loadingConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 loadingConfiguration];
}

id objc_msgSend_localSubmissionStage(void *a1, const char *a2, ...)
{
  return _[a1 localSubmissionStage];
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [a1 localizedCaseInsensitiveCompare:];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedDownloadErrorString(void *a1, const char *a2, ...)
{
  return _[a1 localizedDownloadErrorString];
}

id objc_msgSend_localizedErrorStringForMaybeFilePromise_downloadPermission_(void *a1, const char *a2, ...)
{
  return [a1 localizedErrorStringForMaybeFilePromise:downloadPermission:];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return _[a1 log];
}

id objc_msgSend_logArchivePath(void *a1, const char *a2, ...)
{
  return _[a1 logArchivePath];
}

id objc_msgSend_logAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 logAtIndex:];
}

id objc_msgSend_logLabel(void *a1, const char *a2, ...)
{
  return _[a1 logLabel];
}

id objc_msgSend_logOut(void *a1, const char *a2, ...)
{
  return _[a1 logOut];
}

id objc_msgSend_logOutIfNeededAndRun_(void *a1, const char *a2, ...)
{
  return [a1 logOutIfNeededAndRun:];
}

id objc_msgSend_logSource(void *a1, const char *a2, ...)
{
  return _[a1 logSource];
}

id objc_msgSend_logURL(void *a1, const char *a2, ...)
{
  return _[a1 logURL];
}

id objc_msgSend_loggerLib(void *a1, const char *a2, ...)
{
  return _[a1 loggerLib];
}

id objc_msgSend_loggerLibWithArchive_pageSize_(void *a1, const char *a2, ...)
{
  return [a1 loggerLibWithArchive:pageSize:];
}

id objc_msgSend_loginManager(void *a1, const char *a2, ...)
{
  return _[a1 loginManager];
}

id objc_msgSend_loginState(void *a1, const char *a2, ...)
{
  return _[a1 loginState];
}

id objc_msgSend_loginWithUsername_authenticationResults_completion_(void *a1, const char *a2, ...)
{
  return [a1 loginWithUsername:authenticationResults:completion:];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_machTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 machTimestamp];
}

id objc_msgSend_mailboxSortDate(void *a1, const char *a2, ...)
{
  return _[a1 mailboxSortDate];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainLabel(void *a1, const char *a2, ...)
{
  return _[a1 mainLabel];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainQueueContext(void *a1, const char *a2, ...)
{
  return _[a1 mainQueueContext];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainViewController(void *a1, const char *a2, ...)
{
  return _[a1 mainViewController];
}

id objc_msgSend_makeCompositionalLayout(void *a1, const char *a2, ...)
{
  return _[a1 makeCompositionalLayout];
}

id objc_msgSend_makeSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 makeSnapshot];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_managedTeams(void *a1, const char *a2, ...)
{
  return _[a1 managedTeams];
}

id objc_msgSend_markAnnouncementRead_completion_(void *a1, const char *a2, ...)
{
  return [a1 markAnnouncementRead:completion:];
}

id objc_msgSend_matcherPredicates(void *a1, const char *a2, ...)
{
  return _[a1 matcherPredicates];
}

id objc_msgSend_matchesInString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 matchesInString:options:range:];
}

id objc_msgSend_maybeAttachmentWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 maybeAttachmentWithIdentifier:];
}

id objc_msgSend_maybeDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 maybeDeviceWithIdentifier:];
}

id objc_msgSend_menuForController_(void *a1, const char *a2, ...)
{
  return [a1 menuForController:];
}

id objc_msgSend_metricsForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 metricsForTextStyle:];
}

id objc_msgSend_modelCache(void *a1, const char *a2, ...)
{
  return _[a1 modelCache];
}

id objc_msgSend_monogramAvatarImageForPreferredName_familyName_(void *a1, const char *a2, ...)
{
  return [a1 monogramAvatarImageForPreferredName:familyName:];
}

id objc_msgSend_monospacedSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 monospacedSystemFontOfSize:];
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return [a1 moveToPoint:];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myBetaDevicesLabel(void *a1, const char *a2, ...)
{
  return _[a1 myBetaDevicesLabel];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameLabel(void *a1, const char *a2, ...)
{
  return _[a1 nameLabel];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_navigationType(void *a1, const char *a2, ...)
{
  return _[a1 navigationType];
}

id objc_msgSend_needsAction(void *a1, const char *a2, ...)
{
  return _[a1 needsAction];
}

id objc_msgSend_needsActionTintColor(void *a1, const char *a2, ...)
{
  return _[a1 needsActionTintColor];
}

id objc_msgSend_needsPairing(void *a1, const char *a2, ...)
{
  return _[a1 needsPairing];
}

id objc_msgSend_negativeChoice(void *a1, const char *a2, ...)
{
  return _[a1 negativeChoice];
}

id objc_msgSend_netMonitor(void *a1, const char *a2, ...)
{
  return _[a1 netMonitor];
}

id objc_msgSend_networkStatusForFlags_(void *a1, const char *a2, ...)
{
  return [a1 networkStatusForFlags:];
}

id objc_msgSend_newFeedbackButtonState(void *a1, const char *a2, ...)
{
  return _[a1 newFeedbackButtonState];
}

id objc_msgSend_newLAContext(void *a1, const char *a2, ...)
{
  return _[a1 newLAContext];
}

id objc_msgSend_newURLActionActivity(void *a1, const char *a2, ...)
{
  return _[a1 newURLActionActivity];
}

id objc_msgSend_nextPage(void *a1, const char *a2, ...)
{
  return _[a1 nextPage];
}

id objc_msgSend_nextPageForReal(void *a1, const char *a2, ...)
{
  return _[a1 nextPageForReal];
}

id objc_msgSend_nibWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 nibWithNibName:nil bundle:nil];
}

id objc_msgSend_noChoiceText(void *a1, const char *a2, ...)
{
  return _[a1 noChoiceText];
}

id objc_msgSend_notConfiguredDevice(void *a1, const char *a2, ...)
{
  return _[a1 notConfiguredDevice];
}

id objc_msgSend_notConfiguredDevices(void *a1, const char *a2, ...)
{
  return _[a1 notConfiguredDevices];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 notificationCenter];
}

id objc_msgSend_notificationObserver(void *a1, const char *a2, ...)
{
  return _[a1 notificationObserver];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfEmptyFetches(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEmptyFetches];
}

id objc_msgSend_numberOfEventsInLastFetch(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEventsInLastFetch];
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLines];
}

id objc_msgSend_numberOfLogs(void *a1, const char *a2, ...)
{
  return _[a1 numberOfLogs];
}

id objc_msgSend_numberOfMatchesInString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 numberOfMatchesInString:options:range:];
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfRowsInSection:];
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSections];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_objc_preferredAlertStyle(void *a1, const char *a2, ...)
{
  return [a1 objc_preferredAlertStyle];
}

id objc_msgSend_objc_truncate_(void *a1, const char *a2, ...)
{
  return [a1 objc_truncate:];
}

id objc_msgSend_objc_updateWithSeparatorSpacing_(void *a1, const char *a2, ...)
{
  return [a1 objc_updateWithSeparatorSpacing:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForInfoDictionaryKey:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_observedTask(void *a1, const char *a2, ...)
{
  return _[a1 observedTask];
}

id objc_msgSend_observedUploadTasks(void *a1, const char *a2, ...)
{
  return _[a1 observedUploadTasks];
}

id objc_msgSend_observerTokens(void *a1, const char *a2, ...)
{
  return _[a1 observerTokens];
}

id objc_msgSend_oldestEventMachTime(void *a1, const char *a2, ...)
{
  return _[a1 oldestEventMachTime];
}

id objc_msgSend_oldestEventTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 oldestEventTimestamp];
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:completionHandler:];
}

id objc_msgSend_orientationMask(void *a1, const char *a2, ...)
{
  return _[a1 orientationMask];
}

id objc_msgSend_originator(void *a1, const char *a2, ...)
{
  return _[a1 originator];
}

id objc_msgSend_orphanBadgeTintColor(void *a1, const char *a2, ...)
{
  return _[a1 orphanBadgeTintColor];
}

id objc_msgSend_orphanImageView(void *a1, const char *a2, ...)
{
  return _[a1 orphanImageView];
}

id objc_msgSend_pageFetchCompletion(void *a1, const char *a2, ...)
{
  return _[a1 pageFetchCompletion];
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return _[a1 pageSize];
}

id objc_msgSend_pairToFBK(void *a1, const char *a2, ...)
{
  return _[a1 pairToFBK];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairedDevicesDidChangeWithAddedDevice_removed_(void *a1, const char *a2, ...)
{
  return [a1 pairedDevicesDidChangeWithAddedDevice:removed:];
}

id objc_msgSend_pairingDevice(void *a1, const char *a2, ...)
{
  return _[a1 pairingDevice];
}

id objc_msgSend_pairingViewDidCancel(void *a1, const char *a2, ...)
{
  return _[a1 pairingViewDidCancel];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pendingAttachments(void *a1, const char *a2, ...)
{
  return _[a1 pendingAttachments];
}

id objc_msgSend_pendingConsents(void *a1, const char *a2, ...)
{
  return _[a1 pendingConsents];
}

id objc_msgSend_pendingFeedbackObject(void *a1, const char *a2, ...)
{
  return _[a1 pendingFeedbackObject];
}

id objc_msgSend_pendingFollowup(void *a1, const char *a2, ...)
{
  return _[a1 pendingFollowup];
}

id objc_msgSend_pendingFollowupToShow(void *a1, const char *a2, ...)
{
  return _[a1 pendingFollowupToShow];
}

id objc_msgSend_pendingItemToShow(void *a1, const char *a2, ...)
{
  return _[a1 pendingItemToShow];
}

id objc_msgSend_pendingLaunchAction(void *a1, const char *a2, ...)
{
  return _[a1 pendingLaunchAction];
}

id objc_msgSend_pendingNextPageRequest(void *a1, const char *a2, ...)
{
  return _[a1 pendingNextPageRequest];
}

id objc_msgSend_pendingQandA(void *a1, const char *a2, ...)
{
  return _[a1 pendingQandA];
}

id objc_msgSend_pendingStartupUI(void *a1, const char *a2, ...)
{
  return _[a1 pendingStartupUI];
}

id objc_msgSend_pendingTeam(void *a1, const char *a2, ...)
{
  return _[a1 pendingTeam];
}

id objc_msgSend_pendingUI(void *a1, const char *a2, ...)
{
  return _[a1 pendingUI];
}

id objc_msgSend_performBatchUpdates_completion_(void *a1, const char *a2, ...)
{
  return [a1 performBatchUpdates:];
}

id objc_msgSend_performBiometricAuthenticationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 performBiometricAuthenticationIfNeeded];
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWait:];
}

id objc_msgSend_performOnAppear(void *a1, const char *a2, ...)
{
  return _[a1 performOnAppear];
}

id objc_msgSend_performSegueWithIdentifier_sender_(void *a1, const char *a2, ...)
{
  return [a1 performSegueWithIdentifier:sender:];
}

id objc_msgSend_personalTeamForUser_inContext_(void *a1, const char *a2, ...)
{
  return [a1 personalTeamForUser:inContext:];
}

id objc_msgSend_pinPairingInProgress(void *a1, const char *a2, ...)
{
  return _[a1 pinPairingInProgress];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_placeholderLabel(void *a1, const char *a2, ...)
{
  return _[a1 placeholderLabel];
}

id objc_msgSend_platform(void *a1, const char *a2, ...)
{
  return _[a1 platform];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_pointsToReachableDir(void *a1, const char *a2, ...)
{
  return _[a1 pointsToReachableDir];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popViewControllerAnimated:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_portalURL(void *a1, const char *a2, ...)
{
  return _[a1 portalURL];
}

id objc_msgSend_positionFromPosition_offset_(void *a1, const char *a2, ...)
{
  return [a1 positionFromPosition:offset:];
}

id objc_msgSend_positiveChoice(void *a1, const char *a2, ...)
{
  return _[a1 positiveChoice];
}

id objc_msgSend_postAttachFiles_(void *a1, const char *a2, ...)
{
  return [a1 postAttachFiles:];
}

id objc_msgSend_postLaunchAttachLocalFiles_(void *a1, const char *a2, ...)
{
  return [a1 postLaunchAttachLocalFiles];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_preAttachFiles_(void *a1, const char *a2, ...)
{
  return [a1 preAttachFiles:];
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _[a1 predicate];
}

id objc_msgSend_predicateForAllStubs(void *a1, const char *a2, ...)
{
  return _[a1 predicateForAllStubs];
}

id objc_msgSend_predicateForTeam_(void *a1, const char *a2, ...)
{
  return [a1 predicateForTeam:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSize];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredMaxLayoutWidth(void *a1, const char *a2, ...)
{
  return _[a1 preferredMaxLayoutWidth];
}

id objc_msgSend_preferredStyle(void *a1, const char *a2, ...)
{
  return _[a1 preferredStyle];
}

id objc_msgSend_preferredTeamForStubPreferringTeam_(void *a1, const char *a2, ...)
{
  return [a1 preferredTeamForStubPreferringTeam:];
}

id objc_msgSend_prefilledUsername(void *a1, const char *a2, ...)
{
  return _[a1 prefilledUsername];
}

id objc_msgSend_prepareForNextDateRangeFetch(void *a1, const char *a2, ...)
{
  return _[a1 prepareForNextDateRangeFetch];
}

id objc_msgSend_prepareForNextPage(void *a1, const char *a2, ...)
{
  return _[a1 prepareForNextPage];
}

id objc_msgSend_presentAttachment_fromIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 presentAttachment:fromIndexPath:];
}

id objc_msgSend_presentConnectionErrorUI(void *a1, const char *a2, ...)
{
  return _[a1 presentConnectionErrorUI];
}

id objc_msgSend_presentNonParticipantView(void *a1, const char *a2, ...)
{
  return _[a1 presentNonParticipantView];
}

id objc_msgSend_presentPreviewAnimated_(void *a1, const char *a2, ...)
{
  return [a1 presentPreviewAnimated:];
}

id objc_msgSend_presentStartupUI_(void *a1, const char *a2, ...)
{
  return [a1 presentStartupUI:];
}

id objc_msgSend_presentVersionOutdatedUI(void *a1, const char *a2, ...)
{
  return _[a1 presentVersionOutdatedUI];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentedSegueName(void *a1, const char *a2, ...)
{
  return _[a1 presentedSegueName];
}

id objc_msgSend_presentedView(void *a1, const char *a2, ...)
{
  return _[a1 presentedView];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_presentsAuthKitUIModally(void *a1, const char *a2, ...)
{
  return _[a1 presentsAuthKitUIModally];
}

id objc_msgSend_previewTypeURL_(void *a1, const char *a2, ...)
{
  return [a1 previewTypeURL:];
}

id objc_msgSend_previousToolbarHidden(void *a1, const char *a2, ...)
{
  return _[a1 previousToolbarHidden];
}

id objc_msgSend_process(void *a1, const char *a2, ...)
{
  return _[a1 process];
}

id objc_msgSend_processID(void *a1, const char *a2, ...)
{
  return _[a1 processID];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processLaunchArgumentsWithArgs_(void *a1, const char *a2, ...)
{
  return [a1 processLaunchArgumentsWithArgs:];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _[a1 progressView];
}

id objc_msgSend_promoteFeedback_toTeam_completion_(void *a1, const char *a2, ...)
{
  return [a1 promoteFeedback:toTeam:completion:];
}

id objc_msgSend_promoteIndividualFeedbackToTeam_(void *a1, const char *a2, ...)
{
  return [a1 promoteIndividualFeedbackToTeam:];
}

id objc_msgSend_promptLabel(void *a1, const char *a2, ...)
{
  return _[a1 promptLabel];
}

id objc_msgSend_publicLogDescription(void *a1, const char *a2, ...)
{
  return _[a1 publicLogDescription];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_quesionAnswerPairs(void *a1, const char *a2, ...)
{
  return _[a1 quesionAnswerPairs];
}

id objc_msgSend_question(void *a1, const char *a2, ...)
{
  return _[a1 question];
}

id objc_msgSend_questionAnswerPairs(void *a1, const char *a2, ...)
{
  return _[a1 questionAnswerPairs];
}

id objc_msgSend_questionGroup(void *a1, const char *a2, ...)
{
  return _[a1 questionGroup];
}

id objc_msgSend_questionGroupForSection_(void *a1, const char *a2, ...)
{
  return [a1 questionGroupForSection:];
}

id objc_msgSend_questionGroupForSectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 questionGroupForSectionIdentifier:];
}

id objc_msgSend_questionGroups(void *a1, const char *a2, ...)
{
  return _[a1 questionGroups];
}

id objc_msgSend_questionLabel(void *a1, const char *a2, ...)
{
  return _[a1 questionLabel];
}

id objc_msgSend_questionWithRole_(void *a1, const char *a2, ...)
{
  return [a1 questionWithRole:];
}

id objc_msgSend_questions(void *a1, const char *a2, ...)
{
  return _[a1 questions];
}

id objc_msgSend_questionsForSectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 questionsForSectionIdentifier:];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return [a1 raise:format:];
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 rangeAtIndex:];
}

id objc_msgSend_rangeOfComposedCharacterSequenceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfComposedCharacterSequenceAtIndex:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_reachability(void *a1, const char *a2, ...)
{
  return _[a1 reachability];
}

id objc_msgSend_reachabilityWithAddress_(void *a1, const char *a2, ...)
{
  return [a1 reachabilityWithAddress:];
}

id objc_msgSend_reachabilityWithHost_(void *a1, const char *a2, ...)
{
  return [a1 reachabilityWithHost:];
}

id objc_msgSend_reader(void *a1, const char *a2, ...)
{
  return _[a1 reader];
}

id objc_msgSend_reallyLaunchSurveyWithUrlAction_team_surveyItem_(void *a1, const char *a2, ...)
{
  return [a1 reallyLaunchSurveyWithUrlAction:team:surveyItem:];
}

id objc_msgSend_recordCheckboxAnswers(void *a1, const char *a2, ...)
{
  return _[a1 recordCheckboxAnswers];
}

id objc_msgSend_rectForSection_(void *a1, const char *a2, ...)
{
  return [a1 rectForSection:];
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _[a1 redColor];
}

id objc_msgSend_reduceToFault_(void *a1, const char *a2, ...)
{
  return [a1 reduceToFault:];
}

id objc_msgSend_reevaluateMatcherPredicates(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateMatcherPredicates];
}

id objc_msgSend_refreshAnnouncementFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return [a1 refreshAnnouncementFromContentItem:completion:];
}

id objc_msgSend_refreshControl(void *a1, const char *a2, ...)
{
  return _[a1 refreshControl];
}

id objc_msgSend_refreshFormResponseStubFromContentItem_completion_(void *a1, const char *a2, ...)
{
  return [a1 refreshFormResponseStubFromContentItem:completion:];
}

id objc_msgSend_refreshSurveyFromContentItem_forTeam_completion_(void *a1, const char *a2, ...)
{
  return [a1 refreshSurveyFromContentItem:forTeam:completion:];
}

id objc_msgSend_refreshedObjects(void *a1, const char *a2, ...)
{
  return _[a1 refreshedObjects];
}

id objc_msgSend_registerApplicationNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerApplicationNotifications];
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellReuseIdentifier:];
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellWithReuseIdentifier:];
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return [a1 registerDefaults:];
}

id objc_msgSend_registerForKeyboardNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForKeyboardNotifications];
}

id objc_msgSend_registerForRemoteNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForRemoteNotifications];
}

id objc_msgSend_registerNib_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerNib:forCellReuseIdentifier:];
}

id objc_msgSend_registrationWithCellClass_configurationHandler_(void *a1, const char *a2, ...)
{
  return [a1 registrationWithCellClass:configurationHandler:];
}

id objc_msgSend_registrationWithSupplementaryClass_elementKind_configurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationWithSupplementaryClass:elementKind:configurationHandler:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return [a1 regularExpressionWithPattern:options:error:];
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _[a1 reload];
}

id objc_msgSend_reloadAllContentWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 reloadAllContentWithCompletion:];
}

id objc_msgSend_reloadApp(void *a1, const char *a2, ...)
{
  return _[a1 reloadApp];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadItems_completion_(void *a1, const char *a2, ...)
{
  return [a1 reloadItems:completion:];
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 reloadRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_reloadView(void *a1, const char *a2, ...)
{
  return _[a1 reloadView];
}

id objc_msgSend_remoteID(void *a1, const char *a2, ...)
{
  return _[a1 remoteID];
}

id objc_msgSend_removeAllAttachments(void *a1, const char *a2, ...)
{
  return _[a1 removeAllAttachments];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 removeArrangedSubview:];
}

id objc_msgSend_removeAttribute_range_(void *a1, const char *a2, ...)
{
  return [a1 removeAttribute:range:];
}

id objc_msgSend_removeBlurView(void *a1, const char *a2, ...)
{
  return _[a1 removeBlurView];
}

id objc_msgSend_removeFBAObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeFBAObservers];
}

id objc_msgSend_removeFBKPairing(void *a1, const char *a2, ...)
{
  return _[a1 removeFBKPairing];
}

id objc_msgSend_removeFromHomeScreen(void *a1, const char *a2, ...)
{
  return _[a1 removeFromHomeScreen];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtURL:error:];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:];
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:context:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removePersistentDomainForName_(void *a1, const char *a2, ...)
{
  return [a1 removePersistentDomainForName:];
}

id objc_msgSend_removeWalShm_(void *a1, const char *a2, ...)
{
  return [a1 removeWalShm:];
}

id objc_msgSend_replaceRange_withText_(void *a1, const char *a2, ...)
{
  return [a1 replaceRange:withText:];
}

id objc_msgSend_reportFailureToLaunchFormWithFormIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 reportFailureToLaunchFormWithFormIdentifier:];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestPermission(void *a1, const char *a2, ...)
{
  return _[a1 requestPermission];
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return [a1 requestWithURL:];
}

id objc_msgSend_requireTouchIDCellLabel(void *a1, const char *a2, ...)
{
  return _[a1 requireTouchIDCellLabel];
}

id objc_msgSend_resetObserverTokens(void *a1, const char *a2, ...)
{
  return _[a1 resetObserverTokens];
}

id objc_msgSend_resetTimerWithInterval_(void *a1, const char *a2, ...)
{
  return [a1 resetTimerWithInterval:];
}

id objc_msgSend_resetViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 resetViewControllers];
}

id objc_msgSend_resetViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 resetViewControllers:];
}

id objc_msgSend_resetWarningsCell(void *a1, const char *a2, ...)
{
  return _[a1 resetWarningsCell];
}

id objc_msgSend_resetWarningsLabel(void *a1, const char *a2, ...)
{
  return _[a1 resetWarningsLabel];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resolved(void *a1, const char *a2, ...)
{
  return _[a1 resolved];
}

id objc_msgSend_respondToLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 respondToLaunchAction:];
}

id objc_msgSend_respondToUrlAction_(void *a1, const char *a2, ...)
{
  return [a1 respondToUrlAction:];
}

id objc_msgSend_responseStub(void *a1, const char *a2, ...)
{
  return _[a1 responseStub];
}

id objc_msgSend_resumeSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 resumeSpinnerWithStatus:userInteractionEnabled:];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reuseIdentifier];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_rootController(void *a1, const char *a2, ...)
{
  return _[a1 rootController];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rowForTimeout_(void *a1, const char *a2, ...)
{
  return [a1 rowForTimeout:];
}

id objc_msgSend_rowShouldPresentAssigneePicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowShouldPresentAssigneePicker:");
}

id objc_msgSend_rows(void *a1, const char *a2, ...)
{
  return _[a1 rows];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runAfterLogin_(void *a1, const char *a2, ...)
{
  return [a1 runAfterLogin:];
}

id objc_msgSend_runDelayedUrlActionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 runDelayedUrlActionIfNeeded];
}

id objc_msgSend_runQuery_(void *a1, const char *a2, ...)
{
  return [a1 runQuery:];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_sanitizeAnswer_(void *a1, const char *a2, ...)
{
  return [a1 sanitizeAnswer:];
}

id objc_msgSend_saveAnswer(void *a1, const char *a2, ...)
{
  return _[a1 saveAnswer];
}

id objc_msgSend_saveBiometricsDate(void *a1, const char *a2, ...)
{
  return _[a1 saveBiometricsDate];
}

id objc_msgSend_saveDraftIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 saveDraftIfNeeded];
}

id objc_msgSend_saveFormResponse_completion_(void *a1, const char *a2, ...)
{
  return [a1 saveFormResponse:completion:];
}

id objc_msgSend_saveToStore_(void *a1, const char *a2, ...)
{
  return [a1 saveToStore:];
}

id objc_msgSend_saveToken_(void *a1, const char *a2, ...)
{
  return [a1 saveToken:];
}

id objc_msgSend_savedEvents(void *a1, const char *a2, ...)
{
  return _[a1 savedEvents];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaledFontForFont_(void *a1, const char *a2, ...)
{
  return [a1 scaledFontForFont:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:repeats:block:];
}

id objc_msgSend_scrollTableToAvoidKeyboardInTableView_keyboardHeight_withPadding_(void *a1, const char *a2, ...)
{
  return [a1 scrollTableToAvoidKeyboardInTableView:keyboardHeight:withPadding:];
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRowAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _[a1 searchController];
}

id objc_msgSend_searchResultChoices(void *a1, const char *a2, ...)
{
  return _[a1 searchResultChoices];
}

id objc_msgSend_searchResultItems(void *a1, const char *a2, ...)
{
  return _[a1 searchResultItems];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemBackgroundColor];
}

id objc_msgSend_secondarySystemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemGroupedBackgroundColor];
}

id objc_msgSend_secondaryTextProperties(void *a1, const char *a2, ...)
{
  return _[a1 secondaryTextProperties];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionForTeam_(void *a1, const char *a2, ...)
{
  return [a1 sectionForTeam:];
}

id objc_msgSend_sectionIdentifierForIndex_(void *a1, const char *a2, ...)
{
  return [a1 sectionIdentifierForIndex:];
}

id objc_msgSend_sectionIdentifierForSectionContainingItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 sectionIdentifierForSectionContainingItemIdentifier:];
}

id objc_msgSend_sectionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 sectionIdentifiers];
}

id objc_msgSend_sectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 sectionTitle];
}

id objc_msgSend_sectionType(void *a1, const char *a2, ...)
{
  return _[a1 sectionType];
}

id objc_msgSend_sectionWithGroup_(void *a1, const char *a2, ...)
{
  return [a1 sectionWithGroup:];
}

id objc_msgSend_sectionWithListConfiguration_layoutEnvironment_(void *a1, const char *a2, ...)
{
  return [a1 sectionWithListConfiguration:layoutEnvironment:];
}

id objc_msgSend_sections(void *a1, const char *a2, ...)
{
  return _[a1 sections];
}

id objc_msgSend_selectNext(void *a1, const char *a2, ...)
{
  return _[a1 selectNext];
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return [a1 selectRowAtIndexPath:animated:scrollPosition:];
}

id objc_msgSend_selectedDevices(void *a1, const char *a2, ...)
{
  return _[a1 selectedDevices];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_separatorInset(void *a1, const char *a2, ...)
{
  return _[a1 separatorInset];
}

id objc_msgSend_serverID(void *a1, const char *a2, ...)
{
  return _[a1 serverID];
}

id objc_msgSend_serverSideIsComplete(void *a1, const char *a2, ...)
{
  return _[a1 serverSideIsComplete];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityHint_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityHint:];
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIdentifier:];
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityLabel:];
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityTraits:];
}

id objc_msgSend_setAccessories_(void *a1, const char *a2, ...)
{
  return [a1 setAccessories:];
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryType:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActivityIndicatorViewStyle_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIndicatorViewStyle:];
}

id objc_msgSend_setAddAttachmentCell_(void *a1, const char *a2, ...)
{
  return [a1 setAddAttachmentCell:];
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontForContentSizeCategory:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAllowsAccountCreation_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsAccountCreation:];
}

id objc_msgSend_setAllowsMultipleSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsMultipleSelectionDuringEditing:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceVertical:];
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationsEnabled:];
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return [a1 setAnnotation:];
}

id objc_msgSend_setAnnouncement_(void *a1, const char *a2, ...)
{
  return [a1 setAnnouncement:];
}

id objc_msgSend_setAnswer_(void *a1, const char *a2, ...)
{
  return [a1 setAnswer:];
}

id objc_msgSend_setAttachment_(void *a1, const char *a2, ...)
{
  return [a1 setAttachment:];
}

id objc_msgSend_setAttachmentType_(void *a1, const char *a2, ...)
{
  return [a1 setAttachmentType:];
}

id objc_msgSend_setAttachmentsBeingDeletedCount_(void *a1, const char *a2, ...)
{
  return [a1 setAttachmentsBeingDeletedCount:];
}

id objc_msgSend_setAttemptedSubmission_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptedSubmission:];
}

id objc_msgSend_setAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedString:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAxis:];
}

id objc_msgSend_setBackBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBackBarButtonItem:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundView:];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setBatchSize_(void *a1, const char *a2, ...)
{
  return [a1 setBatchSize:];
}

id objc_msgSend_setBiometricsState_(void *a1, const char *a2, ...)
{
  return [a1 setBiometricsState:];
}

id objc_msgSend_setBiometricsWatchDog_(void *a1, const char *a2, ...)
{
  return [a1 setBiometricsWatchDog:];
}

id objc_msgSend_setBlurView_(void *a1, const char *a2, ...)
{
  return [a1 setBlurView:];
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setBool:forKey:];
}

id objc_msgSend_setBoundarySupplementaryItems_(void *a1, const char *a2, ...)
{
  return [a1 setBoundarySupplementaryItems:];
}

id objc_msgSend_setBugFormEditorDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setBugFormEditorDelegate:];
}

id objc_msgSend_setCachedCandidateStubsCount_(void *a1, const char *a2, ...)
{
  return [a1 setCachedCandidateStubsCount:];
}

id objc_msgSend_setCanEditUsername_(void *a1, const char *a2, ...)
{
  return [a1 setCanEditUsername:];
}

id objc_msgSend_setCancelBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setCancelBarButtonItem:];
}

id objc_msgSend_setCellHeights_(void *a1, const char *a2, ...)
{
  return [a1 setCellHeights:];
}

id objc_msgSend_setCharacterLimit_(void *a1, const char *a2, ...)
{
  return [a1 setCharacterLimit:];
}

id objc_msgSend_setCheckboxAnswersAtStart_(void *a1, const char *a2, ...)
{
  return [a1 setCheckboxAnswersAtStart:];
}

id objc_msgSend_setChoice_(void *a1, const char *a2, ...)
{
  return [a1 setChoice:];
}

id objc_msgSend_setChoiceDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setChoiceDelegate:];
}

id objc_msgSend_setClearsSelectionOnViewWillAppear_(void *a1, const char *a2, ...)
{
  return [a1 setClearsSelectionOnViewWillAppear:];
}

id objc_msgSend_setCollectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionViewLayout:];
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return [a1 setColor:];
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setCompletion:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setContentConfiguration:];
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentHuggingPriority:forAxis:];
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsets:];
}

id objc_msgSend_setContentItem_(void *a1, const char *a2, ...)
{
  return [a1 setContentItem:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setContentUnavailableConfiguration:];
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return [a1 setContents:];
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return [a1 setContext:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCurrDetailIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 setCurrDetailIndexPath:];
}

id objc_msgSend_setCurrentSelection_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentSelection:];
}

id objc_msgSend_setCustomDetentHeight_(void *a1, const char *a2, ...)
{
  return [a1 setCustomDetentHeight:];
}

id objc_msgSend_setDataChangeObserver_(void *a1, const char *a2, ...)
{
  return [a1 setDataChangeObserver:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDatabaseReader_(void *a1, const char *a2, ...)
{
  return [a1 setDatabaseReader:];
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return [a1 setDateFormat];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDbFile_(void *a1, const char *a2, ...)
{
  return [a1 setDbFile:];
}

id objc_msgSend_setDbUrl_(void *a1, const char *a2, ...)
{
  return [a1 setDbUrl:];
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefinesPresentationContext:];
}

id objc_msgSend_setDelayedUrlAction_(void *a1, const char *a2, ...)
{
  return [a1 setDelayedUrlAction];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDestructive_(void *a1, const char *a2, ...)
{
  return [a1 setDestructive:];
}

id objc_msgSend_setDetailLabelTrailingConstraintInitial_(void *a1, const char *a2, ...)
{
  return [a1 setDetailLabelTrailingConstraintInitial:];
}

id objc_msgSend_setDetailViewController_(void *a1, const char *a2, ...)
{
  return [a1 setDetailViewController:];
}

id objc_msgSend_setDetentBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setDetentBehavior:];
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return [a1 setDevice];
}

id objc_msgSend_setDeviceChoices_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceChoices:];
}

id objc_msgSend_setDeviceGroups_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceGroups:];
}

id objc_msgSend_setDevicesController_(void *a1, const char *a2, ...)
{
  return [a1 setDevicesController:];
}

id objc_msgSend_setDevicesId_(void *a1, const char *a2, ...)
{
  return [a1 setDevicesId:];
}

id objc_msgSend_setDidRefreshFormStubsNotificationObserver_(void *a1, const char *a2, ...)
{
  return [a1 setDidRefreshFormStubsNotificationObserver:];
}

id objc_msgSend_setDiffableDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDiffableDataSource:];
}

id objc_msgSend_setDigits_(void *a1, const char *a2, ...)
{
  return [a1 setDigits:];
}

id objc_msgSend_setDirectionalLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setDirectionalLayoutMargins:];
}

id objc_msgSend_setDirectoryList_(void *a1, const char *a2, ...)
{
  return [a1 setDirectoryList:];
}

id objc_msgSend_setDisclosesMoreForms_(void *a1, const char *a2, ...)
{
  return [a1 setDisclosesMoreForms:];
}

id objc_msgSend_setDiscoverabilityTitle_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoverabilityTitle:];
}

id objc_msgSend_setDropDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDropDelegate:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return [a1 setEditable:];
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:animated:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEnteringDetail_(void *a1, const char *a2, ...)
{
  return [a1 setEnteringDetail:];
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedRowHeight:];
}

id objc_msgSend_setEstimatedSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedSectionFooterHeight:];
}

id objc_msgSend_setEstimatedSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedSectionHeaderHeight:];
}

id objc_msgSend_setEventCountForCurrentPage_(void *a1, const char *a2, ...)
{
  return [a1 setEventCountForCurrentPage:];
}

id objc_msgSend_setExactMatchFormStub_(void *a1, const char *a2, ...)
{
  return [a1 setExactMatchFormStub:];
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExcludedActivityTypes:];
}

id objc_msgSend_setExtensions_(void *a1, const char *a2, ...)
{
  return [a1 setExtensions:];
}

id objc_msgSend_setFBAPreferencesEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setFBAPreferencesEnabled:];
}

id objc_msgSend_setFbaDataObservers_(void *a1, const char *a2, ...)
{
  return [a1 setFbaDataObservers:];
}

id objc_msgSend_setFetchWatchdog_(void *a1, const char *a2, ...)
{
  return [a1 setFetchWatchdog:];
}

id objc_msgSend_setFileDownloadInProgress_(void *a1, const char *a2, ...)
{
  return [a1 setFileDownloadInProgress:];
}

id objc_msgSend_setFilterDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setFilterDelegate:];
}

id objc_msgSend_setFilterManager_(void *a1, const char *a2, ...)
{
  return [a1 setFilterManager:];
}

id objc_msgSend_setFilterPlatform_(void *a1, const char *a2, ...)
{
  return [a1 setFilterPlatform:];
}

id objc_msgSend_setFilteredInboxItems_(void *a1, const char *a2, ...)
{
  return [a1 setFilteredInboxItems:];
}

id objc_msgSend_setFollowup_(void *a1, const char *a2, ...)
{
  return [a1 setFollowup:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFooterMode_(void *a1, const char *a2, ...)
{
  return [a1 setFooterMode:];
}

id objc_msgSend_setFormResponse_(void *a1, const char *a2, ...)
{
  return [a1 setFormResponse:];
}

id objc_msgSend_setFormStub_(void *a1, const char *a2, ...)
{
  return [a1 setFormStub:];
}

id objc_msgSend_setFoundCorruptDate_(void *a1, const char *a2, ...)
{
  return [a1 setFoundCorruptDate:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setGatherState_(void *a1, const char *a2, ...)
{
  return [a1 setGatherState:];
}

id objc_msgSend_setGivenInterval_(void *a1, const char *a2, ...)
{
  return [a1 setGivenInterval:];
}

id objc_msgSend_setGotDelegateCallbackInLastFetch_(void *a1, const char *a2, ...)
{
  return [a1 setGotDelegateCallbackInLastFetch:];
}

id objc_msgSend_setGroup_(void *a1, const char *a2, ...)
{
  return [a1 setGroup:];
}

id objc_msgSend_setHasFinishedFirstLoad_(void *a1, const char *a2, ...)
{
  return [a1 setHasFinishedFirstLoad:];
}

id objc_msgSend_setHasKeyboardFocus_(void *a1, const char *a2, ...)
{
  return [a1 setHasKeyboardFocus:];
}

id objc_msgSend_setHasLoadedFirstDraft_(void *a1, const char *a2, ...)
{
  return [a1 setHasLoadedFirstDraft:];
}

id objc_msgSend_setHasLoadedFormItems_(void *a1, const char *a2, ...)
{
  return [a1 setHasLoadedFormItems:];
}

id objc_msgSend_setHasPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setHasPlaceholder:];
}

id objc_msgSend_setHeaderImage_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderImage:];
}

id objc_msgSend_setHeaderMode_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderMode:];
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return [a1 setHeight:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHideAllInboxes_(void *a1, const char *a2, ...)
{
  return [a1 setHideAllInboxes:];
}

id objc_msgSend_setHideTouchID_(void *a1, const char *a2, ...)
{
  return [a1 setHideTouchID];
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHidesBackButton:];
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setHidesNavigationBarDuringPresentation:];
}

id objc_msgSend_setHidesNotConfiguredDevices_(void *a1, const char *a2, ...)
{
  return [a1 setHidesNotConfiguredDevices:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setInbox_(void *a1, const char *a2, ...)
{
  return [a1 setInbox:];
}

id objc_msgSend_setInboxLiteMode_(void *a1, const char *a2, ...)
{
  return [a1 setInboxLiteMode:];
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setInteger:forKey:];
}

id objc_msgSend_setInterGroupSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setInterGroupSpacing:];
}

id objc_msgSend_setInterItemSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setInterItemSpacing:];
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return [a1 setIsAccessibilityElement:];
}

id objc_msgSend_setIsApplyingSnapshot_(void *a1, const char *a2, ...)
{
  return [a1 setIsApplyingSnapshot:];
}

id objc_msgSend_setIsBatchUIEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setIsBatchUIEnabled:];
}

id objc_msgSend_setIsConnectedToCellNetwork_(void *a1, const char *a2, ...)
{
  return [a1 setIsConnectedToCellNetwork:];
}

id objc_msgSend_setIsLoading_(void *a1, const char *a2, ...)
{
  return [a1 setIsLoading:];
}

id objc_msgSend_setIsMultiSelect_(void *a1, const char *a2, ...)
{
  return [a1 setIsMultiSelect:];
}

id objc_msgSend_setIsPresentingConsentView_(void *a1, const char *a2, ...)
{
  return [a1 setIsPresentingConsentView:];
}

id objc_msgSend_setIsSubmitting_(void *a1, const char *a2, ...)
{
  return [a1 setIsSubmitting:];
}

id objc_msgSend_setIsUnsolicited_(void *a1, const char *a2, ...)
{
  return [a1 setIsUnsolicited:];
}

id objc_msgSend_setItem_(void *a1, const char *a2, ...)
{
  return [a1 setItem:];
}

id objc_msgSend_setItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setItemIdentifier:];
}

id objc_msgSend_setKeyboardHeight_(void *a1, const char *a2, ...)
{
  return [a1 setKeyboardHeight:];
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setLargeTitleDisplayMode:];
}

id objc_msgSend_setLastStage_(void *a1, const char *a2, ...)
{
  return [a1 setLastStage:];
}

id objc_msgSend_setLastUsedLAContext_(void *a1, const char *a2, ...)
{
  return [a1 setLastUsedLAContext:];
}

id objc_msgSend_setLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 setLaunchAction:];
}

id objc_msgSend_setLayoutMarginsRelativeArrangement_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMarginsRelativeArrangement:];
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:];
}

id objc_msgSend_setLeftBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:animated:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return [a1 setLineFragmentPadding:];
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return [a1 setLineWidth:];
}

id objc_msgSend_setLoading_(void *a1, const char *a2, ...)
{
  return [a1 setLoading:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLogArchive_(void *a1, const char *a2, ...)
{
  return [a1 setLogArchive:];
}

id objc_msgSend_setLogSource_(void *a1, const char *a2, ...)
{
  return [a1 setLogSource:];
}

id objc_msgSend_setLogURL_(void *a1, const char *a2, ...)
{
  return [a1 setLogURL:];
}

id objc_msgSend_setLoggerLib_(void *a1, const char *a2, ...)
{
  return [a1 setLoggerLib:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMaximumNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumNumberOfLines:];
}

id objc_msgSend_setMaximumSize_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumSize:];
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return [a1 setMenu:];
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return [a1 setMessage:];
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setModalInPresentation:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModelCache_(void *a1, const char *a2, ...)
{
  return [a1 setModelCache:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationDelegate:];
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNetMonitor_(void *a1, const char *a2, ...)
{
  return [a1 setNetMonitor:];
}

id objc_msgSend_setNotConfiguredDevice_(void *a1, const char *a2, ...)
{
  return [a1 setNotConfiguredDevice];
}

id objc_msgSend_setNotificationObserver_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationObserver:];
}

id objc_msgSend_setNumberOfEmptyFetches_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfEmptyFetches:];
}

id objc_msgSend_setNumberOfEventsInLastFetch_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfEventsInLastFetch:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTouchesRequired:];
}

id objc_msgSend_setOSLogURL_(void *a1, const char *a2, ...)
{
  return [a1 setOSLogURL:];
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return [a1 setObject:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setObscuresBackgroundDuringPresentation:];
}

id objc_msgSend_setObservedResponse_(void *a1, const char *a2, ...)
{
  return [a1 setObservedResponse:];
}

id objc_msgSend_setObservedTask_(void *a1, const char *a2, ...)
{
  return [a1 setObservedTask:];
}

id objc_msgSend_setObserverTokens_(void *a1, const char *a2, ...)
{
  return [a1 setObserverTokens:];
}

id objc_msgSend_setOldestEventMachTime_(void *a1, const char *a2, ...)
{
  return [a1 setOldestEventMachTime:];
}

id objc_msgSend_setOldestEventTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setOldestEventTimestamp:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOn_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOn:animated:];
}

id objc_msgSend_setOptedOut_(void *a1, const char *a2, ...)
{
  return [a1 setOptedOut:];
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOptions:];
}

id objc_msgSend_setOrientationMask_(void *a1, const char *a2, ...)
{
  return [a1 setOrientationMask:];
}

id objc_msgSend_setPairedDevices_(void *a1, const char *a2, ...)
{
  return [a1 setPairedDevices:];
}

id objc_msgSend_setPairingDevice_(void *a1, const char *a2, ...)
{
  return [a1 setPairingDevice:];
}

id objc_msgSend_setParticipantDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setParticipantDelegate:];
}

id objc_msgSend_setPendingAttachments_(void *a1, const char *a2, ...)
{
  return [a1 setPendingAttachments:];
}

id objc_msgSend_setPendingFeedbackObject_(void *a1, const char *a2, ...)
{
  return [a1 setPendingFeedbackObject];
}

id objc_msgSend_setPendingFollowup_(void *a1, const char *a2, ...)
{
  return [a1 setPendingFollowup:];
}

id objc_msgSend_setPendingFollowupToShow_(void *a1, const char *a2, ...)
{
  return [a1 setPendingFollowupToShow:];
}

id objc_msgSend_setPendingItemToShow_(void *a1, const char *a2, ...)
{
  return [a1 setPendingItemToShow:];
}

id objc_msgSend_setPendingLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 setPendingLaunchAction:];
}

id objc_msgSend_setPendingNextPageRequest_(void *a1, const char *a2, ...)
{
  return [a1 setPendingNextPageRequest:];
}

id objc_msgSend_setPendingQandA_(void *a1, const char *a2, ...)
{
  return [a1 setPendingQandA:];
}

id objc_msgSend_setPendingStartupUI_(void *a1, const char *a2, ...)
{
  return [a1 setPendingStartupUI:];
}

id objc_msgSend_setPendingStub_(void *a1, const char *a2, ...)
{
  return [a1 setPendingStub:];
}

id objc_msgSend_setPendingTeam_(void *a1, const char *a2, ...)
{
  return [a1 setPendingTeam:];
}

id objc_msgSend_setPendingUI_(void *a1, const char *a2, ...)
{
  return [a1 setPendingUI:];
}

id objc_msgSend_setPerformOnAppear_(void *a1, const char *a2, ...)
{
  return [a1 setPerformOnAppear:];
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return [a1 setPermittedArrowDirections:];
}

id objc_msgSend_setPickerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setPickerDelegate:];
}

id objc_msgSend_setPinPairingInProgress_(void *a1, const char *a2, ...)
{
  return [a1 setPinPairingInProgress:];
}

id objc_msgSend_setPlaceholderLabel_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholderLabel:];
}

id objc_msgSend_setPlaceholderText_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholderText:];
}

id objc_msgSend_setPowerLogURL_(void *a1, const char *a2, ...)
{
  return [a1 setPowerLogURL:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredContentSize:];
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredDisplayMode:];
}

id objc_msgSend_setPreferredMaxLayoutWidth_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredMaxLayoutWidth:];
}

id objc_msgSend_setPrefilledUsername_(void *a1, const char *a2, ...)
{
  return [a1 setPrefilledUsername:];
}

id objc_msgSend_setPresentedSegueName_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedSegueName:];
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingViewController:];
}

id objc_msgSend_setPreviousToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousToolbarHidden:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return [a1 setProgress:];
}

id objc_msgSend_setQuesionAnswerPairs_(void *a1, const char *a2, ...)
{
  return [a1 setQuesionAnswerPairs:];
}

id objc_msgSend_setQuestion_(void *a1, const char *a2, ...)
{
  return [a1 setQuestion:];
}

id objc_msgSend_setQuestionGroup_(void *a1, const char *a2, ...)
{
  return [a1 setQuestionGroup:];
}

id objc_msgSend_setReachability_(void *a1, const char *a2, ...)
{
  return [a1 setReachability:];
}

id objc_msgSend_setReader_(void *a1, const char *a2, ...)
{
  return [a1 setReader:];
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return [a1 setReason:];
}

id objc_msgSend_setRefreshControl_(void *a1, const char *a2, ...)
{
  return [a1 setRefreshControl:];
}

id objc_msgSend_setRepresentedItem_(void *a1, const char *a2, ...)
{
  return [a1 setRepresentedItem:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRightBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:animated:];
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setRowHeight:];
}

id objc_msgSend_setRows_(void *a1, const char *a2, ...)
{
  return [a1 setRows:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchController:];
}

id objc_msgSend_setSearchResultChoices_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultChoices:];
}

id objc_msgSend_setSearchResultItems_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultItems:];
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsUpdater:];
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryText:];
}

id objc_msgSend_setSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return [a1 setSectionFooterHeight:];
}

id objc_msgSend_setSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return [a1 setSectionHeaderHeight:];
}

id objc_msgSend_setSections_(void *a1, const char *a2, ...)
{
  return [a1 setSections:];
}

id objc_msgSend_setSelectable_(void *a1, const char *a2, ...)
{
  return [a1 setSelectable:];
}

id objc_msgSend_setSelectedTeam_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTeam:];
}

id objc_msgSend_setSelectionGranularity_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionGranularity:];
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionStyle:];
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorInset:];
}

id objc_msgSend_setShouldHideQuestions_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHideQuestions:];
}

id objc_msgSend_setShowError_(void *a1, const char *a2, ...)
{
  return [a1 setShowError:];
}

id objc_msgSend_setShowServiceIcons_(void *a1, const char *a2, ...)
{
  return [a1 setShowServiceIcons:];
}

id objc_msgSend_setShowingSyntheticInbox_(void *a1, const char *a2, ...)
{
  return [a1 setShowingSyntheticInbox:];
}

id objc_msgSend_setShowsDismissButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDismissButton:];
}

id objc_msgSend_setShowsIcon_(void *a1, const char *a2, ...)
{
  return [a1 setShowsIcon:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSignInViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSignInViewController:];
}

id objc_msgSend_setSimpleGroups_(void *a1, const char *a2, ...)
{
  return [a1 setSimpleGroups:];
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return [a1 setSize:];
}

id objc_msgSend_setSortedChoices_(void *a1, const char *a2, ...)
{
  return [a1 setSortedChoices:];
}

id objc_msgSend_setSortedInboxItems_(void *a1, const char *a2, ...)
{
  return [a1 setSortedInboxItems:];
}

id objc_msgSend_setSortedTeams_(void *a1, const char *a2, ...)
{
  return [a1 setSortedTeams:];
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return [a1 setSourceRect:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setSpacing:];
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return [a1 setSpinner:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return [a1 setString:];
}

id objc_msgSend_setSubmitBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setSubmitBarButtonItem:];
}

id objc_msgSend_setSupplementaryViewProvider_(void *a1, const char *a2, ...)
{
  return [a1 setSupplementaryViewProvider:];
}

id objc_msgSend_setTableHeaderView_(void *a1, const char *a2, ...)
{
  return [a1 setTableHeaderView:];
}

id objc_msgSend_setTableNames_(void *a1, const char *a2, ...)
{
  return [a1 setTableNames:];
}

id objc_msgSend_setTask_(void *a1, const char *a2, ...)
{
  return [a1 setTask:];
}

id objc_msgSend_setTeam_(void *a1, const char *a2, ...)
{
  return [a1 setTeam:];
}

id objc_msgSend_setTeamInfoLabel_(void *a1, const char *a2, ...)
{
  return [a1 setTeamInfoLabel:];
}

id objc_msgSend_setTeams_(void *a1, const char *a2, ...)
{
  return [a1 setTeams:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTextChangedHandler:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return [a1 setTextContainerInset:];
}

id objc_msgSend_setThisViewController_(void *a1, const char *a2, ...)
{
  return [a1 setThisViewController:];
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 setTimeZone:];
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return [a1 setTimer:];
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return [a1 setTimingFunction:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:];
}

id objc_msgSend_setToolbarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:animated:];
}

id objc_msgSend_setToolbarItems_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:];
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:animated:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return [a1 setUrl:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return [a1 setUsername:];
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return [a1 setValue:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return [a1 setValues:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewHasBecomeVisible_(void *a1, const char *a2, ...)
{
  return [a1 setViewHasBecomeVisible:];
}

id objc_msgSend_setVisibleChoices_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleChoices:];
}

id objc_msgSend_setWebView_(void *a1, const char *a2, ...)
{
  return [a1 setWebView:];
}

id objc_msgSend_setWebViewHeightConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setWebViewHeightConstraint];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return [a1 setWithSet:];
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return [a1 setZPosition:];
}

id objc_msgSend_setZoomScale_animated_(void *a1, const char *a2, ...)
{
  return [a1 setZoomScale:animated:];
}

id objc_msgSend_set_allDevices_(void *a1, const char *a2, ...)
{
  return [a1 set_allDevices:];
}

id objc_msgSend_set_attachmentSectionHeaderCached_(void *a1, const char *a2, ...)
{
  return [a1 set_attachmentSectionHeaderCached:];
}

id objc_msgSend_set_filePromiseSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 set_filePromiseSortDescriptors:];
}

id objc_msgSend_set_internalMode_(void *a1, const char *a2, ...)
{
  return [a1 set_internalMode:];
}

id objc_msgSend_setupBarButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 setupBarButtonItems];
}

id objc_msgSend_setupTestingEvn(void *a1, const char *a2, ...)
{
  return _[a1 setupTestingEvn];
}

id objc_msgSend_shake(void *a1, const char *a2, ...)
{
  return _[a1 shake];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 sharedUserDefaults];
}

id objc_msgSend_sheetForController_selectedIndexPath_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sheetForController:selectedIndexPath:sender:");
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return _[a1 shortDescription];
}

id objc_msgSend_shouldAllowEditing(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowEditing];
}

id objc_msgSend_shouldContinue(void *a1, const char *a2, ...)
{
  return _[a1 shouldContinue];
}

id objc_msgSend_shouldDisplayChangeButton(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisplayChangeButton];
}

id objc_msgSend_shouldDisplayItem_(void *a1, const char *a2, ...)
{
  return [a1 shouldDisplayItem:];
}

id objc_msgSend_shouldHaveChoices(void *a1, const char *a2, ...)
{
  return _[a1 shouldHaveChoices];
}

id objc_msgSend_shouldHideQuestions(void *a1, const char *a2, ...)
{
  return _[a1 shouldHideQuestions];
}

id objc_msgSend_shouldMakeFBAVisible(void *a1, const char *a2, ...)
{
  return _[a1 shouldMakeFBAVisible];
}

id objc_msgSend_shouldShowAssigneeLabel(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowAssigneeLabel];
}

id objc_msgSend_shouldShowBatchUIWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowBatchUIWithCompletion:];
}

id objc_msgSend_shouldShowDevUI(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowDevUI];
}

id objc_msgSend_shouldShowForm(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowForm];
}

id objc_msgSend_shouldShowFormPicker(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowFormPicker];
}

id objc_msgSend_shouldShowStatus(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowStatus];
}

id objc_msgSend_shouldShowWaitingOnWifi(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowWaitingOnWifi];
}

id objc_msgSend_shouldUndoMakeFBAVisible(void *a1, const char *a2, ...)
{
  return _[a1 shouldUndoMakeFBAVisible];
}

id objc_msgSend_showAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 showAccessoryView];
}

id objc_msgSend_showAttachmentDeletionErrorAlert(void *a1, const char *a2, ...)
{
  return _[a1 showAttachmentDeletionErrorAlert];
}

id objc_msgSend_showAttachmentDeletionErrorAlertWithError_(void *a1, const char *a2, ...)
{
  return [a1 showAttachmentDeletionErrorAlertWithError:];
}

id objc_msgSend_showAttachmentDeletionSpinner(void *a1, const char *a2, ...)
{
  return _[a1 showAttachmentDeletionSpinner];
}

id objc_msgSend_showBatchUIWithAction_(void *a1, const char *a2, ...)
{
  return [a1 showBatchUIWithAction:];
}

id objc_msgSend_showContentUnavailableView(void *a1, const char *a2, ...)
{
  return _[a1 showContentUnavailableView];
}

id objc_msgSend_showDetailViewController_sender_(void *a1, const char *a2, ...)
{
  return [a1 showDetailViewController:sender:];
}

id objc_msgSend_showDraftAttachmentOptionsWithAction_(void *a1, const char *a2, ...)
{
  return [a1 showDraftAttachmentOptionsWithAction:];
}

id objc_msgSend_showItemWithUrlAction_(void *a1, const char *a2, ...)
{
  return [a1 showItemWithUrlAction:];
}

id objc_msgSend_showLoadingView(void *a1, const char *a2, ...)
{
  return _[a1 showLoadingView];
}

id objc_msgSend_showLogInUI(void *a1, const char *a2, ...)
{
  return _[a1 showLogInUI];
}

id objc_msgSend_showModalFeedbackControllerForContentItem_launchAction_(void *a1, const char *a2, ...)
{
  return [a1 showModalFeedbackControllerForContentItem:launchAction:];
}

id objc_msgSend_showPINEntryUIWithFlags_(void *a1, const char *a2, ...)
{
  return [a1 showPINEntryUIWithFlags:];
}

id objc_msgSend_showPinPairingViewForDevice_(void *a1, const char *a2, ...)
{
  return [a1 showPinPairingViewForDevice:];
}

id objc_msgSend_showQuestions(void *a1, const char *a2, ...)
{
  return _[a1 showQuestions];
}

id objc_msgSend_showSimpleAlertWithErrorTitle_message_(void *a1, const char *a2, ...)
{
  return [a1 showSimpleAlertWithErrorTitle:message:];
}

id objc_msgSend_showSpinnerWithStatus_(void *a1, const char *a2, ...)
{
  return [a1 showSpinnerWithStatus:];
}

id objc_msgSend_showSpinnerWithStatus_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 showSpinnerWithStatus:userInteractionEnabled:];
}

id objc_msgSend_showTargetedSurveyLoadErrorAlert(void *a1, const char *a2, ...)
{
  return _[a1 showTargetedSurveyLoadErrorAlert];
}

id objc_msgSend_showTextViewWithText_title_(void *a1, const char *a2, ...)
{
  return [a1 showTextViewWithText:title:];
}

id objc_msgSend_showToolbarWithStatus_animated_(void *a1, const char *a2, ...)
{
  return [a1 showToolbarWithStatus:animated:];
}

id objc_msgSend_showToolbarWithStatus_subtitle_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showToolbarWithStatus:subtitle:animated:");
}

id objc_msgSend_showingSyntheticInbox(void *a1, const char *a2, ...)
{
  return _[a1 showingSyntheticInbox];
}

id objc_msgSend_showsAssigneeRow(void *a1, const char *a2, ...)
{
  return _[a1 showsAssigneeRow];
}

id objc_msgSend_showsEnhancedLoggingSection(void *a1, const char *a2, ...)
{
  return _[a1 showsEnhancedLoggingSection];
}

id objc_msgSend_showsItem(void *a1, const char *a2, ...)
{
  return _[a1 showsItem];
}

id objc_msgSend_signInViewController(void *a1, const char *a2, ...)
{
  return _[a1 signInViewController];
}

id objc_msgSend_signOutButton(void *a1, const char *a2, ...)
{
  return _[a1 signOutButton];
}

id objc_msgSend_simpleGroups(void *a1, const char *a2, ...)
{
  return _[a1 simpleGroups];
}

id objc_msgSend_singleTeam(void *a1, const char *a2, ...)
{
  return _[a1 singleTeam];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeWithWidthDimension_heightDimension_(void *a1, const char *a2, ...)
{
  return [a1 sizeWithWidthDimension:heightDimension:];
}

id objc_msgSend_smartMailboxes(void *a1, const char *a2, ...)
{
  return _[a1 smartMailboxes];
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _[a1 snapshot];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:];
}

id objc_msgSend_sortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptors];
}

id objc_msgSend_sortOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortOrder];
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingComparator:];
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingDescriptors:];
}

id objc_msgSend_sortedChoices(void *a1, const char *a2, ...)
{
  return _[a1 sortedChoices];
}

id objc_msgSend_sortedDevices_(void *a1, const char *a2, ...)
{
  return [a1 sortedDevices:];
}

id objc_msgSend_sortedInboxItems(void *a1, const char *a2, ...)
{
  return _[a1 sortedInboxItems];
}

id objc_msgSend_sortedTeams(void *a1, const char *a2, ...)
{
  return _[a1 sortedTeams];
}

id objc_msgSend_spaceFromSuperViewToLabel(void *a1, const char *a2, ...)
{
  return _[a1 spaceFromSuperViewToLabel];
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _[a1 spinner];
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitViewController];
}

id objc_msgSend_stackView(void *a1, const char *a2, ...)
{
  return _[a1 stackView];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startNotifier(void *a1, const char *a2, ...)
{
  return _[a1 startNotifier];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_statusIndicatorImageView(void *a1, const char *a2, ...)
{
  return _[a1 statusIndicatorImageView];
}

id objc_msgSend_statusLabel(void *a1, const char *a2, ...)
{
  return _[a1 statusLabel];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_stopNotifier(void *a1, const char *a2, ...)
{
  return _[a1 stopNotifier];
}

id objc_msgSend_stopObserving_(void *a1, const char *a2, ...)
{
  return [a1 stopObserving:];
}

id objc_msgSend_stopObservingResponse_(void *a1, const char *a2, ...)
{
  return [a1 stopObservingResponse:];
}

id objc_msgSend_stopScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopScanning];
}

id objc_msgSend_storyboard(void *a1, const char *a2, ...)
{
  return _[a1 storyboard];
}

id objc_msgSend_storyboardWithName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 storyboardWithName:bundle:];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathExtension:];
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return [a1 stringFromByteCount:countStyle:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringValueOfTable_(void *a1, const char *a2, ...)
{
  return [a1 stringValueOfTable:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _[a1 stroke];
}

id objc_msgSend_subLabel(void *a1, const char *a2, ...)
{
  return _[a1 subLabel];
}

id objc_msgSend_submitBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 submitBarButtonItem];
}

id objc_msgSend_submitButton(void *a1, const char *a2, ...)
{
  return _[a1 submitButton];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subsystem(void *a1, const char *a2, ...)
{
  return _[a1 subsystem];
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_subtitleCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 subtitleCellConfiguration];
}

id objc_msgSend_subtitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 subtitleLabel];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_superviewWithClass_(void *a1, const char *a2, ...)
{
  return [a1 superviewWithClass:];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_supportsBiometricsLock(void *a1, const char *a2, ...)
{
  return _[a1 supportsBiometricsLock];
}

id objc_msgSend_supportsDeletion(void *a1, const char *a2, ...)
{
  return _[a1 supportsDeletion];
}

id objc_msgSend_supportsMenu(void *a1, const char *a2, ...)
{
  return _[a1 supportsMenu];
}

id objc_msgSend_supportsSelection(void *a1, const char *a2, ...)
{
  return _[a1 supportsSelection];
}

id objc_msgSend_suppressUnsolicitedResponse(void *a1, const char *a2, ...)
{
  return _[a1 suppressUnsolicitedResponse];
}

id objc_msgSend_surveyActionTextForTeam_(void *a1, const char *a2, ...)
{
  return [a1 surveyActionTextForTeam:];
}

id objc_msgSend_surveyBugForm(void *a1, const char *a2, ...)
{
  return _[a1 surveyBugForm];
}

id objc_msgSend_suspendReturningToLastApp_(void *a1, const char *a2, ...)
{
  return [a1 suspendReturningToLastApp:];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemButtonWithImage_target_action_(void *a1, const char *a2, ...)
{
  return [a1 systemButtonWithImage:target:action:];
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemFontSize(void *a1, const char *a2, ...)
{
  return _[a1 systemFontSize];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGreenColor];
}

id objc_msgSend_systemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGroupedBackgroundColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return [a1 systemLayoutSizeFittingSize:];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_tableNames(void *a1, const char *a2, ...)
{
  return _[a1 tableNames];
}

id objc_msgSend_tableNamesFromDatabase(void *a1, const char *a2, ...)
{
  return _[a1 tableNamesFromDatabase];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableView_cellForRowAtIndexPath_withItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tableView:cellForRowAtIndexPath:withItemIdentifier:];
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 tableView:didSelectRowAtIndexPath:];
}

id objc_msgSend_tableView_loadingSpinnerViewForSection_(void *a1, const char *a2, ...)
{
  return [a1 tableView:loadingSpinnerViewForSection:];
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return [a1 tableView:numberOfRowsInSection:];
}

id objc_msgSend_tableView_titleForHeaderInSection_(void *a1, const char *a2, ...)
{
  return [a1 tableView:titleForHeaderInSection:];
}

id objc_msgSend_task(void *a1, const char *a2, ...)
{
  return _[a1 task];
}

id objc_msgSend_taskIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 taskIdentifier];
}

id objc_msgSend_team(void *a1, const char *a2, ...)
{
  return _[a1 team];
}

id objc_msgSend_teamForExactMatchFormStub(void *a1, const char *a2, ...)
{
  return _[a1 teamForExactMatchFormStub];
}

id objc_msgSend_teamForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 teamForIndexPath:];
}

id objc_msgSend_teamForItemPreferringTeam_(void *a1, const char *a2, ...)
{
  return [a1 teamForItemPreferringTeam:];
}

id objc_msgSend_teamForSection_(void *a1, const char *a2, ...)
{
  return [a1 teamForSection:];
}

id objc_msgSend_teamFormStubMatchingFromFormStub_(void *a1, const char *a2, ...)
{
  return [a1 teamFormStubMatchingFromFormStub:];
}

id objc_msgSend_teamInfoLabel(void *a1, const char *a2, ...)
{
  return _[a1 teamInfoLabel];
}

id objc_msgSend_teamPickerRowIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 teamPickerRowIdentifier];
}

id objc_msgSend_teamSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 teamSortDescriptors];
}

id objc_msgSend_teamType(void *a1, const char *a2, ...)
{
  return _[a1 teamType];
}

id objc_msgSend_teams(void *a1, const char *a2, ...)
{
  return _[a1 teams];
}

id objc_msgSend_teamsContainingContent(void *a1, const char *a2, ...)
{
  return _[a1 teamsContainingContent];
}

id objc_msgSend_teamsMatchingFormID(void *a1, const char *a2, ...)
{
  return _[a1 teamsMatchingFormID];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _[a1 textContainer];
}

id objc_msgSend_textContainerInset(void *a1, const char *a2, ...)
{
  return _[a1 textContainerInset];
}

id objc_msgSend_textFileForString_withFileName_(void *a1, const char *a2, ...)
{
  return [a1 textFileForString:withFileName:];
}

id objc_msgSend_textFileForURL_(void *a1, const char *a2, ...)
{
  return [a1 textFileForURL:];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _[a1 textProperties];
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return [a1 textRangeFromPosition:toPosition:];
}

id objc_msgSend_textResponsesCount(void *a1, const char *a2, ...)
{
  return _[a1 textResponsesCount];
}

id objc_msgSend_textResponsesSummary(void *a1, const char *a2, ...)
{
  return _[a1 textResponsesSummary];
}

id objc_msgSend_textStorage(void *a1, const char *a2, ...)
{
  return _[a1 textStorage];
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _[a1 textView];
}

id objc_msgSend_textViewDidChangeContentHeight_(void *a1, const char *a2, ...)
{
  return [a1 textViewDidChangeContentHeight:];
}

id objc_msgSend_thisViewController(void *a1, const char *a2, ...)
{
  return _[a1 thisViewController];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_timeZoneForSecondsFromGMT_(void *a1, const char *a2, ...)
{
  return [a1 timeZoneForSecondsFromGMT:];
}

id objc_msgSend_timeoutForRow_(void *a1, const char *a2, ...)
{
  return [a1 timeoutForRow:];
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timer_didTimeoutForTask_(void *a1, const char *a2, ...)
{
  return [a1 timer:didTimeoutForTask:];
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 timerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _[a1 timestamp];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_toggleActive(void *a1, const char *a2, ...)
{
  return _[a1 toggleActive];
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _[a1 toolbar];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topMostController(void *a1, const char *a2, ...)
{
  return _[a1 topMostController];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_touchIDSwitch(void *a1, const char *a2, ...)
{
  return _[a1 touchIDSwitch];
}

id objc_msgSend_touchIDTimeoutLabel(void *a1, const char *a2, ...)
{
  return _[a1 touchIDTimeoutLabel];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionDidChange_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionDidChange:];
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithUserInterfaceStyle:];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_transportsForDisplay(void *a1, const char *a2, ...)
{
  return _[a1 transportsForDisplay];
}

id objc_msgSend_tryLaunchingDraft_orStub_forTeam_withSender_(void *a1, const char *a2, ...)
{
  return [a1 tryLaunchingDraft:orStub:forTeam:withSender:];
}

id objc_msgSend_tryPairingDevice_withPin_completion_(void *a1, const char *a2, ...)
{
  return [a1 tryPairingDevice:withPin:completion:];
}

id objc_msgSend_tryPin_(void *a1, const char *a2, ...)
{
  return [a1 tryPin];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typeLabel(void *a1, const char *a2, ...)
{
  return _[a1 typeLabel];
}

id objc_msgSend_typeString(void *a1, const char *a2, ...)
{
  return _[a1 typeString];
}

id objc_msgSend_uniqueFormStubsWithPreferredTeam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueFormStubsWithPreferredTeam:");
}

id objc_msgSend_unreachableDevicesInPlay(void *a1, const char *a2, ...)
{
  return _[a1 unreachableDevicesInPlay];
}

id objc_msgSend_unread(void *a1, const char *a2, ...)
{
  return _[a1 unread];
}

id objc_msgSend_unreadCountForTeam_(void *a1, const char *a2, ...)
{
  return [a1 unreadCountForTeam:];
}

id objc_msgSend_unreadImageView(void *a1, const char *a2, ...)
{
  return _[a1 unreadImageView];
}

id objc_msgSend_unreadImageViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 unreadImageViewHeightConstraint];
}

id objc_msgSend_unreadInboxPredicateWithTeam_(void *a1, const char *a2, ...)
{
  return [a1 unreadInboxPredicateWithTeam:];
}

id objc_msgSend_unregisterApplicationNotifications(void *a1, const char *a2, ...)
{
  return _[a1 unregisterApplicationNotifications];
}

id objc_msgSend_unregisterForKeyboardNotifications(void *a1, const char *a2, ...)
{
  return _[a1 unregisterForKeyboardNotifications];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongValue];
}

id objc_msgSend_updateActionView(void *a1, const char *a2, ...)
{
  return _[a1 updateActionView];
}

id objc_msgSend_updateAnnouncementWithID_success_error_(void *a1, const char *a2, ...)
{
  return [a1 updateAnnouncementWithID:success:error:];
}

id objc_msgSend_updateBarButton(void *a1, const char *a2, ...)
{
  return _[a1 updateBarButton];
}

id objc_msgSend_updateBody(void *a1, const char *a2, ...)
{
  return _[a1 updateBody];
}

id objc_msgSend_updateCachedCandidateStubsCount(void *a1, const char *a2, ...)
{
  return _[a1 updateCachedCandidateStubsCount];
}

id objc_msgSend_updateCheckboxDelegateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateCheckboxDelegateIfNeeded];
}

id objc_msgSend_updateChoices(void *a1, const char *a2, ...)
{
  return _[a1 updateChoices];
}

id objc_msgSend_updateContent(void *a1, const char *a2, ...)
{
  return _[a1 updateContent];
}

id objc_msgSend_updateContentInsetWithValue_(void *a1, const char *a2, ...)
{
  return [a1 updateContentInsetWithValue:];
}

id objc_msgSend_updateErrorArrow(void *a1, const char *a2, ...)
{
  return _[a1 updateErrorArrow];
}

id objc_msgSend_updateEverything(void *a1, const char *a2, ...)
{
  return _[a1 updateEverything];
}

id objc_msgSend_updateForNetworkStateChange_(void *a1, const char *a2, ...)
{
  return [a1 updateForNetworkStateChange:];
}

id objc_msgSend_updateHeader(void *a1, const char *a2, ...)
{
  return _[a1 updateHeader];
}

id objc_msgSend_updateHomeScreenVisibilityFromLaunchAction_(void *a1, const char *a2, ...)
{
  return [a1 updateHomeScreenVisibilityFromLaunchAction:];
}

id objc_msgSend_updateLabelLinesForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 updateLabelLinesForContentSizeCategory:];
}

id objc_msgSend_updateLoginViewVisibility(void *a1, const char *a2, ...)
{
  return _[a1 updateLoginViewVisibility];
}

id objc_msgSend_updateNewFeedbackButtonState(void *a1, const char *a2, ...)
{
  return _[a1 updateNewFeedbackButtonState];
}

id objc_msgSend_updateNumberOfLines(void *a1, const char *a2, ...)
{
  return _[a1 updateNumberOfLines];
}

id objc_msgSend_updateProgressForTask_(void *a1, const char *a2, ...)
{
  return [a1 updateProgressForTask:];
}

id objc_msgSend_updateProgressWithFormResponse_(void *a1, const char *a2, ...)
{
  return [a1 updateProgressWithFormResponse:];
}

id objc_msgSend_updateScrollView(void *a1, const char *a2, ...)
{
  return _[a1 updateScrollView];
}

id objc_msgSend_updateSearchBar(void *a1, const char *a2, ...)
{
  return _[a1 updateSearchBar];
}

id objc_msgSend_updateSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 updateSearchResults];
}

id objc_msgSend_updateSearchResultsForSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSearchResultsForSearchController:");
}

id objc_msgSend_updateSubmitButtonState(void *a1, const char *a2, ...)
{
  return _[a1 updateSubmitButtonState];
}

id objc_msgSend_updateSuperviewToAttachmentLabelSpacing_(void *a1, const char *a2, ...)
{
  return [a1 updateSuperviewToAttachmentLabelSpacing:];
}

id objc_msgSend_updateTitle(void *a1, const char *a2, ...)
{
  return _[a1 updateTitle];
}

id objc_msgSend_updateTitleView(void *a1, const char *a2, ...)
{
  return _[a1 updateTitleView];
}

id objc_msgSend_updateUI(void *a1, const char *a2, ...)
{
  return _[a1 updateUI];
}

id objc_msgSend_updateUI_(void *a1, const char *a2, ...)
{
  return [a1 updateUI:];
}

id objc_msgSend_updateUI_canDismissKeyboard_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 updateUI:canDismissKeyboard:withCompletion:];
}

id objc_msgSend_updateUIAnimated_(void *a1, const char *a2, ...)
{
  return [a1 updateUIAnimated:];
}

id objc_msgSend_updateUploadStage_(void *a1, const char *a2, ...)
{
  return [a1 updateUploadStage:];
}

id objc_msgSend_updateViewport(void *a1, const char *a2, ...)
{
  return _[a1 updateViewport];
}

id objc_msgSend_updateWebView(void *a1, const char *a2, ...)
{
  return _[a1 updateWebView];
}

id objc_msgSend_updateWithChoice_(void *a1, const char *a2, ...)
{
  return [a1 updateWithChoice:];
}

id objc_msgSend_updateWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 updateWithDevice:];
}

id objc_msgSend_updateWithDevice_showsDetail_showsTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithDevice:showsDetail:showsTransport:");
}

id objc_msgSend_updateWithDevice_showsDetail_showsTransport_isSelected_(void *a1, const char *a2, ...)
{
  return [a1 updateWithDevice:showsDetail:showsTransport:isSelected:];
}

id objc_msgSend_updateWithEnhancedLoggingSession_(void *a1, const char *a2, ...)
{
  return [a1 updateWithEnhancedLoggingSession:];
}

id objc_msgSend_updateWithItem_(void *a1, const char *a2, ...)
{
  return [a1 updateWithItem:];
}

id objc_msgSend_updateWithItem_showingTeamName_(void *a1, const char *a2, ...)
{
  return [a1 updateWithItem:showingTeamName:];
}

id objc_msgSend_updatedAt(void *a1, const char *a2, ...)
{
  return _[a1 updatedAt];
}

id objc_msgSend_updatedObjects(void *a1, const char *a2, ...)
{
  return _[a1 updatedObjects];
}

id objc_msgSend_uploadTask(void *a1, const char *a2, ...)
{
  return _[a1 uploadTask];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urlPointsToTextFile_(void *a1, const char *a2, ...)
{
  return [a1 urlPointsToTextFile:];
}

id objc_msgSend_useTouchIDSwitchCellLabel(void *a1, const char *a2, ...)
{
  return _[a1 useTouchIDSwitchCellLabel];
}

id objc_msgSend_user(void *a1, const char *a2, ...)
{
  return _[a1 user];
}

id objc_msgSend_userDescription(void *a1, const char *a2, ...)
{
  return _[a1 userDescription];
}

id objc_msgSend_userImage(void *a1, const char *a2, ...)
{
  return _[a1 userImage];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userIsEnrolledInAnySeedingProgram(void *a1, const char *a2, ...)
{
  return _[a1 userIsEnrolledInAnySeedingProgram];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_usernameCell(void *a1, const char *a2, ...)
{
  return _[a1 usernameCell];
}

id objc_msgSend_validFeedbackFollowups(void *a1, const char *a2, ...)
{
  return _[a1 validFeedbackFollowups];
}

id objc_msgSend_validate_(void *a1, const char *a2, ...)
{
  return [a1 validate:];
}

id objc_msgSend_validateURLSchemeFilePathsDictionary_(void *a1, const char *a2, ...)
{
  return [a1 validateURLSchemeFilePathsDictionary:];
}

id objc_msgSend_validationResponse(void *a1, const char *a2, ...)
{
  return _[a1 validationResponse];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 valueCellConfiguration];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 valueForKeyPath:];
}

id objc_msgSend_values(void *a1, const char *a2, ...)
{
  return _[a1 values];
}

id objc_msgSend_versionFooter(void *a1, const char *a2, ...)
{
  return _[a1 versionFooter];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForColumn:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewHasBecomeVisible(void *a1, const char *a2, ...)
{
  return _[a1 viewHasBecomeVisible];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_visibleChoices(void *a1, const char *a2, ...)
{
  return _[a1 visibleChoices];
}

id objc_msgSend_visibleFeedbackClosedStatus(void *a1, const char *a2, ...)
{
  return _[a1 visibleFeedbackClosedStatus];
}

id objc_msgSend_visibleFilePromises(void *a1, const char *a2, ...)
{
  return _[a1 visibleFilePromises];
}

id objc_msgSend_visibleQuestionForSectionIdentifier_itemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 visibleQuestionForSectionIdentifier:itemIdentifier:];
}

id objc_msgSend_wasFBAVisibleAtFirstLaunch(void *a1, const char *a2, ...)
{
  return _[a1 wasFBAVisibleAtFirstLaunch];
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return _[a1 webView];
}

id objc_msgSend_webViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 webViewHeightConstraint];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whooshSoundID(void *a1, const char *a2, ...)
{
  return _[a1 whooshSoundID];
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 willMoveToParentViewController:];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _[a1 windows];
}

id objc_msgSend_writeToFile_atomically_encoding_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:atomically:encoding:error:];
}