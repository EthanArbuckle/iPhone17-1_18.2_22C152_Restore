uint64_t sub_100002CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  void *v10;

  v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for TimelineViewContent();
  v10 = (void *)(a4 + *(int *)(result + 36));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t sub_100002D4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v19 - v12;
  Date.timeIntervalSinceReferenceDate.getter();
  remainder(v14, 1.1);
  (*(void (**)(void))(v1 + *(int *)(a1 + 36)))();
  uint64_t v15 = *(void *)(a1 + 24);
  View.opacity(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19[0] = v15;
  v19[1] = &protocol witness table for _OpacityEffect;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v11, v7, WitnessTable);
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  sub_1000A7320(v13, v7, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
}

uint64_t sub_100002FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  type metadata accessor for AnimationTimelineSchedule();
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for TimelineViewContent();
  sub_100005B34(&qword_10037ED70, (void (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule);
  type metadata accessor for TimelineView();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = v5;
  v40 = (uint64_t (*)(uint64_t))swift_getWitnessTable();
  uint64_t v7 = type metadata accessor for VStack();
  uint64_t v45 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v50 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v39 = (char *)&v37 - v11;
  uint64_t v42 = v10;
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v44 = (char *)&v37 - v13;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v64 = v38;
  v65 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v62 = v41;
  v63 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v48 = v12;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v58 = v12;
  v59 = &type metadata for Bool;
  uint64_t v60 = v47;
  v61 = &protocol witness table for Bool;
  v49 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v52 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v14 = __chkstk_darwin(OpaqueTypeMetadata2);
  v43 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v46 = (char *)&v37 - v16;
  uint64_t v17 = v6;
  uint64_t v55 = v6;
  uint64_t v56 = v5;
  v57 = v3;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = v5;
  long long v19 = *v3;
  long long v20 = v3[1];
  *(_OWORD *)(v18 + 32) = *v3;
  *(_OWORD *)(v18 + 48) = v20;
  *(_OWORD *)(v18 + 64) = v3[2];
  long long v69 = v19;
  v40 = (uint64_t (*)(uint64_t))*((void *)v3 + 2);
  sub_100006A94((uint64_t)&v69);
  swift_retain();
  swift_retain();
  v21 = v39;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v7);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v6;
  *(void *)(v22 + 24) = v5;
  long long v23 = v3[1];
  *(_OWORD *)(v22 + 32) = *v3;
  *(_OWORD *)(v22 + 48) = v23;
  *(_OWORD *)(v22 + 64) = v3[2];
  sub_100006A94((uint64_t)&v69);
  swift_retain();
  swift_retain();
  v24 = v44;
  uint64_t v25 = v42;
  View.onDisappear(perform:)();
  swift_release();
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v21, v25);
  LOBYTE(v58) = v40(v26) & 1;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v17;
  *(void *)(v27 + 24) = v5;
  long long v28 = v3[1];
  *(_OWORD *)(v27 + 32) = *v3;
  *(_OWORD *)(v27 + 48) = v28;
  *(_OWORD *)(v27 + 64) = v3[2];
  sub_100006A94((uint64_t)&v69);
  swift_retain();
  swift_retain();
  v29 = v43;
  uint64_t v30 = v48;
  uint64_t v31 = v47;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v30);
  uint64_t v58 = v30;
  v59 = &type metadata for Bool;
  uint64_t v60 = v31;
  v61 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v33 = v46;
  uint64_t v34 = OpaqueTypeMetadata2;
  sub_1000A7320(v29, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v35 = *(void (**)(char *, uint64_t))(v52 + 8);
  v35(v29, v34);
  sub_1000A7320(v33, v34, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v35)(v33, v34);
}

uint64_t sub_100003730@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for AnimationTimelineSchedule();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a3;
  uint64_t v16 = type metadata accessor for TimelineViewContent();
  uint64_t v39 = sub_100005B34(&qword_10037ED70, (void (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule);
  uint64_t v40 = v13;
  uint64_t v47 = v16;
  uint64_t v17 = type metadata accessor for TimelineView();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  long long v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = type metadata accessor for _ConditionalContent();
  uint64_t v43 = *(void *)(v23 - 8);
  uint64_t v44 = v23;
  __chkstk_darwin(v23);
  uint64_t v42 = (char *)&v39 - v24;
  long long v55 = *(_OWORD *)a1;
  long long v53 = *(_OWORD *)a1;
  sub_100004010(&qword_10037ED78);
  uint64_t v25 = State.wrappedValue.getter();
  if (v54 == 1)
  {
    AnimationTimelineSchedule.init(minimumInterval:paused:)();
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v45;
    *(void *)(v26 + 16) = a2;
    *(void *)(v26 + 24) = v27;
    long long v28 = *((_OWORD *)a1 + 1);
    *(_OWORD *)(v26 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v26 + 48) = v28;
    *(_OWORD *)(v26 + 64) = *((_OWORD *)a1 + 2);
    sub_100006A94((uint64_t)&v55);
    swift_retain();
    swift_retain();
    uint64_t v29 = v47;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1000ECAA8((uint64_t)v15, (uint64_t)sub_100006BA0, v26, v40, v29, v39, WitnessTable);
    uint64_t v48 = WitnessTable;
    uint64_t v31 = swift_getWitnessTable();
    sub_1000A7320(v20, v17, v31);
    v32 = *(void (**)(char *, uint64_t))(v41 + 8);
    v32(v20, v17);
    sub_1000A7320(v22, v17, v31);
    v33 = v42;
    sub_1000A735C((uint64_t)v20, v17);
    v32(v20, v17);
    v32(v22, v17);
  }
  else
  {
    a1[4](v25);
    uint64_t v34 = v12;
    uint64_t v27 = v45;
    sub_1000A7320(v10, a2, v45);
    v35 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35(v10, a2);
    sub_1000A7320(v34, a2, v27);
    uint64_t v52 = swift_getWitnessTable();
    swift_getWitnessTable();
    v33 = v42;
    sub_1000A7454((uint64_t)v10, v17, a2);
    v35(v10, a2);
    v35(v34, a2);
  }
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v27;
  uint64_t v36 = v44;
  uint64_t v37 = swift_getWitnessTable();
  sub_1000A7320(v33, v36, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v33, v36);
}

uint64_t sub_100003CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimelineViewContent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - v11;
  sub_100004010(qword_10037ED80);
  TimelineView.Context.date.getter();
  sub_100002CB0((uint64_t)v5, *(void *)(a2 + 32), *(void *)(a2 + 40), (uint64_t)v10);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v10, v6, WitnessTable);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v14(v10, v6);
  sub_1000A7320(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_100003ED4(char a1)
{
  int v1 = a1 & 1;
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.getter();
  if (v3 != v1) {
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100003F54()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100003F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100002FD0(a1, a2);
}

uint64_t variable initialization expression of ConnectionAssistantDisplayState.offsetSpring@<X0>(uint64_t a1@<X8>)
{
  v2 = (int *)sub_100004010(&qword_10037E5A8);
  *(void *)(a1 + v2[9]) = 0;
  *(void *)(a1 + v2[10]) = 0;
  *(void *)(a1 + v2[11]) = 0;

  return Spring.init(response:dampingRatio:)();
}

uint64_t sub_100004010(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantDisplayState.hasCoordinateSpring@<X0>(uint64_t a1@<X8>)
{
  v2 = (int *)sub_100004010(&qword_10037E5A8);
  *(void *)(a1 + v2[9]) = 0;
  *(void *)(a1 + v2[10]) = 0;
  *(void *)(a1 + v2[11]) = 0;

  return Spring.init(response:dampingRatio:)();
}

uint64_t _s8SOSBuddy31ConnectionAssistantDisplayStateC29targetRelativeAngleSnapSpring33_941F0C6B0CED33726E5F8721DE4B7EA5LLAA0J0Vy12CoreGraphics7CGFloatVGvpfi_0@<X0>(uint64_t a1@<X8>)
{
  v2 = (int *)sub_100004010(&qword_10037E5A8);
  *(void *)(a1 + v2[9]) = 0;
  *(void *)(a1 + v2[10]) = 0;
  *(void *)(a1 + v2[11]) = 0;

  return Spring.init(response:dampingRatio:)();
}

uint64_t sub_10000411C@<X0>(uint64_t a1@<X8>)
{
  v2 = (int *)sub_100004010(&qword_10037E5A8);
  *(void *)(a1 + v2[9]) = 0;
  *(void *)(a1 + v2[10]) = 0;
  *(void *)(a1 + v2[11]) = 0;

  return Spring.init(response:dampingRatio:)();
}

uint64_t sub_100004180@<X0>(uint64_t a1@<X8>)
{
  v2 = (int *)sub_100004010(&qword_10037E5B0);
  *(_DWORD *)(a1 + v2[9]) = 0;
  *(_DWORD *)(a1 + v2[10]) = 0;
  *(_DWORD *)(a1 + v2[11]) = 0;

  return Spring.init(response:dampingRatio:)();
}

void variable initialization expression of ConnectionAssistantDisplayState.noLocationLoop(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0x404E000000000000;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
}

double variable initialization expression of ConnectionAssistantDisplayState.lastNoLocationValue()
{
  return 0.0;
}

void variable initialization expression of ConnectionAssistantDisplayState.conePulsingLoop(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1065353216;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
}

void variable initialization expression of ConnectionAssistantDisplayState.locationDotLoop(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
}

double variable initialization expression of ConnectionAssistantDisplayState.dotWaveLoop@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  double result = 3.0;
  *(_OWORD *)(a1 + 8) = xmmword_1002B0B30;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

double variable initialization expression of ConnectionAssistantDisplayState.satelliteWaveLoop@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  double result = 3.0;
  *(_OWORD *)(a1 + 8) = xmmword_1002B0B40;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantRendererEarthOutline.buffers()
{
  return 0;
}

double variable initialization expression of ConnectionAssistantStars.spawn@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 56) = 1;
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantStars.color()
{
  return 0;
}

float variable initialization expression of ConnectionAssistantStars.size()
{
  return 3.0;
}

float variable initialization expression of ConnectionAssistantStars.opacity()
{
  return 0.3;
}

float variable initialization expression of ConnectionAssistantCamera.nearPlane()
{
  return 0.001;
}

float variable initialization expression of ConnectionAssistantCamera.farPlane()
{
  return 100.0;
}

float variable initialization expression of ConnectionAssistantEarth.radius()
{
  return 0.022436;
}

float variable initialization expression of ConnectionAssistantEarth.maximumAtmosphereRadiusScale()
{
  return 1.75;
}

float variable initialization expression of ConnectionAssistantSatellite.opacity()
{
  return 1.0;
}

double variable initialization expression of ConnectionAssistantEarth.dot@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 68) = 1;
  return result;
}

double variable initialization expression of ConnectionAssistantEarth.cone@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 112) = 256;
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantEarth.satellite@<X0>(uint64_t a1@<X8>)
{
  sub_1000043BC((uint64_t)v3);
  return sub_1000043E4((uint64_t)v3, a1);
}

double sub_1000043BC(uint64_t a1)
{
  *(_WORD *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 146) = 1;
  return result;
}

uint64_t sub_1000043E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037E5B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double variable initialization expression of ConnectionAssistantSatelliteRenderer.satelliteTexture@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

float variable initialization expression of ConnectionAssistantArrow.pointThickness()
{
  return 3.0;
}

float variable initialization expression of ConnectionAssistantArrow.pointBlurRadius()
{
  return 16.0;
}

float variable initialization expression of ConnectionAssistantArrow.tipAngle()
{
  return 1.5708;
}

uint64_t variable initialization expression of ConnectionAssistantRenderer.Buffers.rectVertexCount()
{
  return 4;
}

double variable initialization expression of ConnectionAssistantSatellite.cone@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 96) = 256;
  return result;
}

double variable initialization expression of ConnectionAssistantCone.pulse@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantRendererEarthOutline.textures()
{
  return 0;
}

uint64_t variable initialization expression of ConnectionAssistantRendererEarthOutline.lastViewport()
{
  return 0;
}

uint64_t variable initialization expression of ConnectionAssistantRendererEarthOutline.isTexturesLoading()
{
  return 0;
}

double variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthAtmosphereColor()
{
  return 0.00000823974724;
}

__int16 variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthAtmosphereInnerStrength@<H0>()
{
  return 12902;
}

__int16 variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthAtmosphereOuterStrength@<H0>()
{
  return 13926;
}

__int16 variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthAtmosphereGlowPower@<H0>()
{
  return COERCE_UNSIGNED_INT(-5.0);
}

float variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthOutlineWidth()
{
  return 0.5;
}

__n128 variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._earthOutlineColor()
{
  __asm { FMOV            V0.4S, #1.0 }
  return result;
}

double variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._coneBaseAlpha()
{
  return 0.000000381469872;
}

float variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._coneEllipseAlpha()
{
  return 0.01;
}

double variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.Constants._coneGaussianRadius()
{
  return 33554432.0;
}

__n128 variable initialization expression of ConnectionAssistantRenderer.RenderPipelines.constants@<Q0>(uint64_t a1@<X8>)
{
  if (qword_10037DF10 != -1) {
    swift_once();
  }
  long long v2 = *(_OWORD *)&qword_1003A9D10;
  *(_OWORD *)(a1 + 96) = xmmword_1003A9D00;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 128) = xmmword_1003A9D20;
  long long v3 = *(_OWORD *)&dword_1003A9CD0;
  *(_OWORD *)(a1 + 32) = xmmword_1003A9CC0;
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = xmmword_1003A9CF0;
  *(_OWORD *)(a1 + 64) = xmmword_1003A9CE0;
  *(_OWORD *)(a1 + 80) = v4;
  __n128 result = (__n128)xmmword_1003A9CB0;
  *(_OWORD *)a1 = static ConnectionAssistantRenderer.RenderPipelines.Constants.default;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t variable initialization expression of ConnectionAssistantRenderer.RenderPipelines._starKernelPipelineState()
{
  return 0;
}

unint64_t variable initialization expression of ConnectionAssistantRenderer.RenderPipelines._pipelines()
{
  return sub_100285E20((uint64_t)&_swiftEmptyArrayStorage);
}

BOOL sub_1000045D8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

Swift::Int sub_100004608()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100004650()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10000467C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_1000046C0(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_1000046D4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000046E0(uint64_t a1, uint64_t a2)
{
  return sub_100005270(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000470C(uint64_t a1, uint64_t a2)
{
  return sub_100005270(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

NSNumber sub_100004724()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10000472C(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_100004780(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1000047D8@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

void sub_100004804(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_10000480C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100004820@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_100004834@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_100004848@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100004874@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100004898(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1000048AC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1000048C0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1000048D4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000048E8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000048FC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100004910(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100004924()
{
  return *v0 == 0;
}

uint64_t sub_100004934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10000494C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_100004960(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1000049D8(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100004A58@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100004AA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10000541C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_100004AE0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100004AEC()
{
  sub_100005B34((unint64_t *)&unk_100380440, type metadata accessor for LaunchOptionsKey);
  sub_100005B34(&qword_10037EC60, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100004BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100004BD4()
{
  sub_100005B34(&qword_10037EC68, type metadata accessor for URLResourceKey);
  sub_100005B34((unint64_t *)&unk_10037EC70, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100004C90()
{
  sub_100005B34((unint64_t *)&qword_100381880, type metadata accessor for Option);
  sub_100005B34(&qword_10037EC80, type metadata accessor for Option);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *sub_100004D4C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_100004D5C@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_100004D68()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100004E30()
{
  sub_100005B34(&qword_10037EAD8, type metadata accessor for UIContentSizeCategory);
  sub_100005B34(&qword_10037EAE0, type metadata accessor for UIContentSizeCategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100004EEC()
{
  sub_100005B34(&qword_10037ECD0, type metadata accessor for Key);
  sub_100005B34(&qword_10037ECD8, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100004FA8()
{
  sub_100005B34(&qword_10037ECC0, type metadata accessor for EventType);
  sub_100005B34(&qword_10037ECC8, type metadata accessor for EventType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100005064()
{
  sub_100005B34(&qword_10037ECB0, type metadata accessor for TraitKey);
  sub_100005B34(&qword_10037ECB8, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100005120@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100005168()
{
  sub_100005B34((unint64_t *)&qword_10037EC88, type metadata accessor for AttributeName);
  sub_100005B34(&qword_10037EC90, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100005224()
{
  return Double.hashValue.getter(*v0);
}

void sub_10000522C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_100005260()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_100005270(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000052B4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100005308()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_10000537C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100005390()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10000541C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

__n128 sub_100005458(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererLocationDotUniforms(uint64_t a1)
{
}

void type metadata accessor for ConnectionAssistantRendererFunctionConstantIndex(uint64_t a1)
{
}

__n128 initializeWithTake for QuestionnaireState.RecordedAnswer(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for QuestionnaireRevision(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for QuestionnaireRevision(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

__n128 sub_100005504(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t sub_100005538(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005558(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 176) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererConeUniforms(uint64_t a1)
{
}

uint64_t sub_1000055C4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000055E4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererVertexUniforms(uint64_t a1)
{
}

__n128 initializeWithTake for ConnectionAssistantDisplayState.ConeState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantEarth.LightDirection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantEarth.LightDirection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEarthShapeFragmentUniforms(uint64_t a1)
{
}

void type metadata accessor for ConnectionAssistantRendererEarthShapeVertexUniforms(uint64_t a1)
{
}

__n128 sub_1000056CC(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t sub_100005700(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005720(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 192) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEarthUniforms(uint64_t a1)
{
}

__n128 initializeWithCopy for ConnectionAssistantCone.Pulse(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantCone.Pulse(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererSatelliteUniforms(uint64_t a1)
{
}

__n128 sub_1000057DC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 initializeWithCopy for ConnectionAssistantDisplayState.TopInset.FullScreenTopInsets(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
}

void *sub_10000584C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t sub_100005854(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 288)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005874(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 288) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEarthTexturedUniforms(uint64_t a1)
{
}

__n128 sub_100005900(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t sub_10000591C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000593C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 96) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererArrowUniforms(uint64_t a1)
{
}

void type metadata accessor for ConnectionAssistantRendererStarFragmentUniforms(uint64_t a1)
{
}

void type metadata accessor for ConnectionAssistantRendererStarVertexUniforms(uint64_t a1)
{
}

void type metadata accessor for ConnectionAssistantRendererStarKernelUniforms(uint64_t a1)
{
}

void type metadata accessor for CTSubscriptionSlot(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for CTStewieConnectionAssistantEventType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantCone.Pulse(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for CMQuaternion(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureLayoutMode(uint64_t a1)
{
}

void type metadata accessor for IDSOffGridModePublishStatus(uint64_t a1)
{
}

void type metadata accessor for IDSOffGridMode(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

uint64_t sub_100005AA4()
{
  return sub_100005B34(&qword_10037EAB8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100005AEC()
{
  return sub_100005B34(&qword_10037EAC0, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100005B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005B7C()
{
  return sub_100005B34(&qword_10037EAC8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100005BC4()
{
  return sub_100005B34(&qword_10037EAD0, type metadata accessor for CTSubscriptionSlot);
}

void *sub_100005C0C(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ServicePredictionsModel.RequestToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ServicePredictionsModel.RequestToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEarthShapeShape(uint64_t a1)
{
}

uint64_t sub_100005C74(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantRendererProjection.Circle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantRendererProjection.Circle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEarthShapeCoordinate(uint64_t a1)
{
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for Option(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for StoppedReason(uint64_t a1)
{
}

void type metadata accessor for EventType(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CTCAStewieEmergencyRequestReason(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for CTStewieExitReason(uint64_t a1)
{
}

__n128 initializeBufferWithCopyOfBuffer for QuestionnairePolicy.AutoSendPolicy(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for QuestionnairePolicy.AutoSendPolicy(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for QuestionnairePolicy.AutoSendPolicy(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for ConnectionAssistantRendererEllipse(uint64_t a1)
{
}

void type metadata accessor for CTStewieServiceType(uint64_t a1)
{
}

uint64_t sub_100005E74(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005E94(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x3(uint64_t a1)
{
}

uint64_t sub_100005EE4()
{
  return sub_100005B34(&qword_10037EB78, type metadata accessor for CTStewieServiceType);
}

uint64_t sub_100005F2C()
{
  return sub_100005B34(&qword_10037EB80, type metadata accessor for CTStewieServiceType);
}

uint64_t sub_100005F74()
{
  return sub_100005B34(&qword_10037EB88, type metadata accessor for CTStewieServiceType);
}

uint64_t sub_100005FBC()
{
  return sub_100005B34(&qword_10037EB90, type metadata accessor for CTStewieServiceType);
}

uint64_t sub_100006004()
{
  return sub_100005B34(&qword_10037EB98, type metadata accessor for Key);
}

uint64_t sub_10000604C()
{
  return sub_100005B34(&qword_10037EBA0, type metadata accessor for Key);
}

uint64_t sub_100006094()
{
  return sub_100005B34(&qword_10037EBA8, type metadata accessor for EventType);
}

uint64_t sub_1000060DC()
{
  return sub_100005B34(&qword_10037EBB0, type metadata accessor for EventType);
}

uint64_t sub_100006124()
{
  return sub_100005B34(&qword_10037EBB8, type metadata accessor for EventType);
}

uint64_t sub_10000616C()
{
  return sub_100005B34(&qword_10037EBC0, type metadata accessor for TraitKey);
}

uint64_t sub_1000061B4()
{
  return sub_100005B34(&qword_10037EBC8, type metadata accessor for TraitKey);
}

uint64_t sub_1000061FC()
{
  return sub_100005B34(&qword_10037EBD0, type metadata accessor for TraitKey);
}

uint64_t sub_100006244()
{
  return sub_100005B34(&qword_10037EBD8, type metadata accessor for Weight);
}

uint64_t sub_10000628C()
{
  return sub_100005B34(&qword_10037EBE0, type metadata accessor for Weight);
}

uint64_t sub_1000062D4()
{
  return sub_100005B34(&qword_10037EBE8, type metadata accessor for Weight);
}

uint64_t sub_10000631C()
{
  return sub_100005B34(&qword_10037EBF0, type metadata accessor for AttributeName);
}

uint64_t sub_100006364()
{
  return sub_100005B34(&qword_10037EBF8, type metadata accessor for AttributeName);
}

uint64_t sub_1000063AC()
{
  return sub_100005B34(&qword_10037EC00, type metadata accessor for Option);
}

uint64_t sub_1000063F4()
{
  return sub_100005B34(&qword_10037EC08, type metadata accessor for Option);
}

uint64_t sub_10000643C()
{
  return sub_100005B34(&qword_10037EC10, type metadata accessor for URLResourceKey);
}

uint64_t sub_100006484()
{
  return sub_100005B34(&qword_10037EC18, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000064CC()
{
  return sub_100005B34(&qword_10037EC20, type metadata accessor for URLResourceKey);
}

uint64_t sub_100006514()
{
  return sub_100005B34(&qword_10037EC28, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_10000655C()
{
  return sub_100005B34(&qword_10037EC30, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_1000065A4()
{
  return sub_100005B34(&qword_10037EC38, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_1000065EC()
{
  return sub_100005B34(&qword_10037EC40, type metadata accessor for Option);
}

uint64_t sub_100006634()
{
  return sub_100005B34(&qword_10037EC48, type metadata accessor for AttributeName);
}

uint64_t sub_10000667C()
{
  return sub_100005B34((unint64_t *)&unk_10037EC50, type metadata accessor for Key);
}

unint64_t sub_1000066C4()
{
  unint64_t result = qword_10037ECA8;
  if (!qword_10037ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037ECA8);
  }
  return result;
}

void type metadata accessor for CTStewieNotifyOption(uint64_t a1)
{
}

void type metadata accessor for Style(uint64_t a1)
{
}

uint64_t sub_100006740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t initializeBufferWithCopyOfBuffer for QuestionPresentation(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_10000677C()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000067C0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10000682C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AppEvents.AppPageEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1000068C0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MultipleChoiceContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultipleChoiceContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for PulsatingView()
{
  return sub_100006BAC();
}

uint64_t sub_1000069CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TimelineViewContent()
{
  return sub_100006BAC();
}

uint64_t sub_100006A28@<X0>(uint64_t a1@<X8>)
{
  return sub_100003730(*(void (***)(uint64_t))(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100006A38()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 48))();
  type metadata accessor for PulsatingView();
  return sub_100003ED4(v1 & 1);
}

uint64_t sub_100006A94(uint64_t a1)
{
  return a1;
}

uint64_t sub_100006AC4()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100006B14(uint64_t a1, char *a2)
{
  char v2 = *a2;
  type metadata accessor for PulsatingView();
  return sub_100003ED4(v2);
}

uint64_t sub_100006B58()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100006BA0(uint64_t a1)
{
  return sub_100003CF0(a1, v1 + 32);
}

uint64_t sub_100006BAC()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100006BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100006BE4()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100006C7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    long long v9 = (uint64_t *)((char *)a1 + v8);
    long long v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *long long v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_100006D50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_100006DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  long long v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_100006E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  long long v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100006EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_100006F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  return a1;
}

uint64_t sub_100006FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100006FFC);
}

uint64_t sub_100006FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000070BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000070D0);
}

uint64_t sub_1000070D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10000718C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000737C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000073C0()
{
  return swift_getWitnessTable();
}

void type metadata accessor for UIKeyboardType(uint64_t a1)
{
}

void sub_100007438(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t destroy for QuestionnaireBodyView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for QuestionnaireBodyView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QuestionnaireBodyView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for QuestionnaireBodyView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void *assignWithTake for QuestionnaireBodyView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_release();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_release();
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireBodyView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireBodyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireBodyView()
{
  return &type metadata for QuestionnaireBodyView;
}

uint64_t sub_1000077BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000077D8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_100008F88(v4 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v15, v5, v6);
    v11[0] = static HorizontalAlignment.center.getter();
    v11[1] = 0;
    char v12 = 0;
    sub_100007958(v1, (uint64_t)v15, (uint64_t)&v13);
    uint64_t v7 = swift_allocObject();
    long long v8 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v7 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v7 + 64) = v8;
    *(void *)(v7 + 80) = *(void *)(v2 + 64);
    long long v9 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v7 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v7 + 32) = v9;
    sub_100008FD8((uint64_t)v11, (uint64_t)__src);
    __src[43] = sub_100008FD0;
    __src[44] = v7;
    __src[46] = 0;
    __src[45] = 0;
    sub_100009040(v2);
    sub_10000950C((uint64_t)v11, &qword_10037EFF8);
    memcpy(a1, __src, 0x178uLL);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v15);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100009428((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100007958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000090FC(a2, (uint64_t)v27);
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(void *)(v6 + 80) = *(void *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v8;
  sub_100009164(v27, v6 + 88);
  sub_1000090FC(a2, (uint64_t)v25);
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 64) = v10;
  *(void *)(v9 + 80) = *(void *)(a1 + 64);
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v11;
  sub_100009164(v25, v9 + 88);
  uint64_t v12 = *(void *)(a1 + 48);
  BOOL v13 = *(unsigned char *)(v12 + 64) == 0;
  sub_100009040(a1);
  sub_100009040(a1);
  sub_1001621AC(&v30, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_10000917C, v6, sub_1000091EC, v9, v13);
  if (*(void *)(a1 + 32))
  {
    uint64_t v42 = *(void *)(a1 + 32);
    char v43 = 2;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v44 = v12;
    swift_retain();
    swift_retain();
    sub_1000FF148((uint64_t)&v42, (uint64_t)v29);
    sub_1000091F8((uint64_t)v29, (uint64_t)v24);
    long long v14 = v37;
    v25[8] = v38;
    v25[9] = v39;
    long long v15 = v39;
    v25[10] = v40;
    long long v16 = v34;
    long long v17 = v33;
    v25[4] = v34;
    v25[5] = v35;
    long long v18 = v35;
    long long v19 = v36;
    v25[6] = v36;
    v25[7] = v37;
    v25[0] = v30;
    v25[1] = v31;
    long long v21 = v30;
    long long v20 = v31;
    long long v22 = v32;
    v25[2] = v32;
    v25[3] = v33;
    *(_OWORD *)(a3 + 128) = v38;
    *(_OWORD *)(a3 + 144) = v15;
    *(_OWORD *)(a3 + 160) = v40;
    *(_OWORD *)(a3 + 64) = v16;
    *(_OWORD *)(a3 + 80) = v18;
    *(_OWORD *)(a3 + 96) = v19;
    *(_OWORD *)(a3 + 112) = v14;
    *(_OWORD *)a3 = v21;
    *(_OWORD *)(a3 + 16) = v20;
    uint64_t v26 = v41;
    *(void *)(a3 + 176) = v41;
    *(_OWORD *)(a3 + 32) = v22;
    *(_OWORD *)(a3 + 48) = v17;
    sub_1000091F8((uint64_t)v24, a3 + 184);
    sub_100009254((uint64_t)v25);
    sub_100009300((uint64_t)v29);
    sub_100009300((uint64_t)v24);
    v27[8] = v38;
    v27[9] = v39;
    v27[10] = v40;
    uint64_t v28 = v41;
    v27[4] = v34;
    v27[5] = v35;
    v27[6] = v36;
    v27[7] = v37;
    v27[0] = v30;
    v27[1] = v31;
    v27[2] = v32;
    v27[3] = v33;
    return sub_100009354((uint64_t)v27);
  }
  else
  {
    type metadata accessor for QuestionnaireState();
    sub_100009428(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

__n128 sub_100007C18@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = static HorizontalAlignment.center.getter();
  sub_100007D64(a1, (uint64_t)v28);
  long long v26 = v28[1];
  long long v27 = v28[0];
  long long v24 = v28[3];
  long long v25 = v28[2];
  __n128 v22 = (__n128)v28[5];
  long long v23 = v28[4];
  uint64_t v7 = v29;
  uint64_t v8 = v30;
  char v9 = v31;
  unsigned __int8 v10 = v32;
  __int16 v33 = v32;
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  sub_100008F88(a2, v11);
  double v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v20 = static Edge.Set.all.getter();
  LOBYTE(v28[0]) = 0;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  *(_OWORD *)(a3 + 24) = v27;
  *(_OWORD *)(a3 + 40) = v26;
  *(_OWORD *)(a3 + 56) = v25;
  *(_OWORD *)(a3 + 72) = v24;
  *(_OWORD *)(a3 + 88) = v23;
  __n128 result = v22;
  *(__n128 *)(a3 + 104) = v22;
  *(void *)(a3 + 120) = v7;
  *(void *)(a3 + 128) = v8;
  *(unsigned char *)(a3 + 136) = v9;
  *(unsigned char *)(a3 + 137) = v10;
  *(unsigned char *)(a3 + 144) = v20;
  *(double *)(a3 + 152) = v13;
  *(void *)(a3 + 160) = v15;
  *(void *)(a3 + 168) = v17;
  *(void *)(a3 + 176) = v19;
  *(unsigned char *)(a3 + 184) = v28[0];
  return result;
}

uint64_t sub_100007D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  switch(*(unsigned char *)(v3 + 32))
  {
    case 1:
      uint64_t v33 = *(void *)(a1 + 32);
      if (!v33) {
        goto LABEL_12;
      }
      uint64_t v34 = swift_allocObject();
      long long v35 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v34 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v34 + 64) = v35;
      *(void *)(v34 + 80) = *(void *)(a1 + 64);
      long long v36 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v34 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v34 + 32) = v36;
      swift_retain_n();
      sub_100009040(a1);
      type metadata accessor for UIMetrics();
      sub_100009428((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      swift_retain();
      *(void *)&long long v40 = EnvironmentObject.init()();
      *((void *)&v40 + 1) = v37;
      *(void *)&long long v42 = v33;
      *((void *)&v42 + 1) = v3;
      *(void *)&long long v44 = sub_100009B5C;
      *((void *)&v44 + 1) = v34;
      *(void *)&long long v46 = 0;
      long long v45 = 0uLL;
      BYTE8(v46) = 1;
      sub_100009614();
      sub_100009668();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10037F050);
      sub_100004010(&qword_10037F058);
      sub_1000096BC(&qword_10037F060, &qword_10037F050, (void (*)(void))sub_100009614, (void (*)(void))sub_100009668);
      sub_1000096BC(&qword_10037F078, &qword_10037F058, (void (*)(void))sub_10000956C, (void (*)(void))sub_1000095C0);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      goto LABEL_10;
    case 2:
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16) {
        goto LABEL_12;
      }
      uint64_t v17 = swift_allocObject();
      long long v18 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v17 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v17 + 64) = v18;
      *(void *)(v17 + 80) = *(void *)(a1 + 64);
      long long v19 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v17 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 32) = v19;
      swift_retain_n();
      sub_100009040(a1);
      type metadata accessor for AppEvents();
      sub_100009428((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v20 = EnvironmentObject.init()();
      uint64_t v22 = v21;
      type metadata accessor for UIMetrics();
      sub_100009428((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v23 = EnvironmentObject.init()();
      uint64_t v25 = v24;
      FocusState.init<A>()();
      long long v26 = v39;
      uint64_t v27 = v43;
      long long v28 = v41;
      *(void *)&long long v40 = v20;
      *((void *)&v40 + 1) = v22;
      *(void *)&long long v42 = v23;
      *((void *)&v42 + 1) = v25;
      *(void *)&long long v44 = v16;
      *((void *)&v44 + 1) = v3;
      *(void *)&long long v45 = sub_100009B5C;
      *((void *)&v45 + 1) = v17;
      long long v46 = v26;
      long long v47 = v28;
      uint64_t v48 = v27;
      char v49 = 0;
      sub_10000956C();
      sub_1000095C0();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10037F050);
      sub_100004010(&qword_10037F058);
      sub_1000096BC(&qword_10037F060, &qword_10037F050, (void (*)(void))sub_100009614, (void (*)(void))sub_100009668);
      sub_1000096BC(&qword_10037F078, &qword_10037F058, (void (*)(void))sub_10000956C, (void (*)(void))sub_1000095C0);
      _ConditionalContent<>.init(storage:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      break;
    case 3:
      uint64_t v29 = *(void *)(a1 + 32);
      if (!v29) {
        goto LABEL_12;
      }
      uint64_t v30 = swift_allocObject();
      long long v31 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v30 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v30 + 64) = v31;
      *(void *)(v30 + 80) = *(void *)(a1 + 64);
      long long v32 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v30 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v30 + 32) = v32;
      *(void *)&long long v40 = v29;
      *((void *)&v40 + 1) = v3;
      *(void *)&long long v42 = v2;
      *((void *)&v42 + 1) = v4;
      *(void *)&long long v44 = sub_100009B5C;
      *((void *)&v44 + 1) = v30;
      long long v45 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      uint64_t v48 = 0;
      char v49 = 1;
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain();
      sub_100009040(a1);
      sub_10000956C();
      sub_1000095C0();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10037F050);
      sub_100004010(&qword_10037F058);
      sub_1000096BC(&qword_10037F060, &qword_10037F050, (void (*)(void))sub_100009614, (void (*)(void))sub_100009668);
      sub_1000096BC(&qword_10037F078, &qword_10037F058, (void (*)(void))sub_10000956C, (void (*)(void))sub_1000095C0);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
      uint64_t v7 = *(void *)(a1 + 32);
      if (!v7)
      {
LABEL_12:
        type metadata accessor for QuestionnaireState();
        sub_100009428(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
        swift_retain();
        EnvironmentObject.error()();
        __break(1u);
        JUMPOUT(0x100008914);
      }
      uint64_t v8 = swift_allocObject();
      long long v9 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v8 + 64) = v9;
      *(void *)(v8 + 80) = *(void *)(a1 + 64);
      long long v10 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v8 + 32) = v10;
      swift_retain_n();
      swift_retain();
      sub_100009040(a1);
      type metadata accessor for UIMetrics();
      sub_100009428((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v11 = EnvironmentObject.init()();
      uint64_t v13 = v12;
      type metadata accessor for CGSize(0);
      State.init(wrappedValue:)();
      uint64_t v14 = v41;
      long long v15 = v39;
      *(void *)&long long v40 = v11;
      *((void *)&v40 + 1) = v13;
      *(void *)&long long v42 = v7;
      *((void *)&v42 + 1) = v3;
      *(void *)&long long v44 = sub_100009B5C;
      *((void *)&v44 + 1) = v8;
      long long v45 = v15;
      *(void *)&long long v46 = v14;
      BYTE8(v46) = 0;
      sub_100009614();
      sub_100009668();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10037F050);
      sub_100004010(&qword_10037F058);
      sub_1000096BC(&qword_10037F060, &qword_10037F050, (void (*)(void))sub_100009614, (void (*)(void))sub_100009668);
      sub_1000096BC(&qword_10037F078, &qword_10037F058, (void (*)(void))sub_10000956C, (void (*)(void))sub_1000095C0);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
LABEL_10:
      swift_release();
      swift_release();
      break;
  }
  swift_release();
  *(void *)a2 = v3;
  *(_OWORD *)(a2 + 8) = v40;
  *(_OWORD *)(a2 + 24) = v42;
  *(_OWORD *)(a2 + 40) = v44;
  *(_OWORD *)(a2 + 56) = v45;
  *(_OWORD *)(a2 + 72) = v46;
  *(_OWORD *)(a2 + 88) = v47;
  *(void *)(a2 + 104) = v48;
  *(unsigned char *)(a2 + 112) = v49;
  *(unsigned char *)(a2 + 113) = v50;
  swift_retain();
  sub_100009874(v40, *((uint64_t *)&v40 + 1), v42, *((uint64_t *)&v42 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, v49, v50, (uint64_t (*)(uint64_t))sub_100009744, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000097B4);
  sub_100009874(v40, *((uint64_t *)&v40 + 1), v42, *((uint64_t *)&v42 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, v49, v50, (uint64_t (*)(uint64_t))sub_1000098C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100009950);
  return swift_release();
}

uint64_t sub_100008924()
{
  if (*v0)
  {
    if (v0[4])
    {
      swift_retain();
      swift_retain();
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
      swift_release();
      swift_release();
      swift_retain();
      PassthroughSubject.send(_:)();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100009428((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for QuestionnaireState();
  sub_100009428(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
  swift_retain();
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100008AAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v31[0] = a3;
  uint64_t v5 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10037F018);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(void *)(v13 + 80) = *(void *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v15;
  v31[1] = v12;
  v31[2] = sub_100009404;
  v31[3] = v13;
  uint64_t v16 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v17 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v7, v16, v17);
  swift_retain();
  sub_100009040(a1);
  sub_100009428(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100009470();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C((uint64_t)v7, &qword_10037F010);
    swift_release();
    swift_release();
    uint64_t v19 = a2[3];
    uint64_t v20 = a2[4];
    sub_100008F88(a2, v19);
    double v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    char v28 = static Edge.Set.all.getter();
    uint64_t v29 = v31[0];
    (*(void (**)(void, char *, uint64_t))(v9 + 16))(v31[0], v11, v8);
    uint64_t v30 = v29 + *(int *)(sub_100004010(&qword_10037F038) + 36);
    *(unsigned char *)uint64_t v30 = v28;
    *(double *)(v30 + 8) = v21;
    *(void *)(v30 + 16) = v23;
    *(void *)(v30 + 24) = v25;
    *(void *)(v30 + 32) = v27;
    *(unsigned char *)(v30 + 40) = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100008DEC(void *a1)
{
  if (*a1)
  {
    if (a1[4])
    {
      swift_retain();
      swift_retain();
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100009428((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for QuestionnaireState();
  sub_100009428(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
  swift_retain();
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100008F44@<X0>(void *a1@<X8>)
{
  return sub_1000077D8(a1);
}

void *sub_100008F88(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100008FD0()
{
  return sub_100008DEC((void *)(v0 + 16));
}

uint64_t sub_100008FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037EFF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100009040(uint64_t a1)
{
  return a1;
}

uint64_t _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000090FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100009164(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

double sub_10000917C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100007C18(v1 + 16, (void *)(v1 + 88), a1).n128_u64[0];
  return result;
}

uint64_t sub_10000918C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 88);

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1000091EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008AAC(v1 + 16, (void *)(v1 + 88), a1);
}

uint64_t sub_1000091F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100009254(uint64_t a1)
{
  return a1;
}

uint64_t sub_100009300(uint64_t a1)
{
  return a1;
}

uint64_t sub_100009354(uint64_t a1)
{
  return a1;
}

uint64_t sub_100009404()
{
  return sub_100008924();
}

uint64_t sub_100009428(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100009470()
{
  unint64_t result = qword_10037F028;
  if (!qword_10037F028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F028);
  }
  return result;
}

uint64_t sub_1000094C4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000950C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004010(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10000956C()
{
  unint64_t result = qword_10037F040;
  if (!qword_10037F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F040);
  }
  return result;
}

unint64_t sub_1000095C0()
{
  unint64_t result = qword_10037F048;
  if (!qword_10037F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F048);
  }
  return result;
}

unint64_t sub_100009614()
{
  unint64_t result = qword_10037F068;
  if (!qword_10037F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F068);
  }
  return result;
}

unint64_t sub_100009668()
{
  unint64_t result = qword_10037F070;
  if (!qword_10037F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F070);
  }
  return result;
}

uint64_t sub_1000096BC(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100009744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) == 0) {
    swift_retain();
  }
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_1000097B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if ((a14 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }

  return swift_retain();
}

uint64_t sub_100009874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t (*a16)(uint64_t), uint64_t (*a17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a15) {
    return a17(a1, a2, a3, a4, a5);
  }
  else {
    return a16(a1);
  }
}

uint64_t sub_1000098C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((a10 & 1) == 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100009950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  swift_release();
  swift_release();
  if ((a14 & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100009A1C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

unint64_t sub_100009A78()
{
  unint64_t result = qword_10037F080;
  if (!qword_10037F080)
  {
    sub_1000094C4(&qword_10037F088);
    sub_100009B18(&qword_10037F090, &qword_10037EFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F080);
  }
  return result;
}

uint64_t sub_100009B18(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SessionTrailingView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SessionTrailingView()
{
  return swift_release();
}

void *assignWithTake for SessionTrailingView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SessionTrailingView()
{
  return &type metadata for SessionTrailingView;
}

uint64_t sub_100009BF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009C10@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)v1)
  {
    uint64_t result = sub_100078E0C(0, *(void *)(*(void *)v1 + 200));
    if (result)
    {
      type metadata accessor for BannerAppearanceModel();
      sub_10000CB8C(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
      uint64_t v4 = EnvironmentObject.init()();
      uint64_t v6 = v5;
      unsigned __int8 v7 = static Edge.Set.leading.getter();
      uint64_t result = EdgeInsets.init(_all:)();
      uint64_t v12 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v12 = 0;
      uint64_t v8 = 0;
      uint64_t v4 = 1;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = 0;
  }
  else
  {
    type metadata accessor for BannerAppearanceModel();
    sub_10000CB8C(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void *assignWithCopy for ReportEmergencyButtonLabelView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ServicePartners(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServicePartners(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionTrailingContentView()
{
  return &type metadata for SessionTrailingContentView;
}

unint64_t sub_100009E58()
{
  unint64_t result = qword_10037F0A0;
  if (!qword_10037F0A0)
  {
    sub_1000094C4(&qword_10037F0A8);
    sub_100009ECC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F0A0);
  }
  return result;
}

unint64_t sub_100009ECC()
{
  unint64_t result = qword_10037F0B0;
  if (!qword_10037F0B0)
  {
    sub_1000094C4(&qword_10037F0B8);
    sub_100009F48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F0B0);
  }
  return result;
}

unint64_t sub_100009F48()
{
  unint64_t result = qword_10037F0C0;
  if (!qword_10037F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F0C0);
  }
  return result;
}

uint64_t sub_100009F9C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100009FB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_10037F0C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    type metadata accessor for BannerAppearanceModel();
    sub_10000CB8C(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x10000A4E8);
  }
  uint64_t v7 = a1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  swift_beginAccess();
  sub_10000D2A0(v7, (uint64_t)v6, &qword_10037F0C8);
  uint64_t v8 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
LABEL_5:
    long long v31 = 0u;
    long long v32 = 0u;
    long long v30 = 0u;
    __int16 v33 = 256;
    sub_100004010(&qword_10037F0D0);
    sub_10000C7A4(&qword_10037F0D8, &qword_10037F0D0, (void (*)(void))sub_10000A508, (void (*)(void))sub_10000A55C);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_10000CFFC((uint64_t)v6, type metadata accessor for ConnectionClosed);
        goto LABEL_5;
      case 4u:
        type metadata accessor for ConnectionModel(0);
        sub_10000CB8C(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
        uint64_t v22 = EnvironmentObject.init()();
        uint64_t v24 = v23;
        type metadata accessor for ConnectivityModel();
        sub_10000CB8C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
        uint64_t v25 = EnvironmentObject.init()();
        uint64_t v27 = v26;
        type metadata accessor for UIMetrics();
        sub_10000CB8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        uint64_t v28 = EnvironmentObject.init()();
        *(void *)&long long v30 = v22;
        *((void *)&v30 + 1) = v24;
        *(void *)&long long v31 = v25;
        *((void *)&v31 + 1) = v27;
        *(void *)&long long v32 = v28;
        *((void *)&v32 + 1) = v29;
        LOBYTE(v33) = 0;
        break;
      case 5u:
        type metadata accessor for ConnectivityModel();
        sub_10000CB8C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
        uint64_t v14 = EnvironmentObject.init()();
        uint64_t v16 = v15;
        type metadata accessor for GuidanceModel(0);
        sub_10000CB8C(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
        uint64_t v17 = EnvironmentObject.init()();
        uint64_t v19 = v18;
        type metadata accessor for UIMetrics();
        sub_10000CB8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        uint64_t v20 = EnvironmentObject.init()();
        *(void *)&long long v30 = v14;
        *((void *)&v30 + 1) = v16;
        *(void *)&long long v31 = v17;
        *((void *)&v31 + 1) = v19;
        *(void *)&long long v32 = v20;
        *((void *)&v32 + 1) = v21;
        LOBYTE(v33) = 1;
        break;
      default:
        goto LABEL_5;
    }
    sub_10000A508();
    sub_10000A55C();
    swift_retain();
    swift_retain();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    long long v30 = v34;
    long long v31 = v35;
    long long v32 = v36;
    __int16 v33 = v37;
    sub_100004010(&qword_10037F0D0);
    sub_10000C7A4(&qword_10037F0D8, &qword_10037F0D0, (void (*)(void))sub_10000A508, (void (*)(void))sub_10000A55C);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    swift_release();
  }
  double result = *(double *)&v34;
  long long v10 = v35;
  long long v11 = v36;
  unsigned __int8 v12 = v37;
  char v13 = v38;
  *(_OWORD *)a2 = v34;
  *(_OWORD *)(a2 + 16) = v10;
  *(_OWORD *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 48) = v12;
  *(unsigned char *)(a2 + 49) = v13;
  return result;
}

double sub_10000A500@<D0>(uint64_t a1@<X8>)
{
  return sub_100009FB8(*v1, a1);
}

unint64_t sub_10000A508()
{
  unint64_t result = qword_10037F0E0;
  if (!qword_10037F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F0E0);
  }
  return result;
}

unint64_t sub_10000A55C()
{
  unint64_t result = qword_10037F0E8;
  if (!qword_10037F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F0E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for _SessionTrailingContentExplorerView()
{
  return &type metadata for _SessionTrailingContentExplorerView;
}

uint64_t destroy for QuestionnaireIntroductionView()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for QuestionnaireIntroductionView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for QuestionnaireIntroductionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  return a1;
}

void *assignWithTake for QuestionnaireIntroductionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_release();
  a1[5] = a2[5];
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireIntroductionView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireIntroductionView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _SessionTrailingContentConnectionAssistanceView()
{
  return &type metadata for _SessionTrailingContentConnectionAssistanceView;
}

unint64_t sub_10000A834()
{
  unint64_t result = qword_10037F108;
  if (!qword_10037F108)
  {
    sub_1000094C4(&qword_10037F110);
    sub_10000C7A4(&qword_10037F0D8, &qword_10037F0D0, (void (*)(void))sub_10000A508, (void (*)(void))sub_10000A55C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F108);
  }
  return result;
}

uint64_t sub_10000A8E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000A904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v121 = a1;
  uint64_t v2 = type metadata accessor for ControlSize();
  uint64_t v108 = *(void *)(v2 - 8);
  uint64_t v109 = v2;
  __chkstk_darwin(v2);
  v107 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v102 = v4;
  __chkstk_darwin(v4);
  v99 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10037F118);
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  __chkstk_darwin(v6);
  v96 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10037F120);
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  __chkstk_darwin(v8);
  v103 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004010(&qword_10037F128);
  uint64_t v10 = __chkstk_darwin(v116);
  v100 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v106 = (uint64_t)&v94 - v12;
  uint64_t v114 = sub_100004010(&qword_10037F130);
  __chkstk_darwin(v114);
  uint64_t v115 = (uint64_t)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100004010(&qword_10037F138);
  __chkstk_darwin(v120);
  v117 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10037F140);
  __chkstk_darwin(v15 - 8);
  v111 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004010(&qword_10037F148);
  __chkstk_darwin(v113);
  v112 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100004010(&qword_10037F150);
  __chkstk_darwin(v118);
  uint64_t v19 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TransmissionProgress(0);
  uint64_t v110 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v95 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004010(&qword_10037F160);
  __chkstk_darwin(v25 - 8);
  v119 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (void *)v1[4];
  if (!v27)
  {
    type metadata accessor for UIMetrics();
    v92 = (unint64_t *)&qword_10037EFF0;
    i = (void (*)(uint64_t))type metadata accessor for UIMetrics;
    goto LABEL_17;
  }
  uint64_t v28 = v27[9];
  uint64_t v29 = v27[10];
  sub_100008F88(v27 + 6, v28);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 16))(v178, v28, v29);
  uint64_t v30 = v1[2];
  if (!v30)
  {
    type metadata accessor for ConnectivityModel();
    v92 = &qword_10037F0F0;
    for (i = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
          ;
          i = (void (*)(uint64_t))type metadata accessor for ConnectionModel)
    {
LABEL_17:
      sub_10000CB8C(v92, i);
      EnvironmentObject.error()();
      __break(1u);
LABEL_18:
      type metadata accessor for ConnectionModel(0);
      v92 = &qword_10037F100;
    }
  }
  switch(*(unsigned char *)(*(void *)(v30 + 48) + 120))
  {
    case 2:
    case 5:
      uint64_t v110 = Image.init(systemName:)();
      static Font.Weight.regular.getter();
      uint64_t v40 = type metadata accessor for Font.Design();
      uint64_t v41 = (uint64_t)v111;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v111, 1, 1, v40);
      uint64_t v42 = static Font.system(size:weight:design:)();
      sub_10000950C(v41, &qword_10037F140);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v44 = v27[9];
      uint64_t v45 = v27[10];
      sub_100008F88(v27 + 6, v44);
      long long v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 96);
      uint64_t v47 = swift_retain();
      uint64_t v48 = v46(v47, v44, v45);
      swift_release();
      uint64_t v49 = swift_getKeyPath();
      *(void *)&long long v165 = v110;
      *((void *)&v165 + 1) = KeyPath;
      *(void *)&long long v166 = v42;
      *((void *)&v166 + 1) = v49;
      *(void *)&long long v167 = v48;
      sub_100004010(&qword_10037F1C8);
      sub_10000C904();
      uint64_t v50 = (uint64_t)v112;
      View.accessibility(hidden:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v51 = &qword_10037F148;
      sub_10000D2A0(v50, v115, &qword_10037F148);
      swift_storeEnumTagMultiPayload();
      sub_10000C82C();
      sub_10000CA44();
      uint64_t v52 = (uint64_t)v117;
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0(v52, (uint64_t)v19, &qword_10037F138);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10037F1A0);
      sub_10000C740();
      sub_10000C768();
      uint64_t v37 = (uint64_t)v119;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v52, &qword_10037F138);
      uint64_t v53 = v50;
      goto LABEL_10;
    case 3:
    case 4:
    case 6:
    case 8:
    case 9:
      sub_10000C5EC((uint64_t)&v165);
      sub_10000D544((uint64_t)&v165, (uint64_t)&v139, &qword_10037F168);
      sub_100004010(&qword_10037F170);
      sub_10000C5F8();
      _ConditionalContent<>.init(storage:)();
      long long v31 = v163;
      *((_OWORD *)v19 + 10) = v162;
      *((_OWORD *)v19 + 11) = v31;
      *((_OWORD *)v19 + 12) = v164[0];
      *(_DWORD *)(v19 + 207) = *(_DWORD *)((char *)v164 + 15);
      long long v32 = v159;
      *((_OWORD *)v19 + 6) = v158;
      *((_OWORD *)v19 + 7) = v32;
      long long v33 = v161;
      *((_OWORD *)v19 + 8) = v160;
      *((_OWORD *)v19 + 9) = v33;
      long long v34 = v155;
      *((_OWORD *)v19 + 2) = v154;
      *((_OWORD *)v19 + 3) = v34;
      long long v35 = v157;
      *((_OWORD *)v19 + 4) = v156;
      *((_OWORD *)v19 + 5) = v35;
      long long v36 = v153;
      *(_OWORD *)uint64_t v19 = v152;
      *((_OWORD *)v19 + 1) = v36;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10037F1A0);
      sub_10000C740();
      sub_10000C768();
      uint64_t v37 = (uint64_t)v119;
      _ConditionalContent<>.init(storage:)();
      goto LABEL_11;
    case 7:
      char v54 = v96;
      ProgressView<>.init<>()();
      long long v55 = v99;
      CircularProgressViewStyle.init()();
      sub_100009B18(&qword_10037F210, &qword_10037F118);
      sub_10000CB8C(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
      uint64_t v56 = v102;
      v57 = v103;
      uint64_t v58 = v98;
      View.progressViewStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v55, v56);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v58);
      uint64_t v60 = v107;
      uint64_t v59 = v108;
      uint64_t v61 = v109;
      (*(void (**)(char *, void, uint64_t))(v108 + 104))(v107, enum case for ControlSize.small(_:), v109);
      uint64_t v62 = swift_getKeyPath();
      uint64_t v63 = (uint64_t)v100;
      uint64_t v64 = (uint64_t *)&v100[*(int *)(v116 + 36)];
      uint64_t v65 = sub_100004010(&qword_10037F228);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))((char *)v64 + *(int *)(v65 + 28), v60, v61);
      *uint64_t v64 = v62;
      uint64_t v67 = v104;
      uint64_t v66 = v105;
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v63, v57, v105);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v66);
      uint64_t v51 = &qword_10037F128;
      uint64_t v68 = v106;
      sub_10000D544(v63, v106, &qword_10037F128);
      sub_10000D2A0(v68, v115, &qword_10037F128);
      swift_storeEnumTagMultiPayload();
      sub_10000C82C();
      sub_10000CA44();
      uint64_t v69 = (uint64_t)v117;
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0(v69, (uint64_t)v19, &qword_10037F138);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10037F1A0);
      sub_10000C740();
      sub_10000C768();
      uint64_t v37 = (uint64_t)v119;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v69, &qword_10037F138);
      uint64_t v53 = v68;
LABEL_10:
      sub_10000950C(v53, v51);
LABEL_11:
      uint64_t v39 = v121;
      goto LABEL_12;
    default:
      if (!*v1) {
        goto LABEL_18;
      }
      swift_retain();
      sub_10020CBFC((uint64_t)v22);
      swift_release();
      int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48))(v22, 1, v23);
      uint64_t v39 = v121;
      uint64_t v37 = (uint64_t)v119;
      if (v38 == 1)
      {
        sub_10000950C((uint64_t)v22, &qword_10037F158);
        sub_10000CBEC((uint64_t)&v165);
        sub_10000D544((uint64_t)&v165, (uint64_t)&v152, &qword_10037F230);
        sub_100004010(&qword_10037F188);
        sub_10000C6A0();
        _ConditionalContent<>.init(storage:)();
      }
      else
      {
        uint64_t v71 = v95;
        sub_10000CF90((uint64_t)v22, v95);
        uint64_t v72 = static Alignment.center.getter();
        uint64_t v74 = v73;
        sub_10000B99C(v178, v71, (uint64_t)v123);
        char v75 = static Edge.Set.all.getter();
        EdgeInsets.init(_all:)();
        char v122 = 0;
        *(void *)&long long v165 = v72;
        *((void *)&v165 + 1) = v74;
        long long v172 = v123[6];
        long long v173 = v123[7];
        long long v174 = v123[8];
        *(void *)&long long v175 = v124;
        long long v168 = v123[2];
        long long v169 = v123[3];
        long long v170 = v123[4];
        long long v171 = v123[5];
        long long v166 = v123[0];
        long long v167 = v123[1];
        BYTE8(v175) = v75;
        *(void *)&long long v176 = v76;
        *((void *)&v176 + 1) = v77;
        *(void *)v177 = v78;
        *(void *)&v177[8] = v79;
        v177[16] = 0;
        sub_10000CFF4((uint64_t)&v165);
        sub_10000D544((uint64_t)&v165, (uint64_t)&v139, &qword_10037F230);
        sub_100004010(&qword_10037F188);
        sub_10000C6A0();
        _ConditionalContent<>.init(storage:)();
        sub_10000CFFC(v71, type metadata accessor for TransmissionProgress);
        long long v135 = v162;
        long long v136 = v163;
        long long v137 = v164[0];
        __int16 v138 = v164[1];
        long long v131 = v158;
        long long v132 = v159;
        long long v133 = v160;
        long long v134 = v161;
        long long v127 = v154;
        long long v128 = v155;
        long long v129 = v156;
        long long v130 = v157;
        long long v125 = v152;
        long long v126 = v153;
      }
      long long v162 = v135;
      long long v163 = v136;
      v164[0] = v137;
      LOWORD(v164[1]) = v138;
      long long v158 = v131;
      long long v159 = v132;
      long long v160 = v133;
      long long v161 = v134;
      long long v154 = v127;
      long long v155 = v128;
      long long v156 = v129;
      long long v157 = v130;
      long long v152 = v125;
      long long v153 = v126;
      sub_10000CBF8((uint64_t)&v152);
      sub_10000D544((uint64_t)&v152, (uint64_t)&v165, &qword_10037F168);
      sub_10000CD44((uint64_t)&v125, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_10000CC00);
      sub_100004010(&qword_10037F170);
      sub_10000C5F8();
      _ConditionalContent<>.init(storage:)();
      long long v175 = v149;
      long long v176 = v150;
      *(_OWORD *)v177 = *(_OWORD *)v151;
      long long v81 = v144;
      long long v171 = v145;
      long long v80 = v145;
      long long v172 = v146;
      long long v82 = v146;
      long long v173 = v147;
      long long v83 = v147;
      long long v174 = v148;
      long long v85 = v140;
      long long v167 = v141;
      long long v84 = v141;
      long long v168 = v142;
      long long v86 = v142;
      long long v169 = v143;
      long long v87 = v143;
      long long v170 = v144;
      long long v165 = v139;
      long long v88 = v139;
      long long v166 = v140;
      long long v89 = v150;
      long long v90 = *(_OWORD *)v151;
      long long v91 = v148;
      *((_OWORD *)v19 + 10) = v149;
      *((_OWORD *)v19 + 11) = v89;
      *((_OWORD *)v19 + 12) = v90;
      *((_OWORD *)v19 + 6) = v80;
      *((_OWORD *)v19 + 7) = v82;
      *((_OWORD *)v19 + 8) = v83;
      *((_OWORD *)v19 + 9) = v91;
      *((_OWORD *)v19 + 2) = v84;
      *((_OWORD *)v19 + 3) = v86;
      *((_OWORD *)v19 + 4) = v87;
      *((_OWORD *)v19 + 5) = v81;
      *(_DWORD *)&v177[15] = *(_DWORD *)&v151[15];
      *(_DWORD *)(v19 + 207) = *(_DWORD *)&v151[15];
      *(_OWORD *)uint64_t v19 = v88;
      *((_OWORD *)v19 + 1) = v85;
      swift_storeEnumTagMultiPayload();
      sub_10000CE5C((uint64_t)&v165, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_10000CC94);
      sub_100004010(&qword_10037F1A0);
      sub_10000C740();
      sub_10000C768();
      _ConditionalContent<>.init(storage:)();
      sub_10000CD44((uint64_t)&v125, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_10000CDC8);
      sub_10000CE5C((uint64_t)&v165, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_10000CEE0);
LABEL_12:
      sub_10000D544(v37, v39, &qword_10037F160);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v178);
  }
}

uint64_t sub_10000B99C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v7 = a1[3];
  uint64_t v6 = a1[4];
  sub_100008F88(a1, v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 24))(v7);
  uint64_t KeyPath = swift_getKeyPath();
  double v10 = (double)*(uint64_t *)(a2 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28)) / 100.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  Angle.animatableData.getter();
  Angle.animatableData.setter();
  static UnitPoint.center.getter();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  sub_100008F88(a1, v16);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 16))(v16);
  uint64_t v18 = swift_getKeyPath();
  *(void *)a3 = v20;
  *(void *)(a3 + 8) = v21;
  *(void *)(a3 + 16) = v22;
  *(void *)(a3 + 24) = v23;
  *(void *)(a3 + 32) = v24;
  *(void *)(a3 + 40) = KeyPath;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = 0;
  *(double *)(a3 + 64) = v10;
  *(void *)(a3 + 72) = v25;
  *(void *)(a3 + 80) = v26;
  *(void *)(a3 + 88) = v27;
  *(void *)(a3 + 96) = v28;
  *(void *)(a3 + 104) = v29;
  *(void *)(a3 + 112) = 0x3FF921FB54442D18;
  *(void *)(a3 + 120) = v12;
  *(void *)(a3 + 128) = v14;
  *(void *)(a3 + 136) = v18;
  *(void *)(a3 + 144) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000BBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10000A904(a1);
}

uint64_t sub_10000BC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_10037F140);
  __chkstk_darwin(v3 - 8);
  uint64_t v77 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_10037F238);
  __chkstk_darwin(v5 - 8);
  uint64_t v68 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for SymbolVariants();
  uint64_t v64 = *(char **)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004010(&qword_10037F240);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  double v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100004010(&qword_10037F248);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_10037F250);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004010(&qword_10037F258);
  __chkstk_darwin(v71);
  uint64_t v74 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004010(&qword_10037F260);
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_10037F268);
  uint64_t v79 = *(void *)(v18 - 8);
  uint64_t v80 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v72 = (uint64_t)&v60 - v21;
  uint64_t v22 = sub_100004010(&qword_10037F270);
  __chkstk_darwin(v22 - 8);
  uint64_t v78 = (uint64_t)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void *)v1[4];
  if (v24)
  {
    uint64_t v26 = v24[9];
    uint64_t v25 = v24[10];
    uint64_t v63 = v24 + 6;
    sub_100008F88(v24 + 6, v26);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 16))(v84, v26, v25);
    uint64_t v28 = *v1;
    uint64_t v27 = v1[1];
    sub_10000D0F0(*v1, v27, v1[2]);
    if (!v29)
    {
      uint64_t v58 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, 1, 1, v80);
      goto LABEL_6;
    }
    uint64_t v60 = v27;
    uint64_t v62 = a1;
    v81[0] = Image.init(systemName:)();
    static SymbolVariants.circle.getter();
    uint64_t v61 = v13;
    View.symbolVariant(_:)();
    uint64_t v30 = (void (*)(char *, uint64_t))*((void *)v64 + 1);
    uint64_t v64 = v15;
    uint64_t v31 = v67;
    v30(v8, v67);
    swift_release();
    static SymbolVariants.fill.getter();
    v81[0] = &type metadata for Image;
    v81[1] = &protocol witness table for Image;
    swift_getOpaqueTypeConformance2();
    uint64_t v32 = v66;
    View.symbolVariant(_:)();
    v30(v8, v31);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v32);
    uint64_t v33 = (uint64_t)v68;
    static SymbolRenderingMode.hierarchical.getter();
    uint64_t v34 = type metadata accessor for SymbolRenderingMode();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v36 = (uint64_t)v64;
    uint64_t v37 = (uint64_t *)&v64[*(int *)(v61 + 36)];
    uint64_t v38 = sub_100004010(&qword_10037F278);
    sub_10000D2A0(v33, (uint64_t)v37 + *(int *)(v38 + 28), &qword_10037F238);
    *uint64_t v37 = KeyPath;
    uint64_t v39 = v69;
    uint64_t v40 = v70;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v36, v12, v70);
    sub_10000950C(v33, &qword_10037F238);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
    static Font.Weight.medium.getter();
    uint64_t v41 = type metadata accessor for Font.Design();
    uint64_t v42 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v77, 1, 1, v41);
    uint64_t v43 = static Font.system(size:weight:design:)();
    sub_10000950C(v42, &qword_10037F140);
    uint64_t v44 = swift_getKeyPath();
    uint64_t v45 = v74;
    sub_10000D2A0(v36, v74, &qword_10037F250);
    long long v46 = (uint64_t *)(v45 + *(int *)(v71 + 36));
    uint64_t *v46 = v44;
    v46[1] = v43;
    sub_10000950C(v36, &qword_10037F250);
    sub_1000090FC((uint64_t)v63, (uint64_t)v81);
    uint64_t v47 = v82;
    uint64_t v48 = v83;
    sub_100008F88(v81, v82);
    if (v28)
    {
      uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 96);
      uint64_t v50 = swift_retain();
      uint64_t v51 = v49(v50, v47, v48);
      swift_release();
      uint64_t v52 = swift_getKeyPath();
      uint64_t v53 = v75;
      sub_10000D2A0(v45, v75, &qword_10037F258);
      char v54 = (uint64_t *)(v53 + *(int *)(v76 + 36));
      *char v54 = v52;
      v54[1] = v51;
      sub_10000950C(v45, &qword_10037F258);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v81);
      sub_10000D304();
      uint64_t v55 = (uint64_t)v73;
      View.accessibility(hidden:)();
      sub_10000950C(v53, &qword_10037F260);
      uint64_t v56 = v72;
      sub_10000D544(v55, v72, &qword_10037F268);
      uint64_t v57 = v56;
      uint64_t v58 = v78;
      sub_10000D544(v57, v78, &qword_10037F268);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v58, 0, 1, v80);
      a1 = v62;
LABEL_6:
      sub_10000D544(v58, a1, &qword_10037F270);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v84);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10000CB8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for ConnectivityModel();
  sub_10000CB8C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10000C594@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BC00(a1);
}

uint64_t sub_10000C5D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000C5EC(uint64_t result)
{
  *(unsigned char *)(result + 210) = 1;
  return result;
}

uint64_t sub_10000C5F8()
{
  return sub_10000C620(&qword_10037F178, &qword_10037F170, (void (*)(void))sub_10000C6A0);
}

uint64_t sub_10000C620(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C6A0()
{
  unint64_t result = qword_10037F180;
  if (!qword_10037F180)
  {
    sub_1000094C4(&qword_10037F188);
    sub_100009B18(&qword_10037F190, &qword_10037F198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F180);
  }
  return result;
}

uint64_t sub_10000C740()
{
  return sub_10000C620(&qword_10037F1A8, &qword_10037F1A0, (void (*)(void))sub_10000C5F8);
}

uint64_t sub_10000C768()
{
  return sub_10000C7A4(&qword_10037F1B0, &qword_10037F138, (void (*)(void))sub_10000C82C, (void (*)(void))sub_10000CA44);
}

uint64_t sub_10000C7A4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000C82C()
{
  return sub_10000C854(&qword_10037F1B8, &qword_10037F148, (void (*)(void))sub_10000C904);
}

uint64_t sub_10000C854(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_10000CB8C(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C904()
{
  unint64_t result = qword_10037F1C0;
  if (!qword_10037F1C0)
  {
    sub_1000094C4(&qword_10037F1C8);
    sub_10000C9A4();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F1C0);
  }
  return result;
}

unint64_t sub_10000C9A4()
{
  unint64_t result = qword_10037F1D0;
  if (!qword_10037F1D0)
  {
    sub_1000094C4(&qword_10037F1D8);
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F1D0);
  }
  return result;
}

unint64_t sub_10000CA44()
{
  unint64_t result = qword_10037F208;
  if (!qword_10037F208)
  {
    sub_1000094C4(&qword_10037F128);
    sub_1000094C4(&qword_10037F118);
    type metadata accessor for CircularProgressViewStyle();
    sub_100009B18(&qword_10037F210, &qword_10037F118);
    sub_10000CB8C(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F208);
  }
  return result;
}

uint64_t sub_10000CB8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CBEC(uint64_t result)
{
  *(unsigned char *)(result + 209) = 1;
  return result;
}

uint64_t sub_10000CBF8(uint64_t result)
{
  *(unsigned char *)(result + 210) = 0;
  return result;
}

uint64_t sub_10000CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28)
{
  if ((a28 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10000CC94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29)
{
  if ((a29 & 1) == 0)
  {
    char v30 = a28 & 1;
    return sub_10000CC00(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             v30);
  }
  return result;
}

uint64_t sub_10000CD44(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(_WORD *)(a1 + 208));
  return a1;
}

uint64_t sub_10000CDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28)
{
  if ((a28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10000CE5C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))
{
  BYTE2(v4) = *(unsigned char *)(a1 + 210);
  LOWORD(v4) = *(_WORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4);
  return a1;
}

uint64_t sub_10000CEE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29)
{
  if ((a29 & 1) == 0)
  {
    char v30 = a28 & 1;
    return sub_10000CDC8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             v30);
  }
  return result;
}

uint64_t sub_10000CF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000CFF4(uint64_t result)
{
  *(unsigned char *)(result + 209) = 0;
  return result;
}

uint64_t sub_10000CFFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000D05C(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10037F238);
  __chkstk_darwin(v2 - 8);
  sub_10000D2A0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10037F238);
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_10000D0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    if ((sub_100078E0C(0, *(void *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1) == 0)
    {
      uint64_t v6 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
      if (sub_100078E0C(3, *(void *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions))) {
        return 0x6F642E776F727261;
      }
      uint64_t v5 = 0x2E6E6F7276656863;
      if ((sub_100078E0C(1, *(void *)(a3 + v6)) & 1) == 0 && (sub_100078E0C(2, *(void *)(a3 + v6)) & 1) == 0) {
        return 0;
      }
      return v5;
    }
    if (a1) {
      return *(void *)&aCheckmararrowU[8 * *(char *)(*(void *)(a1 + 48) + 120)];
    }
    type metadata accessor for ConnectivityModel();
    uint64_t v8 = &qword_10037F0F0;
    uint64_t v9 = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
  }
  else
  {
    type metadata accessor for GuidanceModel(0);
    uint64_t v8 = &qword_10037F0F8;
    uint64_t v9 = (void (*)(uint64_t))type metadata accessor for GuidanceModel;
  }
  sub_10000CB8C(v8, v9);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10000D278()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_10000D2A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004010(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10000D304()
{
  unint64_t result = qword_10037F280;
  if (!qword_10037F280)
  {
    sub_1000094C4(&qword_10037F260);
    sub_10000D3A4();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F280);
  }
  return result;
}

unint64_t sub_10000D3A4()
{
  unint64_t result = qword_10037F288;
  if (!qword_10037F288)
  {
    sub_1000094C4(&qword_10037F258);
    sub_10000D444();
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F288);
  }
  return result;
}

unint64_t sub_10000D444()
{
  unint64_t result = qword_10037F290;
  if (!qword_10037F290)
  {
    sub_1000094C4(&qword_10037F250);
    sub_1000094C4(&qword_10037F240);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_10037F298, &qword_10037F278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F290);
  }
  return result;
}

uint64_t sub_10000D544(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004010(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000D5A8()
{
  return sub_10000C7A4(&qword_10037F2A0, &qword_10037F160, (void (*)(void))sub_10000C740, (void (*)(void))sub_10000C768);
}

unint64_t sub_10000D5FC()
{
  unint64_t result = qword_10037F2A8;
  if (!qword_10037F2A8)
  {
    sub_1000094C4(&qword_10037F270);
    sub_10000C854(&qword_10037F2B0, &qword_10037F268, (void (*)(void))sub_10000D304);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F2A8);
  }
  return result;
}

uint64_t sub_10000D6A0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelBase()
{
  return self;
}

unint64_t sub_10000D708()
{
  unint64_t result = qword_10038EC70;
  if (!qword_10038EC70)
  {
    sub_1000094C4(&qword_100393AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038EC70);
  }
  return result;
}

uint64_t sub_10000D764@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

unint64_t sub_10000D770(uint64_t a1)
{
  unint64_t result = sub_10000D798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10000D798()
{
  unint64_t result = qword_10037F360;
  if (!qword_10037F360)
  {
    type metadata accessor for ModelBase();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F360);
  }
  return result;
}

BOOL sub_10000D7EC(uint64_t a1, uint64_t a2)
{
  return sub_10000FC40(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16));
}

uint64_t sub_10000D808()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_10037F490);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  *(void *)(v0 + 24) = 0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId;
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    type metadata accessor for EEDSource();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "init: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10000DA44()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for EEDSource();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  sub_10000950C(v1 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId, &qword_10037F4A0);
  return v1;
}

uint64_t sub_10000DC38()
{
  sub_10000DA44();

  return swift_deallocClassInstance();
}

uint64_t sub_10000DC90()
{
  return type metadata accessor for EEDSource();
}

uint64_t type metadata accessor for EEDSource()
{
  uint64_t result = qword_10037F398;
  if (!qword_10037F398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000DCE4()
{
  sub_10000F194();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

BOOL sub_10000DD8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDB0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99E8);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    double v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "start", v10, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for EEDAgent();
  swift_allocObject();
  *(void *)(v1 + 24) = sub_1000E89C8();
  swift_release();
  return *(void *)(v1 + 24) != 0;
}

uint64_t sub_10000DF8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_10037F4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    if (qword_10037DDB0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A99E8);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "stop", v13, 2u);
    swift_slowDealloc();
  }

  *(void *)(v1 + 24) = 0;
  swift_release();
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId;
  swift_beginAccess();
  sub_10000FE64((uint64_t)v4, v15);
  return swift_endAccess();
}

void sub_10000E220()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004010(&qword_10037F4A0);
  uint64_t v5 = __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v31 - v9;
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_once();
LABEL_6:
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000FD84(v21, (uint64_t)qword_1003A99E8);
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      sub_10000FDFC(v13, (uint64_t)v10);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v34 = sub_1001B3178(v25, v26, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "updateAsync - update is already in progress for ID %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId;
  swift_beginAccess();
  sub_10000FDFC(v13, (uint64_t)v12);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2);
  sub_10000950C((uint64_t)v12, &qword_10037F4A0);
  if (v18 != 1)
  {
    if (qword_10037DDB0 == -1) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    uint64_t v19 = (uint64_t)v33;
    UUID.init()();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v10, v19, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    sub_10000FF10((uint64_t)v10, (uint64_t)v7);
    swift_beginAccess();
    sub_10000FE64((uint64_t)v7, v13);
    swift_endAccess();
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000E9050(v19, (uint64_t)sub_10000FFB0, v20);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    swift_release();
  }
  else
  {
    if (qword_10037DDB0 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000FD84(v27, (uint64_t)qword_1003A99E8);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      char v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "updateAsync - no agent", v30, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10000E808(uint8_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10000E894(a1, a2, a3, a4);
    return swift_release();
  }
  return result;
}

void sub_10000E894(uint8_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  uint64_t v68 = a2;
  uint64_t v75 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v66 = (char *)&v62 - v11;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v62 - v12;
  uint64_t v13 = sub_100004010(&qword_10037F498);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10037F4A0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v67 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v71 = (uint64_t)&v62 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for DispatchPredicate();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (uint64_t *)((char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *unint64_t v26 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  char v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v65 = v5;
  uint64_t v28 = v5 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId;
  swift_beginAccess();
  uint64_t v74 = (void (*)(char *, uint8_t *, uint64_t))v7[2];
  v74(v22, v75, v6);
  uint64_t v63 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7];
  v63(v22, 0, 1, v6);
  uint64_t v29 = (uint64_t)&v15[*(int *)(v13 + 48)];
  uint64_t v64 = v28;
  sub_10000FDFC(v28, (uint64_t)v15);
  sub_10000FDFC((uint64_t)v22, v29);
  char v30 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  int v31 = v30(v15, 1, v6);
  uint64_t v73 = v7;
  if (v31 != 1)
  {
    uint64_t v32 = v7;
    uint64_t v33 = v71;
    sub_10000FDFC((uint64_t)v15, v71);
    if (v30((char *)v29, 1, v6) != 1)
    {
      uint64_t v34 = (void (*)(char *, uint64_t, uint64_t))v32[4];
      long long v35 = v32;
      uint64_t v36 = v33;
      uint64_t v37 = v62;
      v34(v62, v29, v6);
      sub_10000FECC(&qword_10037F4B0);
      char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v39 = (void (*)(char *, uint64_t))v35[1];
      v39(v37, v6);
      sub_10000950C((uint64_t)v22, &qword_10037F4A0);
      v39((char *)v36, v6);
      sub_10000950C((uint64_t)v15, &qword_10037F4A0);
      if (v38) {
        goto LABEL_9;
      }
LABEL_13:
      uint64_t v23 = (uint64_t)v75;
      if (qword_10037DDB0 == -1)
      {
LABEL_14:
        uint64_t v51 = type metadata accessor for Logger();
        sub_10000FD84(v51, (uint64_t)qword_1003A99E8);
        uint64_t v52 = v72;
        v74(v72, (uint8_t *)v23, v6);
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        BOOL v55 = os_log_type_enabled(v53, v54);
        uint64_t v56 = v73;
        if (v55)
        {
          uint64_t v57 = (uint8_t *)swift_slowAlloc();
          v76[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v57 = 136315138;
          sub_10000FECC(&qword_10037F4A8);
          uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v77 = sub_1001B3178(v58, v59, v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v56[1])(v52, v6);
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "onStateFetched - stale fetch received with ID %s, ignoring", v57, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          ((void (*)(char *, uint64_t))v73[1])(v52, v6);
        }

        return;
      }
LABEL_21:
      swift_once();
      goto LABEL_14;
    }
    sub_10000950C((uint64_t)v22, &qword_10037F4A0);
    ((void (*)(uint64_t, uint64_t))v32[1])(v33, v6);
LABEL_7:
    sub_10000950C((uint64_t)v15, &qword_10037F498);
    goto LABEL_13;
  }
  sub_10000950C((uint64_t)v22, &qword_10037F4A0);
  if (v30((char *)v29, 1, v6) != 1) {
    goto LABEL_7;
  }
  sub_10000950C((uint64_t)v15, &qword_10037F4A0);
LABEL_9:
  uint64_t v40 = v75;
  if (qword_10037DDB0 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_10000FD84(v41, (uint64_t)qword_1003A99E8);
  uint64_t v42 = v66;
  v74(v66, v40, v6);
  uint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  BOOL v45 = os_log_type_enabled(v43, v44);
  long long v46 = v73;
  if (v45)
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136315138;
    uint64_t v75 = v47 + 4;
    v76[0] = v48;
    sub_10000FECC(&qword_10037F4A8);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_1001B3178(v49, v50, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v46[1])(v42, v6);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "onStateFetched - fetch with ID %s completed", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    ((void (*)(char *, uint64_t))v73[1])(v42, v6);
  }

  uint64_t v60 = (uint64_t)v67;
  v63(v67, 1, 1, v6);
  uint64_t v61 = v64;
  swift_beginAccess();
  sub_10000FE64(v60, v61);
  swift_endAccess();
  v76[0] = v68;
  v76[1] = v69;
  v76[2] = v70;
  PassthroughSubject.send(_:)();
}

void sub_10000F194()
{
  if (!qword_10037F3A8)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10037F3A8);
    }
  }
}

uint64_t sub_10000F1F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t destroy for EEDState(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  if (v1 >> 60 != 15) {
    sub_10000F294(*a1, v1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000F294(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t _s8SOSBuddy8EEDStateVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_10000F1F0(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for EEDState(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *a2;
      sub_10000F1F0(*a2, a2[1]);
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_10000F294(v7, v8);
      goto LABEL_8;
    }
    sub_10000F414((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *a2;
  sub_10000F1F0(*a2, a2[1]);
  *a1 = v5;
  a1[1] = v4;
LABEL_8:
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000F414(uint64_t a1)
{
  return a1;
}

uint64_t *assignWithTake for EEDState(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_10000F294(v6, v4);
      goto LABEL_6;
    }
    sub_10000F414((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EEDState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EEDState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EEDState()
{
  return &type metadata for EEDState;
}

uint64_t sub_10000F5A4@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_10000F1F0(a2, a3);
      uint64_t v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10000F808);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_10000F294(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10000F818(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_10000F5A4((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10000F8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_10000F5A4(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10000F9A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10000FC10);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_10000F1F0(a3, a4);
                  sub_10000F1F0(a1, a2);
                  char v17 = sub_10000F8F0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_10000F294(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_10000F1F0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10000F8F0(v21, v22, v20, a3, a4);
                  sub_10000F294(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_10000F1F0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_10000F1F0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10000F818(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_10000F294(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL sub_10000FC40(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  if (a2 >> 60 == 15)
  {
    if (a5 >> 60 == 15) {
      goto LABEL_8;
    }
LABEL_5:
    sub_10000FD5C(a1, a2);
    sub_10000FD5C(a4, a5);
    sub_10000FD70(a1, a2);
    sub_10000FD70(a4, a5);
    return 0;
  }
  if (a5 >> 60 == 15) {
    goto LABEL_5;
  }
  sub_10000FD5C(a1, a2);
  sub_10000FD5C(a4, a5);
  char v13 = sub_10000F9A8(a1, a2, a4, a5);
  sub_10000FD70(a4, a5);
  sub_10000FD70(a1, a2);
  if ((v13 & 1) == 0) {
    return 0;
  }
LABEL_8:
  if (a3) {
    return a6 && (sub_100231EF4(a3, a6) & 1) != 0;
  }
  return !a6;
}

uint64_t sub_10000FD5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000F1F0(a1, a2);
  }
  return a1;
}

uint64_t sub_10000FD70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000F294(a1, a2);
  }
  return a1;
}

uint64_t sub_10000FD84(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10000FDBC()
{
  unint64_t result = qword_100387440;
  if (!qword_100387440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100387440);
  }
  return result;
}

uint64_t sub_10000FDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037F4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000FE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037F4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000FECC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000FF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037F4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000FF78()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000FFB0(uint8_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000E808(a1, a2, a3, a4);
}

unsigned char *initializeBufferWithCopyOfBuffer for StewieAppId(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SettingsAgent.SettingsDestination(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UIFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100010120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100010148(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100010150(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIFeatureFlags()
{
  return &type metadata for UIFeatureFlags;
}

unint64_t sub_10001016C()
{
  unint64_t result = qword_10037F4B8;
  if (!qword_10037F4B8)
  {
    sub_1000094C4(&qword_10037F4C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F4B8);
  }
  return result;
}

BOOL sub_1000101C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000101DC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100010224()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100010250()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

const char *sub_100010294()
{
  return "CoreTelephony";
}

const char *sub_1000102A8()
{
  Swift::UInt v1 = "IML";
  if (*v0 != 1) {
    Swift::UInt v1 = "EmperorPenguin";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "Bifrost";
  }
}

void sub_1000102F0(void *a1@<X8>)
{
  *a1 = &off_100349BD0;
}

unint64_t sub_100010304()
{
  unint64_t result = qword_10037F4C8;
  if (!qword_10037F4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F4C8);
  }
  return result;
}

uint64_t sub_10001035C()
{
  return swift_initClassMetadata2();
}

void sub_1000103A4()
{
}

uint64_t sub_1000103FC(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_100010414()
{
  Swift::UInt v1 = v0;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A99A0);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "BannerView::layoutSubviews", v5, 2u);
    swift_slowDealloc();
  }

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for BannerView();
  [super layoutSubviews];
  id v6 = [*(id *)&v1[qword_10037F4D0] view];
  if (v6)
  {
    BOOL v7 = v6;
    [v1 bounds];
    [v7 setFrame:];
  }
}

void sub_1000105A4(void *a1)
{
  id v1 = a1;
  sub_100010414();
}

void sub_1000105EC()
{
}

id sub_100010630()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerView();
  return [super dealloc];
}

void sub_1000106A4(uint64_t a1)
{
}

uint64_t type metadata accessor for BannerView()
{
  return sub_100006BAC();
}

void sub_1000106CC()
{
}

void sub_100010728()
{
}

id sub_100010758(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = (uint8_t *)v5;
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  *(_DWORD *)&v2[OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_statusChangeToken] = -1;
  uint64_t v9 = &v2[OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_stateChangeHandler];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  uint64_t v10 = self;
  BOOL v11 = v2;
  uint64_t v37 = a2;
  swift_retain();
  id v12 = [v10 mainBundle];
  id v13 = [v12 bundleIdentifier];

  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0xD000000000000012;
    uint64_t v16 = 0x80000001002C5A40;
  }
  sub_10000FDBC();
  v40[0] = v14;
  v40[1] = v16;
  swift_bridgeObjectRetain();
  v17._object = (void *)0x80000001002C5A60;
  v17._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v40[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_100011C28((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint8_t *))(v35 + 104))(v34, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v36);
  *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_queue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  uint64_t v18 = (objc_class *)type metadata accessor for LockScreenAgent();
  v39.receiver = v11;
  v39.super_class = v18;
  [super init];
  uint64_t v20 = qword_10037DD80;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9958);
  id v23 = v21;
  char v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    __int16 v26 = (uint8_t *)swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    *(_DWORD *)__int16 v26 = 136446210;
    uint64_t v36 = v26 + 4;
    id v27 = v23;
    id v28 = [v27 description];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    uint64_t v38 = sub_1001B3178(v29, v31, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%{public}s] init", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release();
  }
  return v23;
}

id sub_100010C60()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  BOOL v11 = (objc_class *)type metadata accessor for LockScreenAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

BOOL sub_100010ECC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (void *)((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  uint64_t *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9A90);
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    BOOL v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "LockScreenAgent start", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = ObjectType;
  uint64_t v13 = *(NSObject **)&v1[OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_queue];
  aBlock[4] = (uint64_t)sub_100011670;
  aBlock[5] = v12;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100011394;
  aBlock[3] = (uint64_t)&unk_10034DB28;
  objc_super v14 = _Block_copy(aBlock);
  uint64_t v15 = v1;
  swift_retain();
  swift_release();
  uint64_t v16 = (int *)&v15[OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_statusChangeToken];
  swift_beginAccess();
  uint32_t v17 = notify_register_dispatch("com.apple.springboard.lockstate", v16, v13, v14);
  swift_endAccess();
  _Block_release(v14);
  if (v17)
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446210;
      v22[1] = sub_1001B3178(0xD00000000000001FLL, 0x80000001002C5A80, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to subscribe to %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    *uint64_t v16 = -1;
  }
  else
  {
    sub_100011690(*v16);
    swift_release();
  }
  return v17 == 0;
}

uint64_t sub_1000112E0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void (**)(BOOL))(result + OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_stateChangeHandler);
    swift_retain();

    swift_beginAccess();
    v5(*(void *)(a2 + 16) != 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100011394(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1000113E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "LockScreenAgent stop", v10, 2u);
    swift_slowDealloc();
  }

  BOOL v11 = (int *)(v1 + OBJC_IVAR____TtC8SOSBuddy15LockScreenAgent_statusChangeToken);
  swift_beginAccess();
  uint64_t result = notify_cancel(*v11);
  int *v11 = -1;
  return result;
}

uint64_t type metadata accessor for LockScreenAgent()
{
  return self;
}

uint64_t sub_100011638()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100011670(int a1)
{
}

uint64_t sub_100011678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100011688()
{
  return swift_release();
}

void sub_100011690(int a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v25 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  char v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    int v22 = a1;
    uint64_t v10 = swift_slowAlloc();
    id v23 = v6;
    BOOL v11 = (uint8_t *)v10;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)BOOL v11 = 136446210;
    uint64_t v27 = sub_1001B3178(0xD00000000000001FLL, 0x80000001002C5A80, aBlock);
    a1 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "LockScreenAgent %{public}s received", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v6 = v23;
    swift_slowDealloc();
  }

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  if (notify_get_state(a1, (uint64_t *)(v12 + 16)))
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to retrieve lock state", v15, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    sub_10000FDBC();
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v12;
    aBlock[4] = (uint64_t)sub_100011C20;
    aBlock[5] = v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100207A1C;
    aBlock[3] = (uint64_t)&unk_10034DBC8;
    os_log_type_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v20 = v25;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v20, v2);
    (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v6, v26);
    swift_release();
  }
}

uint64_t sub_100011B98()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100011BA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100011BE0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100011C20()
{
  return sub_1000112E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100011C28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100011C70(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static ConnectionAssistantDisplayState.Metrics.RenderingStyle.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ConnectionAssistantDisplayState.Metrics.RenderingStyle.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ConnectionAssistantDisplayState.Metrics.RenderingStyle.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_100011D48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double ConnectionAssistantRendererProjection.Ellipse.center.getter()
{
  return *(double *)v0;
}

uint64_t ConnectionAssistantDisplayState.Metrics.CoordinateOffset.inactiveOffsetRotation.getter()
{
  return *(void *)(v0 + 8);
}

double ConnectionAssistantRendererProjection.Ellipse.radii.getter()
{
  return *(double *)(v0 + 24);
}

double ConnectionAssistantDisplayState.Metrics.CoordinateOffset.connectingOutOfCone.getter()
{
  return *(double *)(v0 + 32);
}

double ConnectionAssistantDisplayState.Metrics.CoordinateOffset.complete.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t ConnectionAssistantDisplayState.Metrics.CoordinateOffset.completeOffsetRotation.getter()
{
  return *(void *)(v0 + 48);
}

double sub_100011D98()
{
  static ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero = 0;
  qword_1003A96B8 = 0;
  byte_1003A96C0 = 1;
  double result = 0.0;
  unk_1003A96C8 = 0u;
  *(_OWORD *)&qword_1003A96D8 = 0u;
  byte_1003A96E8 = 1;
  return result;
}

uint64_t *ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero.unsafeMutableAddressor()
{
  if (qword_10037DC60 != -1) {
    swift_once();
  }
  return &static ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero;
}

double static ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_10037DC60 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1003A96B8;
  char v3 = byte_1003A96C0;
  uint64_t v4 = qword_1003A96D8;
  uint64_t v5 = qword_1003A96E0;
  char v6 = byte_1003A96E8;
  *(void *)a1 = static ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  double result = dbl_1003A96C8[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_1003A96C8;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  return result;
}

BOOL sub_100011EA0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV16CoordinateOffsetV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v5, (uint64_t)v7);
}

double ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value.value(top:earthCenter:earthRadius:satelliteDimension:)(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  if (!a2)
  {
    a3 = *(double *)&a1 + a3;
    double v6 = a6 * 0.5;
    return a4 - (v6 + a3);
  }
  if (a2 == 1)
  {
    double v6 = (a4 - a5 - a3) * *(double *)&a1;
    return a4 - (v6 + a3);
  }
  return *(double *)&a1 * a5;
}

BOOL static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    BOOL v4 = *(double *)&a1 == *(double *)&a3;
    if (a4 != 1) {
      BOOL v4 = 0;
    }
    BOOL v5 = a4 == 2 && *(double *)&a1 == *(double *)&a3;
    if (a2 == 1) {
      return v4;
    }
    else {
      return v5;
    }
  }
  else
  {
    return !a4 && *(double *)&a1 == *(double *)&a3;
  }
}

uint64_t sub_100011FB0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v4 == 1 && v2 == v3) {
        return 1;
      }
    }
    else if (v4 == 2 && v2 == v3)
    {
      return 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 8) && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t ConnectionAssistantDisplayState.Metrics.ConnectionRadius.connecting.getter()
{
  return *(void *)v0;
}

uint64_t ConnectionAssistantDisplayState.Metrics.ConnectionRadius.connectingOutOfCone.getter()
{
  return *(void *)(v0 + 16);
}

void sub_100012048()
{
  static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero = 0;
  byte_1003A96F8 = 0;
  qword_1003A9700 = 0;
  byte_1003A9708 = 0;
  qword_1003A9710 = 0;
}

uint64_t *ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero.unsafeMutableAddressor()
{
  if (qword_10037DC68 != -1) {
    swift_once();
  }
  return &static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero;
}

double static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_10037DC68 != -1) {
    swift_once();
  }
  char v2 = byte_1003A96F8;
  uint64_t v3 = qword_1003A9700;
  char v4 = byte_1003A9708;
  double result = *(double *)&qword_1003A9710;
  *(void *)a1 = static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(double *)(a1 + 32) = result;
  return result;
}

BOOL sub_100012138(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV0B6RadiusV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t ConnectionAssistantDisplayState.Metrics.renderingStyle.getter()
{
  return *v0;
}

__n128 ConnectionAssistantDisplayState.Metrics.coordinateOffset.getter@<Q0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unsigned __int8 v3 = v1[1].n128_u8[8];
  unint64_t v4 = v1[3].n128_u64[0];
  unint64_t v5 = v1[3].n128_u64[1];
  unsigned __int8 v6 = v1[4].n128_u8[0];
  *(void *)a1 = v1->n128_u64[1];
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  __n128 result = v1[2];
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  return result;
}

double ConnectionAssistantDisplayState.Metrics.connectionRadius.getter@<D0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  char v4 = *(unsigned char *)(v1 + 96);
  double result = *(double *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(double *)(a1 + 32) = result;
  return result;
}

double ConnectionAssistantDisplayState.Metrics.wedgeAngle.getter()
{
  return *(double *)(v0 + 112);
}

double sub_1000121FC()
{
  if (qword_10037DC60 != -1) {
    swift_once();
  }
  uint64_t v0 = static ConnectionAssistantDisplayState.Metrics.CoordinateOffset.zero;
  uint64_t v1 = qword_1003A96B8;
  char v2 = byte_1003A96C0;
  long long v3 = *(_OWORD *)dbl_1003A96C8;
  uint64_t v4 = qword_1003A96D8;
  uint64_t v5 = qword_1003A96E0;
  char v6 = byte_1003A96E8;
  if (qword_10037DC68 != -1)
  {
    long long v8 = *(_OWORD *)dbl_1003A96C8;
    swift_once();
    long long v3 = v8;
  }
  double result = *(double *)&qword_1003A9710;
  static ConnectionAssistantDisplayState.Metrics.zero = 0;
  qword_1003A9720 = v0;
  qword_1003A9728 = v1;
  byte_1003A9730 = v2;
  xmmword_1003A9738 = v3;
  qword_1003A9748 = v4;
  qword_1003A9750 = v5;
  byte_1003A9758 = v6;
  qword_1003A9760 = static ConnectionAssistantDisplayState.Metrics.ConnectionRadius.zero;
  byte_1003A9768 = byte_1003A96F8;
  qword_1003A9770 = qword_1003A9700;
  byte_1003A9778 = byte_1003A9708;
  qword_1003A9780 = qword_1003A9710;
  qword_1003A9788 = 0;
  return result;
}

char *ConnectionAssistantDisplayState.Metrics.zero.unsafeMutableAddressor()
{
  if (qword_10037DC70 != -1) {
    swift_once();
  }
  return &static ConnectionAssistantDisplayState.Metrics.zero;
}

double static ConnectionAssistantDisplayState.Metrics.zero.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_10037DC70 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1003A9720;
  uint64_t v3 = qword_1003A9728;
  char v4 = byte_1003A9730;
  uint64_t v5 = qword_1003A9748;
  uint64_t v6 = qword_1003A9750;
  char v7 = byte_1003A9758;
  uint64_t v8 = qword_1003A9760;
  char v9 = byte_1003A9768;
  uint64_t v10 = qword_1003A9770;
  char v11 = byte_1003A9778;
  *(unsigned char *)a1 = static ConnectionAssistantDisplayState.Metrics.zero;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_1003A9738;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  double result = *(double *)&qword_1003A9780;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)&qword_1003A9780;
  return result;
}

double sub_100012424()
{
  LOBYTE(static ConnectionAssistantDisplayState.Metrics.fullScreen) = 0;
  *((void *)&static ConnectionAssistantDisplayState.Metrics.fullScreen + 1) = 0xC046800000000000;
  qword_1003A97A0 = 0xC04C000000000000;
  byte_1003A97A8 = 0;
  xmmword_1003A97B0 = xmmword_1002B2840;
  qword_1003A97C0 = 0xC04C000000000000;
  qword_1003A97C8 = 0xC050000000000000;
  LOBYTE(xmmword_1003A97D0) = 0;
  *((void *)&xmmword_1003A97D0 + 1) = 0x3FE3333333333333;
  byte_1003A97E0 = 1;
  qword_1003A97E8 = 0x3FE4CCCCCCCCCCCDLL;
  LOBYTE(xmmword_1003A97F0) = 1;
  double result = 26.0;
  *(long long *)((char *)&xmmword_1003A97F0 + 8) = xmmword_1002B2850;
  return result;
}

long long *ConnectionAssistantDisplayState.Metrics.fullScreen.unsafeMutableAddressor()
{
  if (qword_10037DC78 != -1) {
    swift_once();
  }
  return &static ConnectionAssistantDisplayState.Metrics.fullScreen;
}

double static ConnectionAssistantDisplayState.Metrics.fullScreen.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_10037DC78 != -1) {
    swift_once();
  }
  uint64_t v2 = *((void *)&static ConnectionAssistantDisplayState.Metrics.fullScreen + 1);
  uint64_t v3 = qword_1003A97A0;
  char v4 = byte_1003A97A8;
  uint64_t v5 = qword_1003A97C0;
  uint64_t v6 = qword_1003A97C8;
  char v7 = xmmword_1003A97D0;
  uint64_t v8 = *((void *)&xmmword_1003A97D0 + 1);
  char v9 = byte_1003A97E0;
  uint64_t v10 = qword_1003A97E8;
  char v11 = xmmword_1003A97F0;
  *(unsigned char *)a1 = static ConnectionAssistantDisplayState.Metrics.fullScreen;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = xmmword_1003A97B0;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  double result = *((double *)&xmmword_1003A97F0 + 1);
  *(_OWORD *)(a1 + 104) = *(long long *)((char *)&xmmword_1003A97F0 + 8);
  return result;
}

void *ConnectionAssistantDisplayState.Metrics.liveActivity.unsafeMutableAddressor()
{
  return &static ConnectionAssistantDisplayState.Metrics.liveActivity;
}

double static ConnectionAssistantDisplayState.Metrics.liveActivity.getter@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0xC04E000000000000;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(int64x2_t *)(a1 + 32) = vdupq_n_s64(0xC053000000000000);
  *(void *)(a1 + 48) = 0xC053000000000000;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0xC010000000000000;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xC010000000000000;
  *(unsigned char *)(a1 + 96) = 0;
  double result = 20.0;
  *(_OWORD *)(a1 + 104) = xmmword_1002B2860;
  return result;
}

BOOL sub_1000125FC(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV23__derived_struct_equalsySbAE_AEtFZ_0((unsigned __int8 *)v12, (unsigned __int8 *)v14);
}

double ConnectionAssistantDisplayState.EarthDiameter.Value.resolved(width:)(uint64_t a1, char a2, double a3)
{
  if (a2) {
    a3 = 1.0;
  }
  return a3 * *(double *)&a1;
}

BOOL static ConnectionAssistantDisplayState.EarthDiameter.Value.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v4 = *(double *)&a1 == *(double *)&a3;
  if ((a4 & 1) == 0) {
    BOOL v4 = 0;
  }
  BOOL v5 = *(double *)&a1 == *(double *)&a3;
  if (a4) {
    BOOL v5 = 0;
  }
  if (a2) {
    return v4;
  }
  else {
    return v5;
  }
}

uint64_t ConnectionAssistantDisplayState.EarthDiameter.inactiveOffsetRotation.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ConnectionAssistantDisplayState.EarthDiameter.connecting.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ConnectionAssistantDisplayState.EarthDiameter.complete.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t ConnectionAssistantDisplayState.EarthDiameter.completeOffsetRotation.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_10001270C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[5];
  v10[4] = a1[4];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 89);
  long long v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  long long v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  long long v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  long long v6 = a2[2];
  long long v7 = a2[3];
  *(_OWORD *)&v13[9] = *(_OWORD *)((char *)a2 + 89);
  long long v8 = a2[5];
  v12[4] = a2[4];
  *(_OWORD *)uint64_t v13 = v8;
  v12[2] = v6;
  v12[3] = v7;
  return _s8SOSBuddy31ConnectionAssistantDisplayStateC13EarthDiameterV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v12) & 1;
}

uint64_t sub_100012778(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) != 0 && v2 == v3) {
      return 1;
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

BOOL sub_1000127CC(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_1000127FC(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  BOOL v2 = a1[1] == a2[1];
  if (a1[2] != a2[2]) {
    BOOL v2 = 0;
  }
  return a1[3] == a2[3] && v2;
}

BOOL sub_100012840(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if ((*(unsigned char *)(a1 + 32) & 1) == 0) {
    return (*(unsigned char *)(a2 + 32) & 1) == 0 && v2 == v3;
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
    return 0;
  }
  BOOL v4 = v2 == v3;
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    BOOL v4 = 0;
  }
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
    BOOL v4 = 0;
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && v4;
}

BOOL sub_1000128B8(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
    BOOL v4 = v2 == v3 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
    BOOL v5 = v4 && *(double *)(a1 + 16) == *(double *)(a2 + 16);
    return v5 && *(double *)(a1 + 24) == *(double *)(a2 + 24);
  }
  return (*(unsigned char *)(a2 + 32) & 1) == 0 && v2 == v3;
}

void ConnectionAssistantRendererEarthOutline.Error.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

BOOL static ConnectionAssistantRendererEarthOutline.Error.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

Swift::Int ConnectionAssistantRendererEarthOutline.Error.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

void sub_1000129A4()
{
  qword_1003A9808 = 0x3FE921FB54442D18;
}

BOOL static ConnectionAssistantDisplayState.Target.__derived_struct_equals(_:_:)(char a1, char a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_1000129D8(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t ConnectionAssistantDisplayState.ConeState.isVisible.getter(char a1)
{
  return a1 & 1;
}

uint64_t ConnectionAssistantDisplayState.ConeState.isPulsing.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t ConnectionAssistantDisplayState.ConeState.showConnectionPulse.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

void *ConnectionAssistantDisplayState.Result.earth.getter@<X0>(void *a1@<X8>)
{
  return memcpy(a1, v1, 0x203uLL);
}

void *ConnectionAssistantDisplayState.Result.camera.getter@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 528), 0x180uLL);
}

double ConnectionAssistantDisplayState.Result.centerLocation.getter()
{
  return *(double *)(v0 + 912);
}

uint64_t ConnectionAssistantDisplayState.Result.hasCoordinateAnimationFinished.getter()
{
  return *(unsigned __int8 *)(v0 + 928);
}

uint64_t sub_100012A54()
{
  sub_100004010(&qword_10037FA98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B2870;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_noLocationLoop;
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 32)) {
    int v3 = 1084227584;
  }
  else {
    int v3 = 1106247680;
  }
  *(_DWORD *)(inited + 32) = v3;
  *(unsigned char *)(inited + 36) = 0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_conePulsingLoop;
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32)) {
    int v5 = 1084227584;
  }
  else {
    int v5 = 1101004800;
  }
  *(_DWORD *)(inited + 40) = v5;
  *(unsigned char *)(inited + 44) = 0;
  uint64_t v6 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_dotWaveLoop;
  swift_beginAccess();
  if (*(unsigned char *)(v6 + 32)) {
    int v7 = 1084227584;
  }
  else {
    int v7 = 1101004800;
  }
  *(_DWORD *)(inited + 48) = v7;
  *(unsigned char *)(inited + 52) = 0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteWaveLoop;
  swift_beginAccess();
  if (*(unsigned char *)(v8 + 32)) {
    int v9 = 1084227584;
  }
  else {
    int v9 = 1101004800;
  }
  *(_DWORD *)(inited + 56) = v9;
  *(unsigned char *)(inited + 60) = 0;
  sub_100004010(&qword_10037FAA0);
  uint64_t v10 = *(void *)(sub_100004010(&qword_10037E5A8) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1002B2880;
  uint64_t v14 = v13 + v12;
  uint64_t v15 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring;
  swift_beginAccess();
  sub_100016E74(v15, v14);
  uint64_t v16 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring;
  swift_beginAccess();
  sub_100016E74(v16, v14 + v11);
  uint64_t v17 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
  swift_beginAccess();
  sub_100016E74(v17, v14 + 2 * v11);
  uint64_t v18 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  swift_beginAccess();
  sub_100016E74(v18, v14 + 3 * v11);
  uint64_t v19 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring;
  swift_beginAccess();
  sub_100016E74(v19, v14 + 4 * v11);
  uint64_t v20 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring;
  swift_beginAccess();
  sub_100016E74(v20, v14 + 5 * v11);
  uint64_t v21 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  swift_beginAccess();
  sub_100016E74(v21, v14 + 6 * v11);
  uint64_t v22 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_coneVisibleSpring;
  swift_beginAccess();
  sub_100016E74(v22, v14 + 7 * v11);
  unint64_t v23 = sub_100016EDC(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_DWORD *)(inited + 64) = v23;
  *(unsigned char *)(inited + 68) = BYTE4(v23) & 1;
  unint64_t v24 = sub_1000170A0(inited);
  swift_setDeallocating();
  return v24 | ((HIDWORD(v24) & 1) << 32);
}

double sub_100012E24@<D0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v5 = v4;
  long long v149 = a2;
  int v9 = (int *)sub_100004010(&qword_10037E5A8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a1 + 152);
  v180[4] = *(_OWORD *)(a1 + 136);
  v180[5] = v12;
  v180[6] = *(_OWORD *)(a1 + 168);
  uint64_t v181 = *(void *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 88);
  v180[0] = *(_OWORD *)(a1 + 72);
  v180[1] = v13;
  long long v14 = *(_OWORD *)(a1 + 120);
  v180[2] = *(_OWORD *)(a1 + 104);
  v180[3] = v14;
  uint64_t v15 = v4 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring;
  uint64_t v16 = *(void *)(a1 + 400);
  swift_beginAccess();
  *(void *)(v15 + v9[9]) = v16;
  sub_100013AF8();
  swift_endAccess();
  int v19 = *(unsigned __int8 *)(a1 + 448);
  LODWORD(v145) = v19;
  if (v19 == 4)
  {
    uint64_t v20 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring;
    swift_beginAccess();
    *(void *)(v20 + v9[9]) = 0;
    uint64_t v21 = OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
    swift_beginAccess();
    double v22 = 0.0;
  }
  else
  {
    v17.i64[0] = *(void *)(a1 + 440);
    if (fabs(*(double *)v17.i64) > 1.57079633)
    {
      v18.i64[0] = 1.0;
      v23.f64[0] = NAN;
      v23.f64[1] = NAN;
      int8x16_t v150 = (int8x16_t)vnegq_f64(v23);
      int8x16_t v151 = v17;
      *(void *)&double v24 = vbslq_s8(v150, v18, v17).u64[0];
      if (*(double *)v17.i64 == 0.0) {
        double v24 = 0.0;
      }
      double v25 = v24;
      uint64_t v26 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
      swift_beginAccess();
      int8x16_t v17 = v151;
      uint64_t v27 = v9[10];
      v28.i64[0] = *(void *)(v26 + v27);
      v29.i64[0] = 1.0;
      *(void *)&double v30 = vbslq_s8(v150, v29, v28).u64[0];
      if (*(double *)v28.i64 == 0.0) {
        double v30 = 0.0;
      }
      if (v25 != v30)
      {
        *(double *)(v26 + v27) = -*(double *)v28.i64;
        *(double *)(v26 + v9[11]) = -*(double *)(v26 + v9[11]);
      }
    }
    if (qword_10037DC80 != -1)
    {
      int8x16_t v151 = v17;
      swift_once();
      v17.i64[0] = v151.i64[0];
    }
    double v22 = sub_10027ACA0(*(double *)v17.i64, -*(double *)&qword_1003A9808, *(double *)&qword_1003A9808, *(double *)&qword_1003A9808 + *(double *)&qword_1003A9808, 0.55)* 0.2;
    if (v19 == 3) {
      double v31 = 0.0;
    }
    else {
      double v31 = v22;
    }
    uint64_t v32 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring;
    swift_beginAccess();
    *(double *)(v32 + v9[9]) = v31;
    uint64_t v21 = OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
    swift_beginAccess();
  }
  *(double *)(v5 + v21 + v9[9]) = v22;
  uint64_t v33 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring;
  swift_beginAccess();
  sub_100013AF8();
  swift_endAccess();
  uint64_t v34 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
  swift_beginAccess();
  sub_100013AF8();
  swift_endAccess();
  BOOL v35 = sub_100013CA0(v5, a1);
  double v36 = *(double *)(a1 + 416);
  double v37 = *(double *)(a1 + 424);
  int v38 = *(unsigned __int8 *)(a1 + 432);
  if (v38 == 2 || v35)
  {
    v150.i32[0] = 0;
    double v39 = 0.0;
LABEL_19:
    v151.i64[0] = v38 != 2 && !v35;
    uint64_t v40 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
    swift_beginAccess();
    *(double *)(v40 + v9[9]) = v39;
    sub_100013AF8();
    swift_endAccess();
    goto LABEL_21;
  }
  v150.i32[0] = v38 & 1;
  double v39 = 1.0;
  if ((*(unsigned char *)(a1 + 408) & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v41 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  v151.i64[0] = 1;
  swift_beginAccess();
  *(void *)(v41 + v9[9]) = 0x3FF0000000000000;
  *(void *)(v41 + v9[10]) = 0x3FF0000000000000;
  *(void *)(v41 + v9[11]) = 0;
LABEL_21:
  uint64_t v42 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  swift_beginAccess();
  sub_100016E74(v42, (uint64_t)v11);
  double v43 = vabdd_f64(*(double *)&v11[v9[10]], *(double *)&v11[v9[9]]);
  if (v43 <= 0.005)
  {
    BOOL v146 = v43 <= 0.0005;
    sub_10000950C((uint64_t)v11, &qword_10037E5A8);
  }
  else
  {
    sub_10000950C((uint64_t)v11, &qword_10037E5A8);
    BOOL v146 = 0;
  }
  double v44 = 1.0;
  if ((*(unsigned char *)(a1 + 449) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 450)) {
      double v44 = 1.0;
    }
    else {
      double v44 = 0.0;
    }
  }
  uint64_t v45 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring;
  swift_beginAccess();
  *(double *)(v45 + v9[9]) = v44;
  if (v44 == 1.0 && (*(unsigned char *)(a1 + 408) & 1) != 0)
  {
    *(void *)(v45 + v9[10]) = 0x3FF0000000000000;
    *(void *)(v45 + v9[11]) = 0;
  }
  else
  {
    swift_beginAccess();
    sub_100013AF8();
    swift_endAccess();
  }
  double v46 = 1.0;
  if (*(unsigned char *)(a1 + 450)) {
    double v47 = 1.0;
  }
  else {
    double v47 = 0.0;
  }
  uint64_t v48 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring;
  swift_beginAccess();
  *(double *)(v48 + v9[9]) = v47;
  sub_100013AF8();
  swift_endAccess();
  uint64_t v49 = v9[10];
  if (LODWORD(v145) | 4) != 4 || (*(unsigned char *)(a1 + 408)) {
    double v46 = 0.0;
  }
  double v145 = *(double *)(v34 + v49);
  double v50 = *(double *)(v33 + v49);
  double v141 = *(double *)(v45 + v49);
  double v142 = v50;
  double v140 = *(double *)(v42 + v49);
  uint64_t v51 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  swift_beginAccess();
  *(double *)(v51 + v9[9]) = v46;
  sub_100013AF8();
  swift_endAccess();
  __int8 v52 = v151.i8[0];
  char v53 = ~v151.i8[0];
  swift_beginAccess();
  sub_100193E10((v52 & 1) == 0, a3);
  float v55 = v54;
  swift_endAccess();
  double v147 = a4;
  double v148 = a3;
  if (v53)
  {
    *(float *)(v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_lastNoLocationValue) = v55;
    double v58 = v55 * 360.0;
    double v36 = 0.0;
    if (v55 > 0.5) {
      double v37 = v58 + -360.0;
    }
    else {
      double v37 = v55 * 360.0;
    }
    if (v55 > 0.5) {
      double v57 = v58 + -360.0;
    }
    else {
      double v57 = v55 * 360.0;
    }
  }
  else
  {
    float v56 = *(float *)(v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_lastNoLocationValue);
    if (v56 <= 0.5) {
      double v57 = v56 * 360.0;
    }
    else {
      double v57 = v56 * 360.0 + -360.0;
    }
    if (v38 == 2)
    {
      double v36 = 0.0;
      double v37 = v57;
    }
  }
  char v59 = v150.i8[0];
  long long v144 = (char *)&v153[17] + 1;
  double v60 = sub_100013E10(a1, v5, v150.i8[0]);
  *(double *)&long long v61 = sub_1000140F4((CGRect *)a1);
  long long v138 = v61;
  long long v139 = v62;
  double v143 = v36;
  *(double *)v150.i64 = v37;
  sub_100014260((uint64_t)v180, v5, v36, v37, 0.0, v57);
  double v64 = v63;
  double v66 = v65;
  CGFloat v67 = *(double *)a1;
  CGFloat v68 = *(double *)(a1 + 8);
  double v70 = *(double *)(a1 + 16);
  double v69 = *(double *)(a1 + 24);
  v182.origin.x = *(CGFloat *)a1;
  v182.origin.y = v68;
  v182.size.width = v70;
  v182.size.height = v69;
  CGRectGetMidX(v182);
  v183.origin.x = v67;
  v183.origin.y = v68;
  v183.size.width = v70;
  v183.size.height = v69;
  double MidY = CGRectGetMidY(v183);
  float v72 = *(double *)(v42 + v9[10]);
  CGFloat v132 = v64;
  *(double *)&long long v131 = v66;
  sub_1000FBD58(0.0, 0, 0x3F96CBE440490FDAuLL, 0, (unint64_t)COERCE_UNSIGNED_INT(v72 * 0.7854) << 32, 0, v156, 0.0, v64, v66);
  memcpy(v155, v156, 0x203uLL);
  uint64_t v73 = _s8SOSBuddy25ConnectionAssistantCameraV8ViewportV4size5scaleAESo6CGSizeV_12CoreGraphics7CGFloatVtcfC_0(v70, v69, *(double *)(a1 + 64));
  uint64_t v75 = v74;
  *(void *)&long long v130 = v76;
  v184.origin.x = v67;
  v184.origin.y = v68;
  v184.size.width = v70;
  v184.size.height = v69;
  if (CGRectGetWidth(v184) <= 0.0)
  {
    float32x2_t v80 = 0;
    float v81 = 1.0;
  }
  else
  {
    v185.origin.x = v67;
    v185.origin.y = v68;
    v185.size.width = v70;
    v185.size.height = v69;
    double v77 = v60 / CGRectGetWidth(v185);
    v186.origin.x = v67;
    v186.origin.y = v68;
    v186.size.width = v70;
    v186.size.height = v69;
    CGFloat Width = CGRectGetWidth(v186);
    *(void *)&v79.f64[0] = v138;
    *(void *)&v79.f64[1] = v139;
    float32x2_t v80 = vcvt_f32_f64(vdivq_f64(v79, (float64x2_t)vdupq_lane_s64(COERCE__INT64(v77 * Width), 0)));
    float v81 = v77;
  }
  double v82 = *(double *)&v139 + MidY;
  double v83 = v60 * 0.5;
  double v134 = v142 * 0.7;
  double v84 = v142 * -0.5 * v141 * v140;
  long long v138 = v156[1];
  long long v139 = v156[0];
  long long v136 = v156[3];
  long long v137 = v156[2];
  float v85 = *((float *)&v156[4] + 1);
  unsigned int v135 = v156[4];
  LODWORD(v140) = HIDWORD(v156[4]);
  float v86 = v84;
  sub_1000A41DC((float *)v156, v73, v75, (uint64_t)v157, v132, *(double *)&v131, v81, v80, v86, *(double *)&v130);
  memcpy(&v154[528], v157, 0x180uLL);
  double v87 = v143;
  double v88 = sub_100014400(a1, v155, v143, *(double *)v150.i64, (uint64_t)v157, v5);
  double v141 = v89;
  double v142 = v88;
  v187.origin.x = v67;
  v187.origin.y = v68;
  v187.size.width = v70;
  v187.size.height = v69;
  CGFloat v132 = CGRectGetMinY(v187) + *(double *)(a1 + 32);
  double v133 = v83;
  double v90 = v82;
  double v91 = v83;
  double v92 = sub_1000173CC((uint64_t)v180, v5, v132, v82, v83);
  float v93 = v92 / v91;
  float v94 = v85 * v93;
  uint64_t v95 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_locationDotLoop;
  swift_beginAccess();
  char v96 = v151.i8[0] & 1;
  double v97 = v148;
  LODWORD(v82) = sub_100193EB4(v151.i8[0] & 1, v148);
  swift_endAccess();
  uint64_t v98 = *(void *)(v95 + 24);
  char v99 = *(unsigned char *)(v95 + 32);
  uint64_t v100 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_dotWaveLoop;
  swift_beginAccess();
  *(void *)(v100 + 40) = v98;
  *(unsigned char *)(v100 + 48) = v99;
  uint64_t v101 = v5 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteWaveLoop;
  swift_beginAccess();
  *(void *)(v101 + 40) = v98;
  *(unsigned char *)(v101 + 48) = v99;
  sub_100014600(v96, v155, (float32x2_t *)a1, v5, v59, (float32x2_t *)v158, *(float *)&v82);
  int8x16_t v151 = (int8x16_t)v158[0];
  long long v130 = v158[2];
  long long v131 = v158[1];
  uint64_t v128 = v160;
  uint64_t v129 = v159;
  int v126 = v162;
  int v127 = v161;
  sub_10000D544((uint64_t)v158, (uint64_t)&v155[20], &qword_10037FA80);
  double v102 = *(double *)v150.i64;
  sub_100014800(a1, v59, v5, v96, v155, (uint64_t)v180, (uint64_t)&v163, v134, v94, v97, v87, *(double *)v150.i64);
  long long v118 = v163;
  double v134 = v165;
  uint64_t v103 = v164;
  unint64_t v124 = v166;
  uint64_t v125 = v168;
  uint64_t v104 = v167;
  unint64_t v123 = v169;
  long long v122 = v170;
  uint64_t v120 = v172;
  uint64_t v121 = v171;
  int v119 = v173;
  double v105 = v92;
  double v106 = v145;
  sub_100014B60(a1, v5, (uint64_t)v180, (uint64_t)v174, v94, v105, v145);
  long long v116 = v174[1];
  long long v117 = v174[0];
  uint64_t v107 = v175;
  uint64_t v108 = v176;
  uint64_t v109 = v178;
  uint64_t v110 = v177;
  int v111 = v179;
  sub_100014EC8(v5, a1, (uint64_t)v180, (uint64_t)&v163, (uint64_t)v152, v94, v106, v87, v102, v97);
  sub_100017540((uint64_t)v152);
  v153[0] = v139;
  v153[1] = v138;
  v153[2] = v137;
  v153[3] = v136;
  *(void *)&v153[4] = __PAIR64__(LODWORD(v85), v135);
  *(float *)&unsigned int v112 = (v90 - v132) / v133;
  *((void *)&v153[4] + 1) = __PAIR64__(LODWORD(v140), v112);
  v153[5] = v151;
  v153[6] = v131;
  v153[7] = v130;
  *(void *)&v153[8] = v129;
  *((void *)&v153[8] + 1) = v128;
  LODWORD(v153[9]) = v127;
  BYTE4(v153[9]) = v126;
  v153[10] = v118;
  *(void *)&v153[11] = v103;
  *((double *)&v153[11] + 1) = v134;
  v153[12] = v124;
  *(void *)&v153[13] = v104;
  *((void *)&v153[13] + 1) = v125;
  v153[14] = v123;
  v153[15] = v122;
  *(void *)&v153[16] = v121;
  *((void *)&v153[16] + 1) = v120;
  LOBYTE(v153[17]) = v119;
  uint64_t v113 = v144;
  *long long v144 = 0;
  v153[18] = v117;
  v153[19] = v116;
  *(void *)&v153[20] = v107;
  *((void *)&v153[20] + 1) = v108;
  *(void *)&v153[21] = v110;
  *((void *)&v153[21] + 1) = v109;
  LODWORD(v153[22]) = v111;
  v113[83] = 0;
  sub_10000D544((uint64_t)v152, (uint64_t)&v153[23], &qword_10037E5B8);
  memcpy(v154, v153, 0x203uLL);
  uint64_t v114 = v149;
  memcpy(v149, v154, 0x390uLL);
  v114[114] = v142;
  double result = v141;
  v114[115] = v141;
  *((unsigned char *)v114 + 928) = v146;
  return result;
}

double sub_100013AF8()
{
  uint64_t v1 = sub_100004010(&qword_10037E5A8);
  uint64_t v2 = *(int *)(v1 + 40);
  double v3 = *(double *)(v0 + v2);
  uint64_t v4 = *(int *)(v1 + 44);
  sub_100016288();
  Spring.value<A>(target:initialVelocity:time:)();
  *(double *)(v0 + v2) = v3 + v6;
  Spring.velocity<A>(target:initialVelocity:time:)();
  double result = v6;
  *(double *)(v0 + v4) = v6;
  return result;
}

float sub_100013BCC()
{
  uint64_t v1 = sub_100004010(&qword_10037E5B0);
  uint64_t v2 = *(int *)(v1 + 40);
  float v3 = *(float *)(v0 + v2);
  uint64_t v4 = *(int *)(v1 + 44);
  Spring.value<A>(target:initialVelocity:time:)();
  *(float *)(v0 + v2) = v3 + v6;
  Spring.velocity<A>(target:initialVelocity:time:)();
  float result = v6;
  *(float *)(v0 + v4) = v6;
  return result;
}

BOOL sub_100013CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_noLocationLoop;
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32)) {
    return 0;
  }
  sub_10000D544(a2 + 416, (uint64_t)v13, &qword_10037FA90);
  sub_10000D544((uint64_t)v13, (uint64_t)v14, &qword_10037FA90);
  if (v16 == 2) {
    return 1;
  }
  float v6 = *(float *)(a1 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_lastNoLocationValue);
  double v7 = 0.0;
  if (v6 > 0.5) {
    double v7 = 360.0;
  }
  double v8 = v6 * 360.0 - v7;
  double v9 = (v8 - v15) * 0.0174532925;
  if (v9 < 0.0 || v9 >= 6.28318531) {
    double v9 = v9 - floor(v9 / 6.28318531) * 6.28318531;
  }
  double v10 = (v15 - v8) * 0.0174532925;
  if (v10 < 0.0 || v10 >= 6.28318531) {
    double v10 = v10 - floor(v10 / 6.28318531) * 6.28318531;
  }
  double v11 = v9 * 57.2957795;
  double v12 = v10 * 57.2957795;
  if (v12 < v11) {
    double v11 = v12;
  }
  return v11 >= 150.0;
}

double sub_100013E10(uint64_t a1, uint64_t a2, char a3)
{
  double Width = CGRectGetWidth(*(CGRect *)a1);
  long long v6 = *(_OWORD *)(a1 + 224);
  long long v7 = *(_OWORD *)(a1 + 240);
  long long v8 = *(_OWORD *)(a1 + 192);
  long long v57 = *(_OWORD *)(a1 + 208);
  long long v58 = v6;
  long long v9 = *(_OWORD *)(a1 + 256);
  long long v10 = *(_OWORD *)(a1 + 272);
  long long v59 = v7;
  long long v60 = v9;
  *(_OWORD *)long long v61 = v10;
  *(_OWORD *)&v61[9] = *(_OWORD *)(a1 + 281);
  long long v56 = v8;
  int v53 = BYTE8(v57);
  double v54 = *(double *)&v58;
  double v55 = *(double *)&v57;
  uint64_t v11 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring;
  int v12 = BYTE8(v58);
  swift_beginAccess();
  uint64_t v13 = sub_100004010(&qword_10037E5A8);
  double v14 = *(double *)(v11 + *(int *)(v13 + 40));
  sub_1000175A0((uint64_t *)&v59, (uint64_t)v64);
  sub_1000175A0(v64, (uint64_t)&v65);
  int v51 = v66;
  double v15 = v65;
  sub_1000175A0((uint64_t *)&v60, (uint64_t)v63);
  sub_1000175A0(v63, (uint64_t)&v67);
  int v16 = v68;
  double v17 = v67;
  uint64_t v18 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  swift_beginAccess();
  double v19 = *(double *)(v18 + *(int *)(v13 + 40));
  double v20 = *(double *)v61;
  int v21 = v61[8];
  double v22 = *(double *)&v61[16];
  int v23 = v61[24];
  sub_1000175A0((uint64_t *)&v56, (uint64_t)v62);
  sub_1000175A0(v62, (uint64_t)&v69);
  int v24 = v70;
  double v25 = v69;
  uint64_t v26 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring;
  swift_beginAccess();
  double v27 = *(double *)(v26 + *(int *)(v13 + 40));
  uint64_t v28 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring;
  swift_beginAccess();
  double v29 = *(double *)(v28 + *(int *)(v13 + 40));
  double v30 = 0.0;
  if ((a3 & 1) == 0)
  {
    uint64_t v31 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
    swift_beginAccess();
    double v30 = *(double *)(v31 + *(int *)(v13 + 40));
  }
  double v32 = 1.0;
  if (v24) {
    double v33 = 1.0;
  }
  else {
    double v33 = Width;
  }
  double v34 = v25 * v33;
  if (v16) {
    double v35 = 1.0;
  }
  else {
    double v35 = Width;
  }
  double v36 = v17 * v35;
  if (v51) {
    double v37 = 1.0;
  }
  else {
    double v37 = Width;
  }
  double v38 = v15 * v37;
  if (v21) {
    double v39 = 1.0;
  }
  else {
    double v39 = Width;
  }
  double v40 = v39 * v20;
  if (v23 == 255) {
    char v41 = v21;
  }
  else {
    char v41 = v23;
  }
  if (v23 == 255) {
    double v42 = v20;
  }
  else {
    double v42 = v22;
  }
  if (v41) {
    double v43 = 1.0;
  }
  else {
    double v43 = Width;
  }
  double v44 = v40 + v14 * (v43 * v42 - v40);
  double v45 = v38 + v19 * v19 * (v36 - v38);
  char v46 = v53;
  if (v53) {
    double v47 = 1.0;
  }
  else {
    double v47 = Width;
  }
  double v48 = v55;
  double v49 = v47 * v55;
  if (v12 != 255)
  {
    char v46 = v12;
    double v48 = v54;
  }
  if ((v46 & 1) == 0) {
    double v32 = Width;
  }
  return v34
       + v30 * (v49 + v14 * (v32 * v48 - v49) + v29 * (v45 + v27 * (v44 - v45) - (v49 + v14 * (v32 * v48 - v49))) - v34);
}

double sub_1000140F4(CGRect *a1)
{
  return 0.0;
}

void sub_100014260(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  double v7 = *(double *)(a1 + 8);
  double v8 = *(double *)(a1 + 32);
  double v9 = *(double *)(a1 + 40);
  double v11 = *(double *)(a1 + 48);
  double v10 = *(double *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  if (*(unsigned char *)(a1 + 24)) {
    double v13 = 0.0;
  }
  else {
    double v13 = *(double *)(a1 + 16);
  }
  uint64_t v14 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring;
  swift_beginAccess();
  uint64_t v15 = sub_100004010(&qword_10037E5A8);
  double v16 = *(double *)(v14 + *(int *)(v15 + 40));
  double v17 = v7 + v16 * (v13 - v7);
  uint64_t v18 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  swift_beginAccess();
  double v19 = v9 + *(double *)(v18 + *(int *)(v15 + 40)) * (v8 - v9);
  if (v12) {
    double v20 = 0.0;
  }
  else {
    double v20 = v10;
  }
  double v21 = v11 + v16 * (v20 - v11);
  uint64_t v22 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring;
  swift_beginAccess();
  double v23 = v19 + *(double *)(v22 + *(int *)(v15 + 40)) * (v21 - v19);
  uint64_t v24 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring;
  swift_beginAccess();
  double v25 = v17 + *(double *)(v24 + *(int *)(v15 + 40)) * (v23 - v17) + a3;
  uint64_t v26 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  swift_beginAccess();
  sub_10001725C(a5, a6, v25, a4, *(double *)(v26 + *(int *)(v15 + 40)));
}

double sub_100014400(uint64_t a1, const void *a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  long long v11 = *(_OWORD *)(a1 + 272);
  v30[4] = *(_OWORD *)(a1 + 256);
  v31[0] = v11;
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)(a1 + 281);
  long long v12 = *(_OWORD *)(a1 + 208);
  v30[0] = *(_OWORD *)(a1 + 192);
  v30[1] = v12;
  long long v13 = *(_OWORD *)(a1 + 240);
  v30[2] = *(_OWORD *)(a1 + 224);
  v30[3] = v13;
  sub_1000175A0((uint64_t *)v30, (uint64_t)v32);
  CGFloat v14 = *(double *)a1;
  CGFloat v15 = *(double *)(a1 + 8);
  CGFloat v16 = *(double *)(a1 + 16);
  CGFloat v17 = *(double *)(a1 + 24);
  v35.origin.x = *(CGFloat *)a1;
  v35.origin.y = v15;
  v35.size.width = v16;
  v35.size.height = v17;
  CGRectGetWidth(v35);
  sub_1000175A0(v32, (uint64_t)&v34);
  v36.origin.x = v14;
  v36.origin.y = v15;
  v36.size.width = v16;
  v36.size.height = v17;
  double MidX = CGRectGetMidX(v36);
  v37.origin.x = v14;
  v37.origin.y = v15;
  v37.size.width = v16;
  v37.size.height = v17;
  CGRectGetMidY(v37);
  memcpy(__dst, a2, 0x203uLL);
  *(double *)v19.i64 = ConnectionAssistantEarth.direction(for:)(a3, a4);
  *(float32x2_t *)v20.f32 = vsub_f32(__dst[0], vmul_n_f32(*(float32x2_t *)v19.f32, __dst[8].f32[1]));
  v20.f32[2] = __dst[1].f32[0] - vmuls_lane_f32(__dst[8].f32[1], v19, 2);
  v20.i32[3] = 0;
  ConnectionAssistantCamera.projectToViewport(point:)(v20);
  if (v22) {
    double v23 = MidX;
  }
  else {
    double v23 = v21;
  }
  uint64_t v24 = a6 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  swift_beginAccess();
  double v25 = *(double *)(v24 + *(int *)(sub_100004010(&qword_10037E5A8) + 40));
  double v26 = fabs(sqrt(v25));
  BOOL v27 = v25 == -INFINITY;
  double v28 = INFINITY;
  if (!v27) {
    double v28 = v26;
  }
  return round((MidX + v28 * (v23 - MidX)) * 100.0) / 100.0;
}

uint64_t sub_100014600@<X0>(char a1@<W0>, const void *a2@<X1>, float32x2_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, float32x2_t *a6@<X8>, float a7@<S0>)
{
  if (a1)
  {
    memcpy(__dst, a2, 0x203uLL);
    sub_10000D544((uint64_t)&a3[52], (uint64_t)v28, &qword_10037FA90);
    uint64_t result = sub_10000D544((uint64_t)v28, (uint64_t)v30, &qword_10037FA90);
    if (v31 == 2)
    {
      __break(1u);
      return result;
    }
    float v27 = *(float *)&__dst[17];
    double v13 = ConnectionAssistantEarth.direction(for:)(v30[0], v30[1]);
    float32x2_t v15 = (float32x2_t)COERCE_UNSIGNED_INT(v27 * (float)(0.0 - v14));
    float32x2_t v16 = vmul_n_f32(vsub_f32(0, *(float32x2_t *)&v13), v27);
  }
  else
  {
    float32x2_t v16 = 0;
    float32x2_t v15 = 0;
  }
  uint64_t v17 = a4 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  swift_beginAccess();
  uint64_t result = sub_100004010(&qword_10037E5A8);
  uint64_t v18 = result;
  double v19 = *(double *)(v17 + *(int *)(result + 40));
  if (qword_10037DC90 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v21 = qword_1003A9820;
  float32x2_t v20 = *(float32x2_t *)algn_1003A9828;
  float v22 = 0.0;
  if ((a5 & 1) == 0)
  {
    float v23 = *(double *)(v17 + *(int *)(v18 + 40));
    float v22 = v23 * 1000.0;
  }
  float v24 = v19;
  float32x2_t v26 = a3[48];
  float32x2_t v25 = a3[49];
  *a6 = v16;
  a6[1] = v15;
  a6[2] = (float32x2_t)(COERCE_UNSIGNED_INT(roundf((float)((float)((float)((float)(a7 * 0.1875) + 0.8125) * 8.0) * v24)* 10.0) / 10.0) | ((unint64_t)COERCE_UNSIGNED_INT(roundf((float)(v24 * 11.0) * 10.0)/ 10.0) << 32));
  a6[3] = 0;
  a6[4] = v26;
  a6[5] = v25;
  a6[6] = (float32x2_t)v21;
  a6[7] = v20;
  a6[8].f32[0] = roundf(v22) / 1000.0;
  a6[8].i8[4] = 0;
  return result;
}

__n128 sub_100014800@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, float *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D1>, float a9@<S2>, double a10@<D3>, double a11@<D4>, double a12@<D5>)
{
  long long v61 = *(void **)(a1 + 360);
  char v20 = *(unsigned char *)(a1 + 368);
  char v59 = *(unsigned char *)(a1 + 369);
  if ((*(unsigned char *)(a1 + 352) & 1) == 0)
  {
    char v21 = 0;
LABEL_5:
    double v22 = 0.0;
    goto LABEL_6;
  }
  char v21 = a2 ^ 1;
  if ((a4 & 1) == 0) {
    goto LABEL_5;
  }
  sub_10000D544(a1 + 440, (uint64_t)v66, &qword_10037FA88);
  sub_10000D544((uint64_t)v66, (uint64_t)v68, &qword_10037FA88);
  double v22 = 1.0;
  if (v68[8] == 3) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v23 = a3 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_coneVisibleSpring;
  swift_beginAccess();
  uint64_t v24 = sub_100004010(&qword_10037E5A8);
  *(double *)(v23 + *(int *)(v24 + 36)) = v22;
  sub_100013AF8();
  swift_endAccess();
  double v25 = *(double *)(v23 + *(int *)(v24 + 40));
  float v26 = a5[17];
  double v27 = *(double *)(a6 + 112);
  swift_beginAccess();
  double v28 = a10;
  float v29 = sub_100193EB4(v21 & v20 & 1, a10);
  swift_endAccess();
  float v30 = 0.0;
  if (v21) {
    float v30 = *(double *)(v23 + *(int *)(v24 + 40));
  }
  float v31 = v27;
  float v32 = tanf((float)(v31 * 0.7) * 0.5);
  float v33 = v25;
  float v34 = (float)(a9 - v26) * v33;
  float v35 = v34 * v32;
  float v36 = a8;
  float v37 = v36 / 6.2832;
  float v38 = v29 * v30;
  memcpy(__dst, a5, 0x203uLL);
  *(float *)&long long v39 = __dst[17];
  long long v53 = v39;
  *(float32x2_t *)v41.f32 = vmul_n_f32(vsub_f32(0, COERCE_FLOAT32X2_T(ConnectionAssistantEarth.direction(for:)(a11, a12))), __dst[17]);
  v41.f32[2] = *(float *)&v53 * (float)(0.0 - v40);
  v41.i32[3] = 0;
  float32x4_t v57 = v41;
  sub_100017548(a1);
  *(float *)v42.i32 = v37;
  sub_100205694(v61, (uint64_t)v63, v57, v34, v42, 1.5708, v35);
  sub_100017574(a1);
  char v43 = v21 & v59;
  long long v58 = v63[1];
  long long v60 = v63[0];
  int v44 = v64;
  long long v55 = v65;
  swift_beginAccess();
  sub_100193E10(v43 & 1, v28);
  float v46 = v45;
  swift_endAccess();
  float v47 = fabsf(sqrtf(v46));
  if (v46 == -INFINITY) {
    float v48 = INFINITY;
  }
  else {
    float v48 = v47;
  }
  id v49 = [v61 colorWithAlphaComponent:0.4, v53];
  float v50 = sub_100205864(v49, v48);
  __n128 v62 = v51;

  *(_OWORD *)a7 = v60;
  *(_OWORD *)(a7 + 16) = v58;
  *(_DWORD *)(a7 + 32) = v44;
  *(_OWORD *)(a7 + 48) = v55;
  *(float *)(a7 + 64) = v38;
  *(void *)(a7 + 80) = LODWORD(v50);
  *(void *)(a7 + 88) = 0;
  __n128 result = v62;
  *(__n128 *)(a7 + 96) = v62;
  *(unsigned char *)(a7 + 112) = 0;
  return result;
}

float sub_100014B60@<S0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S1>, double a6@<D2>, double a7@<D3>)
{
  int v13 = *(unsigned __int8 *)(a1 + 448);
  float v14 = 1.0;
  if (v13 == 2)
  {
    BOOL v16 = 0;
    BOOL v15 = 1;
  }
  else if (v13 == 4 || (BOOL v15 = v13 == 3, v16 = v13 != 3, (v13 | 2) != 3))
  {
    BOOL v16 = 0;
    BOOL v15 = 0;
    float v17 = 0.0;
    goto LABEL_7;
  }
  float v17 = 1.0;
LABEL_7:
  uint64_t v18 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowVisibleSpring;
  swift_beginAccess();
  uint64_t v19 = sub_100004010(&qword_10037E5B0);
  *(float *)(v18 + *(int *)(v19 + 36)) = v17;
  sub_100013BCC();
  swift_endAccess();
  int v20 = !v15;
  if (*(float *)(v18 + *(int *)(v19 + 40)) > 0.9)
  {
    int v21 = !v16;
  }
  else
  {
    int v20 = 1;
    int v21 = 1;
  }
  uint64_t v22 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowLeftTipVisibleSpring;
  if (v20) {
    float v23 = 0.0;
  }
  else {
    float v23 = 1.0;
  }
  swift_beginAccess();
  *(float *)(v22 + *(int *)(v19 + 36)) = v23;
  if (v21) {
    float v24 = 0.0;
  }
  else {
    float v24 = 1.0;
  }
  uint64_t v25 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowRightTipVisibleSpring;
  swift_beginAccess();
  *(float *)(v25 + *(int *)(v19 + 36)) = v24;
  sub_100013BCC();
  swift_endAccess();
  swift_beginAccess();
  sub_100013BCC();
  swift_endAccess();
  if (v13 != 3) {
    float v14 = 0.0;
  }
  uint64_t v26 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowTurnAroundSpring;
  swift_beginAccess();
  *(float *)(v26 + *(int *)(v19 + 36)) = v14;
  sub_100013BCC();
  swift_endAccess();
  float v27 = *(double *)(a3 + 104) / a6;
  float v28 = v27 * 1.5;
  uint64_t v29 = *(int *)(v19 + 40);
  float v30 = a7;
  float v31 = fabsf(v30);
  float v32 = v31 - (float)(*(float *)(v22 + v29) * v28);
  float v33 = v31 - (float)(v28 * *(float *)(v25 + v29));
  float v34 = *(float *)(v26 + v29);
  float v35 = powf(v34, 0.4);
  float v36 = *(float *)(v18 + v29);
  float v37 = v36 * (float)-(float)(v32 - (float)(v34 * (float)(v32 + -1.5708)));
  float v38 = v36 * (float)(v33 + (float)(v34 * (float)(1.5708 - v33)));
  id v39 = [self whiteColor];
  sub_1001601C0(v39, (uint64_t)&v49, a5 + (float)(v35 * (float)((float)(a5 * 0.05) - a5)), v37, v38);

  float result = v50;
  int v41 = v52;
  long long v42 = v53;
  uint64_t v43 = *(int *)(v19 + 40);
  float v44 = *(float *)(v26 + v43) * 32.0;
  float v45 = *(float *)(v22 + v43) * 10.0;
  float v46 = *(float *)(v25 + v43) * 10.0;
  int v47 = *(_DWORD *)(v18 + v43);
  uint64_t v48 = v51;
  *(void *)a4 = v49;
  *(float *)(a4 + 8) = result;
  *(float *)(a4 + 12) = (float)(a5 - (float)(a5 * 0.05)) * v35;
  *(void *)(a4 + 16) = v48;
  *(float *)(a4 + 24) = v44;
  *(float *)(a4 + 28) = v44;
  *(_DWORD *)(a4 + 32) = v41;
  *(float *)(a4 + 36) = v45;
  *(float *)(a4 + 40) = v46;
  *(_OWORD *)(a4 + 48) = v42;
  *(_DWORD *)(a4 + 64) = v47;
  return result;
}

double sub_100014EC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>)
{
  if (*(unsigned __int8 *)(a2 + 448) - 3 >= 2) {
    float v19 = 1.0;
  }
  else {
    float v19 = 0.0;
  }
  uint64_t v20 = a1 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteVisibleSpring;
  swift_beginAccess();
  uint64_t v21 = sub_100004010(&qword_10037E5B0);
  *(float *)(v20 + *(int *)(v21 + 36)) = v19;
  sub_100013BCC();
  swift_endAccess();
  if (*(unsigned char *)(a2 + 369)) {
    float v22 = 1.0;
  }
  else {
    float v22 = 0.0;
  }
  uint64_t v23 = a1 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteConeVisibleSpring;
  swift_beginAccess();
  *(float *)(v23 + *(int *)(v21 + 36)) = v22;
  sub_100013BCC();
  swift_endAccess();
  float v25 = *(double *)(a3 + 104);
  id v26 = [self whiteColor];
  float v24 = a7;
  sub_1001E8F1C(v26, (uint64_t)&v37, a6, v24, v25);

  int v27 = v38;
  long long v35 = v39;
  float v28 = *(float *)(v20 + *(int *)(v21 + 40)) * (float)((float)(*(float *)(v23 + *(int *)(v21 + 40)) * 0.6) + 0.4);
  sub_1000150E8(a4, a1, a2, v40, a8, a9, a10);
  char v29 = v43;
  char v30 = v44;
  *(void *)a5 = v37;
  *(_DWORD *)(a5 + 8) = v27;
  *(_OWORD *)(a5 + 16) = v35;
  *(float *)(a5 + 32) = v28;
  __n128 v31 = v40[1];
  *(__n128 *)(a5 + 48) = v40[0];
  *(__n128 *)(a5 + 64) = v31;
  __n128 v32 = v40[3];
  *(__n128 *)(a5 + 80) = v40[2];
  *(__n128 *)(a5 + 96) = v32;
  double result = *(double *)&v41;
  long long v34 = v42;
  *(_OWORD *)(a5 + 112) = v41;
  *(_OWORD *)(a5 + 128) = v34;
  *(unsigned char *)(a5 + 144) = v29;
  *(unsigned char *)(a5 + 145) = v30;
  return result;
}

__n128 sub_1000150E8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  float v14 = self;
  id v15 = [v14 cyanColor];
  id v16 = [v15 colorWithAlphaComponent:0.05];

  id v17 = [v14 cyanColor];
  id v18 = [v17 colorWithAlphaComponent:0.4];

  float v19 = *(float *)(a1 + 32);
  id v20 = v16;
  sub_1001E91C8(v20, (uint64_t)&v36, v19, a5, a6);

  unint64_t v34 = v36;
  unint64_t v22 = v37;
  unint64_t v21 = v38;
  unint64_t v23 = v39;
  unint64_t v35 = v40;
  uint64_t v24 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteVisibleSpring;
  swift_beginAccess();
  uint64_t v25 = sub_100004010(&qword_10037E5B0);
  LODWORD(a6) = *(_DWORD *)(v24 + *(int *)(v25 + 40));
  uint64_t v26 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteConeVisibleSpring;
  swift_beginAccess();
  float v27 = *(float *)&a6 * *(float *)(v26 + *(int *)(v25 + 40));
  LOBYTE(a3) = *(unsigned char *)(a3 + 369) & 1;
  swift_beginAccess();
  sub_100193E10(a3, a7);
  LODWORD(a7) = v28;
  swift_endAccess();
  float v29 = fabsf(sqrtf(*(float *)&a7));
  if (*(float *)&a7 == -INFINITY) {
    float v29 = INFINITY;
  }
  float v30 = sub_100205864(v18, v29);
  __n128 v33 = v31;

  a4->n128_u64[0] = v34;
  a4->n128_u64[1] = v22;
  a4[1].n128_u64[0] = v21;
  a4[1].n128_u64[1] = 0;
  a4[2].n128_u64[0] = v23;
  a4[2].n128_u64[1] = v35;
  a4[3].n128_u64[0] = LODWORD(v27);
  a4[3].n128_u64[1] = 0;
  a4[4].n128_u64[0] = LODWORD(v30);
  a4[4].n128_u64[1] = 0;
  __n128 result = v33;
  a4[5] = v33;
  a4[6].n128_u16[0] = 0;
  return result;
}

uint64_t ConnectionAssistantDisplayState.deinit()
{
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_coneVisibleSpring, &qword_10037E5A8);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowVisibleSpring, &qword_10037E5B0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowLeftTipVisibleSpring, &qword_10037E5B0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowRightTipVisibleSpring, &qword_10037E5B0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowTurnAroundSpring, &qword_10037E5B0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteVisibleSpring, &qword_10037E5B0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteConeVisibleSpring, &qword_10037E5B0);
  return v0;
}

uint64_t ConnectionAssistantDisplayState.__deallocating_deinit()
{
  ConnectionAssistantDisplayState.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000154C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_offsetSpring;
  uint64_t v2 = (int *)sub_100004010(&qword_10037E5A8);
  *(void *)(v1 + v2[9]) = 0;
  *(void *)(v1 + v2[10]) = 0;
  *(void *)(v1 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSpring;
  *(void *)(v3 + v2[9]) = 0;
  *(void *)(v3 + v2[10]) = 0;
  *(void *)(v3 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v4 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_targetRelativeAngleSnapSpring;
  *(void *)(v4 + v2[9]) = 0;
  *(void *)(v4 + v2[10]) = 0;
  *(void *)(v4 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v5 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_hasCoordinateSpring;
  *(void *)(v5 + v2[9]) = 0;
  *(void *)(v5 + v2[10]) = 0;
  *(void *)(v5 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v6 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_connectingSpring;
  *(void *)(v6 + v2[9]) = 0;
  *(void *)(v6 + v2[10]) = 0;
  *(void *)(v6 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v7 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_completeSpring;
  *(void *)(v7 + v2[9]) = 0;
  *(void *)(v7 + v2[10]) = 0;
  *(void *)(v7 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v8 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  *(void *)(v8 + v2[9]) = 0;
  *(void *)(v8 + v2[10]) = 0;
  *(void *)(v8 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v9 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_coneVisibleSpring;
  *(void *)(v9 + v2[9]) = 0;
  *(void *)(v9 + v2[10]) = 0;
  *(void *)(v9 + v2[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v10 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowVisibleSpring;
  long long v11 = (int *)sub_100004010(&qword_10037E5B0);
  *(_DWORD *)(v10 + v11[9]) = 0;
  *(_DWORD *)(v10 + v11[10]) = 0;
  *(_DWORD *)(v10 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v12 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowLeftTipVisibleSpring;
  *(_DWORD *)(v12 + v11[9]) = 0;
  *(_DWORD *)(v12 + v11[10]) = 0;
  *(_DWORD *)(v12 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v13 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowRightTipVisibleSpring;
  *(_DWORD *)(v13 + v11[9]) = 0;
  *(_DWORD *)(v13 + v11[10]) = 0;
  *(_DWORD *)(v13 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v14 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_arrowTurnAroundSpring;
  *(_DWORD *)(v14 + v11[9]) = 0;
  *(_DWORD *)(v14 + v11[10]) = 0;
  *(_DWORD *)(v14 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v15 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteVisibleSpring;
  *(_DWORD *)(v15 + v11[9]) = 0;
  *(_DWORD *)(v15 + v11[10]) = 0;
  *(_DWORD *)(v15 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v16 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteConeVisibleSpring;
  *(_DWORD *)(v16 + v11[9]) = 0;
  *(_DWORD *)(v16 + v11[10]) = 0;
  *(_DWORD *)(v16 + v11[11]) = 0;
  Spring.init(response:dampingRatio:)();
  uint64_t v17 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_noLocationLoop;
  *(_DWORD *)uint64_t v17 = 0;
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 8) = 0x404E000000000000;
  *(unsigned char *)(v17 + 32) = 1;
  *(void *)(v17 + 40) = 0;
  *(unsigned char *)(v17 + 48) = 1;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_lastNoLocationValue) = 0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_conePulsingLoop;
  *(_DWORD *)uint64_t v18 = 1065353216;
  *(void *)(v18 + 8) = 0x3FF0000000000000;
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(unsigned char *)(v18 + 32) = 1;
  *(void *)(v18 + 40) = 0;
  *(unsigned char *)(v18 + 48) = 1;
  uint64_t v19 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_locationDotLoop;
  *(_DWORD *)uint64_t v19 = 0;
  *(void *)(v19 + 8) = 0x4008000000000000;
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  *(unsigned char *)(v19 + 32) = 1;
  *(void *)(v19 + 40) = 0;
  *(unsigned char *)(v19 + 48) = 1;
  uint64_t v20 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_dotWaveLoop;
  *(_DWORD *)uint64_t v20 = 0;
  *(_OWORD *)(v20 + 8) = xmmword_1002B0B30;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = 0;
  *(unsigned char *)(v20 + 48) = 1;
  uint64_t v21 = v0 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_satelliteWaveLoop;
  *(_DWORD *)uint64_t v21 = 0;
  *(_OWORD *)(v21 + 8) = xmmword_1002B0B40;
  *(void *)(v21 + 24) = 0;
  *(unsigned char *)(v21 + 32) = 1;
  *(void *)(v21 + 40) = 0;
  *(unsigned char *)(v21 + 48) = 1;
  return v0;
}

uint64_t _s8SOSBuddy31ConnectionAssistantDisplayStateC13EarthDiameterV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1000175A0((uint64_t *)a1, (uint64_t)v24);
  sub_1000175A0((uint64_t *)a2, (uint64_t)v23);
  sub_1000175A0(v24, (uint64_t)&v25);
  double v4 = v25;
  if (v26)
  {
    sub_1000175A0(v23, (uint64_t)&v27);
    if (v28 != 1 || v4 != v27) {
      return 0;
    }
LABEL_9:
    sub_1000175A0((uint64_t *)(a1 + 16), (uint64_t)v22);
    sub_1000175A0((uint64_t *)(a2 + 16), (uint64_t)v21);
    sub_1000175A0(v22, (uint64_t)&v29);
    double v7 = v29;
    if (v30)
    {
      sub_1000175A0(v21, (uint64_t)&v31);
      uint64_t result = 0;
      if (v32 != 1) {
        return result;
      }
    }
    else
    {
      sub_1000175A0(v21, (uint64_t)&v31);
      uint64_t result = 0;
      if (v32) {
        return result;
      }
    }
    if (v7 != v31) {
      return result;
    }
    int v8 = *(unsigned __int8 *)(a1 + 40);
    int v9 = *(unsigned __int8 *)(a2 + 40);
    if (v8 == 255)
    {
      if (v9 != 255) {
        return 0;
      }
    }
    else
    {
      if (v9 == 255) {
        return 0;
      }
      if (v8)
      {
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        return 0;
      }
    }
    sub_1000175A0((uint64_t *)(a1 + 48), (uint64_t)v20);
    sub_1000175A0((uint64_t *)(a2 + 48), (uint64_t)v19);
    sub_1000175A0(v20, (uint64_t)&v33);
    double v10 = v33;
    if (v34)
    {
      sub_1000175A0(v19, (uint64_t)&v35);
      uint64_t result = 0;
      if (v36 != 1) {
        return result;
      }
    }
    else
    {
      sub_1000175A0(v19, (uint64_t)&v35);
      uint64_t result = 0;
      if (v36) {
        return result;
      }
    }
    if (v10 != v35) {
      return result;
    }
    sub_1000175A0((uint64_t *)(a1 + 64), (uint64_t)v18);
    sub_1000175A0((uint64_t *)(a2 + 64), (uint64_t)v17);
    sub_1000175A0(v18, (uint64_t)&v37);
    double v11 = v37;
    if (v38)
    {
      sub_1000175A0(v17, (uint64_t)&v39);
      uint64_t result = 0;
      if (v40 != 1) {
        return result;
      }
    }
    else
    {
      sub_1000175A0(v17, (uint64_t)&v39);
      uint64_t result = 0;
      if (v40) {
        return result;
      }
    }
    if (v11 != v39) {
      return result;
    }
    sub_1000175A0((uint64_t *)(a1 + 80), (uint64_t)v16);
    sub_1000175A0((uint64_t *)(a2 + 80), (uint64_t)v15);
    sub_1000175A0(v16, (uint64_t)&v41);
    double v12 = v41;
    if (v42)
    {
      sub_1000175A0(v15, (uint64_t)&v43);
      uint64_t result = 0;
      if (v44 != 1) {
        return result;
      }
    }
    else
    {
      sub_1000175A0(v15, (uint64_t)&v43);
      uint64_t result = 0;
      if (v44) {
        return result;
      }
    }
    if (v12 != v43) {
      return result;
    }
    int v13 = *(unsigned __int8 *)(a1 + 104);
    int v14 = *(unsigned __int8 *)(a2 + 104);
    if (v13 == 255)
    {
      if (v14 == 255) {
        return 1;
      }
    }
    else if (v14 != 255)
    {
      if (v13)
      {
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else if (v14)
      {
        return 0;
      }
      if (*(double *)(a1 + 96) == *(double *)(a2 + 96)) {
        return 1;
      }
    }
    return 0;
  }
  sub_1000175A0(v23, (uint64_t)&v27);
  uint64_t result = 0;
  if ((v28 & 1) == 0 && v4 == v27) {
    goto LABEL_9;
  }
  return result;
}

BOOL _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV0B6RadiusV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1000175A0((uint64_t *)a1, (uint64_t)v10);
  sub_1000175A0((uint64_t *)a2, (uint64_t)v9);
  sub_1000175A0(v10, (uint64_t)&v11);
  if (v12)
  {
    if (v12 == 1)
    {
      double v4 = v11;
      sub_1000175A0(v9, (uint64_t)&v13);
      BOOL result = 0;
      if (v14 != 1) {
        return result;
      }
    }
    else
    {
      double v4 = v11;
      sub_1000175A0(v9, (uint64_t)&v13);
      BOOL result = 0;
      if (v14 != 2) {
        return result;
      }
    }
  }
  else
  {
    double v4 = v11;
    sub_1000175A0(v9, (uint64_t)&v13);
    BOOL result = 0;
    if (v14) {
      return result;
    }
  }
  if (v4 != v13) {
    return result;
  }
  sub_1000175A0((uint64_t *)(a1 + 16), (uint64_t)v8);
  sub_1000175A0((uint64_t *)(a2 + 16), (uint64_t)v7);
  sub_1000175A0(v8, (uint64_t)&v15);
  if (v16)
  {
    if (v16 == 1)
    {
      double v6 = v15;
      sub_1000175A0(v7, (uint64_t)&v17);
      BOOL result = 0;
      if (v18 != 1) {
        return result;
      }
    }
    else
    {
      double v6 = v15;
      sub_1000175A0(v7, (uint64_t)&v17);
      BOOL result = 0;
      if (v18 != 2) {
        return result;
      }
    }
  }
  else
  {
    double v6 = v15;
    sub_1000175A0(v7, (uint64_t)&v17);
    BOOL result = 0;
    if (v18) {
      return result;
    }
  }
  if (v6 == v17) {
    return *(double *)(a1 + 32) == *(double *)(a2 + 32);
  }
  return result;
}

BOOL _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV16CoordinateOffsetV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(double *)(a1 + 24) != *(double *)(a2 + 24)
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40))
  {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 56);
  if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
      char v3 = 1;
    }
    return (v3 & 1) == 0;
  }
  return (*(unsigned char *)(a2 + 56) & 1) != 0;
}

BOOL _s8SOSBuddy31ConnectionAssistantDisplayStateC7MetricsV23__derived_struct_equalsySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2 || *((double *)a1 + 1) != *((double *)a2 + 1)) {
    return 0;
  }
  double v5 = *((double *)a1 + 4);
  double v4 = *((double *)a1 + 5);
  double v7 = *((double *)a1 + 6);
  double v6 = *((double *)a1 + 7);
  unsigned __int8 v8 = a1[64];
  if (a1[24])
  {
    BOOL result = 0;
    if ((a2[24] & 1) == 0) {
      return result;
    }
LABEL_8:
    if (v5 != *((double *)a2 + 4) || v4 != *((double *)a2 + 5) || v7 != *((double *)a2 + 6)) {
      return result;
    }
    if (v8)
    {
      if ((a2[64] & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((a2[64] & 1) != 0 || v6 != *((double *)a2 + 7)) {
        return result;
      }
    }
    long long v10 = *(_OWORD *)(a1 + 88);
    long long v19 = *(_OWORD *)(a1 + 72);
    long long v20 = v10;
    double v21 = *((double *)a1 + 13);
    long long v11 = *(_OWORD *)(a2 + 88);
    long long v14 = *(_OWORD *)(a2 + 72);
    long long v15 = v11;
    double v16 = *((double *)a2 + 13);
    sub_1000175A0((uint64_t *)&v19, (uint64_t)v23);
    sub_1000175A0((uint64_t *)&v14, (uint64_t)v18);
    sub_1000175A0(v23, (uint64_t)&v24);
    if (v25)
    {
      if (v25 == 1)
      {
        double v12 = v24;
        sub_1000175A0(v18, (uint64_t)&v28);
        BOOL result = 0;
        if (v29 != 1) {
          return result;
        }
      }
      else
      {
        double v12 = v24;
        sub_1000175A0(v18, (uint64_t)&v28);
        BOOL result = 0;
        if (v29 != 2) {
          return result;
        }
      }
    }
    else
    {
      double v12 = v24;
      sub_1000175A0(v18, (uint64_t)&v28);
      BOOL result = 0;
      if (v29) {
        return result;
      }
    }
    if (v12 != v28) {
      return result;
    }
    sub_1000175A0((uint64_t *)&v20, (uint64_t)v22);
    sub_1000175A0((uint64_t *)&v15, (uint64_t)v17);
    sub_1000175A0(v22, (uint64_t)&v26);
    if (v27)
    {
      if (v27 == 1)
      {
        double v13 = v26;
        sub_1000175A0(v17, (uint64_t)&v30);
        BOOL result = 0;
        if (v31 != 1) {
          return result;
        }
      }
      else
      {
        double v13 = v26;
        sub_1000175A0(v17, (uint64_t)&v30);
        BOOL result = 0;
        if (v31 != 2) {
          return result;
        }
      }
    }
    else
    {
      double v13 = v26;
      sub_1000175A0(v17, (uint64_t)&v30);
      BOOL result = 0;
      if (v31) {
        return result;
      }
    }
    if (v13 != v30) {
      return result;
    }
    if (v21 == v16) {
      return *((double *)a1 + 14) == *((double *)a2 + 14);
    }
    return 0;
  }
  BOOL result = 0;
  if ((a2[24] & 1) == 0 && *((double *)a1 + 2) == *((double *)a2 + 2)) {
    goto LABEL_8;
  }
  return result;
}

unint64_t sub_100016030()
{
  unint64_t result = qword_10037F6E8;
  if (!qword_10037F6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F6E8);
  }
  return result;
}

unint64_t sub_100016088()
{
  unint64_t result = qword_10037F6F0;
  if (!qword_10037F6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F6F0);
  }
  return result;
}

uint64_t sub_1000160DC()
{
  return type metadata accessor for ConnectionAssistantDisplayState();
}

uint64_t type metadata accessor for ConnectionAssistantDisplayState()
{
  uint64_t result = qword_10037F750;
  if (!qword_10037F750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100016130()
{
  sub_10001622C();
  if (v0 <= 0x3F)
  {
    sub_1000162DC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10001622C()
{
  if (!qword_10037F760)
  {
    sub_100016288();
    unint64_t v0 = type metadata accessor for Spring();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10037F760);
    }
  }
}

unint64_t sub_100016288()
{
  unint64_t result = qword_10037F768;
  if (!qword_10037F768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037F768);
  }
  return result;
}

void sub_1000162DC()
{
  if (!qword_10037F770)
  {
    unint64_t v0 = type metadata accessor for Spring();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10037F770);
    }
  }
}

__n128 initializeWithCopy for ConnectionAssistantDisplayState.Metrics(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[120]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Metrics()
{
  return &type metadata for ConnectionAssistantDisplayState.Metrics;
}

uint64_t getEnumTagSinglePayload for QuestionnairePolicy.QuestionnaireScope(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.RenderingStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100016578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000165A0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Metrics.RenderingStyle()
{
  return &type metadata for ConnectionAssistantDisplayState.Metrics.RenderingStyle;
}

__n128 initializeWithCopy for ConnectionAssistantDisplayState.Metrics.CoordinateOffset(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.CoordinateOffset(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.CoordinateOffset(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Metrics.CoordinateOffset()
{
  return &type metadata for ConnectionAssistantDisplayState.Metrics.CoordinateOffset;
}

__n128 initializeWithTake for QuestionnaireNavigationPage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.ConnectionRadius(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.ConnectionRadius(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Metrics.ConnectionRadius()
{
  return &type metadata for ConnectionAssistantDisplayState.Metrics.ConnectionRadius;
}

uint64_t initializeWithTake for Question.OptionsPresentationOrderItem(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10001679C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1000167A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value()
{
  return &type metadata for ConnectionAssistantDisplayState.Metrics.ConnectionRadius.Value;
}

__n128 initializeWithCopy for ConnectionAssistantDisplayState.EarthDiameter(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.EarthDiameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.EarthDiameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.EarthDiameter()
{
  return &type metadata for ConnectionAssistantDisplayState.EarthDiameter;
}

uint64_t sub_1000168A8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.EarthDiameter.Value()
{
  return &type metadata for ConnectionAssistantDisplayState.EarthDiameter.Value;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Target(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Target(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Target()
{
  return &type metadata for ConnectionAssistantDisplayState.Target;
}

uint64_t getEnumTagSinglePayload for Question.QuestionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Target.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100016AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Target.State()
{
  return &type metadata for ConnectionAssistantDisplayState.Target.State;
}

void destroy for ConnectionAssistantDisplayState.ConeState(uint64_t a1)
{
}

uint64_t initializeWithCopy for ConnectionAssistantDisplayState.ConeState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ConnectionAssistantDisplayState.ConeState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ConnectionAssistantDisplayState.ConeState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEvents.AppPageEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEvents.AppPageEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.ConeState()
{
  return &type metadata for ConnectionAssistantDisplayState.ConeState;
}

void *initializeWithCopy for ConnectionAssistantDisplayState.Result(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3A1uLL);
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantDisplayState.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 929)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 928);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantDisplayState.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 920) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(unsigned char *)(result + 928) = 0;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 929) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 929) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 928) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.Result()
{
  return &type metadata for ConnectionAssistantDisplayState.Result;
}

__n128 initializeWithCopy for ConnectionAssistantDisplayState.TopInset.RenderingStyle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.TopInset()
{
  return &type metadata for ConnectionAssistantDisplayState.TopInset;
}

uint64_t sub_100016E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037E5A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100016EDC(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10037E5A8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_14:
    uint64_t v12 = 0;
    unsigned __int8 v13 = 1;
    return v12 | ((unint64_t)v13 << 32);
  }
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v8 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  float v9 = 0.0;
  do
  {
    sub_100016E74(v7, (uint64_t)v5);
    double v10 = vabdd_f64(*(double *)&v5[*(int *)(v2 + 40)], *(double *)&v5[*(int *)(v2 + 36)]);
    if (v10 > 0.005)
    {
      sub_10000950C((uint64_t)v5, &qword_10037E5A8);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_10000950C((uint64_t)v5, &qword_10037E5A8);
    if (v10 <= 0.0005)
    {
      float v11 = 5.0;
      if (v9 >= 5.0) {
        goto LABEL_3;
      }
    }
    else
    {
      float v11 = 20.0;
      if (v9 >= 20.0) {
        goto LABEL_3;
      }
    }
    float v9 = v11;
LABEL_3:
    v7 += v8;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  uint64_t v12 = LODWORD(v9);
  if (v9 > 0.0)
  {
    unsigned __int8 v13 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    unsigned __int8 v13 = 1;
  }
  return v12 | ((unint64_t)v13 << 32);
}

unint64_t sub_1000170A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (float *)(a1 + 36);
    float v3 = 0.0;
    while (1)
    {
      float v4 = *(v2 - 1);
      if (*(unsigned char *)v2) {
        break;
      }
      if (v3 < v4) {
        float v3 = *(v2 - 1);
      }
      v2 += 2;
      if (!--v1)
      {
        if (v3 <= 0.0) {
          goto LABEL_9;
        }
        unsigned __int8 v5 = 0;
        float v4 = v3;
        return LODWORD(v4) | ((unint64_t)v5 << 32);
      }
    }
  }
  else
  {
LABEL_9:
    float v4 = 0.0;
  }
  unsigned __int8 v5 = 1;
  return LODWORD(v4) | ((unint64_t)v5 << 32);
}

double sub_10001710C(float32x4_t a1, float32x4_t a2, float a3)
{
  uint64_t v5 = 0;
  while (1)
  {
    float32x4_t v20 = a1;
    float v7 = *(float *)((unint64_t)&v20 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
    float32x4_t v21 = a2;
    float v8 = *(float *)((unint64_t)&v21 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
    BOOL v6 = v7 == v8;
    if (v5 == 2) {
      break;
    }
    while (1)
    {
      ++v5;
      if (v6) {
        break;
      }
      if (v5 == 2) {
        goto LABEL_8;
      }
      BOOL v6 = 0;
    }
  }
  if (v7 != v8)
  {
LABEL_8:
    float32x4_t v9 = vmulq_f32(a1, a2);
    float32x4_t v18 = a2;
    float32x4_t v19 = a1;
    LODWORD(v17) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v9, 2), vaddq_f32(v9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v9.f32, 1))).u32[0];
    float v10 = acosf(fminf(fmaxf(v17, -1.0), 1.0));
    v11.i32[3] = v19.i32[3];
    *(float32x2_t *)v11.f32 = vsub_f32(*(float32x2_t *)v18.f32, vmul_n_f32(*(float32x2_t *)v19.f32, v17));
    v11.f32[2] = v18.f32[2] - vmuls_lane_f32(v17, v19, 2);
    int32x4_t v12 = (int32x4_t)vmulq_f32(v11, v11);
    v12.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1))).u32[0];
    float32x2_t v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
    float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
    v18.i64[0] = vmulq_n_f32(v11, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]).u64[0];
    __float2 v15 = __sincosf_stret(v10 * a3);
    *(float32x2_t *)a1.f32 = vadd_f32(vmul_n_f32(*(float32x2_t *)v19.f32, v15.__cosval), vmul_n_f32(*(float32x2_t *)v18.f32, v15.__sinval));
  }
  return *(double *)a1.i64;
}

double sub_10001725C(double a1, double a2, double a3, double a4, double a5)
{
  float v7 = a1;
  float v8 = -90.0 - a2;
  float v9 = (float)(v8 * 3.1416) / 180.0;
  __float2 v10 = __sincosf_stret((float)(v7 * -3.1416) / 180.0);
  __float2 v11 = __sincosf_stret(v9);
  v12.f32[0] = v10.__cosval * v11.__cosval;
  v12.f32[1] = v10.__cosval * v11.__sinval;
  v12.i64[1] = LODWORD(v10.__sinval);
  float32x4_t v22 = v12;
  float v13 = a3;
  float v14 = -90.0 - a4;
  *(float *)&a4 = (float)(v14 * 3.1416) / 180.0;
  __float2 v15 = __sincosf_stret((float)(v13 * -3.1416) / 180.0);
  __float2 v16 = __sincosf_stret(*(float *)&a4);
  v17.f32[0] = v15.__cosval * v16.__cosval;
  v17.f32[1] = v15.__cosval * v16.__sinval;
  v17.i64[1] = LODWORD(v15.__sinval);
  float32x4_t v18 = v17;
  v17.f32[0] = a5;
  double v24 = sub_10001710C(v22, v18, v17.f32[0]);
  float v20 = asinf(v19);
  atan2f(*((float *)&v24 + 1), *(float *)&v24);
  return (float)((float)(v20 / -3.1416) * 180.0);
}

double sub_1000173CC(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  double v17 = *(double *)(a1 + 104);
  long long v9 = *(_OWORD *)(a1 + 88);
  long long v15 = *(_OWORD *)(a1 + 72);
  long long v16 = v9;
  double v10 = v17;
  sub_1000175A0((uint64_t *)&v16, (uint64_t)v19);
  sub_1000175A0(v19, (uint64_t)&v20);
  if (v21)
  {
    if (v21 == 1) {
      double v11 = a4 - ((a4 - a5 - a3) * v20 + a3);
    }
    else {
      double v11 = v20 * a5;
    }
  }
  else
  {
    double v11 = a4 - (v10 * 0.5 + v20 + a3);
  }
  sub_1000175A0((uint64_t *)&v15, (uint64_t)v18);
  sub_1000175A0(v18, (uint64_t)&v22);
  if (v23)
  {
    if (v23 == 1) {
      double v12 = a4 - ((a4 - a5 - a3) * v22 + a3);
    }
    else {
      double v12 = v22 * a5;
    }
  }
  else
  {
    double v12 = a4 - (v10 * 0.5 + v22 + a3);
  }
  uint64_t v13 = a2 + OBJC_IVAR____TtC8SOSBuddy31ConnectionAssistantDisplayState_inConnectionConeSpring;
  swift_beginAccess();
  return v11 + *(double *)(v13 + *(int *)(sub_100004010(&qword_10037E5A8) + 40)) * (v12 - v11);
}

uint64_t sub_100017540(uint64_t result)
{
  *(unsigned char *)(result + 146) = 0;
  return result;
}

uint64_t sub_100017548(uint64_t a1)
{
  id v2 = *(id *)(a1 + 360);
  return a1;
}

uint64_t sub_100017574(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000175A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for Question.OptionsPresentationOrderItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Question.OptionsPresentationOrderItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.TopInset.Inset()
{
  return &type metadata for ConnectionAssistantDisplayState.TopInset.Inset;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.TopInset.FullScreenTopInsets()
{
  return &type metadata for ConnectionAssistantDisplayState.TopInset.FullScreenTopInsets;
}

uint64_t _s8SOSBuddy31ConnectionAssistantDisplayStateC8TopInsetV14RenderingStyleOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s8SOSBuddy31ConnectionAssistantDisplayStateC8TopInsetV14RenderingStyleOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000176F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1000176FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.TopInset.RenderingStyle()
{
  return &type metadata for ConnectionAssistantDisplayState.TopInset.RenderingStyle;
}

ValueMetadata *type metadata accessor for ConnectionAssistantDisplayState.TopInset.ContentTopInsets()
{
  return &type metadata for ConnectionAssistantDisplayState.TopInset.ContentTopInsets;
}

id sub_100017730()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy14TimeZoneSource_timeZoneDidChange;
  sub_100004010(&qword_100393BF0);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy14TimeZoneSource__observers] = &_swiftEmptyArrayStorage;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for TimeZoneSource();
  [super init];
  uint64_t v4 = qword_10037DD80;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  id v7 = v5;
  float v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    double v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)double v10 = 136446210;
    id v11 = v7;
    id v12 = [v11 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1001B3178(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "init: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v7;
}

id sub_1000179A8()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for TimeZoneSource();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for TimeZoneSource()
{
  return self;
}

uint64_t sub_100017C34()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DE30 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B68);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TimeZoneSource::start", v10, 2u);
    swift_slowDealloc();
  }

  id v11 = [self defaultCenter];
  id v12 = [self mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000185FC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025639C;
  aBlock[3] = &unk_10034E4D0;
  objc_super v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = [v11 addObserverForName:NSSystemTimeZoneDidChangeNotification object:0 queue:v12 usingBlock:v14];
  _Block_release(v14);

  long long v16 = (void *)(v1 + OBJC_IVAR____TtC8SOSBuddy14TimeZoneSource__observers);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

void sub_100017F88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000182CC();
  }
}

uint64_t sub_100017FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DE30 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B68);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TimeZoneSource::stop", v10, 2u);
    swift_slowDealloc();
  }

  id v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8SOSBuddy14TimeZoneSource__observers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t *v11 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_16;
  }
LABEL_7:
  uint64_t result = self;
  if (v13 >= 1)
  {
    id v15 = (void *)result;
    uint64_t v16 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v17 = *(void *)(v12 + 8 * v16 + 32);
        swift_unknownObjectRetain();
      }
      ++v16;
      id v18 = [v15 defaultCenter];
      [v18 removeObserver:v17];
      swift_unknownObjectRelease();
    }
    while (v13 != v16);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000182CC()
{
  uint64_t v1 = type metadata accessor for TimeZone();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DE30 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B68);
  id v6 = v0;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = v16;
    *(_DWORD *)os_log_type_t v9 = 136446210;
    id v15 = v9 + 4;
    static TimeZone.autoupdatingCurrent.getter();
    sub_10001856C();
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v11 = v1;
    unint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v11);
    uint64_t v17 = sub_1001B3178(v10, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v1 = v11;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Time zone changed to %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  static TimeZone.autoupdatingCurrent.getter();
  PassthroughSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

unint64_t sub_10001856C()
{
  unint64_t result = qword_10037FAE0;
  if (!qword_10037FAE0)
  {
    type metadata accessor for TimeZone();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037FAE0);
  }
  return result;
}

uint64_t sub_1000185C4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000185FC()
{
}

uint64_t sub_100018604(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100018614()
{
  return swift_release();
}

uint64_t sub_10001861C()
{
  uint64_t v1 = v0;
  if (qword_10037DDE0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A78);
  swift_retain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = *(void *)(v1 + 24);
    unint64_t v7 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Releasing LocationAssertion: '%{public}s'", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  if (swift_weakLoadStrong())
  {
    sub_10001967C();
    swift_release();
  }
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000187FC()
{
  sub_10001861C();

  return swift_deallocClassInstance();
}

uint64_t sub_100018830()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for GeoLocationSource());
  swift_retain();
  *(void *)(v1 + 32) = [v2 init];
  *(void *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 1;
  *(void *)(v1 + 80) = [objc_allocWithZone((Class)NSLock) init];
  *(void *)(v1 + 88) = 0;
  swift_release();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  uint64_t v3 = qword_10037DD80;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 136446210;
    type metadata accessor for GeoLocationModel();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "init: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

void sub_100018AAC()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 80);
}

uint64_t sub_100018AE4()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for GeoLocationModel();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();

  swift_release();
  return v1;
}

uint64_t sub_100018CD4()
{
  sub_100018AE4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GeoLocationModel()
{
  return self;
}

void sub_100018D2C()
{
  uint64_t v1 = v0;
  sub_10000FDBC();
  swift_retain();
  uint64_t v2 = static OS_dispatch_queue.main.getter();
  sub_100004010(&qword_10037FD48);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    os_log_type_t v4 = (void *)sub_100265020((unint64_t)&_swiftEmptyArrayStorage);
  }
  else {
    os_log_type_t v4 = &_swiftEmptySetSingleton;
  }
  *(void *)(v3 + 32) = v4;
  swift_weakAssign();
  swift_release();
  *(void *)(v3 + 24) = v2;
  uint64_t v5 = swift_retain();
  sub_1002A499C(v5, (uint64_t)sub_100018ED0, 0);
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_1002A4C90(v6, (uint64_t)sub_100018F4C, 0);
  swift_retain();
  swift_release();
  swift_release();
  *(void *)(v1 + 40) = v7;
  swift_release();
  id v8 = *(id *)(v1 + 32);
  sub_1000BEF94();
}

uint64_t sub_100018ED0(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 48);
  if v4 == 2 || ((v3 ^ v4))
  {
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
  }
  *(unsigned char *)(a1 + 48) = v3;
  return sub_10001900C(v4);
}

uint64_t sub_100018F4C(uint64_t a1, float64x2_t *a2)
{
  float64x2_t v3 = (float64x2_t)vdupq_n_s64(0x40C3880000000000uLL);
  float64x2_t v4 = vdivq_f64(vrndaq_f64(vmulq_f64(*a2, v3)), v3);
  uint64_t v5 = *(uint64_t *)(a1 + 56);
  uint64_t v6 = *(uint64_t *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 72);
  if ((v7 & 1) != 0 || (v4.f64[0] == *(double *)&v5 ? (BOOL v8 = v4.f64[1] == *(double *)&v6) : (BOOL v8 = 0), !v8))
  {
    float64x2_t v10 = v4;
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
    float64x2_t v4 = v10;
  }
  *(float64x2_t *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 72) = 0;
  return sub_100019274(v5, v6, v7);
}

uint64_t sub_10001900C(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + 48);
  if (v2 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v2))
  {
    return result;
  }
  if (qword_10037DDE0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9A78);
  swift_retain_n();
  float64x2_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "locationIsAuthorized changed from %s to %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100019834();
  return Subject<>.send()();
}

uint64_t sub_100019274(uint64_t result, uint64_t a2, char a3)
{
  if (*(unsigned char *)(v3 + 72))
  {
    if (a3) {
      return result;
    }
  }
  else if ((a3 & 1) == 0 && *(double *)(v3 + 56) == *(double *)&result && *(double *)(v3 + 64) == *(double *)&a2)
  {
    return result;
  }
  if (qword_10037DDE0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9A78);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_100004010(qword_10037FD50);
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = String.init<A>(describing:)();
    sub_1001B3178(v11, v12, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "lastLocation changed from %s to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100019834();
  *(double *)&unint64_t result = COERCE_DOUBLE(Subject<>.send()());
  return result;
}

void sub_1000194F0()
{
  uint64_t v1 = v0;
  int v2 = *(void **)(v0 + 80);
  [v2 lock];
  uint64_t v3 = *(void *)(v1 + 88);
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 88) = v3 + 1;
    [v2 unlock];
    if (qword_10037DDE0 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9A78);
  swift_retain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v7 = 134349056;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Outstanding assertion counter: %{public}ld", v7, 0xCu);
    swift_slowDealloc();

    if (v3) {
      return;
    }
  }
  else
  {

    swift_release();
    if (v3) {
      return;
    }
  }
  id v8 = *(id *)(v1 + 32);
  sub_1000BF9A4();
}

void sub_10001967C()
{
  uint64_t v1 = v0;
  int v2 = *(void **)(v0 + 80);
  [v2 lock];
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 88) = v4;
    [v2 unlock];
    if (qword_10037DDE0 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9A78);
  swift_retain();
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v8 = 134349056;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Outstanding assertion counter: %{public}ld", v8, 0xCu);
    swift_slowDealloc();

    if (v4 > 0) {
      return;
    }
  }
  else
  {

    swift_release();
    if (v4 > 0) {
      return;
    }
  }
  id v9 = *(id *)(v1 + 32);
  sub_1000BF9CC();
}

uint64_t type metadata accessor for GeoLocationModel.LocationAssertion()
{
  return self;
}

unint64_t sub_100019834()
{
  unint64_t result = qword_10037FD40;
  if (!qword_10037FD40)
  {
    sub_1000094C4(&qword_100393AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037FD40);
  }
  return result;
}

uint64_t sub_100019890(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  swift_weakInit();
  if (qword_10037DDE0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A78);
  swift_bridgeObjectRetain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 136446210;
    swift_bridgeObjectRetain();
    sub_1001B3178(a2, a3, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Acquiring LocationAssertion: '%{public}s'", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_weakAssign();
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  sub_1000194F0();
  return v4;
}

unint64_t CLAuthorizationStatus.debugDescription.getter(int a1)
{
  unint64_t result = 0x65746544746F6E2ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x636972747365722ELL;
      break;
    case 2:
      unint64_t result = 0x6465696E65642ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      unint64_t result = 0x756C61567761722ELL;
      break;
  }
  return result;
}

unint64_t sub_100019BD4()
{
  return CLAuthorizationStatus.debugDescription.getter(*v0);
}

uint64_t sub_100019BDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100019C3C()
{
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100019C6C()
{
  sub_100019C3C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EventSubscriptions()
{
  return sub_100006BAC();
}

char *sub_100019CB8(uint64_t a1, uint64_t a2, uint8_t *a3, uint8_t *a4)
{
  uint64_t v44 = a2;
  float v45 = a4;
  uint64_t v42 = a1;
  double v43 = a3;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  double v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caConfig] = 0;
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNames;
  *(void *)&v4[v9] = sub_100285B34(_swiftEmptyArrayStorage);
  unint64_t v10 = self;
  uint64_t v11 = v4;
  id v12 = [v10 mainBundle];
  id v13 = [v12 bundleIdentifier];

  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v16 = 0x80000001002C5A40;
    uint64_t v14 = 0xD000000000000012;
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  v48[0] = v14;
  v48[1] = v16;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = 0x6E65696C4354432ELL;
  v17._object = (void *)0xE900000000000074;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v48[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100011C28((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v41);
  uint64_t v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__queue] = v18;
  id v19 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v18];
  *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client] = v19;
  double v20 = &v11[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caStateHandler];
  uint64_t v21 = v44;
  double v22 = v45;
  *(void *)double v20 = v42;
  *((void *)v20 + 1) = v21;
  char v23 = (uint8_t **)&v11[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNameHandler];
  *char v23 = v43;
  v23[1] = v22;
  swift_retain();
  swift_retain();

  double v24 = (objc_class *)type metadata accessor for CoreTelephonyCAAgent();
  v47.receiver = v11;
  v47.super_class = v24;
  char v25 = (char *)[super init];
  double v26 = *(void **)&v25[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client];
  char v27 = v25;
  [v26 setDelegate:v27];
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9958);
  char v29 = v27;
  double v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    char v32 = (uint8_t *)swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)char v32 = 136446210;
    double v43 = v32 + 4;
    double v33 = v29;
    id v34 = [v33 description];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v46 = sub_1001B3178(v35, v37, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%{public}s] init", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001A4F0();

  swift_release();
  swift_release();
  return v29;
}

id sub_10001A240()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for CoreTelephonyCAAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t sub_10001A4F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    sub_10001A758();
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    uint64_t v8 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000029, 0x80000001002C5FD0);
    unint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client);
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v8;
    aBlock[4] = sub_10001EB54;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B09C;
    aBlock[3] = &unk_10034E928;
    id v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v9 getConnectionAssistantConfig:v12];
    _Block_release(v12);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001A758()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_10037DDA8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A99D0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "_fetchCarrierNames", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = ObjectType;
  v11[4] = sub_10001E6F4;
  v11[5] = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_10001B09C;
  v11[3] = &unk_10034E6A8;
  uint64_t v10 = _Block_copy(v11);
  swift_release();
  [v7 getActiveContextsWithCallback:v10];
  _Block_release(v10);
}

void sub_10001A920(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000FD84(v17, (uint64_t)qword_1003A99D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v19 = 136446210;
      uint64_t v46 = a2;
      swift_errorRetain();
      sub_100004010(&qword_100385630);
      uint64_t v20 = String.init<A>(describing:)();
      uint64_t v46 = sub_1001B3178(v20, v21, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v18, "getConnectionAssistantConfig failed: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      char v29 = v44;
    }
  }
  else
  {
    uint64_t v42 = v14;
    uint64_t v43 = v13;
    uint64_t v41 = a3 + 16;
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000FD84(v22, (uint64_t)qword_1003A99D0);
    char v23 = a1;
    double v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v44 = a1;
    if (v26)
    {
      uint64_t v39 = a4;
      uint64_t v40 = v9;
      char v27 = (uint8_t *)swift_slowAlloc();
      char v38 = (void *)swift_slowAlloc();
      *(_DWORD *)char v27 = 138543362;
      if (a1)
      {
        aBlock[0] = (uint64_t)v23;
        uint64_t v28 = v23;
      }
      else
      {
        aBlock[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v38 = v44;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "CA config: %{public}@", v27, 0xCu);
      sub_100004010((uint64_t *)&unk_1003839E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a4 = v39;
      uint64_t v9 = v40;
    }
    else
    {
    }
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    double v30 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    double v33 = (void *)swift_allocObject();
    id v34 = v44;
    v33[2] = v31;
    v33[3] = v34;
    v33[4] = a4;
    aBlock[4] = (uint64_t)sub_10001EBCC;
    aBlock[5] = (uint64_t)v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100207A1C;
    aBlock[3] = (uint64_t)&unk_10034E978;
    uint64_t v35 = _Block_copy(aBlock);
    unint64_t v36 = v23;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  }
}

void sub_10001AFE4(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v6 = (void *)Strong;
    id v7 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caConfig);
    *(void *)(Strong + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caConfig) = a2;
    id v8 = a2;
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_10001B0A0(a3, 0, 0);
  }
}

void sub_10001B0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v15[2] = v14;
    v15[3] = a1;
    v15[4] = a2;
    void v15[5] = a3;
    aBlock[4] = sub_10001EA70;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B09C;
    aBlock[3] = &unk_10034E888;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    sub_10001EA7C(a2);
    swift_release();
    [v13 getConnectionAssistantState:v16];
    _Block_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_10001B2C8(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    double v54 = a3;
    uint64_t v50 = a6;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000FD84(v26, (uint64_t)qword_1003A99D0);
    id v27 = a1;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v53 = v13;
    uint64_t v48 = a4;
    uint64_t v49 = a5;
    if (v30)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v47 = v12;
      aBlock[0] = v32;
      *(_DWORD *)uint64_t v31 = 136446210;
      float v45 = v31 + 4;
      uint64_t v56 = (uint64_t)a1;
      id v33 = v27;
      sub_100004010(&qword_10037FFA8);
      uint64_t v34 = String.init<A>(describing:)();
      uint64_t v46 = v20;
      uint64_t v56 = sub_1001B3178(v34, v35, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v20 = v46;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "getConnectionAssistantState: %{public}s", v31, 0xCu);
      swift_arrayDestroy();
      uint64_t v12 = v47;
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a1) {
        return;
      }
    }
    else
    {

      if (!a1) {
        return;
      }
    }
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    id v37 = v27;
    char v38 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v39 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = v39;
    v41[3] = v37;
    uint64_t v42 = v49;
    v41[4] = v48;
    v41[5] = v42;
    v41[6] = v50;
    aBlock[4] = (uint64_t)sub_10001EAE4;
    aBlock[5] = (uint64_t)v41;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100207A1C;
    aBlock[3] = (uint64_t)&unk_10034E8D8;
    uint64_t v43 = _Block_copy(aBlock);
    swift_retain();
    id v44 = v37;
    sub_10001EA7C(v42);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v52);
    return;
  }
  swift_errorRetain();
  if (qword_10037DDA8 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000FD84(v21, (uint64_t)qword_1003A99D0);
  swift_errorRetain();
  swift_errorRetain();
  double v54 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v54, v22))
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)char v23 = 136446210;
    uint64_t v56 = a2;
    swift_errorRetain();
    sub_100004010(&qword_10037FFB0);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v56 = sub_1001B3178(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v54, v22, "getConnectionAssistantState: %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    unint64_t v36 = v54;
  }
}

uint64_t sub_10001B9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)result;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(result
                                                                                    + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caStateHandler);
    uint64_t v12 = *(void **)(result + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caConfig);
    if (v12)
    {
      swift_retain();
      id v13 = v12;
      sub_10001BB04();
      double v15 = v14;
      double v17 = v16;
    }
    else
    {
      uint64_t v18 = qword_10037DC88;
      swift_retain();
      if (v18 != -1) {
        swift_once();
      }
      double v15 = *(double *)&qword_1003A9810;
      double v17 = *(double *)algn_1003A9818;
    }
    v11(a2, a3, a4, a5, v15, v17);

    return swift_release();
  }
  return result;
}

void sub_10001BB04()
{
  id v1 = [v0 modelVector];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 defaultVector];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 x];
      if (v5)
      {
        char v6 = v5;
        id v7 = [v5 offset];

        [v7 doubleValueSafe];
      }
      id v8 = [v4 y];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v8 offset];

        [v10 doubleValueSafe];
      }

      return;
    }
  }
  if (qword_10037DC88 != -1) {
    swift_once();
  }
}

uint64_t type metadata accessor for CoreTelephonyCAAgent()
{
  return self;
}

uint64_t sub_10001BCC0(void *a1)
{
  uint64_t v2 = v1;
  char v23 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (void **)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v14 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__queue);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    double v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = v23;
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v20;
    aBlock[4] = sub_10001EA18;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_10034E838;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v20;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001C098(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void (**)(uint64_t, void, void, void, double, double))(result
                                                                                + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caStateHandler);
    char v6 = *(void **)(result + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__caConfig);
    if (v6)
    {
      swift_retain();
      id v7 = v6;
      sub_10001BB04();
      double v9 = v8;
      double v11 = v10;
    }
    else
    {
      uint64_t v12 = qword_10037DC88;
      swift_retain();
      if (v12 != -1) {
        swift_once();
      }
      double v9 = *(double *)&qword_1003A9810;
      double v11 = *(double *)algn_1003A9818;
    }
    v5(a2, 0, 0, 0, v9, v11);

    return swift_release();
  }
  return result;
}

void sub_10001C220(void *a1, id a2)
{
  uint64_t v3 = v2;
  char v6 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  double v9 = (void *)((char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v10 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__queue);
  *double v9 = v10;
  (*(void (**)(void *, void, void *))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_5;
  }
  if (!a1 || !a2) {
    return;
  }
  uint64_t v12 = qword_10037DDA8;
  char v6 = a1;
  a2 = a2;
  if (v12 != -1) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A99D0);
  double v14 = v6;
  id v15 = a2;
  double v16 = v14;
  double v17 = v15;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  int v20 = v19;
  p_base_prots = &SessionEnvironmentFactory.base_prots;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v22 = swift_slowAlloc();
    int v43 = v20;
    uint64_t v23 = v22;
    uint64_t v44 = swift_slowAlloc();
    aBlock[0] = v44;
    *(_DWORD *)uint64_t v23 = 136315394;
    id v46 = [v16 slotID];
    type metadata accessor for CTSubscriptionSlot(0);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v45 = v3;
    id v46 = (id)sub_1001B3178(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    v42[1] = v23 + 14;
    uint64_t v26 = v17;
    id v27 = [v26 description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v31 = v28;
    p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
    id v46 = (id)sub_1001B3178(v31, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v3 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v43, "displayStatusChanged for %s: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (objc_msgSend(v16, (SEL)p_base_prots[228]))
  {
    double v17 = v17;
    if (sub_10001E78C(v17))
    {
      uint64_t v32 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client);
      id v33 = String._bridgeToObjectiveC()();
      uint64_t v34 = [objc_allocWithZone((Class)CTBundle) initWithBundleType:1];
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v36 = (void *)swift_allocObject();
      v36[2] = v35;
      v36[3] = v16;
      v36[4] = 0;
      aBlock[4] = (uint64_t)sub_10001EC28;
      aBlock[5] = (uint64_t)v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10001B09C;
      aBlock[3] = (uint64_t)&unk_10034E7E8;
      id v37 = _Block_copy(aBlock);
      char v38 = v16;
      swift_release();
      [v32 copyCarrierBundleValueWithDefault:v38 key:v33 bundleType:v34 completion:v37];
      _Block_release(v37);

      uint64_t v39 = v17;
      double v17 = v33;
    }
    else
    {

      sub_10001D5A0(v16, 0, 0, 0);
      uint64_t v39 = v16;
      uint64_t v34 = v17;
    }
  }
  else
  {
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v40, "displayStatusChanged: context is irrelevant, skipping", v41, 2u);
      swift_slowDealloc();
      uint64_t v39 = v16;
    }
    else
    {
      uint64_t v39 = v34;
      uint64_t v34 = v16;
    }
  }
}

void sub_10001C830(void *a1, uint64_t a2)
{
  if (a2)
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000FD84(v3, (uint64_t)qword_1003A99D0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      uint64_t v37 = a2;
      swift_errorRetain();
      sub_100004010(&qword_100385630);
      uint64_t v6 = String.init<A>(describing:)();
      uint64_t v37 = sub_1001B3178(v6, v7, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "_fetchCarrierNames: getActiveContexts failed: %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_28;
  }
  if (a1)
  {
    id v8 = [a1 subscriptions];
    if (v8)
    {
      double v9 = v8;
      sub_10001E6FC(0, (unint64_t *)&unk_10037FF90);
      unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        if (v11) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11)
        {
LABEL_10:
          if (v11 < 1)
          {
            __break(1u);
            goto LABEL_47;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v13 = *(id *)(v10 + 8 * i + 32);
            }
            double v14 = v13;
            id v15 = [v13 context];
            if (v15 && (double v16 = v15, v17 = [v15 slotID], v16, v17))
            {
              id v18 = [v14 context];

              if (v18)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v22 = aBlock[0];
LABEL_34:
          swift_bridgeObjectRelease();
          if (v22 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
            if (v23)
            {
LABEL_36:
              if (v23 >= 1)
              {
                swift_beginAccess();
                swift_beginAccess();
                for (uint64_t j = 0; j != v23; ++j)
                {
                  if ((v22 & 0xC000000000000001) != 0) {
                    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v25 = *(id *)(v22 + 8 * j + 32);
                  }
                  uint64_t v26 = v25;
                  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                  if (Strong)
                  {
                    uint64_t v28 = (void *)Strong;
                    id v29 = *(id *)(Strong + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client);

                    uint64_t v30 = swift_allocObject();
                    uint64_t v31 = (void *)swift_unknownObjectWeakLoadStrong();
                    swift_unknownObjectWeakInit();

                    uint64_t v32 = (void *)swift_allocObject();
                    uint64_t v32[2] = v26;
                    v32[3] = v30;
                    v32[4] = v22;
                    aBlock[4] = (uint64_t)sub_10001E780;
                    aBlock[5] = (uint64_t)v32;
                    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    aBlock[2] = (uint64_t)sub_10001B09C;
                    aBlock[3] = (uint64_t)&unk_10034E6F8;
                    id v33 = _Block_copy(aBlock);
                    swift_bridgeObjectRetain();
                    id v34 = v26;
                    swift_release();
                    [v29 copyRegistrationDisplayStatus:v34 completion:v33];

                    _Block_release(v33);
                    uint64_t v26 = v29;
                  }
                }
                goto LABEL_45;
              }
LABEL_47:
              __break(1u);
              return;
            }
          }
          else
          {
            uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v23) {
              goto LABEL_36;
            }
          }
LABEL_45:
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v22 = (unint64_t)&_swiftEmptyArrayStorage;
      goto LABEL_34;
    }
  }
  if (qword_10037DDA8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000FD84(v19, (uint64_t)qword_1003A99D0);
  oslog = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v20, "_fetchCarrierNames: no relevant contexts", v21, 2u);
    swift_slowDealloc();
  }
LABEL_28:
}

void sub_10001CEB0(NSObject *a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A99D0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v8 = 136446210;
      id v53 = a2;
      swift_errorRetain();
      sub_100004010(&qword_100385630);
      uint64_t v9 = String.init<A>(describing:)();
      id v53 = (id)sub_1001B3178(v9, v10, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "_fetchCarrierNames: copyRegistrationDisplayStatus failed: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000FD84(v14, (uint64_t)qword_1003A99D0);
    id v15 = a1;
    id v16 = a3;
    id v17 = v15;
    id v18 = a1;
    id v19 = v16;
    os_log_type_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    os_log_t osloga = v18;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      id v53 = [v19 slotID];
      type metadata accessor for CTSubscriptionSlot(0);
      uint64_t v23 = String.init<A>(describing:)();
      id v53 = (id)sub_1001B3178(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      id v53 = v18;
      id v25 = v17;
      sub_100004010(&qword_10037FFA0);
      uint64_t v26 = String.init<A>(describing:)();
      id v53 = (id)sub_1001B3178(v26, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "displayStatus fetched for %s: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v29 = (char *)Strong;
      if (a5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v31 = &_swiftEmptyArrayStorage;
      if (v30)
      {
        uint64_t v49 = v29;
        aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
        sub_1001BF664(0, v30 & ~(v30 >> 63), 0);
        if (v30 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v32 = 0;
        uint64_t v31 = (void *)aBlock[0];
        do
        {
          if ((a5 & 0xC000000000000001) != 0) {
            id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v33 = *(id *)(a5 + 8 * v32 + 32);
          }
          id v34 = v33;
          id v35 = [v33 slotID];

          aBlock[0] = (uint64_t)v31;
          unint64_t v37 = v31[2];
          unint64_t v36 = v31[3];
          if (v37 >= v36 >> 1)
          {
            sub_1001BF664(v36 > 1, v37 + 1, 1);
            uint64_t v31 = (void *)aBlock[0];
          }
          ++v32;
          _OWORD v31[2] = v37 + 1;
          v31[v37 + 4] = v35;
        }
        while (v30 != v32);
        id v29 = v49;
      }
      if (osloga)
      {
        char v38 = v17;
        if (sub_10001E78C(v38))
        {
          uint64_t v39 = *(void **)&v29[OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__client];
          os_log_type_t v40 = v19;
          NSString v41 = String._bridgeToObjectiveC()();
          id v42 = [objc_allocWithZone((Class)CTBundle) initWithBundleType:1];
          uint64_t v43 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v44 = (void *)swift_allocObject();
          v44[2] = v43;
          v44[3] = v40;
          v44[4] = v31;
          aBlock[4] = (uint64_t)sub_10001E94C;
          aBlock[5] = (uint64_t)v44;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_10001B09C;
          aBlock[3] = (uint64_t)&unk_10034E748;
          uint64_t v45 = _Block_copy(aBlock);
          id v46 = v40;
          uint64_t v47 = v29;
          id v48 = v46;
          swift_bridgeObjectRetain();
          swift_release();
          [v39 copyCarrierBundleValueWithDefault:v48 key:v41 bundleType:v42 completion:v45];
          _Block_release(v45);

          swift_bridgeObjectRelease();
          return;
        }
      }
      sub_10001D5A0(v19, 0, 0, (uint64_t)v31);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10001D5A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = (void *)swift_allocObject();
  uint64_t v15[2] = v14;
  v15[3] = a1;
  v15[4] = v20;
  void v15[5] = a3;
  v15[6] = a4;
  aBlock[4] = sub_10001E9A8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10034E798;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v17 = a1;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

uint64_t sub_10001D8C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a2)
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A99D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_errorRetain();
      sub_100004010(&qword_100385630);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "_fetchCarrierName: copyCarrierBundleValue failed: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v13 = a1;
    if (!a1) {
      goto LABEL_12;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      v17[0] = 0;
      v17[1] = 0;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();
      uint64_t v13 = 0;
      goto LABEL_12;
    }
  }
  uint64_t v13 = 0;
LABEL_12:
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    sub_10001D5A0(a4, v13, 0, a5);
  }
  return swift_bridgeObjectRelease();
}

void sub_10001DB38(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10001DBC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_10001DC58((uint64_t)[a2 slotID], a3, a4, a5);
  }
}

uint64_t sub_10001DC58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::UInt v53 = result;
  if (!result) {
    return result;
  }
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  uint64_t v8 = a2;
  if (!a4)
  {
    char v41 = 0;
    goto LABEL_30;
  }
  os_log_type_t v9 = (void *)sub_100285B34(&_swiftEmptyArrayStorage);
  uint64_t v10 = *(void *)(v6 + 16);
  if (!v10)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = (uint64_t)v9;
    uint64_t v8 = a2;
    sub_100268D70(a2, a3, v53, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    char v38 = (unint64_t *)(v5 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNames);
    swift_beginAccess();
    unint64_t v39 = *v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v40 = sub_10012335C(v39, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      *char v38 = v57;
    }
    swift_bridgeObjectRelease();
    char v41 = v40 ^ 1;
LABEL_30:
    uint64_t v42 = v5 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNames;
    swift_beginAccess();
    uint64_t v43 = *(void *)v42;
    if (*(void *)(*(void *)v42 + 16))
    {
      uint64_t result = sub_1001BEB14(v53);
      if (v44)
      {
        uint64_t v45 = (uint64_t *)(*(void *)(v43 + 56) + 16 * result);
        uint64_t v46 = v45[1];
        if (v46)
        {
          if (a3)
          {
            uint64_t result = *v45;
            BOOL v47 = *v45 == v8 && v46 == a3;
            if (v47 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
            {
LABEL_39:
              if ((v41 & 1) == 0) {
                return result;
              }
              goto LABEL_43;
            }
          }
        }
        else if (!a3)
        {
          goto LABEL_39;
        }
      }
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = *(void *)v42;
    *(void *)uint64_t v42 = 0x8000000000000000;
    sub_100268D70(v8, a3, v53, v48);
    *(void *)uint64_t v42 = v56;
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_43:
    uint64_t v49 = sub_10001E08C(v5);
    (*(void (**)(uint64_t))(v5 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNameHandler))(v49);
    return swift_bridgeObjectRelease();
  }
  uint64_t v50 = a3;
  uint64_t v51 = v4;
  uint64_t v11 = v4 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNames;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v12 = 0;
  uint64_t v54 = v11;
  uint64_t v55 = v6;
  while (1)
  {
    Swift::UInt v14 = *(void *)(v6 + 8 * v12 + 32);
    uint64_t v15 = *(void *)v11;
    if (!*(void *)(*(void *)v11 + 16) || (unint64_t v16 = sub_1001BEB14(*(void *)(v6 + 8 * v12 + 32)), (v17 & 1) == 0))
    {
      unint64_t v30 = sub_1001BEB14(v14);
      if (v31)
      {
        unint64_t v32 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000A08C8();
        }
        sub_1001C09F0(v32, (uint64_t)v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_7;
    }
    id v18 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = sub_1001BEB14(v14);
    uint64_t v24 = v9[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (v9[3] >= v26)
    {
      if (v21)
      {
        if ((v22 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        sub_1000A08C8();
        if ((v27 & 1) == 0) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      sub_10009CDA0(v26, v21);
      unint64_t v28 = sub_1001BEB14(v14);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_47;
      }
      unint64_t v23 = v28;
      if ((v27 & 1) == 0)
      {
LABEL_21:
        v9[(v23 >> 6) + 8] |= 1 << v23;
        *(void *)(v9[6] + 8 * v23) = v14;
        id v33 = (void *)(v9[7] + 16 * v23);
        void *v33 = v19;
        v33[1] = v20;
        uint64_t v34 = v9[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_46;
        }
        uint64_t v9[2] = v36;
        goto LABEL_6;
      }
    }
    uint64_t v13 = (void *)(v9[7] + 16 * v23);
    swift_bridgeObjectRelease();
    void *v13 = v19;
    v13[1] = v20;
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v11 = v54;
    uint64_t v6 = v55;
LABEL_7:
    if (v10 == ++v12)
    {
      swift_bridgeObjectRelease();
      a3 = v50;
      uint64_t v5 = v51;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  type metadata accessor for CTSubscriptionSlot(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10001E08C(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC8SOSBuddy20CoreTelephonyCAAgent__carrierNames);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  if (!*(void *)(*v1 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = v3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    if (v12[1])
    {
      uint64_t v17 = *v12;
      swift_bridgeObjectRetain();
      return v17;
    }
  }
  int64_t v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v13 >= v9) {
    return 0;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v13);
  ++v4;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 1;
  if (v13 + 1 >= v9) {
    return 0;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v4);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 2;
  if (v13 + 2 >= v9) {
    return 0;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v4);
  if (v14)
  {
LABEL_21:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = v16 + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return 0;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 0;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10001E1F8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DDA8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99D0);
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "activeSubscriptionsDidChange", v10, 2u);
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  unint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10001E69C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10034E658;
  int64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100011C28((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

void sub_10001E57C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10001A758();
  }
}

ValueMetadata *type metadata accessor for CorrectionVector()
{
  return &type metadata for CorrectionVector;
}

void sub_10001E628()
{
  qword_1003A9810 = 0;
  *(void *)algn_1003A9818 = 0;
}

BOOL sub_10001E638(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_10001E664()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001E69C()
{
}

uint64_t sub_10001E6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001E6B4()
{
  return swift_release();
}

uint64_t sub_10001E6BC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10001E6F4(void *a1, uint64_t a2)
{
}

uint64_t sub_10001E6FC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10001E738()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10001E780(NSObject *a1, void *a2)
{
  sub_10001CEB0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10001E78C(void *a1)
{
  if (![a1 isSatelliteSystem])
  {
    char v7 = 0;
    return v7 & 1;
  }
  id v2 = [a1 registrationDisplayStatus];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  if (kCTRegistrationStatusRegisteredHome)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v6)
    {
      if (v4 == v8 && v6 == v9) {
        goto LABEL_22;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        char v7 = 1;
        return v7 & 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v12 = [a1 registrationDisplayStatus];
    if (v12)
    {
      int64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    if (kCTRegistrationStatusRegisteredRoaming)
    {
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (!v16)
      {
        char v7 = 0;
LABEL_26:
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      if (v14 != v17 || v16 != v18)
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_25;
      }
LABEL_22:
      char v7 = 1;
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10001E934()
{
  return sub_10001EB74((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10001E94C(uint64_t a1, uint64_t a2)
{
  return sub_10001D8C0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10001E958()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001E9A8()
{
  return sub_10001EAFC((uint64_t (*)(void, void, void, void, void))sub_10001DBC4);
}

uint64_t sub_10001E9C0()
{
  return sub_10001EB74((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10001E9D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001EA18()
{
  return sub_10001C098(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10001EA20()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10001EA70(void *a1, uint64_t a2)
{
  sub_10001B2C8(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10001EA7C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10001EA8C()
{
  swift_release();

  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001EAE4()
{
  return sub_10001EAFC(sub_10001B9D0);
}

uint64_t sub_10001EAFC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10001EB14()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10001EB54(NSObject *a1, uint64_t a2)
{
  sub_10001A920(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10001EB5C()
{
  return sub_10001EB74((void (*)(void))&_swift_release);
}

uint64_t sub_10001EB74(void (*a1)(void))
{
  swift_release();

  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

void sub_10001EBCC()
{
  sub_10001AFE4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

BOOL sub_10001EC34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 5;
  BOOL v6 = v3 != 5 && v2 == v3;
  if (v2 == 5) {
    return v4;
  }
  else {
    return v6;
  }
}

BOOL sub_10001EC58(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_10001EC70(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  uint64_t v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  uint64_t v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1000205F0((uint64_t)v7, (uint64_t)v9);
}

id sub_10001ECDC()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy17StewieStateSource_stateDidChange;
  sub_100004010(&qword_10037FFF8);
  swift_allocObject();
  long long v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent] = 0;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for StewieStateSource();
  [super init];
  uint64_t v4 = qword_10037DD80;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    id v11 = v7;
    id v12 = [v11 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1001B3178(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "init: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v7;
}

id sub_10001EF4C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for StewieStateSource();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for StewieStateSource()
{
  return self;
}

uint64_t sub_10001F1D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DE28 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B50);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "start", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = objc_allocWithZone((Class)type metadata accessor for StewieStateMonitorAgent());
  id v13 = sub_100147B50((uint64_t)sub_1000208AC, v11);
  uint64_t v14 = OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent;
  unint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent) = v13;

  uint64_t v16 = *(void **)(v1 + v14);
  if (v16)
  {
    id v17 = v16;
    char v18 = sub_1001475D0();
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_10001F430()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_retain();

    sub_10001F4F8(2, 2, (uint64_t)v2);
    PassthroughSubject.send(_:)();
    swift_release();
    return sub_1000208B4((uint64_t)v2);
  }
  return result;
}

uint64_t sub_10001F4F8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v43 = sub_10001FEE4([v3 reason], [v3 status]);
  uint64_t v42 = sub_100020028();
  id v41 = [v3 status];
  char v40 = sub_100020348((unint64_t)[v3 transportType]);
  unint64_t v39 = sub_10018F938((char)[v3 allowedServices]);
  char v38 = sub_10018F938((char)[v3 activeServices]);
  id v5 = sub_1000207B0();
  uint64_t v6 = v5[2];
  if (v6)
  {
    char v7 = 0;
    uint64_t v8 = v5 + 4;
    do
    {
      uint64_t v10 = *v8++;
      char v9 = v10;
      if ([v3 isCongestedService:v10]) {
        char v11 = v9;
      }
      else {
        char v11 = 0;
      }
      v7 |= v11;
      --v6;
    }
    while (v6);
  }
  else
  {
    char v7 = 0;
  }
  swift_bridgeObjectRelease();
  unint64_t v37 = sub_10018F938(v7);
  id v12 = sub_1000207B0();
  uint64_t v13 = v12[2];
  char v14 = 0;
  if (v13)
  {
    unint64_t v15 = v12 + 4;
    do
    {
      uint64_t v17 = *v15++;
      char v16 = v17;
      if ([v3 isDemoAllowedForService:v17]) {
        char v18 = v16;
      }
      else {
        char v18 = 0;
      }
      v14 |= v18;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_10018F938(v14);
  uint64_t v19 = sub_1000207B0();
  uint64_t v20 = v19[2];
  if (v20)
  {
    char v21 = 0;
    char v22 = v19 + 4;
    do
    {
      uint64_t v24 = *v22++;
      char v23 = v24;
      if ([v3 isPermittedAtCurrentLocation:v24]) {
        char v25 = v23;
      }
      else {
        char v25 = 0;
      }
      v21 |= v25;
      --v20;
    }
    while (v20);
  }
  else
  {
    char v21 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10018F938(v21);
  id v27 = [v3 allowedServices];
  unint64_t v28 = sub_1000207B0();
  uint64_t v29 = v28[2];
  if (v29)
  {
    uint64_t v30 = 0;
    char v31 = v28 + 4;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v32 = v33;
      if ([v3 isDemoAllowedForService:v33]) {
        uint64_t v34 = v32;
      }
      else {
        uint64_t v34 = 0;
      }
      v30 |= v34;
      --v29;
    }
    while (v29);
  }
  else
  {
    uint64_t v30 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a3 = v43;
  *(void *)(a3 + 8) = v42;
  *(unsigned char *)(a3 + 16) = v41 == (id)6;
  *(unsigned char *)(a3 + 17) = v40;
  *(void *)(a3 + 24) = v39;
  *(void *)(a3 + 32) = v38;
  *(void *)(a3 + 40) = v37;
  *(void *)(a3 + 48) = v36;
  *(void *)(a3 + 56) = v26;
  *(unsigned char *)(a3 + 64) = a1;
  *(unsigned char *)(a3 + 65) = a2;
  *(void *)(a3 + 72) = v27;
  *(void *)(a3 + 80) = v30;
  return result;
}

void sub_10001F7A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  uint64_t v6 = enum case for DispatchPredicate.onQueue(_:);
  char v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v8 = _dispatchPreconditionTest(_:)();
  char v9 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
  v9(v5, v2);
  if (v8)
  {
    uint64_t v20 = v7;
    uint64_t v21 = v1;
    if (qword_10037DE28 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A9B50);
  char v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "stop", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent;
  uint64_t v15 = v21;
  char v16 = *(void **)(v21 + OBJC_IVAR____TtC8SOSBuddy17StewieStateSource__agent);
  if (!v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  *id v5 = static OS_dispatch_queue.main.getter();
  v20(v5, v6, v2);
  char v18 = _dispatchPreconditionTest(_:)();
  v9(v5, v2);
  if (v18)
  {
    uint64_t v19 = *(void **)&v17[OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_monitor];
    *(void *)&v17[OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_monitor] = 0;

    uint64_t v15 = v21;
    char v16 = *(void **)(v21 + v14);
LABEL_8:
    *(void *)(v15 + v14) = 0;

    return;
  }
  __break(1u);
}

unsigned char *storeEnumTagSinglePayload for StewieState.Transport(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001FAE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StewieState.Transport()
{
  return &type metadata for StewieState.Transport;
}

uint64_t destroy for StewieState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StewieState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StewieState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for StewieState(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for StewieState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StewieState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StewieState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StewieState()
{
  return &type metadata for StewieState;
}

unint64_t sub_10001FE90()
{
  unint64_t result = qword_10037FFF0;
  if (!qword_10037FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037FFF0);
  }
  return result;
}

uint64_t sub_10001FEE4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5)
  {
    if (a2 - 5 >= 2)
    {
      if (qword_10037DE28 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10000FD84(v4, (uint64_t)qword_1003A9B50);
      long long v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v5, v6))
      {
        char v7 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)char v7 = 134349056;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unexpected CTStewieStatus value: %{public}ld, defaulting to off", v7, 0xCu);
        swift_slowDealloc();
      }

      return 1;
    }
    else
    {
      return 5;
    }
  }
  else
  {
    return sub_10002046C(a1);
  }
}

uint64_t sub_100020028()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_100285C44((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v3 = sub_1000207B0();
  uint64_t v4 = v3;
  uint64_t v5 = v3[2];
  if (!v5)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v6 = 0;
  char v7 = v3 + 4;
  p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
  char v40 = v3;
  id v41 = v1;
  char v38 = v3 + 4;
  uint64_t v39 = v3[2];
  while (1)
  {
    if (v6 >= v4[2]) {
      goto LABEL_46;
    }
    uint64_t v9 = v7[v6];
    uint64_t v10 = (char *)[v1 p_base_prots[249] v9];
    char v11 = (_BYTE)v10 - 3;
    if (unint64_t)(v10 - 3) < 8 && ((0x87u >> v11)) {
      break;
    }
LABEL_4:
    if (++v6 == v5) {
      goto LABEL_41;
    }
  }
  unint64_t v42 = v6;
  unint64_t v12 = 0x303030303020100uLL >> (8 * v11);
  uint64_t v13 = sub_10018F938(v9);
  int64_t v14 = 0;
  char v43 = v13 + 56;
  uint64_t v15 = 1 << v13[32];
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & *((void *)v13 + 7);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
    }
    else
    {
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_44;
      }
      if (v21 >= v18)
      {
LABEL_3:
        swift_release();
        uint64_t v4 = v40;
        uint64_t v1 = v41;
        char v7 = v38;
        uint64_t v5 = v39;
        unint64_t v6 = v42;
        p_base_prots = &SessionEnvironmentFactory.base_prots;
        goto LABEL_4;
      }
      unint64_t v22 = *(void *)&v43[8 * v21];
      ++v14;
      if (!v22)
      {
        int64_t v14 = v21 + 1;
        if (v21 + 1 >= v18) {
          goto LABEL_3;
        }
        unint64_t v22 = *(void *)&v43[8 * v14];
        if (!v22)
        {
          int64_t v14 = v21 + 2;
          if (v21 + 2 >= v18) {
            goto LABEL_3;
          }
          unint64_t v22 = *(void *)&v43[8 * v14];
          if (!v22)
          {
            int64_t v23 = v21 + 3;
            if (v23 >= v18) {
              goto LABEL_3;
            }
            unint64_t v22 = *(void *)&v43[8 * v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v14 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_45;
                }
                if (v14 >= v18) {
                  goto LABEL_3;
                }
                unint64_t v22 = *(void *)&v43[8 * v14];
                ++v23;
                if (v22) {
                  goto LABEL_29;
                }
              }
            }
            int64_t v14 = v23;
          }
        }
      }
LABEL_29:
      unint64_t v17 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v14 << 6);
    }
    uint64_t v24 = *(unsigned __int8 *)(*((void *)v13 + 6) + v20);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v27 = sub_1001BEB10(v24);
    uint64_t v28 = v2[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v2[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v26) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1000A0A74();
        if (v31) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_10009D078(v30, isUniquelyReferenced_nonNull_native);
      uint64_t v32 = sub_1001BEB10(v24);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_47;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_12:
        *(unsigned char *)(v2[7] + v27) = v12;
        goto LABEL_13;
      }
    }
    v2[(v27 >> 6) + 8] |= 1 << v27;
    *(unsigned char *)(v2[6] + v27) = v24;
    *(unsigned char *)(v2[7] + v27) = v12;
    uint64_t v34 = v2[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_43;
    }
    v2[2] = v36;
LABEL_13:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_100020348(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >= 3)
  {
    if (qword_10037DE28 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000FD84(v2, (uint64_t)qword_1003A9B50);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134349056;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unexpected CTStewieTransportType value: %{public}ld, defaulting to unknown", v5, 0xCu);
      swift_slowDealloc();
    }

    return 0;
  }
  return v1;
}

uint64_t sub_10002046C(uint64_t a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 2;
      break;
    case 2:
    case 3:
      goto LABEL_7;
    case 4:
      uint64_t result = 3;
      break;
    case 6:
      uint64_t result = 4;
      break;
    default:
      if (qword_10037DE28 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10000FD84(v3, (uint64_t)qword_1003A9B50);
      os_log_type_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v4, v5))
      {
        unint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v6 = 134349056;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unexpected CTStewieStatusReason value: %{public}ld, defaulting to notAllowedFeatureOff", v6, 0xCu);
        swift_slowDealloc();
      }

LABEL_7:
      uint64_t result = 1;
      break;
  }
  return result;
}

BOOL sub_1000205F0(uint64_t a1, uint64_t a2)
{
  sub_1000207A0((unsigned char *)a1, &v14);
  sub_1000207A0((unsigned char *)a2, &v13);
  sub_1000207A0(&v14, &v15);
  int v4 = v15;
  if (v15 == 5)
  {
    sub_1000207A0(&v13, &v16);
    if (v16 != 5) {
      return 0;
    }
  }
  else
  {
    sub_1000207A0(&v13, &v17);
    if (v17 == 5 || v4 != v17) {
      return 0;
    }
  }
  if ((sub_1001231DC(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) != 0
    || *(unsigned __int8 *)(a1 + 17) != *(unsigned __int8 *)(a2 + 17)
    || (sub_10020D19C(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) == 0
    || (sub_10020D19C(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) == 0
    || (sub_10020D19C(*(void *)(a1 + 40), *(void *)(a2 + 40)) & 1) == 0
    || (sub_10020D19C(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) == 0
    || (sub_10020D19C(*(void *)(a1 + 56), *(void *)(a2 + 56)) & 1) == 0)
  {
    return 0;
  }
  int v6 = *(unsigned __int8 *)(a1 + 64);
  int v7 = *(unsigned __int8 *)(a2 + 64);
  if (v6 == 2)
  {
    if (v7 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v9 = (v6 & 1) == 0;
    if (v7 == 2 || ((v9 ^ v7) & 1) == 0) {
      return result;
    }
  }
  int v10 = *(unsigned __int8 *)(a1 + 65);
  int v11 = *(unsigned __int8 *)(a2 + 65);
  if (v10 == 2)
  {
    if (v11 != 2) {
      return 0;
    }
    return *(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80);
  }
  BOOL result = 0;
  BOOL v12 = (v10 & 1) == 0;
  if (v11 != 2 && ((v12 ^ v11) & 1) != 0) {
    return *(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80);
  }
  return result;
}

unsigned char *sub_1000207A0(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  return a2;
}

void *sub_1000207B0()
{
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  unint64_t v1 = sub_1001B1920(isUniquelyReferenced_nonNull_native, 6, 1, &off_100349C20);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    unint64_t v1 = sub_1001B1920((void *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v5;
  v1[v3 + 4] = 16;
  int64_t v6 = v3 + 2;
  if (v4 < v6) {
    unint64_t v1 = sub_1001B1920((void *)(v2 > 1), v6, 1, v1);
  }
  v1[2] = v6;
  v1[v5 + 4] = 32;
  return v1;
}

uint64_t sub_100020874()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000208AC()
{
  return sub_10001F430();
}

uint64_t sub_1000208B4(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for StewieState.OffReason()
{
  return &type metadata for StewieState.OffReason;
}

ValueMetadata *type metadata accessor for StewieState.RawServices()
{
  return &type metadata for StewieState.RawServices;
}

unsigned char *storeEnumTagSinglePayload for StewieState.ServiceStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100020A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StewieState.ServiceStatus()
{
  return &type metadata for StewieState.ServiceStatus;
}

uint64_t getEnumTagSinglePayload for StewieAppId(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8SOSBuddy11StewieStateV9OffReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *BOOL result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100020BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StewieState.StewieService()
{
  return &type metadata for StewieState.StewieService;
}

uint64_t getEnumTagSinglePayload for StewieState.Status(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100020C90);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 5;
  unsigned int v9 = v7 - 5;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for StewieState.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *BOOL result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100020D78);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *BOOL result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_100020DA0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100020DB4(unsigned char *result, int a2)
{
  if (a2) {
    *BOOL result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for StewieState.Status()
{
  return &type metadata for StewieState.Status;
}

unint64_t sub_100020DD8()
{
  unint64_t result = qword_100380000;
  if (!qword_100380000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380000);
  }
  return result;
}

unint64_t sub_100020E30()
{
  unint64_t result = qword_100380008;
  if (!qword_100380008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380008);
  }
  return result;
}

unint64_t sub_100020E88()
{
  unint64_t result = qword_100380010;
  if (!qword_100380010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380010);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StartRoadsideAssistanceThreadRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t destroy for AppEvents.SelectRoadsideProviderRequestedParams()
{
  return swift_release();
}

void *assignWithCopy for StartRoadsideAssistanceThreadRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StartRoadsideAssistanceThreadRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StartRoadsideAssistanceThreadRequest()
{
  return &type metadata for StartRoadsideAssistanceThreadRequest;
}

__n128 initializeWithCopy for RoadsideAssistanceRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RoadsideAssistanceRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoadsideAssistanceRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceRequest()
{
  return &type metadata for RoadsideAssistanceRequest;
}

BOOL sub_10002108C(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(long long *)((char *)a1 + 26);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(long long *)((char *)a2 + 26);
  return sub_1000210D8((uint64_t)&v5, (uint64_t)&v7);
}

BOOL sub_1000210D8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0) {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  char v4 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  int v5 = *(unsigned __int8 *)(a1 + 41);
  int v6 = *(unsigned __int8 *)(a2 + 41);
  if (v5 != 2)
  {
    BOOL v7 = (v5 & 1) == 0;
    return v6 != 2 && ((v7 ^ v6) & 1) != 0;
  }
  return v6 == 2;
}

uint64_t destroy for StringWithCasualVariant()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StringWithCasualVariant(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StringWithCasualVariant(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StringWithCasualVariant(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StringWithCasualVariant(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringWithCasualVariant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StringWithCasualVariant()
{
  return &type metadata for StringWithCasualVariant;
}

uint64_t sub_10002135C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

unint64_t sub_100021400(uint64_t a1, char *a2)
{
  uint64_t v74 = a2;
  uint64_t v3 = sub_100004010(&qword_100380018);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100380020);
  uint64_t v75 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned int v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100380028);
  uint64_t v11 = __chkstk_darwin(v10);
  char v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v72 = v7;
  uint64_t v73 = v6;
  uint64_t v69 = v15;
  uint64_t v70 = v11;
  if (v14)
  {
    uint64_t v71 = v4;
    uint64_t v68 = v3;
    swift_bridgeObjectRetain();
    char v16 = (uint64_t *)(a1 + 80);
    unsigned __int8 v17 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v20 = *(v16 - 1);
      uint64_t v19 = *v16;
      uint64_t v21 = HIBYTE(*v16) & 0xF;
      if ((*v16 & 0x2000000000000000) == 0) {
        uint64_t v21 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned __int8 v17 = sub_1001B1A30(0, v17[2] + 1, 1, v17);
        }
        unint64_t v23 = v17[2];
        unint64_t v22 = v17[3];
        if (v23 >= v22 >> 1) {
          unsigned __int8 v17 = sub_1001B1A30((void *)(v22 > 1), v23 + 1, 1, v17);
        }
        uint64_t v17[2] = v23 + 1;
        int64_t v18 = &v17[2 * v23];
        v18[4] = v20;
        v18[5] = v19;
      }
      v16 += 7;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v3 = v68;
    uint64_t v4 = v71;
    uint64_t v7 = v72;
    BOOL v6 = v73;
  }
  else
  {
    unsigned __int8 v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v24 = v75;
  if (!v17[2] || !*((void *)v74 + 2))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v76 = v74;
  char v25 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 104);
  LODWORD(v67) = enum case for ListFormatStyle.ListType.and<A, B>(_:);
  uint64_t v71 = v75 + 104;
  unsigned __int8 v66 = v25;
  ((void (*)(char *))v25)(v9);
  char v26 = *(void (**)(void))(v4 + 104);
  unsigned int v64 = enum case for ListFormatStyle.Width.standard<A, B>(_:);
  uint64_t v65 = v4 + 104;
  double v63 = (void (*)(char *, void, uint64_t))v26;
  v26(v6);
  sub_100004010(&qword_100380040);
  uint64_t v27 = sub_100009B18(&qword_100380048, &qword_100380040);
  static FormatStyle.list<A>(type:width:)();
  __n128 v62 = *(void (**)(char *, uint64_t))(v4 + 8);
  v62(v6, v3);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v74 = v9;
  uint64_t v75 = v24 + 8;
  long long v61 = v28;
  v28(v9, v7);
  uint64_t v29 = sub_100009B18((unint64_t *)&unk_100380050, &qword_100380028);
  uint64_t v30 = v70;
  uint64_t v68 = v27;
  Sequence.formatted<A>(_:)();
  uint64_t v31 = v4 + 8;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v69 + 8);
  char v33 = v13;
  v32(v13, v30);
  if (v17[2] >= 2uLL)
  {
    uint64_t v76 = v17;
    uint64_t v34 = v74;
    uint64_t v35 = v67;
    uint64_t v60 = v29;
    uint64_t v36 = v72;
    uint64_t v69 = v78;
    uint64_t v67 = v77;
    v66(v74, v35, v72);
    uint64_t v71 = v31;
    unint64_t v37 = v73;
    v63(v73, v64, v3);
    static FormatStyle.list<A>(type:width:)();
    v62(v37, v3);
    v61(v34, v36);
    uint64_t v38 = v70;
    Sequence.formatted<A>(_:)();
    v32(v33, v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = v77;
    uint64_t v40 = v78;
    id v41 = [self mainBundle];
    v42._countAndFlagsBits = 0xD00000000000001ALL;
    v79._countAndFlagsBits = 0xD000000000000124;
    v79._object = (void *)0x80000001002C6FE0;
    v42._object = (void *)0x80000001002C6FC0;
    v43.value._countAndFlagsBits = 0x5072656972726143;
    v43.value._object = (void *)0xED00006E6F656769;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v79);

    sub_100004010(&qword_100380030);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1002B31C0;
    *(void *)(v45 + 56) = &type metadata for String;
    unint64_t v46 = sub_100023078();
    *(void *)(v45 + 32) = v39;
    *(void *)(v45 + 40) = v40;
    *(void *)(v45 + 96) = &type metadata for String;
    *(void *)(v45 + 104) = v46;
    uint64_t v47 = v67;
    *(void *)(v45 + 64) = v46;
    *(void *)(v45 + 72) = v47;
    *(void *)(v45 + 80) = v69;
    uint64_t v48 = String.init(format:_:)();
LABEL_21:
    swift_bridgeObjectRelease();
    return v48;
  }
  uint64_t v49 = v77;
  uint64_t v50 = v78;
  id v51 = [self mainBundle];
  v80._countAndFlagsBits = 0xD0000000000000E9;
  v80._object = (void *)0x80000001002C6ED0;
  v52._object = (void *)0x80000001002C6EB0;
  v52._countAndFlagsBits = 0xD000000000000019;
  v53.value._countAndFlagsBits = 0x5072656972726143;
  v53.value._object = (void *)0xED00006E6F656769;
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v80);

  sub_100004010(&qword_100380030);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1002B31C0;
  *(void *)(v55 + 56) = &type metadata for String;
  unint64_t result = sub_100023078();
  *(void *)(v55 + 64) = result;
  if (v17[2])
  {
    unint64_t v57 = result;
    uint64_t v59 = v17[4];
    uint64_t v58 = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v55 + 32) = v59;
    *(void *)(v55 + 40) = v58;
    *(void *)(v55 + 96) = &type metadata for String;
    *(void *)(v55 + 104) = v57;
    *(void *)(v55 + 72) = v49;
    *(void *)(v55 + 80) = v50;
    uint64_t v48 = String.init(format:_:)();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_100021B88(Swift::String *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._countAndFlagsBits = 0xD000000000000063;
  v19._object = (void *)0x80000001002C64F0;
  v4._object = (void *)0x80000001002C6480;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0xD00000000000009ELL;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v19);

  id v7 = [v2 mainBundle];
  v8._countAndFlagsBits = 0xD00000000000005FLL;
  v20._object = (void *)0x80000001002C64F0;
  v8._object = (void *)0x80000001002C6590;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0xD00000000000009ELL;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v20);

  id v11 = [v2 mainBundle];
  v12._countAndFlagsBits = 0xD00000000000005DLL;
  v21._object = (void *)0x80000001002C64F0;
  v12._object = (void *)0x80000001002C65F0;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0xD00000000000009ELL;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v21);

  id v15 = [v2 mainBundle];
  v16._countAndFlagsBits = 0xD00000000000006CLL;
  v22._object = (void *)0x80000001002C64F0;
  v16._object = (void *)0x80000001002C6650;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD00000000000009ELL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v22);

  *a1 = v6;
  a1[1] = v10;
  a1[2] = v14;
  a1[3] = v18;
}

uint64_t sub_100021D7C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v9._uint64_t countAndFlagsBits = 0xD0000000000000B7;
  v9._object = (void *)0x80000001002C6220;
  v2._object = (void *)0x80000001002C61F0;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD000000000000089;
  v10._object = (void *)0x80000001002C6300;
  v6._object = (void *)0x80000001002C62E0;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_100021EAC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v9._uint64_t countAndFlagsBits = 0xD0000000000000B5;
  v9._object = (void *)0x80000001002C63C0;
  v2._object = (void *)0x80000001002C6390;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD000000000000089;
  v10._object = (void *)0x80000001002C6300;
  v6._object = (void *)0x80000001002C62E0;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_100021FDC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD00000000000008ELL;
  v9._object = (void *)0x80000001002C68A0;
  v2._object = (void *)0x80000001002C6880;
  v2._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v10._uint64_t countAndFlagsBits = 0xD000000000000089;
  v10._object = (void *)0x80000001002C6950;
  v6._object = (void *)0x80000001002C6930;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_10002210C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD00000000000008FLL;
  v9._object = (void *)0x80000001002C6A00;
  v2._object = (void *)0x80000001002C69E0;
  v2._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v10._uint64_t countAndFlagsBits = 0xD000000000000089;
  v10._object = (void *)0x80000001002C6950;
  v6._object = (void *)0x80000001002C6930;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_10002223C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000028;
  v9._object = (void *)0x80000001002C66F0;
  v2._object = (void *)0x80000001002C66C0;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000086;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v10._object = (void *)0x80000001002C66F0;
  v6._object = (void *)0x80000001002C6780;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000086;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_100022368()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000029;
  v9._object = (void *)0x80000001002C67D0;
  v2._object = (void *)0x80000001002C67A0;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000087;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v10._object = (void *)0x80000001002C67D0;
  v6._object = (void *)0x80000001002C6860;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000087;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_100022494()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v9._object = (void *)0x80000001002C6B70;
  v2._object = (void *)0x80000001002C6B50;
  v2._uint64_t countAndFlagsBits = 0x1000000000000015;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000043;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v10._object = (void *)0x80000001002C6B70;
  v6._object = (void *)0x80000001002C6BC0;
  v6._uint64_t countAndFlagsBits = 0x1000000000000015;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000043;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_1000225B8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v9._object = (void *)0x80000001002C6AB0;
  v2._object = (void *)0x80000001002C6A90;
  v2._uint64_t countAndFlagsBits = 0xD000000000000015;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v10._object = (void *)0x80000001002C6AB0;
  v6._object = (void *)0x80000001002C6B30;
  v6._uint64_t countAndFlagsBits = 0xD000000000000015;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

uint64_t sub_1000226E8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v9._object = (void *)0x80000001002C6C00;
  v2._object = (void *)0x80000001002C6BE0;
  v2._uint64_t countAndFlagsBits = 0x1000000000000018;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000071;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  id v5 = [v0 mainBundle];
  v10._object = (void *)0x80000001002C6C00;
  v6._object = (void *)0x80000001002C6C80;
  v6._uint64_t countAndFlagsBits = 0x1000000000000018;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0xD000000000000071;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10);

  return countAndFlagsBits;
}

void sub_10002280C(Swift::String *a1@<X8>)
{
  Swift::String v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v19._object = (void *)0x80000001002C60F0;
  v4._object = (void *)0x80000001002C60C0;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v19);

  id v7 = [v2 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v20._object = (void *)0x80000001002C60F0;
  v8._object = (void *)0x80000001002C6150;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v20);

  id v11 = [v2 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000028;
  v21._object = (void *)0x80000001002C60F0;
  v12._object = (void *)0x80000001002C6180;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v21);

  id v15 = [v2 mainBundle];
  v16._uint64_t countAndFlagsBits = 0xD000000000000037;
  v22._object = (void *)0x80000001002C60F0;
  v16._object = (void *)0x80000001002C61B0;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v22);

  *a1 = v6;
  a1[1] = v10;
  a1[2] = v14;
  a1[3] = v18;
}

unint64_t sub_100022A00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v5 = sub_100004010(&qword_100380018);
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004010(&qword_100380020);
  uint64_t v47 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  Swift::String v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100380028);
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    unint64_t v53 = a3;
    swift_bridgeObjectRetain();
    Swift::String v13 = (uint64_t *)(a1 + 48);
    Swift::String v14 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v17 = *(v13 - 1);
      uint64_t v16 = *v13;
      uint64_t v18 = HIBYTE(*v13) & 0xF;
      if ((*v13 & 0x2000000000000000) == 0) {
        uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
      }
      if (v18)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v14 = sub_1001B1A30(0, v14[2] + 1, 1, v14);
        }
        unint64_t v20 = v14[2];
        unint64_t v19 = v14[3];
        if (v20 >= v19 >> 1) {
          Swift::String v14 = sub_1001B1A30((void *)(v19 > 1), v20 + 1, 1, v14);
        }
        v14[2] = v20 + 1;
        id v15 = &v14[2 * v20];
        v15[4] = v17;
        void v15[5] = v16;
      }
      v13 += 7;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a3 = v53;
    unint64_t v21 = v14[2];
    if (!v21) {
      goto LABEL_20;
    }
  }
  else
  {
    Swift::String v14 = _swiftEmptyArrayStorage;
    unint64_t v21 = _swiftEmptyArrayStorage[2];
    if (!v21)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v22 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v22 = v55 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22) {
    goto LABEL_20;
  }
  if (v21 >= 2)
  {
    uint64_t v56 = v14;
    uint64_t v23 = v47;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v8, enum case for ListFormatStyle.ListType.and<A, B>(_:), v54);
    uint64_t v25 = v51;
    uint64_t v24 = v52;
    char v26 = v48;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v48, enum case for ListFormatStyle.Width.standard<A, B>(_:), v52);
    sub_100004010(&qword_100380040);
    sub_100009B18(&qword_100380048, &qword_100380040);
    static FormatStyle.list<A>(type:width:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v54);
    sub_100009B18((unint64_t *)&unk_100380050, &qword_100380028);
    uint64_t v27 = v50;
    Sequence.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v27);
    swift_bridgeObjectRelease();
    uint64_t v28 = v57;
    uint64_t v29 = v58;
    id v30 = [self mainBundle];
    v31._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v59._uint64_t countAndFlagsBits = 0xD0000000000000FFLL;
    v59._object = (void *)0x80000001002C6DB0;
    v31._object = (void *)0x80000001002C6D90;
    v32.value._uint64_t countAndFlagsBits = 0x50726F7265706D45;
    v32.value._object = (void *)0xEE006E6975676E65;
    v33._uint64_t countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v59);

    sub_100004010(&qword_100380030);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1002B31C0;
    *(void *)(v34 + 56) = &type metadata for String;
    unint64_t v35 = sub_100023078();
    *(void *)(v34 + 32) = v28;
    *(void *)(v34 + 40) = v29;
    *(void *)(v34 + 96) = &type metadata for String;
    *(void *)(v34 + 104) = v35;
    uint64_t v36 = v55;
    *(void *)(v34 + 64) = v35;
    *(void *)(v34 + 72) = v36;
    *(void *)(v34 + 80) = a3;
    swift_bridgeObjectRetain();
    uint64_t v37 = String.init(format:_:)();
LABEL_23:
    swift_bridgeObjectRelease();
    return v37;
  }
  id v38 = [self mainBundle];
  v60._uint64_t countAndFlagsBits = 0xD0000000000000C4;
  v60._object = (void *)0x80000001002C6CC0;
  v39._object = (void *)0x80000001002C6CA0;
  v39._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v40.value._uint64_t countAndFlagsBits = 0x50726F7265706D45;
  v40.value._object = (void *)0xEE006E6975676E65;
  v41._uint64_t countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v60);

  sub_100004010(&qword_100380030);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1002B31C0;
  *(void *)(v42 + 56) = &type metadata for String;
  unint64_t result = sub_100023078();
  *(void *)(v42 + 64) = result;
  if (v14[2])
  {
    unint64_t v44 = result;
    uint64_t v46 = v14[4];
    uint64_t v45 = v14[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v42 + 32) = v46;
    *(void *)(v42 + 40) = v45;
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v44;
    *(void *)(v42 + 72) = v55;
    *(void *)(v42 + 80) = a3;
    swift_bridgeObjectRetain();
    uint64_t v37 = String.init(format:_:)();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

unint64_t sub_100023078()
{
  unint64_t result = qword_100380038;
  if (!qword_100380038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380038);
  }
  return result;
}

float ConnectionAssistantLocationDot.init(offset:innerRadius:outerRadius:innerColor:outerColor:opacity:)@<S0>(uint64_t a1@<X8>, __n128 a2@<Q0>, float32x2_t a3@<D1>, float32_t a4@<S2>, __n128 a5@<Q3>, __n128 a6@<Q4>, float a7@<S5>)
{
  a3.f32[1] = a4;
  __asm { FMOV            V2.2S, #10.0 }
  *(__n128 *)a1 = a2;
  *(float32x2_t *)(a1 + 16) = vdiv_f32(vrnda_f32(vmul_f32(a3, _D2)), _D2);
  float result = roundf(a7 * 1000.0) / 1000.0;
  *(__n128 *)(a1 + 32) = a5;
  *(__n128 *)(a1 + 48) = a6;
  *(float *)(a1 + 64) = result;
  return result;
}

double sub_100023108(uint64_t a1)
{
  *(void *)&double result = sub_100023144(a1, (SEL *)&selRef_whiteColor, (float32x4_t *)&qword_1003A9820).n128_u64[0];
  return result;
}

double sub_10002311C(uint64_t a1)
{
  *(void *)&double result = sub_100023144(a1, (SEL *)&selRef_systemGreenColor, (float32x4_t *)&xmmword_1003A9830).n128_u64[0];
  return result;
}

double sub_100023130(uint64_t a1)
{
  *(void *)&double result = sub_100023144(a1, (SEL *)&selRef_systemOrangeColor, (float32x4_t *)&xmmword_1003A9840).n128_u64[0];
  return result;
}

__n128 sub_100023144(uint64_t a1, SEL *a2, float32x4_t *a3)
{
  id v4 = [self *a2];
  float64_t v11 = 0.0;
  float64_t v12 = 0.0;
  float64_t v9 = 0.0;
  float64_t v10 = 0.0;
  [v4 getRed:&v12 green:&v11 blue:&v10 alpha:&v9];
  v5.f64[0] = v12;
  v6.f64[0] = v10;
  v5.f64[1] = v11;
  v6.f64[1] = v9;
  float32x4_t v8 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v5), v6);

  __n128 result = (__n128)v8;
  *a3 = v8;
  return result;
}

__n128 sub_1000231EC()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100023314;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000235A4;
  aBlock[3] = &unk_10034F068;
  id v1 = _Block_copy(aBlock);
  id v2 = [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  swift_release();
  aBlock[0] = 0;
  float64_t v9 = 0.0;
  float64_t v10 = 0.0;
  float64_t v8 = 0.0;
  [v2 getRed:aBlock green:&v10 blue:&v9 alpha:&v8];
  *(void *)&v3.f64[0] = aBlock[0];
  v4.f64[0] = v9;
  v3.f64[1] = v10;
  v4.f64[1] = v8;
  float32x4_t v6 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v3), v4);

  __n128 result = (__n128)v6;
  xmmword_1003A9850 = (__int128)v6;
  return result;
}

id sub_100023314(void *a1)
{
  if ([a1 userInterfaceStyle] == (id)2)
  {
    id v1 = (void *)UITraitCollection.modifyingTraits(_:)();
    id v2 = [self systemGray2Color];
    id v3 = [v2 resolvedColorWithTraitCollection:v1];

    return v3;
  }
  else
  {
    id v5 = [self systemGrayColor];
    return v5;
  }
}

uint64_t sub_1000233F8(uint64_t a1)
{
  return UIMutableTraits.accessibilityContrast.setter();
}

__n128 ConnectionAssistantLocationDot.offset.getter()
{
  return *(__n128 *)v0;
}

float ConnectionAssistantLocationDot.innerRadius.getter()
{
  return *(float *)(v0 + 16);
}

float ConnectionAssistantLocationDot.outerRadius.getter()
{
  return *(float *)(v0 + 20);
}

__n128 ConnectionAssistantLocationDot.innerColor.getter()
{
  return v0[2];
}

__n128 ConnectionAssistantLocationDot.outerColor.getter()
{
  return v0[3];
}

float ConnectionAssistantLocationDot.opacity.getter()
{
  return *(float *)(v0 + 64);
}

double ConnectionAssistantLocationDot.Projection.outerDot.getter(double a1, double a2, double a3)
{
  return a3;
}

float32x2_t ConnectionAssistantLocationDot.Projection.boundingBox.getter(float32x2_t a1, int32x2_t a2, float32x2_t a3, int32x2_t a4)
{
  return vminnm_f32(vsub_f32(a1, (float32x2_t)vdup_lane_s32(a2, 0)), vsub_f32(a3, (float32x2_t)vdup_lane_s32(a4, 0)));
}

uint64_t ConnectionAssistantLocationDot.project(from:camera:)(uint64_t a1, __n128 a2)
{
  *(float32x2_t *)v4.f32 = vadd_f32((float32x2_t)a2.n128_u64[0], *v2);
  v4.f32[2] = a2.n128_f32[2] + v2[1].f32[0];
  v4.i32[3] = 0;
  ConnectionAssistantCamera.projectUV(point:)(v4);
  if (v6) {
    return 0;
  }
  uint64_t v7 = v5;
  vmul_n_f32(v2[2], ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(*(void *)a1, *(void *)(a1 + 8), *(double *)(a1 + 16)));
  return v7;
}

BOOL sub_100023548(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  uint64_t v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  int v8 = *(_DWORD *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  uint64_t v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  int v10 = *(_DWORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s8SOSBuddy30ConnectionAssistantLocationDotV23__derived_struct_equalsySbAC_ACtFZ_0((float *)v7, (float *)v9);
}

id sub_1000235A4(uint64_t a1, void *a2)
{
  long long v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  long long v5 = (void *)v3();
  swift_release();

  return v5;
}

BOOL _s8SOSBuddy30ConnectionAssistantLocationDotV23__derived_struct_equalsySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)a1;
  long long v4 = *(_OWORD *)a2;
  while (1)
  {
    long long v26 = v3;
    float v7 = *(float *)((unint64_t)&v26 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    long long v27 = v4;
    float v8 = *(float *)((unint64_t)&v27 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    BOOL v5 = v7 == v8;
    if (v2 == 2) {
      break;
    }
    while (1)
    {
      ++v2;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      uint64_t v6 = 0;
      if (v2 == 2) {
        return v6;
      }
    }
  }
  if (v7 != v8 || a1[4] != a2[4] || a1[5] != a2[5]) {
    return 0;
  }
  uint64_t v9 = 0;
  long long v10 = *((_OWORD *)a1 + 2);
  long long v11 = *((_OWORD *)a2 + 2);
  while (1)
  {
    long long v24 = v10;
    float v17 = *(float *)((unint64_t)&v24 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    long long v25 = v11;
    float v18 = *(float *)((unint64_t)&v25 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    BOOL v12 = v17 == v18;
    if (v9 == 3) {
      break;
    }
    while (1)
    {
      ++v9;
      if (v12) {
        break;
      }
      BOOL v12 = 0;
      uint64_t v6 = 0;
      if (v9 == 3) {
        return v6;
      }
    }
  }
  if (v17 != v18) {
    return 0;
  }
  uint64_t v13 = 0;
  long long v14 = *((_OWORD *)a1 + 3);
  long long v15 = *((_OWORD *)a2 + 3);
  while (1)
  {
    long long v22 = v14;
    float v20 = *(float *)((unint64_t)&v22 & 0xFFFFFFFFFFFFFFF3 | (4 * (v13 & 3)));
    long long v23 = v15;
    float v21 = *(float *)((unint64_t)&v23 & 0xFFFFFFFFFFFFFFF3 | (4 * (v13 & 3)));
    BOOL v16 = v20 == v21;
    if (v13 == 3) {
      break;
    }
    while (1)
    {
      ++v13;
      if (v16) {
        break;
      }
      BOOL v16 = 0;
      uint64_t v6 = 0;
      if (v13 == 3) {
        return v6;
      }
    }
  }
  return v20 == v21 && a1[16] == a2[16];
}

__n128 initializeWithCopy for ConnectionAssistantLocationDot(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantLocationDot(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 68)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantLocationDot(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 68) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantLocationDot()
{
  return &type metadata for ConnectionAssistantLocationDot;
}

__n128 initializeWithCopy for ConnectionAssistantLocationDot.Projection(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantLocationDot.Projection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 28)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantLocationDot.Projection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 28) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantLocationDot.Projection()
{
  return &type metadata for ConnectionAssistantLocationDot.Projection;
}

uint64_t sub_1000238AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000238BC()
{
  return swift_release();
}

uint64_t sub_1000238C4(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t ConnectionAssistantStarsRenderer.__allocating_init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ConnectionAssistantStarsRenderer.init(device:buffers:renderPipelines:)(a1, a2, a3);
  return v6;
}

uint64_t ConnectionAssistantStarsRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_retain();
  id v5 = [a1 newBufferWithLength:64 options:1];
  if (v5
    && (swift_unknownObjectRelease(),
        *(void *)(v3 + 40) = v5,
        (id v6 = [(id)swift_unknownObjectRetain() newBufferWithLength:96 options:1]) != 0))
  {
    id v7 = v6;
    swift_unknownObjectRelease();
    *(void *)(v3 + 48) = v7;
    id v8 = [a1 newBufferWithLength:4 options:1];
    if (v8)
    {
      id v9 = v8;
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      *(void *)(v3 + 56) = v9;
      return v3;
    }
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    int v10 = 1;
  }
  else
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    int v10 = 0;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (v5) {
    swift_unknownObjectRelease();
  }
  if (v10) {
    swift_unknownObjectRelease();
  }
  sub_100023BB8(*(void *)(v3 + 64), *(void *)(v3 + 72));
  type metadata accessor for ConnectionAssistantStarsRenderer();
  swift_deallocPartialClassInstance();
  return v3;
}

unint64_t sub_100023B64()
{
  unint64_t result = qword_100380060;
  if (!qword_100380060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380060);
  }
  return result;
}

uint64_t sub_100023BB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ConnectionAssistantStarsRenderer()
{
  return self;
}

id *sub_100023C20(id *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if ((unsigned __int128)(*a2 * (__int128)96) >> 64 == (96 * *a2) >> 63)
  {
    id v3 = [result[2] newBufferWithLength:options:];
    if (!v3)
    {
      sub_100023B64();
      swift_allocError();
      swift_willThrow();
      return (id *)v3;
    }
    long long v4 = [(id)swift_unknownObjectRetain() contents];
    uint64_t result = (id *)v3;
    if ((v2 & 0x8000000000000000) == 0)
    {
      for (; v2; --v2)
      {
        ConnectionAssistantStars.makeStar()((uint64_t)v8);
        long long v5 = v8[3];
        v4[2] = v8[2];
        v4[3] = v5;
        long long v6 = v8[5];
        v4[4] = v8[4];
        v4[5] = v6;
        long long v7 = v8[1];
        *long long v4 = v8[0];
        v4[1] = v7;
        v4 += 6;
      }
      return (id *)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100023D20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if ((unint64_t)(a2 - 0x800000000000000) >> 60 != 15)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_6;
  }
  id v3 = [*(id *)(a1 + 16) newBufferWithLength:16 * a2 options:1];
  if (!v3)
  {
LABEL_10:
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    return v3;
  }
  long long v5 = (char *)[(id)swift_unknownObjectRetain() contents];
  id v7 = v3;
  uint64_t v4 = *a3;
  if (v4 < 0) {
    goto LABEL_13;
  }
  if (!v4) {
    return v3;
  }
  if (qword_10037DE50 != -1) {
    goto LABEL_14;
  }
LABEL_6:
  int v8 = 0;
  uint64_t v9 = static ConnectionAssistantRenderer.Buffers.texCoords;
  uint64_t v10 = qword_1003A9BC0;
  uint64_t v11 = qword_1003A9BC8;
  uint64_t v12 = qword_1003A9BD0;
  uint64_t v13 = v5 + 48;
  uint64_t v14 = 1;
  while (1)
  {
    *((_DWORD *)v13 - 12) = v8;
    *((void *)v13 - 5) = v9;
    *((_DWORD *)v13 - 8) = v8;
    *((void *)v13 - 3) = v10;
    *((_DWORD *)v13 - 4) = v8;
    *((void *)v13 - 1) = v11;
    *(_DWORD *)uint64_t v13 = v8;
    *((void *)v13 + 1) = v10;
    *((_DWORD *)v13 + 4) = v8;
    *((void *)v13 + 3) = v11;
    *((_DWORD *)v13 + 8) = v8;
    *((void *)v13 + 5) = v12;
    if (v14 == v4) {
      return v3;
    }
    int v8 = v14;
    v13 += 96;
    if (++v14 == 0x100000001)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      goto LABEL_10;
    }
  }
}

uint64_t ConnectionAssistantStarsRenderer.compute(dt:stars:computeCommandEncoder:)(uint64_t a1, void *a2, double a3)
{
  uint64_t v7 = *(void *)(v3 + 72);
  if (v7)
  {
    uint64_t v8 = *(void *)(v3 + 64);
    sub_100024314(v8, *(void *)(v3 + 72));
    uint64_t result = sub_100023BB8(v8, v7);
    uint64_t v10 = *(void *)a1;
    if (*(void *)a1 == v8)
    {
      uint64_t v11 = *(void *)(v3 + 72);
      if (!v11) {
        return result;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a1;
  }
  uint64_t v12 = sub_100023C20((id *)v3, (uint64_t *)a1);
  if ((unsigned __int128)(v10 * (__int128)6) >> 64 != (6 * v10) >> 63)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v13 = v12;
  id v14 = sub_100023D20(v3, 6 * v10, (uint64_t *)a1);
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v15 = *(void *)(v3 + 72);
  *(void *)(v3 + 64) = v10;
  *(void *)(v3 + 72) = v13;
  *(void *)(v3 + 80) = 6 * v10;
  *(void *)(v3 + 88) = v14;
  uint64_t result = sub_100023BB8(v16, v15);
  uint64_t v11 = *(void *)(v3 + 72);
  if (!v11) {
    return result;
  }
LABEL_8:
  unint64_t v17 = *(void *)(v3 + 64);
  if ((v17 & 0x8000000000000000) != 0 || HIDWORD(v17)) {
    goto LABEL_38;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    int v18 = 0;
    uint64_t v35 = 0;
    long long v36 = 0u;
    long long v34 = 0u;
  }
  else
  {
    int v18 = *(_DWORD *)(a1 + 48);
    long long v36 = *(_OWORD *)(a1 + 16);
    long long v34 = *(_OWORD *)(a1 + 32);
    uint64_t v35 = *(void *)(a1 + 52);
  }
  float v19 = a3;
  float v20 = *(void **)(v3 + 40);
  swift_unknownObjectRetain();
  sub_100024314(v17, v11);
  float v21 = (float *)[v20 contents];
  id v22 = v20;
  *(_DWORD *)float v21 = v17;
  v21[1] = v19;
  uint64_t v21[2] = 0.99;
  *((_OWORD *)v21 + 1) = v36;
  *((_OWORD *)v21 + 2) = v34;
  *((_DWORD *)v21 + 12) = v18;
  *((void *)v21 + 7) = v35;
  uint64_t v23 = ConnectionAssistantRenderer.RenderPipelines.starKernelPipelineState.getter();
  if (v23)
  {
    long long v24 = (void *)v23;
    NSString v25 = String._bridgeToObjectiveC()();
    [a2 setLabel:v25];

    [a2 setComputePipelineState:v24];
    [a2 setBuffer:v22 offset:0 atIndex:0];
    [a2 setBuffer:v11 offset:0 atIndex:1];
    uint64_t v26 = (uint64_t)[v24 threadExecutionWidth];
    uint64_t v27 = (uint64_t)[v24 maxTotalThreadsPerThreadgroup];
    uint64_t v28 = (uint64_t)[v24 threadExecutionWidth];
    if (v28)
    {
      if (v27 == 0x8000000000000000 && v28 == -1) {
        goto LABEL_36;
      }
      uint64_t v29 = v26 * (v27 / v28);
      if ((unsigned __int128)(v26 * (__int128)(v27 / v28)) >> 64 == v29 >> 63)
      {
        unint64_t v30 = v17 + v29;
        if (!__OFADD__(v17, v29))
        {
          BOOL v31 = __OFSUB__(v30, 1);
          int64_t v32 = v30 - 1;
          if (!v31)
          {
            if (v29)
            {
              if (v32 != 0x8000000000000000 || v29 != -1)
              {
                uint64_t v39 = v32 / v29;
                int64x2_t v40 = vdupq_n_s64(1uLL);
                uint64_t v37 = v26 * (v27 / v28);
                int64x2_t v38 = v40;
                [a2 dispatchThreadgroups:&v39 threadsPerThreadgroup:&v37];
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                return swift_unknownObjectRelease();
              }
              goto LABEL_37;
            }
            goto LABEL_34;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_100024314(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t ConnectionAssistantStarsRenderer.render(stars:camera:origin:opacity:renderCommandEncoder:)(__n128 a1, float a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1000243EC(a4, a5, a1, a2);
}

uint64_t ConnectionAssistantStarsRenderer.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100023BB8(*(void *)(v0 + 64), *(void *)(v0 + 72));
  return v0;
}

uint64_t ConnectionAssistantStarsRenderer.__deallocating_deinit()
{
  ConnectionAssistantStarsRenderer.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000243EC(uint64_t result, void *a2, __n128 a3, float a4)
{
  uint64_t v5 = v4[9];
  if (v5)
  {
    uint64_t v8 = result;
    uint64_t v10 = v4[10];
    uint64_t v9 = v4[11];
    uint64_t v12 = (void *)v4[7];
    uint64_t v11 = v4[8];
    swift_unknownObjectRetain();
    sub_100024314(v11, v5);
    uint64_t v13 = (float *)[v12 contents];
    id v14 = v12;
    float *v13 = a4;
    uint64_t v15 = *(void *)v8;
    uint64_t v16 = *(void *)(v8 + 8);
    float v17 = 1.0;
    LODWORD(v18) = 1.0;
    if (*(void *)v8)
    {
      LODWORD(v18) = 1.0;
      if (v16)
      {
        float v19 = (float)v15 / (float)v16;
        float v17 = fminf(v19, 1.0);
        *(float *)&uint64_t v18 = fmaxf(v19, 1.0);
      }
    }
    *((float *)&v18 + 1) = 1.0 / v17;
    uint64_t v31 = v18;
    float v20 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(v15, v16, *(double *)(v8 + 16));
    long long v29 = *(_OWORD *)(v8 + 336);
    long long v30 = *(_OWORD *)(v8 + 320);
    long long v27 = *(_OWORD *)(v8 + 368);
    long long v28 = *(_OWORD *)(v8 + 352);
    float v21 = (void *)v4[6];
    id v22 = (float *)[(id)swift_unknownObjectRetain() contents];
    id v23 = v21;
    *(__n128 *)id v22 = a3;
    *((void *)v22 + 2) = v31;
    v22[6] = v20;
    *((_OWORD *)v22 + 2) = v30;
    *((_OWORD *)v22 + 3) = v29;
    *((_OWORD *)v22 + 4) = v28;
    *((_OWORD *)v22 + 5) = v27;
    uint64_t v24 = sub_100285024(0);
    if (v24)
    {
      uint64_t v25 = v24;
      NSString v26 = String._bridgeToObjectiveC()();
      [a2 setLabel:v26];

      [a2 setRenderPipelineState:v25];
      [a2 setVertexBuffer:v23 offset:0 atIndex:0];
      [a2 setVertexBuffer:v5 offset:0 atIndex:1];
      [a2 setVertexBuffer:v9 offset:0 atIndex:2];
      [a2 setFragmentBuffer:v14 offset:0 atIndex:0];
      [a2 drawPrimitives:3 vertexStart:0 vertexCount:v10];
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t destroy for ConnectionAssistantStarsRenderer.StarsBuffers()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void *initializeWithCopy for ConnectionAssistantStarsRenderer.StarsBuffers(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ConnectionAssistantStarsRenderer.StarsBuffers(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for ConnectionAssistantStarsRenderer.StarsBuffers(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_unknownObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionAssistantStarsRenderer.StarsBuffers()
{
  return &type metadata for ConnectionAssistantStarsRenderer.StarsBuffers;
}

void *sub_1000247B8()
{
  id v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[4] = 0;
  type metadata accessor for TimerBasedHysteresisScheduler();
  uint64_t v9 = swift_allocObject();
  sub_100004010(&qword_1003802A0);
  uint64_t v10 = swift_allocObject();
  swift_retain();
  v1[5] = sub_100027FFC(v9, 0x724765685466666FLL, 0xEE0065646F4D6469, (uint64_t)sub_100025DBC, 0, v10);
  uint64_t v37 = v6;
  uint64_t v38 = v5;
  uint64_t v35 = v4;
  long long v36 = v8;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v11 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v11 = _swiftEmptySetSingleton;
  }
  v1[6] = v11;
  long long v34 = v1 + 6;
  swift_release();
  uint64_t v12 = sub_100004010(&qword_100393AA0);
  swift_allocObject();
  v1[2] = PassthroughSubject.init()();
  uint64_t v13 = v12;
  swift_allocObject();
  v1[3] = PassthroughSubject.init()();
  uint64_t v14 = qword_10037DD80;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446210;
    id v40 = v1;
    type metadata accessor for OffTheGridModel();
    swift_retain();
    uint64_t v19 = String.init<A>(describing:)();
    id v40 = (id)sub_1001B3178(v19, v20, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "init: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  v39[0] = *(void *)(v1[5] + 16);
  sub_10000FDBC();
  swift_retain();
  id v40 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v22 = *(void *)(v21 - 8);
  int64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v33 = v22 + 56;
  uint64_t v23 = (uint64_t)v35;
  v32(v35, 1, 1, v21);
  void v31[4] = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  unint64_t v24 = sub_100028428();
  _OWORD v31[2] = v13;
  v31[3] = v24;
  uint64_t v25 = v36;
  Publisher.receive<A>(on:options:)();
  sub_100028480(v23);

  swift_release();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000284E0;
  *(void *)(v26 + 24) = v1;
  v31[1] = sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  swift_retain();
  uint64_t v27 = v38;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  long long v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28(v25, v27);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v39[0] = *(void *)(v1[5] + 24);
  swift_retain();
  id v40 = (id)static OS_dispatch_queue.main.getter();
  v32((char *)v23, 1, 1, v21);
  Publisher.receive<A>(on:options:)();
  sub_100028480(v23);

  swift_release();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100028528;
  *(void *)(v29 + 24) = v1;
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v28(v25, v27);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100024E70()
{
  return Subject<>.send()();
}

uint64_t sub_100024EDC()
{
  return Subject<>.send()();
}

uint64_t sub_100024F48()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100024F80()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for OffTheGridModel();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100025170()
{
  sub_100024F80();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OffTheGridModel()
{
  return self;
}

void sub_1000251C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A60);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "start", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = objc_allocWithZone((Class)type metadata accessor for IdentityServicesAgent());
  id v13 = sub_10025D4C0((uint64_t)sub_1000285D8, v11);
  if (sub_10025DD9C())
  {
    uint64_t v14 = *(void **)(v1 + 32);
    *(void *)(v1 + 32) = v13;
    id v13 = v14;
  }
  else
  {
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to start IdentityServicesAgent", v17, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10002547C(__int16 a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_100025DDC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000254FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A60);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "stop", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = *(void **)(v1 + 32);
  if (v11)
  {
    id v12 = v11;
    sub_10025E89C();

    uint64_t v11 = *(void **)(v1 + 32);
  }
  *(void *)(v1 + 32) = 0;

  swift_retain();
  sub_10022FDB8();
  return swift_release();
}

void sub_100025700(char a1, int a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (uint64_t *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *os_log_type_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (qword_10037DDD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9A60);
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 67109120;
    v25[3] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "setOffTheGridMode: on - %{BOOL}d", v14, 8u);
    swift_slowDealloc();
  }

  uint64_t v15 = *(void **)(a3 + 32);
  if (v15)
  {
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    os_log_type_t v17 = (void *)swift_allocObject();
    uint64_t v17[2] = v16;
    uint64_t v17[3] = sub_100199EB0;
    v17[4] = 0;
    id v18 = v15;
    swift_retain();
    sub_10025EC28(a1 & 1, a2, (uint64_t)sub_100027F84, (uint64_t)v17);

    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "agent is not started, ignoring setOffTheGridMode request", v21, 2u);
      swift_slowDealloc();
    }

    if (qword_10037DD80 != -1) {
      swift_once();
    }
    sub_10000FD84(v11, (uint64_t)qword_1003A9958);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "OffTheGrid mode request done", v24, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100025AD8(int a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  int v18 = a1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_10037DDD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9A60);
  char v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)id v12 = 136315138;
    LOWORD(v19) = v18;
    sub_100004010(&qword_100380298);
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v19 = sub_1001B3178(v13, v14, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "offTheGridMode set to: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    swift_retain();
    swift_release();
    sub_100025DDC(v18);
    uint64_t Strong = swift_release();
  }
  return a3(Strong);
}

uint64_t sub_100025DBC(unsigned char *a1, unsigned char *a2)
{
  if (*a1 == 2 || *a2 == 2) {
    return 0;
  }
  else {
    return 0x3FE0000000000000;
  }
}

uint64_t sub_100025DDC(__int16 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __int16 v21 = a1;
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  __int16 v9 = v21;
  uint64_t v10 = *(unsigned __int16 *)(v2 + 107);
  if (*(_WORD *)(v2 + 107) == 2)
  {
    if (v21 == 2) {
      goto LABEL_7;
    }
LABEL_6:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_7;
  }
  if (v21 == 2
    || (v21 & 1) == ((v10 & 1) == 0)
    || ((v10 & 0x100) == 0) == (unsigned __int16)(v21 & 0x100) >> 8)
  {
    goto LABEL_6;
  }
LABEL_7:
  *(_WORD *)(v2 + 107) = v9;
  sub_1002301C4(v10);
  os_log_type_t v11 = *(uint64_t (**)(_WORD *, __int16 *))(v2 + 64);
  v20[0] = *(_WORD *)(v2 + 120);
  uint64_t v12 = v11(v20, &v21);
  if (v13) {
    return sub_1002314D4(v9);
  }
  uint64_t v14 = v12;
  swift_beginAccess();
  if (*(void *)(v2 + 88) == 1)
  {
    uint64_t v15 = *(void *)(v2 + 80);
    *(void *)(v2 + 80) = v14;
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    *(_WORD *)(v2 + 104) = v9;
    sub_100027F90(v15, 1);
    return sub_1000270D8();
  }
  else
  {
    uint64_t v17 = sub_10023011C();
    if (v16[1] != 1) {
      *uint64_t v16 = v14;
    }
    ((void (*)(_WORD *, void))v17)(v20, 0);
    uint64_t v19 = sub_10023011C();
    if (*(void *)(v18 + 8) != 1) {
      *(_WORD *)(v18 + 24) = v9;
    }
    return ((uint64_t (*)(_WORD *, void))v19)(v20, 0);
  }
}

uint64_t sub_1000260A0(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)&v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v22 = a1;
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  unsigned __int8 v10 = v22;
  uint64_t v11 = *(unsigned __int8 *)(v2 + 106);
  if (v11 == 2)
  {
    if (v22 == 2) {
      goto LABEL_8;
    }
LABEL_7:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_8;
  }
  if (v22 == 2 || ((v22 & 1) == 0) == (v11 & 1)) {
    goto LABEL_7;
  }
LABEL_8:
  *(unsigned char *)(v2 + 106) = v10;
  sub_100230508(v11);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, unsigned __int8 *))(v2 + 64);
  v21[0] = *(unsigned char *)(v2 + 120);
  uint64_t v13 = v12(v21, &v22);
  if (v14) {
    return sub_100231600(v10);
  }
  uint64_t v15 = v13;
  swift_beginAccess();
  if (*(void *)(v2 + 88) == 1)
  {
    uint64_t v16 = *(void *)(v2 + 80);
    *(void *)(v2 + 80) = v15;
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    *(unsigned char *)(v2 + 104) = v10;
    sub_100027F90(v16, 1);
    return sub_100027588();
  }
  else
  {
    uint64_t v18 = sub_100230170();
    if (v17[1] != 1) {
      *uint64_t v17 = v15;
    }
    ((void (*)(unsigned char *, void))v18)(v21, 0);
    os_log_type_t v20 = sub_100230170();
    if (*(void *)(v19 + 8) != 1) {
      *(unsigned char *)(v19 + 24) = v10;
    }
    return ((uint64_t (*)(unsigned char *, void))v20)(v21, 0);
  }
}

uint64_t sub_100026344(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)&v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v22 = a1;
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  unsigned __int8 v10 = v22;
  uint64_t v11 = *(unsigned __int8 *)(v2 + 106);
  if (v11 == 9)
  {
    if (v22 == 9) {
      goto LABEL_8;
    }
LABEL_7:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_8;
  }
  if (v22 == 9 || v11 != v22) {
    goto LABEL_7;
  }
LABEL_8:
  *(unsigned char *)(v2 + 106) = v10;
  sub_100230830(v11);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, unsigned __int8 *))(v2 + 64);
  v21[0] = *(unsigned char *)(v2 + 120);
  uint64_t v13 = v12(v21, &v22);
  if (v14) {
    return sub_100231744(v10);
  }
  uint64_t v15 = v13;
  swift_beginAccess();
  if (*(void *)(v2 + 88) == 1)
  {
    uint64_t v16 = *(void *)(v2 + 80);
    *(void *)(v2 + 80) = v15;
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    *(unsigned char *)(v2 + 104) = v10;
    sub_100027F90(v16, 1);
    return sub_100027A38();
  }
  else
  {
    uint64_t v18 = sub_100230170();
    if (v17[1] != 1) {
      *uint64_t v17 = v15;
    }
    ((void (*)(unsigned char *, void))v18)(v21, 0);
    os_log_type_t v20 = sub_100230170();
    if (*(void *)(v19 + 8) != 1) {
      *(unsigned char *)(v19 + 24) = v10;
    }
    return ((uint64_t (*)(unsigned char *, void))v20)(v21, 0);
  }
}

void sub_1000265DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(v1 + 88);
    if (v7 == 1)
    {
      __int16 v8 = 2;
    }
    else
    {
      __int16 v8 = *(_WORD *)(v1 + 104);
      uint64_t v9 = *(void *)(v1 + 80);
      swift_unknownObjectRetain();
      sub_100027F90(v9, v7);
    }
    uint64_t v10 = *(unsigned __int16 *)(v1 + 120);
    sub_10023187C();
    uint64_t v11 = *(void *)(v1 + 80);
    uint64_t v12 = *(void *)(v1 + 88);
    long long v26 = xmmword_1002B3310;
    *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
    *(void *)(v1 + 96) = 0;
    *(_WORD *)(v1 + 104) = 0;
    sub_100027F90(v11, v12);
    __int16 v13 = *(_WORD *)(v1 + 120);
    if (v13 == 2)
    {
      if (v8 == 2) {
        goto LABEL_10;
      }
    }
    else if (v8 != 2)
    {
      BOOL v24 = (v13 & 1) == 0;
      int v25 = (v13 & 0x100) == 0;
      if ((v8 & 1) != v24 && v25 != (unsigned __int16)(v8 & 0x100) >> 8)
      {
LABEL_10:
        *(_WORD *)(v1 + 120) = v8;
        sub_100230B4C(v10);
        uint64_t v14 = *(void *)(v1 + 80);
        uint64_t v15 = *(void *)(v1 + 88);
        *(_OWORD *)(v1 + 80) = v26;
        *(void *)(v1 + 96) = 0;
        *(_WORD *)(v1 + 104) = 0;
        sub_100027F90(v14, v15);
        if (qword_10037DD80 == -1) {
          goto LABEL_11;
        }
        goto LABEL_18;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_10;
  }
  __break(1u);
LABEL_18:
  swift_once();
LABEL_11:
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000FD84(v16, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v20 = *(void *)(v1 + 48);
    unint64_t v21 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1001B3178(v20, v21, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    LOWORD(v27) = *(_WORD *)(v1 + 120);
    sub_100004010(&qword_100380298);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v27 = sub_1001B3178(v22, v23, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s hysteresis timer expired, settling in %{public}s state", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_100026A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 88);
  if (v7 == 1)
  {
    unsigned __int8 v8 = 2;
  }
  else
  {
    unsigned __int8 v8 = *(unsigned char *)(v1 + 104);
    uint64_t v9 = *(void *)(v1 + 80);
    swift_unknownObjectRetain();
    sub_100027F90(v9, v7);
  }
  sub_100231600(v8);
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v11 = *(void *)(v1 + 88);
  *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  sub_100027F90(v10, v11);
  if (qword_10037DD80 != -1) {
    goto LABEL_10;
  }
LABEL_6:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  swift_retain_n();
  __int16 v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446466;
    uint64_t v16 = *(void *)(v1 + 48);
    unint64_t v17 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1001B3178(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    LOBYTE(v21) = *(unsigned char *)(v1 + 120);
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v21 = sub_1001B3178(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s hysteresis timer expired, settling in %{public}s state", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_100026D74()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 88);
  if (v7 == 1)
  {
    unsigned __int8 v8 = 9;
  }
  else
  {
    unsigned __int8 v8 = *(unsigned char *)(v1 + 104);
    uint64_t v9 = *(void *)(v1 + 80);
    swift_unknownObjectRetain();
    sub_100027F90(v9, v7);
  }
  sub_100231744(v8);
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v11 = *(void *)(v1 + 88);
  *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  sub_100027F90(v10, v11);
  if (qword_10037DD80 != -1) {
    goto LABEL_10;
  }
LABEL_6:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  swift_retain_n();
  __int16 v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446466;
    uint64_t v16 = *(void *)(v1 + 48);
    unint64_t v17 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1001B3178(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    LOBYTE(v21) = *(unsigned char *)(v1 + 120);
    sub_100004010(&qword_1003802A8);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v21 = sub_1001B3178(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s hysteresis timer expired, settling in %{public}s state", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1000270D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  if (*(unsigned char *)(v1 + 106)) {
    return result;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 88);
  if (v2 == 1) {
    return result;
  }
  uint64_t v8 = *(void *)(v1 + 80);
  v28[1] = *(void *)(v1 + 96);
  int v29 = *(unsigned __int16 *)(v1 + 104);
  swift_unknownObjectRetain();
  uint64_t v10 = sub_10023011C();
  uint64_t v11 = *(void *)(v9 + 8);
  v28[0] = v8;
  if (v11 != 1)
  {
    uint64_t v12 = v9;
    double v13 = *(double *)&v8;
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for TimerBasedHysteresisSchedulerEvent();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    uint64_t v16 = self;
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v18[2] = v17;
    v18[3] = sub_100027FA4;
    v18[4] = v14;
    aBlock[4] = (uint64_t)sub_100027FD8;
    aBlock[5] = (uint64_t)v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008A9B0;
    aBlock[3] = (uint64_t)&unk_10034F1E0;
    unint64_t v19 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    id v20 = [v16 scheduledTimerWithTimeInterval:0 repeats:v19 block:v28[0]];
    swift_release();
    _Block_release(v19);
    uint64_t v21 = *(void **)(v15 + 16);
    *(void *)(v15 + 16) = v20;
    swift_release_n();

    *(void *)(v12 + 8) = v15;
    *(void *)(v12 + 16) = &off_100360F28;
    swift_unknownObjectRelease();
  }
  ((void (*)(uint64_t *, void))v10)(v31, 0);
  if (qword_10037DD80 != -1) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9958);
  swift_retain_n();
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)int v25 = 136446210;
    uint64_t v27 = *(void *)(v1 + 48);
    unint64_t v26 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    v31[0] = sub_1001B3178(v27, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s hysteresis is not suspended and pending, scheduled hysteresis event", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return sub_100027F90(v28[0], v2);
}

uint64_t sub_100027588()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  if (*(unsigned char *)(v1 + 105)) {
    return result;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 88);
  if (v2 == 1) {
    return result;
  }
  uint64_t v8 = *(void *)(v1 + 80);
  v28[1] = *(void *)(v1 + 96);
  int v29 = *(unsigned __int8 *)(v1 + 104);
  swift_unknownObjectRetain();
  uint64_t v10 = sub_100230170();
  uint64_t v11 = *(void *)(v9 + 8);
  v28[0] = v8;
  if (v11 != 1)
  {
    uint64_t v12 = v9;
    double v13 = *(double *)&v8;
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for TimerBasedHysteresisSchedulerEvent();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    uint64_t v16 = self;
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v18[2] = v17;
    v18[3] = sub_100028564;
    v18[4] = v14;
    aBlock[4] = (uint64_t)sub_1000285E4;
    aBlock[5] = (uint64_t)v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008A9B0;
    aBlock[3] = (uint64_t)&unk_10034F348;
    unint64_t v19 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    id v20 = [v16 scheduledTimerWithTimeInterval:0 repeats:v19 block:v28[0]];
    swift_release();
    _Block_release(v19);
    uint64_t v21 = *(void **)(v15 + 16);
    *(void *)(v15 + 16) = v20;
    swift_release_n();

    *(void *)(v12 + 8) = v15;
    *(void *)(v12 + 16) = &off_100360F28;
    swift_unknownObjectRelease();
  }
  ((void (*)(uint64_t *, void))v10)(v31, 0);
  if (qword_10037DD80 != -1) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9958);
  swift_retain_n();
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)int v25 = 136446210;
    uint64_t v27 = *(void *)(v1 + 48);
    unint64_t v26 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    v31[0] = sub_1001B3178(v27, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s hysteresis is not suspended and pending, scheduled hysteresis event", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return sub_100027F90(v28[0], v2);
}

uint64_t sub_100027A38()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  if (*(unsigned char *)(v1 + 105)) {
    return result;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 88);
  if (v2 == 1) {
    return result;
  }
  uint64_t v8 = *(void *)(v1 + 80);
  v28[1] = *(void *)(v1 + 96);
  int v29 = *(unsigned __int8 *)(v1 + 104);
  swift_unknownObjectRetain();
  uint64_t v10 = sub_100230170();
  uint64_t v11 = *(void *)(v9 + 8);
  v28[0] = v8;
  if (v11 != 1)
  {
    uint64_t v12 = v9;
    double v13 = *(double *)&v8;
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for TimerBasedHysteresisSchedulerEvent();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    uint64_t v16 = self;
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v18[2] = v17;
    v18[3] = sub_100028530;
    v18[4] = v14;
    aBlock[4] = (uint64_t)sub_1000285E4;
    aBlock[5] = (uint64_t)v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008A9B0;
    aBlock[3] = (uint64_t)&unk_10034F2D0;
    unint64_t v19 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    id v20 = [v16 scheduledTimerWithTimeInterval:0 repeats:v19 block:v28[0]];
    swift_release();
    _Block_release(v19);
    uint64_t v21 = *(void **)(v15 + 16);
    *(void *)(v15 + 16) = v20;
    swift_release_n();

    *(void *)(v12 + 8) = v15;
    *(void *)(v12 + 16) = &off_100360F28;
    swift_unknownObjectRelease();
  }
  ((void (*)(uint64_t *, void))v10)(v31, 0);
  if (qword_10037DD80 != -1) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9958);
  swift_retain_n();
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)int v25 = 136446210;
    uint64_t v27 = *(void *)(v1 + 48);
    unint64_t v26 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    v31[0] = sub_1001B3178(v27, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s hysteresis is not suspended and pending, scheduled hysteresis event", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return sub_100027F90(v28[0], v2);
}

uint64_t sub_100027EE8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a4();
    return swift_release();
  }
  return result;
}

uint64_t sub_100027F48()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100027F84(int a1)
{
  return sub_100025AD8(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_100027F90(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100027FA4(uint64_t a1, uint64_t a2)
{
  return sub_100027EE8(a1, a2, v2, sub_1000265DC);
}

uint64_t sub_100027FD8(uint64_t a1)
{
  return sub_10025A694(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, _UNKNOWN **))(v1 + 24));
}

uint64_t sub_100027FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100027FF4()
{
  return swift_release();
}

uint64_t sub_100027FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(a6 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v12 = PassthroughSubject.init()();
  *(unsigned char *)(a6 + 106) = 2;
  *(_WORD *)(a6 + 107) = 2;
  *(_WORD *)(a6 + 120) = 2;
  *(_OWORD *)(a6 + 80) = xmmword_1002B3310;
  *(void *)(a6 + 96) = 0;
  *(_WORD *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = 0;
  *(void *)(a6 + 128) = 0;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = a1;
  *(void *)(a6 + 40) = &off_100360F18;
  *(void *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = a4;
  *(void *)(a6 + 72) = a5;
  return a6;
}

uint64_t sub_1000280D0(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  swift_retain();
  uint64_t *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    if (qword_10037DDD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9A60);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 67109120;
    v25[3] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "setOffTheGridMode: on - %{BOOL}d", v16, 8u);
    swift_slowDealloc();
  }

  uint64_t v17 = *(void **)(a3 + 32);
  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    unint64_t v19 = (void *)swift_allocObject();
    uint64_t v19[2] = v18;
    v19[3] = sub_10002841C;
    v19[4] = a4;
    id v20 = v17;
    swift_retain();
    swift_retain();
    sub_10025EC28(a1 & 1, a2, (uint64_t)sub_1000285E0, (uint64_t)v19);
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "agent is not started, ignoring setOffTheGridMode request", v23, 2u);
      swift_slowDealloc();
    }

    sub_10019A0FC(a4);
  }
  return swift_release();
}

uint64_t sub_10002841C()
{
  return sub_10019A0FC(v0);
}

unint64_t sub_100028428()
{
  unint64_t result = qword_100393AC0;
  if (!qword_100393AC0)
  {
    sub_10000FDBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100393AC0);
  }
  return result;
}

uint64_t sub_100028480(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000284E0()
{
  return sub_100024E70();
}

uint64_t sub_1000284E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100028520(uint64_t a1)
{
  return sub_10026114C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100028528()
{
  return sub_100024EDC();
}

uint64_t sub_100028530(uint64_t a1, uint64_t a2)
{
  return sub_100027EE8(a1, a2, v2, sub_100026D74);
}

uint64_t sub_100028564(uint64_t a1, uint64_t a2)
{
  return sub_100027EE8(a1, a2, v2, sub_100026A10);
}

uint64_t sub_100028598()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000285D8(__int16 a1)
{
  return sub_10002547C(a1);
}

id sub_100028A54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return [super dealloc];
}

uint64_t sub_100028A98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_100380410);
  __chkstk_darwin(v4 - 8);
  Swift::String v59 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380418);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v60 - 8);
  uint64_t v10 = __chkstk_darwin(v60);
  char v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v55 - v13;
  uint64_t v15 = sub_100004010(&qword_100380420);
  __chkstk_darwin(v15 - 8);
  double v63 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  __n128 v62 = (void (**)(char *, char *))((char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  long long v61 = (char *)v55 - v21;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = sub_10000FD84(v22, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  v55[2] = v23;
  os_log_type_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v56 = v12;
  uint64_t v57 = v14;
  uint64_t v58 = v8;
  if (v26)
  {
    v55[0] = v9;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v55[1] = v2;
    uint64_t v64 = a1;
    v65[0] = v28;
    *(_DWORD *)uint64_t v27 = 136446210;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380438);
    uint64_t v29 = String.init<A>(describing:)();
    uint64_t v64 = sub_1001B3178(v29, v30, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v55[0];
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "AppDelegate didFinishLaunchingWithOptions(%{public}s)", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v31 = [self mainBundle];
  id v32 = [v31 executableURL];

  uint64_t v33 = (uint64_t)v63;
  if (!v32)
  {
    v18[7](v63, 1, 1, v17);
    goto LABEL_10;
  }
  long long v34 = v62;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = v18[4];
  ((void (*)(uint64_t, void (**)(char *, char *), uint64_t))v35)(v33, v34, v17);
  v18[7]((char *)v33, 0, 1, v17);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v18[6])(v33, 1, v17) == 1)
  {
LABEL_10:
    uint64_t v39 = &qword_100380420;
LABEL_14:
    sub_10000950C(v33, v39);
    return sub_100197A78() & 1;
  }
  ((void (*)(char *, uint64_t, uint64_t))v35)(v61, v33, v17);
  sub_100004010(&qword_100380428);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = NSURLCreationDateKey;
  uint64_t v37 = NSURLCreationDateKey;
  sub_10026531C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v38 = (uint64_t)v59;
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for URLResourceValues();
  uint64_t v41 = *(void *)(v40 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v38, 1, v40) == 1)
  {
    sub_10000950C(v38, &qword_100380410);
    uint64_t v33 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v58, 1, 1, v60);
LABEL_13:
    ((void (*)(char *, uint64_t))v18[1])(v61, v17);
    uint64_t v39 = &qword_100380418;
    goto LABEL_14;
  }
  uint64_t v33 = (uint64_t)v58;
  URLResourceValues.creationDate.getter();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v33, 1, v60) == 1) {
    goto LABEL_13;
  }
  Swift::String_optional v43 = v57;
  uint64_t v44 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v57, v33, v60);
  uint64_t v45 = v56;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v56, v43, v44);
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    Swift::String v59 = (char *)swift_slowAlloc();
    v65[0] = (uint64_t)v59;
    __n128 v62 = (void (**)(char *, char *))v18;
    double v63 = (char *)v17;
    *(_DWORD *)uint64_t v48 = 136446210;
    sub_1000298AC(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v49 = v60;
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v64 = sub_1001B3178(v50, v51, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v9 + 8);
    v52(v45, v49);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Creation timestamp: (%{public}s)", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v52(v57, v49);
    v62[1](v61, v63);
  }
  else
  {

    unint64_t v53 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v54 = v60;
    v53(v45, v60);
    v53(v43, v54);
    ((void (*)(char *, uint64_t))v18[1])(v61, v17);
  }
  return sub_100197A78() & 1;
}

id sub_100029408(void *a1, void *a2)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  id v5 = a2;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    id v25 = v5;
    id v9 = v5;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v12 = a1;
    unint64_t v14 = v13;

    sub_1001B3178(v11, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a1 = v12;
    id v5 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AppDelegate connectingSceneSession(%{public}s)", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v15 = [v5 URLContexts];
  sub_10002986C();
  sub_1000298AC((unint64_t *)&unk_100380B80, (void (*)(uint64_t))sub_10002986C);
  uint64_t v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v16 & 0xC000000000000001) != 0) {
    uint64_t v17 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v17 = *(void *)(v16 + 16);
  }
  swift_bridgeObjectRelease();
  if (v17)
  {
    id v18 = [v5 URLContexts];
    uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10019961C(v19);
    swift_bridgeObjectRelease();
  }
  id v20 = [a1 role];
  id v21 = objc_allocWithZone((Class)UISceneConfiguration);
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 initWithName:v22 sessionRole:v20];

  return v23;
}

uint64_t sub_100029760()
{
  swift_release();

  return swift_deallocClassInstance();
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t type metadata accessor for ProdAppDelegate()
{
  return self;
}

unint64_t sub_10002986C()
{
  unint64_t result = qword_100380400;
  if (!qword_100380400)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100380400);
  }
  return result;
}

uint64_t sub_1000298AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000298F4()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_100380528);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 32) = PassthroughSubject.init()();
  type metadata accessor for PreventSuspension();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = 0x6F6D20726566664FLL;
  v2[3] = 0xEA00000000006564;
  v2[4] = 0;
  *(void *)(v0 + 40) = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v3 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v3 = _swiftEmptySetSingleton;
  }
  *(void *)(v0 + 48) = v3;
  *(unsigned char *)(v0 + 56) = 0;
  *(_WORD *)(v0 + 57) = 2;
  swift_release();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  uint64_t v4 = qword_10037DE08;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9AF0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] init", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_100029BE4()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100029C1C()
{
  uint64_t v1 = v0;
  if (qword_10037DE08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9AF0);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100029E2C()
{
  sub_100029C1C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OfferModel()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for OfferModel.OfferState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100029F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferModel.OfferState()
{
  return &type metadata for OfferModel.OfferState;
}

uint64_t initializeBufferWithCopyOfBuffer for QuestionnaireState.RecordedAnswer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for QuestionnaireState.RecordedAnswer()
{
  return swift_release();
}

uint64_t assignWithCopy for OfferModel.OfferActionEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OfferModel.OfferActionEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceOutageModel.OutageDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceOutageModel.OutageDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferModel.OfferActionEvent()
{
  return &type metadata for OfferModel.OfferActionEvent;
}

unint64_t sub_10002A0E0()
{
  unint64_t result = qword_100380520;
  if (!qword_100380520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380520);
  }
  return result;
}

uint64_t sub_10002A134(uint64_t result)
{
  if (*(unsigned __int8 *)(v1 + 56) != result)
  {
    uint64_t v2 = v1;
    if (qword_10037DE08 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000FD84(v3, (uint64_t)qword_1003A9AF0);
    swift_retain_n();
    unsigned int v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      uint64_t v7 = String.init<A>(describing:)();
      sub_1001B3178(v7, v8, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "state changed from: %{public}s to: %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    int v11 = *(unsigned __int8 *)(v2 + 56);
    if (v11 == 3)
    {
      type metadata accessor for PreventSuspensionAssertion();
      swift_allocObject();
      uint64_t v12 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000017, 0x80000001002C73F0);
      LOBYTE(v17[0]) = 1;
    }
    else
    {
      if (v11 != 4) {
        goto LABEL_12;
      }
      type metadata accessor for PreventSuspensionAssertion();
      swift_allocObject();
      uint64_t v12 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000017, 0x80000001002C73F0);
      LOBYTE(v17[0]) = 0;
    }
    v17[1] = v12;
    PassthroughSubject.send(_:)();
    swift_release();
LABEL_12:
    unint64_t v13 = *(void **)(v2 + 40);
    if (*(unsigned __int8 *)(v2 + 56) - 1 > 1)
    {
      uint64_t v16 = 0;
    }
    else
    {
      if (v13[4])
      {
LABEL_17:
        sub_100004010(&qword_100393AA0);
        sub_100019834();
        return Subject<>.send()();
      }
      uint64_t v14 = v13[2];
      unint64_t v15 = v13[3];
      type metadata accessor for PreventSuspensionAssertion();
      swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, v14, v15);
    }
    v13[4] = v16;
    swift_release();
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_10002A4D8(char a1)
{
  uint64_t v2 = v1;
  if (qword_10037DE08 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9AF0);
  swift_retain_n();
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleOfferRequest: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (a1) {
    int v10 = 1;
  }
  else {
    int v10 = 2;
  }
  uint64_t v11 = *(unsigned __int8 *)(v2 + 56);
  if (v11 != v10)
  {
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
  }
  *(unsigned char *)(v2 + 56) = v10;
  return sub_10002A134(v11);
}

void sub_10002A6E0()
{
}

void sub_10002A6F0()
{
}

void sub_10002A700(char a1, const char *a2)
{
  uint64_t v3 = *(unsigned __int8 *)(v2 + 56);
  if ((v3 - 1) > 1u)
  {
    if (qword_10037DE08 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9AF0);
    swift_retain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 136446210;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
    *(unsigned char *)(v2 + 56) = a1;
    sub_10002A134(v3);
  }
}

unsigned char *storeEnumTagSinglePayload for OfferModel.OfferAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002AA00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferModel.OfferAction()
{
  return &type metadata for OfferModel.OfferAction;
}

unint64_t sub_10002AA3C()
{
  unint64_t result = qword_100380530;
  if (!qword_100380530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380530);
  }
  return result;
}

uint64_t sub_10002AA94()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_100383A20);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  sub_100004010(qword_1003807A0);
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  *(void *)(v0 + 32) = 0xD000000000000015;
  *(void *)(v0 + 40) = 0x80000001002C7BD0;
  *(void *)(v0 + 48) = 0x637269632E736F73;
  *(void *)(v0 + 56) = 0xEF6C6C69662E656CLL;
  *(void *)(v0 + 64) = 0x796D646E6966;
  *(void *)(v0 + 72) = 0xE600000000000000;
  *(void *)(v0 + 80) = 30;
  *(void *)(v0 + 88) = [objc_allocWithZone((Class)type metadata accessor for NotificationAgent()) init];
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 112) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 120) = 0;
  *(_WORD *)(v0 + 128) = 514;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy22LockScreenNotification__lastTargetDisappearedAt;
  uint64_t v3 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    type metadata accessor for LockScreenNotification();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}s] init", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10002AD84()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for LockScreenNotification();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10002D3E4(v1 + 104);
  swift_release();
  sub_10000950C(v1 + OBJC_IVAR____TtC8SOSBuddy22LockScreenNotification__lastTargetDisappearedAt, &qword_100380788);
  return v1;
}

uint64_t sub_10002AFA8()
{
  sub_10002AD84();

  return swift_deallocClassInstance();
}

uint64_t sub_10002B000()
{
  return type metadata accessor for LockScreenNotification();
}

uint64_t type metadata accessor for LockScreenNotification()
{
  uint64_t result = qword_100380568;
  if (!qword_100380568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002B054()
{
  sub_10002D190();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10002B13C()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(void *)(v0 + 112);
    sub_10000FDBC();
    swift_retain();
    uint64_t v5 = static OS_dispatch_queue.main.getter();
    sub_100004010(&qword_100380790);
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v7 = (void *)sub_100265020((unint64_t)&_swiftEmptyArrayStorage);
    }
    else
    {
      unint64_t v7 = &_swiftEmptySetSingleton;
    }
    *(void *)(v6 + 32) = v7;
    swift_weakAssign();
    swift_release();
    *(void *)(v6 + 24) = v5;
    uint64_t v8 = swift_retain();
    sub_1002A7BD0(v8, (uint64_t)sub_10002B5FC, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v9 = swift_retain();
    sub_1002A7EC4(v9, (uint64_t)sub_10002B600, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v10 = swift_retain();
    sub_1002A7BD0(v10, (uint64_t)sub_10002B6EC, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v11 = swift_retain();
    sub_1002A7BD0(v11, (uint64_t)sub_10002B5FC, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v12 = *(void *)(*(void *)(*(void *)(v3 + 48) + 56) + 24);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v3;
    *(void *)(v13 + 24) = v4;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1002A7BD0(v12, (uint64_t)sub_10002D348, v13);
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v14 = swift_retain();
    sub_1002A7BD0(v14, (uint64_t)sub_10002B928, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v15 = swift_retain();
    sub_1002A81B8(v15, (uint64_t)sub_10002B79C, 0);
    swift_retain();
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v16 = swift_retain();
    sub_1002A84AC(v16, (uint64_t)sub_10002D350, v1);
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v17 = swift_retain();
    uint64_t v18 = sub_1002A87A0(v17, (uint64_t)sub_10002BC80, 0);
    swift_retain();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(v1 + 120) = v18;
    swift_release();
  }
  else
  {
    if (qword_10037DE00 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000FD84(v19, (uint64_t)qword_1003A9AD8);
    oslog = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v20, "Unexpected _env == nil", v21, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10002B600(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void *)(Strong + 72);
    swift_retain();
    swift_unknownObjectRelease();
    char v4 = *(unsigned char *)(v3 + 48);
    swift_release();
    if (v4) {
      *(unsigned char *)(a1 + 128) = 1;
    }
  }
  sub_10002C550((uint64_t)v6);
  sub_10000D544((uint64_t)v6, (uint64_t)&v7, &qword_100380798);
  if (*((void *)&v8 + 1))
  {
    v11[0] = v7;
    v11[1] = v8;
    _OWORD v11[2] = v9;
    char v12 = v10;
    sub_100088A54((uint64_t)v11);
    sub_10002D358(v6);
  }
  else
  {
    sub_10008A008(0);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  return sub_10008A008(1);
}

uint64_t sub_10002B6EC(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 2;
  sub_10002C550((uint64_t)v2);
  sub_10000D544((uint64_t)v2, (uint64_t)&v3, &qword_100380798);
  if (*((void *)&v4 + 1))
  {
    v7[0] = v3;
    v7[1] = v4;
    uint64_t v7[2] = v5;
    char v8 = v6;
    sub_100088A54((uint64_t)v7);
    sub_10002D358(v2);
  }
  else
  {
    sub_10008A008(0);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  return sub_10008A008(1);
}

uint64_t sub_10002B79C()
{
  sub_10002C550((uint64_t)v1);
  sub_10000D544((uint64_t)v1, (uint64_t)&v2, &qword_100380798);
  if (*((void *)&v3 + 1))
  {
    v6[0] = v2;
    v6[1] = v3;
    _OWORD v6[2] = v4;
    char v7 = v5;
    sub_100088A54((uint64_t)v6);
    sub_10002D358(v1);
  }
  else
  {
    sub_10008A008(0);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  return sub_10008A008(1);
}

uint64_t sub_10002B844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 48) + 56);
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) != 0
    || (*(unsigned char *)(v3 + 66) & 1) != 0)
  {
    int v4 = 1;
  }
  else
  {
    int v4 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24);
  }
  sub_10002BED0(a1, a2, a3, v4);
  sub_10002C550((uint64_t)v6);
  sub_10000D544((uint64_t)v6, (uint64_t)&v7, &qword_100380798);
  if (*((void *)&v8 + 1))
  {
    v11[0] = v7;
    v11[1] = v8;
    _OWORD v11[2] = v9;
    char v12 = v10;
    sub_100088A54((uint64_t)v11);
    sub_10002D358(v6);
  }
  else
  {
    sub_10008A008(0);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  return sub_10008A008(1);
}

uint64_t sub_10002B928(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v3 = *(void *)(Strong + 72),
        swift_retain(),
        swift_unknownObjectRelease(),
        char v4 = *(unsigned char *)(v3 + 48),
        swift_release(),
        (v4 & 1) == 0))
  {
    *(unsigned char *)(a1 + 128) = 2;
  }
  sub_10002C550((uint64_t)v6);
  sub_10000D544((uint64_t)v6, (uint64_t)&v7, &qword_100380798);
  if (*((void *)&v8 + 1))
  {
    v11[0] = v7;
    v11[1] = v8;
    _OWORD v11[2] = v9;
    char v12 = v10;
    sub_100088A54((uint64_t)v11);
    sub_10002D358(v6);
  }
  else
  {
    sub_10008A008(0);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  return sub_10008A008(1);
}

void sub_10002BA14(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  if (*a2)
  {
    *(void *)(a1 + 96) = 0;
LABEL_11:
    if (qword_10037DE00 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000FD84(v9, (uint64_t)qword_1003A9AD8);
    char v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "didFinishPostNotificationRequest: checking if update is required", v12, 2u);
      swift_slowDealloc();
    }

    sub_10002C550((uint64_t)v14);
    sub_10000D544((uint64_t)v14, (uint64_t)&v15, &qword_100380798);
    if (*((void *)&v16 + 1))
    {
      v19[0] = v15;
      v19[1] = v16;
      uint64_t v19[2] = v17;
      char v20 = v18;
      sub_100088A54((uint64_t)v19);
      sub_10002D358(v14);
    }
    else
    {
      sub_10008A008(0);
    }
    if (swift_unknownObjectWeakLoadStrong()) {
      swift_unknownObjectRelease();
    }
    sub_10008A008(1);
    return;
  }
  uint64_t v3 = *(void *)(a1 + 96);
  BOOL v4 = __CFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_6;
  }
  *(void *)(a1 + 96) = v5;
  if (*(void *)(a3 + 96) < 8uLL) {
    goto LABEL_11;
  }
  if (qword_10037DE00 != -1) {
    goto LABEL_22;
  }
LABEL_6:
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9AD8);
  oslog = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v7))
  {
    long long v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, "didFinishPostNotificationRequest: too many failures, skipping update", v8, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10002BC80()
{
  return swift_release();
}

uint64_t sub_10002BCD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v1 + 128) = 514;
  uint64_t v9 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v1 + OBJC_IVAR____TtC8SOSBuddy22LockScreenNotification__lastTargetDisappearedAt;
  swift_beginAccess();
  sub_10002D2A8(v8, v10);
  swift_endAccess();
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    sub_10008A008(0);
    uint64_t result = sub_10008A008(1);
    *(void *)(v1 + 96) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10002BED0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  BOOL v7 = (a4 & 1) == 0;
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = sub_100004010(&qword_100380788);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)&v50 - v20;
  __chkstk_darwin(v19);
  id v23 = (char *)&v50 - v22;
  int v24 = *(unsigned __int8 *)(v5 + 129);
  if (v24 == 2)
  {
    *(unsigned char *)(v5 + 129) = v7;
    return;
  }
  if (((a4 ^ v24) & 1) == 0)
  {
    *(unsigned char *)(v5 + 129) = v7;
    if (v24 & 1) != 0 && (a4)
    {
      static DispatchTime.now()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v23, 0, 1, v8);
      sub_10000D544((uint64_t)v23, (uint64_t)v21, &qword_100380788);
      uint64_t v25 = v5 + OBJC_IVAR____TtC8SOSBuddy22LockScreenNotification__lastTargetDisappearedAt;
      swift_beginAccess();
      sub_10002D2A8((uint64_t)v21, v25);
      swift_endAccess();
      return;
    }
    if ((v24 & 1) == 0 && (a4 & 1) == 0)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v27 = *(void *)(Strong + 72);
        swift_retain();
        swift_unknownObjectRelease();
        char v28 = *(unsigned char *)(v27 + 48);
        swift_release();
        if (v28)
        {
          uint64_t v29 = v5 + OBJC_IVAR____TtC8SOSBuddy22LockScreenNotification__lastTargetDisappearedAt;
          swift_beginAccess();
          sub_10000D2A0(v29, (uint64_t)v18, &qword_100380788);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) == 1)
          {
            sub_10000950C((uint64_t)v18, &qword_100380788);
            if (qword_10037DE00 != -1) {
              swift_once();
            }
            uint64_t v30 = type metadata accessor for Logger();
            sub_10000FD84(v30, (uint64_t)qword_1003A9AD8);
            id v31 = Logger.logObject.getter();
            os_log_type_t v32 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v33 = 0;
              _os_log_impl((void *)&_mh_execute_header, v31, v32, "Detected first time 'no target -> target' transition", v33, 2u);
              swift_slowDealloc();
            }

LABEL_30:
            sub_10008A008(0);
            uint64_t v43 = swift_unknownObjectWeakLoadStrong();
            if (!v43) {
              goto LABEL_33;
            }
            uint64_t v44 = *(void *)(*(void *)(v43 + 48) + 56);
            swift_retain();
            swift_unknownObjectRelease();
            uint64_t v45 = *(void *)(v44 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
            swift_bridgeObjectRetain();
            swift_release();
            LOBYTE(v44) = sub_1001E2D40((uint64_t)&off_10034A0D8, v45);
            swift_bridgeObjectRelease();
            if (v44)
            {
              LOBYTE(v50) = 2;
              swift_retain();
              PassthroughSubject.send(_:)();
              swift_release();
            }
            else
            {
LABEL_33:
              if (qword_10037DE00 != -1) {
                swift_once();
              }
              uint64_t v46 = type metadata accessor for Logger();
              sub_10000FD84(v46, (uint64_t)qword_1003A9AD8);
              os_log_type_t v47 = Logger.logObject.getter();
              os_log_type_t v48 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v47, v48))
              {
                uint64_t v49 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v49 = 0;
                _os_log_impl((void *)&_mh_execute_header, v47, v48, "Skipping haptic, orientation guidance will take care of it", v49, 2u);
                swift_slowDealloc();
              }
            }
            return;
          }
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v18, v8);
          static DispatchTime.now()();
          unint64_t v34 = DispatchTime.uptimeNanoseconds.getter();
          if (DispatchTime.uptimeNanoseconds.getter() < v34)
          {
            unint64_t v35 = DispatchTime.uptimeNanoseconds.getter();
            unint64_t v36 = DispatchTime.uptimeNanoseconds.getter();
            unint64_t v37 = v35 - v36;
            if (v35 >= v36)
            {
LABEL_22:
              uint64_t v38 = *(void (**)(char *, uint64_t))(v9 + 8);
              v38(v12, v8);
              if (v37 < 0x737BE7600)
              {
                v38(v14, v8);
                return;
              }
              if (qword_10037DE00 != -1) {
                swift_once();
              }
              uint64_t v39 = type metadata accessor for Logger();
              sub_10000FD84(v39, (uint64_t)qword_1003A9AD8);
              swift_retain();
              uint64_t v40 = Logger.logObject.getter();
              os_log_type_t v41 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v40, v41))
              {
                uint64_t v42 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v42 = 134349056;
                uint64_t v50 = 30;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, v40, v41, "Detected 'no target -> target' transition longer than %{public}ld seconds", v42, 0xCu);
                swift_slowDealloc();
              }
              else
              {
                swift_release();
              }

              v38(v14, v8);
              goto LABEL_30;
            }
            __break(1u);
          }
          unint64_t v37 = 0;
          goto LABEL_22;
        }
      }
    }
  }
}

void sub_10002C550(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_100380780);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConnectionClosed(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_44;
  }
  uint64_t v11 = (void *)Strong;
  int v12 = *(unsigned __int8 *)(*(void *)(Strong + 72) + 48);
  if (v12 == 2 || (v12 & 1) == 0) {
    goto LABEL_43;
  }
  uint64_t v13 = *(void *)(*(void *)(Strong + 48) + 32);
  if (!*(void *)(v13 + 64) || *(unsigned char *)(v13 + 56) != 5)
  {
    int v17 = *(unsigned __int8 *)(v1 + 128);
    if (v17 == 2 || (v17 & 1) == 0) {
      goto LABEL_43;
    }
    id v103 = self;
    id v18 = [v103 mainBundle];
    v19._uint64_t countAndFlagsBits = 0xD000000000000014;
    v105._uint64_t countAndFlagsBits = 0xD00000000000008ALL;
    v105._object = (void *)0x80000001002C75D0;
    v19._object = (void *)0x80000001002C75B0;
    v20._uint64_t countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v105);
    uint64_t countAndFlagsBits = v21._countAndFlagsBits;
    object = v21._object;

    uint64_t v24 = *(void *)(v1 + 40);
    uint64_t v102 = *(void *)(v1 + 32);
    uint64_t v104 = *(void *)(v11[6] + 112) + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
    swift_beginAccess();
    sub_10000D2A0(v104, (uint64_t)v5, &qword_100380780);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_bridgeObjectRetain();
      sub_10000950C((uint64_t)v5, &qword_100380780);
LABEL_13:
      uint64_t v26 = v102;
      id v25 = v103;
LABEL_14:
      id v27 = [v25 mainBundle];
      unint64_t v28 = 0xD000000000000010;
      unint64_t v29 = 0xD000000000000053;
      unint64_t v100 = 0x80000001002C7680;
      uint64_t v30 = "Connection Ended";
LABEL_32:
      unint64_t v69 = (unint64_t)(v30 - 32) | 0x8000000000000000;
      v70._uint64_t countAndFlagsBits = 0;
      v70._object = (void *)0xE000000000000000;
      Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, (Swift::String_optional)0, (NSBundle)v27, v70, *(Swift::String *)&v29);
      uint64_t v72 = v71._countAndFlagsBits;
      uint64_t v73 = v71._object;
      swift_unknownObjectRelease();

LABEL_45:
      *(void *)a1 = v26;
      *(void *)(a1 + 8) = v24;
      *(void *)(a1 + 16) = countAndFlagsBits;
      *(void *)(a1 + 24) = object;
      *(void *)(a1 + 32) = v72;
      *(void *)(a1 + 40) = v73;
      *(unsigned char *)(a1 + 48) = 0;
      return;
    }
    sub_10002D1E8((uint64_t)v5, (uint64_t)v9);
    uint64_t v41 = *(void *)&v9[*(int *)(v6 + 24)];
    Swift::Int v42 = sub_10026554C((uint64_t)&off_10034A088);
    char v43 = sub_10020D19C(v41, v42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0
      || (Swift::Int v44 = sub_10026554C((uint64_t)&off_10034A0B0),
          char v45 = sub_10020D19C(v41, v44),
          swift_bridgeObjectRelease(),
          (v45 & 1) != 0))
    {
      sub_10002D24C((uint64_t)v9);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_44:
      uint64_t v26 = 0;
      uint64_t v24 = 0;
      uint64_t countAndFlagsBits = 0;
      object = 0;
      uint64_t v72 = 0;
      uint64_t v73 = 0;
      goto LABEL_45;
    }
    if (sub_100078E0C(0, v41))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = v103;
      id v82 = [v103 mainBundle];
      v83._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v111._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v111._object = (void *)0x80000001002C77F0;
      v83._object = (void *)0x80000001002C77D0;
      v84._uint64_t countAndFlagsBits = 0;
      v84._object = (void *)0xE000000000000000;
      Swift::String v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v111);
      uint64_t countAndFlagsBits = v85._countAndFlagsBits;
      object = v85._object;

      sub_10002D24C((uint64_t)v9);
      uint64_t v26 = *(void *)(v1 + 48);
      uint64_t v24 = *(void *)(v1 + 56);
    }
    else
    {
      if (sub_100078E0C(1, v41))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v25 = v103;
        id v91 = [v103 mainBundle];
        v92._uint64_t countAndFlagsBits = 0xD000000000000021;
        v113._uint64_t countAndFlagsBits = 0xD000000000000042;
        v113._object = (void *)0x80000001002C7780;
        v92._object = (void *)0x80000001002C7730;
        v93.value._object = (void *)0x80000001002C7760;
        v93.value._uint64_t countAndFlagsBits = 0xD000000000000012;
        v94._uint64_t countAndFlagsBits = 0;
        v94._object = (void *)0xE000000000000000;
        Swift::String v95 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, v93, (NSBundle)v91, v94, v113);
        uint64_t countAndFlagsBits = v95._countAndFlagsBits;
        object = v95._object;

        sub_10002D24C((uint64_t)v9);
        uint64_t v26 = 0;
        uint64_t v24 = 0;
        goto LABEL_14;
      }
      if ((sub_100078E0C(4, v41) & 1) == 0)
      {
        sub_10002D24C((uint64_t)v9);
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = v103;
      id v96 = [v103 mainBundle];
      v97._uint64_t countAndFlagsBits = 0xD000000000000015;
      v114._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v114._object = (void *)0x80000001002C7700;
      v97._object = (void *)0x80000001002C76E0;
      v98._uint64_t countAndFlagsBits = 0;
      v98._object = (void *)0xE000000000000000;
      Swift::String v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v114);
      uint64_t countAndFlagsBits = v99._countAndFlagsBits;
      object = v99._object;

      sub_10002D24C((uint64_t)v9);
      uint64_t v26 = *(void *)(v1 + 64);
      uint64_t v24 = *(void *)(v1 + 72);
    }
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)(v13 + 88);
  swift_bridgeObjectRetain();
  Swift::Int v15 = sub_10026554C((uint64_t)&off_10034A060);
  if (v14)
  {
    char v16 = sub_10020D19C(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_43;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = v11[4];
  int v32 = *(unsigned __int8 *)(v31 + 41);
  if (v32 == 8)
  {
    if ((*(unsigned char *)(v31 + 42) & 1) == 0)
    {
      uint64_t v46 = self;
      id v47 = [v46 mainBundle];
      v48._uint64_t countAndFlagsBits = 0xD000000000000021;
      v107._uint64_t countAndFlagsBits = 0xD000000000000042;
      v107._object = (void *)0x80000001002C7780;
      v48._object = (void *)0x80000001002C7730;
      v49.value._object = (void *)0x80000001002C7760;
      v49.value._uint64_t countAndFlagsBits = 0xD000000000000012;
      v50._uint64_t countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v107);
      uint64_t countAndFlagsBits = v51._countAndFlagsBits;
      object = v51._object;

      id v52 = [v46 mainBundle];
      unint64_t v53 = 0xD00000000000002FLL;
      unint64_t v54 = 0xD000000000000067;
      unint64_t v101 = 0x80000001002C7AB0;
      unint64_t v55 = 0x80000001002C7A80;
      unint64_t v56 = 0;
      unint64_t v57 = 0;
      goto LABEL_36;
    }
LABEL_29:
    uint64_t v63 = *(void *)(v11[6] + 32);
    if (!*(void *)(v63 + 64)) {
      goto LABEL_43;
    }
    if (sub_100078E0C(0, *(void *)(v63 + 88)))
    {
      uint64_t v26 = *(void *)(v1 + 48);
      uint64_t v24 = *(void *)(v1 + 56);
      uint64_t v64 = self;
      swift_bridgeObjectRetain();
      id v65 = [v64 mainBundle];
      v66._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v109._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v109._object = (void *)0x80000001002C77F0;
      v66._object = (void *)0x80000001002C77D0;
      v67._uint64_t countAndFlagsBits = 0;
      v67._object = (void *)0xE000000000000000;
      Swift::String v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, (Swift::String_optional)0, (NSBundle)v65, v67, v109);
      uint64_t countAndFlagsBits = v68._countAndFlagsBits;
      object = v68._object;

      id v27 = [v64 mainBundle];
      unint64_t v28 = 0xD000000000000031;
      unint64_t v29 = 0xD000000000000085;
      unint64_t v100 = 0x80000001002C79F0;
      uint64_t v30 = "Continue your connection with emergency services.";
      goto LABEL_32;
    }
    if (!*(void *)(v63 + 64))
    {
LABEL_43:
      swift_unknownObjectRelease();
      goto LABEL_44;
    }
    if ((sub_100078E0C(1, *(void *)(v63 + 88)) & 1) == 0)
    {
      if (!*(void *)(v63 + 64) || (sub_100078E0C(4, *(void *)(v63 + 88)) & 1) == 0) {
        goto LABEL_43;
      }
      uint64_t v26 = *(void *)(v1 + 64);
      uint64_t v24 = *(void *)(v1 + 72);
      float v86 = self;
      swift_bridgeObjectRetain();
      id v87 = [v86 mainBundle];
      v88._uint64_t countAndFlagsBits = 0xD000000000000015;
      v112._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v112._object = (void *)0x80000001002C7700;
      v88._object = (void *)0x80000001002C76E0;
      v89._uint64_t countAndFlagsBits = 0;
      v89._object = (void *)0xE000000000000000;
      Swift::String v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v88, (Swift::String_optional)0, (NSBundle)v87, v89, v112);
      uint64_t countAndFlagsBits = v90._countAndFlagsBits;
      object = v90._object;

      id v27 = [v86 mainBundle];
      unint64_t v28 = 0xD00000000000002ALL;
      unint64_t v29 = 0xD000000000000082;
      unint64_t v100 = 0x80000001002C7860;
      uint64_t v30 = "Continue your connection to send location.";
      goto LABEL_32;
    }
    uint64_t v74 = self;
    id v75 = [v74 mainBundle];
    v76._uint64_t countAndFlagsBits = 0xD000000000000021;
    v110._uint64_t countAndFlagsBits = 0xD000000000000042;
    v110._object = (void *)0x80000001002C7780;
    v76._object = (void *)0x80000001002C7730;
    v77.value._uint64_t countAndFlagsBits = 0xD000000000000012;
    v77.value._object = (void *)0x80000001002C7760;
    v78._uint64_t countAndFlagsBits = 0;
    v78._object = (void *)0xE000000000000000;
    Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v76, v77, (NSBundle)v75, v78, v110);
    uint64_t countAndFlagsBits = v79._countAndFlagsBits;
    object = v79._object;

    id v52 = [v74 mainBundle];
    unint64_t v53 = 0xD00000000000002FLL;
    unint64_t v54 = 0xD000000000000085;
    unint64_t v101 = 0x80000001002C7920;
    unint64_t v55 = 0x80000001002C78F0;
    unint64_t v56 = 0xD000000000000012;
    unint64_t v57 = 0x80000001002C7760;
LABEL_36:
    v80._uint64_t countAndFlagsBits = 0;
    v80._object = (void *)0xE000000000000000;
    Swift::String v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v53, *(Swift::String_optional *)&v56, (NSBundle)v52, v80, *(Swift::String *)&v54);
    uint64_t v72 = v81._countAndFlagsBits;
    uint64_t v73 = v81._object;
    swift_unknownObjectRelease();

    uint64_t v26 = 0;
    uint64_t v24 = 0;
    goto LABEL_45;
  }
  if (v32 != 3) {
    goto LABEL_29;
  }
  uint64_t v33 = *(void *)(v11[7] + 88);
  if (!v33)
  {
LABEL_27:
    if ((*(unsigned char *)(v31 + 42) & 1) == 0)
    {
      uint64_t v26 = *(void *)(v1 + 48);
      uint64_t v24 = *(void *)(v1 + 56);
      uint64_t v58 = self;
      swift_bridgeObjectRetain();
      id v59 = [v58 mainBundle];
      v60._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v108._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v108._object = (void *)0x80000001002C77F0;
      v60._object = (void *)0x80000001002C77D0;
      v61._uint64_t countAndFlagsBits = 0;
      v61._object = (void *)0xE000000000000000;
      Swift::String v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v108);
      uint64_t countAndFlagsBits = v62._countAndFlagsBits;
      object = v62._object;

      id v27 = [v58 mainBundle];
      unint64_t v28 = 0xD00000000000002FLL;
      unint64_t v29 = 0xD000000000000067;
      unint64_t v100 = 0x80000001002C7AB0;
      uint64_t v30 = "Answer questions to help get a faster response.";
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  swift_beginAccess();
  uint64_t v34 = *(void *)(v33 + 144);
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    if (*(unsigned char *)(v35 + v34 + 31) == 3)
    {
      uint64_t v26 = *(void *)(v1 + 48);
      uint64_t v24 = *(void *)(v1 + 56);
      unint64_t v36 = self;
      swift_bridgeObjectRetain();
      id v37 = [v36 mainBundle];
      v38._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v106._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v106._object = (void *)0x80000001002C77F0;
      v38._object = (void *)0x80000001002C77D0;
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      Swift::String v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v106);
      uint64_t countAndFlagsBits = v40._countAndFlagsBits;
      object = v40._object;

      id v27 = [v36 mainBundle];
      unint64_t v28 = 0xD000000000000025;
      unint64_t v29 = 0xD000000000000076;
      unint64_t v100 = 0x80000001002C7B50;
      uint64_t v30 = "iPhone will try to send your answers.";
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  __break(1u);
}

void sub_10002D190()
{
  if (!qword_10038C6F0)
  {
    type metadata accessor for DispatchTime();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10038C6F0);
    }
  }
}

uint64_t sub_10002D1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionClosed(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D24C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionClosed(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002D2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100380788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D310()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002D348(uint64_t a1, uint64_t a2)
{
  return sub_10002B844(a1, a2, *(void *)(v2 + 16));
}

void sub_10002D350(uint64_t a1, unsigned char *a2)
{
  sub_10002BA14(a1, a2, v2);
}

uint64_t *sub_10002D358(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10002D394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002D3E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002D40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for ViewSizeCapturer()
{
  return sub_100006BAC();
}

uint64_t sub_10002D42C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002D470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  type metadata accessor for _PreferenceWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v11 = &protocol witness table for Color;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v9 = GeometryReader.init(content:)();
  uint64_t v10 = v5;
  uint64_t v6 = type metadata accessor for GeometryReader();
  uint64_t v7 = swift_getWitnessTable();
  sub_1000A7320(&v9, v6, v7);
  swift_release();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_1000A7320(&v9, v6, v7);
  return swift_release();
}

uint64_t sub_10002D5DC()
{
  static Color.clear.getter();
  GeometryProxy.size.getter();
  uint64_t v9 = v0;
  *(void *)&long long v10 = v1;
  View.preference<A>(key:value:)();
  swift_release();
  uint64_t v5 = v7;
  long long v6 = v8;
  type metadata accessor for _PreferenceWritingModifier();
  uint64_t v2 = type metadata accessor for ModifiedContent();
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(&v5, v2, WitnessTable);
  swift_release();
  uint64_t v7 = v9;
  long long v8 = v10;
  sub_1000A7320(&v7, v2, WitnessTable);
  return swift_release();
}

uint64_t sub_10002D73C(uint64_t a1)
{
  return sub_10002D470(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_10002D748()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002D758()
{
  return sub_10002D5DC();
}

uint64_t sub_10002D760()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ViewFrameCapturer()
{
  return sub_100006BAC();
}

uint64_t sub_10002D838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002D884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  _OWORD v6[3] = a2;
  v6[4] = a3;
  type metadata accessor for _PreferenceWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v13 = &protocol witness table for Color;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = GeometryReader.init(content:)();
  uint64_t v12 = v7;
  uint64_t v8 = type metadata accessor for GeometryReader();
  uint64_t v9 = swift_getWitnessTable();
  sub_1000A7320(&v11, v8, v9);
  swift_release();
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  sub_1000A7320(&v11, v8, v9);
  return swift_release();
}

uint64_t sub_10002DA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = static Color.clear.getter();
  sub_100004010(&qword_1003808A8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B3350;
  *(double *)(v6 + 32) = (*(double (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, a2, a3);
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = v9;
  View.preference<A>(key:value:)();
  swift_release();
  swift_bridgeObjectRelease();
  v13[0] = v14;
  v13[1] = v15;
  type metadata accessor for _PreferenceWritingModifier();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v13, v10, WitnessTable);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = v16;
  uint64_t v15 = v17;
  sub_1000A7320(&v14, v10, WitnessTable);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10002DBBC(uint64_t *a1)
{
  return sub_10002D884(a1[2], a1[3], a1[4]);
}

uint64_t sub_10002DBCC()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10002DBDC(uint64_t a1)
{
  return sub_10002DA00(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10002DBE8()
{
  return swift_getWitnessTable();
}

uint64_t destroy for FreeFormContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FreeFormContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FreeFormContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FreeFormContentView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FreeFormContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeFormContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeFormContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeFormContentView()
{
  return &type metadata for FreeFormContentView;
}

uint64_t sub_10002E06C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002E088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v2 = sub_100004010(&qword_1003808B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (double *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_100004010(&qword_1003808B8);
  __chkstk_darwin(v39);
  long long v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100004010(&qword_1003808C0);
  __chkstk_darwin(v40);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(v1 + 16);
  if (v9)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24))(v44, v10, v11);
    uint64_t v12 = sub_10002E510();
    uint64_t v13 = v45;
    uint64_t v14 = v46;
    sub_100008F88(v44, v45);
    double v15 = (*(double (**)(uint64_t, uint64_t))(v14 + 360))(v13, v14);
    *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
    v4[1] = v15;
    *((unsigned char *)v4 + 16) = 0;
    Swift::String v38 = (char *)v4 + *(int *)(sub_100004010(&qword_1003808C8) + 44);
    uint64_t v43 = *(void *)(*(void *)(v1 + 40) + 136);
    swift_getKeyPath();
    sub_1000090FC((uint64_t)v44, (uint64_t)v42);
    uint64_t v16 = swift_allocObject();
    long long v17 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v16 + 80) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v16 + 96) = v17;
    uint64_t v18 = *(void *)(v1 + 96);
    long long v19 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v16 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v16 + 32) = v19;
    long long v20 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v16 + 64) = v20;
    *(void *)(v16 + 112) = v18;
    *(void *)(v16 + 120) = v12;
    sub_100009164(v42, v16 + 128);
    swift_bridgeObjectRetain();
    sub_10002EF4C(v1);
    sub_100004010(&qword_1003808D0);
    sub_100004010(&qword_1003808D8);
    sub_100009B18(&qword_1003808E0, &qword_1003808D0);
    sub_10002EFDC();
    sub_10002F030();
    ForEach<>.init(_:id:content:)();
    LOBYTE(v13) = static Edge.Set.top.getter();
    uint64_t v21 = v45;
    uint64_t v22 = v46;
    sub_100008F88(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v22 + 352))(v21, v22);
    EdgeInsets.init(_all:)();
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    sub_10000D2A0((uint64_t)v4, (uint64_t)v6, &qword_1003808B0);
    uint64_t v31 = &v6[*(int *)(v39 + 36)];
    *uint64_t v31 = v13;
    *((void *)v31 + 1) = v24;
    *((void *)v31 + 2) = v26;
    *((void *)v31 + 3) = v28;
    *((void *)v31 + 4) = v30;
    v31[40] = 0;
    sub_10000950C((uint64_t)v4, &qword_1003808B0);
    uint64_t v32 = swift_allocObject();
    long long v33 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v32 + 80) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v32 + 96) = v33;
    *(void *)(v32 + 112) = *(void *)(v1 + 96);
    long long v34 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v32 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v32 + 32) = v34;
    long long v35 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v32 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v32 + 64) = v35;
    sub_10000D2A0((uint64_t)v6, (uint64_t)v8, &qword_1003808B8);
    unint64_t v36 = (uint64_t (**)())&v8[*(int *)(v40 + 36)];
    *unint64_t v36 = sub_10002F1E4;
    v36[1] = (uint64_t (*)())v32;
    v36[2] = 0;
    v36[3] = 0;
    sub_10002EF4C(v1);
    sub_10000950C((uint64_t)v6, &qword_1003808B8);
    sub_10000D544((uint64_t)v8, v41, &qword_1003808C0);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v44);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100033FF8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10002E510()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 40) + 144);
  uint64_t v2 = (void *)sub_100283164((uint64_t)_swiftEmptyArrayStorage);
  if (v1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v30 = v3 - 1;
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return (uint64_t)v2;
  }
  while (2)
  {
    uint64_t v4 = 0;
    unint64_t v5 = v1 & 0xC000000000000001;
    unint64_t v27 = v1 + 32;
    unint64_t v28 = v1;
    uint64_t v6 = 4;
    uint64_t v29 = v3;
    while (1)
    {
      uint64_t v8 = v6 - 4;
      if (!v5) {
        break;
      }
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_26;
      }
LABEL_11:
      if (v8 >= v30)
      {
        swift_release();
        uint64_t v12 = 0;
      }
      else
      {
        if (v5)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v11 = *(void *)(v27 + 8 * v10);
          swift_retain();
        }
        swift_release();
        uint64_t v12 = v11;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v15 = sub_1001BECD0(v9);
      uint64_t v16 = v2[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17)) {
        goto LABEL_27;
      }
      unint64_t v1 = v14;
      if (v2[3] >= v18)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000A0FA0();
        }
      }
      else
      {
        sub_10009D96C(v18, isUniquelyReferenced_nonNull_native);
        uint64_t v19 = sub_1001BECD0(v9);
        if ((v1 & 1) != (v20 & 1)) {
          goto LABEL_33;
        }
        unint64_t v15 = v19;
      }
      if (v1)
      {
        uint64_t v7 = (uint64_t *)(v2[7] + 16 * v15);
        swift_release();
        swift_release();
        *uint64_t v7 = v4;
        v7[1] = v12;
      }
      else
      {
        v2[(v15 >> 6) + 8] |= 1 << v15;
        *(void *)(v2[6] + 8 * v15) = v9;
        uint64_t v21 = (uint64_t *)(v2[7] + 16 * v15);
        uint64_t *v21 = v4;
        v21[1] = v12;
        uint64_t v22 = v2[2];
        BOOL v23 = __OFADD__(v22, 1);
        uint64_t v24 = v22 + 1;
        if (v23) {
          goto LABEL_28;
        }
        v2[2] = v24;
        swift_retain();
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      ++v6;
      uint64_t v4 = v9;
      unint64_t v1 = v28;
      if (v10 == v29) {
        goto LABEL_31;
      }
    }
    uint64_t v9 = *(void *)(v1 + 8 * v6);
    swift_retain();
    uint64_t v10 = v6 - 3;
    if (!__OFADD__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v30 = v25 - 1;
    if (!__OFSUB__(v25, 1))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_31;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_33:
  type metadata accessor for Option();
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

double sub_10002E808@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v8 = *(void *)a1;
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a3 + 16);
    sub_100032A1C(*(void *)a1, 1);
    if (v11)
    {
      sub_100032A1C(v8, 1);
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_1001BECD0(v8);
      if (v13)
      {
        unint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v12);
        uint64_t v15 = *v14;
        uint64_t v36 = v14[1];
        swift_retain();
        uint64_t v37 = v15;
        swift_retain();
        sub_100032A28(v8, 1);
LABEL_11:
        uint64_t v22 = *(void *)(a2 + 56);
        uint64_t v35 = *(void *)(a2 + 48);
        long long v23 = *(_OWORD *)(a2 + 80);
        long long v63 = *(_OWORD *)(a2 + 64);
        long long v64 = v23;
        *(void *)&long long v65 = *(void *)(a2 + 96);
        swift_retain();
        sub_100004010(&qword_100380910);
        FocusState.projectedValue.getter();
        type metadata accessor for AppEvents();
        sub_100033FF8((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
        swift_retain();
        uint64_t v24 = EnvironmentObject.init()();
        uint64_t v26 = v25;
        type metadata accessor for UIMetrics();
        sub_100033FF8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        uint64_t v27 = EnvironmentObject.init()();
        uint64_t v29 = v28;
        sub_100004010(&qword_100380920);
        State.init(wrappedValue:)();
        *(void *)&long long v38 = v24;
        *((void *)&v38 + 1) = v26;
        *(void *)&long long v39 = v27;
        *((void *)&v39 + 1) = v29;
        *(void *)&long long v40 = v9;
        *((void *)&v40 + 1) = v10;
        *(void *)&long long v41 = v8;
        *((void *)&v41 + 1) = v37;
        *(void *)&long long v42 = v36;
        *((void *)&v42 + 1) = v35;
        *(void *)&long long v43 = v22;
        *((void *)&v43 + 1) = *(void *)v55;
        long long v44 = *(_OWORD *)&v55[8];
        *(void *)uint64_t v45 = *(void *)&v55[24];
        *(_OWORD *)&v45[8] = v63;
        *(void *)&v45[24] = v64;
        long long v56 = v40;
        long long v57 = v41;
        *(_OWORD *)unint64_t v55 = v38;
        *(_OWORD *)&v55[16] = v39;
        long long v61 = *(_OWORD *)v45;
        long long v62 = *(_OWORD *)&v45[16];
        long long v59 = v43;
        long long v60 = v44;
        long long v58 = v42;
        sub_100032A34((uint64_t)v55);
        sub_10000D544((uint64_t)v55, (uint64_t)&v63, &qword_100380918);
        sub_100032A3C((uint64_t)&v38);
        sub_100004010(&qword_100380908);
        sub_10002F0AC();
        sub_10002F100();
        _ConditionalContent<>.init(storage:)();
        sub_100032A28(v8, 1);
        sub_100032B18((uint64_t)&v38);
        long long v69 = v46[6];
        long long v70 = v46[7];
        long long v71 = v46[8];
        char v72 = v47;
        long long v65 = v46[2];
        long long v66 = v46[3];
        long long v67 = v46[4];
        long long v68 = v46[5];
        long long v63 = v46[0];
        long long v64 = v46[1];
        goto LABEL_12;
      }
      sub_100032A28(v8, 1);
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_11;
  }
  uint64_t v16 = a4[3];
  uint64_t v17 = a4[4];
  sub_100008F88(a4, v16);
  uint64_t v18 = *(double (**)(uint64_t, uint64_t))(v17 + 360);
  double v19 = v18(v16, v17);
  double v20 = v18(v16, v17);
  static Alignment.center.getter();
  if (v19 > v20)
  {
    static os_log_type_t.fault.getter();
    uint64_t v21 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  char v54 = 1;
  char v53 = BYTE8(v38);
  char v52 = BYTE8(v39);
  char v51 = BYTE8(v40);
  char v50 = BYTE8(v41);
  char v49 = BYTE8(v42);
  char v48 = BYTE8(v43);
  *(void *)unint64_t v55 = 0;
  v55[8] = 1;
  *(void *)&v55[16] = v38;
  v55[24] = BYTE8(v38);
  *(void *)&long long v56 = v39;
  BYTE8(v56) = BYTE8(v39);
  *(void *)&long long v57 = v40;
  BYTE8(v57) = BYTE8(v40);
  *(void *)&long long v58 = v41;
  BYTE8(v58) = BYTE8(v41);
  *(void *)&long long v59 = v42;
  BYTE8(v59) = BYTE8(v42);
  *(void *)&long long v60 = v43;
  BYTE8(v60) = BYTE8(v43);
  long long v61 = v44;
  sub_10002F1EC((uint64_t)v55);
  sub_10000D544((uint64_t)v55, (uint64_t)v46, &qword_100380918);
  sub_100004010(&qword_100380908);
  sub_10002F0AC();
  sub_10002F100();
  _ConditionalContent<>.init(storage:)();
LABEL_12:
  long long v30 = v70;
  *(_OWORD *)(a5 + 96) = v69;
  *(_OWORD *)(a5 + 112) = v30;
  *(_OWORD *)(a5 + 128) = v71;
  *(unsigned char *)(a5 + 144) = v72;
  long long v31 = v66;
  *(_OWORD *)(a5 + 32) = v65;
  *(_OWORD *)(a5 + 48) = v31;
  long long v32 = v68;
  *(_OWORD *)(a5 + 64) = v67;
  *(_OWORD *)(a5 + 80) = v32;
  double result = *(double *)&v63;
  long long v34 = v64;
  *(_OWORD *)a5 = v63;
  *(_OWORD *)(a5 + 16) = v34;
  return result;
}

uint64_t sub_10002ED44(uint64_t a1)
{
  unint64_t v1 = *(void *)(*(void *)(a1 + 40) + 144);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_7;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_release();
LABEL_8:
    sub_100004010(&qword_100380910);
    return FocusState.wrappedValue.setter();
  }
  __break(1u);
  return result;
}

uint64_t sub_10002EE70@<X0>(uint64_t a1@<X8>)
{
  return sub_10002E088(a1);
}

uint64_t sub_10002EEBC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 128);

  return _swift_deallocObject(v0, 168, 7);
}

double sub_10002EF3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002E808(a1, v2 + 16, *(void *)(v2 + 120), (void *)(v2 + 128), a2);
}

uint64_t sub_10002EF4C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10002EFDC()
{
  unint64_t result = qword_1003808E8;
  if (!qword_1003808E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003808E8);
  }
  return result;
}

unint64_t sub_10002F030()
{
  unint64_t result = qword_1003808F0;
  if (!qword_1003808F0)
  {
    sub_1000094C4(&qword_1003808D8);
    sub_10002F0AC();
    sub_10002F100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003808F0);
  }
  return result;
}

unint64_t sub_10002F0AC()
{
  unint64_t result = qword_1003808F8;
  if (!qword_1003808F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003808F8);
  }
  return result;
}

unint64_t sub_10002F100()
{
  unint64_t result = qword_100380900;
  if (!qword_100380900)
  {
    sub_1000094C4(&qword_100380908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380900);
  }
  return result;
}

uint64_t sub_10002F174()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10002F1E4()
{
  return sub_10002ED44(v0 + 16);
}

uint64_t sub_10002F1EC(uint64_t result)
{
  *(unsigned char *)(result + 144) = 1;
  return result;
}

uint64_t sub_10002F1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_100008F88(v4 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v14, v5, v6);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    sub_100008F88(v14, v15);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 408))(v7, v8);
    uint64_t v10 = static HorizontalAlignment.center.getter();
    sub_10002F360(v2, v14, v12);
    __src[552] = 0;
    memcpy(&__src[7], v12, 0x221uLL);
    *(void *)a1 = v10;
    *(double *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = 0;
    memcpy((void *)(a1 + 17), __src, 0x228uLL);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v14);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100033FF8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void *sub_10002F360@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  Swift::String v85 = *(void **)(a1 + 48);
  uint64_t v4 = v85[4];
  uint64_t v5 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    uint64_t v8 = a2;
    *(void *)Swift::String v92 = v5;
    *(void *)&v92[8] = v6;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v9 = Text.init<A>(_:)();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    uint64_t v14 = v8[3];
    uint64_t v15 = v8[4];
    sub_100008F88(v8, v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 416))(v14, v15);
    uint64_t v16 = Text.font(_:)();
    uint64_t v18 = v17;
    LOBYTE(v8) = v19;
    uint64_t v21 = v20;
    swift_release();
    LOBYTE(v8) = v8 & 1;
    sub_100033364(v9, v11, v13);
    swift_bridgeObjectRelease();
    uint64_t v103 = v16;
    uint64_t v104 = v18;
    char v105 = (char)v8;
    uint64_t v106 = v21;
    uint64_t KeyPath = swift_getKeyPath();
    char v108 = 0;
    static Alignment.leading.getter();
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v92, 0.0, 1, 0.0, 1);
    sub_100033364(v16, v18, (char)v8);
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)&__src[96] = *(_OWORD *)&v92[96];
    *(_OWORD *)&__src[112] = *(_OWORD *)&v92[112];
    *(_OWORD *)&__src[128] = *(_OWORD *)&v92[128];
    *(_OWORD *)&__src[144] = *(_OWORD *)&v92[144];
    *(_OWORD *)&__src[48] = *(_OWORD *)&v92[48];
    *(_OWORD *)&__src[64] = *(_OWORD *)&v92[64];
    *(_OWORD *)&__src[80] = *(_OWORD *)&v92[80];
    *(_OWORD *)__src = *(_OWORD *)v92;
    *(_OWORD *)&__src[16] = *(_OWORD *)&v92[16];
    *(_OWORD *)&__src[32] = *(_OWORD *)&v92[32];
    uint64_t v22 = swift_getKeyPath();
    *(_OWORD *)&v92[96] = *(_OWORD *)&__src[96];
    *(_OWORD *)&v92[112] = *(_OWORD *)&__src[112];
    *(_OWORD *)&v92[128] = *(_OWORD *)&__src[128];
    *(_OWORD *)&v92[144] = *(_OWORD *)&__src[144];
    *(_OWORD *)&v92[32] = *(_OWORD *)&__src[32];
    *(_OWORD *)&v92[48] = *(_OWORD *)&__src[48];
    *(_OWORD *)&v92[64] = *(_OWORD *)&__src[64];
    *(_OWORD *)&v92[80] = *(_OWORD *)&__src[80];
    *(_OWORD *)Swift::String v92 = *(_OWORD *)__src;
    *(_OWORD *)&v92[16] = *(_OWORD *)&__src[16];
    *(void *)&v92[160] = v22;
    *(void *)&v92[168] = 0x3FE0000000000000;
    ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v92);
  }
  else
  {
    sub_100033CBC(v92);
  }
  sub_10000D544((uint64_t)v92, (uint64_t)v98, &qword_100380948);
  uint64_t v23 = *(void *)(a1 + 40);
  *(_OWORD *)__src = *(_OWORD *)(a1 + 120);
  *(void *)&__src[16] = *(void *)(a1 + 136);
  sub_100004010(&qword_100380950);
  State.projectedValue.getter();
  uint64_t v25 = *(void *)v92;
  uint64_t v24 = *(void *)&v92[8];
  uint64_t v26 = *(void *)&v92[16];
  uint64_t v27 = *(void *)&v92[24];
  uint64_t v28 = (_OWORD *)swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 112);
  v28[7] = *(_OWORD *)(a1 + 96);
  v28[8] = v29;
  v28[9] = *(_OWORD *)(a1 + 128);
  long long v30 = *(_OWORD *)(a1 + 48);
  v28[3] = *(_OWORD *)(a1 + 32);
  v28[4] = v30;
  long long v31 = *(_OWORD *)(a1 + 80);
  v28[5] = *(_OWORD *)(a1 + 64);
  _OWORD v28[6] = v31;
  long long v32 = *(_OWORD *)(a1 + 16);
  v28[1] = *(_OWORD *)a1;
  uint64_t v28[2] = v32;
  sub_100032A3C(a1);
  uint64_t v33 = sub_100030508(v23, (uint64_t)v85, v25, v24, v26, v27, (uint64_t)sub_100033388, (uint64_t)v28);
  uint64_t v35 = v34;
  uint64_t v87 = v36;
  uint64_t v38 = v37;
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v85[3];
  uint64_t v40 = *(void *)(a1 + 88);
  uint64_t v41 = *(void *)(a1 + 96);
  uint64_t v42 = *(void *)(a1 + 112);
  uint64_t v77 = v85[2];
  uint64_t v78 = *(void *)(a1 + 104);
  type metadata accessor for UIMetrics();
  sub_100033FF8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v81 = v39;
  swift_bridgeObjectRetain();
  uint64_t v86 = v40;
  swift_retain();
  uint64_t v80 = v41;
  swift_retain();
  uint64_t v79 = v42;
  uint64_t v43 = v35;
  uint64_t v44 = v38;
  swift_bridgeObjectRetain();
  uint64_t v45 = EnvironmentObject.init()();
  uint64_t v76 = v46;
  uint64_t v84 = v33;
  *(void *)Swift::String v92 = v33;
  *(void *)&v92[8] = v43;
  *(void *)&v92[16] = v87;
  *(void *)&v92[24] = v44;
  sub_100004010(&qword_100387430);
  Binding.wrappedValue.getter();
  uint64_t v47 = v96;
  unint64_t v48 = v97;
  if ((v97 & 0x1000000000000000) != 0)
  {
    Swift::Int v49 = String.UTF8View._foreignCount()();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((v48 & 0x2000000000000000) != 0) {
      Swift::Int v49 = HIBYTE(v48) & 0xF;
    }
    else {
      Swift::Int v49 = v47 & 0xFFFFFFFFFFFFLL;
    }
  }
  uint64_t v50 = v85[6];
  uint64_t v83 = v45;
  if (v49 >= v50)
  {
    uint64_t v52 = a2[3];
    uint64_t v53 = a2[4];
    sub_100008F88(a2, v52);
    double v54 = (*(double (**)(uint64_t, uint64_t))(v53 + 456))(v52, v53);
    uint64_t v55 = static VerticalAlignment.center.getter();
    sub_100030700(a2, (uint64_t)__dst);
    *(_OWORD *)&v91[183] = *(_OWORD *)&__dst[176];
    *(_OWORD *)&v91[199] = *(_OWORD *)&__dst[192];
    *(_OWORD *)&v91[215] = *(_OWORD *)&__dst[208];
    *(_OWORD *)&v91[119] = *(_OWORD *)&__dst[112];
    *(_OWORD *)&v91[135] = *(_OWORD *)&__dst[128];
    *(_OWORD *)&v91[151] = *(_OWORD *)&__dst[144];
    *(_OWORD *)&v91[167] = *(_OWORD *)&__dst[160];
    *(_OWORD *)&v91[55] = *(_OWORD *)&__dst[48];
    *(_OWORD *)&v91[71] = *(_OWORD *)&__dst[64];
    *(void *)&v91[231] = *(void *)&__dst[224];
    *(_OWORD *)&v91[87] = *(_OWORD *)&__dst[80];
    *(_OWORD *)&v91[103] = *(_OWORD *)&__dst[96];
    *(_OWORD *)&v91[7] = *(_OWORD *)__dst;
    *(_OWORD *)&v91[23] = *(_OWORD *)&__dst[16];
    *(_OWORD *)&v91[39] = *(_OWORD *)&__dst[32];
    *(double *)&v92[8] = v54;
    *(_OWORD *)&v92[193] = *(_OWORD *)&v91[176];
    *(_OWORD *)&v92[209] = *(_OWORD *)&v91[192];
    *(_OWORD *)&v92[225] = *(_OWORD *)&v91[208];
    *(_OWORD *)&v92[240] = *(_OWORD *)&v91[223];
    *(_OWORD *)&v92[129] = *(_OWORD *)&v91[112];
    *(_OWORD *)&v92[145] = *(_OWORD *)&v91[128];
    *(_OWORD *)&v92[161] = *(_OWORD *)&v91[144];
    *(_OWORD *)&v92[177] = *(_OWORD *)&v91[160];
    *(_OWORD *)&v92[65] = *(_OWORD *)&v91[48];
    *(_OWORD *)&v92[81] = *(_OWORD *)&v91[64];
    *(_OWORD *)&v92[97] = *(_OWORD *)&v91[80];
    *(_OWORD *)&v92[113] = *(_OWORD *)&v91[96];
    *(_OWORD *)&v92[17] = *(_OWORD *)v91;
    LOBYTE(v93[0]) = 0;
    *(void *)Swift::String v92 = v55;
    v92[16] = 0;
    *(_OWORD *)&v92[33] = *(_OWORD *)&v91[16];
    *(_OWORD *)&v92[49] = *(_OWORD *)&v91[32];
    sub_100033390((uint64_t)v92);
    sub_10000D544((uint64_t)v92, (uint64_t)v94, &qword_100380958);
    sub_100004010(&qword_100380960);
    sub_100004010(&qword_100380968);
    sub_100009B18(&qword_100380970, &qword_100380960);
    sub_100033398();
  }
  else
  {
    *(void *)Swift::String v92 = v84;
    *(void *)&v92[8] = v43;
    *(void *)&v92[16] = v87;
    *(void *)&v92[24] = v44;
    Binding.wrappedValue.getter();
    if ((*(void *)&__dst[8] & 0x1000000000000000) != 0)
    {
      Swift::Int v51 = String.UTF8View._foreignCount()();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((*(void *)&__dst[8] & 0x2000000000000000) != 0) {
        Swift::Int v51 = HIBYTE(*(void *)&__dst[8]) & 0xFLL;
      }
      else {
        Swift::Int v51 = *(void *)__dst & 0xFFFFFFFFFFFFLL;
      }
    }
    uint64_t v56 = a2[3];
    uint64_t v57 = a2[4];
    sub_100008F88(a2, v56);
    if ((*(double (**)(uint64_t, uint64_t))(v57 + 440))(v56, v57) <= (double)v51 / (double)v50)
    {
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v58 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v60 = v59;
      uint64_t v62 = v61;
      char v64 = v63 & 1;
      uint64_t v65 = swift_getKeyPath();
      v98[22] = v58;
      v98[23] = v60;
      char v99 = v64;
      uint64_t v100 = v62;
      uint64_t v101 = v65;
      char v102 = 0;
      static Alignment.leading.getter();
      sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v92, 0.0, 1, 0.0, 1);
      sub_100033364(v58, v60, v64);
      swift_release();
      swift_bridgeObjectRelease();
      *(_OWORD *)&__src[96] = *(_OWORD *)&v92[96];
      *(_OWORD *)&__src[112] = *(_OWORD *)&v92[112];
      *(_OWORD *)&__src[128] = *(_OWORD *)&v92[128];
      *(_OWORD *)&__src[144] = *(_OWORD *)&v92[144];
      *(_OWORD *)&__src[48] = *(_OWORD *)&v92[48];
      *(_OWORD *)&__src[64] = *(_OWORD *)&v92[64];
      *(_OWORD *)&__src[80] = *(_OWORD *)&v92[80];
      *(_OWORD *)__src = *(_OWORD *)v92;
      *(_OWORD *)&__src[16] = *(_OWORD *)&v92[16];
      *(_OWORD *)&__src[32] = *(_OWORD *)&v92[32];
      uint64_t v66 = a2[3];
      uint64_t v67 = a2[4];
      sub_100008F88(a2, v66);
      uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 424))(v66, v67);
      uint64_t v69 = swift_getKeyPath();
      uint64_t v70 = a2[3];
      uint64_t v71 = a2[4];
      sub_100008F88(a2, v70);
      uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 432))(v70, v71);
      uint64_t v73 = swift_getKeyPath();
      *(_OWORD *)&v92[96] = *(_OWORD *)&__src[96];
      *(_OWORD *)&v92[112] = *(_OWORD *)&__src[112];
      *(_OWORD *)&v92[128] = *(_OWORD *)&__src[128];
      *(_OWORD *)&v92[144] = *(_OWORD *)&__src[144];
      *(_OWORD *)&v92[32] = *(_OWORD *)&__src[32];
      *(_OWORD *)&v92[48] = *(_OWORD *)&__src[48];
      *(_OWORD *)&v92[64] = *(_OWORD *)&__src[64];
      *(_OWORD *)&v92[80] = *(_OWORD *)&__src[80];
      *(_OWORD *)Swift::String v92 = *(_OWORD *)__src;
      *(_OWORD *)&v92[16] = *(_OWORD *)&__src[16];
      *(void *)&v92[160] = v69;
      *(void *)&v92[168] = v68;
      *(void *)&v92[176] = v73;
      *(void *)&v92[184] = v72;
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v92);
    }
    else
    {
      sub_100033C80(v92);
    }
    sub_10000D544((uint64_t)v92, (uint64_t)v91, &qword_100380968);
    sub_10000D544((uint64_t)v91, (uint64_t)v92, &qword_100380968);
    sub_100033CA0((uint64_t)v92);
    sub_10000D544((uint64_t)v92, (uint64_t)v94, &qword_100380958);
    sub_100004010(&qword_100380960);
    sub_100004010(&qword_100380968);
    sub_100009B18(&qword_100380970, &qword_100380960);
    sub_100033398();
  }
  _ConditionalContent<>.init(storage:)();
  sub_10000D544((uint64_t)v98, (uint64_t)v89, &qword_100380948);
  memcpy(__dst, __src, sizeof(__dst));
  sub_10000D544((uint64_t)v89, (uint64_t)v90, &qword_100380948);
  memcpy(v91, __dst, sizeof(v91));
  sub_10003392C(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000336C0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000339FC((uint64_t)v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033734);
  sub_10003392C(v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000336C0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000339FC((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033734);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10003392C(v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100033998);
  sub_1000339FC((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033A88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_10000D544((uint64_t)v90, (uint64_t)v92, &qword_100380948);
  *(void *)&v92[176] = v83;
  *(void *)&v92[184] = v76;
  *(void *)&v92[192] = v84;
  *(void *)&v92[200] = v43;
  *(void *)&v92[208] = v87;
  *(void *)&v92[216] = v44;
  *(_OWORD *)&v92[224] = xmmword_1002B3730;
  *(void *)&v92[240] = v77;
  *(void *)&v92[248] = v81;
  *(void *)&v92[256] = v86;
  *(void *)&v92[264] = v80;
  *(void *)&v92[272] = v78;
  *(void *)&v92[280] = v79;
  memcpy(&v92[288], v91, 0x101uLL);
  memcpy(a3, v92, 0x221uLL);
  memcpy(v94, __dst, 0x101uLL);
  sub_1000339FC((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033A88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_10000D544((uint64_t)v89, (uint64_t)v93, &qword_100380948);
  return sub_10003392C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100033998);
}

void sub_10002FFB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v3
    && ((uint64_t v4 = *(void *)(a1 + 40), *(void *)(v3 + 16) == *(void *)(v4 + 16))
      ? (BOOL v5 = *(void *)(v3 + 24) == *(void *)(v4 + 24))
      : (BOOL v5 = 0),
        v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    sub_1000301C0();
  }
  else
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9B08);
    sub_100032A3C(a1);
    sub_100032A3C(a1);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      uint64_t v10 = sub_1000C8E54();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100032B18(a1);
      sub_100032B18(a1);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}s] FreeFormContentView: return tapped in the free form text when it is not a current question anymore", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100032B18(a1);
      sub_100032B18(a1);
    }
  }
}

void sub_1000301C0()
{
  long long v15 = *(_OWORD *)(v0 + 56);
  sub_10000D544((uint64_t)&v15 + 8, (uint64_t)v16, &qword_1003809D8);
  sub_10000D544((uint64_t)v16, (uint64_t)&v17, &qword_1003809D8);
  if (v17)
  {
    long long v1 = *(_OWORD *)(v0 + 104);
    v14[0] = *(_OWORD *)(v0 + 88);
    v14[1] = v1;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_1003809E0);
    FocusState.Binding.wrappedValue.setter();
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    if (sub_1000CA784(v2, v3, 0))
    {
      (*(void (**)(void))(v0 + 72))();
    }
    else
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10000FD84(v4, (uint64_t)qword_1003A9B08);
      sub_100032A3C(v0);
      sub_100032A3C(v0);
      sub_100032A3C(v0);
      sub_100032A3C(v0);
      sub_100032A3C(v0);
      sub_100032A3C(v0);
      BOOL v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = swift_slowAlloc();
        *(void *)&v14[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 136446723;
        uint64_t v8 = sub_1000C8E54();
        sub_1001B3178(v8, v9, (uint64_t *)v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100032B18(v0);
        sub_100032B18(v0);
        *(_WORD *)(v7 + 12) = 2081;
        uint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        swift_bridgeObjectRetain();
        sub_1001B3178(v11, v10, (uint64_t *)v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100032B18(v0);
        sub_100032B18(v0);
        *(_WORD *)(v7 + 22) = 2081;
        uint64_t v13 = v2[2];
        unint64_t v12 = v2[3];
        swift_bridgeObjectRetain();
        sub_1001B3178(v13, v12, (uint64_t *)v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100032B18(v0);
        sub_100032B18(v0);
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}s] QuestionnaireBodyView: failed to record %{private}s answer for %{private}s", (uint8_t *)v7, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100032B18(v0);
        sub_100032B18(v0);
        sub_100032B18(v0);
        sub_100032B18(v0);
        sub_100032B18(v0);
        sub_100032B18(v0);
      }
    }
  }
}

uint64_t sub_100030508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 32) == 2 && (*(unsigned char *)(a2 + 40) & 1) != 0)
  {
    unint64_t v10 = v8;
    type metadata accessor for MainActor();
    sub_100032A3C((uint64_t)v8);
    swift_retain();
    swift_retain();
    uint64_t v16 = static MainActor.shared.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = &protocol witness table for MainActor;
    long long v18 = v8[7];
    *(_OWORD *)(v17 + 128) = v8[6];
    *(_OWORD *)(v17 + 144) = v18;
    *(_OWORD *)(v17 + 160) = v8[8];
    long long v19 = v8[3];
    *(_OWORD *)(v17 + 64) = v8[2];
    *(_OWORD *)(v17 + 80) = v19;
    long long v20 = v8[5];
    *(_OWORD *)(v17 + 96) = v8[4];
    *(_OWORD *)(v17 + 112) = v20;
    long long v21 = v8[1];
    *(_OWORD *)(v17 + 32) = *v8;
    *(_OWORD *)(v17 + 48) = v21;
    *(void *)(v17 + 176) = a1;
    *(void *)(v17 + 184) = a2;
    sub_100032A3C((uint64_t)v8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = static MainActor.shared.getter();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = &protocol witness table for MainActor;
    long long v24 = v10[7];
    *(_OWORD *)(v23 + 128) = v10[6];
    *(_OWORD *)(v23 + 144) = v24;
    *(_OWORD *)(v23 + 160) = v10[8];
    long long v25 = v10[3];
    *(_OWORD *)(v23 + 64) = v10[2];
    *(_OWORD *)(v23 + 80) = v25;
    long long v26 = v10[5];
    *(_OWORD *)(v23 + 96) = v10[4];
    *(_OWORD *)(v23 + 112) = v26;
    long long v27 = v10[1];
    *(_OWORD *)(v23 + 32) = *v10;
    *(_OWORD *)(v23 + 48) = v27;
    *(void *)(v23 + 176) = a1;
    *(void *)(v23 + 184) = a3;
    *(void *)(v23 + 192) = a4;
    *(void *)(v23 + 200) = a5;
    *(void *)(v23 + 208) = a6;
    *(void *)(v23 + 216) = a7;
    *(void *)(v23 + 224) = a8;
    *(void *)(v23 + 232) = a2;
    Binding.init(get:set:)();
  }
  else
  {
    static Binding.constant(_:)();
  }
  return v31;
}

uint64_t sub_100030700@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = Image.init(systemName:)();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_100008F88(a1, v4);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 424);
  uint64_t v39 = v35(v4, v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100008F88(a1, v6);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 448))(v6, v7);
  uint64_t v36 = swift_getKeyPath();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  LOBYTE(v7) = v11 & 1;
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  char v53 = v11 & 1;
  uint64_t v54 = v12;
  uint64_t v55 = swift_getKeyPath();
  char v56 = 0;
  static Alignment.leading.getter();
  sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v41, 0.0, 1, 0.0, 1);
  sub_100033364(v8, v10, v7);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = v35(v4, v5);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_100008F88(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 448))(v15, v16);
  uint64_t v18 = swift_getKeyPath();
  long long v19 = v47;
  long long v20 = v48;
  long long v63 = v47;
  long long v64 = v48;
  long long v21 = v49;
  long long v22 = v50;
  long long v65 = v49;
  long long v66 = v50;
  long long v23 = v43;
  long long v24 = v43;
  long long v25 = v44;
  long long v59 = v43;
  long long v60 = v44;
  long long v26 = v45;
  long long v27 = v46;
  long long v61 = v45;
  long long v62 = v46;
  long long v28 = v41;
  long long v29 = v42;
  long long v57 = v41;
  long long v58 = v42;
  *(void *)&long long v67 = v14;
  *((void *)&v67 + 1) = v13;
  *(_OWORD *)(a2 + 136) = v47;
  *(_OWORD *)(a2 + 72) = v23;
  long long v30 = v64;
  *(_OWORD *)(a2 + 168) = v65;
  long long v31 = v67;
  *(_OWORD *)(a2 + 184) = v66;
  long long v32 = v60;
  *(_OWORD *)(a2 + 104) = v61;
  *(_OWORD *)(a2 + 120) = v62;
  *(_OWORD *)(a2 + 152) = v30;
  long long v33 = v58;
  *(_OWORD *)(a2 + 40) = v57;
  *(_OWORD *)(a2 + 56) = v33;
  *(_OWORD *)(a2 + 88) = v32;
  *(void *)&long long v68 = v18;
  *((void *)&v68 + 1) = v17;
  *(_OWORD *)(a2 + 200) = v31;
  *(_OWORD *)(a2 + 216) = v68;
  v69[6] = v19;
  v69[7] = v20;
  v69[8] = v21;
  v69[9] = v22;
  v69[2] = v24;
  v69[3] = v25;
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v39;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v37;
  v69[4] = v26;
  v69[5] = v27;
  v69[0] = v28;
  v69[1] = v29;
  uint64_t v70 = v14;
  uint64_t v71 = v13;
  uint64_t v72 = v18;
  uint64_t v73 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100033CDC((uint64_t)&v57);
  sub_100033D64((uint64_t)v69);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_100030AB4(uint64_t a1@<X2>, uint64_t a2@<X4>, void *a3@<X8>)
{
  if (*(unsigned char *)(a2 + 40) == 1
    && (uint64_t v4 = *(void *)(a1 + 32), swift_beginAccess(), v5 = *(void *)(v4 + 72), *(void *)(v5 + 16)))
  {
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1001BECD0(v6);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v7);
      uint64_t v11 = *v9;
      unint64_t v10 = v9[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v10 = 0xE000000000000000;
    }
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  *a3 = v11;
  a3[1] = v10;
}

void sub_100030B60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, void *a6, uint64_t a7, uint64_t (*a8)(uint64_t a1), void *a9, uint64_t a10, uint64_t a11, Swift::Int a12)
{
  uint64_t v18 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v134 = *(void *)(v18 - 8);
  uint64_t v135 = v18;
  __chkstk_darwin(v18);
  CGFloat v132 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DispatchQoS();
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  long long v130 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = *a1;
  unint64_t v21 = a1[1];
  uint64_t v23 = *(void *)(a4 + 32);
  swift_beginAccess();
  uint64_t v136 = v23;
  uint64_t v24 = *(void *)(v23 + 136);
  if (!v24
    || ((v26 = *(void *)(a5 + 16), unint64_t v25 = *(void *)(a5 + 24), *(void *)(v24 + 16) == v26)
      ? (BOOL v27 = *(void *)(v24 + 24) == v25)
      : (BOOL v27 = 0),
        !v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    if (qword_10037DD80 != -1) {
      goto LABEL_103;
    }
    goto LABEL_12;
  }
  uint64_t v124 = v26;
  unint64_t v125 = v25;
  Swift::Int v129 = a5;
  aBlock = a6;
  uint64_t v140 = a7;
  double v141 = a8;
  double v142 = a9;
  swift_bridgeObjectRetain();
  sub_100004010(&qword_1003809D0);
  Binding.wrappedValue.getter();
  if (v146)
  {
    if (v22 == v145 && v146 == v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v126 = 1;
    }
    else
    {
      int v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    int v126 = 0;
  }
  aBlock = a6;
  uint64_t v140 = a7;
  double v141 = a8;
  double v142 = a9;
  uint64_t v145 = v22;
  unint64_t v146 = v21;
  swift_bridgeObjectRetain();
  Binding.wrappedValue.setter();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000FD84(v32, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain();
  long long v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 134349056;
    if ((v21 & 0x1000000000000000) != 0)
    {
      uint64_t v36 = (void *)String.UTF8View._foreignCount()();
    }
    else if ((v21 & 0x2000000000000000) != 0)
    {
      uint64_t v36 = (void *)(HIBYTE(v21) & 0xF);
    }
    else
    {
      uint64_t v36 = (void *)(v22 & 0xFFFFFFFFFFFFLL);
    }
    aBlock = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Free form text: Text length == %{public}ld", v35, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  unint64_t v37 = 0xE000000000000000;
  uint64_t v145 = 0;
  unint64_t v146 = 0xE000000000000000;
  uint64_t v38 = v22 & 0xFFFFFFFFFFFFLL;
  if ((v21 & 0x2000000000000000) != 0) {
    uint64_t v38 = HIBYTE(v21) & 0xF;
  }
  aBlock = (void *)v22;
  uint64_t v140 = v21;
  double v141 = 0;
  double v142 = (void *)v38;
  swift_bridgeObjectRetain();
  Swift::String_optional v39 = String.Iterator.next()();
  if (v39.value._object)
  {
    uint64_t countAndFlagsBits = v39.value._countAndFlagsBits;
    object = v39.value._object;
    do
    {
      swift_bridgeObjectRetain();
      NSString v43 = String._bridgeToObjectiveC()();
      IsSingleEmojuint64_t i = CEMStringIsSingleEmoji();
      swift_bridgeObjectRelease();

      if (!IsSingleEmoji)
      {
        v45._uint64_t countAndFlagsBits = countAndFlagsBits;
        v45._object = object;
        String.append(_:)(v45);
      }
      swift_bridgeObjectRelease();
      Swift::String_optional v42 = String.Iterator.next()();
      uint64_t countAndFlagsBits = v42.value._countAndFlagsBits;
      object = v42.value._object;
    }
    while (v42.value._object);
    long long v46 = (void *)v145;
    unint64_t v37 = v146;
  }
  else
  {
    long long v46 = 0;
  }
  swift_bridgeObjectRelease();
  aBlock = v46;
  uint64_t v140 = v37;
  uint64_t v48 = String.init<A>(_:)();
  unint64_t v49 = v47;
  uint64_t v145 = v48;
  unint64_t v146 = v47;
  uint64_t v128 = v32;
  if (v22 == v48 && v21 == v47 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v50 = qword_10037DE10;
    swift_bridgeObjectRetain();
    if (v50 != -1) {
      swift_once();
    }
    sub_10000FD84(v32, (uint64_t)qword_1003A9B08);
    sub_100032A3C(a4);
    sub_100032A3C(a4);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      char v53 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)char v53 = 136446210;
      uint64_t v54 = sub_1000C8E54();
      uint64_t v137 = sub_1001B3178(v54, v55, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100032B18(a4);
      sub_100032B18(a4);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "[%{public}s] Free form text: Disallowed character entered", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100032B18(a4);
      sub_100032B18(a4);
    }

    sub_10000FDBC();
    char v56 = (void *)static OS_dispatch_queue.main.getter();
    long long v57 = (_OWORD *)swift_allocObject();
    long long v58 = *(_OWORD *)(a4 + 112);
    v57[7] = *(_OWORD *)(a4 + 96);
    v57[8] = v58;
    v57[9] = *(_OWORD *)(a4 + 128);
    long long v59 = *(_OWORD *)(a4 + 48);
    v57[3] = *(_OWORD *)(a4 + 32);
    v57[4] = v59;
    long long v60 = *(_OWORD *)(a4 + 80);
    v57[5] = *(_OWORD *)(a4 + 64);
    v57[6] = v60;
    long long v61 = *(_OWORD *)(a4 + 16);
    v57[1] = *(_OWORD *)a4;
    v57[2] = v61;
    double v143 = sub_100033FC0;
    long long v144 = v57;
    aBlock = _NSConcreteStackBlock;
    uint64_t v140 = 1107296256;
    double v141 = sub_100207A1C;
    double v142 = &unk_10034F850;
    long long v62 = _Block_copy(&aBlock);
    sub_100032A3C(a4);
    swift_release();
    long long v63 = v130;
    static DispatchQoS.unspecified.getter();
    aBlock = _swiftEmptyArrayStorage;
    sub_100033FF8((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    long long v64 = v132;
    uint64_t v65 = v135;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v62);

    (*(void (**)(char *, uint64_t))(v134 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v63, v133);
    uint64_t v32 = v128;
  }
  unint64_t v66 = 0xE000000000000000;
  uint64_t v137 = 0;
  unint64_t v138 = 0xE000000000000000;
  uint64_t v67 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0) {
    uint64_t v67 = v48 & 0xFFFFFFFFFFFFLL;
  }
  aBlock = (void *)v48;
  uint64_t v140 = v49;
  double v141 = 0;
  double v142 = (void *)v67;
  swift_bridgeObjectRetain();
  Swift::String_optional v68 = String.Iterator.next()();
  uint64_t v69 = v68.value._object;
  if (v68.value._object)
  {
    uint64_t v70 = v68.value._countAndFlagsBits;
    do
    {
      if ((v70 != 10 || v69 != (void *)0xE100000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v72._uint64_t countAndFlagsBits = v70;
        v72._object = v69;
        String.append(_:)(v72);
      }
      swift_bridgeObjectRelease();
      Swift::String_optional v71 = String.Iterator.next()();
      uint64_t v70 = v71.value._countAndFlagsBits;
      uint64_t v69 = v71.value._object;
    }
    while (v71.value._object);
    uint64_t v69 = (void *)v137;
    unint64_t v66 = v138;
  }
  Swift::Int v73 = a12;
  swift_bridgeObjectRelease();
  aBlock = v69;
  uint64_t v140 = v66;
  uint64_t v74 = String.init<A>(_:)();
  if (v48 != v74 || v49 != v75)
  {
    uint64_t v77 = v74;
    unint64_t v78 = v75;
    char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v79)
    {
      swift_bridgeObjectRelease();
      uint64_t v80 = v145;
      unint64_t v78 = v146;
      if ((v146 & 0x1000000000000000) != 0) {
        goto LABEL_100;
      }
    }
    else
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      sub_10000FD84(v32, (uint64_t)qword_1003A9B08);
      sub_100032A3C(a4);
      sub_100032A3C(a4);
      Swift::String v89 = Logger.logObject.getter();
      os_log_type_t v90 = static os_log_type_t.default.getter();
      BOOL v91 = os_log_type_enabled(v89, v90);
      Swift::Int v127 = a12;
      if (v91)
      {
        Swift::String v92 = (uint8_t *)swift_slowAlloc();
        aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)Swift::String v92 = 136446210;
        uint64_t v93 = sub_1000C8E54();
        uint64_t v137 = sub_1001B3178(v93, v94, (uint64_t *)&aBlock);
        Swift::Int v73 = v127;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100032B18(a4);
        sub_100032B18(a4);
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "[%{public}s] Free form text: Return symbol entered", v92, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100032B18(a4);
        sub_100032B18(a4);
      }

      if ((v126 & 1) == 0)
      {
        sub_10000FDBC();
        long long v117 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v118 = swift_allocObject();
        *(void *)(v118 + 16) = a10;
        *(void *)(v118 + 24) = a11;
        double v143 = sub_100034078;
        long long v144 = (_OWORD *)v118;
        aBlock = _NSConcreteStackBlock;
        uint64_t v140 = 1107296256;
        double v141 = sub_100207A1C;
        double v142 = &unk_10034F8A0;
        int v119 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v120 = v130;
        static DispatchQoS.unspecified.getter();
        aBlock = _swiftEmptyArrayStorage;
        sub_100033FF8((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
        uint64_t v121 = v132;
        uint64_t v122 = v135;
        Swift::Int v73 = v127;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v119);

        (*(void (**)(char *, uint64_t))(v134 + 8))(v121, v122);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v120, v133);
      }
      swift_bridgeObjectRelease();
      uint64_t v145 = v77;
      unint64_t v146 = v78;
      uint64_t v32 = v128;
      uint64_t v80 = v77;
      if ((v78 & 0x1000000000000000) != 0) {
        goto LABEL_100;
      }
    }
LABEL_63:
    if ((v78 & 0x2000000000000000) != 0) {
      uint64_t v81 = HIBYTE(v78) & 0xF;
    }
    else {
      uint64_t v81 = v80 & 0xFFFFFFFFFFFFLL;
    }
    goto LABEL_66;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v80 = v145;
  unint64_t v78 = v146;
  if ((v146 & 0x1000000000000000) == 0) {
    goto LABEL_63;
  }
LABEL_100:
  uint64_t v81 = String.UTF8View._foreignCount()();
LABEL_66:
  Swift::Int v82 = *(void *)(v73 + 48);
  if (v82 >= v81)
  {
LABEL_89:
    swift_bridgeObjectRetain();
    char v107 = sub_1000D18BC(v129, v73, v80, v78);
    swift_bridgeObjectRelease();
    if ((v107 & 1) == 0)
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      sub_10000FD84(v32, (uint64_t)qword_1003A9B08);
      sub_100032A3C(a4);
      swift_retain();
      swift_retain();
      sub_100032A3C(a4);
      swift_retain();
      swift_retain();
      char v108 = Logger.logObject.getter();
      os_log_type_t v109 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = swift_slowAlloc();
        aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v110 = 136446723;
        Swift::Int v111 = v73;
        uint64_t v112 = sub_1000C8E54();
        uint64_t v137 = sub_1001B3178(v112, v113, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100032B18(a4);
        sub_100032B18(a4);
        *(_WORD *)(v110 + 12) = 2081;
        uint64_t v114 = *(void *)(v73 + 16);
        unint64_t v115 = *(void *)(v111 + 24);
        swift_bridgeObjectRetain();
        uint64_t v137 = sub_1001B3178(v114, v115, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v110 + 22) = 2081;
        unint64_t v116 = v125;
        swift_bridgeObjectRetain();
        uint64_t v137 = sub_1001B3178(v124, v116, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "[%{public}s] QuestionnaireBodyView: failed to update value of %{private}s for %{private}s", (uint8_t *)v110, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100032B18(a4);
        sub_100032B18(a4);

        swift_release_n();
        swift_release_n();
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  sub_10000FD84(v32, (uint64_t)qword_1003A9B08);
  sub_100032A3C(a4);
  sub_100032A3C(a4);
  uint64_t v83 = Logger.logObject.getter();
  os_log_type_t v84 = static os_log_type_t.default.getter();
  BOOL v85 = os_log_type_enabled(v83, v84);
  Swift::Int v127 = v73;
  if (v85)
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc();
    aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 136446210;
    uint64_t v87 = sub_1000C8E54();
    uint64_t v137 = sub_1001B3178(v87, v88, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100032B18(a4);
    sub_100032B18(a4);
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "[%{public}s] Free form text: Entered text is over the limit", v86, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100032B18(a4);
    sub_100032B18(a4);
  }

  sub_10000FDBC();
  Swift::String v95 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v96 = (_OWORD *)swift_allocObject();
  long long v97 = *(_OWORD *)(a4 + 112);
  v96[7] = *(_OWORD *)(a4 + 96);
  v96[8] = v97;
  v96[9] = *(_OWORD *)(a4 + 128);
  long long v98 = *(_OWORD *)(a4 + 48);
  v96[3] = *(_OWORD *)(a4 + 32);
  v96[4] = v98;
  long long v99 = *(_OWORD *)(a4 + 80);
  v96[5] = *(_OWORD *)(a4 + 64);
  v96[6] = v99;
  long long v100 = *(_OWORD *)(a4 + 16);
  v96[1] = *(_OWORD *)a4;
  v96[2] = v100;
  double v143 = sub_10003413C;
  long long v144 = v96;
  aBlock = _NSConcreteStackBlock;
  uint64_t v140 = 1107296256;
  double v141 = sub_100207A1C;
  double v142 = &unk_10034F8F0;
  uint64_t v101 = _Block_copy(&aBlock);
  sub_100032A3C(a4);
  swift_release();
  char v102 = v130;
  static DispatchQoS.unspecified.getter();
  aBlock = _swiftEmptyArrayStorage;
  sub_100033FF8((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v103 = v132;
  uint64_t v104 = v135;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v101);

  (*(void (**)(char *, uint64_t))(v134 + 8))(v103, v104);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v102, v133);
  uint64_t v32 = v128;
  while (1)
  {
    uint64_t v80 = v145;
    unint64_t v78 = v146;
    uint64_t v105 = HIBYTE(v146) & 0xF;
    if ((v146 & 0x1000000000000000) != 0)
    {
      if (v82 >= String.UTF8View._foreignCount()()) {
        goto LABEL_88;
      }
    }
    else
    {
      if ((v146 & 0x2000000000000000) != 0) {
        uint64_t v106 = HIBYTE(v146) & 0xF;
      }
      else {
        uint64_t v106 = v145 & 0xFFFFFFFFFFFFLL;
      }
      if (v82 >= v106)
      {
LABEL_88:
        Swift::Int v73 = v127;
        goto LABEL_89;
      }
    }
    if ((v78 & 0x2000000000000000) != 0) {
      break;
    }
    if ((v80 & 0xFFFFFFFFFFFFLL) == 0) {
      goto LABEL_102;
    }
LABEL_78:
    String.index(before:)();
    String.remove(at:)();
    swift_bridgeObjectRelease();
  }
  if (v105) {
    goto LABEL_78;
  }
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  swift_once();
LABEL_12:
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9958);
  long long v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    long long v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Free form text: Updating value when it is not a current question anymore", v31, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100031F68(void *a1)
{
  if (*a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100033FF8((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100032010@<X0>(uint64_t a1@<X8>)
{
  return sub_10002F1F8(a1);
}

uint64_t sub_100032064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v91 = a1;
  uint64_t v85 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v85);
  Swift::String v89 = (double *)((char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = sub_100004010(&qword_1003809F8);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004010(&qword_100380A00);
  uint64_t v5 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100004010(&qword_100380A08);
  __chkstk_darwin(v73);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_100380A10);
  __chkstk_darwin(v74);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100380A18);
  __chkstk_darwin(v12 - 8);
  uint64_t v77 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004010(&qword_100380A20);
  __chkstk_darwin(v76);
  uint64_t v78 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100004010(&qword_100380A28);
  __chkstk_darwin(v84);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004010(&qword_100380A30);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  Swift::Int v82 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100004010(&qword_100380A38);
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  char v79 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v20 = v18[9];
    uint64_t v19 = v18[10];
    sub_100008F88(v18 + 6, v20);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 24))(v96, v20, v19);
    LocalizedStringKey.init(stringLiteral:)();
    long long v21 = *(_OWORD *)(v1 + 32);
    long long v92 = *(_OWORD *)(v1 + 16);
    long long v93 = v21;
    sub_100004010(&qword_100387430);
    Binding.projectedValue.getter();
    TextField<>.init(_:text:axis:)();
    uint64_t v22 = *(void *)(v1 + 56);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = v75;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v75);
    unint64_t v25 = &v9[*(int *)(v73 + 36)];
    *(void *)unint64_t v25 = KeyPath;
    *((void *)v25 + 1) = v22;
    v25[16] = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
    static Font.title3.getter();
    static Font.Weight.semibold.getter();
    uint64_t v26 = Font.weight(_:)();
    swift_release();
    uint64_t v27 = swift_getKeyPath();
    sub_10000D2A0((uint64_t)v9, (uint64_t)v11, &qword_100380A08);
    uint64_t v28 = (uint64_t *)&v11[*(int *)(v74 + 36)];
    *uint64_t v28 = v27;
    v28[1] = v26;
    sub_10000950C((uint64_t)v9, &qword_100380A08);
    uint64_t v29 = static Alignment.center.getter();
    uint64_t v30 = v77;
    sub_100165D88(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v77, 0.0, 1, 0.0, 1, v29, v31);
    sub_10000950C((uint64_t)v11, &qword_100380A10);
    uint64_t v32 = v97;
    uint64_t v33 = v98;
    sub_100008F88(v96, v97);
    (*(void (**)(uint64_t, uint64_t))(v33 + 376))(v32, v33);
    LOBYTE(v32) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v42 = v78;
    sub_10000D2A0(v30, v78, &qword_100380A18);
    uint64_t v43 = v42 + *(int *)(v76 + 36);
    *(unsigned char *)uint64_t v43 = v32;
    *(void *)(v43 + 8) = v35;
    *(void *)(v43 + 16) = v37;
    *(void *)(v43 + 24) = v39;
    *(void *)(v43 + 32) = v41;
    *(unsigned char *)(v43 + 40) = 0;
    sub_10000950C(v30, &qword_100380A18);
    uint64_t v44 = v97;
    uint64_t v45 = v98;
    sub_100008F88(v96, v97);
    double v46 = (*(double (**)(uint64_t, uint64_t))(v45 + 368))(v44, v45);
    unint64_t v47 = v89;
    uint64_t v48 = (char *)v89 + *(int *)(v85 + 20);
    uint64_t v49 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v50 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
    *unint64_t v47 = v46;
    v47[1] = v46;
    uint64_t v51 = v97;
    uint64_t v52 = v98;
    sub_100008F88(v96, v97);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 384))(v51, v52);
    uint64_t v54 = v90;
    sub_100034580((uint64_t)v47, v90);
    uint64_t v55 = v88;
    *(void *)(v54 + *(int *)(v88 + 52)) = v53;
    *(_WORD *)(v54 + *(int *)(v55 + 56)) = 256;
    sub_1000345E4((uint64_t)v47);
    uint64_t v56 = static Alignment.center.getter();
    uint64_t v58 = v57;
    uint64_t v59 = v84;
    uint64_t v60 = (uint64_t)v80;
    uint64_t v61 = (uint64_t)&v80[*(int *)(v84 + 36)];
    sub_10000D2A0(v54, v61, &qword_1003809F8);
    long long v62 = (uint64_t *)(v61 + *(int *)(sub_100004010(&qword_100380A40) + 36));
    *long long v62 = v56;
    v62[1] = v58;
    sub_10000D2A0(v42, v60, &qword_100380A20);
    sub_10000950C(v54, &qword_1003809F8);
    sub_10000950C(v42, &qword_100380A20);
    long long v63 = *(_OWORD *)(v2 + 96);
    long long v94 = *(_OWORD *)(v2 + 80);
    long long v95 = v63;
    uint64_t v64 = *(void *)(v2 + 72);
    *(void *)&long long v92 = *(void *)(v2 + 64);
    *((void *)&v92 + 1) = v64;
    uint64_t v65 = sub_100004010(&qword_100380920);
    unint64_t v66 = sub_100034640();
    unint64_t v67 = sub_100034870();
    Swift::String_optional v68 = v82;
    View.focused<A>(_:equals:)();
    sub_10000950C(v60, &qword_100380A28);
    *(void *)&long long v94 = v59;
    *((void *)&v94 + 1) = v65;
    *(void *)&long long v95 = v66;
    *((void *)&v95 + 1) = v67;
    swift_getOpaqueTypeConformance2();
    uint64_t v69 = v79;
    uint64_t v70 = v87;
    View.keyboardType(_:)();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v70);
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v91, v69, v83);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v96);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100033FF8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100032A1C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100032A28(uint64_t a1, char a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100032A34(uint64_t result)
{
  *(unsigned char *)(result + 144) = 0;
  return result;
}

uint64_t sub_100032A3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032B18(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FocusOrder()
{
  swift_release();

  return swift_release();
}

void *_s8SOSBuddy10FocusOrderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FocusOrder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FocusOrder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FocusOrder()
{
  return &type metadata for FocusOrder;
}

uint64_t destroy for FreeFormTextView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for FreeFormTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FreeFormTextView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[10];
  a1[9] = a2[9];
  a1[10] = v4;
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for FreeFormTextView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for FreeFormTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeFormTextView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeFormTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeFormTextView()
{
  return &type metadata for FreeFormTextView;
}

uint64_t sub_100033210()
{
  return sub_1000335A4(&qword_100380928, &qword_1003808C0, (void (*)(void))sub_100033254);
}

unint64_t sub_100033254()
{
  unint64_t result = qword_100380930;
  if (!qword_100380930)
  {
    sub_1000094C4(&qword_1003808B8);
    sub_100009B18(&qword_100380938, &qword_1003808B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380930);
  }
  return result;
}

uint64_t sub_1000332F4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100033310()
{
  unint64_t result = qword_100380940;
  if (!qword_100380940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380940);
  }
  return result;
}

uint64_t sub_100033364(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void sub_100033388()
{
  sub_10002FFB8(v0 + 16);
}

uint64_t sub_100033390(uint64_t result)
{
  *(unsigned char *)(result + 256) = 0;
  return result;
}

unint64_t sub_100033398()
{
  unint64_t result = qword_100380978;
  if (!qword_100380978)
  {
    sub_1000094C4(&qword_100380968);
    sub_10003340C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380978);
  }
  return result;
}

unint64_t sub_10003340C()
{
  unint64_t result = qword_100380980;
  if (!qword_100380980)
  {
    sub_1000094C4(&qword_100380988);
    sub_1000334D0(&qword_100380990, &qword_100380998, (void (*)(void))sub_100033574);
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380980);
  }
  return result;
}

uint64_t sub_1000334D0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100033574()
{
  return sub_1000335A4(&qword_1003809A0, &qword_1003809A8, (void (*)(void))sub_100033620);
}

uint64_t sub_1000335A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100033620()
{
  unint64_t result = qword_1003809B0;
  if (!qword_1003809B0)
  {
    sub_1000094C4(&qword_1003809B8);
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003809B0);
  }
  return result;
}

uint64_t sub_1000336C0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033724(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100033724(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100033734(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a33)
  {
    return sub_1000338A4(a1, a2, a3, a4);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100033724(a9, a10, a11 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_1000338A4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033724(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_10003392C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_100033998(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033364(result, a2, a3 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000339FC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v5 = *(unsigned char *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5);
  return a1;
}

uint64_t sub_100033A88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a33)
  {
    return sub_100033BF8(a1, a2, a3, a4);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_100033364(a9, a10, a11 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100033BF8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033364(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_100033C80(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100033CA0(uint64_t result)
{
  *(unsigned char *)(result + 256) = 1;
  return result;
}

double sub_100033CBC(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100033CDC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100033D64(uint64_t a1)
{
  return a1;
}

uint64_t sub_100033DEC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

void sub_100033E9C(void *a1@<X8>)
{
  sub_100030AB4(v1 + 32, *(void *)(v1 + 184), a1);
}

uint64_t sub_100033EAC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 240, 7);
}

void sub_100033F7C(unint64_t *a1)
{
  sub_100030B60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void *)(v1 + 176), *(void **)(v1 + 184), *(void *)(v1 + 192), *(uint64_t (**)(uint64_t))(v1 + 200), *(void **)(v1 + 208), *(void *)(v1 + 216), *(void *)(v1 + 224), *(void *)(v1 + 232));
}

uint64_t sub_100033FC0()
{
  return sub_100031F68((void *)(v0 + 16));
}

uint64_t sub_100033FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100033FF0()
{
  return swift_release();
}

uint64_t sub_100033FF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100034040()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100034078()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000340A4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10003413C()
{
  return sub_100031F68((void *)(v0 + 16));
}

uint64_t destroy for FreeFormTextField()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FreeFormTextField(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FreeFormTextField(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FreeFormTextField(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for FreeFormTextField(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeFormTextField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeFormTextField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeFormTextField()
{
  return &type metadata for FreeFormTextField;
}

uint64_t sub_100034520()
{
  return sub_100009B18(&qword_1003809E8, &qword_1003809F0);
}

uint64_t sub_10003455C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100034580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000345E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100034640()
{
  unint64_t result = qword_100380A48;
  if (!qword_100380A48)
  {
    sub_1000094C4(&qword_100380A28);
    sub_1000335A4(&qword_100380A50, &qword_100380A20, (void (*)(void))sub_10003470C);
    sub_100009B18(&qword_100380A88, &qword_100380A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380A48);
  }
  return result;
}

unint64_t sub_10003470C()
{
  unint64_t result = qword_100380A58;
  if (!qword_100380A58)
  {
    sub_1000094C4(&qword_100380A18);
    sub_1000334D0(&qword_100380A60, &qword_100380A10, (void (*)(void))sub_1000347AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380A58);
  }
  return result;
}

unint64_t sub_1000347AC()
{
  unint64_t result = qword_100380A68;
  if (!qword_100380A68)
  {
    sub_1000094C4(&qword_100380A08);
    sub_100009B18(&qword_100380A70, &qword_100380A00);
    sub_100009B18(&qword_100380A78, &qword_100380A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380A68);
  }
  return result;
}

unint64_t sub_100034870()
{
  unint64_t result = qword_100380A90;
  if (!qword_100380A90)
  {
    sub_1000094C4(&qword_100380920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380A90);
  }
  return result;
}

uint64_t sub_1000348DC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000349F8(void *a1, void *a2, void *a3)
{
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B80);
  id v8 = v3;
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = v8;
  id v13 = v9;
  id v14 = v10;
  id v15 = v11;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t type = v17;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446978;
    id v19 = v12;
    id v20 = [v19 description];
    uint64_t v55 = v13;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v15;
    unint64_t v23 = v22;

    sub_1001B3178(v21, v23, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    log = v16;
    id v24 = v12;
    id v25 = v55;
    id v26 = [v25 description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    sub_1001B3178(v27, v29, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v12 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2082;
    id v30 = v14;
    id v31 = [v30 description];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    sub_1001B3178(v32, v34, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 32) = 2082;
    id v35 = v52;
    id v36 = [v35 description];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;

    sub_1001B3178(v37, v39, &v56);
    id v13 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%{public}s] scene(%{public}s) willConnectTo session(%{public}s) with options(%{public}s)", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  self;
  uint64_t v40 = swift_dynamicCastObjCClass();
  if (v40)
  {
    uint64_t v41 = v40;
    id v42 = v13;
    sub_100035820(v41);
  }
  else
  {
    id v43 = v12;
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      double v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)double v46 = 136446210;
      id v47 = v43;
      id v48 = [v47 description];
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      sub_1001B3178(v49, v51, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[%{public}s] provided scene is not a UIWindowScene", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100035090(void *a1)
{
}

void sub_100035104(void *a1)
{
}

void sub_100035178(void *a1)
{
}

void sub_100035184(void *a1, const char *a2)
{
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  id v6 = v2;
  id v7 = a1;
  id v22 = v6;
  id v8 = v7;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    id v12 = v22;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = a2;
    unint64_t v16 = v15;

    sub_1001B3178(v14, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    id v17 = v8;
    id v18 = [v17 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    sub_1001B3178(v19, v21, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v23, (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100035490(void *a1)
{
  return sub_100035518(a1, "[%{public}s] sceneWillEnterForeground(%{public}s)", 1);
}

uint64_t sub_100035508(void *a1)
{
  return sub_100035518(a1, "[%{public}s] sceneDidEnterBackground(%{public}s)", 0);
}

uint64_t sub_100035518(void *a1, char *a2, char a3)
{
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B80);
  id v8 = v3;
  id v9 = a1;
  id v10 = v8;
  id v11 = v9;
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    char v27 = a3;
    id v15 = v10;
    id v16 = [v15 description];
    format = a2;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    sub_1001B3178(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    id v20 = v11;
    id v21 = [v20 description];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    sub_1001B3178(v22, v24, &v28);
    a3 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, format, (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = sub_100035C94();
  if (result)
  {
    sub_100199D20(a3 & 1);
    return swift_release();
  }
  return result;
}

void sub_100035820(uint64_t a1)
{
  if (sub_100035C94())
  {
    uint64_t v32 = v1;
    id v3 = [objc_allocWithZone((Class)type metadata accessor for SecureWindow()) initWithWindowScene:a1];
    if (qword_10037DCE8 != -1) {
      swift_once();
    }
    [v3 safeAreaInsets:v32];
    *(void *)&xmmword_1003A9880 = v4;
    *((void *)&xmmword_1003A9880 + 1) = v5;
    qword_1003A9890 = v6;
    unk_1003A9898 = v7;
    if (qword_10037DE38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000FD84(v8, (uint64_t)qword_1003A9B80);
    id v9 = v3;
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      __src[0] = swift_slowAlloc();
      *(_DWORD *)id v12 = 136315138;
      [v9 safeAreaInsets];
      __dst[1] = v13;
      __dst[2] = v14;
      __dst[3] = v15;
      type metadata accessor for UIEdgeInsets(0);
      uint64_t v16 = String.init<A>(describing:)();
      __dst[0] = sub_1001B3178(v16, v17, __src);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Safe area insets: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    [v9 setOverrideUserInterfaceStyle:2];
    type metadata accessor for AppRuntimeStateModel();
    sub_100036198(&qword_100380B58, (void (*)(uint64_t))type metadata accessor for AppRuntimeStateModel);
    id v18 = v9;
    uint64_t v19 = EnvironmentObject.init()();
    uint64_t v21 = v20;
    type metadata accessor for TransitionAlertModel();
    sub_100036198((unint64_t *)&unk_100380B60, (void (*)(uint64_t))type metadata accessor for TransitionAlertModel);
    uint64_t v22 = EnvironmentObject.init()();
    uint64_t v24 = v23;
    type metadata accessor for UIMetrics();
    sub_100036198((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v25 = EnvironmentObject.init()();
    uint64_t v27 = v26;
    LOBYTE(__src[0]) = 0;
    State.init(wrappedValue:)();
    LOBYTE(__src[0]) = 0;
    State.init(wrappedValue:)();
    v37[0] = v19;
    v37[1] = v21;
    v37[2] = v22;
    v37[3] = v24;
    v37[4] = v25;
    v37[5] = v27;
    char v38 = __dst[0];
    uint64_t v39 = __dst[1];
    char v40 = __dst[0];
    uint64_t v41 = __dst[1];
    sub_1001AFF1C((uint64_t)v37, (uint64_t)__src);
    LOBYTE(v21) = static Edge.Set.all.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    char v35 = v21;
    id v28 = objc_allocWithZone((Class)sub_100004010((uint64_t *)&unk_100380B70));
    unint64_t v29 = (void *)UIHostingController.init(rootView:)();
    [v18 setRootViewController:v29];

    id v30 = *(void **)(v33 + OBJC_IVAR____TtC8SOSBuddy13SceneDelegate_window);
    *(void *)(v33 + OBJC_IVAR____TtC8SOSBuddy13SceneDelegate_window) = v18;
    id v31 = v18;

    [v31 makeKeyAndVisible];
    swift_release();
  }
}

uint64_t sub_100035C94()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (v2)
  {
    type metadata accessor for AppDelegate();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy11AppDelegate_delegate) + 16);
      swift_retain();
      swift_unknownObjectRelease();
      return v4;
    }
    swift_unknownObjectRelease();
  }
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  id v6 = v0;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    id v10 = v6;
    id v11 = [v10 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_1001B3178(v12, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}s] app == nil", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

id sub_100035F4C(uint64_t a1)
{
  return sub_10003613C(a1, type metadata accessor for SceneDelegate);
}

uint64_t type metadata accessor for SceneDelegate()
{
  return self;
}

id sub_100036120()
{
  return sub_10003613C(0, type metadata accessor for SecureWindow);
}

id sub_10003613C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for SecureWindow()
{
  return self;
}

uint64_t sub_100036198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000361E0(uint64_t a1)
{
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9B80);
  id v4 = v1;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    id v9 = v5;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_1001B3178(v11, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    sub_10002986C();
    sub_100036198((unint64_t *)&unk_100380B80, (void (*)(uint64_t))sub_10002986C);
    swift_bridgeObjectRetain();
    uint64_t v14 = Set.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_1001B3178(v14, v16, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] openURLContexts(%{public}s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t result = sub_100035C94();
  if (result)
  {
    sub_10019961C(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000364A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a8;
  uint64_t v26 = a9;
  uint64_t v27 = a10;
  type metadata accessor for GeometryCapturer();
  swift_getWitnessTable();
  type metadata accessor for _BackgroundModifier();
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v24 - v16;
  uint64_t v33 = v25;
  uint64_t v34 = a4;
  swift_retain();
  static Alignment.center.getter();
  View.background<A>(_:alignment:)();
  swift_release();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v18[2] = a5;
  v18[3] = a6;
  uint64_t v20 = v26;
  uint64_t v19 = v27;
  v18[4] = a7;
  v18[5] = v20;
  uint64_t v21 = v28;
  v18[6] = v19;
  v18[7] = v21;
  v18[8] = v29;
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = a7;
  uint64_t v32 = WitnessTable;
  swift_getWitnessTable();
  View.onPreferenceChange<A>(_:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1000366F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a3;
  uint64_t v32 = a8;
  uint64_t v29 = a2;
  uint64_t v30 = a6;
  uint64_t v28 = a4;
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v19 = (char *)&v28 - v18;
  sub_10000FDBC();
  uint64_t v33 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, AssociatedTypeWitness);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v28;
  *((void *)v21 + 3) = a5;
  uint64_t v22 = v31;
  *((void *)v21 + 4) = v30;
  *((void *)v21 + 5) = a7;
  uint64_t v23 = v29;
  *((void *)v21 + 6) = v32;
  *((void *)v21 + 7) = v23;
  *((void *)v21 + 8) = v22;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v21[v20], v19, AssociatedTypeWitness);
  aBlock[4] = sub_100037180;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10034FA48;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100037A64((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v25 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v26 = (void *)v33;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v15, v36);
}

uint64_t sub_100036AD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = sub_100037A64(&qword_100380BF0, type metadata accessor for CGRect);
  swift_retain();
  sub_1000364A8((uint64_t)sub_100036F1C, v14, (uint64_t)sub_100036BEC, 0, a3, a4, a5, a7, a6, v15);

  return swift_release();
}

uint64_t sub_100036BEC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v13;
  return result;
}

uint64_t sub_100036CF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v13 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  uint64_t v19 = sub_100037A64(&qword_100380BF0, type metadata accessor for CGRect);
  swift_retain();
  sub_1000364A8((uint64_t)sub_100036F1C, v16, (uint64_t)sub_100036FB0, v18, v21, v22, v23, a8, a7, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_100036EE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100036F20()
{
  uint64_t v1 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100036FB0@<X0>(void *a1@<X8>)
{
  type metadata accessor for NamedCoordinateSpace();
  uint64_t result = GeometryProxy.frame<A>(in:)();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t type metadata accessor for GeometryCapturer()
{
  return sub_100006BAC();
}

uint64_t sub_100037050()
{
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100037088(uint64_t a1)
{
  return sub_1000366F0(a1, v1[7], v1[8], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10003709C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100037180()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 56))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_100037200(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100037210()
{
  return swift_release();
}

uint64_t sub_100037218@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = sub_100037A64(&qword_100380C98, type metadata accessor for CGSize);
  swift_retain();
  sub_1000364A8((uint64_t)sub_100037A38, v14, (uint64_t)sub_100037330, 0, a3, a4, a5, a7, a6, v15);

  return swift_release();
}

uint64_t sub_100037330@<X0>(void *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10003735C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  v8[5] = a2;
  type metadata accessor for _PreferenceWritingModifier();
  type metadata accessor for ModifiedContent();
  swift_retain();
  uint64_t v15 = &protocol witness table for Color;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = GeometryReader.init(content:)();
  uint64_t v14 = v9;
  uint64_t v10 = type metadata accessor for GeometryReader();
  uint64_t v11 = swift_getWitnessTable();
  sub_1000A7320(&v13, v10, v11);
  swift_release();
  uint64_t v13 = v17;
  uint64_t v14 = v18;
  sub_1000A7320(&v13, v10, v11);
  return swift_release();
}

uint64_t sub_1000374E4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[1] = a3;
  unint64_t v20 = a2;
  uint64_t v22 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)v19 - v6;
  type metadata accessor for _PreferenceWritingModifier();
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v19 - v13;
  uint64_t v25 = static Color.clear.getter();
  v20(a1);
  View.preference<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  swift_release();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = &protocol witness table for Color;
  uint64_t v24 = WitnessTable;
  uint64_t v16 = swift_getWitnessTable();
  sub_1000A7320(v12, v8, v16);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  sub_1000A7320(v14, v8, v16);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
}

uint64_t sub_100037784(uint64_t a1)
{
  return sub_10003735C(*v1, v1[1], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_100037794()
{
  swift_retain();
  sub_100004010(&qword_100380BF8);
  sub_100004010(&qword_100380C00);
  sub_100009B18(&qword_100380C08, &qword_100380BF8);
  sub_100009B18(qword_100380C10, &qword_100380C00);
  _ConditionalContent<>.init(storage:)();
  return v1;
}

void *initializeBufferWithCopyOfBuffer for TryOutMessageEntrySendButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for TryOutMessageEntrySendButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TryOutMessageEntrySendButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PartnerModel.Partners(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PartnerModel.Partners(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000379B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000379F4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100037A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000374E4(a1, *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_100037A38(double *a1)
{
  return (*(uint64_t (**)(double, double))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_100037A64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100037AAC(double *a1)
{
  return (*(uint64_t (**)(double, double, double, double))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_100037ADC()
{
  return swift_getWitnessTable();
}

uint64_t destroy for BuiltInContentView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BuiltInContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BuiltInContentView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInContentView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInContentView()
{
  return &type metadata for BuiltInContentView;
}

uint64_t sub_100037E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037E2C()
{
  long long v125 = *(_OWORD *)(v0 + 8);
  uint64_t v126 = *(void *)(v0 + 24);
  uint64_t v1 = v125;
  switch(*(unsigned char *)(v125 + 64))
  {
    case 1:
      uint64_t v3 = *(void *)v0;
      uint64_t v4 = (_OWORD *)swift_allocObject();
      long long v5 = *(_OWORD *)(v0 + 16);
      v4[1] = *(_OWORD *)v0;
      v4[2] = v5;
      v4[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)&v65, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)&v65);
      type metadata accessor for AppEvents();
      sub_100039EEC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v6 = EnvironmentObject.init()();
      uint64_t v8 = v7;
      type metadata accessor for UIMetrics();
      sub_100039EEC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v9 = EnvironmentObject.init()();
      uint64_t v11 = v10;
      LOBYTE(v84) = 0;
      State.init(wrappedValue:)();
      uint64_t v12 = v102;
      uint64_t v13 = *((void *)&v102 + 1);
      *(void *)&long long v102 = v6;
      *((void *)&v102 + 1) = v8;
      *(void *)&long long v103 = v9;
      *((void *)&v103 + 1) = v11;
      *(void *)&long long v104 = v3;
      *((void *)&v104 + 1) = v1;
      *(void *)&long long v105 = sub_100039FB0;
      *((void *)&v105 + 1) = v4;
      *(void *)&long long v106 = v12;
      *((void *)&v106 + 1) = v13;
      LOBYTE(v107) = 1;
      sub_100039A2C();
      sub_100039A80();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v102 = v74;
      long long v103 = v75;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      LOBYTE(v107) = v79;
      char v113 = 0;
      sub_100004010(&qword_100380D08);
      sub_100004010(&qword_100380D28);
      sub_1000399F0();
      sub_100039AD4();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)&v84, (uint64_t)&v102, &qword_100380CE8);
      char v114 = 0;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_6;
    case 2:
      uint64_t v14 = *(void *)v0;
      uint64_t v15 = (_OWORD *)swift_allocObject();
      long long v16 = *(_OWORD *)(v0 + 16);
      v15[1] = *(_OWORD *)v0;
      uint64_t v15[2] = v16;
      v15[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)&v115, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)&v115);
      swift_retain();
      sub_100205F40(v14, v1, (uint64_t)sub_100039DC4, (uint64_t)v15, (uint64_t)&v65);
      sub_100039DE8((uint64_t)&v65, (uint64_t)&v102);
      char v112 = 0;
      sub_100039B10();
      sub_100039B64();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)&v74, (uint64_t)&v102, &qword_100380D28);
      char v113 = 1;
      sub_100004010(&qword_100380D08);
      sub_100004010(&qword_100380D28);
      sub_1000399F0();
      sub_100039AD4();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)&v74, &qword_100380D28);
      sub_10000D2A0((uint64_t)&v84, (uint64_t)&v102, &qword_100380CE8);
      char v114 = 0;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)&v84, &qword_100380CE8);
      return sub_100039E44((uint64_t)&v65);
    case 3:
      uint64_t v17 = *(void *)v0;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = *(_OWORD *)(v0 + 16);
      v18[1] = *(_OWORD *)v0;
      uint64_t v18[2] = v19;
      v18[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)&v65, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)&v65);
      type metadata accessor for AppEvents();
      sub_100039EEC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v20 = EnvironmentObject.init()();
      uint64_t v22 = v21;
      type metadata accessor for UIMetrics();
      sub_100039EEC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v23 = EnvironmentObject.init()();
      uint64_t v25 = v24;
      LOBYTE(v84) = 0;
      State.init(wrappedValue:)();
      char v26 = v102;
      uint64_t v27 = *((void *)&v102 + 1);
      *(void *)&long long v102 = v20;
      *((void *)&v102 + 1) = v22;
      *(void *)&long long v103 = v23;
      *((void *)&v103 + 1) = v25;
      *(void *)&long long v104 = v17;
      *((void *)&v104 + 1) = v1;
      *(void *)&long long v105 = sub_100039FB0;
      *((void *)&v105 + 1) = v18;
      LOBYTE(v106) = v26;
      *((void *)&v106 + 1) = v27;
      char v112 = 1;
      sub_100039B10();
      sub_100039B64();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)&v74, (uint64_t)&v102, &qword_100380D28);
      char v113 = 1;
      sub_100004010(&qword_100380D08);
      sub_100004010(&qword_100380D28);
      sub_1000399F0();
      sub_100039AD4();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)&v74, &qword_100380D28);
      sub_10000D2A0((uint64_t)&v84, (uint64_t)&v102, &qword_100380CE8);
      char v114 = 0;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
LABEL_6:
      sub_10000950C((uint64_t)&v84, &qword_100380CE8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_10;
    case 4:
      uint64_t v28 = *(void *)v0;
      uint64_t v29 = (_OWORD *)swift_allocObject();
      long long v30 = *(_OWORD *)(v0 + 16);
      v29[1] = *(_OWORD *)v0;
      v29[2] = v30;
      v29[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)&v115, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)&v115);
      type metadata accessor for AppEvents();
      sub_100039EEC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v31 = EnvironmentObject.init()();
      uint64_t v33 = v32;
      type metadata accessor for RoadsideAssistanceModel();
      sub_100039EEC(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      uint64_t v34 = EnvironmentObject.init()();
      uint64_t v36 = v35;
      type metadata accessor for UIMetrics();
      sub_100039EEC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v37 = EnvironmentObject.init()();
      uint64_t v39 = v38;
      State.init(wrappedValue:)();
      uint64_t v40 = v102;
      uint64_t v41 = *((void *)&v102 + 1);
      *(void *)&long long v102 = v31;
      *((void *)&v102 + 1) = v33;
      *(void *)&long long v103 = v34;
      *((void *)&v103 + 1) = v36;
      *(void *)&long long v104 = v37;
      *((void *)&v104 + 1) = v39;
      *(void *)&long long v105 = v28;
      *((void *)&v105 + 1) = v1;
      *(void *)&long long v106 = sub_100039FB0;
      *((void *)&v106 + 1) = v29;
      *(void *)&long long v107 = v40;
      *((void *)&v107 + 1) = v41;
      LOBYTE(v108) = 0;
      sub_100039808();
      sub_10003985C();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v84 = v65;
      long long v85 = v66;
      long long v86 = v67;
      long long v87 = v68;
      long long v88 = v69;
      long long v89 = v70;
      LOBYTE(v90) = v71;
      sub_100039DB0((uint64_t)&v84);
      sub_10000D544((uint64_t)&v84, (uint64_t)&v102, &qword_100380CB0);
      sub_100004010(&qword_100380CB8);
      sub_100004010(&qword_100380CC0);
      sub_1000397CC();
      sub_1000398B0();
      _ConditionalContent<>.init(storage:)();
      long long v108 = v80;
      long long v109 = v81;
      long long v110 = v82;
      __int16 v111 = v83;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      long long v107 = v79;
      long long v102 = v74;
      long long v103 = v75;
      char v114 = 1;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_9;
    case 5:
      uint64_t v42 = *(void *)v0;
      id v43 = (_OWORD *)swift_allocObject();
      long long v44 = *(_OWORD *)(v0 + 16);
      v43[1] = *(_OWORD *)v0;
      v43[2] = v44;
      v43[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)&v115, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)&v115);
      type metadata accessor for AppEvents();
      sub_100039EEC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v45 = EnvironmentObject.init()();
      uint64_t v47 = v46;
      type metadata accessor for RoadsideAssistanceModel();
      sub_100039EEC(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      uint64_t v48 = EnvironmentObject.init()();
      uint64_t v50 = v49;
      type metadata accessor for UIMetrics();
      sub_100039EEC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *(void *)&long long v102 = v45;
      *((void *)&v102 + 1) = v47;
      *(void *)&long long v103 = v48;
      *((void *)&v103 + 1) = v50;
      *(void *)&long long v104 = EnvironmentObject.init()();
      *((void *)&v104 + 1) = v51;
      *(void *)&long long v105 = v42;
      *((void *)&v105 + 1) = v1;
      *(void *)&long long v106 = sub_100039FB0;
      *((void *)&v106 + 1) = v43;
      long long v107 = 0uLL;
      LOBYTE(v108) = 1;
      sub_100039808();
      sub_10003985C();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v84 = v65;
      long long v85 = v66;
      long long v86 = v67;
      long long v87 = v68;
      long long v88 = v69;
      long long v89 = v70;
      LOBYTE(v90) = v71;
      sub_100039DB0((uint64_t)&v84);
      sub_10000D544((uint64_t)&v84, (uint64_t)&v102, &qword_100380CB0);
      sub_100004010(&qword_100380CB8);
      sub_100004010(&qword_100380CC0);
      sub_1000397CC();
      sub_1000398B0();
      _ConditionalContent<>.init(storage:)();
      long long v108 = v80;
      long long v109 = v81;
      long long v110 = v82;
      __int16 v111 = v83;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      long long v107 = v79;
      long long v102 = v74;
      long long v103 = v75;
      char v114 = 1;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
      swift_release();
LABEL_9:
      swift_release();
LABEL_10:
      swift_release();
      uint64_t result = swift_release();
      break;
    case 6:
      uint64_t v64 = *(void *)v0;
      uint64_t v52 = (_OWORD *)swift_allocObject();
      long long v53 = *(_OWORD *)(v0 + 16);
      v52[1] = *(_OWORD *)v0;
      v52[2] = v53;
      v52[3] = *(_OWORD *)(v0 + 32);
      sub_10000D544((uint64_t)&v125 + 8, (uint64_t)v127, &qword_100380920);
      swift_retain_n();
      swift_retain_n();
      sub_100039BF8((uint64_t)v127);
      type metadata accessor for AppEvents();
      sub_100039EEC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      uint64_t v54 = EnvironmentObject.init()();
      uint64_t v62 = v55;
      uint64_t v63 = v54;
      type metadata accessor for RoadsideAssistanceModel();
      sub_100039EEC(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      uint64_t v56 = EnvironmentObject.init()();
      uint64_t v58 = v57;
      type metadata accessor for UIMetrics();
      sub_100039EEC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v59 = EnvironmentObject.init()();
      uint64_t v61 = v60;
      FocusState.init<A>()();
      long long v84 = 0uLL;
      sub_100004010(&qword_100380920);
      State.init(wrappedValue:)();
      *(void *)&long long v94 = v63;
      *((void *)&v94 + 1) = v62;
      *(void *)&long long v95 = v56;
      *((void *)&v95 + 1) = v58;
      *(void *)&long long v96 = v59;
      *((void *)&v96 + 1) = v61;
      *(void *)&long long v97 = v64;
      *((void *)&v97 + 1) = v1;
      *(void *)&long long v98 = sub_100039FB0;
      *((void *)&v98 + 1) = v52;
      long long v99 = v102;
      long long v100 = v103;
      *(void *)uint64_t v101 = v104;
      *(_OWORD *)&v101[8] = v102;
      *(void *)&v101[24] = v103;
      long long v67 = v96;
      long long v68 = v97;
      long long v65 = v94;
      long long v66 = v95;
      long long v72 = *(_OWORD *)v101;
      long long v73 = *(_OWORD *)&v101[16];
      long long v70 = v102;
      long long v71 = v103;
      long long v69 = v98;
      sub_100032A34((uint64_t)&v65);
      sub_10000D544((uint64_t)&v65, (uint64_t)&v102, &qword_100380CA0);
      sub_100039C24((uint64_t)&v94);
      sub_10003976C();
      _ConditionalContent<>.init(storage:)();
      long long v90 = v121;
      long long v91 = v122;
      long long v92 = v123;
      char v93 = v124;
      long long v86 = v117;
      long long v87 = v118;
      long long v88 = v119;
      long long v89 = v120;
      long long v84 = v115;
      long long v85 = v116;
      sub_1000397C0((uint64_t)&v84);
      sub_10000D544((uint64_t)&v84, (uint64_t)&v102, &qword_100380CB0);
      sub_100004010(&qword_100380CB8);
      sub_100004010(&qword_100380CC0);
      sub_1000397CC();
      sub_1000398B0();
      _ConditionalContent<>.init(storage:)();
      long long v108 = v80;
      long long v109 = v81;
      long long v110 = v82;
      __int16 v111 = v83;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      long long v107 = v79;
      long long v102 = v74;
      long long v103 = v75;
      char v114 = 1;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      uint64_t result = sub_100039CE8((uint64_t)&v94);
      break;
    case 7:
      sub_10002F1EC((uint64_t)&v65);
      sub_10000D544((uint64_t)&v65, (uint64_t)&v102, &qword_100380CA0);
      sub_10003976C();
      _ConditionalContent<>.init(storage:)();
      long long v90 = v121;
      long long v91 = v122;
      long long v92 = v123;
      char v93 = v124;
      long long v86 = v117;
      long long v87 = v118;
      long long v88 = v119;
      long long v89 = v120;
      long long v84 = v115;
      long long v85 = v116;
      sub_1000397C0((uint64_t)&v84);
      sub_10000D544((uint64_t)&v84, (uint64_t)&v102, &qword_100380CB0);
      sub_100004010(&qword_100380CB8);
      sub_100004010(&qword_100380CC0);
      sub_1000397CC();
      sub_1000398B0();
      _ConditionalContent<>.init(storage:)();
      long long v108 = v80;
      long long v109 = v81;
      long long v110 = v82;
      __int16 v111 = v83;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      long long v107 = v79;
      long long v102 = v74;
      long long v103 = v75;
      char v114 = 1;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      uint64_t result = _ConditionalContent<>.init(storage:)();
      break;
    default:
      type metadata accessor for EmergencyModel();
      sub_100039EEC(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
      swift_retain();
      swift_retain();
      EnvironmentObject.init()();
      sub_100039A2C();
      sub_100039A80();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v102 = v74;
      long long v103 = v75;
      long long v104 = v76;
      long long v105 = v77;
      long long v106 = v78;
      LOBYTE(v107) = v79;
      char v113 = 0;
      sub_100004010(&qword_100380D08);
      sub_100004010(&qword_100380D28);
      sub_1000399F0();
      sub_100039AD4();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)&v84, (uint64_t)&v102, &qword_100380CE8);
      char v114 = 0;
      sub_100004010(&qword_100380CE8);
      sub_100004010(&qword_100380CF0);
      sub_10003992C();
      sub_100039BB8();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)&v84, &qword_100380CE8);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1000393B4()
{
  uint64_t v1 = v0;
  long long v14 = *(_OWORD *)(v0 + 8);
  uint64_t v15 = *(void *)(v0 + 24);
  uint64_t v2 = v14;
  uint64_t v3 = sub_1000CA784((void *)v14, 0, 4);
  if ((v3 & 1) == 0)
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9B08);
    sub_10000D544((uint64_t)&v14 + 8, (uint64_t)v16, &qword_100380920);
    swift_retain();
    swift_retain();
    sub_100039BF8((uint64_t)v16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100039BF8((uint64_t)v16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100039BF8((uint64_t)v16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100039BF8((uint64_t)v16);
    swift_retain();
    long long v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446467;
      uint64_t v8 = sub_1000C8E54();
      sub_1001B3178(v8, v9, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100039F34((uint64_t)v16);
      swift_release();
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);
      swift_release();
      *(_WORD *)(v7 + 12) = 2081;
      uint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      sub_1001B3178(v11, v10, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100039F34((uint64_t)v16);
      swift_release();
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}s] QuestionnaireBodyView: failed to record answer for %{private}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);
      swift_release();
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);
      swift_release();
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);
      swift_release();
      swift_release();
      swift_release();
      sub_100039F34((uint64_t)v16);

      uint64_t v3 = swift_release();
    }
  }
  return (*(uint64_t (**)(uint64_t))(v1 + 32))(v3);
}

unint64_t sub_10003976C()
{
  unint64_t result = qword_100380CA8;
  if (!qword_100380CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380CA8);
  }
  return result;
}

uint64_t sub_1000397C0(uint64_t result)
{
  *(unsigned char *)(result + 145) = 1;
  return result;
}

uint64_t sub_1000397CC()
{
  return sub_100039968(&qword_100380CC8, &qword_100380CB8, (void (*)(void))sub_100039808, (void (*)(void))sub_10003985C);
}

unint64_t sub_100039808()
{
  unint64_t result = qword_100380CD0;
  if (!qword_100380CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380CD0);
  }
  return result;
}

unint64_t sub_10003985C()
{
  unint64_t result = qword_100380CD8;
  if (!qword_100380CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380CD8);
  }
  return result;
}

unint64_t sub_1000398B0()
{
  unint64_t result = qword_100380CE0;
  if (!qword_100380CE0)
  {
    sub_1000094C4(&qword_100380CC0);
    sub_10003976C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380CE0);
  }
  return result;
}

uint64_t sub_10003992C()
{
  return sub_100039968(&qword_100380CF8, &qword_100380CE8, (void (*)(void))sub_1000399F0, (void (*)(void))sub_100039AD4);
}

uint64_t sub_100039968(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000399F0()
{
  return sub_100039968(&qword_100380D00, &qword_100380D08, (void (*)(void))sub_100039A2C, (void (*)(void))sub_100039A80);
}

unint64_t sub_100039A2C()
{
  unint64_t result = qword_100380D10;
  if (!qword_100380D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380D10);
  }
  return result;
}

unint64_t sub_100039A80()
{
  unint64_t result = qword_100380D18;
  if (!qword_100380D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380D18);
  }
  return result;
}

uint64_t sub_100039AD4()
{
  return sub_100039968(&qword_100380D20, &qword_100380D28, (void (*)(void))sub_100039B10, (void (*)(void))sub_100039B64);
}

unint64_t sub_100039B10()
{
  unint64_t result = qword_100380D30;
  if (!qword_100380D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380D30);
  }
  return result;
}

unint64_t sub_100039B64()
{
  unint64_t result = qword_100380D38;
  if (!qword_100380D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380D38);
  }
  return result;
}

uint64_t sub_100039BB8()
{
  return sub_100039968(&qword_100380D40, &qword_100380CF0, (void (*)(void))sub_1000397CC, (void (*)(void))sub_1000398B0);
}

uint64_t sub_100039BF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039C24(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039CE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039DB0(uint64_t result)
{
  *(unsigned char *)(result + 145) = 0;
  return result;
}

uint64_t sub_100039DC4()
{
  return sub_1000393B4();
}

uint64_t sub_100039DE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100039E44(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039E9C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100039EEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100039F34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100039F60()
{
  return sub_100039968(&qword_100380D58, &qword_100380D60, (void (*)(void))sub_10003992C, (void (*)(void))sub_100039BB8);
}

uint64_t destroy for ExplorerAppsListSectionView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for ExplorerAppsListSectionView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ExplorerAppsListSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for QuestionPresentation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ExplorerAppsListSectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerAppsListSectionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerAppsListSectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerAppsListSectionView()
{
  return &type metadata for ExplorerAppsListSectionView;
}

uint64_t sub_10003A23C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003A258@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(sub_10003A414() + 16))
  {
    swift_getKeyPath();
    long long v3 = (_OWORD *)swift_allocObject();
    long long v4 = v1[1];
    v3[1] = *v1;
    v3[2] = v4;
    long long v5 = v1[3];
    v3[3] = v1[2];
    v3[4] = v5;
    sub_10003A978((uint64_t)v1);
    sub_100004010(&qword_100380D80);
    sub_100009B18(&qword_100380D88, &qword_100380D80);
    sub_10003A9D0();
    ForEach<>.init(_:id:content:)();
    uint64_t v6 = sub_100004010(&qword_100380D98);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_100004010(&qword_100380D98);
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

uint64_t sub_10003A414()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  if (v2)
  {
    if (*(void *)(v2 + 64) && (uint64_t v3 = *(void *)(v2 + 80), *(void *)(v3 + 16)))
    {
      Swift::Int v4 = sub_10026554C((uint64_t)&off_10034A100);
      char v5 = sub_10020D19C(v3, v4);
      swift_bridgeObjectRelease();
      char v6 = v5 ^ 1;
    }
    else
    {
      char v6 = 0;
    }
    uint64_t v7 = *(void **)(v0 + 16);
    if (v7)
    {
      uint64_t v9 = v7[6];
      unint64_t v8 = v7[7];
      if (v8)
      {
        swift_bridgeObjectRetain();
        unint64_t v10 = &off_10034A150;
      }
      else
      {
        *(void *)&v33[0] = &off_10034A128;
        sub_10011071C((uint64_t)&off_10034A150);
        unint64_t v10 = &off_10034A128;
      }
      sub_10003A978(v1);
      uint64_t v11 = sub_10003DD3C((uint64_t)v10, v1, v6 & 1);
      sub_10003E058(v1);
      swift_bridgeObjectRelease();
      if (v8)
      {
        sub_100004010(&qword_100380DB8);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1002B3350;
        sub_10003CD50(4, (uint64_t)v33);
        long long v13 = v33[1];
        *(_OWORD *)(v12 + 32) = v33[0];
        *(_OWORD *)(v12 + 48) = v13;
        *(_OWORD *)(v12 + 64) = v33[2];
        *(void *)(v12 + 80) = v34;
        swift_bridgeObjectRetain();
        long long v14 = sub_1001B1C5C(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v16 = v14[2];
        unint64_t v15 = v14[3];
        if (v16 >= v15 >> 1) {
          long long v14 = sub_1001B1C5C((void *)(v15 > 1), v16 + 1, 1, v14);
        }
        _OWORD v14[2] = v16 + 1;
        uint64_t v17 = &v14[5 * v16];
        v17[4] = v9;
        v17[5] = v8;
        v17[7] = 0;
        v17[8] = 0;
        v17[6] = v12;
        unint64_t v18 = sub_100022A00((uint64_t)v11, v9, v8);
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        if (v11[2]) {
          goto LABEL_14;
        }
        goto LABEL_28;
      }
      uint64_t v24 = v7[8];
      if (v24)
      {
        sub_10003A978(v1);
        swift_bridgeObjectRetain();
        uint64_t v25 = swift_bridgeObjectRetain();
        char v26 = sub_10003D9D8(v25, v24, v1, (uint64_t)v11);
        swift_bridgeObjectRelease();
        sub_10003E058(v1);
        swift_bridgeObjectRelease();
        uint64_t v27 = v7[9];
        if (v27)
        {
LABEL_21:
          sub_10003A978(v1);
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_10003DB88((uint64_t)&off_10034A178, v27);
          sub_10003E058(v1);
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      else
      {
        char v26 = _swiftEmptyArrayStorage;
        uint64_t v27 = v7[9];
        if (v27) {
          goto LABEL_21;
        }
      }
      uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_24:
      *(void *)&v33[0] = v26;
      sub_1001105C8((uint64_t)v28);
      if (v26[2])
      {
        sub_100004010(&qword_100380040);
        sub_100009B18((unint64_t *)&qword_100380DB0, &qword_100380040);
        unint64_t v18 = BidirectionalCollection<>.joined(separator:)();
        uint64_t v20 = v29;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v18 = 0;
        uint64_t v20 = 0;
      }
      long long v14 = _swiftEmptyArrayStorage;
      if (v11[2])
      {
LABEL_14:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v14 = sub_1001B1C5C(0, v14[2] + 1, 1, v14);
        }
        unint64_t v22 = v14[2];
        unint64_t v21 = v14[3];
        if (v22 >= v21 >> 1) {
          long long v14 = sub_1001B1C5C((void *)(v21 > 1), v22 + 1, 1, v14);
        }
        _OWORD v14[2] = v22 + 1;
        uint64_t v23 = &v14[5 * v22];
        v23[4] = 0xD000000000000024;
        v23[5] = 0x80000001002C7D60;
        v23[6] = v11;
        v23[7] = v18;
        v23[8] = v20;
        return (uint64_t)v14;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v14;
    }
    type metadata accessor for PartnerModel();
    uint64_t v31 = &qword_100380DA8;
    uint64_t v32 = type metadata accessor for PartnerModel;
  }
  else
  {
    type metadata accessor for StewieModel();
    uint64_t v31 = &qword_100380DA0;
    uint64_t v32 = type metadata accessor for StewieModel;
  }
  sub_10003EADC(v31, (void (*)(uint64_t))v32);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10003A878@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *a3 = v3;
  a3[1] = v4;
  a3[2] = v6;
  a3[3] = v5;
  a3[4] = v7;
  a3[5] = v8;
  a3[6] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003A8E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003A258(a1);
}

uint64_t sub_10003A920()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10003A970@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10003A878(a1, v2 + 16, a2);
}

uint64_t sub_10003A978(uint64_t a1)
{
  return a1;
}

unint64_t sub_10003A9D0()
{
  unint64_t result = qword_100380D90;
  if (!qword_100380D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380D90);
  }
  return result;
}

uint64_t sub_10003AA24(long long *a1)
{
  long long v5 = a1[1];
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v9 = v5;
  swift_getKeyPath();
  long long v7 = *a1;
  sub_10000D544((uint64_t)&v5 + 8, (uint64_t)v8, &qword_100380920);
  uint64_t v2 = swift_allocObject();
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  *(void *)(v2 + 64) = *((void *)a1 + 6);
  swift_bridgeObjectRetain();
  sub_10003E68C((uint64_t)&v9);
  sub_100039BF8((uint64_t)&v7);
  sub_100039BF8((uint64_t)v8);
  swift_retain();
  sub_100004010(&qword_100380DD8);
  sub_100004010(&qword_100380DE0);
  sub_100009B18(&qword_100380DE8, &qword_100380DD8);
  sub_10003E714();
  sub_10003E768();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10003ABA4@<X0>(unsigned __int8 *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v60 = sub_100004010(&qword_100380E00);
  uint64_t v54 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_100380E18);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v59 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100380DE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v61 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *a2;
  long long v10 = a2[1];
  long long v12 = *((_OWORD *)a1 + 1);
  long long v13 = *((_OWORD *)a1 + 2);
  *(_OWORD *)long long v78 = *(_OWORD *)a1;
  *(_OWORD *)&v78[16] = v12;
  long long v79 = v13;
  uint64_t v15 = *((void *)a1 + 5);
  uint64_t v14 = *((void *)a1 + 6);
  uint64_t v80 = v14;
  long long v81 = *(_OWORD *)&v78[8];
  long long v65 = *(_OWORD *)&v78[8];
  uint64_t v52 = *a1;
  uint64_t v53 = *((void *)a1 + 1);
  uint64_t v57 = *((void *)a1 + 2);
  uint64_t v16 = *((void *)a1 + 4);
  unint64_t v56 = *((void *)a1 + 3);
  uint64_t v74 = *((void *)a2 + 4);
  long long v72 = v11;
  long long v73 = v10;
  long long v77 = v11;
  uint64_t v17 = v10;
  uint64_t v76 = v10;
  sub_10000D544((uint64_t)&v73 + 8, (uint64_t)v75, &qword_100380920);
  uint64_t v18 = swift_allocObject();
  long long v19 = a2[1];
  *(_OWORD *)(v18 + 16) = *a2;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = a2[2];
  long long v20 = *(_OWORD *)&v78[16];
  *(_OWORD *)(v18 + 72) = *(_OWORD *)v78;
  *(void *)(v18 + 64) = *((void *)a2 + 6);
  *(_OWORD *)(v18 + 88) = v20;
  *(_OWORD *)(v18 + 104) = v79;
  *(void *)(v18 + 120) = v80;
  uint64_t v64 = *((void *)&v81 + 1);
  uint64_t v21 = v81;
  sub_100039BF8((uint64_t)&v81);
  sub_100039BF8((uint64_t)&v77);
  sub_10003E68C((uint64_t)&v76);
  sub_100039BF8((uint64_t)v75);
  swift_retain();
  sub_10003EA90((uint64_t)v78);
  sub_100033310();
  uint64_t v58 = v6;
  Button<>.init<A>(_:action:)();
  uint64_t v22 = *(void *)(v17 + 16);
  if (v22)
  {
    uint64_t v23 = v57;
    unint64_t v24 = v56;
    uint64_t v25 = (uint64_t *)(v17 + 56 * v22);
    if (v78[0] == *((unsigned __int8 *)v25 - 24)
      && ((uint64_t v26 = *(v25 - 2), v27 = *(v25 - 1), v28 = *v25, v29 = v25[1], v30 = v25[2], v51 = v25[3], v21 == v26)
       && v64 == v27
       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      && (*(void *)&v78[24] == v28 && (void)v79 == v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      BOOL v31 = *((void *)&v79 + 1) == v30;
      uint64_t v32 = v55;
      if (v31 && v80 == v51)
      {
        sub_10003EA90((uint64_t)v78);
        char v33 = 1;
      }
      else
      {
        char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10003EA90((uint64_t)v78);
      }
    }
    else
    {
      sub_10003EA90((uint64_t)v78);
      char v33 = 0;
      uint64_t v32 = v55;
    }
    uint64_t v34 = v54;
    uint64_t v35 = v53;
    char v36 = v52;
  }
  else
  {
    sub_10003EA90((uint64_t)v78);
    sub_10003EA90((uint64_t)v78);
    char v36 = v52;
    uint64_t v37 = v53;
    uint64_t v23 = v57;
    unint64_t v24 = v56;
    sub_10003E9C0(v52, v53, v57);
    sub_10003E9C0(0, 0, 0);
    char v33 = 0;
    uint64_t v34 = v54;
    uint64_t v35 = v37;
    uint64_t v32 = v55;
  }
  LOBYTE(v65) = v36;
  *((void *)&v65 + 1) = v35;
  uint64_t v66 = v23;
  unint64_t v67 = v24;
  uint64_t v68 = v16;
  uint64_t v69 = v15;
  uint64_t v70 = v14;
  char v71 = v33 & 1;
  uint64_t v38 = sub_100009B18(&qword_100380E08, &qword_100380E00);
  unint64_t v39 = sub_10003E888();
  uint64_t v40 = v59;
  uint64_t v41 = v60;
  uint64_t v42 = v58;
  View.buttonStyle<A>(_:)();
  sub_10003E974((uint64_t)v78);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v41);
  long long v65 = v81;
  swift_bridgeObjectRetain();
  uint64_t v43 = Text.init<A>(_:)();
  uint64_t v45 = v44;
  *(void *)&long long v65 = v41;
  *((void *)&v65 + 1) = &type metadata for _ExplorerAppButtonStyle;
  LOBYTE(v41) = v46 & 1;
  uint64_t v66 = v38;
  unint64_t v67 = v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = (uint64_t)v61;
  uint64_t v48 = v63;
  View.accessibility(label:)();
  sub_100033364(v43, v45, v41);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v48);
  return sub_10000D544(v47, v32, &qword_100380DE0);
}

uint64_t sub_10003B234@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 32))
  {
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t result = Text.init<A>(_:)();
    uint64_t v7 = v6 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
    uint64_t v7 = 0;
    uint64_t v5 = 0;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_10003B2B8@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v4 = *((void *)v1 + 5);
  uint64_t v3 = *((void *)v1 + 6);
  long long v10 = *v1;
  long long v11 = v1[1];
  uint64_t v12 = *((void *)v1 + 4);
  long long v15 = v10;
  uint64_t v14 = v11;
  sub_10000D544((uint64_t)&v11 + 8, (uint64_t)v13, &qword_100380920);
  uint64_t v5 = swift_allocObject();
  long long v6 = v1[1];
  *(_OWORD *)(v5 + 16) = *v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 48) = *((void *)v1 + 4);
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 64) = v3;
  uint64_t v7 = swift_allocObject();
  long long v8 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 48) = *((void *)v1 + 4);
  *(void *)(v7 + 56) = v4;
  *(void *)(v7 + 64) = v3;
  *a1 = sub_10003E678;
  a1[1] = (uint64_t (*)())v5;
  a1[2] = (uint64_t (*)())sub_10003E684;
  a1[3] = (uint64_t (*)())v7;
  sub_100039BF8((uint64_t)&v15);
  sub_10003E68C((uint64_t)&v14);
  sub_100039BF8((uint64_t)v13);
  swift_retain();
  sub_100039BF8((uint64_t)&v15);
  sub_10003E68C((uint64_t)&v14);
  sub_100039BF8((uint64_t)v13);
  return swift_retain();
}

Swift::Int sub_10003B3E4@<X0>(Swift::Int result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5)
  {
LABEL_14:
    *a5 = 0;
    a5[1] = 0;
    return result;
  }
  uint64_t v6 = 0;
  Swift::UInt v7 = *(unsigned __int8 *)result;
  uint64_t v8 = a2 + 32;
  while (1)
  {
    uint64_t v9 = (uint64_t *)(v8 + 16 * v6);
    uint64_t v10 = v9[1];
    if (*(void *)(v10 + 16))
    {
      uint64_t v11 = *v9;
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v7);
      uint64_t result = Hasher._finalize()();
      uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v13 = result & ~v12;
      if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13)) {
        break;
      }
    }
LABEL_3:
    if (++v6 == v5) {
      goto LABEL_14;
    }
  }
  uint64_t v14 = *(void *)(v10 + 48);
  if (*(unsigned __int8 *)(v14 + v13) != v7)
  {
    uint64_t v15 = ~v12;
    do
    {
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_3;
      }
    }
    while (*(unsigned __int8 *)(v14 + v13) != v7);
  }
  if (*(void *)(v11 + 16) && *(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10003A978(a3);
    uint64_t v16 = sub_10003D54C(a4, v10);
    sub_10003E058(a3);
    if (v16[2])
    {
      unint64_t v17 = sub_100021400((uint64_t)v16, (char *)v11);
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v17 = 0;
  unint64_t v19 = 0;
LABEL_17:
  *a5 = v17;
  a5[1] = v19;
  return result;
}

uint64_t sub_10003B5AC(char a1)
{
  if (!a1)
  {
    id v3 = [self mainBundle];
    unint64_t v4 = 0xD000000000000044;
    unint64_t v13 = 0x80000001002C8150;
    uint64_t v5 = "Satellite connectivity is provided by Globalstar and its affiliates.";
    goto LABEL_13;
  }
  if (a1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 32);
    if (v2)
    {
      if (*(void *)(v2 + 64) && ((*(_DWORD *)(v2 + 128) | *(_DWORD *)(v2 + 136)) & 0x10) != 0)
      {
        id v3 = [self mainBundle];
        unint64_t v4 = 0xD00000000000003ELL;
        unint64_t v13 = 0x80000001002C8150;
        uint64_t v5 = "iMessage is always end-to-end encrypted and provided by Apple.";
LABEL_13:
        unint64_t v8 = (unint64_t)(v5 - 32) | 0x8000000000000000;
        v9.value._uint64_t countAndFlagsBits = 0x5072656972726143;
        v9.value._object = (void *)0xED00006E6F656769;
        v10._uint64_t countAndFlagsBits = 0;
        v10._object = (void *)0xE000000000000000;
        unint64_t v11 = 0xD000000000000041;
        uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v9, (NSBundle)v3, v10, *(Swift::String *)(&v13 - 1))._countAndFlagsBits;

        return countAndFlagsBits;
      }
      return 0;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 32);
    if (v6)
    {
      if (*(void *)(v6 + 64) && ((*(_DWORD *)(v6 + 128) | *(_DWORD *)(v6 + 136)) & 0x20) != 0)
      {
        id v3 = [self mainBundle];
        unint64_t v4 = 0xD000000000000036;
        unint64_t v13 = 0x80000001002C8150;
        uint64_t v5 = "Support for SMS messaging is provided by your carrier.";
        goto LABEL_13;
      }
      return 0;
    }
  }
  type metadata accessor for StewieModel();
  sub_10003EADC(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10003B7D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v73 = a1;
  uint64_t v3 = sub_100004010(&qword_100380EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380EA8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  Swift::String_optional v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100380EB0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004010(&qword_100380EB8) - 8;
  __chkstk_darwin(v72);
  uint64_t v71 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  uint64_t v15 = sub_100004010(&qword_100380EC0);
  sub_10003BD90(v2, (uint64_t)&v5[*(int *)(v15 + 44)], 7.8);
  uint64_t v16 = self;
  id v17 = [v16 labelColor];
  uint64_t v18 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  v82[0] = v18;
  swift_retain();
  uint64_t v20 = AnyShapeStyle.init<A>(_:)();
  sub_10000D2A0((uint64_t)v5, (uint64_t)v9, &qword_100380EA0);
  swift_release();
  uint64_t v21 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  uint64_t *v21 = KeyPath;
  v21[1] = v20;
  sub_10000950C((uint64_t)v5, &qword_100380EA0);
  LOBYTE(v7) = static Edge.Set.all.getter();
  uint64_t v70 = v13;
  sub_10000D2A0((uint64_t)v9, (uint64_t)v13, &qword_100380EA8);
  uint64_t v22 = &v13[*(int *)(v11 + 44)];
  *uint64_t v22 = v7;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  v22[40] = 1;
  sub_10000950C((uint64_t)v9, &qword_100380EA8);
  uint64_t v23 = &selRef_separatorColor;
  if (*(unsigned char *)(v69 + 56)) {
    uint64_t v23 = &selRef_clearColor;
  }
  id v24 = [v16 *v23];
  uint64_t v25 = Color.init(uiColor:)();
  uint64_t v26 = static Alignment.center.getter();
  sub_100165DE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v82, 0.0, 1, 0.5, 0, v26, v27, v25);
  swift_release();
  uint64_t v69 = v82[0];
  uint64_t v68 = v82[1];
  char v28 = v83;
  uint64_t v67 = v84;
  char v29 = v85;
  uint64_t v66 = v86;
  char v30 = v87;
  uint64_t v65 = v88;
  char v31 = v89;
  uint64_t v64 = v90;
  char v32 = v91;
  uint64_t v63 = v92;
  char v33 = v93;
  uint64_t v62 = v94;
  uint64_t v61 = v95;
  int v60 = static Edge.Set.leading.getter();
  char v80 = v28;
  char v79 = v29;
  char v78 = v30;
  char v77 = v31;
  char v76 = v32;
  char v75 = v33;
  char v74 = 1;
  int v59 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  char v42 = v80;
  char v43 = v79;
  char v44 = v78;
  char v45 = v77;
  char v46 = v76;
  char v47 = v75;
  LOBYTE(v25) = v74;
  char v81 = 0;
  uint64_t v58 = static Alignment.bottom.getter();
  uint64_t v57 = v48;
  char v49 = v81;
  uint64_t v50 = (uint64_t)v70;
  uint64_t v51 = v71;
  sub_10000D2A0((uint64_t)v70, v71, &qword_100380EB0);
  uint64_t v52 = v51 + *(int *)(v72 + 44);
  uint64_t v53 = v68;
  *(void *)uint64_t v52 = v69;
  *(void *)(v52 + 8) = v53;
  *(unsigned char *)(v52 + 16) = v42;
  *(void *)(v52 + 24) = v67;
  *(unsigned char *)(v52 + 32) = v43;
  *(void *)(v52 + 40) = v66;
  *(unsigned char *)(v52 + 48) = v44;
  *(void *)(v52 + 56) = v65;
  *(unsigned char *)(v52 + 64) = v45;
  *(void *)(v52 + 72) = v64;
  *(unsigned char *)(v52 + 80) = v46;
  *(void *)(v52 + 88) = v63;
  *(unsigned char *)(v52 + 96) = v47;
  uint64_t v54 = v61;
  *(void *)(v52 + 104) = v62;
  *(void *)(v52 + 112) = v54;
  *(unsigned char *)(v52 + 120) = v60;
  *(_OWORD *)(v52 + 128) = 0u;
  *(_OWORD *)(v52 + 144) = 0u;
  *(unsigned char *)(v52 + 160) = v25;
  *(unsigned char *)(v52 + 168) = v59;
  *(void *)(v52 + 176) = v35;
  *(void *)(v52 + 184) = v37;
  *(void *)(v52 + 192) = v39;
  *(void *)(v52 + 200) = v41;
  *(unsigned char *)(v52 + 208) = v49;
  uint64_t v55 = v57;
  *(void *)(v52 + 216) = v58;
  *(void *)(v52 + 224) = v55;
  sub_10000950C(v50, &qword_100380EB0);
  return sub_10000D544(v51, v73, &qword_100380EB8);
}

uint64_t sub_10003BD90@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>, double a3@<D1>)
{
  uint64_t v70 = a2;
  uint64_t v72 = sub_100004010(&qword_100380EC8);
  __chkstk_darwin(v72);
  uint64_t v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004010(&qword_100380ED0);
  __chkstk_darwin(v67);
  uint64_t v68 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_100380ED8);
  __chkstk_darwin(v63);
  uint64_t v64 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v8);
  uint64_t v10 = (double *)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Image.ResizingMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004010(&qword_100380EE0);
  uint64_t v15 = __chkstk_darwin(v66);
  id v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v60 - v18;
  uint64_t v20 = sub_100004010(&qword_100380EE8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v69 = (uint64_t)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v24 = (char *)&v60 - v23;
  uint64_t v73 = (uint64_t)a1;
  id v25 = sub_10003F294(*a1);
  uint64_t v71 = v24;
  if (v25)
  {
    uint64_t v26 = v25;
    [objc_allocWithZone((Class)UIImage) initWithCGImage:v25];
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v11);
    uint64_t v27 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v74 = v27;
    uint64_t v75 = 0;
    __int16 v76 = 1;
    uint64_t v77 = v82;
    LOBYTE(v78) = v83;
    uint64_t v79 = v84;
    char v80 = v85;
    long long v81 = v86;
    sub_100004010(&qword_100380F00);
    sub_10003F7D8(&qword_100380EF8, &qword_100380F00, (void (*)(void))sub_10003F5C0);
    uint64_t v28 = (uint64_t)v65;
    View.accessibilityHidden(_:)();
    swift_release();
    sub_10000D2A0(v28, v68, &qword_100380EC8);
    swift_storeEnumTagMultiPayload();
    sub_10003F4E8();
    sub_10003F634();
    _ConditionalContent<>.init(storage:)();

    sub_10000950C(v28, &qword_100380EC8);
    uint64_t v29 = (uint64_t)v24;
  }
  else
  {
    uint64_t v65 = v19;
    uint64_t v30 = v11;
    char v31 = v10;
    uint64_t v32 = v30;
    Image.init(decorative:bundle:)();
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v32);
    uint64_t v33 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v34 = v82;
    char v35 = v83;
    uint64_t v36 = v84;
    int v62 = v85;
    uint64_t v60 = *((void *)&v86 + 1);
    uint64_t v61 = v86;
    uint64_t v37 = (char *)v31 + *(int *)(v8 + 20);
    uint64_t v38 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v39 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v37, v38, v39);
    *char v31 = a3;
    v31[1] = a3;
    uint64_t v40 = v64;
    sub_100034580((uint64_t)v31, v64);
    *(_WORD *)(v40 + *(int *)(v63 + 36)) = 256;
    sub_10000D2A0(v40, (uint64_t)&v17[*(int *)(v66 + 36)], &qword_100380ED8);
    *(void *)id v17 = v33;
    *((void *)v17 + 1) = 0;
    *((_WORD *)v17 + 8) = 1;
    *((void *)v17 + 3) = v34;
    v17[32] = v35;
    *((void *)v17 + 5) = v36;
    v17[48] = v62;
    uint64_t v41 = v60;
    *((void *)v17 + 7) = v61;
    *((void *)v17 + 8) = v41;
    swift_retain();
    sub_10000950C(v40, &qword_100380ED8);
    sub_1000345E4((uint64_t)v31);
    swift_release();
    uint64_t v42 = (uint64_t)v65;
    sub_10000D544((uint64_t)v17, (uint64_t)v65, &qword_100380EE0);
    sub_10000D2A0(v42, v68, &qword_100380EE0);
    swift_storeEnumTagMultiPayload();
    sub_10003F4E8();
    sub_10003F634();
    uint64_t v29 = (uint64_t)v71;
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v42, &qword_100380EE0);
  }
  uint64_t v68 = static HorizontalAlignment.leading.getter();
  sub_10003C798((uint64_t)&v74);
  uint64_t v67 = v74;
  uint64_t v73 = v75;
  LODWORD(v72) = v76;
  uint64_t v44 = v77;
  uint64_t v43 = v78;
  uint64_t v45 = v79;
  char v46 = v80;
  uint64_t v47 = v81;
  uint64_t v66 = Image.init(_internalSystemName:)();
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  uint64_t v48 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v65) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v50 = v69;
  sub_10000D2A0(v29, v69, &qword_100380EE8);
  uint64_t v51 = v70;
  sub_10000D2A0(v50, v70, &qword_100380EE8);
  uint64_t v52 = (int *)sub_100004010(&qword_100380F28);
  uint64_t v53 = v51 + v52[12];
  *(void *)uint64_t v53 = v68;
  *(void *)(v53 + 8) = 0;
  *(unsigned char *)(v53 + 16) = 1;
  uint64_t v54 = v67;
  uint64_t v55 = v73;
  *(void *)(v53 + 24) = v67;
  *(void *)(v53 + 32) = v55;
  char v56 = v72;
  *(unsigned char *)(v53 + 40) = v72;
  *(void *)(v53 + 48) = v44;
  *(void *)(v53 + 56) = v43;
  *(void *)(v53 + 64) = v45;
  *(unsigned char *)(v53 + 72) = v46;
  *(void *)(v53 + 80) = v47;
  uint64_t v57 = v51 + v52[16];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  uint64_t v58 = v51 + v52[20];
  *(void *)uint64_t v58 = v66;
  *(void *)(v58 + 8) = KeyPath;
  *(void *)(v58 + 16) = v48;
  *(_DWORD *)(v58 + 24) = v65;
  sub_100033724(v54, v55, v56);
  swift_bridgeObjectRetain();
  sub_100033724(v43, v45, v46);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000950C((uint64_t)v71, &qword_100380EE8);
  swift_release();
  swift_release();
  swift_release();
  sub_100033364(v54, v73, v72);
  swift_bridgeObjectRelease();
  sub_100033364(v43, v45, v46);
  swift_bridgeObjectRelease();
  return sub_10000950C(v50, &qword_100380EE8);
}

uint64_t sub_10003C798@<X0>(uint64_t a1@<X8>)
{
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.callout.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_100033364(v2, v4, v6);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.primary.getter();
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v35 = v14;
  char v32 = v15 & 1;
  sub_100033364(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  LOBYTE(v9) = v19 & 1;
  static Font.footnote.getter();
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_100033364(v16, v18, v9);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v25 = Text.foregroundStyle<A>(_:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v7) = v30 & 1;
  sub_100033364(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v33;
  *(unsigned char *)(a1 + 16) = v32;
  *(void *)(a1 + 24) = v35;
  *(void *)(a1 + 32) = v25;
  *(void *)(a1 + 40) = v27;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v29;
  sub_100033724(v34, v33, v32);
  swift_bridgeObjectRetain();
  sub_100033724(v25, v27, v7);
  swift_bridgeObjectRetain();
  sub_100033364(v25, v27, v7);
  swift_bridgeObjectRelease();
  sub_100033364(v34, v33, v32);
  return swift_bridgeObjectRelease();
}

id sub_10003CA30()
{
  id result = [objc_allocWithZone((Class)IFColor) initWithSystemColor:13];
  qword_100380D68 = (uint64_t)result;
  return result;
}

id sub_10003CA68()
{
  id result = [objc_allocWithZone((Class)IFColor) initWithSystemColor:0];
  qword_100380D70 = (uint64_t)result;
  return result;
}

id sub_10003CAA0()
{
  id result = [objc_allocWithZone((Class)IFColor) initWithSystemColor:11];
  qword_100380D78 = (uint64_t)result;
  return result;
}

uint64_t sub_10003CAD8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B7D0(a1);
}

double sub_10003CB1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a1;
  uint64_t v5 = type metadata accessor for OpacityTransition();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v22 - v10;
  char v12 = *(unsigned char *)v2;
  long long v13 = *(_OWORD *)(v2 + 8);
  long long v22 = *(_OWORD *)(v2 + 24);
  long long v23 = v13;
  uint64_t v14 = *(void *)(v2 + 40);
  uint64_t v15 = *(void *)(v2 + 48);
  char v16 = *(unsigned char *)(v2 + 56);
  sub_10003EA90(v3);
  OpacityTransition.init()();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  sub_10003EADC(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v17 = AnyTransition.init<A>(_:)();
  char v25 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  char v18 = v25;
  if (ButtonStyleConfiguration.isPressed.getter()) {
    float v19 = 0.3;
  }
  else {
    float v19 = 0.0;
  }
  char v20 = static Edge.Set.all.getter();
  *(unsigned char *)a2 = v12;
  *(_OWORD *)(a2 + 8) = v23;
  double result = *(double *)&v22;
  *(_OWORD *)(a2 + 24) = v22;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v15;
  *(unsigned char *)(a2 + 56) = v18;
  *(void *)(a2 + 64) = v17;
  *(unsigned char *)(a2 + 72) = 0;
  *(float *)(a2 + 76) = v19;
  *(unsigned char *)(a2 + 80) = v20;
  return result;
}

double sub_10003CD0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003CB1C(a1, a2);
}

void sub_10003CD50(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      long long v22 = self;
      id v23 = [v22 mainBundle];
      unint64_t v6 = 0xD000000000000048;
      v77._object = (void *)0x80000001002C7F90;
      v24._uint64_t countAndFlagsBits = 0xD000000000000013;
      v24._object = (void *)0x80000001002C7F70;
      v25.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v25.value._object = (void *)0xED00006E6F656769;
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      v77._uint64_t countAndFlagsBits = 0xD000000000000048;
      Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v77);
      object = v27._object;

      id v28 = [v22 mainBundle];
      v29._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v78._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v78._object = (void *)0x80000001002C8000;
      v29._object = (void *)0x80000001002C7FE0;
      v30.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v30.value._object = (void *)0xED00006E6F656769;
      v31._uint64_t countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v78);
      uint64_t countAndFlagsBits = v32._countAndFlagsBits;
      char v18 = v32._object;

      float v19 = (objc_class *)[v22 mainBundle];
      unint64_t v73 = 0x80000001002C7F90;
      unint64_t v20 = 0xD000000000000013;
      unint64_t v21 = 0x80000001002C7F70;
      uint64_t v11 = v27._countAndFlagsBits;
      goto LABEL_5;
    case 2:
      uint64_t v33 = self;
      id v34 = [v33 mainBundle];
      unint64_t v6 = 0xD00000000000003CLL;
      v79._object = (void *)0x80000001002C7D90;
      v35._uint64_t countAndFlagsBits = 0x794D20646E6946;
      v35._object = (void *)0xE700000000000000;
      v36.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v36.value._object = (void *)0xED00006E6F656769;
      v37._uint64_t countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      v79._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v79);
      uint64_t v11 = v38._countAndFlagsBits;
      object = v38._object;

      id v39 = [v33 mainBundle];
      v40._uint64_t countAndFlagsBits = 0xD000000000000016;
      v80._uint64_t countAndFlagsBits = 0xD000000000000042;
      v80._object = (void *)0x80000001002C7DF0;
      v40._object = (void *)0x80000001002C7DD0;
      v41.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v41.value._object = (void *)0xED00006E6F656769;
      v42._uint64_t countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v80);
      uint64_t countAndFlagsBits = v43._countAndFlagsBits;
      char v18 = v43._object;

      float v19 = (objc_class *)[v33 mainBundle];
      unint64_t v73 = 0x80000001002C7D90;
      unint64_t v20 = 0x794D20646E6946;
      unint64_t v21 = 0xE700000000000000;
      goto LABEL_5;
    case 3:
      uint64_t v50 = self;
      id v51 = [v50 mainBundle];
      v81._object = (void *)0x80000001002C7E40;
      v52._uint64_t countAndFlagsBits = 0x736567617373654DLL;
      v52._object = (void *)0xE800000000000000;
      v53.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v53.value._object = (void *)0xED00006E6F656769;
      v54._uint64_t countAndFlagsBits = 0;
      v54._object = (void *)0xE000000000000000;
      v81._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
      Swift::String v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v81);
      uint64_t v11 = v55._countAndFlagsBits;
      object = v55._object;

      id v56 = [v50 mainBundle];
      v57._uint64_t countAndFlagsBits = 0xD000000000000019;
      v82._uint64_t countAndFlagsBits = 0xD000000000000043;
      v82._object = (void *)0x80000001002C7EA0;
      v57._object = (void *)0x80000001002C7E80;
      v58.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v58.value._object = (void *)0xED00006E6F656769;
      v59._uint64_t countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v82);
      uint64_t countAndFlagsBits = v60._countAndFlagsBits;
      char v18 = v60._object;

      float v19 = (objc_class *)[v50 mainBundle];
      unint64_t v73 = 0x80000001002C7E40;
      unint64_t v20 = 0x736567617373654DLL;
      unint64_t v21 = 0xE800000000000000;
      uint64_t v44 = 0x5072656972726143;
      unint64_t v45 = 0xED00006E6F656769;
      v46.super.isa = v19;
      uint64_t v47 = 0;
      unint64_t v48 = 0xE000000000000000;
      unint64_t v49 = 0xD00000000000003DLL;
      goto LABEL_8;
    case 4:
      uint64_t v61 = self;
      id v62 = [v61 mainBundle];
      v83._object = (void *)0x80000001002C7E40;
      v63._uint64_t countAndFlagsBits = 0x736567617373654DLL;
      v63._object = (void *)0xE800000000000000;
      v64.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v64.value._object = (void *)0xED00006E6F656769;
      v65._uint64_t countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v83._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
      Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v83);
      uint64_t v11 = v66._countAndFlagsBits;
      object = v66._object;

      id v67 = [v61 mainBundle];
      v68._uint64_t countAndFlagsBits = 0xD000000000000019;
      v84._uint64_t countAndFlagsBits = 0xD000000000000043;
      v84._object = (void *)0x80000001002C7EA0;
      v68._object = (void *)0x80000001002C7E80;
      v69.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v69.value._object = (void *)0xED00006E6F656769;
      v70._uint64_t countAndFlagsBits = 0;
      v70._object = (void *)0xE000000000000000;
      Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, v69, (NSBundle)v67, v70, v84);
      uint64_t countAndFlagsBits = v71._countAndFlagsBits;
      char v18 = v71._object;

      float v19 = (objc_class *)[v61 mainBundle];
      unint64_t v20 = 0xD00000000000001CLL;
      unint64_t v49 = 0xD000000000000052;
      unint64_t v73 = 0x80000001002C7F10;
      unint64_t v21 = 0x80000001002C7EF0;
      uint64_t v44 = 0x5072656972726143;
      unint64_t v45 = 0xED00006E6F656769;
      v46.super.isa = v19;
      uint64_t v47 = 0;
      unint64_t v48 = 0xE000000000000000;
      goto LABEL_8;
    default:
      uint64_t v4 = self;
      id v5 = [v4 mainBundle];
      unint64_t v6 = 0xD000000000000042;
      v75._object = (void *)0x80000001002C8050;
      v7._uint64_t countAndFlagsBits = 0x636E656772656D45;
      v7._object = (void *)0xED0000534F532079;
      v8.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v8.value._object = (void *)0xED00006E6F656769;
      v9._uint64_t countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v75._uint64_t countAndFlagsBits = 0xD000000000000042;
      Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v5, v9, v75);
      uint64_t v11 = v10._countAndFlagsBits;
      object = v10._object;

      id v12 = [v4 mainBundle];
      v13._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v76._uint64_t countAndFlagsBits = 0xD000000000000048;
      v76._object = (void *)0x80000001002C80C0;
      v13._object = (void *)0x80000001002C80A0;
      v14.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v14.value._object = (void *)0xED00006E6F656769;
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v76);
      uint64_t countAndFlagsBits = v16._countAndFlagsBits;
      char v18 = v16._object;

      float v19 = (objc_class *)[v4 mainBundle];
      unint64_t v73 = 0x80000001002C8050;
      unint64_t v20 = 0x636E656772656D45;
      unint64_t v21 = 0xED0000534F532079;
LABEL_5:
      uint64_t v44 = 0x5072656972726143;
      unint64_t v45 = 0xED00006E6F656769;
      v46.super.isa = v19;
      uint64_t v47 = 0;
      unint64_t v48 = 0xE000000000000000;
      unint64_t v49 = v6;
LABEL_8:
      Swift::String v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, *(Swift::String_optional *)&v44, v46, *(Swift::String *)&v47, *(Swift::String *)(&v73 - 1));

      *(unsigned char *)a2 = a1;
      *(void *)(a2 + 8) = v11;
      *(void *)(a2 + 16) = object;
      *(void *)(a2 + 24) = countAndFlagsBits;
      *(void *)(a2 + 32) = v18;
      *(Swift::String *)(a2 + 40) = v72;
      return;
  }
}

void *sub_10003D54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v43 = a1 + 32;
    uint64_t v4 = a2 + 56;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    Swift::String v42 = _swiftEmptyArrayStorage;
    uint64_t v41 = v2;
    while (1)
    {
      Swift::String v7 = (void *)(v43 + 56 * v5);
      Swift::UInt v8 = *(unsigned __int8 *)v7;
      object = (void *)v7[2];
      uint64_t countAndFlagsBits = v7[1];
      Swift::String v10 = (void *)v7[4];
      uint64_t v11 = (void *)v7[6];
      uint64_t v44 = v7[5];
      uint64_t v45 = v7[3];
      if (v8 == 3)
      {
        if (!*(void *)(a2 + 16)) {
          goto LABEL_4;
        }
        Hasher.init(_seed:)();
        Hasher._combine(_:)(4uLL);
        Swift::Int v12 = Hasher._finalize()();
        uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v14 = v12 & ~v13;
        if ((*(void *)(v4 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
        {
          uint64_t v15 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v15 + v14) == 4)
          {
LABEL_12:
            uint64_t v17 = self;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v18 = [v17 mainBundle];
            v47._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
            v47._object = (void *)0x80000001002C7E40;
            v19._uint64_t countAndFlagsBits = 0x736567617373654DLL;
            v19._object = (void *)0xE800000000000000;
            v20.value._uint64_t countAndFlagsBits = 0x5072656972726143;
            v20.value._object = (void *)0xED00006E6F656769;
            v21._uint64_t countAndFlagsBits = 0;
            v21._object = (void *)0xE000000000000000;
            Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v47);
            uint64_t countAndFlagsBits = v22._countAndFlagsBits;

            id v23 = [v17 mainBundle];
            v48._uint64_t countAndFlagsBits = 0xD000000000000043;
            v24._object = (void *)0x80000001002C7E80;
            v48._object = (void *)0x80000001002C7EA0;
            v24._uint64_t countAndFlagsBits = 0xD000000000000019;
            v25.value._uint64_t countAndFlagsBits = 0x5072656972726143;
            v25.value._object = (void *)0xED00006E6F656769;
            v26._uint64_t countAndFlagsBits = 0;
            v26._object = (void *)0xE000000000000000;
            Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v48);
            uint64_t v45 = v27._countAndFlagsBits;

            Swift::UInt v8 = (Swift::UInt)[v17 mainBundle];
            v28._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
            v49._uint64_t countAndFlagsBits = 0xD000000000000052;
            v28._object = (void *)0x80000001002C7EF0;
            v49._object = (void *)0x80000001002C7F10;
            v29.value._uint64_t countAndFlagsBits = 0x5072656972726143;
            v29.value._object = (void *)0xED00006E6F656769;
            v30._uint64_t countAndFlagsBits = 0;
            v30._object = (void *)0xE000000000000000;
            Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v8, v30, v49);
            uint64_t v44 = v31._countAndFlagsBits;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            LOBYTE(v8) = 4;
            object = v22._object;
            Swift::String v10 = v27._object;
            uint64_t v11 = v31._object;
LABEL_20:
            if (swift_isUniquelyReferenced_nonNull_native()) {
              Swift::String v37 = v42;
            }
            else {
              Swift::String v37 = sub_1001B1D80(0, v42[2] + 1, 1, v42);
            }
            unint64_t v39 = v37[2];
            unint64_t v38 = v37[3];
            if (v39 >= v38 >> 1) {
              Swift::String v37 = sub_1001B1D80((void *)(v38 > 1), v39 + 1, 1, v37);
            }
            v37[2] = v39 + 1;
            Swift::String v42 = v37;
            unint64_t v6 = &v37[7 * v39];
            *((unsigned char *)v6 + 32) = v8;
            v6[5] = countAndFlagsBits;
            v6[6] = object;
            uint64_t v6[7] = v45;
            v6[8] = v10;
            v6[9] = v44;
            v6[10] = v11;
            uint64_t v2 = v41;
            goto LABEL_4;
          }
          uint64_t v16 = ~v13;
          while (1)
          {
            unint64_t v14 = (v14 + 1) & v16;
            if (((*(void *)(v4 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v15 + v14) == 4) {
              goto LABEL_12;
            }
          }
        }
      }
      if (*(void *)(a2 + 16))
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v8);
        Swift::Int v32 = Hasher._finalize()();
        uint64_t v33 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v34 = v32 & ~v33;
        if ((*(void *)(v4 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
        {
          uint64_t v35 = *(void *)(a2 + 48);
          if (*(unsigned __int8 *)(v35 + v34) != v8)
          {
            uint64_t v36 = ~v33;
            do
            {
              unint64_t v34 = (v34 + 1) & v36;
              if (((*(void *)(v4 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
                goto LABEL_4;
              }
            }
            while (*(unsigned __int8 *)(v35 + v34) != v8);
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_20;
        }
      }
LABEL_4:
      if (++v5 == v2)
      {
        swift_bridgeObjectRelease();
        return v42;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10003D9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  Swift::String v7 = (void *)(swift_bridgeObjectRetain() + 80);
  Swift::UInt v8 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v10 = *(v7 - 1);
    uint64_t v11 = *v7;
    uint64_t v12 = *(v7 - 3);
    uint64_t v13 = *(v7 - 2);
    uint64_t v14 = *(v7 - 5);
    uint64_t v15 = *(v7 - 4);
    v24[0] = *((unsigned char *)v7 - 48);
    uint64_t v25 = v14;
    uint64_t v26 = v15;
    uint64_t v27 = v12;
    uint64_t v28 = v13;
    uint64_t v29 = v10;
    uint64_t v30 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10003B3E4((Swift::Int)v24, a2, a3, v31, &v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v23;
    if (v23)
    {
      unint64_t v17 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::UInt v8 = sub_1001B1A30(0, v8[2] + 1, 1, v8);
      }
      unint64_t v19 = v8[2];
      unint64_t v18 = v8[3];
      if (v19 >= v18 >> 1) {
        Swift::UInt v8 = sub_1001B1A30((void *)(v18 > 1), v19 + 1, 1, v8);
      }
      _OWORD v8[2] = v19 + 1;
      Swift::String v9 = &v8[2 * v19];
      _OWORD v9[4] = v17;
      _OWORD v9[5] = v16;
    }
    v7 += 7;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10003DB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 56;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  Swift::String v7 = _swiftEmptyArrayStorage;
  uint64_t v22 = v4;
  do
  {
    if (*(void *)(a2 + 16))
    {
      Swift::UInt v9 = *(unsigned __int8 *)(v4 + v6);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v9);
      Swift::Int v10 = Hasher._finalize()();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = *(void *)(a2 + 48);
        if (*(unsigned __int8 *)(v13 + v12) == v9)
        {
LABEL_11:
          uint64_t v15 = sub_10003B5AC(v9);
          if (v16)
          {
            uint64_t v17 = v15;
            uint64_t v18 = v16;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              Swift::String v7 = sub_1001B1A30(0, v7[2] + 1, 1, v7);
            }
            unint64_t v20 = v7[2];
            unint64_t v19 = v7[3];
            if (v20 >= v19 >> 1) {
              Swift::String v7 = sub_1001B1A30((void *)(v19 > 1), v20 + 1, 1, v7);
            }
            uint64_t v7[2] = v20 + 1;
            Swift::UInt v8 = &v7[2 * v20];
            v8[4] = v17;
            v8[5] = v18;
            uint64_t v4 = v22;
          }
        }
        else
        {
          uint64_t v14 = ~v11;
          while (1)
          {
            unint64_t v12 = (v12 + 1) & v14;
            if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v13 + v12) == v9) {
              goto LABEL_11;
            }
          }
        }
      }
    }
    ++v6;
  }
  while (v6 != v2);
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_10003DD3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  Swift::UInt v8 = _swiftEmptyArrayStorage;
  do
  {
    Swift::UInt v13 = *(unsigned __int8 *)(v6 + v7);
    uint64_t v14 = *(void **)(a2 + 32);
    if (a3)
    {
      if (!v14) {
        goto LABEL_34;
      }
      if (v14[8])
      {
        uint64_t v15 = v14[10];
        if (*(void *)(v15 + 16))
        {
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v13);
          Swift::Int v16 = Hasher._finalize()();
          uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v18 = v16 & ~v17;
          if ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
          {
            uint64_t v19 = *(void *)(v15 + 48);
            if (*(unsigned __int8 *)(v19 + v18) == v13) {
              goto LABEL_23;
            }
            uint64_t v20 = ~v17;
            while (1)
            {
              unint64_t v18 = (v18 + 1) & v20;
              if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v19 + v18) == v13) {
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
    else
    {
      if (!v14)
      {
LABEL_34:
        type metadata accessor for StewieModel();
        sub_10003EADC(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
        EnvironmentObject.error()();
        __break(1u);
        JUMPOUT(0x10003E044);
      }
      if (v14[8])
      {
        uint64_t v21 = v14[13];
        if (*(void *)(v21 + 16))
        {
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v13);
          Swift::Int v22 = Hasher._finalize()();
          uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
          unint64_t v24 = v22 & ~v23;
          if ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
          {
            uint64_t v25 = *(void *)(v21 + 48);
            if (*(unsigned __int8 *)(v25 + v24) == v13)
            {
LABEL_23:
              switch((int)v13)
              {
                case 1:
                  LOBYTE(v13) = 1;
                  goto LABEL_27;
                case 2:
                  LOBYTE(v13) = 3;
                  goto LABEL_27;
                case 3:
                  goto LABEL_4;
                case 4:
                  LOBYTE(v13) = 2;
                  goto LABEL_27;
                default:
LABEL_27:
                  sub_10003CD50(v13, (uint64_t)v30);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    Swift::UInt v8 = sub_1001B1D80(0, v8[2] + 1, 1, v8);
                  }
                  unint64_t v28 = v8[2];
                  unint64_t v27 = v8[3];
                  if (v28 >= v27 >> 1) {
                    Swift::UInt v8 = sub_1001B1D80((void *)(v27 > 1), v28 + 1, 1, v8);
                  }
                  _OWORD v8[2] = v28 + 1;
                  Swift::UInt v9 = &v8[7 * v28];
                  long long v10 = v30[0];
                  long long v11 = v30[1];
                  long long v12 = v30[2];
                  v9[10] = v31;
                  *((_OWORD *)v9 + 3) = v11;
                  *((_OWORD *)v9 + 4) = v12;
                  *((_OWORD *)v9 + 2) = v10;
                  break;
              }
              goto LABEL_4;
            }
            uint64_t v26 = ~v23;
            while (1)
            {
              unint64_t v24 = (v24 + 1) & v26;
              if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v25 + v24) == v13) {
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
LABEL_4:
    ++v7;
  }
  while (v7 != v3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10003E058(uint64_t a1)
{
  return a1;
}

uint64_t destroy for _ExplorerAppsListSectionView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for _ExplorerAppsListSectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for _ExplorerAppsListSectionView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TransitionAlertModel.Alert(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _ExplorerAppsListSectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitionAlertModel.Alert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitionAlertModel.Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ExplorerAppsListSectionView()
{
  return &type metadata for _ExplorerAppsListSectionView;
}

uint64_t destroy for ExplorerAppsListSectionView.SectionDescription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExplorerAppsListSectionView.SectionDescription(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExplorerAppsListSectionView.SectionDescription(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplorerAppsListSectionView.SectionDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerAppsListSectionView.SectionDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerAppsListSectionView.SectionDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerAppsListSectionView.SectionDescription()
{
  return &type metadata for ExplorerAppsListSectionView.SectionDescription;
}

uint64_t sub_10003E560()
{
  return sub_10003E5EC(&qword_100380DC0, &qword_100380DC8, (void (*)(void))sub_10003E5B0);
}

uint64_t sub_10003E5B0()
{
  return sub_10003E5EC(&qword_100380DD0, &qword_100380D98, (void (*)(void))sub_10003A9D0);
}

uint64_t sub_10003E5EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003E658()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003E678()
{
  return sub_10003AA24((long long *)(v0 + 16));
}

uint64_t sub_10003E684@<X0>(uint64_t *a1@<X8>)
{
  return sub_10003B234(v1 + 16, a1);
}

uint64_t sub_10003E68C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003E6BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10003E70C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003ABA4(a1, (long long *)(v2 + 16), a2);
}

unint64_t sub_10003E714()
{
  unint64_t result = qword_100380DF0;
  if (!qword_100380DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380DF0);
  }
  return result;
}

unint64_t sub_10003E768()
{
  unint64_t result = qword_100380DF8;
  if (!qword_100380DF8)
  {
    sub_1000094C4(&qword_100380DE0);
    sub_1000094C4(&qword_100380E00);
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    sub_10003E888();
    swift_getOpaqueTypeConformance2();
    sub_10003EADC(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380DF8);
  }
  return result;
}

unint64_t sub_10003E888()
{
  unint64_t result = qword_100380E10;
  if (!qword_100380E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380E10);
  }
  return result;
}

uint64_t sub_10003E8DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10003E944()
{
  return (*(uint64_t (**)(void))(v0 + 56))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_10003E974(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003E9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for _ExplorerAppButtonStyle()
{
  return &type metadata for _ExplorerAppButtonStyle;
}

uint64_t sub_10003EA38()
{
  return sub_100009B18(&qword_100380E20, &qword_100380E28);
}

uint64_t sub_10003EA74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003EA90(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003EADC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for StewieAppDescription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s8SOSBuddy23_ExplorerAppButtonStyleVwcp_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SOSBuddy23_ExplorerAppButtonStyleVwca_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s8SOSBuddy23_ExplorerAppButtonStyleVwta_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s8SOSBuddy23_ExplorerAppButtonStyleVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10003ED20(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ExplorerAppButtonLabelView()
{
  return &type metadata for _ExplorerAppButtonLabelView;
}

unint64_t sub_10003ED84()
{
  unint64_t result = qword_100380E38;
  if (!qword_100380E38)
  {
    sub_1000094C4(&qword_100380E40);
    sub_10003EE24();
    sub_100009B18(&qword_100380E90, &qword_100380E98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380E38);
  }
  return result;
}

unint64_t sub_10003EE24()
{
  unint64_t result = qword_100380E48;
  if (!qword_100380E48)
  {
    sub_1000094C4(&qword_100380E50);
    sub_10003EEC4();
    sub_100009B18(&qword_100380E80, &qword_100380E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380E48);
  }
  return result;
}

unint64_t sub_10003EEC4()
{
  unint64_t result = qword_100380E58;
  if (!qword_100380E58)
  {
    sub_1000094C4(&qword_100380E60);
    sub_10003EF64();
    sub_100009B18(&qword_100380E70, &qword_100380E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380E58);
  }
  return result;
}

unint64_t sub_10003EF64()
{
  unint64_t result = qword_100380E68;
  if (!qword_100380E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380E68);
  }
  return result;
}

uint64_t sub_10003EFB8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_10003EFDC(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_100004010(&qword_100380420);
  __chkstk_darwin(v6 - 8);
  Swift::UInt v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::UInt v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    Swift::UInt v13 = v14;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  id v15 = [objc_allocWithZone((Class)IFSymbol) initWithSymbolName:v11 bundleURL:v13];

  id v16 = [objc_allocWithZone((Class)IFGraphicSymbolDescriptor) init];
  [v16 setSize:32.0, 32.0];
  sub_100110BDC(a3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setSymbolColors:isa];

  sub_100110BDC(a4);
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setEnclosureColors:v18];

  [v16 setRenderingMode:1];
  [v16 setShape:1];
  [v16 setAppearance:0];
  id v19 = [v15 imageForGraphicSymbolDescriptor:v16];
  id v20 = [v19 CGImage];

  return v20;
}

id sub_10003F294(unsigned __int8 a1)
{
  if (a1 - 2 < 3) {
    return 0;
  }
  if (a1)
  {
    sub_100004010(&qword_1003913B0);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002B3AF0;
    if (qword_10037DCC0 != -1) {
      swift_once();
    }
    NSString v11 = (void *)qword_100380D78;
    *(void *)(inited + 32) = qword_100380D78;
    specialized Array._endMutation()();
    unint64_t v4 = swift_initStackObject();
    *(_OWORD *)(v4 + 16) = xmmword_1002B3AF0;
    uint64_t v12 = qword_10037DCB0;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = (void *)qword_100380D68;
    *(void *)(v4 + 32) = qword_100380D68;
    specialized Array._endMutation()();
    id v15 = v14;
    uint64_t v10 = 0x80000001002C8270;
    uint64_t v9 = 0xD000000000000019;
  }
  else
  {
    sub_100004010(&qword_1003913B0);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002B3AF0;
    if (qword_10037DCC0 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_100380D78;
    *(void *)(inited + 32) = qword_100380D78;
    specialized Array._endMutation()();
    unint64_t v4 = swift_initStackObject();
    *(_OWORD *)(v4 + 16) = xmmword_1002B3AF0;
    uint64_t v5 = qword_10037DCB8;
    id v6 = v3;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_100380D70;
    *(void *)(v4 + 32) = qword_100380D70;
    specialized Array._endMutation()();
    id v8 = v7;
    uint64_t v9 = 7565171;
    uint64_t v10 = 0xE300000000000000;
  }
  id v1 = sub_10003EFDC(v9, v10, inited, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_10003F4E8()
{
  unint64_t result = qword_100380EF0;
  if (!qword_100380EF0)
  {
    sub_1000094C4(&qword_100380EC8);
    sub_10003F7D8(&qword_100380EF8, &qword_100380F00, (void (*)(void))sub_10003F5C0);
    sub_10003EADC(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380EF0);
  }
  return result;
}

unint64_t sub_10003F5C0()
{
  unint64_t result = qword_100380F08;
  if (!qword_100380F08)
  {
    sub_1000094C4(&qword_100380F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380F08);
  }
  return result;
}

unint64_t sub_10003F634()
{
  unint64_t result = qword_100380F18;
  if (!qword_100380F18)
  {
    sub_1000094C4(&qword_100380EE0);
    sub_10003F7D8(&qword_100380EF8, &qword_100380F00, (void (*)(void))sub_10003F5C0);
    sub_100009B18(&qword_100380F20, &qword_100380ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380F18);
  }
  return result;
}

unint64_t sub_10003F70C()
{
  unint64_t result = qword_100380F30;
  if (!qword_100380F30)
  {
    sub_1000094C4(&qword_100380EB8);
    sub_10003F7D8(&qword_100380F38, &qword_100380EB0, (void (*)(void))sub_10003F854);
    sub_100009B18(&qword_100380F60, &qword_100380F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380F30);
  }
  return result;
}

uint64_t sub_10003F7D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003F854()
{
  unint64_t result = qword_100380F40;
  if (!qword_100380F40)
  {
    sub_1000094C4(&qword_100380EA8);
    sub_100009B18(&qword_100380F48, &qword_100380EA0);
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380F40);
  }
  return result;
}

uint64_t initializeWithCopy for QuestionnaireAutoSendView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for QuestionnaireAutoSendView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QuestionnaireAutoSendView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireAutoSendView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireAutoSendView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireAutoSendView()
{
  return &type metadata for QuestionnaireAutoSendView;
}

uint64_t sub_10003FB78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003FB94@<X0>(char *a1@<X8>)
{
  unint64_t v2 = (_OWORD *)v1;
  uint64_t v67 = sub_100004010(&qword_100380F70);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  Swift::String v65 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004010(&qword_100380F78);
  __chkstk_darwin(v68);
  Swift::String v70 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380F80);
  uint64_t v64 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String_optional v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_100380F88);
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v8 = __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v60 = (char *)&v57 - v10;
  NSString v11 = *(void **)(v1 + 16);
  if (v11)
  {
    uint64_t v12 = v11[9];
    uint64_t v13 = v11[10];
    sub_100008F88(v11 + 6, v12);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 24))(&v86, v12, v13);
    uint64_t v14 = static VerticalAlignment.center.getter();
    sub_1000090FC((uint64_t)&v86, (uint64_t)&v71);
    id v15 = (_OWORD *)swift_allocObject();
    long long v16 = v2[1];
    v15[1] = *v2;
    uint64_t v15[2] = v16;
    long long v17 = v2[3];
    v15[3] = v2[2];
    v15[4] = v17;
    sub_100009164(&v71, (uint64_t)(v15 + 5));
    sub_1000090FC((uint64_t)&v86, (uint64_t)&v85);
    Class v18 = (_OWORD *)swift_allocObject();
    long long v19 = v2[1];
    v18[1] = *v2;
    uint64_t v18[2] = v19;
    long long v20 = v2[3];
    v18[3] = v2[2];
    v18[4] = v20;
    sub_100009164(&v85, (uint64_t)(v18 + 5));
    sub_1000431C0((uint64_t)v2);
    sub_1000431C0((uint64_t)v2);
    type metadata accessor for UIMetrics();
    sub_100043640((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v21 = EnvironmentObject.init()();
    uint64_t v23 = v22;
    type metadata accessor for CGSize(0);
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    State.init(wrappedValue:)();
    long long v71 = (unint64_t)v14;
    LOBYTE(v72) = 1;
    unint64_t v73 = v21;
    uint64_t v74 = v23;
    Swift::String v75 = sub_10004314C;
    Swift::String v76 = v15;
    Swift::String v77 = sub_1000431B4;
    Swift::String v78 = v18;
    long long v79 = v83;
    uint64_t v80 = v84;
    uint64_t v24 = *((void *)v2 + 4);
    if (!v24)
    {
      type metadata accessor for QuestionnaireState();
      Swift::String v55 = &qword_10037F008;
      id v56 = type metadata accessor for QuestionnaireState;
      goto LABEL_13;
    }
    swift_beginAccess();
    if (*(void *)(*(void *)(v24 + 144) + 16))
    {
      uint64_t v57 = v6;
      Swift::String_optional v58 = a1;
      uint64_t v59 = v24 + 48;
      sub_100004010(&qword_100380F90);
      sub_100009B18(&qword_100380F98, &qword_100380F90);
      uint64_t v25 = v65;
      View.navigationBarBackButtonHidden(_:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v26 = (uint64_t (*)())swift_allocObject();
      long long v27 = v2[1];
      *((_OWORD *)v26 + 1) = *v2;
      *((_OWORD *)v26 + 2) = v27;
      long long v28 = v2[3];
      *((_OWORD *)v26 + 3) = v2[2];
      *((_OWORD *)v26 + 4) = v28;
      uint64_t v29 = v66;
      uint64_t v30 = v70;
      uint64_t v31 = v67;
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v70, v25, v67);
      uint64_t v32 = v68;
      uint64_t v33 = (uint64_t (**)())&v30[*(int *)(v68 + 36)];
      void *v33 = sub_10004321C;
      v33[1] = v26;
      v33[2] = 0;
      _OWORD v33[3] = 0;
      sub_1000431C0((uint64_t)v2);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v31);
      swift_beginAccess();
      uint64_t v34 = *(void *)(v24 + 224);
      if (v34) {
        uint64_t v35 = *(void *)(v34 + 48);
      }
      else {
        uint64_t v35 = 0;
      }
      uint64_t v36 = v69;
      *(void *)&long long v71 = v35;
      BYTE8(v71) = v34 == 0;
      Swift::String v37 = (_OWORD *)swift_allocObject();
      long long v38 = v2[1];
      v37[1] = *v2;
      v37[2] = v38;
      long long v39 = v2[3];
      v37[3] = v2[2];
      v37[4] = v39;
      sub_1000431C0((uint64_t)v2);
      uint64_t v40 = sub_100004010(&qword_100380FA0);
      unint64_t v41 = sub_100043230();
      unint64_t v42 = sub_10004330C();
      uint64_t v43 = (uint64_t)v70;
      View.onChange<A>(of:initial:_:)();
      swift_release();
      sub_10000950C(v43, &qword_100380F78);
      uint64_t v44 = *(void *)(v24 + 144);
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        LOBYTE(v81) = *(unsigned char *)(v45 + v44 + 31);
        NSBundle v46 = (_OWORD *)swift_allocObject();
        long long v47 = v2[1];
        v46[1] = *v2;
        v46[2] = v47;
        long long v48 = v2[3];
        v46[3] = v2[2];
        v46[4] = v48;
        sub_1000431C0((uint64_t)v2);
        *(void *)&long long v71 = v32;
        *((void *)&v71 + 1) = v40;
        unint64_t v72 = v41;
        unint64_t v73 = v42;
        swift_getOpaqueTypeConformance2();
        sub_100043384();
        Swift::String v49 = v61;
        uint64_t v50 = v57;
        View.onChange<A>(of:initial:_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v50);
        id v51 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
        Swift::String v52 = v60;
        uint64_t v53 = v63;
        v51(v60, v49, v63);
        v51(v58, v52, v53);
        return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v86);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  type metadata accessor for UIMetrics();
  Swift::String v55 = (unint64_t *)&qword_10037EFF0;
  id v56 = type metadata accessor for UIMetrics;
LABEL_13:
  sub_100043640(v55, (void (*)(uint64_t))v56);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void *sub_10004040C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = static HorizontalAlignment.center.getter();
  sub_100040518(a1, a2, __src);
  v18[848] = 0;
  memcpy(&v18[7], __src, 0x348uLL);
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  sub_100008F88(a2, v7);
  double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  LOBYTE(a2) = static Edge.Set.all.getter();
  char v19 = 0;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = memcpy((void *)(a3 + 17), v18, 0x34FuLL);
  *(unsigned char *)(a3 + 864) = (_BYTE)a2;
  *(double *)(a3 + 872) = v9;
  *(void *)(a3 + 880) = v11;
  *(void *)(a3 + 888) = v13;
  *(void *)(a3 + 896) = v15;
  *(unsigned char *)(a3 + 904) = v19;
  return result;
}

uint64_t sub_100040518@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  sub_100041194(a1, a2, __src);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  sub_100008F88(a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 496))(v9, v10);
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  sub_100008F88(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 496))(v11, v12);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v106 = v178;
    uint64_t v102 = v182;
    uint64_t v100 = v180;
    uint64_t v101 = v183;
    id v14 = *(id *)(v13 + 112);
    char v15 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v108 = v6;
    uint64_t v109 = v13;
    uint64_t v107 = v8;
    long long v99 = a3;
    if (v15)
    {
      uint64_t v16 = 0;
      double v17 = 16.0;
      double v18 = 16.0;
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v20 = a2[3];
      uint64_t v21 = a2[4];
      sub_100008F88(a2, v20);
      double v17 = (*(double (**)(uint64_t, uint64_t))(v21 + 536))(v20, v21);
      uint64_t v16 = v22;
      double v18 = v23;
      uint64_t v19 = v24;
    }
    memcpy(__dst, __src, sizeof(__dst));
    char v172 = v179;
    char v171 = v181;
    char v103 = v179;
    char v104 = v181;
    char v105 = static Edge.Set.all.getter();
    char v173 = 0;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v25 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    uint64_t v30 = a2[3];
    uint64_t v31 = a2[4];
    sub_100008F88(a2, v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 472))(v30, v31);
    uint64_t v32 = Text.font(_:)();
    uint64_t v34 = v33;
    char v36 = v35;
    swift_release();
    sub_100033364(v25, v27, v29);
    swift_bridgeObjectRelease();
    uint64_t v37 = a2[3];
    uint64_t v38 = a2[4];
    sub_100008F88(a2, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 488))(v37, v38);
    uint64_t v39 = Text.foregroundColor(_:)();
    uint64_t v41 = v40;
    char v95 = v42;
    uint64_t v97 = v43;
    swift_release();
    sub_100033364(v32, v34, v36 & 1);
    swift_bridgeObjectRelease();
    id v44 = *(id *)(v109 + 112);
    char v45 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v46 = *(id *)(v109 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v190 = v39;
    uint64_t v191 = v41;
    char v192 = v95 & 1;
    uint64_t v193 = v97;
    uint64_t v194 = KeyPath;
    BOOL v195 = (v45 & 1) == 0;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v161, 0.0, 1, 0.0, 1);
    sub_100033364(v39, v41, v95 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    id v47 = *(id *)(v109 + 112);
    char v90 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v98 = swift_getKeyPath();
    char v96 = static Edge.Set.bottom.getter();
    uint64_t v48 = a2[3];
    uint64_t v49 = a2[4];
    sub_100008F88(a2, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 544))(v48, v49);
    EdgeInsets.init(_all:)();
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v92 = v55;
    uint64_t v94 = v54;
    char v159 = 0;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v56 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v58 = v57;
    char v60 = v59 & 1;
    uint64_t v61 = a2[3];
    uint64_t v62 = a2[4];
    sub_100008F88(a2, v61);
    (*(void (**)(uint64_t, uint64_t))(v62 + 480))(v61, v62);
    uint64_t v63 = Text.font(_:)();
    uint64_t v65 = v64;
    char v67 = v66;
    swift_release();
    sub_100033364(v56, v58, v60);
    swift_bridgeObjectRelease();
    uint64_t v68 = a2[3];
    uint64_t v69 = a2[4];
    sub_100008F88(a2, v68);
    (*(void (**)(uint64_t, uint64_t))(v69 + 488))(v68, v69);
    uint64_t v70 = Text.foregroundColor(_:)();
    uint64_t v72 = v71;
    char v89 = v73;
    uint64_t v75 = v74;
    swift_release();
    sub_100033364(v63, v65, v67 & 1);
    swift_bridgeObjectRelease();
    id v76 = *(id *)(v109 + 112);
    char v77 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v78 = swift_getKeyPath();
    id v79 = *(id *)(v109 + 112);
    static Alignment.center.getter();
    uint64_t v91 = v53;
    if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) != 0
      && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)() & 1) != 0))
    {
      double v80 = v18;
      double v81 = v17;
      static Alignment.leading.getter();
    }
    else
    {
      double v80 = v18;
      double v81 = v17;
    }

    double v82 = 0.5;
    uint64_t v184 = v70;
    uint64_t v185 = v72;
    char v186 = v89 & 1;
    if (v90) {
      double v83 = 1.0;
    }
    else {
      double v83 = 0.5;
    }
    uint64_t v187 = v75;
    uint64_t v188 = v78;
    BOOL v189 = (v77 & 1) == 0;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v111, 0.0, 1, 0.0, 1);
    sub_100033364(v70, v72, v89 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    id v84 = *(id *)(v109 + 112);
    char v85 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v85) {
      double v82 = 1.0;
    }
    uint64_t v86 = swift_getKeyPath();
    char v110 = v173;
    char v87 = v159;
    v121[0] = v108;
    v121[1] = v107;
    memcpy(&v121[2], __dst, 0x148uLL);
    v121[43] = v106;
    LOBYTE(v121[44]) = v103;
    *(_DWORD *)((char *)&v121[44] + 1) = *(_DWORD *)v176;
    HIDWORD(v121[44]) = *(_DWORD *)&v176[3];
    v121[45] = v100;
    LOBYTE(v121[46]) = v104;
    *(_DWORD *)((char *)&v121[46] + 1) = *(_DWORD *)v175;
    HIDWORD(v121[46]) = *(_DWORD *)&v175[3];
    v121[47] = v102;
    v121[48] = v101;
    LOBYTE(v121[49]) = v105;
    *(_DWORD *)((char *)&v121[49] + 1) = *(_DWORD *)v174;
    HIDWORD(v121[49]) = *(_DWORD *)&v174[3];
    *(double *)&v121[50] = v81;
    v121[51] = v16;
    *(double *)&v121[52] = v80;
    v121[53] = v19;
    LOBYTE(v121[54]) = v173;
    v122[6] = v167;
    v122[7] = v168;
    v122[8] = v169;
    v122[9] = v170;
    v122[2] = v163;
    v122[3] = v164;
    v122[4] = v165;
    v122[5] = v166;
    v122[0] = v161;
    v122[1] = v162;
    *(void *)&long long v123 = v98;
    *((double *)&v123 + 1) = v83;
    LOBYTE(v124) = v96;
    *(_DWORD *)((char *)&v124 + 1) = *(_DWORD *)v160;
    DWORD1(v124) = *(_DWORD *)&v160[3];
    *((void *)&v124 + 1) = v51;
    *(void *)long long v125 = v91;
    *(void *)&v125[8] = v94;
    *(void *)&v125[16] = v92;
    v125[24] = v159;
    v126[6] = v117;
    v126[7] = v118;
    v126[8] = v119;
    v126[9] = v120;
    v126[2] = v113;
    v126[3] = v114;
    v126[4] = v115;
    v126[5] = v116;
    v126[0] = v111;
    v126[1] = v112;
    *(void *)&long long v127 = v86;
    *((double *)&v127 + 1) = v82;
    memcpy(v128, v121, 0x1B1uLL);
    *(_OWORD *)&v128[75] = v123;
    *(_OWORD *)&v128[77] = v124;
    *(_OWORD *)&v128[79] = *(_OWORD *)v125;
    *(_OWORD *)((char *)&v128[80] + 1) = *(_OWORD *)&v125[9];
    *(_OWORD *)&v128[67] = v167;
    *(_OWORD *)&v128[69] = v168;
    *(_OWORD *)&v128[71] = v169;
    *(_OWORD *)&v128[73] = v170;
    *(_OWORD *)&v128[59] = v163;
    *(_OWORD *)&v128[61] = v164;
    *(_OWORD *)&v128[63] = v165;
    *(_OWORD *)&v128[65] = v166;
    *(_OWORD *)&v128[55] = v161;
    *(_OWORD *)&v128[57] = v162;
    *(_OWORD *)&v128[99] = v119;
    *(_OWORD *)&v128[101] = v120;
    *(_OWORD *)&v128[103] = v127;
    *(_OWORD *)&v128[91] = v115;
    *(_OWORD *)&v128[93] = v116;
    *(_OWORD *)&v128[95] = v117;
    *(_OWORD *)&v128[97] = v118;
    *(_OWORD *)&v128[83] = v111;
    *(_OWORD *)&v128[85] = v112;
    *(_OWORD *)&v128[87] = v113;
    *(_OWORD *)&v128[89] = v114;
    memcpy(v99, v128, 0x348uLL);
    v129[6] = v117;
    v129[7] = v118;
    v129[8] = v119;
    v129[9] = v120;
    v129[2] = v113;
    v129[3] = v114;
    v129[4] = v115;
    v129[5] = v116;
    v129[0] = v111;
    v129[1] = v112;
    uint64_t v130 = v86;
    double v131 = v82;
    sub_1000437CC((uint64_t)v121);
    sub_1000439C8((uint64_t)v122);
    sub_1000439C8((uint64_t)v126);
    sub_100043A24((uint64_t)v129);
    v132[6] = v167;
    v132[7] = v168;
    v132[8] = v169;
    v132[9] = v170;
    v132[2] = v163;
    v132[3] = v164;
    v132[4] = v165;
    v132[5] = v166;
    v132[0] = v161;
    v132[1] = v162;
    uint64_t v133 = v98;
    double v134 = v83;
    char v135 = v96;
    *(_DWORD *)uint64_t v136 = *(_DWORD *)v160;
    *(_DWORD *)&v136[3] = *(_DWORD *)&v160[3];
    uint64_t v137 = v51;
    uint64_t v138 = v91;
    uint64_t v139 = v94;
    uint64_t v140 = v92;
    char v141 = v87;
    sub_100043A24((uint64_t)v132);
    v142[0] = v108;
    v142[1] = v107;
    memcpy(v143, __dst, sizeof(v143));
    uint64_t v144 = v106;
    char v145 = v103;
    *(_DWORD *)unint64_t v146 = *(_DWORD *)v176;
    *(_DWORD *)&v146[3] = *(_DWORD *)&v176[3];
    uint64_t v147 = v100;
    char v148 = v104;
    *(_DWORD *)long long v149 = *(_DWORD *)v175;
    *(_DWORD *)&v149[3] = *(_DWORD *)&v175[3];
    uint64_t v150 = v102;
    uint64_t v151 = v101;
    char v152 = v105;
    *(_DWORD *)long long v153 = *(_DWORD *)v174;
    *(_DWORD *)&v153[3] = *(_DWORD *)&v174[3];
    double v154 = v81;
    uint64_t v155 = v16;
    double v156 = v80;
    uint64_t v157 = v19;
    char v158 = v110;
    return sub_100043A80((uint64_t)v142);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100043640((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100041194@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  long long v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  void *__dst;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[10];
  uint64_t (*v69)();
  uint64_t v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  _OWORD __src[21];
  _OWORD v83[10];
  uint64_t (*v84)();
  uint64_t v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  void v96[34];
  void v97[5];
  void v98[7];
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;

  __src[0] = *(_OWORD *)(a1 + 48);
  sub_100004010(&qword_100380FC0);
  State.wrappedValue.getter();
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    uint64_t v7 = v96[0];
    uint64_t v8 = *(void *)(v6 + 264);
    __dst = a3;
    if (*(unsigned char *)(v8 + 80))
    {
      if (v96[0] >= 10) {
        uint64_t v7 = 10;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(v8 + 64);
      if (v9 < v96[0]) {
        uint64_t v7 = v9;
      }
    }
    char v66 = v7;
    uint64_t v10 = a2[3];
    uint64_t v11 = a2[4];
    sub_100008F88(a2, v10);
    uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 504);
    v12(v97, v10, v11);
    uint64_t v13 = v97[0];
    id v14 = v97[1];
    char v15 = v97[2];
    uint64_t v64 = v97[3];
    uint64_t v16 = v97[4];
    double v17 = a2[3];
    double v18 = a2[4];
    sub_100008F88(a2, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 520))(v17, v18);
    uint64_t KeyPath = swift_getKeyPath();
    if (v66 < 0)
    {
      sub_100043E2C(__src);
LABEL_17:
      sub_100043D40((uint64_t)__src, (uint64_t)v96);
      sub_100043D40((uint64_t)v96, (uint64_t)v68);
      sub_100043D40((uint64_t)v68, (uint64_t)&v71);
      *(void *)&__src[0] = v13;
      *((void *)&__src[0] + 1) = v14;
      *(void *)&__src[1] = v15;
      *((void *)&__src[1] + 1) = v64;
      *(void *)&__src[2] = v16;
      *((void *)&__src[2] + 1) = KeyPath;
      *(void *)&__src[3] = v19;
      sub_100043D40((uint64_t)&v71, (uint64_t)&__src[3] + 8);
      memcpy(__dst, __src, 0x148uLL);
      sub_100043D40((uint64_t)v68, (uint64_t)v83);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100043DA8((uint64_t)&v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100043920);
      sub_100043DA8((uint64_t)v83, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100043BD8);
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = *(void *)(v6 + 264);
    uint64_t v22 = *(void *)(v21 + 64);
    double v23 = *(unsigned char *)(v21 + 80) == 0;
    uint64_t v24 = 10;
    if (v23) {
      uint64_t v24 = v22;
    }
    uint64_t v25 = __OFSUB__(v24, 1);
    uint64_t v26 = v24 - 1;
    if (!v25)
    {
      uint64_t v27 = (double)(v66 - 1);
      if (!v66) {
        uint64_t v27 = 0.0;
      }
      uint64_t v63 = fmin(v27 / (double)v26, 0.99);
      v12(v98, v10, v11);
      uint64_t v62 = v98[2];
      char v59 = v98[3];
      char v60 = v98[0];
      uint64_t v61 = v98[4];
      *(void *)&__src[0] = 0x3FF921FB54442D18;
      Angle.animatableData.getter();
      Angle.animatableData.setter();
      static UnitPoint.center.getter();
      char v29 = v28;
      uint64_t v31 = v30;
      uint64_t v32 = a2[3];
      uint64_t v33 = a2[4];
      sub_100008F88(a2, v32);
      *((void *)&v58 + 1) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 512))(v32, v33);
      *(void *)&uint64_t v58 = swift_getKeyPath();
      *(void *)&__src[0] = dispatch thunk of CustomStringConvertible.description.getter();
      *((void *)&__src[0] + 1) = v34;
      sub_100033310();
      char v35 = Text.init<A>(_:)();
      uint64_t v37 = v36;
      uint64_t v39 = v38 & 1;
      char v67 = KeyPath;
      uint64_t v40 = a2[3];
      uint64_t v41 = a2[4];
      sub_100008F88(a2, v40);
      (*(void (**)(uint64_t, uint64_t))(v41 + 528))(v40, v41);
      char v42 = v98[1];
      uint64_t v43 = Text.font(_:)();
      char v45 = v44;
      id v47 = v46;
      swift_release();
      sub_100033364(v35, v37, v39);
      swift_bridgeObjectRelease();
      uint64_t v48 = a2[3];
      uint64_t v49 = a2[4];
      sub_100008F88(a2, v48);
      (*(void (**)(uint64_t, uint64_t))(v49 + 512))(v48, v49);
      uint64_t v50 = Text.foregroundColor(_:)();
      uint64_t v52 = v51;
      LOBYTE(v49) = v53;
      uint64_t v55 = v54;
      swift_release();
      sub_100033364(v43, v45, v47 & 1);
      swift_bridgeObjectRelease();
      uint64_t v56 = swift_getKeyPath();
      v98[5] = v50;
      v98[6] = v52;
      long long v99 = v49 & 1;
      uint64_t v100 = v55;
      uint64_t v101 = v56;
      uint64_t v102 = 1;
      static Alignment.center.getter();
      uint64_t KeyPath = v67;
      sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, __src, 0.0, 1, 0.0, 1);
      sub_100033364(v50, v52, v49 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v92 = __src[6];
      char v93 = __src[7];
      uint64_t v94 = __src[8];
      char v95 = __src[9];
      uint64_t v88 = __src[2];
      char v89 = __src[3];
      char v90 = __src[4];
      uint64_t v91 = __src[5];
      uint64_t v86 = __src[0];
      char v87 = __src[1];
      v68[6] = __src[6];
      v68[7] = __src[7];
      v68[8] = __src[8];
      v68[9] = __src[9];
      v68[2] = __src[2];
      v68[3] = __src[3];
      v68[4] = __src[4];
      v68[5] = __src[5];
      v68[0] = __src[0];
      v68[1] = __src[1];
      uint64_t v69 = sub_1000418F8;
      uint64_t v70 = 0;
      char v77 = __src[6];
      uint64_t v78 = __src[7];
      id v79 = __src[8];
      double v80 = __src[9];
      char v73 = __src[2];
      uint64_t v74 = __src[3];
      uint64_t v75 = __src[4];
      id v76 = __src[5];
      uint64_t v71 = __src[0];
      uint64_t v72 = __src[1];
      double v81 = (unint64_t)sub_1000418F8;
      v83[6] = __src[6];
      v83[7] = __src[7];
      v83[8] = __src[8];
      v83[9] = __src[9];
      v83[2] = __src[2];
      v83[3] = __src[3];
      v83[4] = __src[4];
      v83[5] = __src[5];
      v83[0] = __src[0];
      v83[1] = __src[1];
      id v84 = sub_1000418F8;
      char v85 = 0;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100043C88((uint64_t)v68);
      sub_100043CE4((uint64_t)v83);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&__src[0] = 0;
      *((double *)__src + 1) = v63;
      *(void *)&__src[1] = v60;
      *((void *)&__src[1] + 1) = v42;
      *(void *)&__src[2] = v62;
      *((void *)&__src[2] + 1) = v59;
      *(void *)&__src[3] = v61;
      *((void *)&__src[3] + 1) = 0x3FF921FB54442D18;
      *(void *)&__src[4] = v29;
      *((void *)&__src[4] + 1) = v31;
      __src[5] = v58;
      __src[14] = v79;
      __src[15] = v80;
      __src[16] = v81;
      __src[10] = v75;
      __src[11] = v76;
      __src[12] = v77;
      __src[13] = v78;
      __src[6] = v71;
      __src[7] = v72;
      __src[8] = v73;
      __src[9] = v74;
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(__src);
      goto LABEL_17;
    }
    __break(1u);
  }
  type metadata accessor for QuestionnaireState();
  sub_100043640(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000418F8()
{
  return Transaction.animation.setter();
}

uint64_t sub_100041920@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100380FC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v9 = sub_100004010(&qword_100380FD0);
  sub_100041A70(a1, a2, (uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_100008F88(a2, v10);
  double v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  LOBYTE(a2) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v8, a3, &qword_100380FC8);
  uint64_t v19 = a3 + *(int *)(sub_100004010(&qword_100380FD8) + 36);
  *(unsigned char *)uint64_t v19 = (_BYTE)a2;
  *(double *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_10000950C((uint64_t)v8, &qword_100380FC8);
}

uint64_t sub_100041A70@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v92 = a3;
  uint64_t v4 = type metadata accessor for KeyboardShortcut();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  __chkstk_darwin(v4);
  uint64_t v88 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ButtonBorderShape();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  __chkstk_darwin(v6);
  char v85 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  uint64_t v82 = v9;
  __chkstk_darwin(v8);
  char v77 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ControlSize();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100004010(&qword_100380FE0);
  uint64_t v15 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_100380FE8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100004010(&qword_100380FF0);
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v72 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_100380FF8);
  __chkstk_darwin(v74);
  double v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004010(&qword_100381000);
  uint64_t v83 = *(void *)(v24 - 8);
  uint64_t v84 = v24;
  __chkstk_darwin(v24);
  uint64_t v75 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100004010(&qword_100381008) - 8;
  __chkstk_darwin(v80);
  id v79 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (_OWORD *)swift_allocObject();
  long long v28 = a1[1];
  v27[1] = *a1;
  v27[2] = v28;
  long long v29 = a1[3];
  v27[3] = a1[2];
  v27[4] = v29;
  sub_1000431C0((uint64_t)a1);
  sub_100004010(&qword_100381010);
  sub_100043500();
  Button.init(action:label:)();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for ControlSize.large(_:), v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  uint64_t v32 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v31 + *(int *)(v32 + 28), v14, v11);
  *uint64_t v31 = KeyPath;
  uint64_t v33 = v73;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v73);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v33);
  uint64_t v34 = v77;
  BorderedProminentButtonStyle.init()();
  sub_10004357C();
  sub_100043640(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  char v35 = v72;
  uint64_t v36 = v81;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v34, v36);
  sub_10000950C((uint64_t)v20, &qword_100380FE8);
  uint64_t v37 = v85;
  static ButtonBorderShape.roundedRectangle.getter();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = (uint64_t *)&v23[*(int *)(v74 + 36)];
  uint64_t v40 = sub_100004010(&qword_100381038);
  uint64_t v42 = v86;
  uint64_t v41 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)v39 + *(int *)(v40 + 28), v37, v87);
  uint64_t *v39 = v38;
  uint64_t v43 = v76;
  uint64_t v44 = v78;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v23, v35, v78);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v41);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
  char v45 = v88;
  static KeyboardShortcut.defaultAction.getter();
  sub_100043690();
  id v46 = v75;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v45, v90);
  sub_10000950C((uint64_t)v23, &qword_100380FF8);
  id v47 = v91;
  uint64_t v48 = v91[3];
  uint64_t v49 = v91[4];
  sub_100008F88(v91, v48);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 552))(v48, v49);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v93 = v50;
  swift_retain();
  uint64_t v52 = AnyShapeStyle.init<A>(_:)();
  uint64_t v53 = v83;
  uint64_t v54 = (uint64_t)v79;
  uint64_t v55 = v46;
  uint64_t v56 = v46;
  uint64_t v57 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v55, v84);
  swift_release();
  uint64_t v58 = (uint64_t *)(v54 + *(int *)(v80 + 44));
  *uint64_t v58 = v51;
  v58[1] = v52;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v57);
  uint64_t v59 = v47[3];
  uint64_t v60 = v47[4];
  sub_100008F88(v47, v59);
  double v61 = (*(double (**)(uint64_t, uint64_t))(v60 + 560))(v59, v60);
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  LOBYTE(v59) = static Edge.Set.all.getter();
  uint64_t v68 = v92;
  sub_10000D2A0(v54, v92, &qword_100381008);
  uint64_t v69 = v68 + *(int *)(sub_100004010(&qword_100381050) + 36);
  *(unsigned char *)uint64_t v69 = v59;
  *(double *)(v69 + 8) = v61;
  *(void *)(v69 + 16) = v63;
  *(void *)(v69 + 24) = v65;
  *(void *)(v69 + 32) = v67;
  *(unsigned char *)(v69 + 40) = 0;
  return sub_10000950C(v54, &qword_100381008);
}

void sub_10004239C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = v0[4];
  if (v2)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      if (*(unsigned char *)(v4 + v3 + 31) != 3)
      {
        if (qword_10037DE10 == -1)
        {
LABEL_9:
          uint64_t v9 = type metadata accessor for Logger();
          sub_10000FD84(v9, (uint64_t)qword_1003A9B08);
          sub_1000431C0((uint64_t)v0);
          sub_1000431C0((uint64_t)v0);
          sub_1000431C0((uint64_t)v0);
          sub_1000431C0((uint64_t)v0);
          uint64_t v10 = Logger.logObject.getter();
          os_log_type_t v11 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v10, v11))
          {
            sub_1000433D8((uint64_t)v0);
            sub_1000433D8((uint64_t)v0);
            goto LABEL_17;
          }
          uint64_t v12 = swift_slowAlloc();
          uint64_t v32 = swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 136446466;
          swift_retain();
          uint64_t v13 = sub_1000C8E54();
          unint64_t v15 = v14;
          swift_release();
          v26[0] = sub_1001B3178(v13, v15, &v32);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1000433D8(v1);
          sub_1000433D8(v1);
          *(_WORD *)(v12 + 12) = 2082;
          swift_beginAccess();
          if (*(void *)(*(void *)(v2 + 144) + 16))
          {
            uint64_t v16 = String.init<A>(describing:)();
            uint64_t v31 = sub_1001B3178(v16, v17, &v32);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_1000433D8(v1);
            sub_1000433D8(v1);
            _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%{public}s] onDontSendTapped on %{public}s stage", (uint8_t *)v12, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
LABEL_16:
            swift_slowDealloc();
LABEL_18:

            return;
          }
          __break(1u);
          goto LABEL_23;
        }
LABEL_21:
        swift_once();
        goto LABEL_9;
      }
      uint64_t v5 = *(void *)(v2 + 32);
      BOOL v6 = __CFADD__(v5, 1);
      uint64_t v7 = v5 + 1;
      if (!v6)
      {
        *(void *)(v2 + 32) = v7;
        swift_retain();
        BOOL v8 = sub_1000CD31C();
        sub_10024562C();
        swift_release();
        if (v8)
        {
          if (*v0)
          {
            LOBYTE(v26[0]) = 1;
            v26[1] = v2;
            char v27 = 3;
            uint64_t v29 = 0;
            uint64_t v30 = 0;
            uint64_t v28 = 0;
            swift_retain();
            swift_retain();
            PassthroughSubject.send(_:)();
            swift_release();
            swift_release();
            return;
          }
          type metadata accessor for AppEvents();
          uint64_t v24 = (unint64_t *)&qword_10037F000;
          uint64_t v25 = type metadata accessor for AppEvents;
          goto LABEL_26;
        }
        if (qword_10037DE10 == -1)
        {
LABEL_14:
          uint64_t v18 = type metadata accessor for Logger();
          sub_10000FD84(v18, (uint64_t)qword_1003A9B08);
          sub_1000431C0(v1);
          sub_1000431C0(v1);
          uint64_t v10 = Logger.logObject.getter();
          os_log_type_t v19 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v10, v19))
          {
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            v26[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v20 = 136446210;
            swift_retain();
            uint64_t v21 = sub_1000C8E54();
            unint64_t v23 = v22;
            swift_release();
            uint64_t v32 = sub_1001B3178(v21, v23, v26);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_1000433D8(v1);
            sub_1000433D8(v1);
            _os_log_impl((void *)&_mh_execute_header, v10, v19, "[%{public}s] onDontSendTapped - failed to go back", v20, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            goto LABEL_16;
          }
LABEL_17:
          sub_1000433D8(v1);
          sub_1000433D8(v1);
          goto LABEL_18;
        }
LABEL_23:
        swift_once();
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
  type metadata accessor for QuestionnaireState();
  uint64_t v24 = &qword_10037F008;
  uint64_t v25 = type metadata accessor for QuestionnaireState;
LABEL_26:
  sub_100043640(v24, (void (*)(uint64_t))v25);
  EnvironmentObject.error()();
  __break(1u);
}

__n128 sub_1000428EC@<Q0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_100033364(v2, v4, v8);
  swift_bridgeObjectRelease();
  long long v11 = v15[7];
  *(_OWORD *)(a1 + 96) = v15[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v15[8];
  long long v12 = v15[3];
  *(_OWORD *)(a1 + 32) = v15[2];
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = v15[5];
  *(_OWORD *)(a1 + 64) = v15[4];
  *(_OWORD *)(a1 + 80) = v13;
  __n128 result = (__n128)v15[1];
  *(_OWORD *)a1 = v15[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100042A10(void *a1)
{
  if (!*a1)
  {
    type metadata accessor for AppEvents();
    sub_100043640((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = a1[4];
  if (!v1)
  {
LABEL_7:
    type metadata accessor for QuestionnaireState();
    sub_100043640(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    swift_retain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_release();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_beginAccess();
  if (!*(void *)(v1 + 224))
  {
    sub_100004010(&qword_100380FC0);
    State.wrappedValue.getter();
  }
  sub_100004010(&qword_100380FC0);
  return State.wrappedValue.setter();
}

uint64_t sub_100042BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)a2;
  int v10 = *(unsigned __int8 *)(a2 + 8);
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10000FD84(v5, (uint64_t)qword_1003A9B08);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_1000431C0(a3);
  sub_1000431C0(a3);
  long long v12 = Logger.logObject.getter();
  int v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v24 = v13;
    int v25 = v10;
    uint64_t v26 = v9;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v29[0] = v23;
    *(_DWORD *)uint64_t v14 = 136446466;
    if (!*(void *)(a3 + 32))
    {
      sub_1000433D8(a3);
      type metadata accessor for QuestionnaireState();
      sub_100043640(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
      return result;
    }
    swift_retain();
    uint64_t v15 = sub_1000C8E54();
    unint64_t v17 = v16;
    swift_release();
    uint64_t v27 = sub_1001B3178(v15, v17, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000433D8(a3);
    sub_1000433D8(a3);
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v9 = v26;
    uint64_t v27 = v26;
    LOBYTE(v10) = v25;
    char v28 = v25;
    sub_100004010(&qword_100380FA0);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v27 = sub_1001B3178(v18, v19, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v24, "[%{public}s] Auto send view: %s seconds left", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000433D8(a3);
    sub_1000433D8(a3);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    uint64_t v21 = static Animation.linear(duration:)();
    __chkstk_darwin(v21);
    *(&v22 - 2) = a3;
    *(&v22 - 1) = v9;
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100042FB8(uint64_t a1, unsigned char *a2, void *a3)
{
  if (*a2 == 4)
  {
    if (*a3)
    {
      if (a3[4])
      {
        swift_retain();
        swift_retain();
        PassthroughSubject.send(_:)();
        swift_release();
        return swift_release();
      }
    }
    else
    {
      type metadata accessor for AppEvents();
      sub_100043640((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      EnvironmentObject.error()();
      __break(1u);
    }
    type metadata accessor for QuestionnaireState();
    sub_100043640(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    swift_retain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004310C@<X0>(char *a1@<X8>)
{
  return sub_10003FB94(a1);
}

void *sub_10004314C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004040C(v1 + 16, (void *)(v1 + 80), a1);
}

uint64_t sub_10004315C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1000431B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100041920((_OWORD *)(v1 + 16), (void *)(v1 + 80), a1);
}

uint64_t sub_1000431C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004321C()
{
  return sub_100042A10((void *)(v0 + 16));
}

uint64_t sub_100043228(uint64_t a1, uint64_t a2)
{
  return sub_100042BEC(a1, a2, v2 + 16);
}

unint64_t sub_100043230()
{
  unint64_t result = qword_100380FA8;
  if (!qword_100380FA8)
  {
    sub_1000094C4(&qword_100380F78);
    sub_1000094C4(&qword_100380F90);
    sub_100009B18(&qword_100380F98, &qword_100380F90);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380FA8);
  }
  return result;
}

unint64_t sub_10004330C()
{
  unint64_t result = qword_100380FB0;
  if (!qword_100380FB0)
  {
    sub_1000094C4(&qword_100380FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380FB0);
  }
  return result;
}

uint64_t sub_10004337C(uint64_t a1, unsigned char *a2)
{
  return sub_100042FB8(a1, a2, (void *)(v2 + 16));
}

unint64_t sub_100043384()
{
  unint64_t result = qword_100380FB8;
  if (!qword_100380FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380FB8);
  }
  return result;
}

uint64_t sub_1000433D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043430()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10004348C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1000434DC()
{
}

unint64_t sub_100043500()
{
  unint64_t result = qword_100381018;
  if (!qword_100381018)
  {
    sub_1000094C4(&qword_100381010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381018);
  }
  return result;
}

unint64_t sub_10004357C()
{
  unint64_t result = qword_100381020;
  if (!qword_100381020)
  {
    sub_1000094C4(&qword_100380FE8);
    sub_100009B18(&qword_100381028, &qword_100380FE0);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381020);
  }
  return result;
}

uint64_t sub_100043640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100043690()
{
  unint64_t result = qword_100381040;
  if (!qword_100381040)
  {
    sub_1000094C4(&qword_100380FF8);
    sub_1000094C4(&qword_100380FE8);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_10004357C();
    sub_100043640(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381040);
  }
  return result;
}

uint64_t sub_1000437CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 128);
  long long v10 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 136);
  long long v8 = *(_OWORD *)(a1 + 184);
  long long v9 = *(_OWORD *)(a1 + 168);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100043920(v14, v13, v2, v3, v4, v5, v6, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8);
  return a1;
}

uint64_t sub_100043920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a6)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100033724(a13, a14, a15 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000439C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043A24(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043A80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 128);
  long long v10 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 136);
  long long v8 = *(_OWORD *)(a1 + 184);
  long long v9 = *(_OWORD *)(a1 + 168);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100043BD8(v14, v13, v2, v3, v4, v5, v6, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8);
  return a1;
}

uint64_t sub_100043BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_100033364(a13, a14, a15 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100043C88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043CE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100043DA8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264));
  return a1;
}

double sub_100043E2C(_OWORD *a1)
{
  double result = 0.0;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100043E58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t (*sub_100043F14())()
{
  return j__swift_endAccess;
}

uint64_t sub_100043F74()
{
  sub_100046CE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000950C(v0+ OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_itemIdToScrollTo, &qword_10037F4A0);
  swift_bridgeObjectRelease();
  sub_100049A78(*(void *)(v0+ OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight), *(void *)(v0+ OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight+ 8));
  sub_10002D3E4(v0+ OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_progressDelegate);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer));
  return v0;
}

uint64_t sub_100044020()
{
  sub_100043F74();

  return swift_deallocClassInstance();
}

void sub_100044074(char a1)
{
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_connected) = a1;
  if (qword_10037DDC0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A18);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v4 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "onConnectionStateChange: connected = %{BOOL,public}d", v4, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000441BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_10037DDC0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9A18);
    swift_retain_n();
    long long v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      LOBYTE(v25) = *(unsigned char *)(v1 + 16);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v25 = sub_1001B3178(v14, v15, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Message simulation: transcriptState is not .inactive (%{public}s, ignoring onReadyToStartSimulation", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    *(unsigned char *)(v0 + 16) = 1;
    if (qword_10037DDC0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000FD84(v16, (uint64_t)qword_1003A9A18);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Message simulation: clients are ready to start", v19, 2u);
      swift_slowDealloc();
    }

    sub_10000FDBC();
    uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_10004A8EC;
    aBlock[5] = v21;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100207A1C;
    aBlock[3] = (uint64_t)&unk_1003503E8;
    uint64_t v22 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10004A8A4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_10004A6CC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1000446AC()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = ((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    swift_beginAccess();
    unint64_t v6 = *(void *)(v5 + 32);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9) {
        return swift_release();
      }
    }
    else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return swift_release();
    }
    uint64_t v7 = sub_100049E80();
    uint64_t v8 = (uint64_t *)(v5
                   + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscript);
    swift_beginAccess();
    *uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    UUID.init()();
    sub_100044850(v3, 0, 0xE000000000000000, 1);
    (*(void (**)(NSObject *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

void sub_100044850(NSObject *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v179 = a4;
  uint64_t v184 = a2;
  os_log_t v185 = a1;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  uint64_t v182 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)v161 - v14;
  uint64_t v16 = sub_100004010(&qword_1003814F0);
  __chkstk_darwin(v16 - 8);
  char v172 = (char *)v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for String.Encoding();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  long long v170 = (char *)v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_10037F4A0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v174 = (uint64_t)v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v173 = (char *)v161 - v24;
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v27 = __chkstk_darwin(v26);
  char v171 = (char *)v161 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  if (*(unsigned char *)(v4 + 16) != 1)
  {
    if (qword_10037DDC0 != -1) {
      goto LABEL_95;
    }
    goto LABEL_12;
  }
  long long v166 = (char *)v161 - v30;
  v161[0] = v32;
  uint64_t v177 = v31;
  uint64_t v167 = v19;
  uint64_t v168 = v18;
  uint64_t v181 = v29;
  long long v169 = (int *)v10;
  long long v162 = v13;
  long long v163 = (uint64_t *)v9;
  uint64_t v164 = v7;
  uint64_t v165 = v6;
  uint64_t v175 = (void *)(v4 + 32);
  swift_beginAccess();
  unint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_1000460B4(v33);
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v183 = v4;
  uint64_t v178 = a3;
  if (!v35) {
    goto LABEL_20;
  }
  uint64_t v36 = 40;
  while (1)
  {
    uint64_t v38 = *(void *)(v34 + v36);
    if (*(unsigned char *)(v38 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) == 1) {
      goto LABEL_6;
    }
    uint64_t v39 = OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status;
    if (*(unsigned char *)(v38 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status))
    {
      if (*(unsigned char *)(v38 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) != 1) {
        break;
      }
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_retain();
    swift_bridgeObjectRelease();
    if (v37)
    {
      swift_release();
      goto LABEL_19;
    }
    *(unsigned char *)(v38 + v39) = 2;
    swift_release();
LABEL_6:
    v36 += 16;
    if (!--v35) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  a3 = v178;
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v44 = v177;
  uint64_t v45 = v177 + 16;
  id v46 = v166;
  uint64_t v47 = v181;
  uint64_t v180 = *(void (**)(char *, os_log_t, uint64_t))(v177 + 16);
  v180(v166, v185, v181);
  type metadata accessor for TryOutTranscriptMessageItem(0);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v48 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content;
  *(void *)uint64_t v49 = 0;
  *(void *)(v49 + 8) = 0;
  *(void *)(v49 + 16) = v184;
  *(void *)(v49 + 24) = a3;
  *(unsigned char *)(v49 + 32) = v179 & 1;
  *(unsigned char *)(v48 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) = 0;
  *(unsigned char *)(v48 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) = 2;
  *(unsigned char *)(v48 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = 1;
  *(unsigned char *)(v48 + 16) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v48 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id, v46, v47);
  *(unsigned char *)(v48 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) = 0;
  uint64_t v50 = v175;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v51 = (uint64_t)v173;
  v180(v173, (os_log_t)(v48 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id), v47);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v51, 0, 1, v47);
  uint64_t v52 = v174;
  sub_10000D544(v51, v174, &qword_10037F4A0);
  uint64_t v53 = v183;
  uint64_t v54 = v183
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_itemIdToScrollTo;
  swift_beginAccess();
  sub_10000FE64(v52, v54);
  swift_endAccess();
  unint64_t v55 = *(void *)(v53 + 32);
  uint64_t v56 = v45;
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v57 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v161[1] = v48;
  uint64_t v176 = v56;
  if (v57)
  {
    if (v57 >= 1)
    {
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      while ((v55 & 0xC000000000000001) == 0)
      {
        uint64_t v60 = *(void *)(v55 + 8 * v59 + 32);
        swift_retain();
        if (v58) {
          goto LABEL_32;
        }
LABEL_27:
        ++v59;
        *(unsigned char *)(v60 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = 1;
        uint64_t v58 = v60;
        if (v57 == v59) {
          goto LABEL_33;
        }
      }
      uint64_t v60 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v58) {
        goto LABEL_27;
      }
LABEL_32:
      *(unsigned char *)(v58 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = (*(unsigned char *)(v58 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) ^ *(unsigned char *)(v60 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender)) & 1;
      swift_release();
      goto LABEL_27;
    }
    goto LABEL_101;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v61 = v183;
  unint64_t v62 = *(void *)(v183 + 24);
  if (v62 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    uint64_t v63 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    uint64_t v63 = v62;
  }
  uint64_t v64 = v178;
  os_log_t v65 = v185;
  uint64_t v66 = v181;
  swift_bridgeObjectRelease();
  unint64_t v67 = *v175;
  if (*v175 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    unint64_t v68 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    unint64_t v68 = v67;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v188 = v63;
  sub_100110868(v68);
  uint64_t v69 = v188;
  unint64_t v70 = *(void *)(v61 + 40);
  if (v70 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    unint64_t v71 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    unint64_t v71 = v70;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v188 = v69;
  sub_100110868(v71);
  *(void *)(v61 + 48) = v188;
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100299248();
    swift_unknownObjectRelease();
  }
  uint64_t v72 = v171;
  if (qword_10037DDC0 != -1) {
    swift_once();
  }
  uint64_t v73 = type metadata accessor for Logger();
  uint64_t v74 = sub_10000FD84(v73, (uint64_t)qword_1003A9A18);
  v180(v72, v65, v66);
  swift_bridgeObjectRetain_n();
  uint64_t v175 = (void *)v74;
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = swift_slowAlloc();
    *(void *)&v187[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v77 = 136446466;
    sub_10004A8A4(&qword_10037F4A8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v188 = sub_1001B3178(v78, v79, (uint64_t *)v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v173 = *(char **)(v177 + 8);
    ((void (*)(char *, uint64_t))v173)(v72, v66);
    *(_WORD *)(v77 + 12) = 2050;
    *(void *)&long long v188 = v184;
    *((void *)&v188 + 1) = v64;
    uint64_t v80 = v170;
    static String.Encoding.utf8.getter();
    sub_100033310();
    uint64_t v81 = StringProtocol.lengthOfBytes(using:)();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v80, v168);
    swift_bridgeObjectRelease();
    *(void *)&long long v188 = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "Message simulation: new message %{public}s of %{public}ld bytes", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v173 = *(char **)(v177 + 8);
    ((void (*)(char *, uint64_t))v173)(v72, v66);

    swift_bridgeObjectRelease();
  }
  uint64_t v82 = (uint64_t)v172;
  uint64_t v83 = v183
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress;
  swift_beginAccess();
  uint64_t v84 = *(void *)(*(void *)v83 + 16);
  os_log_t v85 = v185;
  if (v84)
  {
    uint64_t v86 = *(void *)v83
        + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    uint64_t v87 = *(void *)(v182 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10004A3CC(v86, (uint64_t)v15);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      sub_10004A430((uint64_t)v15);
      v86 += v87;
      if (!--v84) {
        goto LABEL_52;
      }
    }
    sub_10004A4D0((uint64_t)v15, v82);
    uint64_t v88 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_52:
    uint64_t v88 = 1;
  }
  uint64_t v89 = v182;
  uint64_t v90 = v169;
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v182 + 56))(v82, v88, 1, v169);
  swift_bridgeObjectRelease();
  LODWORD(v89) = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v89 + 48))(v82, 1, v90);
  sub_10000950C(v82, &qword_1003814F0);
  uint64_t v174 = v83;
  if (v89 == 1)
  {
    uint64_t v91 = v168;
    uint64_t v92 = v167;
  }
  else
  {
    uint64_t v93 = v161[0];
    uint64_t v94 = v181;
    v180((char *)v161[0], v85, v181);
    char v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v188 = swift_slowAlloc();
      *(_DWORD *)uint64_t v97 = 136446210;
      sub_10004A8A4(&qword_10037F4A8, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v98 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v187[0] = sub_1001B3178(v98, v99, (uint64_t *)&v188);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v173)(v93, v94);
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "Message simulation: message %{public}s is already pending", v97, 0xCu);
      swift_arrayDestroy();
      os_log_t v85 = v185;
      uint64_t v64 = v178;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v173)(v93, v94);
    }

    __chkstk_darwin(v100);
    v161[-2] = v85;
    uint64_t v101 = v174;
    swift_beginAccess();
    uint64_t v102 = sub_1001D4EEC((uint64_t (*)(unint64_t))sub_10004A874);
    int64_t v103 = *(void *)(*(void *)v101 + 16);
    uint64_t v91 = v168;
    uint64_t v92 = v167;
    if (v103 < v102) {
LABEL_102:
    }
      __break(1u);
    sub_1001D705C(v102, v103);
    swift_endAccess();
  }
  if (v179)
  {
    unint64_t v104 = sub_100283284((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v107 = v106;
    BOOL v189 = &type metadata for Int;
    *(void *)&long long v188 = 0;
    sub_10004A864(&v188, v187);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v186 = v104;
    sub_10026943C(v187, v105, v107, isUniquelyReferenced_nonNull_native);
    unint64_t v109 = v186;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v112 = v111;
    BOOL v189 = &type metadata for Int;
    *(void *)&long long v188 = 1;
    sub_10004A864(&v188, v187);
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v186 = v109;
    sub_10026943C(v187, v110, v112, v113);
    unint64_t v114 = v186;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v117 = v116;
    BOOL v189 = &type metadata for Bool;
    LOBYTE(v188) = 1;
    sub_10004A864(&v188, v187);
    char v118 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v186 = v114;
    sub_10026943C(v187, v115, v117, v118);
    uint64_t v119 = v186;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10017451C(v119);
    swift_bridgeObjectRelease();
    id v120 = objc_allocWithZone((Class)CTStewieEmergencyStartMessage);
    id v140 = sub_100049ABC();
    [v140 estimatedSendTime];
    double v142 = v141;

    double v143 = ceil(v142);
LABEL_79:
    uint64_t v144 = v183;
    uint64_t v145 = v165;
    uint64_t v146 = v164;
    uint64_t v147 = v163;
    uint64_t v148 = (uint64_t)v162;
    long long v149 = v169;
    if (v143 <= 0.0) {
      double v143 = 1.0;
    }
    uint64_t v150 = Logger.logObject.getter();
    os_log_type_t v151 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v150, v151))
    {
      char v152 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v152 = 134349056;
      *(double *)&long long v188 = v143;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v150, v151, "Message simulation: estimatedSendingTime = %{public}f", v152, 0xCu);
      swift_slowDealloc();
    }

    v180((char *)v148, v185, v181);
    uint64_t v153 = v178;
    swift_bridgeObjectRetain();
    static DispatchTime.now()();
    double v154 = (void *)(v148 + v149[5]);
    *double v154 = v184;
    v154[1] = v153;
    *(double *)(v148 + v149[7]) = v143;
    *(double *)(v148 + v149[8]) = v143;
    uint64_t v155 = v174;
    swift_beginAccess();
    unint64_t v156 = *(void *)v155;
    char v157 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v155 = v156;
    if ((v157 & 1) == 0)
    {
      unint64_t v156 = sub_1001B1FB0(0, *(void *)(v156 + 16) + 1, 1, v156);
      *(void *)uint64_t v155 = v156;
    }
    unint64_t v159 = *(void *)(v156 + 16);
    unint64_t v158 = *(void *)(v156 + 24);
    if (v159 >= v158 >> 1)
    {
      unint64_t v156 = sub_1001B1FB0(v158 > 1, v159 + 1, 1, v156);
      *(void *)uint64_t v155 = v156;
    }
    *(void *)(v156 + 16) = v159 + 1;
    sub_10004A4D0(v148, v156+ ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(void *)(v182 + 72) * v159);
    swift_endAccess();
    sub_10000FDBC();
    *uint64_t v147 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v146 + 104))(v147, enum case for DispatchPredicate.onQueue(_:), v145);
    char v160 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v146 + 8))(v147, v145);
    if (v160)
    {
      if (*(void *)(*(void *)v155 + 16))
      {
        if (!*(void *)(v144
                        + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer))
          sub_1000469DC();
      }
      else
      {
        sub_100046CE4();
      }
      swift_release();
      return;
    }
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  *(void *)&long long v188 = v184;
  *((void *)&v188 + 1) = v64;
  long long v121 = v170;
  static String.Encoding.utf8.getter();
  sub_100033310();
  uint64_t v122 = StringProtocol.lengthOfBytes(using:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v121, v91);
  if (v122 >= 0) {
    uint64_t v123 = v122;
  }
  else {
    uint64_t v123 = v122 + 1;
  }
  uint64_t v124 = v123 >> 1;
  if (v122 <= 1) {
    uint64_t v125 = 1;
  }
  else {
    uint64_t v125 = v124;
  }
  uint64_t v126 = self;
  double v143 = 0.0;
  while (1)
  {
    Swift::Int v127 = v125;
    if ((uint64_t)[v126 maxLengthInBytesForOutgoingText] < v125) {
      Swift::Int v127 = (Swift::Int)[v126 maxLengthInBytesForOutgoingText];
    }
    v128._uint64_t countAndFlagsBits = 97;
    v128._object = (void *)0xE100000000000000;
    String.init(repeating:count:)(v128, v127);
    id v129 = objc_allocWithZone((Class)CTStewieEmergencyTextMessage);
    NSString v130 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&long long v188 = 0;
    id v131 = [v129 initWithConversationID:0 sequenceNum:0 emergencyText:v130 error:&v188];

    if (!v131)
    {
      id v136 = (id)v188;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v137 = Logger.logObject.getter();
      os_log_type_t v138 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v139 = 0;
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "Message simulation: failed to create CTStewieEmergencyTextMessage instance", v139, 2u);
        swift_slowDealloc();
      }
      swift_errorRelease();

      goto LABEL_79;
    }
    id v132 = (id)v188;
    [v131 estimatedSendTime];
    double v134 = v133;

    BOOL v135 = __OFSUB__(v125, v127);
    v125 -= v127;
    if (v135) {
      break;
    }
    double v143 = v143 + ceil(v134);
    if (v125 <= 0) {
      goto LABEL_79;
    }
  }
  __break(1u);
LABEL_95:
  swift_once();
LABEL_12:
  uint64_t v40 = type metadata accessor for Logger();
  sub_10000FD84(v40, (uint64_t)qword_1003A9A18);
  os_log_t v185 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v185, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v185, v41, "Ignoring new message in not .inProgress state", v42, 2u);
    swift_slowDealloc();
  }
  os_log_t v43 = v185;
}

uint64_t sub_1000460B4(unint64_t a1)
{
  uint64_t v1 = (void *)sub_100049BA4(a1);
  unint64_t v2 = v1[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 2 * v2;
  uint64_t v8 = 5;
  unint64_t v16 = v2 >> 1;
  while (1)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v9 = v1[2];
    if (v4 >= v9) {
      break;
    }
    if (v6 >= v9) {
      goto LABEL_13;
    }
    uint64_t v11 = v1[v8 - 1];
    uint64_t v10 = v1[v8];
    uint64_t v13 = v1[v7 + 2];
    uint64_t v12 = v1[v7 + 3];
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1001D583C(v1);
    }
    uint64_t v14 = &v1[v8];
    uint64_t result = swift_release();
    *(v14 - 1) = v13;
    *uint64_t v14 = v12;
    if (v6 >= v1[2]) {
      goto LABEL_14;
    }
    unint64_t v15 = &v1[v7];
    uint64_t result = swift_release();
    uint64_t v15[2] = v11;
    v15[3] = v10;
    unint64_t v5 = v16;
LABEL_4:
    ++v4;
    v8 += 2;
    --v6;
    v7 -= 2;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1000461E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v49 = v8;
  uint64_t v58 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_10037F498);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_10037F4A0);
  __chkstk_darwin(v13 - 8);
  id v46 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v51 = a1;
  uint64_t v47 = v22;
  uint64_t v48 = v7 + 16;
  ((void (*)(char *, uint64_t, uint64_t, double))v22)((char *)&v43 - v20, a1, v6, v19);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v44(v21, 0, 1, v6);
  uint64_t v50 = v1;
  uint64_t v23 = v1
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_itemIdToScrollTo;
  swift_beginAccess();
  uint64_t v24 = *(int *)(v10 + 56);
  uint64_t v25 = v7;
  uint64_t v26 = (uint64_t)&v12[v24];
  sub_10000D2A0((uint64_t)v21, (uint64_t)v12, &qword_10037F4A0);
  uint64_t v45 = v23;
  sub_10000D2A0(v23, v26, &qword_10037F4A0);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v27((uint64_t)v12, 1, v6) != 1)
  {
    sub_10000D2A0((uint64_t)v12, (uint64_t)v17, &qword_10037F4A0);
    if (v27(v26, 1, v6) != 1)
    {
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
      uint64_t v28 = v58;
      v30(v58, v26, v6);
      sub_10004A8A4(&qword_10037F4B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
      v32(v28, v6);
      sub_10000950C((uint64_t)v21, &qword_10037F4A0);
      v32(v17, v6);
      uint64_t result = sub_10000950C((uint64_t)v12, &qword_10037F4A0);
      if ((v31 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_10000950C((uint64_t)v21, &qword_10037F4A0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    return sub_10000950C((uint64_t)v12, &qword_10037F498);
  }
  sub_10000950C((uint64_t)v21, &qword_10037F4A0);
  if (v27(v26, 1, v6) != 1) {
    return sub_10000950C((uint64_t)v12, &qword_10037F498);
  }
  sub_10000950C((uint64_t)v12, &qword_10037F4A0);
  uint64_t v28 = v58;
LABEL_8:
  uint64_t v33 = (uint64_t)v46;
  v44(v46, 1, 1, v6);
  uint64_t v34 = v45;
  swift_beginAccess();
  sub_10000FE64(v33, v34);
  swift_endAccess();
  sub_10000FDBC();
  uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  v47(v28, v51, v6);
  unint64_t v37 = (*(unsigned __int8 *)(v25 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v38 + v37, v28, v6);
  aBlock[4] = sub_10004A800;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_1003503C0;
  uint64_t v39 = _Block_copy(aBlock);
  swift_release();
  uint64_t v40 = v52;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004A8A4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_10004A6CC();
  os_log_type_t v41 = v54;
  uint64_t v42 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v40, v55);
}

uint64_t sub_100046924()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      type metadata accessor for TryOutModel();
      sub_10029A29C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1000469DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = self;
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_10004A72C;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008A9B0;
    aBlock[3] = &unk_100350370;
    uint64_t v9 = _Block_copy(aBlock);
    swift_release();
    id v10 = [v7 scheduledTimerWithTimeInterval:1 repeats:v9 block:1.0];
    _Block_release(v9);
    uint64_t v11 = *(void **)(v1
                   + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer);
    *(void *)(v1
              + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer) = v10;

    if (qword_10037DDC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9A18);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Started one second timer", v15, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100046C8C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100046ED0();
    return swift_release();
  }
  return result;
}

void sub_100046CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer;
    [*(id *)(v1+ OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer) invalidate];
    uint64_t v8 = *(void **)(v1 + v7);
    *(void *)(v1 + v7) = 0;

    if (qword_10037DDC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9A18);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Canceled one second timer", v12, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100046ED0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v100 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v98 = (char *)&v86 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for DispatchQoS();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  os_log_type_t v96 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for DispatchTime();
  uint64_t v95 = *(void *)(v104 - 8);
  uint64_t v3 = __chkstk_darwin(v104);
  uint64_t v91 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v103 = (char *)&v86 - v5;
  uint64_t v106 = type metadata accessor for UUID();
  uint64_t v94 = *(void *)(v106 - 8);
  uint64_t v6 = __chkstk_darwin(v106);
  uint64_t v93 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v7;
  __chkstk_darwin(v6);
  uint64_t v102 = (char *)&v86 - v8;
  uint64_t v9 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  id v10 = *(char **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v117 = (unint64_t)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v105 = (uint64_t *)((char *)&v86 - v13);
  uint64_t v14 = sub_100004010(&qword_1003814F0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v114 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  double v19 = (uint64_t *)((char *)&v86 - v18);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v101 = (char *)&v86 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v86 - v23;
  __chkstk_darwin(v22);
  unint64_t v26 = (unint64_t)&v86 - v25;
  uint64_t v27 = (char *)type metadata accessor for DispatchPredicate();
  uint64_t v28 = *((void *)v27 - 1);
  __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v115 = sub_10000FDBC();
  *uint64_t v30 = static OS_dispatch_queue.main.getter();
  char v31 = *(void (**)(void))(v28 + 104);
  unsigned int v109 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v110 = v28 + 104;
  uint64_t v108 = (void (*)(uint64_t, void, char *))v31;
  v31(v30);
  uint64_t v32 = _dispatchPreconditionTest(_:)();
  uint64_t v34 = *(void (**)(uint64_t, char *))(v28 + 8);
  unint64_t v33 = v28 + 8;
  uint64_t v111 = v30;
  char v113 = v27;
  unint64_t v112 = v33;
  uint64_t v107 = v34;
  v34((uint64_t)v30, v27);
  if ((v32 & 1) == 0) {
    goto LABEL_58;
  }
  uint64_t v90 = v0;
  uint64_t v27 = (char *)*((void *)v10 + 7);
  char v118 = (char *)v26;
  ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v27)(v26, 1, 1, v9);
  uint64_t v116 = v24;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v27)(v24, 1, 1, v9);
  uint64_t v30 = v119;
  unint64_t v26 = (unint64_t)&qword_100381000;
  if (*((unsigned char *)v119
       + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_connected) != 1)
    goto LABEL_12;
  uint64_t v32 = (uint64_t)v119
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress;
  swift_beginAccess();
  if (!*(void *)(*(void *)v32 + 16)) {
    goto LABEL_12;
  }
  unint64_t v33 = (v10[80] + 32) & ~(unint64_t)v10[80];
  uint64_t v30 = &qword_100381000;
  if (*(double *)(*(void *)v32 + v33 + *(int *)(v9 + 32)) <= 0.0)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v24 = v101;
    if (*(void *)(*(void *)v32 + 16))
    {
      sub_10004A3CC(*(void *)v32 + v33, (uint64_t)v101);
      sub_1001D705C(0, 1);
      swift_endAccess();
      uint64_t v32 = (uint64_t)v116;
      goto LABEL_11;
    }
  }
  else
  {
    swift_beginAccess();
    unint64_t v26 = *(void *)v32;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v32 = v26;
    uint64_t v24 = v101;
    if ((result & 1) == 0) {
      goto LABEL_63;
    }
    if (*(void *)(v26 + 16))
    {
      while (1)
      {
        *(double *)(v26 + v33 + *(int *)(v9 + 32)) = *(double *)(v26 + v33 + *(int *)(v9 + 32)) + -1.0;
        unint64_t v36 = *(void *)v32;
        uint64_t result = swift_endAccess();
        if (!*(void *)(v36 + 16)) {
          goto LABEL_65;
        }
        sub_10004A3CC(v36 + v33, (uint64_t)v24);
        uint64_t v32 = (uint64_t)v118;
LABEL_11:
        sub_10000950C(v32, &qword_1003814F0);
        ((void (*)(char *, void, uint64_t, uint64_t))v27)(v24, 0, 1, v9);
        sub_10000D544((uint64_t)v24, v32, &qword_1003814F0);
        unint64_t v26 = (unint64_t)v30;
        uint64_t v30 = v119;
LABEL_12:
        uint64_t v27 = v118;
        sub_10000D2A0((uint64_t)v118, (uint64_t)v19, &qword_1003814F0);
        uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v10 + 6);
        v10 += 48;
        unint64_t v37 = v38;
        if (v38((uint64_t)v19, 1, v9) == 1)
        {
          sub_10000950C((uint64_t)v19, &qword_1003814F0);
          goto LABEL_20;
        }
        uint64_t v39 = (uint64_t)v19;
        double v19 = v105;
        sub_10004A4D0(v39, (uint64_t)v105);
        double v40 = *(double *)((char *)v19 + *(int *)(v9 + 28));
        double v41 = *(double *)((char *)v19 + *(int *)(v9 + 32));
        if (!swift_unknownObjectWeakLoadStrong()) {
          goto LABEL_19;
        }
        double v42 = ceil((v40 - v41) * 100.0 / v40);
        if ((~*(void *)&v42 & 0x7FF0000000000000) == 0) {
          goto LABEL_60;
        }
        if (v42 > -9.22337204e18) {
          break;
        }
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        uint64_t result = sub_1001D5828(v26);
        unint64_t v26 = result;
        *(void *)uint64_t v32 = result;
        if (!*(void *)(result + 16)) {
          goto LABEL_64;
        }
      }
      if (v42 >= 9.22337204e18) {
        goto LABEL_62;
      }
      sub_10029935C((uint64_t)v19, (uint64_t)v42);
      swift_unknownObjectRelease();
LABEL_19:
      sub_10004A430((uint64_t)v19);
LABEL_20:
      uint64_t v24 = v116;
      uint64_t v43 = v114;
      sub_10000D2A0((uint64_t)v116, v114, &qword_1003814F0);
      int v44 = v37(v43, 1, v9);
      unint64_t v33 = v117;
      if (v44 == 1)
      {
        sub_10000950C(v43, &qword_1003814F0);
        goto LABEL_51;
      }
      sub_10004A4D0(v43, v117);
      uint64_t v114 = (uint64_t)v30
           + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_progressDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1002997B0(v33);
        swift_unknownObjectRelease();
      }
      swift_beginAccess();
      unint64_t v45 = swift_bridgeObjectRetain();
      uint64_t v46 = sub_1000460B4(v45);
      uint64_t v9 = v46;
      id v10 = *(char **)(v46 + 16);
      if (!v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      double v19 = v30;
      uint64_t v32 = *(void *)(v46 + 40);
      uint64_t v30 = (uint64_t *)(v32 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id);
      swift_retain();
      if ((static UUID.== infix(_:_:)() & 1) == 0)
      {
        swift_release();
        if (v10 != (char *)1)
        {
          uint64_t v27 = (char *)(v9 + 56);
          unint64_t v26 = 1;
          while (v26 < *(void *)(v9 + 16))
          {
            uint64_t v32 = *(void *)v27;
            uint64_t v30 = (uint64_t *)(*(void *)v27 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id);
            swift_retain();
            if (static UUID.== infix(_:_:)())
            {
              uint64_t v30 = v19;
              uint64_t v27 = v118;
              unint64_t v26 = 0x100381000;
              goto LABEL_35;
            }
            swift_release();
            ++v26;
            v27 += 16;
            if (v10 == (char *)v26) {
              goto LABEL_33;
            }
          }
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v30 = v19;
        uint64_t v27 = v118;
        unint64_t v26 = 0x100381000;
        goto LABEL_41;
      }
      uint64_t v30 = v19;
LABEL_35:
      swift_bridgeObjectRelease();
      uint64_t v47 = OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status;
      if (*(unsigned char *)(v32 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status))
      {
        char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_40;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v32 + v47) = 1;
LABEL_40:
      swift_release();
LABEL_41:
      uint64_t v49 = (uint64_t *)((char *)v30
                      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscript);
      swift_beginAccess();
      uint64_t v50 = (void *)*v49;
      if (*v49 && v50[2])
      {
        uint64_t v51 = v50[4];
        uint64_t v52 = v50[5];
        uint64_t v53 = v50[6];
        uint64_t v54 = v50[7];
        uint64_t v55 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = (uint64_t)sub_100043F14();
        uint64_t v56 = (void (*)(void *, void))result;
        uint64_t v58 = *v57;
        uint64_t v101 = (char *)v52;
        uint64_t v105 = (uint64_t *)v53;
        uint64_t v89 = v54;
        if (v58)
        {
          if (!*(void *)(v58 + 16)) {
            goto LABEL_67;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001D7244(0, 1);
          v56(aBlock, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          ((void (*)(void *, void))result)(aBlock, 0);
        }
        uint64_t v59 = v94;
        uint64_t v60 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
        uint64_t v61 = v102;
        v60(v102, v117, v106);
        unint64_t v62 = (uint64_t *)((char *)v55
                        + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight);
        uint64_t v63 = *(uint64_t *)((char *)v55
                         + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight);
        uint64_t v64 = v62[1];
        uint64_t v87 = v51;
        *unint64_t v62 = v51;
        uint64_t v65 = (uint64_t)v101;
        uint64_t v66 = (uint64_t)v105;
        v62[1] = v101;
        uint64_t v62[2] = v66;
        uint64_t v67 = v89;
        v62[3] = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100049A78(v63, v64);
        uint64_t v88 = static OS_dispatch_queue.main.getter();
        unint64_t v68 = v91;
        static DispatchTime.now()();
        + infix(_:_:)();
        double v19 = (uint64_t *)(v95 + 8);
        uint64_t v95 = *(void *)(v95 + 8);
        ((void (*)(char *, uint64_t))v95)(v68, v104);
        uint64_t v69 = swift_allocObject();
        swift_weakInit();
        unint64_t v70 = v93;
        unint64_t v71 = v61;
        uint64_t v72 = v106;
        v60(v93, (unint64_t)v71, v106);
        unint64_t v73 = (*(unsigned __int8 *)(v59 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
        uint64_t v74 = (char *)swift_allocObject();
        uint64_t v75 = v87;
        *((void *)v74 + 2) = v69;
        *((void *)v74 + 3) = v75;
        uint64_t v76 = (uint64_t)v105;
        *((void *)v74 + 4) = v65;
        *((void *)v74 + 5) = v76;
        *((void *)v74 + 6) = v67;
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v74[v73], v70, v72);
        aBlock[4] = sub_10004A648;
        aBlock[5] = v74;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100207A1C;
        aBlock[3] = &unk_100350348;
        uint64_t v77 = _Block_copy(aBlock);
        swift_release();
        uint64_t v78 = v96;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10004A8A4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_10004A6CC();
        unint64_t v79 = v98;
        uint64_t v80 = v90;
        uint64_t v30 = v119;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v81 = v103;
        uint64_t v82 = (void *)v88;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v77);

        (*(void (**)(char *, uint64_t))(v100 + 8))(v79, v80);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v78, v99);
        ((void (*)(char *, uint64_t))v95)(v81, v104);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v102, v106);
        uint64_t v24 = v116;
        unint64_t v33 = v117;
        uint64_t v27 = v118;
        unint64_t v26 = (unint64_t)&qword_100381000;
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_100299248();
        swift_unknownObjectRelease();
      }
      sub_10004A430(v33);
LABEL_51:
      uint64_t v83 = static OS_dispatch_queue.main.getter();
      uint64_t v9 = (uint64_t)v111;
      uint64_t *v111 = v83;
      id v10 = v113;
      v108(v9, v109, v113);
      uint64_t v32 = _dispatchPreconditionTest(_:)();
      v107(v9, v10);
      if (v32)
      {
        uint64_t v84 = (char *)v30 + *(void *)(v26 + 408);
        uint64_t v85 = swift_beginAccess();
        if (*(void *)(*(void *)v84 + 16))
        {
          if (!*(uint64_t *)((char *)v30
                           + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer))
            sub_1000469DC(v85);
        }
        else
        {
          sub_100046CE4();
        }
        sub_10000950C((uint64_t)v24, &qword_1003814F0);
        return sub_10000950C((uint64_t)v27, &qword_1003814F0);
      }
      goto LABEL_59;
    }
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_100047EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100047F38(a2, a3, a4, a5, a6);
    return swift_release();
  }
  return result;
}

uint64_t sub_100047F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  uint64_t v104 = a3;
  uint64_t v9 = sub_100004010(&qword_10037F4A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v98 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v88 - v12;
  uint64_t v91 = type metadata accessor for DispatchPredicate();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (uint64_t *)((char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  uint64_t v92 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v99 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v17 = v105;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = (_OWORD *)(v6
                 + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight);
  uint64_t v24 = *(void *)(v6
                  + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight);
  uint64_t v25 = *(void *)(v6
                  + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight
                  + 8);
  *uint64_t v23 = 0u;
  v23[1] = 0u;
  sub_100049A78(v24, v25);
  swift_bridgeObjectRetain();
  UUID.init()();
  type metadata accessor for TryOutTranscriptMessageItem(0);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v26 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content;
  *(void *)uint64_t v27 = 0;
  *(void *)(v27 + 8) = 0;
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = a2;
  *(unsigned char *)(v27 + 32) = 0;
  *(unsigned char *)(v26 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) = 1;
  *(unsigned char *)(v26 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) = 2;
  *(unsigned char *)(v26 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = 1;
  *(unsigned char *)(v26 + 16) = 2;
  uint64_t v100 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v100(v26 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id, v22, v16);
  id v28 = [self mainBundle];
  v109._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v109._object = (void *)0x80000001002C85C0;
  v29._object = (void *)0x80000001002C85A0;
  v29._uint64_t countAndFlagsBits = 0xD000000000000019;
  v30._uint64_t countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v109);

  uint64_t v32 = v6;
  unint64_t v33 = v101;
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  uint64_t v94 = v20;
  uint64_t v96 = v105 + 16;
  uint64_t v95 = v34;
  v34(v22, (uint64_t)v20, v16);
  uint64_t v35 = v32;
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v36 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content;
  *(Swift::String *)uint64_t v37 = v31;
  *(void *)(v37 + 16) = v104;
  *(void *)(v37 + 24) = v33;
  *(unsigned char *)(v37 + 32) = 0;
  *(unsigned char *)(v36 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) = 1;
  *(unsigned char *)(v36 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) = 2;
  *(unsigned char *)(v36 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = 1;
  uint64_t v38 = v36 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  *(unsigned char *)(v36 + 16) = 2;
  uint64_t v104 = v16;
  v100(v38, v22, v16);
  uint64_t v39 = (unint64_t *)(v32 + 32);
  swift_beginAccess();
  unint64_t v40 = *(void *)(v32 + 32);
  uint64_t v107 = v102;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_100048D28((uint64_t (*)(uint64_t *))sub_10004A90C, (uint64_t)v106, v40);
  LOBYTE(a1) = v42;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    BOOL v43 = __OFADD__(v41, 1);
    uint64_t v44 = v41 + 1;
    if (v43)
    {
LABEL_63:
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      if (!(*v39 >> 62))
      {
        uint64_t v45 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        if (v45 >= v44) {
          goto LABEL_5;
        }
        goto LABEL_65;
      }
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v86 >= v44)
    {
LABEL_5:
      if ((v44 & 0x8000000000000000) == 0)
      {
        sub_1001D591C(v44, v44, v26);
        goto LABEL_9;
      }
      goto LABEL_66;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_67:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_9:
  swift_endAccess();
  swift_retain();
  unint64_t v46 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_10004A2AC(v46, v26);
  char v49 = v48;
  swift_bridgeObjectRelease();
  swift_release();
  if ((v49 & 1) == 0)
  {
    BOOL v43 = __OFADD__(v47, 1);
    uint64_t v50 = v47 + 1;
    if (v43)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      if (!(*v39 >> 62))
      {
        uint64_t v51 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        if (v51 >= v50) {
          goto LABEL_13;
        }
        goto LABEL_70;
      }
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v87 >= v50)
    {
LABEL_13:
      if ((v50 & 0x8000000000000000) == 0)
      {
        sub_1001D591C(v50, v50, v36);
        goto LABEL_17;
      }
      goto LABEL_71;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_72:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_17:
  swift_endAccess();
  uint64_t v52 = (uint64_t)v99;
  uint64_t v53 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscript);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v103 = v36;
  uint64_t v93 = v26;
  if (!v54 || *(void *)(v54 + 16) || *(unsigned char *)(v35 + 16) != 1) {
    goto LABEL_38;
  }
  uint64_t v55 = (uint64_t *)(v35
                  + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress);
  swift_beginAccess();
  if (!*(void *)(*v55 + 16)) {
    goto LABEL_37;
  }
  unint64_t v56 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  sub_10004A3CC(*v55 + v56, v52);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1002997B0(v52);
    swift_unknownObjectRelease();
  }
  sub_10004A430(v52);
  uint64_t v57 = *v55;
  uint64_t v58 = *(void *)(*v55 + 16);
  if (!v58) {
    goto LABEL_32;
  }
  uint64_t v101 = v55;
  uint64_t v102 = v35;
  uint64_t v59 = (char *)(v57 + v56);
  uint64_t v26 = *(void *)(v92 + 72);
  uint64_t v60 = swift_bridgeObjectRetain();
  while (1)
  {
    __chkstk_darwin(v60);
    v109._object = v59;
    swift_beginAccess();
    uint64_t v61 = sub_1001D5274((uint64_t (*)(uint64_t *))sub_10004A48C, (uint64_t)(&v88 - 4));
    uint64_t v62 = v61;
    if (*v39 >> 62) {
      break;
    }
    uint64_t v63 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v63 < v61) {
      goto LABEL_30;
    }
LABEL_27:
    sub_1001D73B0(v62, v63);
    uint64_t v60 = swift_endAccess();
    v59 += v26;
    if (!--v58) {
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v63 >= v62) {
    goto LABEL_27;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v55 = v101;
  uint64_t v35 = v102;
LABEL_32:
  *uint64_t v55 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  sub_10000FDBC();
  uint64_t v64 = static OS_dispatch_queue.main.getter();
  uint64_t v65 = v89;
  *uint64_t v89 = v64;
  uint64_t v66 = v90;
  uint64_t v67 = v91;
  (*(void (**)(uint64_t *, void, uint64_t))(v90 + 104))(v65, enum case for DispatchPredicate.onQueue(_:), v91);
  char v68 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v66 + 8))(v65, v67);
  uint64_t v36 = v103;
  if ((v68 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  if (*(void *)(*v55 + 16))
  {
    if (!*(void *)(v35
                    + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer))
      sub_1000469DC(result);
  }
  else
  {
    sub_100046CE4();
  }
LABEL_37:
  *(unsigned char *)(v35 + 16) = 2;
LABEL_38:
  uint64_t v70 = v36 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v71 = (uint64_t)v97;
  uint64_t v72 = v104;
  v95(v97, v70, v104);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v71, 0, 1, v72);
  uint64_t v36 = v98;
  sub_10000D544(v71, v98, &qword_10037F4A0);
  uint64_t v73 = v35
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_itemIdToScrollTo;
  swift_beginAccess();
  sub_10000FE64(v36, v73);
  swift_endAccess();
  uint64_t v44 = *(void *)(v35 + 32);
  if ((unint64_t)v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
    if (!v74) {
      goto LABEL_49;
    }
LABEL_40:
    if (v74 < 1)
    {
      __break(1u);
      goto LABEL_63;
    }
    uint64_t v75 = (void *)v35;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    while ((v44 & 0xC000000000000001) == 0)
    {
      uint64_t v78 = *(void *)(v44 + 8 * v77 + 32);
      swift_retain();
      if (v76) {
        goto LABEL_47;
      }
LABEL_42:
      ++v77;
      *(unsigned char *)(v78 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = 1;
      uint64_t v76 = v78;
      if (v74 == v77) {
        goto LABEL_50;
      }
    }
    uint64_t v78 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    if (!v76) {
      goto LABEL_42;
    }
LABEL_47:
    *(unsigned char *)(v76 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage) = (*(unsigned char *)(v76 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender) ^ *(unsigned char *)(v78 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender)) & 1;
    swift_release();
    goto LABEL_42;
  }
  uint64_t v74 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v74) {
    goto LABEL_40;
  }
LABEL_49:
  uint64_t v75 = (void *)v35;
LABEL_50:
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v79 = v75[3];
  if (v79 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    uint64_t v80 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    uint64_t v80 = v79;
  }
  swift_bridgeObjectRelease();
  unint64_t v81 = *v39;
  if (*v39 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    unint64_t v82 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    unint64_t v82 = v81;
  }
  swift_bridgeObjectRelease();
  uint64_t v108 = v80;
  sub_100110868(v82);
  uint64_t v83 = v108;
  unint64_t v84 = v75[5];
  if (v84 >> 62)
  {
    type metadata accessor for TryOutTranscriptItem(0);
    swift_bridgeObjectRetain();
    unint64_t v85 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for TryOutTranscriptItem(0);
    unint64_t v85 = v84;
  }
  swift_bridgeObjectRelease();
  uint64_t v108 = v83;
  sub_100110868(v85);
  v75[6] = v108;
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100299248();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v94, v104);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v94, v104);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100048D28(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v12 = v8;
      char v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0) {
        break;
      }
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v10 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t type metadata accessor for MessageSimulationEngineImplementation()
{
  return self;
}

uint64_t sub_100048E70()
{
  return type metadata accessor for MessageSimulationEngineImplementation.OnState(0);
}

uint64_t type metadata accessor for MessageSimulationEngineImplementation.OnState(uint64_t a1)
{
  return sub_1000497F4(a1, qword_1003811D0);
}

void sub_100048E98()
{
  sub_10000F194();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t *sub_100048F74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = type metadata accessor for DispatchTime();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  }
  return a1;
}

uint64_t sub_1000490C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10004917C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = type metadata accessor for DispatchTime();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t sub_10004927C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100049380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_10004945C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t sub_10004954C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049560);
}

uint64_t sub_100049560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DispatchTime();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100049690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000496A4);
}

uint64_t sub_1000496A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for DispatchTime();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(uint64_t a1)
{
  return sub_1000497F4(a1, qword_1003814A0);
}

uint64_t sub_1000497F4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004982C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DispatchTime();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSimulationEngineImplementation.EmergencyConversationTranscriptItem()
{
  return &type metadata for MessageSimulationEngineImplementation.EmergencyConversationTranscriptItem;
}

unsigned char *storeEnumTagSinglePayload for MessageChatSimulationTranscriptState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000499E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageChatSimulationTranscriptState()
{
  return &type metadata for MessageChatSimulationTranscriptState;
}

unint64_t sub_100049A24()
{
  unint64_t result = qword_1003814E8;
  if (!qword_1003814E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003814E8);
  }
  return result;
}

uint64_t sub_100049A78(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_100049ABC()
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithDictionary:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_100049BA4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_52;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      id v6 = _swiftEmptyArrayStorage;
      uint64_t v7 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v4)
        {
          unint64_t v9 = v6[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_50;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          sub_100004010(&qword_1003814F8);
          uint64_t v12 = (void *)swift_allocObject();
          int64_t v13 = j__malloc_size(v12);
          uint64_t v14 = v13 - 32;
          if (v13 < 32) {
            uint64_t v14 = v13 - 17;
          }
          uint64_t v15 = v14 >> 4;
          v12[2] = v11;
          v12[3] = 2 * (v14 >> 4);
          unint64_t v16 = (unint64_t)(v12 + 4);
          uint64_t v17 = v6[3] >> 1;
          if (v6[2])
          {
            if (v12 != v6 || v16 >= (unint64_t)&v6[2 * v17 + 4]) {
              memmove(v12 + 4, v6 + 4, 16 * v17);
            }
            _OWORD v6[2] = 0;
          }
          uint64_t v7 = (void *)(v16 + 16 * v17);
          uint64_t v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          id v6 = v12;
        }
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          break;
        }
        *uint64_t v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5) {
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_53;
      }
    }
    uint64_t v4 = 0;
    uint64_t v20 = 0;
    id v6 = _swiftEmptyArrayStorage;
    uint64_t v21 = &_swiftEmptyArrayStorage[4];
    do
    {
      uint64_t v22 = *(void *)(a1 + 8 * v20 + 32);
      if (v4)
      {
        swift_retain();
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          goto LABEL_49;
        }
      }
      else
      {
        unint64_t v23 = v6[3];
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_51;
        }
        int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v24;
        }
        sub_100004010(&qword_1003814F8);
        uint64_t v26 = (void *)swift_allocObject();
        int64_t v27 = j__malloc_size(v26);
        uint64_t v28 = v27 - 32;
        if (v27 < 32) {
          uint64_t v28 = v27 - 17;
        }
        uint64_t v29 = v28 >> 4;
        uint64_t v26[2] = v25;
        v26[3] = 2 * (v28 >> 4);
        Swift::String v30 = v26 + 4;
        uint64_t v31 = v6[3] >> 1;
        uint64_t v21 = &v26[2 * v31 + 4];
        uint64_t v32 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        if (v6[2])
        {
          if (v26 != v6 || v30 >= &v6[2 * v31 + 4]) {
            memmove(v30, v6 + 4, 16 * v31);
          }
          swift_retain();
          _OWORD v6[2] = 0;
        }
        else
        {
          swift_retain();
        }
        swift_release();
        id v6 = v26;
        BOOL v19 = __OFSUB__(v32, 1);
        uint64_t v4 = v32 - 1;
        if (v19) {
          goto LABEL_49;
        }
      }
      void *v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_53:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    id v6 = _swiftEmptyArrayStorage;
  }
  unint64_t v34 = v6[3];
  if (v34 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v35 = v34 >> 1;
  BOOL v19 = __OFSUB__(v35, v4);
  uint64_t v36 = v35 - v4;
  if (!v19)
  {
    _OWORD v6[2] = v36;
    return (uint64_t)v6;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_100049E80()
{
  sub_100004010(&qword_100381500);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1002B3F10;
  unint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v3._uint64_t countAndFlagsBits = 0x1000000000000108;
  v35._object = (void *)0x80000001002C8710;
  v3._object = (void *)0x80000001002C8600;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v35);

  id v6 = [v1 mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD000000000000016;
  v36._object = (void *)0x80000001002C8770;
  v7._object = (void *)0x80000001002C8750;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v36);

  *(Swift::String *)(v0 + 32) = v5;
  *(Swift::String *)(v0 + 48) = v9;
  id v10 = [v1 mainBundle];
  v11._uint64_t countAndFlagsBits = 0x10000000000000A5;
  v37._object = (void *)0x80000001002C8870;
  v11._object = (void *)0x80000001002C87C0;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v37._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v37);

  id v14 = [v1 mainBundle];
  v38._object = (void *)0x80000001002C88E0;
  v15._object = (void *)0x80000001002C88B0;
  v15._uint64_t countAndFlagsBits = 0xD000000000000027;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v38);

  *(Swift::String *)(v0 + 64) = v13;
  *(Swift::String *)(v0 + 80) = v17;
  id v18 = [v1 mainBundle];
  v39._object = (void *)0x80000001002C89B0;
  v19._object = (void *)0x80000001002C8930;
  v19._uint64_t countAndFlagsBits = 0x1000000000000075;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v39);

  id v22 = [v1 mainBundle];
  v40._object = (void *)0x80000001002C8A20;
  v23._object = (void *)0x80000001002C89F0;
  v23._uint64_t countAndFlagsBits = 0xD000000000000027;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v40._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v40);

  *(Swift::String *)(v0 + 96) = v21;
  *(Swift::String *)(v0 + 112) = v25;
  id v26 = [v1 mainBundle];
  v27._uint64_t countAndFlagsBits = 0x100000000000010BLL;
  v41._object = (void *)0x80000001002C8B80;
  v27._object = (void *)0x80000001002C8A70;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v41._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v41);

  id v30 = [v1 mainBundle];
  v31._uint64_t countAndFlagsBits = 0xD000000000000054;
  v42._object = (void *)0x80000001002C8C20;
  v31._object = (void *)0x80000001002C8BC0;
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v42._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v42);

  *(Swift::String *)(v0 + 128) = v29;
  *(Swift::String *)(v0 + 144) = v33;
  return v0;
}

uint64_t sub_10004A2AC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    char v6 = static UUID.== infix(_:_:)();
    swift_release();
    if (v6) {
      return v5;
    }
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v7 == v4) {
      return 0;
    }
  }
}

uint64_t sub_10004A3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004A430(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004A48C()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_10004A4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004A534()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004A56C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004A648()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t *)v0[6];
  uint64_t v7 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100047EA4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10004A6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004A6C4()
{
  return swift_release();
}

unint64_t sub_10004A6CC()
{
  unint64_t result = qword_100383A10;
  if (!qword_100383A10)
  {
    sub_1000094C4((uint64_t *)&unk_10037FF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383A10);
  }
  return result;
}

uint64_t sub_10004A72C()
{
  return sub_100046C8C();
}

uint64_t sub_10004A734()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004A800()
{
  type metadata accessor for UUID();

  return sub_100046924();
}

_OWORD *sub_10004A864(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10004A874()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_10004A8A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004A8EC()
{
  return sub_1000446AC();
}

uint64_t sub_10004A90C()
{
  return sub_10004A48C() & 1;
}

uint64_t ConnectionAssistantArrowRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2)
{
  uint64_t result = sub_10004ABE4(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t ConnectionAssistantArrowRenderer.render(arrow:earthCenter:camera:destination:renderCommandEncoder:)(uint64_t a1, float32x2_t *a2, void *a3, void *a4, uint64_t a5, float32x4_t a6, uint64_t a7, void *a8)
{
  uint64_t result = ConnectionAssistantArrow.project(center:camera:)(a2, a6);
  if ((v14 & 0x100000000) == 0)
  {
    float32x2_t v15 = (float32x2_t)result;
    float v16 = *(float *)&v14;
    uint64_t v17 = (uint64_t)*a2;
    double v18 = *(double *)&a2[2];
    uint64_t v19 = (uint64_t)*a2;
    uint64_t v20 = (uint64_t)a2[1];
    float v21 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(v19, v20, v18);
    int v22 = *(_DWORD *)(a1 + 40);
    long long v39 = *(_OWORD *)(a1 + 48);
    int v23 = *(_DWORD *)(a1 + 64);
    Swift::String v24 = (char *)[(id)swift_unknownObjectRetain() contents];
    id v25 = a8;
    *(float *)Swift::String v24 = v21;
    *(void *)(v24 + 4) = *(void *)a1;
    *((float32x2_t *)v24 + 2) = v15;
    *((float *)v24 + 6) = v16;
    *(_OWORD *)(v24 + 28) = *(_OWORD *)(a1 + 16);
    *(void *)(v24 + 44) = *(void *)(a1 + 32);
    *((_DWORD *)v24 + 13) = v22;
    *((_OWORD *)v24 + 4) = v39;
    *((_DWORD *)v24 + 20) = v23;
    uint64_t result = sub_100285024(6);
    if (result)
    {
      uint64_t v26 = result;
      NSString v27 = String._bridgeToObjectiveC()();
      [a4 setLabel:v27];

      [a4 setRenderPipelineState:v26];
      float32x2_t v28 = ConnectionAssistantArrow.boundingBox(pointSize:projection:)(v21, v15, v16);
      float32x2_t v30 = v29;
      id v31 = [a3 width];
      id v32 = [a3 height];
      float v33 = 1.0;
      v34.i32[0] = 1.0;
      if (v17)
      {
        v34.i32[0] = 1.0;
        if (v20)
        {
          float v35 = (float)v17 / (float)v20;
          float v33 = fminf(v35, 1.0);
          v34.f32[0] = fmaxf(v35, 1.0);
        }
      }
      v34.f32[1] = 1.0 / v33;
      v41[0] = sub_1001329FC((uint64_t)v31, (uint64_t)v32, v28, v30, v34);
      v41[1] = v36;
      v41[2] = v37;
      v41[3] = v38;
      [a4 setScissorRect:v41];
      [a4 setVertexBuffer:*(void *)(a5 + 24) offset:0 atIndex:0];
      [a4 setVertexBuffer:*(void *)(a5 + 32) offset:0 atIndex:1];
      [a4 setFragmentBuffer:v25 offset:0 atIndex:0];
      [a4 drawPrimitives:4 vertexStart:0 vertexCount:4];
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10004ABE4(void *a1, uint64_t a2)
{
  if ([a1 newBufferWithLength:96 options:1])
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release_n();
    swift_release_n();
    swift_unknownObjectRelease();
  }
  return a2;
}

uint64_t destroy for ConnectionAssistantArrowRenderer()
{
  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

void *_s8SOSBuddy32ConnectionAssistantArrowRendererVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ConnectionAssistantArrowRenderer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for ConnectionAssistantArrowRenderer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireNavigationPageForQuestion(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireNavigationPageForQuestion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantArrowRenderer()
{
  return &type metadata for ConnectionAssistantArrowRenderer;
}

uint64_t sub_10004AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v24 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a1 + 24);
  sub_10000FDBC();
  swift_retain();
  id v26 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v12 = *(void *)(v11 - 8);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v23 = v12 + 56;
  v22(v7, 1, 1, v11);
  uint64_t v20[3] = sub_100004010(&qword_100393AA0);
  uint64_t v20[2] = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  v20[1] = sub_100028428();
  Publisher.receive<A>(on:options:)();
  sub_100028480((uint64_t)v7);

  swift_release();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = v3;
  v20[0] = sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  float v16 = *(void (**)(char *, uint64_t))(v24 + 8);
  v24 += 8;
  v16(v10, v8);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v25 = *(void *)(v21 + 24);
  swift_retain();
  id v26 = (id)static OS_dispatch_queue.main.getter();
  v22(v7, 1, 1, v11);
  Publisher.receive<A>(on:options:)();
  sub_100028480((uint64_t)v7);

  swift_release();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v15;
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v16(v10, v8);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10004B2FC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10004B580(result);
    return swift_release();
  }
  return result;
}

uint64_t sub_10004B354()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10004B3B0(result);
    return swift_release();
  }
  return result;
}

uint64_t sub_10004B3B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    uint64_t v4 = *(void *)(v2 + 16);
    unint64_t v3 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  if (String.count.getter() >= 1)
  {
    uint64_t v5 = *(void *)(v1 + 32);
    if (!v5 || (*(void *)(v1 + 24) != v4 || v5 != v3) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      UIAccessibilityNotifications v6 = UIAccessibilityAnnouncementNotification;
      NSString v7 = String._bridgeToObjectiveC()();
      UIAccessibilityPostNotification(v6, v7);

      *(void *)(v1 + 24) = v4;
      *(void *)(v1 + 32) = v3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004B48C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VoiceOverFeedback()
{
  return self;
}

uint64_t sub_10004B4F0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B52C()
{
  return sub_10004B2FC();
}

uint64_t sub_10004B538()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004B578()
{
  return sub_10004B354();
}

void sub_10004B580(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) == 0
    && (*(unsigned char *)(a1 + 66) & 1) == 0)
  {
    uint64_t v1 = (double *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing);
    if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24) & 1) == 0)
    {
      double v2 = *v1;
      if (*v1 < 0.0) {
        double v3 = -*v1;
      }
      else {
        double v3 = *v1;
      }
      sub_100004010((uint64_t *)&unk_1003815F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1002B31C0;
      *(void *)(inited + 32) = 7955819;
      *(void *)(inited + 40) = 0xE300000000000000;
      unint64_t v5 = 0xD000000000000016;
      if (v3 > 0.785398163) {
        unint64_t v5 = 0xD00000000000001ALL;
      }
      unint64_t v6 = 0x80000001002C8CC0;
      if (v3 > 0.785398163) {
        unint64_t v6 = 0x80000001002C8CE0;
      }
      *(void *)(inited + 48) = v5;
      *(void *)(inited + 56) = v6;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 80) = 0x676E6964616568;
      *(void *)(inited + 88) = 0xE700000000000000;
      *(void *)(inited + 120) = &type metadata for Double;
      *(double *)(inited + 96) = v2 * 57.2957795;
      sub_100283284(inited);
      UIAccessibilityNotifications v7 = UIAccessibilityAnnouncementNotification;
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      UIAccessibilityPostNotification(v7, isa);
    }
  }
}

void *sub_10004B704(uint64_t a1, uint64_t a2, int a3)
{
  int v51 = a3;
  uint64_t v7 = sub_100004010(&qword_100380420);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v52 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v49 - v11;
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)v49 - v13;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v54 = (char *)v49 - v19;
  uint64_t v55 = a1;
  uint64_t v50 = v3;
  reserved = v3->_reserved;
  uint64_t v56 = a2;
  uint64_t v21 = reserved;
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 URLForResource:v22 withExtension:v23];

  if (v24)
  {
    v49[1] = v4;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = (void (*)(char *, char *, uint64_t))v15[4];
    v25(v12, v18, v14);
    id v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
    v26(v12, 0, 1, v14);
    v49[0] = v15;
    NSString v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v15[6];
    if (v27(v12, 1, v14) != 1)
    {
      uint64_t v34 = (uint64_t)v53;
      v25(v53, v12, v14);
      v26((char *)v34, 0, 1, v14);
      uint64_t v15 = (void *)v49[0];
      id v31 = v54;
      goto LABEL_10;
    }
    uint64_t v15 = (void *)v49[0];
  }
  else
  {
    id v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
    v26(v12, 1, 1, v14);
  }
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v21 URLForResource:v28 withExtension:v29];

  id v31 = v54;
  if (v30)
  {
    uint64_t v32 = (uint64_t)v52;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
    uint64_t v32 = (uint64_t)v52;
  }
  v26((char *)v32, v33, 1, v14);
  uint64_t v34 = (uint64_t)v53;
  sub_10000D544(v32, (uint64_t)v53, &qword_100380420);
  sub_10004C504((uint64_t)v12);
  NSString v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v15[6];
LABEL_10:
  if (v27((char *)v34, 1, v14) == 1)
  {
    sub_10004C504(v34);
    sub_10004C564();
    swift_allocError();
    uint64_t v35 = v56;
    *uint64_t v36 = v55;
    v36[1] = v35;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v15[4])(v31, v34, v14);
    uint64_t v37 = v15;
    clients = v50->_clients;
    URL._bridgeToObjectiveC()(v50);
    Swift::String v40 = v39;
    sub_100004010(&qword_100381878);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002B3350;
    MTKTextureLoaderOption v42 = MTKTextureLoaderOptionSRGB;
    *(void *)(inited + 32) = MTKTextureLoaderOptionSRGB;
    *(void *)(inited + 64) = &type metadata for Bool;
    *(unsigned char *)(inited + 40) = v51 & 1;
    BOOL v43 = v42;
    sub_100283840(inited);
    type metadata accessor for Option(0);
    sub_10004C5B8();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v57 = 0;
    uint64_t v15 = [clients newTextureWithContentsOfURL:v40 options:isa error:&v57];

    if (v15)
    {
      uint64_t v45 = (void (*)(char *, uint64_t))v37[1];
      id v46 = v57;
      v45(v31, v14);
    }
    else
    {
      id v47 = v57;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      ((void (*)(char *, uint64_t))v37[1])(v31, v14);
    }
  }
  return v15;
}

uint64_t sub_10004BC84()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_10004BCE4()
{
  sub_10004BC84();

  return swift_deallocClassInstance();
}

uint64_t ConnectionAssistantEarthTexturedRenderer.__allocating_init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ConnectionAssistantEarthTexturedRenderer.init(device:buffers:renderPipelines:)(a1, a2, a3);
  return v6;
}

void *ConnectionAssistantEarthTexturedRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v3[2] = a2;
  v3[4] = a3;
  type metadata accessor for ConnectionAssistantEarthTexturedRenderer.Textures();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v3[3] = sub_10004C438((uint64_t)a1);
  id v6 = [a1 newBufferWithLength:288 options:1];
  if (v6)
  {
    id v7 = v6;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    v4[5] = v7;
  }
  else
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for ConnectionAssistantEarthTexturedRenderer();
    swift_deallocPartialClassInstance();
  }
  return v4;
}

uint64_t type metadata accessor for ConnectionAssistantEarthTexturedRenderer.Textures()
{
  return self;
}

uint64_t ConnectionAssistantEarthTexturedRenderer.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ConnectionAssistantEarthTexturedRenderer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10004BF5C(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  id v6 = v5;
  ConnectionAssistantEarth.project(camera:)((float32x4_t *)a2, (uint64_t)v57, a5);
  uint64_t result = sub_10000D544((uint64_t)v57, (uint64_t)v58, &qword_100381888);
  if ((v62 & 1) == 0)
  {
    long long v43 = v58[2];
    long long v44 = v58[1];
    long long v42 = v58[3];
    uint64_t v45 = v60;
    uint64_t v46 = v59;
    int v11 = v61;
    float v12 = *(float *)(a2 + 24);
    if (*(float *)(a2 + 28) < v12) {
      float v12 = *(float *)(a2 + 28);
    }
    float v13 = v12 * 0.5;
    long long v47 = v58[0];
    float v48 = *(float *)(a1 + 68);
    *(double *)v14.i64 = ConnectionAssistantEarth.model.getter();
    float32x4_t v15 = *(float32x4_t *)(a2 + 192);
    float32x4_t v16 = *(float32x4_t *)(a2 + 208);
    float32x4_t v17 = *(float32x4_t *)(a2 + 224);
    float32x4_t v18 = *(float32x4_t *)(a2 + 240);
    float32x4_t v53 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v19.f32[0]), v16, *(float32x2_t *)v19.f32, 1), v17, v19, 2), v18, v19, 3);
    float32x4_t v55 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v14.f32[0]), v16, *(float32x2_t *)v14.f32, 1), v17, v14, 2), v18, v14, 3);
    float32x4_t v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v20.f32[0]), v16, *(float32x2_t *)v20.f32, 1), v17, v20, 2), v18, v20, 3);
    float32x4_t v49 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v21.f32[0]), v16, *(float32x2_t *)v21.f32, 1), v17, v21, 2), v18, v21, 3);
    float v22 = sinf(v13);
    v63.columns[3] = (simd_float4)v49;
    v63.columns[1] = (simd_float4)v53;
    v63.columns[0] = (simd_float4)v55;
    v63.columns[2] = (simd_float4)v51;
    simd_float4x4 v64 = __invert_f4(v63);
    simd_float4 v23 = v64.columns[0];
    v64.columns[0] = (simd_float4)v55;
    v64.columns[0].i32[3] = 0;
    simd_float4 v56 = v64.columns[0];
    v64.columns[0] = (simd_float4)v53;
    v64.columns[0].i32[3] = 0;
    simd_float4 v54 = v64.columns[0];
    v64.columns[0] = (simd_float4)v51;
    v64.columns[0].i32[3] = 0;
    simd_float4 v52 = v64.columns[0];
    v64.columns[0] = (simd_float4)v49;
    v64.columns[0].i32[3] = 0;
    simd_float4 v50 = v64.columns[0];
    v23.i32[3] = 0;
    v64.columns[1].i32[3] = 0;
    simd_float4 v40 = v64.columns[1];
    simd_float4 v41 = v23;
    v64.columns[2].i32[3] = 0;
    v64.columns[3].i32[3] = 0;
    simd_float4 v38 = v64.columns[3];
    simd_float4 v39 = v64.columns[2];
    double v24 = *(double *)(a2 + 16);
    float v25 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(*(void *)a2, *(void *)(a2 + 8), v24);
    int v26 = *(_DWORD *)(a2 + 32);
    int v27 = *(_DWORD *)(a1 + 76);
    NSString v28 = (void *)v6[5];
    NSString v29 = (char *)[(id)swift_unknownObjectRetain() contents];
    id v30 = v28;
    *(_OWORD *)NSString v29 = v44;
    *((_OWORD *)v29 + 1) = v43;
    *((_OWORD *)v29 + 2) = v42;
    *((simd_float4 *)v29 + 3) = v56;
    *((simd_float4 *)v29 + 4) = v54;
    *((simd_float4 *)v29 + 5) = v52;
    *((simd_float4 *)v29 + 6) = v50;
    *((simd_float4 *)v29 + 7) = v41;
    *((simd_float4 *)v29 + 8) = v40;
    *((simd_float4 *)v29 + 9) = v39;
    *((simd_float4 *)v29 + 10) = v38;
    *((float *)v29 + 44) = v25;
    *(float *)&double v24 = v24;
    *((_DWORD *)v29 + 45) = LODWORD(v24);
    *((_DWORD *)v29 + 46) = v26;
    *((_DWORD *)v29 + 47) = v27;
    *((float *)v29 + 48) = v22;
    *(void *)(v29 + 196) = 0x40E71C72C0A00000;
    *((_DWORD *)v29 + 51) = 1074790400;
    *((float32x2_t *)v29 + 26) = vmul_f32(vmul_n_f32((float32x2_t)0x42DA000046B73E00, v48), (float32x2_t)0x3BA0902E39D1B717);
    *((_DWORD *)v29 + 54) = 0;
    *((_OWORD *)v29 + 14) = v47;
    *((float *)v29 + 60) = v48;
    *((float *)v29 + 61) = v48 * v48;
    *((void *)v29 + 31) = v46;
    *((void *)v29 + 32) = v45;
    *((_DWORD *)v29 + 66) = v11;
    *((_DWORD *)v29 + 67) = 0;
    *((float32x2_t *)v29 + 34) = vmul_n_f32((float32x2_t)0x3F7851EC3F000000, v48);
    *((float *)v29 + 70) = v48 * 1.2;
    uint64_t result = sub_100285024(2);
    if (result)
    {
      uint64_t v31 = result;
      NSString v32 = String._bridgeToObjectiveC()();
      [a3 setLabel:v32];

      [a3 setRenderPipelineState:v31];
      uint64_t v33 = v6[2];
      [a3 setVertexBuffer:*(void *)(v33 + 24) offset:0 atIndex:0];
      [a3 setVertexBuffer:*(void *)(v33 + 32) offset:0 atIndex:1];
      [a3 setFragmentBuffer:v30 offset:0 atIndex:0];
      uint64_t v34 = (void *)v6[3];
      uint64_t v35 = v34[5];
      if (!v35)
      {
        v34[5] = sub_10004B704(0xD000000000000015, 0x80000001002C8EC0, 1);
        swift_unknownObjectRelease();
        uint64_t v35 = v34[5];
      }
      [a3 setFragmentTexture:v35 atIndex:0 v38, v39, v40, v41];
      uint64_t v36 = v34[6];
      if (!v36)
      {
        v34[6] = sub_10004B704(0xD000000000000015, 0x80000001002C8EA0, 0);
        swift_unknownObjectRelease();
        uint64_t v36 = v34[6];
      }
      [a3 setFragmentTexture:v36 atIndex:1];
      uint64_t v37 = v34[7];
      if (!v37)
      {
        v34[7] = sub_10004B704(0xD000000000000017, 0x80000001002C8E80, 0);
        swift_unknownObjectRelease();
        uint64_t v37 = v34[7];
      }
      [a3 setFragmentTexture:v37 atIndex:2];
      [a3 drawPrimitives:4 vertexStart:0 vertexCount:4];
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10004C414(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  return sub_10004BF5C(a1, a2, a3, a4, a5);
}

uint64_t sub_10004C438(uint64_t a1)
{
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(void *)(v1 + 16) = a1;
  id v3 = objc_allocWithZone((Class)MTKTextureLoader);
  swift_unknownObjectRetain();
  *(void *)(v1 + 24) = [v3 initWithDevice:a1];
  type metadata accessor for ConnectionAssistantEarthTexturedRenderer.Textures();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(void *)(v1 + 32) = [self bundleForClass:ObjCClassFromMetadata];
  return v1;
}

uint64_t type metadata accessor for ConnectionAssistantEarthTexturedRenderer()
{
  return self;
}

uint64_t sub_10004C504(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100380420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10004C564()
{
  unint64_t result = qword_100381870;
  if (!qword_100381870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381870);
  }
  return result;
}

unint64_t sub_10004C5B8()
{
  unint64_t result = qword_100381880;
  if (!qword_100381880)
  {
    type metadata accessor for Option(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381880);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ServiceOutageModel.OutageDescription(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServiceOutageModel.OutageDescription()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ServiceOutageModel.OutageDescription(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ServiceOutageModel.OutageDescription(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionAssistantEarthTexturedRenderer.Textures.Error()
{
  return &type metadata for ConnectionAssistantEarthTexturedRenderer.Textures.Error;
}

uint64_t sub_10004C6D4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for TryOutIntroductionView(uint64_t a1)
{
  swift_release();
  sub_10004C738(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004C738(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_10004C6D4(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_10004C6D4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_10004C738(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10004C738(v5, v6);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutIntroductionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutIntroductionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutIntroductionView()
{
  return &type metadata for TryOutIntroductionView;
}

uint64_t sub_10004C9A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004C9BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v39 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v2 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  simd_float4 v38 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_100381890);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  simd_float4 v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100381898);
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6);
  simd_float4 v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004010(&qword_1003818A0);
  __chkstk_darwin(v44);
  uint64_t v45 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24))(v53, v10, v11);
    uint64_t v12 = *(void *)(v1 + 16);
    LODWORD(v11) = *(unsigned __int8 *)(v1 + 24);
    uint64_t v13 = *(void *)(v1 + 32);
    uint64_t v54 = *(void *)(v1 + 48);
    v55[0] = v13;
    sub_1000090FC((uint64_t)v53, (uint64_t)v51);
    uint64_t v14 = swift_allocObject();
    long long v15 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(v1 + 32);
    *(void *)(v14 + 64) = *(void *)(v1 + 48);
    sub_100009164(v51, v14 + 72);
    sub_1000090FC((uint64_t)v53, (uint64_t)v51);
    uint64_t v16 = swift_allocObject();
    long long v17 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v16 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v16 + 32) = v17;
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v1 + 32);
    *(void *)(v16 + 64) = *(void *)(v1 + 48);
    sub_100009164(v51, v16 + 72);
    swift_retain();
    uint64_t v36 = v12;
    int v37 = v11;
    sub_10004C6D4(v12, v11);
    sub_10004ED30((uint64_t)v55);
    swift_retain();
    sub_10003E68C((uint64_t)&v54);
    swift_retain();
    sub_10004C6D4(v12, v11);
    sub_10004ED30((uint64_t)v55);
    swift_retain();
    sub_10003E68C((uint64_t)&v54);
    sub_1001621AC(v49, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_10004ECB0, v14, sub_10004ED24, v16, 0);
    float32x4_t v19 = v38;
    uint64_t v18 = v39;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v38, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v39);
    uint64_t v20 = sub_100004010(&qword_1003818A8);
    uint64_t v21 = sub_100009B18(&qword_1003818B0, &qword_1003818A8);
    float v22 = v41;
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v19, v18);
    v51[8] = v49[8];
    v51[9] = v49[9];
    v51[10] = v49[10];
    uint64_t v52 = v50;
    v51[4] = v49[4];
    v51[5] = v49[5];
    v51[6] = v49[6];
    v51[7] = v49[7];
    v51[0] = v49[0];
    v51[1] = v49[1];
    v51[2] = v49[2];
    v51[3] = v49[3];
    uint64_t v23 = sub_100009354((uint64_t)v51);
    __chkstk_darwin(v23);
    *(&v36 - 2) = v1;
    sub_100004010(&qword_1003818B8);
    *(void *)&v49[0] = v20;
    *((void *)&v49[0] + 1) = v21;
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003818C0, &qword_1003818B8);
    double v24 = v40;
    uint64_t v25 = v43;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v25);
    uint64_t v26 = v36;
    char v27 = v37;
    sub_10004C6D4(v36, v37);
    LOBYTE(v20) = v27;
    char v28 = sub_10004EE90(v26, v27);
    sub_10004C738(v26, v20);
    NSString v29 = v24;
    if (v28) {
      char v30 = static Edge.Set.top.getter();
    }
    else {
      char v30 = Edge.Set.init(rawValue:)();
    }
    char v31 = v30;
    uint64_t v33 = (uint64_t)v45;
    uint64_t v32 = v46;
    uint64_t v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v29, v47);
    *(unsigned char *)(v33 + *(int *)(v44 + 36)) = v31;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v34);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v53);
    return sub_10000D544(v33, v48, &qword_1003818A0);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004D058@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100381918);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004010(&qword_100381920);
  uint64_t v9 = __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  if (*a1)
  {
    uint64_t v14 = self;
    swift_retain();
    id v15 = [v14 sharedApplication];
    id v16 = [v15 userInterfaceLayoutDirection];

    swift_release();
    unint64_t v17 = 0xD000000000000013;
    unint64_t v18 = 0xD000000000000017;
    if (v16 != (id)1) {
      unint64_t v18 = 0xD000000000000013;
    }
    unint64_t v44 = v18;
    unint64_t v19 = 0x80000001002C9000;
    if (v16 != (id)1)
    {
      unint64_t v19 = 0x80000001002C8FE0;
      unint64_t v17 = 0;
    }
    unint64_t v42 = v17;
    unint64_t v43 = v19;
    if (v16 == (id)1) {
      unint64_t v20 = 0x80000001002C8FE0;
    }
    else {
      unint64_t v20 = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v22 = EnvironmentObject.init()();
    uint64_t v41 = v23;
    *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    unsigned char v8[16] = 0;
    uint64_t v24 = sub_100004010(&qword_100381928);
    sub_10004D448(a1, (uint64_t)&v8[*(int *)(v24 + 44)]);
    uint64_t v26 = a2[3];
    uint64_t v25 = a2[4];
    sub_100008F88(a2, v26);
    double v27 = (*(double (**)(uint64_t, uint64_t))(v25 + 24))(v26, v25);
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    char v34 = static Edge.Set.all.getter();
    sub_10000D2A0((uint64_t)v8, (uint64_t)v11, &qword_100381918);
    uint64_t v35 = &v11[*(int *)(v45 + 36)];
    *uint64_t v35 = v34;
    *((double *)v35 + 1) = v27;
    *((void *)v35 + 2) = v29;
    *((void *)v35 + 3) = v31;
    *((void *)v35 + 4) = v33;
    v35[40] = 0;
    sub_10000950C((uint64_t)v8, &qword_100381918);
    sub_10000D544((uint64_t)v11, (uint64_t)v13, &qword_100381920);
    sub_10000D2A0((uint64_t)v13, (uint64_t)v11, &qword_100381920);
    uint64_t v36 = v41;
    *(void *)a3 = v22;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = KeyPath;
    *(unsigned char *)(a3 + 24) = 0;
    unint64_t v37 = v43;
    *(void *)(a3 + 32) = v44;
    *(void *)(a3 + 40) = v37;
    *(void *)(a3 + 48) = v42;
    *(void *)(a3 + 56) = v20;
    uint64_t v38 = sub_100004010(&qword_100381930);
    sub_10000D2A0((uint64_t)v11, a3 + *(int *)(v38 + 48), &qword_100381920);
    swift_retain();
    sub_10004C6D4(KeyPath, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000950C((uint64_t)v13, &qword_100381920);
    sub_10000950C((uint64_t)v11, &qword_100381920);
    swift_release();
    sub_10004C738(KeyPath, 0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004D448@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v111 = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  __chkstk_darwin(v3);
  uint64_t v110 = &v102[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004010(&qword_100381938);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v102[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v108 = &v102[-v10];
  __chkstk_darwin(v9);
  char v113 = &v102[-v11];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  LODWORD(v106) = v20;
  uint64_t v107 = v21;
  swift_release();
  sub_100033364(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v22 = *a1;
  if (*a1)
  {
    id v23 = *(id *)(v22 + 112);
    char v24 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v25 = (v24 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v115 = v22;
    id v27 = *(id *)(v22 + 112);
    static Alignment.center.getter();
    UIContentSizeCategory v116 = UIContentSizeCategoryAccessibilityExtraLarge;
    char v28 = static UIContentSizeCategory.>= infix(_:_:)();
    uint64_t v114 = v8;
    if (v28)
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v183 = v17;
    uint64_t v184 = v19;
    char v29 = v106 & 1;
    char v185 = v106 & 1;
    uint64_t v186 = v107;
    uint64_t v187 = KeyPath;
    BOOL v188 = v25;
    __int16 v189 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v167, 0.0, 1, 0.0, 1);
    sub_100033364(v17, v19, v29);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = v115;
    id v31 = *(id *)(v115 + 112);
    char v32 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v32) {
      double v33 = 1.0;
    }
    else {
      double v33 = 0.5;
    }
    uint64_t v34 = swift_getKeyPath();
    char v35 = static Edge.Set.top.getter();
    char v165 = 1;
    char v36 = static Edge.Set.bottom.getter();
    char v166 = 1;
    v164[6] = v167[6];
    v164[7] = v167[7];
    v164[8] = v167[8];
    v164[9] = v167[9];
    _OWORD v164[2] = v167[2];
    v164[3] = v167[3];
    v164[4] = v167[4];
    v164[5] = v167[5];
    v164[0] = v167[0];
    v164[1] = v167[1];
    *(void *)&v164[10] = v34;
    *((double *)&v164[10] + 1) = v33;
    LOBYTE(v164[11]) = v35;
    *(_OWORD *)((char *)&v164[11] + 8) = 0u;
    *(_OWORD *)((char *)&v164[12] + 8) = 0u;
    BYTE8(v164[13]) = v165;
    LOBYTE(v164[14]) = v36;
    *(_OWORD *)((char *)&v164[14] + 8) = 0u;
    *(_OWORD *)((char *)&v164[15] + 8) = 0u;
    BYTE8(v164[16]) = 1;
    unint64_t v37 = v110;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100381940);
    sub_10004F6C4(&qword_100381948, &qword_100381940, (void (*)(void))sub_10004F694);
    uint64_t v38 = (uint64_t)v108;
    View.accessibility(addTraits:)();
    (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v37, v112);
    memcpy(v168, v164, 0x109uLL);
    sub_100043A24((uint64_t)v168);
    sub_10000D544(v38, (uint64_t)v113, &qword_100381938);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v39 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v41 = v40;
    char v43 = v42 & 1;
    static Font.body.getter();
    uint64_t v111 = Text.font(_:)();
    uint64_t v112 = v44;
    uint64_t v46 = v45;
    char v48 = v47;
    swift_release();
    sub_100033364(v39, v41, v43);
    swift_bridgeObjectRelease();
    id v49 = *(id *)(v30 + 112);
    LOBYTE(v41) = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v50 = (v41 & 1) == 0;
    uint64_t v51 = swift_getKeyPath();
    id v52 = *(id *)(v30 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v53 = v48;
    uint64_t v54 = v111;
    uint64_t v176 = v111;
    uint64_t v177 = v46;
    char v55 = v53 & 1;
    char v178 = v53 & 1;
    uint64_t v179 = v112;
    uint64_t v180 = v51;
    BOOL v181 = v50;
    __int16 v182 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v163, 0.0, 1, 0.0, 1);
    sub_100033364(v54, v46, v55);
    swift_release();
    swift_bridgeObjectRelease();
    long long v159 = v163[6];
    long long v160 = v163[7];
    long long v161 = v163[8];
    long long v162 = v163[9];
    long long v155 = v163[2];
    long long v156 = v163[3];
    long long v157 = v163[4];
    long long v158 = v163[5];
    long long v153 = v163[0];
    long long v154 = v163[1];
    uint64_t v56 = v115;
    id v57 = *(id *)(v115 + 112);
    LODWORD(v107) = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v111 = swift_getKeyPath();
    LODWORD(v110) = static Edge.Set.top.getter();
    unsigned __int8 v148 = 1;
    LODWORD(v112) = static Edge.Set.bottom.getter();
    LODWORD(v108) = v148;
    unsigned __int8 v149 = 1;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v58 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v60 = v59;
    char v62 = v61 & 1;
    static Font.body.getter();
    uint64_t v63 = Text.font(_:)();
    uint64_t v104 = v64;
    uint64_t v105 = v63;
    char v66 = v65;
    uint64_t v106 = v67;
    swift_release();
    sub_100033364(v58, v60, v62);
    swift_bridgeObjectRelease();
    id v68 = *(id *)(v56 + 112);
    int v103 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v69 = swift_getKeyPath();
    id v70 = *(id *)(v56 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v71 = v105;
    char v72 = v66 & 1;
    double v73 = 0.5;
    uint64_t v169 = v105;
    uint64_t v74 = v104;
    uint64_t v170 = v104;
    char v171 = v72;
    if (v107) {
      double v75 = 1.0;
    }
    else {
      double v75 = 0.5;
    }
    uint64_t v172 = v106;
    uint64_t v173 = v69;
    BOOL v174 = (v103 & 1) == 0;
    __int16 v175 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v138, 0.0, 1, 0.0, 1);
    sub_100033364(v71, v74, v72);
    swift_release();
    swift_bridgeObjectRelease();
    id v76 = *(id *)(v115 + 112);
    char v77 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v77) {
      double v73 = 1.0;
    }
    uint64_t v106 = swift_getKeyPath();
    LODWORD(v115) = static Edge.Set.top.getter();
    unsigned __int8 v117 = 1;
    unint64_t v79 = v113;
    uint64_t v78 = (uint64_t)v114;
    sub_10000D2A0((uint64_t)v113, (uint64_t)v114, &qword_100381938);
    unsigned __int8 v80 = v149;
    LODWORD(v116) = v149;
    LODWORD(v107) = v117;
    uint64_t v81 = v78;
    uint64_t v82 = v109;
    sub_10000D2A0(v81, v109, &qword_100381938);
    uint64_t v83 = sub_100004010(&qword_1003819A0);
    unint64_t v84 = (void *)(v82 + *(int *)(v83 + 48));
    v118[6] = v159;
    v118[7] = v160;
    v118[8] = v161;
    v118[9] = v162;
    v118[4] = v157;
    v118[5] = v158;
    v118[2] = v155;
    v118[3] = v156;
    v118[0] = v153;
    v118[1] = v154;
    *(void *)&v118[10] = v111;
    *((double *)&v118[10] + 1) = v75;
    LOBYTE(v118[11]) = (_BYTE)v110;
    *(_DWORD *)((char *)&v118[11] + 1) = *(_DWORD *)v152;
    DWORD1(v118[11]) = *(_DWORD *)&v152[3];
    *(_OWORD *)((char *)&v118[11] + 8) = 0u;
    *(_OWORD *)((char *)&v118[12] + 8) = 0u;
    char v85 = (char)v108;
    BYTE8(v118[13]) = (_BYTE)v108;
    *(_DWORD *)((char *)&v118[13] + 9) = *(_DWORD *)v151;
    HIDWORD(v118[13]) = *(_DWORD *)&v151[3];
    LOBYTE(v118[14]) = v112;
    *(_DWORD *)((char *)&v118[14] + 1) = *(_DWORD *)v150;
    DWORD1(v118[14]) = *(_DWORD *)&v150[3];
    *(_OWORD *)((char *)&v118[15] + 8) = 0u;
    *(_OWORD *)((char *)&v118[14] + 8) = 0u;
    BYTE8(v118[16]) = v80;
    memcpy(v84, v118, 0x109uLL);
    uint64_t v86 = (_OWORD *)(v82 + *(int *)(v83 + 64));
    long long v125 = v144;
    long long v126 = v145;
    long long v127 = v146;
    long long v128 = v147;
    long long v123 = v142;
    long long v124 = v143;
    long long v87 = v140;
    long long v121 = v140;
    long long v122 = v141;
    long long v119 = v138;
    long long v120 = v139;
    uint64_t v88 = v106;
    *(void *)&long long v129 = v106;
    *((double *)&v129 + 1) = v73;
    long long v89 = v145;
    long long v90 = v146;
    long long v91 = v143;
    v86[6] = v144;
    v86[7] = v89;
    long long v92 = v128;
    long long v93 = v129;
    v86[8] = v90;
    v86[9] = v92;
    long long v94 = v122;
    long long v95 = v123;
    v86[2] = v87;
    v86[3] = v94;
    char v96 = v115;
    LOBYTE(v130[0]) = v115;
    *(_OWORD *)((char *)v130 + 8) = 0u;
    *(_OWORD *)((char *)&v130[1] + 8) = 0u;
    char v97 = v107;
    BYTE8(v130[2]) = v107;
    v86[4] = v95;
    v86[5] = v91;
    long long v98 = v120;
    *uint64_t v86 = v119;
    v86[1] = v98;
    long long v99 = v130[0];
    long long v100 = v130[1];
    v86[10] = v93;
    v86[11] = v99;
    v86[12] = v100;
    *(_OWORD *)((char *)v86 + 201) = *(_OWORD *)((char *)&v130[1] + 9);
    sub_1000439C8((uint64_t)v118);
    sub_1000439C8((uint64_t)&v119);
    sub_10000950C((uint64_t)v79, &qword_100381938);
    v131[6] = v144;
    v131[7] = v145;
    v131[8] = v146;
    v131[9] = v147;
    v131[2] = v140;
    v131[3] = v141;
    v131[4] = v142;
    v131[5] = v143;
    v131[0] = v138;
    v131[1] = v139;
    uint64_t v132 = v88;
    double v133 = v73;
    char v134 = v96;
    long long v135 = 0u;
    long long v136 = 0u;
    char v137 = v97;
    sub_100043A24((uint64_t)v131);
    v164[6] = v159;
    v164[7] = v160;
    v164[8] = v161;
    v164[9] = v162;
    _OWORD v164[2] = v155;
    v164[3] = v156;
    v164[4] = v157;
    v164[5] = v158;
    v164[0] = v153;
    v164[1] = v154;
    *(void *)&v164[10] = v111;
    *((double *)&v164[10] + 1) = v75;
    LOBYTE(v164[11]) = (_BYTE)v110;
    *(_DWORD *)((char *)&v164[11] + 1) = *(_DWORD *)v152;
    DWORD1(v164[11]) = *(_DWORD *)&v152[3];
    *(_OWORD *)((char *)&v164[11] + 8) = 0u;
    *(_OWORD *)((char *)&v164[12] + 8) = 0u;
    BYTE8(v164[13]) = v85;
    *(_DWORD *)((char *)&v164[13] + 9) = *(_DWORD *)v151;
    HIDWORD(v164[13]) = *(_DWORD *)&v151[3];
    LOBYTE(v164[14]) = v112;
    *(_DWORD *)((char *)&v164[14] + 1) = *(_DWORD *)v150;
    DWORD1(v164[14]) = *(_DWORD *)&v150[3];
    *(_OWORD *)((char *)&v164[15] + 8) = 0u;
    *(_OWORD *)((char *)&v164[14] + 8) = 0u;
    BYTE8(v164[16]) = (_BYTE)v116;
    sub_100043A24((uint64_t)v164);
    return sub_10000950C((uint64_t)v114, &qword_100381938);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004E130@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = [self mainBundle];
  v48._object = (void *)0x80000001002C8F50;
  v7._uint64_t countAndFlagsBits = 1954047310;
  v7._object = (void *)0xE400000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v48._uint64_t countAndFlagsBits = 0xD000000000000050;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v48);

  long long v43 = *a1;
  uint64_t v10 = *((void *)a1 + 2);
  char v42 = *((unsigned char *)a1 + 24);
  uint64_t v11 = *((void *)a1 + 6);
  uint64_t v40 = *((void *)a1 + 4);
  uint64_t v41 = v10;
  uint64_t v39 = v11;
  uint64_t v12 = swift_allocObject();
  long long v13 = a1[1];
  *(_OWORD *)(v12 + 16) = *a1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = a1[2];
  *(void *)(v12 + 64) = *((void *)a1 + 6);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  char v47 = 1;
  sub_10004ED30((uint64_t)&v43);
  sub_10004F4AC((uint64_t)&v41);
  sub_10004ED30((uint64_t)&v40);
  swift_retain();
  sub_10003E68C((uint64_t)&v39);
  State.init(wrappedValue:)();
  char v47 = 0;
  State.init(wrappedValue:)();
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  sub_100008F88(a2, v14);
  double v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  char v34 = static Edge.Set.all.getter();
  char v46 = 0;
  char v45 = 0;
  char v44 = 0;
  char v33 = static Edge.Set.top.getter();
  char v23 = v46;
  LOBYTE(v14) = v45;
  LOBYTE(v15) = v44;
  char v47 = 1;
  char v24 = static Edge.Set.bottom.getter();
  uint64_t v25 = a2[3];
  uint64_t v26 = a2[4];
  sub_100008F88(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 112))(v25, v26);
  uint64_t result = EdgeInsets.init(_all:)();
  char v28 = v47;
  *(void *)a3 = KeyPath;
  *(unsigned char *)(a3 + 8) = v23;
  *(void *)(a3 + 16) = v35;
  *(unsigned char *)(a3 + 24) = v14;
  *(Swift::String *)(a3 + 32) = v9;
  *(void *)(a3 + 48) = sub_10004F424;
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = v37;
  *(void *)(a3 + 72) = v38;
  *(unsigned char *)(a3 + 80) = v37;
  *(void *)(a3 + 88) = v38;
  *(unsigned char *)(a3 + 96) = v34;
  *(double *)(a3 + 104) = v16;
  *(void *)(a3 + 112) = v18;
  *(void *)(a3 + 120) = v20;
  *(void *)(a3 + 128) = v22;
  *(unsigned char *)(a3 + 136) = v15;
  *(unsigned char *)(a3 + 144) = v33;
  *(_OWORD *)(a3 + 168) = 0u;
  *(_OWORD *)(a3 + 152) = 0u;
  *(unsigned char *)(a3 + 184) = v28;
  *(unsigned char *)(a3 + 192) = v24;
  *(void *)(a3 + 200) = v29;
  *(void *)(a3 + 208) = v30;
  *(void *)(a3 + 216) = v31;
  *(void *)(a3 + 224) = v32;
  *(unsigned char *)(a3 + 232) = 0;
  return result;
}

uint64_t sub_10004E434(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = v1;
  sub_10004ED30((uint64_t)&v8);
  swift_retain();
  sub_10003E68C((uint64_t)&v9);
  sub_100004010(&qword_100381910);
  Binding.wrappedValue.getter();
  uint64_t v2 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001B1A30(0, v7[2] + 1, 1, v7);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001B1A30((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  v5[4] = 0xD000000000000024;
  v5[5] = 0x80000001002C8FB0;
  Binding.wrappedValue.setter();
  sub_10004F584((uint64_t)&v8);
  swift_release();
  return sub_10004F5B0((uint64_t)&v9);
}

uint64_t sub_10004E570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v31 = sub_100004010(&qword_1003818C8);
  __chkstk_darwin(v31);
  uint64_t v30 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004010(&qword_1003818D0);
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100004010(&qword_1003818D8);
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_1003818E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v16 = (char *)&v27 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  LOBYTE(a1) = *(unsigned char *)(a1 + 24);
  sub_10004C6D4(v17, a1);
  char v18 = sub_10004EE90(v17, a1);
  sub_10004C738(v17, a1);
  if (v18)
  {
    uint64_t v19 = sub_100004010(&qword_1003818F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 1, 1, v19);
    uint64_t v20 = sub_100009B18(&qword_1003818E8, &qword_1003818D8);
    uint64_t v33 = v8;
    uint64_t v34 = v20;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10000950C((uint64_t)v14, &qword_1003818E0);
  }
  else
  {
    static ToolbarItemPlacement.principal.getter();
    ToolbarItem<>.init(placement:content:)();
    uint64_t v21 = sub_100009B18(&qword_1003818E8, &qword_1003818D8);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v22 = sub_100004010(&qword_1003818F0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 0, 1, v22);
    uint64_t v33 = v8;
    uint64_t v34 = v21;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10000950C((uint64_t)v14, &qword_1003818E0);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  }
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  sub_10004F324();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v23 = v30 + *(int *)(v31 + 48);
  sub_10000D2A0((uint64_t)v16, v30, &qword_1003818E0);
  uint64_t v24 = v23;
  uint64_t v25 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v24, v6, v29);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  return sub_10000950C((uint64_t)v16, &qword_1003818E0);
}

uint64_t sub_10004EA84@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  v18._object = (void *)0x80000001002C8F00;
  v3._object = (void *)0x80000001002C8EE0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v18);

  sub_100033310();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.headline.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_100033364(v5, v7, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_10004EBD4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10004F378((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_10004EC68@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9BC(a1);
}

uint64_t sub_10004ECB0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004D058((uint64_t *)(v1 + 16), (void *)(v1 + 72), a1);
}

uint64_t sub_10004ECC0()
{
  swift_release();
  sub_10004C738(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 72);

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10004ED24@<X0>(uint64_t a1@<X8>)
{
  return sub_10004E130((long long *)(v1 + 16), (void *)(v1 + 72), a1);
}

uint64_t sub_10004ED30(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004ED5C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004E570(*(void *)(v1 + 16), a1);
}

uint64_t sub_10004ED64@<X0>(unsigned char *a1@<X8>)
{
  return sub_10004EDC4((void (*)(void))sub_10004F530, a1);
}

uint64_t sub_10004ED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004EE40(a1, a2, a3, a4, (void (*)(void))sub_10004F530);
}

uint64_t sub_10004EDA4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10004EDC4((void (*)(void))sub_10004F4DC, a1);
}

uint64_t sub_10004EDC4@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a2 = v4;
  return result;
}

uint64_t sub_10004EE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004EE40(a1, a2, a3, a4, (void (*)(void))sub_10004F4DC);
}

uint64_t sub_10004EE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10004EE90(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  char v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1001B3178(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10004C738(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10004F094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_1003819B0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D2A0(v2, (uint64_t)v10, &qword_1003819B0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_10000D544((uint64_t)v10, a1, &qword_1003819B8);
  }
  os_log_type_t v12 = static os_log_type_t.fault.getter();
  uint64_t v13 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[1] = a1;
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17[2] = sub_1001B3178(0xD000000000000019, 0x80000001002C91A0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_10004F324()
{
  unint64_t result = qword_1003818F8;
  if (!qword_1003818F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003818F8);
  }
  return result;
}

uint64_t sub_10004F378(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004F3C8()
{
  swift_release();
  sub_10004C738(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10004F424()
{
  return sub_10004E434(v0 + 16);
}

uint64_t sub_10004F42C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10004EDC4((void (*)(void))sub_10004F530, a1);
}

uint64_t sub_10004F44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004EE40(a1, a2, a3, a4, (void (*)(void))sub_10004F530);
}

uint64_t sub_10004F46C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10004EDC4((void (*)(void))sub_10004F4DC, a1);
}

uint64_t sub_10004F48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10004EE40(a1, a2, a3, a4, (void (*)(void))sub_10004F4DC);
}

uint64_t sub_10004F4AC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10004F4DC()
{
  unint64_t result = qword_100381900;
  if (!qword_100381900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381900);
  }
  return result;
}

unint64_t sub_10004F530()
{
  unint64_t result = qword_100381908;
  if (!qword_100381908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381908);
  }
  return result;
}

uint64_t sub_10004F584(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004F5B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004F5EC@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10004F618@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10004F644()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_10004F66C()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_10004F694()
{
  return sub_10004F6C4(&qword_100381950, &qword_100381958, (void (*)(void))sub_10004F740);
}

uint64_t sub_10004F6C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004F740()
{
  unint64_t result = qword_100381960;
  if (!qword_100381960)
  {
    sub_1000094C4(&qword_100381968);
    sub_10004F6C4(&qword_100381970, &qword_100381978, (void (*)(void))sub_10004F80C);
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381960);
  }
  return result;
}

uint64_t sub_10004F80C()
{
  return sub_10004F6C4(&qword_100381980, &qword_100381988, (void (*)(void))sub_100033620);
}

unint64_t sub_10004F840()
{
  unint64_t result = qword_1003819A8;
  if (!qword_1003819A8)
  {
    sub_1000094C4(&qword_1003818A0);
    sub_1000094C4(&qword_100381890);
    sub_1000094C4(&qword_1003818B8);
    sub_1000094C4(&qword_1003818A8);
    sub_100009B18(&qword_1003818B0, &qword_1003818A8);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003818C0, &qword_1003818B8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003819A8);
  }
  return result;
}

uint64_t IDSOffGridMode.debugDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6E776F6E6B6E752ELL;
    case 2:
      return 0x64656C62616E652ELL;
    case 1:
      return 0x656C62617369642ELL;
  }
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0x756C61567761722ELL;
}

uint64_t sub_10004FA70()
{
  return IDSOffGridMode.debugDescription.getter(*v0);
}

uint64_t IDSOffGridModePublishStatus.debugDescription.getter(uint64_t a1)
{
  uint64_t result = 0x676E69646E65702ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 3:
      uint64_t result = 0x737365636375732ELL;
      break;
    case 2:
      uint64_t result = 0x64656C6961662ELL;
      break;
    default:
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      uint64_t result = 0x756C61567761722ELL;
      break;
  }
  return result;
}

uint64_t sub_10004FB7C()
{
  return IDSOffGridModePublishStatus.debugDescription.getter(*v0);
}

uint64_t sub_10004FB84()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726566666F2ELL;
  }
}

uint64_t sub_10004FBE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

void sub_10004FC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  uint64_t v9 = *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 8];
  uint64_t v12 = *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 16];
  uint64_t v11 = *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 24];
  if (!v9)
  {
    if (!a2) {
      return;
    }
    goto LABEL_17;
  }
  if (!a2)
  {
LABEL_17:
    sub_100052098(*(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance], *(void *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 8]);
    sub_100052098(a1, a2);
    sub_100049A78(v10, v9);
    sub_100049A78(a1, a2);
    goto LABEL_24;
  }
  BOOL v13 = v10 == a1 && v9 == a2;
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
LABEL_21:
    sub_100052098(v10, v9);
    sub_100052098(v10, v9);
    goto LABEL_22;
  }
  if (v11)
  {
    if (a4)
    {
      if (v12 != a3 || v11 != a4)
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100052098(v10, v9);
        sub_100052098(v10, v9);
        sub_100052098(a1, a2);
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
      sub_100052098(v10, v9);
      sub_100052098(v10, v9);
LABEL_29:
      sub_100052098(a1, a2);
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
      sub_100049A78(v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_21;
  }
  sub_100052098(v10, v9);
  sub_100052098(v10, v9);
  if (!a4) {
    goto LABEL_29;
  }
LABEL_22:
  sub_100052098(a1, a2);
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  sub_100049A78(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  id v16 = [v4 view];
  if (v16)
  {
    id v17 = v16;
    [v16 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
}

void sub_10004FF24(void *a1)
{
  Swift::String v2 = v1;
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_exclusionPath];
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_exclusionPath] = a1;
  id v10 = a1;
  if (a1)
  {
    if (v4)
    {
      sub_1000520DC();
      id v5 = v4;
      id v6 = v10;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
        id v10 = v6;
        goto LABEL_8;
      }
    }
  }
  else if (!v4)
  {
    id v5 = 0;
    goto LABEL_8;
  }
  id v8 = [v2 view];
  if (!v8)
  {
    __break(1u);
    return;
  }
  id v9 = v8;
  [v8 setNeedsLayout];

  id v5 = v10;
  id v10 = v9;
LABEL_8:
}

id sub_100050020()
{
  id v0 = [objc_allocWithZone((Class)UITextView) init];
  [v0 setBackgroundColor:0];
  [v0 setEditable:0];
  [v0 setSelectable:0];
  [v0 setScrollEnabled:0];
  [v0 setContentInsetAdjustmentBehavior:2];
  id v1 = [v0 textContainer];
  [v1 setLineBreakMode:0];

  Swift::String v2 = self;
  id v3 = [v2 labelColor];
  [v0 setTextColor:v3];

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  [v0 setContentInset:UIEdgeInsetsZero.top, left, bottom, right];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, left, bottom, right];
  id v7 = [v0 textContainer];
  [v7 setLineFragmentPadding:0.0];

  id v8 = [v0 layer];
  id v9 = [v2 blackColor];
  id v10 = [v9 CGColor];

  [v8 setShadowColor:v10];
  id v11 = [v0 layer];
  LODWORD(v12) = 1058642330;
  [v11 setShadowOpacity:v12];

  id v13 = [v0 layer];
  [v13 setShadowRadius:5.0];

  id v14 = [v0 layer];
  [v14 setShadowOffset:0.0, 1.0];

  return v0;
}

id sub_1000502C8()
{
  id v0 = [objc_allocWithZone((Class)UITextView) init];
  [v0 setBackgroundColor:0];
  [v0 setEditable:0];
  [v0 setSelectable:0];
  [v0 setScrollEnabled:0];
  [v0 setContentInsetAdjustmentBehavior:2];
  id v1 = [v0 textContainer];
  [v1 setLineBreakMode:0];

  Swift::String v2 = self;
  id v3 = [v2 secondaryLabelColor];
  [v0 setTextColor:v3];

  id v4 = [v0 layer];
  [v4 setCompositingFilter:kCAFilterPlusL];

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  [v0 setContentInset:UIEdgeInsetsZero.top, left, bottom, right];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, left, bottom, right];
  id v8 = [v0 textContainer];
  [v8 setLineFragmentPadding:0.0];

  id v9 = [v0 layer];
  id v10 = [v2 blackColor];
  id v11 = [v10 CGColor];

  [v9 setShadowColor:v11];
  id v12 = [v0 layer];
  LODWORD(v13) = 1058642330;
  [v12 setShadowOpacity:v13];

  id v14 = [v0 layer];
  [v14 setShadowRadius:5.0];

  id v15 = [v0 layer];
  [v15 setShadowOffset:0.0, 1.0];

  return v0;
}

id sub_1000505A4()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state;
  uint64_t v2 = qword_10037DCF0;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = &v3[v1];
  uint64_t v5 = qword_1003A98A8;
  char v6 = word_1003A98B0;
  char v7 = HIBYTE(word_1003A98B0);
  char v8 = byte_1003A98B2;
  uint64_t v9 = qword_1003A98B8;
  char v10 = word_1003A98F0;
  char v11 = HIBYTE(word_1003A98F0);
  char v12 = byte_1003A9908;
  long long v13 = xmmword_1003A98C0;
  long long v14 = unk_1003A98D0;
  long long v15 = xmmword_1003A98E0;
  long long v16 = *(_OWORD *)&qword_1003A98F8;
  *id v4 = byte_1003A98A0;
  *((void *)v4 + 1) = v5;
  v4[16] = v6;
  v4[17] = v7;
  v4[18] = v8;
  *((void *)v4 + 3) = v9;
  *((_OWORD *)v4 + 2) = v13;
  *((_OWORD *)v4 + 3) = v14;
  *((_OWORD *)v4 + 4) = v15;
  v4[80] = v10;
  v4[81] = v11;
  *(_OWORD *)(v4 + 88) = v16;
  v4[104] = v12;
  *(_WORD *)&v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity] = 512;
  id v17 = &v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivityStatusText];
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0xE000000000000000;
  uint64_t v18 = &v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  *(_OWORD *)uint64_t v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_coveredProgress] = 0;
  uint64_t v19 = &v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v20 = &v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_target];
  *(void *)uint64_t v20 = 0;
  v20[8] = 4;
  *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_exclusionPath] = 0;
  uint64_t v21 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v3[v21] = sub_100050020();
  uint64_t v22 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel;
  *(void *)&v3[v22] = sub_1000502C8();

  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for ConnectionAssistantConnectionViewController();
  return [super initWithNibName:0 bundle:0];
}

id sub_1000507B4()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ConnectionAssistantConnectionViewController();
  [super viewDidLoad];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = result;
  [result addSubview:*(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel]];

  id result = [v0 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v3 = result;
  [result addSubview:*(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel]];

  id result = [v0 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v4 = result;
  id v5 = [result layer];

  [v5 setAllowsGroupBlending:0];
  id result = [v0 view];
  if (result)
  {
    char v6 = result;
    id v7 = [result layer];

    [v7 setAllowsGroupOpacity:0];
    return sub_100051ADC();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_100050968()
{
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)v0;
  v101.receiver = v0;
  v101.super_class = (Class)type metadata accessor for ConnectionAssistantConnectionViewController();
  [super viewWillLayoutSubviews];
  CGFloat ty = *(double *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel];
  id v3 = (uint64_t *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 8];
  if (v4)
  {
    uint64_t v5 = *v3;
    sub_100052098(*v3, v4);
    swift_bridgeObjectRetain();
    sub_100049A78(v5, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [*(id *)&ty setText:v6];

  id v7 = *(void **)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel);
  uint64_t v8 = v3[1];
  if (v8)
  {
    uint64_t v9 = v3[3];
    uint64_t v10 = *v3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_100049A78(v10, v8);
    if (!v9) {
      swift_bridgeObjectRetain();
    }
  }
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v11];

  char v12 = *(void **)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_exclusionPath);
  if (v12)
  {
    long long v13 = self;
    id v14 = v12;
    id v15 = [v13 preferredFontForTextStyle:UIFontTextStyleBody];
    id v16 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
    [v16 scaledValueForValue:14.0];
    double v18 = v17;

    id v19 = [v15 fontWithSize:v18];
    uint64_t v96 = sub_100004010((uint64_t *)&unk_100381A40);
    uint64_t inited = swift_initStackObject();
    long long v95 = xmmword_1002B3350;
    *(_OWORD *)(inited + 16) = xmmword_1002B3350;
    *(void *)(inited + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
    long long v94 = UIFontWeightTrait;
    unint64_t v21 = sub_1002839C0(inited);
    id v22 = sub_1001FC950(v21);

    swift_bridgeObjectRelease();
    [*(id *)&ty setFont:v22];

    [*(id *)&ty setTextAlignment:4];
    id v23 = [*(id *)&ty textContainer];
    id v24 = [v23 exclusionPaths];

    sub_1000520DC();
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    char v97 = v13;
    if (!(v25 >> 62))
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_10;
    }
  }
  else
  {
    double v73 = self;
    id v74 = [v73 preferredFontForTextStyle:UIFontTextStyleHeadline];
    [*(id *)&ty setFont:v74];

    [*(id *)&ty setTextAlignment:1];
    id v75 = [*(id *)&ty textContainer];
    sub_1000520DC();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v75 setExclusionPaths:isa];

    id v77 = [v73 preferredFontForTextStyle:UIFontTextStyleFootnote];
    [v7 setFont:v77];

    [v7 setTextAlignment:1];
    uint64_t v78 = self;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = isEscapingClosureAtFileLocation;
    id v7 = (void *)swift_allocObject();
    uint64_t v7[2] = sub_100052154;
    _OWORD v7[3] = v79;
    *(void *)&aBlock.tx = sub_10005216C;
    *(void *)&aBlock.CGFloat ty = v7;
    *(void *)&aBlock.a = _NSConcreteStackBlock;
    *(void *)&aBlock.b = 1107296256;
    *(void *)&aBlock.c = sub_1001CAB48;
    *(void *)&aBlock.d = &unk_1003507A8;
    id v14 = _Block_copy(&aBlock);
    CGFloat ty = aBlock.ty;
    id v80 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [v78 performWithoutAnimation:v14];
    _Block_release(v14);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  long long v98 = v14;
  if (!v26)
  {
    [v14 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
    {
      double v27 = v99;
      CGAffineTransformMakeTranslation(&aBlock, -28.0, -24.0);
      [*(id *)&v99 applyTransform:&aBlock];
      id v28 = [*(id *)&ty textContainer];
      sub_100004010(&qword_1003913B0);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1002B3AF0;
      *(double *)(v29 + 32) = v27;
      *(void *)&aBlock.a = v29;
      specialized Array._endMutation()();
      id v30 = *(id *)&v27;
      Class v31 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v28 setExclusionPaths:v31];
    }
  }
  p_base_prots = &SessionEnvironmentFactory.base_prots;
  id v33 = [(id)isEscapingClosureAtFileLocation view];
  if (!v33) {
    goto LABEL_32;
  }
  uint64_t v34 = v33;
  uint64_t v35 = (SEL *)&SessionEnvironmentFactory.base_prots;
  [v33 bounds];
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;

  v102.origin.x = v37;
  v102.origin.y = v39;
  v102.size.width = v41;
  v102.size.height = v43;
  double v99 = CGRectGetWidth(v102) + -28.0 + -28.0;
  id v44 = [*(id *)&ty textContainer];
  id v45 = [v44 exclusionPaths];

  unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v81) {
      goto LABEL_16;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_26;
  }
LABEL_16:
  if ((v46 & 0xC000000000000001) != 0) {
    goto LABEL_30;
  }
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v46 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
    {
      Swift::String v48 = i;
      swift_bridgeObjectRelease();
      id v49 = [isEscapingClosureAtFileLocation p_base_prots[205]];
      if (!v49) {
        break;
      }
      BOOL v50 = v49;
      [v49 v35[206]];
      CGFloat v52 = v51;
      CGFloat v54 = v53;
      CGFloat v56 = v55;
      CGFloat v58 = v57;

      v103.origin.x = v52;
      v103.origin.y = v54;
      v103.size.width = v56;
      v103.size.height = v58;
      double Width = CGRectGetWidth(v103);
      id v60 = [isEscapingClosureAtFileLocation p_base_prots[205]];
      if (!v60) {
        goto LABEL_34;
      }
      char v61 = v60;
      double v62 = Width + -28.0;
      [v60 v35[206]];
      CGFloat v64 = v63;
      CGFloat v66 = v65;
      CGFloat v68 = v67;
      CGFloat v70 = v69;

      v104.origin.x = v64;
      v104.origin.y = v66;
      v104.size.width = v68;
      v104.size.height = v70;
      double v71 = CGRectGetWidth(v104);
      [v48 v35[206]];
      double MaxX = CGRectGetMaxX(v105);

      double v99 = v62 + MaxX - v71;
LABEL_27:
      p_base_prots = (__objc2_prot_list **)v96;
      id v82 = [v97 preferredFontForTextStyle:UIFontTextStyleFootnote];
      id v83 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleFootnote];
      [v83 scaledValueForValue:12.0];
      double v85 = v84;

      id v86 = [v82 fontWithSize:v85];
      uint64_t v87 = swift_initStackObject();
      *(_OWORD *)(v87 + 16) = v95;
      *(void *)(v87 + 32) = v94;
      *(UIFontWeight *)(v87 + 40) = UIFontWeightRegular;
      uint64_t v88 = v94;
      unint64_t v89 = sub_1002839C0(v87);
      id v90 = sub_1001FC950(v89);

      swift_bridgeObjectRelease();
      [v7 setFont:v90];

      [v7 setTextAlignment:4];
      uint64_t v35 = (SEL *)self;
      uint64_t v91 = swift_allocObject();
      *(void *)(v91 + 16) = isEscapingClosureAtFileLocation;
      *(void *)(v91 + 24) = &v99;
      *(_OWORD *)(v91 + 32) = xmmword_1002B4510;
      *(_OWORD *)(v91 + 48) = xmmword_1002B4510;
      id v7 = (void *)swift_allocObject();
      uint64_t v7[2] = sub_1000521C4;
      _OWORD v7[3] = v91;
      *(void *)&aBlock.tx = sub_1000523B8;
      *(void *)&aBlock.CGFloat ty = v7;
      *(void *)&aBlock.a = _NSConcreteStackBlock;
      *(void *)&aBlock.b = 1107296256;
      *(void *)&aBlock.c = sub_1001CAB48;
      *(void *)&aBlock.d = &unk_100350820;
      long long v92 = _Block_copy(&aBlock);
      id v93 = (id)isEscapingClosureAtFileLocation;
      swift_retain();
      swift_release();
      [(SEL *)v35 performWithoutAnimation:v92];

      _Block_release(v92);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
LABEL_30:
      ;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1000514A4(char *a1, double *a2, double a3, double a4)
{
  uint64_t v8 = *(void **)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel];
  double v9 = *a2;
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  NSString v11 = result;
  [result bounds];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v36.origin.x = v13;
  v36.origin.y = v15;
  v36.size.width = v17;
  v36.size.height = v19;
  [v8 sizeThatFits:v9 height:CGRectGetHeight(v36)];
  [v8 bounds];
  [v8 setBounds:];
  [v8 bounds];
  CGFloat v20 = CGRectGetMidX(v37) + a4;
  [v8 bounds];
  [v8 setCenter:v20, CGRectGetMidY(v38) + a3];
  unint64_t v21 = *(void **)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel];
  double v22 = *a2;
  id result = [a1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v23 = result;
  [result bounds];
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;

  v39.origin.x = v25;
  v39.origin.y = v27;
  v39.size.width = v29;
  v39.size.height = v31;
  [v21 sizeThatFits:v22 height:CGRectGetHeight(v39)];
  [v21 bounds];
  [v21 setBounds:];
  [v21 bounds];
  double v32 = CGRectGetMidX(v40) + a4;
  [v8 bounds];
  CGFloat v33 = CGRectGetHeight(v41) + a3 + 3.0;
  [v21 bounds];
  double v34 = v33 + CGRectGetMidY(v42);

  return [v21 setCenter:v32, v34];
}

id sub_1000516F0(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel];
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = result;
  [result bounds];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v69.origin.x = v6;
  v69.origin.y = v8;
  v69.size.width = v10;
  v69.size.height = v12;
  double Width = CGRectGetWidth(v69);
  id result = [a1 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  double v14 = result;
  [result bounds];
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;

  v70.origin.x = v16;
  v70.origin.y = v18;
  v70.size.width = v20;
  v70.size.height = v22;
  [v2 sizeThatFits:CGSizeMake(Width + -32.0 + -32.0, CGRectGetHeight(v70))];
  [v2 bounds];
  [v2 setBounds:];
  id v23 = *(void **)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel];
  id result = [a1 view];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v24 = result;
  [result bounds];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  v71.origin.x = v26;
  v71.origin.y = v28;
  v71.size.width = v30;
  v71.size.height = v32;
  double v33 = CGRectGetWidth(v71);
  id result = [a1 view];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v34 = result;
  [result bounds];
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;

  v72.origin.x = v36;
  v72.origin.y = v38;
  v72.size.width = v40;
  v72.size.height = v42;
  [v23 sizeThatFits:v33 + -32.0 + -32.0, CGRectGetHeight(v72)];
  [v23 bounds];
  [v23 setBounds:];
  id result = [a1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  CGFloat v43 = result;
  [result bounds];
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;
  CGFloat v51 = v50;

  v73.origin.x = v45;
  v73.origin.y = v47;
  v73.size.width = v49;
  v73.size.height = v51;
  double MidX = CGRectGetMidX(v73);
  double v53 = (double *)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation];
  double v54 = *(double *)&a1[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation + 8] + 64.0;
  [v2 bounds];
  [v2 setCenter:MidX, v54 + CGRectGetMidY(v74)];
  id result = [a1 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  double v55 = result;
  [result bounds];
  CGFloat v57 = v56;
  CGFloat v59 = v58;
  CGFloat v61 = v60;
  CGFloat v63 = v62;

  v75.origin.x = v57;
  v75.origin.y = v59;
  v75.size.width = v61;
  v75.size.height = v63;
  double v64 = CGRectGetMidX(v75);
  double v65 = v53[1] + 64.0;
  [v2 bounds];
  double v66 = v65 + CGRectGetHeight(v76) + 6.0;
  [v23 bounds];
  double v67 = v66 + CGRectGetMidY(v77);

  return [v23 setCenter:v64, v67];
}

id sub_100051ADC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state];
  int v2 = v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 16];
  if (v2 != 9) {
    goto LABEL_5;
  }
  int v3 = v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity + 1] << 8;
  *(_WORD *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity] = 512;
  if (v3 == 512) {
    goto LABEL_10;
  }
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
LABEL_5:
    char v5 = v1[18];
    __int16 v6 = *(_WORD *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity];
    *(_WORD *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity] = v2 & 0xFEFF | ((v5 & 1) << 8);
    if ((v6 & 0xFF00) != 0x200)
    {
      BOOL v7 = (v5 & 1) != 0;
      if (v2 == v6 && ((v7 ^ ((v6 & 0x100) == 0)) & 1) != 0) {
        goto LABEL_10;
      }
    }
    id result = [v0 view];
    id v4 = result;
    if (!result)
    {
      __break(1u);
      goto LABEL_27;
    }
  }
  [v4 setNeedsLayout];

LABEL_10:
  if (*((void *)v1 + 4))
  {
    uint64_t v9 = *((void *)v1 + 3);
    unint64_t v10 = *((void *)v1 + 4);
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  double v11 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivityStatusText];
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivityStatusText];
  uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivityStatusText
                     + 8];
  *(void *)double v11 = v9;
  *((void *)v11 + 1) = v10;
  swift_bridgeObjectRetain();
  BOOL v14 = v9 == v13 && v10 == v12;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    id result = [v0 view];
    if (result)
    {
      CGFloat v26 = result;
      [result setNeedsLayout];
      swift_bridgeObjectRelease();

      uint64_t v15 = *((void *)v1 + 6);
      if (v15) {
        goto LABEL_19;
      }
LABEL_22:
      double v27 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
      uint64_t v28 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
      uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 8];
      uint64_t v30 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance
                         + 16];
      uint64_t v31 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance
                         + 24];
      *(_OWORD *)double v27 = 0u;
      *((_OWORD *)v27 + 1) = 0u;
      sub_100052098(v28, v29);
      sub_100049A78(v28, v29);
      sub_10004FC08(v28, v29, v30, v31);
      uint64_t v24 = v28;
      uint64_t v25 = v29;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v1 + 6);
  if (!v15) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v16 = *((void *)v1 + 5);
  uint64_t v18 = *((void *)v1 + 7);
  uint64_t v17 = *((void *)v1 + 8);
  double v19 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  uint64_t v20 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  uint64_t v21 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 8];
  uint64_t v22 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 16];
  uint64_t v23 = *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance + 24];
  *(void *)double v19 = v16;
  *((void *)v19 + 1) = v15;
  *((void *)v19 + 2) = v18;
  *((void *)v19 + 3) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100052098(v20, v21);
  sub_100049A78(v20, v21);
  sub_10004FC08(v20, v21, v22, v23);
  uint64_t v24 = v20;
  uint64_t v25 = v21;
LABEL_23:

  return (id)sub_100049A78(v24, v25);
}

id sub_100051DC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConnectionAssistantConnectionViewController();
  [super dealloc];
}

uint64_t type metadata accessor for ConnectionAssistantConnectionViewController()
{
  return self;
}

_WORD *initializeBufferWithCopyOfBuffer for CoreTelephonySPIAgent.SelectRoadsideProviderResponse(_WORD *result, _WORD *a2)
{
  *id result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TryOutModel.OfferedState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantConnectionViewController.Connectivity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)id result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100052060);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantConnectionViewController.Connectivity()
{
  return &type metadata for ConnectionAssistantConnectionViewController.Connectivity;
}

uint64_t sub_100052098(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1000520DC()
{
  unint64_t result = qword_100381A38;
  if (!qword_100381A38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100381A38);
  }
  return result;
}

uint64_t sub_10005211C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100052154()
{
  return sub_1000516F0(*(char **)(v0 + 16));
}

uint64_t sub_10005215C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005216C()
{
  return sub_1001CAB20(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100052174(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052184()
{
  return swift_release();
}

uint64_t sub_10005218C()
{
  return _swift_deallocObject(v0, 64, 7);
}

id sub_1000521C4()
{
  return sub_1000514A4(*(char **)(v0 + 16), *(double **)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1000521D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000521E4()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state;
  if (qword_10037DCF0 != -1) {
    swift_once();
  }
  uint64_t v2 = &v0[v1];
  uint64_t v3 = qword_1003A98A8;
  char v4 = word_1003A98B0;
  char v5 = HIBYTE(word_1003A98B0);
  char v6 = byte_1003A98B2;
  uint64_t v7 = qword_1003A98B8;
  char v8 = word_1003A98F0;
  char v9 = HIBYTE(word_1003A98F0);
  char v10 = byte_1003A9908;
  long long v11 = xmmword_1003A98C0;
  long long v12 = unk_1003A98D0;
  long long v13 = xmmword_1003A98E0;
  long long v14 = *(_OWORD *)&qword_1003A98F8;
  char *v2 = byte_1003A98A0;
  *((void *)v2 + 1) = v3;
  v2[16] = v4;
  v2[17] = v5;
  v2[18] = v6;
  *((void *)v2 + 3) = v7;
  *((_OWORD *)v2 + 2) = v11;
  *((_OWORD *)v2 + 3) = v12;
  *((_OWORD *)v2 + 4) = v13;
  v2[80] = v8;
  v2[81] = v9;
  *(_OWORD *)(v2 + 88) = v14;
  v2[104] = v10;
  *(_WORD *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity] = 512;
  uint64_t v15 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivityStatusText];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0xE000000000000000;
  uint64_t v16 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_connectionGuidance];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_coveredProgress] = 0;
  uint64_t v17 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_target];
  *(void *)uint64_t v18 = 0;
  v18[8] = 4;
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_exclusionPath] = 0;
  uint64_t v19 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceTitleLabel;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v0[v19] = sub_100050020();
  uint64_t v20 = OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_guidanceSubtitleLabel;
  *(void *)&v0[v20] = sub_1000502C8();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t static ConnectionAssistantRenderer.Buffers.Error.__derived_enum_equals(_:_:)()
{
  return 1;
}

Swift::Int ConnectionAssistantRenderer.Buffers.Error.hashValue.getter()
{
  return Hasher._finalize()();
}

void ConnectionAssistantRenderer.Buffers.Error.hash(into:)()
{
}

Swift::Int sub_100052438()
{
  return Hasher._finalize()();
}

char *sub_100052478(char a1, void *a2)
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  uint64_t v6 = type metadata accessor for Date();
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__kPixelFormat;
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__kPixelFormat] = 80;
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__metalView;
  type metadata accessor for MetalView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  long long v11 = v3;
  id v12 = [v10 init];
  uint64_t v41 = v9;
  *(void *)&v3[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink;
  *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink] = 0;
  long long v14 = &v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_earth];
  static Date.now.getter();
  sub_1000FBF1C((uint64_t)v8, v44);
  memcpy(v14, v44, 0x203uLL);
  uint64_t v15 = (uint64_t)&v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_camera];
  sub_100053538((uint64_t)v45);
  sub_100053360((uint64_t)v45, v15);
  HIDWORD(v38) = v5;
  v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__style] = v5;
  *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__device] = a2;
  id v16 = [(id)swift_unknownObjectRetain() newCommandQueue];
  uint64_t v40 = v13;
  if (v16)
  {
    *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__commandQueue] = v16;
    swift_unknownObjectRetain();
    [v12 setOpaque:0];
    id v17 = [v12 layer];
    self;
    uint64_t v18 = (void *)swift_dynamicCastObjCClass();
    if (v18) {
      [v18 setDevice:a2];
    }

    uint64_t v19 = v41;
    id v20 = [*(id *)&v3[v41] layer];
    self;
    uint64_t v21 = (void *)swift_dynamicCastObjCClass();
    if (v21) {
      [v21 setOpaque:0];
    }

    id v22 = [*(id *)&v3[v19] layer];
    self;
    uint64_t v23 = (void *)swift_dynamicCastObjCClass();
    if (v23) {
      [v23 setPixelFormat:*(void *)&v3[v46]];
    }

    id v24 = [*(id *)&v3[v19] layer];
    self;
    uint64_t v25 = (void *)swift_dynamicCastObjCClass();
    if (v25) {
      [v25 setFramebufferOnly:0];
    }

    uint64_t v26 = *(void *)&v3[v46];
    type metadata accessor for ConnectionAssistantRenderer();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v27 = v39;
    uint64_t v28 = ConnectionAssistantRenderer.init(style:device:pixelFormat:)(SBYTE4(v38), a2, v26);
    if (!v27)
    {
      *(void *)&v11[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__renderer] = v28;

      uint64_t v30 = (objc_class *)type metadata accessor for ConnectionAssistantEarthViewController();
      v43.receiver = v11;
      v43.super_class = v30;
      id v31 = [super initWithNibName:0 bundle:0];
      CGFloat v32 = (objc_class *)type metadata accessor for WeakCADisplayLinkTarget();
      double v33 = (char *)objc_allocWithZone(v32);
      *(void *)&v33[OBJC_IVAR____TtC8SOSBuddy23WeakCADisplayLinkTarget__target + 8] = 0;
      *(void *)(swift_unknownObjectWeakInit() + 8) = &off_100350848;
      swift_unknownObjectWeakAssign();
      v42.receiver = v33;
      v42.super_class = v32;
      uint64_t v3 = (char *)v31;
      [super init];
      id v35 = [self displayLinkWithTarget:v34 selector:"updateFrom:"];

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      CGFloat v36 = *(void **)&v3[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink];
      *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink] = v35;

      return v3;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100053578();
    swift_allocError();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v19 = v41;
  }
  swift_unknownObjectRelease();

  uint64_t v29 = *(void **)&v11[v40];
  type metadata accessor for ConnectionAssistantEarthViewController();
  swift_deallocPartialClassInstance();
  return v3;
}

void sub_10005295C()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ConnectionAssistantEarthViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];

    id v4 = [v0 view];
    if (v4)
    {
      int v5 = v4;
      [v4 addSubview:*(void *)&v0[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__metalView]];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100052AB0(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for ConnectionAssistantEarthViewController();
  char v8 = *a4;
  uint64_t v9 = (char *)v14.receiver;
  [super v8:a3];
  id v10 = *(void **)&v9[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink];
  if (v10)
  {
    long long v11 = self;
    id v12 = v10;
    id v13 = [v11 mainRunLoop];
    [v12 *a5:v13:NSRunLoopCommonModes];
  }
  else
  {
    __break(1u);
  }
}

void sub_100052C68(unsigned __int8 *a1)
{
  id v3 = v1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink;
  id v10 = *(void **)&v3[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink];
  if (!v10)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unsigned int v11 = [v10 isPaused];
  int v12 = *a1;
  if ((v11 ^ v12)) {
    return;
  }
  id v13 = *(void **)&v3[v9];
  if (!v13) {
    goto LABEL_13;
  }
  [v13 setPaused:(v12 & 1) == 0];
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
  uint64_t v2 = v3;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v15, v16))
  {

    uint64_t v15 = v2;
    goto LABEL_10;
  }
  id v17 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)id v17 = 67109120;
  uint64_t v18 = *(void **)&v3[v9];
  if (!v18)
  {
LABEL_14:

    __break(1u);
    return;
  }
  _OWORD v19[3] = [v18 isPaused];
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  _os_log_impl((void *)&_mh_execute_header, v15, v16, "Earth rendering is paused: %{BOOL}d", v17, 8u);
  swift_slowDealloc();
LABEL_10:

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_100052EE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConnectionAssistantEarthViewController();
  [super dealloc];
}

uint64_t type metadata accessor for ConnectionAssistantEarthViewController()
{
  return self;
}

void sub_100052FB8(double a1)
{
  id v16 = [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__metalView) layer];
  self;
  id v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    id v4 = [v3 nextDrawable];

    if (v4)
    {
      sub_100053360(v1 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_camera, (uint64_t)v17);
      sub_100053360((uint64_t)v17, (uint64_t)__src);
      if (sub_1000533C8((uint64_t)__src) != 1)
      {
        memcpy(__dst, __src, sizeof(__dst));
        id v5 = [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__commandQueue) commandBuffer];
        if (v5)
        {
          uint64_t v6 = v5;
          id v7 = [objc_allocWithZone((Class)MTLRenderPassDescriptor) init];
          id v8 = [v7 colorAttachments];
          id v9 = [v8 objectAtIndexedSubscript:0];

          if (v9)
          {
            [v9 setLoadAction:2];

            id v10 = [v7 colorAttachments];
            id v11 = [v10 objectAtIndexedSubscript:0];

            if (v11)
            {
              [v11 setClearColor:0.0, 0.0, 0.0, 0.0];

              id v12 = [v7 colorAttachments];
              id v13 = [v12 objectAtIndexedSubscript:0];

              if (v13)
              {
                [v13 setStoreAction:1];

                id v14 = [v7 colorAttachments];
                id v15 = [v14 objectAtIndexedSubscript:0];

                if (v15)
                {
                  [v15 setTexture:[v4 texture]];

                  swift_unknownObjectRelease();
                  memcpy(v19, (const void *)(v1 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_earth), 0x203uLL);
                  ConnectionAssistantRenderer.render(dt:earth:camera:commandBuffer:renderPassDescriptor:)(v19, __dst, v6, v7, a1);
                  [v6 presentDrawable:v4];
                  [v6 commit];
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  return;
                }
                goto LABEL_18;
              }
LABEL_17:
              __break(1u);
LABEL_18:
              __break(1u);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_17;
        }
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
}

void sub_100053330(void *a1)
{
  [a1 duration];

  sub_100052FB8(v1);
}

uint64_t sub_100053360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000533C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 384)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void sub_1000533E4()
{
  uint64_t v1 = type metadata accessor for Date();
  __chkstk_darwin(v1 - 8);
  id v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__kPixelFormat] = 80;
  uint64_t v4 = OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__metalView;
  type metadata accessor for MetalView();
  *(void *)&v0[v4] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink] = 0;
  id v5 = &v0[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_earth];
  static Date.now.getter();
  sub_1000FBF1C((uint64_t)v3, v7);
  memcpy(v5, v7, 0x203uLL);
  uint64_t v6 = (uint64_t)&v0[OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_camera];
  sub_100053538((uint64_t)v8);
  sub_100053360((uint64_t)v8, v6);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_100053538(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 384) = 1;
  return result;
}

unint64_t sub_100053578()
{
  unint64_t result = qword_100381AC8;
  if (!qword_100381AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381AC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationState.LocationAcquisitionStatus(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ConnectionAssistantEarthViewController.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000536BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantEarthViewController.Error()
{
  return &type metadata for ConnectionAssistantEarthViewController.Error;
}

unint64_t sub_1000536F8()
{
  unint64_t result = qword_100381AD0;
  if (!qword_100381AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381AD0);
  }
  return result;
}

uint64_t initializeWithCopy for EndSessionButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EndSessionButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for EndSessionButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for EndSessionButton()
{
  return &type metadata for EndSessionButton;
}

uint64_t sub_1000538F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100053910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for KeyboardShortcut();
  uint64_t v122 = *(void *)(v7 - 8);
  long long v123 = (void *)v7;
  __chkstk_darwin(v7);
  long long v121 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ButtonBorderShape();
  uint64_t v119 = *(void *)(v9 - 8);
  uint64_t v120 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v115 = *(void *)(v12 - 8);
  uint64_t v116 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100381AE0);
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100004010(&qword_100380E00);
  uint64_t v112 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v19 = (char *)v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100004010(&qword_100381AE8);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v21 = (char *)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100004010(&qword_100381AF0);
  __chkstk_darwin(v117);
  uint64_t v23 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100004010(&qword_100381AF8);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  char v118 = (char *)v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100004010(&qword_100381B00);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  long long v124 = (char *)v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_100381B08);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(v2 + 16);
  if (!v31)
  {
LABEL_13:
    type metadata accessor for StewieModel();
    sub_100054DD8(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  if (*(void *)(v31 + 64) && *(unsigned char *)(v31 + 56) == 5)
  {
    long long v100 = v30;
    uint64_t v107 = v28;
    uint64_t v101 = v27;
    CGRect v104 = v6;
    CGRect v102 = (void *)v4;
    uint64_t v103 = a1;
    char v32 = sub_100078E0C(0, *(void *)(v31 + 88));
    id v33 = [self mainBundle];
    if (v32)
    {
      v34._uint64_t countAndFlagsBits = 0xD000000000000011;
      v133._uint64_t countAndFlagsBits = 0xD000000000000025;
      v133._object = (void *)0x80000001002C9720;
      v34._object = (void *)0x80000001002C9700;
      v35._uint64_t countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      Swift::String v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v133);
      uint64_t countAndFlagsBits = v36._countAndFlagsBits;
      object = v36._object;

      double v37 = self;
      id v38 = [v37 mainBundle];
      v134._uint64_t countAndFlagsBits = 0xD000000000000028;
      v134._object = (void *)0x80000001002C9690;
      v39._object = (void *)0x80000001002C9620;
      v39._uint64_t countAndFlagsBits = 0x100000000000006ALL;
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v134);
      uint64_t v97 = v41._countAndFlagsBits;
      double v99 = v41._object;

      id v42 = [v37 mainBundle];
      unint64_t v43 = 0xD000000000000039;
      unint64_t v95 = 0x80000001002C96C0;
      uint64_t v44 = 0x7373655320646E45;
      unint64_t v45 = 0xEB000000006E6F69;
    }
    else
    {
      v48._uint64_t countAndFlagsBits = 0xD000000000000018;
      v135._object = (void *)0x80000001002C94E0;
      v48._object = (void *)0x80000001002C94C0;
      v49._uint64_t countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      v135._uint64_t countAndFlagsBits = 0xD000000000000024;
      Swift::String v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v33, v49, v135);
      uint64_t countAndFlagsBits = v50._countAndFlagsBits;
      object = v50._object;

      CGFloat v51 = self;
      id v52 = [v51 mainBundle];
      v53._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
      v136._object = (void *)0x80000001002C94E0;
      v53._object = (void *)0x80000001002C9510;
      v54._uint64_t countAndFlagsBits = 0;
      v54._object = (void *)0xE000000000000000;
      v136._uint64_t countAndFlagsBits = 0xD000000000000024;
      Swift::String v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v136);
      uint64_t v97 = v55._countAndFlagsBits;
      double v99 = v55._object;

      id v42 = [v51 mainBundle];
      unint64_t v43 = 0xD000000000000038;
      unint64_t v95 = 0x80000001002C9550;
      uint64_t v44 = 0x6E6E6F4320646E45;
      unint64_t v45 = 0xEE006E6F69746365;
    }
    v56._uint64_t countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    Swift::String v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v44, (Swift::String_optional)0, (NSBundle)v42, v56, *(Swift::String *)&v43);
    v96[2] = v57._countAndFlagsBits;
    CGRect v105 = v57._object;

    id v58 = [self mainBundle];
    v137._uint64_t countAndFlagsBits = 0xD000000000000082;
    v137._object = (void *)0x80000001002C9590;
    v59._uint64_t countAndFlagsBits = 6581829;
    v59._object = (void *)0xE300000000000000;
    v60._uint64_t countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    Swift::String v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v137);

    Swift::String v126 = v61;
    static ButtonRole.destructive.getter();
    uint64_t v62 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v17, 0, 1, v62);
    CGFloat v63 = (_OWORD *)swift_allocObject();
    long long v64 = *(_OWORD *)(v2 + 16);
    v63[1] = *(_OWORD *)v2;
    _OWORD v63[2] = v64;
    long long v65 = *(_OWORD *)(v2 + 48);
    v63[3] = *(_OWORD *)(v2 + 32);
    v63[4] = v65;
    sub_1000431C0(v2);
    v96[1] = sub_100033310();
    Button<>.init<A>(_:role:action:)();
    BorderedProminentButtonStyle.init()();
    uint64_t v66 = sub_100009B18(&qword_100380E08, &qword_100380E00);
    sub_100054DD8(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v67 = v125;
    uint64_t v68 = v116;
    v96[0] = v66;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v14, v68);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v19, v67);
    static ButtonBorderShape.roundedRectangle.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v70 = v117;
    CGRect v71 = (uint64_t *)&v23[*(int *)(v117 + 36)];
    uint64_t v72 = sub_100004010(&qword_100381038);
    uint64_t v74 = v119;
    uint64_t v73 = v120;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))((char *)v71 + *(int *)(v72 + 28), v11, v120);
    *CGRect v71 = KeyPath;
    uint64_t v75 = v113;
    uint64_t v76 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v23, v21, v114);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v11, v73);
    uint64_t v77 = v70;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v76);
    uint64_t v78 = v121;
    static KeyboardShortcut.defaultAction.getter();
    uint64_t v79 = (void *)sub_100054C70();
    id v80 = v118;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, void *))(v122 + 8))(v78, v123);
    sub_10000950C((uint64_t)v23, &qword_100381AF0);
    uint64_t v81 = enum case for DynamicTypeSize.xxLarge(_:);
    uint64_t v82 = type metadata accessor for DynamicTypeSize();
    uint64_t v83 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 104))(v104, v81, v82);
    sub_100054DD8(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      v126._uint64_t countAndFlagsBits = v77;
      v126._object = v79;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v85 = sub_100009B18(&qword_10037F030, &qword_10037F010);
      uint64_t v86 = v109;
      uint64_t v87 = v102;
      View.dynamicTypeSize<A>(_:)();
      sub_10000950C(v83, &qword_10037F010);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v80, v86);
      uint64_t v130 = countAndFlagsBits;
      id v131 = object;
      long long v129 = *(_OWORD *)(v2 + 48);
      sub_100004010(&qword_10037ED78);
      uint64_t v88 = State.projectedValue.getter();
      long long v123 = v96;
      uint64_t v89 = __chkstk_darwin(v88);
      __chkstk_darwin(v89);
      v126._uint64_t countAndFlagsBits = v86;
      v126._object = v87;
      uint64_t v127 = OpaqueTypeConformance2;
      uint64_t v128 = v85;
      swift_getOpaqueTypeConformance2();
      uint64_t v90 = v111;
      uint64_t v91 = v100;
      long long v92 = v124;
      View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v92, v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v93 = v103;
      uint64_t v94 = v101;
      (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v103, v91, v101);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v93, 0, 1, v94);
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 56);

  return v46(a1, 1, 1);
}

uint64_t sub_1000548A8(void *a1)
{
  if (*a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    sub_100004010(&qword_10037ED78);
    return State.wrappedValue.setter();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100054DD8((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100054980(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v6 = sub_100004010(&qword_100381AE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  static ButtonRole.destructive.getter();
  uint64_t v9 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v10 = (_OWORD *)swift_allocObject();
  long long v11 = a3[1];
  v10[1] = *a3;
  uint64_t v10[2] = v11;
  long long v12 = a3[3];
  v10[3] = a3[2];
  v10[4] = v12;
  sub_1000431C0((uint64_t)a3);
  sub_100033310();
  return Button<>.init<A>(_:role:action:)();
}

uint64_t sub_100054AC8(void *a1)
{
  if (*a1)
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100054DD8((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100054BB4@<X0>(uint64_t a1@<X8>)
{
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100054C20@<X0>(uint64_t a1@<X8>)
{
  return sub_100053910(a1);
}

uint64_t sub_100054C60()
{
  return sub_1000548A8((void *)(v0 + 16));
}

unint64_t sub_100054C70()
{
  unint64_t result = qword_100381B10;
  if (!qword_100381B10)
  {
    sub_1000094C4(&qword_100381AF0);
    sub_1000094C4(&qword_100380E00);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    sub_100054DD8(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381B10);
  }
  return result;
}

uint64_t sub_100054DB8()
{
  return sub_100054980(*(void *)(v0 + 16), *(void *)(v0 + 24), *(_OWORD **)(v0 + 32));
}

uint64_t sub_100054DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100054BB4(a1);
}

uint64_t sub_100054DD0()
{
  return sub_100054AC8((void *)(v0 + 16));
}

uint64_t sub_100054DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100054E24()
{
  unint64_t result = qword_100381B18;
  if (!qword_100381B18)
  {
    sub_1000094C4(&qword_100381B20);
    sub_1000094C4(&qword_100381B00);
    sub_1000094C4(&qword_100380E00);
    sub_1000094C4(&qword_100381AF8);
    sub_1000094C4(&qword_10037F010);
    sub_1000094C4(&qword_100381AF0);
    sub_100054C70();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    swift_getOpaqueTypeConformance2();
    sub_100033310();
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381B18);
  }
  return result;
}

uint64_t sub_100054FF4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhoneNumberFormatter()
{
  return self;
}

uint64_t destroy for QuestionFooterView()
{
  swift_release();

  return swift_release();
}

uint64_t _s8SOSBuddy18QuestionFooterViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for QuestionFooterView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QuestionFooterView(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for QuestionFooterView()
{
  return &type metadata for QuestionFooterView;
}

uint64_t sub_10005518C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000551A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned __int8 *)(a1 + 32) > 2u)
  {
    sub_1000553DC();
    sub_100055430();
    swift_retain();
    swift_retain();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_1000588F4((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    swift_retain();
    swift_retain();
    EnvironmentObject.init()();
    type metadata accessor for UIMetrics();
    sub_1000588F4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.init()();
    type metadata accessor for QuestionnaireState();
    sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    EnvironmentObject.init()();
    sub_1000553DC();
    sub_100055430();
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(void *)(a2 + 64) = v8;
  *(unsigned char *)(a2 + 72) = v9;
  return result;
}

double sub_1000553D0@<D0>(uint64_t a1@<X8>)
{
  return sub_1000551A8(*v1, a1);
}

unint64_t sub_1000553DC()
{
  unint64_t result = qword_100381BD0;
  if (!qword_100381BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381BD0);
  }
  return result;
}

unint64_t sub_100055430()
{
  unint64_t result = qword_100381BD8;
  if (!qword_100381BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381BD8);
  }
  return result;
}

uint64_t destroy for DefaultQuestionFooterView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for DefaultQuestionFooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DefaultQuestionFooterView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[8];
  a1[7] = a2[7];
  a1[8] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DefaultQuestionFooterView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DefaultQuestionFooterView()
{
  return &type metadata for DefaultQuestionFooterView;
}

unint64_t sub_1000556B4()
{
  unint64_t result = qword_100381BE0;
  if (!qword_100381BE0)
  {
    sub_1000094C4(&qword_100381BE8);
    sub_1000553DC();
    sub_100055430();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381BE0);
  }
  return result;
}

uint64_t sub_100055730()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005574C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v211 = a3;
  uint64_t v5 = sub_100004010(&qword_100381BF8);
  __chkstk_darwin(v5);
  uint64_t v195 = (uint64_t)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v193 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  uint64_t v191 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100381C00);
  uint64_t v188 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v187 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100381C08);
  __chkstk_darwin(v10);
  uint64_t v190 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_100004010(&qword_100381C10);
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v194 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_100004010(&qword_100381C18);
  uint64_t v201 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v200 = (char *)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_100004010(&qword_100381C20);
  __chkstk_darwin(v196);
  v203 = (char *)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_100004010(&qword_100381C28);
  uint64_t v15 = __chkstk_darwin(v205);
  id v17 = (char *)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v204 = (uint64_t)&v166 - v18;
  uint64_t v19 = sub_100004010(&qword_100381C30);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v213 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v220 = (char *)&v166 - v22;
  uint64_t v23 = type metadata accessor for KeyboardShortcut();
  uint64_t v218 = *(void *)(v23 - 8);
  uint64_t v219 = v23;
  __chkstk_darwin(v23);
  v217 = (char *)&v166 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for ButtonBorderShape();
  uint64_t v185 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  uint64_t v184 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  __int16 v175 = (char *)&v166 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ControlSize();
  uint64_t v215 = *(void *)(v27 - 8);
  uint64_t v216 = v27;
  __chkstk_darwin(v27);
  v214 = (char *)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100004010(&qword_100380FE0);
  uint64_t v29 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v31 = (char *)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004010(&qword_100380FE8);
  __chkstk_darwin(v32);
  Swift::String v34 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_100004010(&qword_100380FF0);
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  char v171 = (char *)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100004010(&qword_100380FF8);
  __chkstk_darwin(v172);
  uint64_t v170 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100004010(&qword_100381000);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  uint64_t v179 = (char *)&v166 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_100004010(&qword_100381008);
  __chkstk_darwin(v176);
  uint64_t v183 = (char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_100004010(&qword_100381050);
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v180 = (uint64_t)&v166 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100004010(&qword_100381C38);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  __chkstk_darwin(v41);
  uint64_t v212 = (uint64_t)&v166 - v42;
  uint64_t v43 = *(void *)(a1 + 48);
  BOOL v44 = *(unsigned __int8 *)(v43 + 32) - 1 >= 2;
  uint64_t v206 = v5;
  v202 = v17;
  uint64_t v210 = v45;
  uint64_t v189 = v8;
  uint64_t v209 = a1;
  if (v44 && *(unsigned char *)(v43 + 64) != 6)
  {
    uint64_t v95 = v43;
    uint64_t v92 = v212;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v207 + 56))(v212, 1, 1, v208);
    uint64_t v93 = (uint64_t)v213;
    uint64_t v94 = (uint64_t)v220;
    if (sub_10009A3A8()) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v167 = v43;
    uint64_t v46 = swift_allocObject();
    long long v47 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v46 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v46 + 64) = v47;
    *(void *)(v46 + 80) = *(void *)(a1 + 64);
    long long v48 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v46 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v46 + 32) = v48;
    sub_1000584A0(a1);
    sub_100004010(&qword_100381010);
    uint64_t v168 = v10;
    sub_100043500();
    Button.init(action:label:)();
    uint64_t v50 = v215;
    uint64_t v49 = v216;
    CGFloat v51 = a2;
    id v52 = v214;
    (*(void (**)(char *, void, uint64_t))(v215 + 104))(v214, enum case for ControlSize.large(_:), v216);
    uint64_t KeyPath = swift_getKeyPath();
    Swift::String v54 = (uint64_t *)&v34[*(int *)(v32 + 36)];
    uint64_t v55 = sub_100004010(&qword_10037F228);
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))((char *)v54 + *(int *)(v55 + 28), v52, v49);
    *Swift::String v54 = KeyPath;
    uint64_t v56 = v169;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v34, v31, v169);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v56);
    Swift::String v57 = v175;
    BorderedProminentButtonStyle.init()();
    sub_1000585B4((unint64_t *)&qword_100381020, &qword_100380FE8, &qword_100381028, &qword_100380FE0);
    sub_1000588F4(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    id v58 = v171;
    uint64_t v59 = v178;
    uint64_t v10 = v168;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v57, v59);
    sub_10000950C((uint64_t)v34, &qword_100380FE8);
    Swift::String v60 = v184;
    static ButtonBorderShape.roundedRectangle.getter();
    uint64_t v61 = swift_getKeyPath();
    uint64_t v62 = (uint64_t)v170;
    CGFloat v63 = (uint64_t *)&v170[*(int *)(v172 + 36)];
    uint64_t v64 = sub_100004010(&qword_100381038);
    uint64_t v65 = v185;
    uint64_t v66 = v186;
    (*(void (**)(char *, char *, uint64_t))(v185 + 16))((char *)v63 + *(int *)(v64 + 28), v60, v186);
    uint64_t *v63 = v61;
    uint64_t v67 = v173;
    uint64_t v68 = v174;
    (*(void (**)(uint64_t, char *, uint64_t))(v173 + 16))(v62, v58, v174);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v60, v66);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v68);
    CGRect v69 = v217;
    static KeyboardShortcut.defaultAction.getter();
    sub_100043690();
    uint64_t v70 = v179;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v218 + 8))(v69, v219);
    sub_10000950C(v62, &qword_100380FF8);
    uint64_t v71 = v51[3];
    uint64_t v72 = v51[4];
    sub_100008F88(v51, v71);
    uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 296))(v71, v72);
    uint64_t v74 = swift_getKeyPath();
    uint64_t v221 = v73;
    swift_retain();
    uint64_t v75 = AnyShapeStyle.init<A>(_:)();
    uint64_t v76 = v181;
    uint64_t v77 = (uint64_t)v183;
    uint64_t v78 = v182;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v183, v70, v182);
    swift_release();
    uint64_t v79 = (uint64_t *)(v77 + *(int *)(v176 + 36));
    *uint64_t v79 = v74;
    v79[1] = v75;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v70, v78);
    uint64_t v80 = v51[3];
    uint64_t v81 = v51[4];
    sub_100008F88(v51, v80);
    double v82 = (*(double (**)(uint64_t, uint64_t))(v81 + 464))(v80, v81);
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    LOBYTE(v73) = static Edge.Set.all.getter();
    uint64_t v89 = v180;
    sub_10000D2A0(v77, v180, &qword_100381008);
    uint64_t v90 = v208;
    uint64_t v91 = v89 + *(int *)(v208 + 36);
    *(unsigned char *)uint64_t v91 = v73;
    *(double *)(v91 + 8) = v82;
    *(void *)(v91 + 16) = v84;
    *(void *)(v91 + 24) = v86;
    *(void *)(v91 + 32) = v88;
    *(unsigned char *)(v91 + 40) = 0;
    sub_10000950C(v77, &qword_100381008);
    uint64_t v92 = v212;
    sub_10000D544(v89, v212, &qword_100381050);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v207 + 56))(v92, 0, 1, v90);
    uint64_t v93 = (uint64_t)v213;
    uint64_t v94 = (uint64_t)v220;
    uint64_t v95 = v167;
    if (sub_10009A3A8())
    {
LABEL_5:
      uint64_t v96 = swift_allocObject();
      uint64_t v97 = v209;
      long long v98 = *(_OWORD *)(v209 + 48);
      *(_OWORD *)(v96 + 48) = *(_OWORD *)(v209 + 32);
      *(_OWORD *)(v96 + 64) = v98;
      *(void *)(v96 + 80) = *(void *)(v97 + 64);
      long long v99 = *(_OWORD *)(v97 + 16);
      *(_OWORD *)(v96 + 16) = *(_OWORD *)v97;
      *(_OWORD *)(v96 + 32) = v99;
      sub_1000584A0(v97);
      sub_100004010(&qword_100381C50);
      sub_10005850C();
      long long v100 = v187;
      Button.init(action:label:)();
      CGRect v102 = v214;
      uint64_t v101 = v215;
      uint64_t v103 = v216;
      (*(void (**)(char *, void, uint64_t))(v215 + 104))(v214, enum case for ControlSize.large(_:), v216);
      uint64_t v104 = swift_getKeyPath();
      uint64_t v105 = v10;
      uint64_t v106 = (uint64_t)v190;
      uint64_t v107 = (uint64_t *)&v190[*(int *)(v10 + 36)];
      uint64_t v108 = sub_100004010(&qword_10037F228);
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))((char *)v107 + *(int *)(v108 + 28), v102, v103);
      uint64_t *v107 = v104;
      uint64_t v109 = v188;
      uint64_t v110 = v189;
      (*(void (**)(uint64_t, char *, uint64_t))(v188 + 16))(v106, v100, v189);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v100, v110);
      uint64_t v111 = v191;
      BorderlessButtonStyle.init()();
      uint64_t v112 = sub_1000585B4((unint64_t *)&qword_100381C60, &qword_100381C08, &qword_100381C68, &qword_100381C00);
      uint64_t v113 = sub_1000588F4(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
      uint64_t v114 = v194;
      uint64_t v115 = v197;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v193 + 8))(v111, v115);
      sub_10000950C(v106, &qword_100381C08);
      uint64_t v116 = v217;
      static KeyboardShortcut.defaultAction.getter();
      uint64_t v221 = v105;
      uint64_t v222 = v115;
      uint64_t v93 = (uint64_t)v213;
      uint64_t v223 = v112;
      uint64_t v224 = v113;
      swift_getOpaqueTypeConformance2();
      uint64_t v117 = v200;
      uint64_t v118 = v199;
      View.keyboardShortcut(_:)();
      (*(void (**)(char *, uint64_t))(v218 + 8))(v116, v219);
      (*(void (**)(char *, uint64_t))(v198 + 8))(v114, v118);
      LOBYTE(v118) = static Edge.Set.top.getter();
      uint64_t v119 = v201;
      uint64_t v120 = (uint64_t)v203;
      uint64_t v121 = v192;
      (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v203, v117, v192);
      uint64_t v122 = v120 + *(int *)(v196 + 36);
      *(unsigned char *)uint64_t v122 = v118;
      *(_OWORD *)(v122 + 8) = 0u;
      *(_OWORD *)(v122 + 24) = 0u;
      *(unsigned char *)(v122 + 40) = 1;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v121);
      LOBYTE(v118) = static Edge.Set.bottom.getter();
      uint64_t v123 = (uint64_t)v202;
      sub_10000D2A0(v120, (uint64_t)v202, &qword_100381C20);
      uint64_t v124 = v123 + *(int *)(v205 + 36);
      *(unsigned char *)uint64_t v124 = v118;
      *(_OWORD *)(v124 + 8) = 0u;
      *(_OWORD *)(v124 + 24) = 0u;
      *(unsigned char *)(v124 + 40) = 1;
      uint64_t v125 = v120;
      uint64_t v94 = (uint64_t)v220;
      sub_10000950C(v125, &qword_100381C20);
      uint64_t v126 = v204;
      sub_10000D544(v123, v204, &qword_100381C28);
      sub_10000D2A0(v126, v195, &qword_100381C28);
      swift_storeEnumTagMultiPayload();
      sub_100058674();
      _ConditionalContent<>.init(storage:)();
      uint64_t v127 = v126;
      goto LABEL_9;
    }
  }
  uint64_t v128 = *(void *)(v95 + 152);
  uint64_t v129 = v209;
  if (!v128)
  {
    uint64_t v161 = sub_100004010(&qword_100381C40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 56))(v94, 1, 1, v161);
    goto LABEL_11;
  }
  uint64_t v130 = swift_allocObject();
  long long v131 = *(_OWORD *)(v129 + 48);
  *(_OWORD *)(v130 + 48) = *(_OWORD *)(v129 + 32);
  *(_OWORD *)(v130 + 64) = v131;
  uint64_t v132 = *(void *)(v129 + 64);
  long long v133 = *(_OWORD *)(v129 + 16);
  *(_OWORD *)(v130 + 16) = *(_OWORD *)v129;
  *(_OWORD *)(v130 + 32) = v133;
  *(void *)(v130 + 80) = v132;
  *(void *)(v130 + 88) = v128;
  swift_retain();
  sub_1000584A0(v129);
  swift_retain();
  sub_100004010(&qword_100381C50);
  uint64_t v208 = v128;
  sub_10005850C();
  Swift::String v134 = v187;
  Button.init(action:label:)();
  Swift::String v136 = v214;
  uint64_t v135 = v215;
  uint64_t v137 = v216;
  (*(void (**)(char *, void, uint64_t))(v215 + 104))(v214, enum case for ControlSize.large(_:), v216);
  uint64_t v138 = swift_getKeyPath();
  uint64_t v139 = (uint64_t)v190;
  long long v140 = (uint64_t *)&v190[*(int *)(v10 + 36)];
  uint64_t v141 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))((char *)v140 + *(int *)(v141 + 28), v136, v137);
  *long long v140 = v138;
  uint64_t v142 = v188;
  uint64_t v143 = v189;
  (*(void (**)(uint64_t, char *, uint64_t))(v188 + 16))(v139, v134, v189);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v134, v143);
  long long v144 = v191;
  BorderlessButtonStyle.init()();
  uint64_t v145 = sub_1000585B4((unint64_t *)&qword_100381C60, &qword_100381C08, &qword_100381C68, &qword_100381C00);
  uint64_t v146 = sub_1000588F4(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  long long v147 = v194;
  uint64_t v148 = v197;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v193 + 8))(v144, v148);
  sub_10000950C(v139, &qword_100381C08);
  unsigned __int8 v149 = v217;
  static KeyboardShortcut.defaultAction.getter();
  uint64_t v221 = v10;
  uint64_t v222 = v148;
  uint64_t v223 = v145;
  uint64_t v224 = v146;
  swift_getOpaqueTypeConformance2();
  uint64_t v150 = v200;
  uint64_t v151 = v199;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v218 + 8))(v149, v219);
  char v152 = v147;
  uint64_t v92 = v212;
  (*(void (**)(char *, uint64_t))(v198 + 8))(v152, v151);
  LOBYTE(v143) = static Edge.Set.top.getter();
  uint64_t v153 = v201;
  uint64_t v154 = (uint64_t)v203;
  uint64_t v155 = v192;
  (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v203, v150, v192);
  uint64_t v156 = v154 + *(int *)(v196 + 36);
  *(unsigned char *)uint64_t v156 = v143;
  *(_OWORD *)(v156 + 8) = 0u;
  *(_OWORD *)(v156 + 24) = 0u;
  *(unsigned char *)(v156 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v155);
  LOBYTE(v143) = static Edge.Set.bottom.getter();
  uint64_t v157 = (uint64_t)v202;
  sub_10000D2A0(v154, (uint64_t)v202, &qword_100381C20);
  uint64_t v158 = v157 + *(int *)(v205 + 36);
  *(unsigned char *)uint64_t v158 = v143;
  *(_OWORD *)(v158 + 8) = 0u;
  *(_OWORD *)(v158 + 24) = 0u;
  *(unsigned char *)(v158 + 40) = 1;
  sub_10000950C(v154, &qword_100381C20);
  uint64_t v159 = v204;
  sub_10000D544(v157, v204, &qword_100381C28);
  sub_10000D2A0(v159, v195, &qword_100381C28);
  swift_storeEnumTagMultiPayload();
  sub_100058674();
  uint64_t v94 = (uint64_t)v220;
  _ConditionalContent<>.init(storage:)();
  swift_release();
  uint64_t v127 = v159;
LABEL_9:
  sub_10000950C(v127, &qword_100381C28);
  uint64_t v160 = sub_100004010(&qword_100381C40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v93, 0, 1, v160);
  sub_10000D544(v93, v94, &qword_100381C30);
LABEL_11:
  uint64_t v162 = v210;
  sub_10000D2A0(v92, v210, &qword_100381C38);
  sub_10000D2A0(v94, v93, &qword_100381C30);
  uint64_t v163 = v211;
  sub_10000D2A0(v162, v211, &qword_100381C38);
  uint64_t v164 = sub_100004010(&qword_100381C48);
  sub_10000D2A0(v93, v163 + *(int *)(v164 + 48), &qword_100381C30);
  sub_10000950C(v94, &qword_100381C30);
  sub_10000950C(v92, &qword_100381C38);
  sub_10000950C(v93, &qword_100381C30);
  return sub_10000950C(v162, &qword_100381C38);
}

uint64_t sub_1000570EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 48);
  switch(*(unsigned char *)(v6 + 32))
  {
    case 1:
      if (!*(void *)(v0 + 32)) {
        goto LABEL_17;
      }
      swift_retain();
      char v7 = sub_1000CC640(v6);
      break;
    case 2:
      if ((sub_100057F40() & 1) == 0) {
        goto LABEL_5;
      }
      return (*(uint64_t (**)(void))(v0 + 56))();
    case 3:
      if (!*(void *)(v0 + 32)) {
        goto LABEL_17;
      }
      swift_retain();
      char v7 = sub_1000CA784((void *)v6, 0, 4);
      break;
    default:
      goto LABEL_5;
  }
  char v19 = v7;
  swift_release();
  if (v19) {
    return (*(uint64_t (**)(void))(v0 + 56))();
  }
LABEL_5:
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10000FD84(v2, (uint64_t)qword_1003A9B08);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_1000584A0(v0);
  sub_1000584A0(v0);
  sub_1000584A0(v0);
  sub_1000584A0(v0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_t v22 = v9;
    uint64_t v23 = v3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v11 = 136446467;
    if (!*(void *)(v1 + 32))
    {
      sub_10005894C(v1);
      sub_10005894C(v1);
LABEL_17:
      type metadata accessor for QuestionnaireState();
      sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
      EnvironmentObject.error()();
      __break(1u);
      JUMPOUT(0x100057514);
    }
    swift_retain();
    uint64_t v12 = sub_1000C8E54();
    unint64_t v14 = v13;
    swift_release();
    uint64_t v24 = sub_1001B3178(v12, v14, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10005894C(v1);
    sub_10005894C(v1);
    *(_WORD *)(v11 + 12) = 2081;
    uint64_t v16 = *(void *)(v6 + 16);
    unint64_t v15 = *(void *)(v6 + 24);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1001B3178(v16, v15, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10005894C(v1);
    sub_10005894C(v1);
    os_log_t v17 = v22;
    _os_log_impl((void *)&_mh_execute_header, v22, v10, "[%{public}s] QuestionnaireBodyView: failed to record answer for %{private}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  }
  else
  {
    sub_10005894C(v1);
    sub_10005894C(v1);
    sub_10005894C(v1);
    sub_10005894C(v1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

__n128 sub_100057524@<Q0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_100033364(v2, v4, v8);
  swift_bridgeObjectRelease();
  long long v11 = v15[7];
  *(_OWORD *)(a1 + 96) = v15[6];
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v15[8];
  long long v12 = v15[3];
  *(_OWORD *)(a1 + 32) = v15[2];
  *(_OWORD *)(a1 + 48) = v12;
  long long v13 = v15[5];
  *(_OWORD *)(a1 + 64) = v15[4];
  *(_OWORD *)(a1 + 80) = v13;
  __n128 result = (__n128)v15[1];
  *(_OWORD *)a1 = v15[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void sub_100057640()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 32))
  {
    uint64_t v2 = *(void **)(v0 + 48);
    swift_retain();
    char v3 = sub_1000CA784(v2, 0, 3);
    uint64_t v4 = swift_release();
    if (v3)
    {
      (*(void (**)(uint64_t))(v1 + 56))(v4);
    }
    else
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000FD84(v5, (uint64_t)qword_1003A9B08);
      sub_1000584A0(v1);
      sub_1000584A0(v1);
      sub_1000584A0(v1);
      sub_1000584A0(v1);
      oslog = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v6))
      {
        uint64_t v7 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 136446467;
        swift_retain();
        uint64_t v8 = sub_1000C8E54();
        unint64_t v10 = v9;
        swift_release();
        sub_1001B3178(v8, v10, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10005894C(v1);
        sub_10005894C(v1);
        *(_WORD *)(v7 + 12) = 2081;
        uint64_t v12 = v2[2];
        unint64_t v11 = v2[3];
        swift_bridgeObjectRetain();
        sub_1001B3178(v12, v11, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10005894C(v1);
        sub_10005894C(v1);
        _os_log_impl((void *)&_mh_execute_header, oslog, v6, "[%{public}s] QuestionnaireBodyView: failed to record skip for %{private}s", (uint8_t *)v7, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10005894C(v1);
        sub_10005894C(v1);
        sub_10005894C(v1);
        sub_10005894C(v1);
      }
    }
  }
  else
  {
    type metadata accessor for QuestionnaireState();
    sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    EnvironmentObject.error()();
    __break(1u);
  }
}

__n128 sub_100057960@<Q0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_100033364(v2, v4, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = static Color.green.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v13 = v17[7];
  *(_OWORD *)(a1 + 96) = v17[6];
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 128) = v17[8];
  long long v14 = v17[3];
  *(_OWORD *)(a1 + 32) = v17[2];
  *(_OWORD *)(a1 + 48) = v14;
  long long v15 = v17[5];
  *(_OWORD *)(a1 + 64) = v17[4];
  *(_OWORD *)(a1 + 80) = v15;
  __n128 result = (__n128)v17[1];
  *(_OWORD *)a1 = v17[0];
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v11;
  return result;
}

uint64_t sub_100057A8C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + 32))
  {
    uint64_t v4 = *(void **)(v1 + 48);
    swift_retain();
    char v5 = sub_1000CA784(v4, a1, 0);
    uint64_t v6 = swift_release();
    if ((v5 & 1) == 0)
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000FD84(v7, (uint64_t)qword_1003A9B08);
      sub_1000584A0(v2);
      sub_1000584A0(v2);
      sub_1000584A0(v2);
      swift_retain();
      sub_1000584A0(v2);
      swift_retain();
      char v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 136446723;
        swift_retain();
        uint64_t v11 = sub_1000C8E54();
        unint64_t v13 = v12;
        swift_release();
        sub_1001B3178(v11, v13, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10005894C(v2);
        sub_10005894C(v2);
        *(_WORD *)(v10 + 12) = 2081;
        uint64_t v14 = *(void *)(a1 + 16);
        unint64_t v15 = *(void *)(a1 + 24);
        swift_bridgeObjectRetain();
        sub_1001B3178(v14, v15, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 22) = 2081;
        uint64_t v17 = v4[2];
        unint64_t v16 = v4[3];
        swift_bridgeObjectRetain();
        sub_1001B3178(v17, v16, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10005894C(v2);
        sub_10005894C(v2);
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%{public}s] QuestionnaireBodyView: failed to record %{private}s answer for %{private}s", (uint8_t *)v10, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10005894C(v2);
        sub_10005894C(v2);
        swift_release_n();
        sub_10005894C(v2);
        sub_10005894C(v2);
      }
    }
    return (*(uint64_t (**)(uint64_t))(v2 + 56))(v6);
  }
  else
  {
    type metadata accessor for QuestionnaireState();
    sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

__n128 sub_100057DEC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)&long long v21 = *(void *)(v3 + 16);
  *((void *)&v21 + 1) = v4;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v12, v13, v5, v7, v11, v9);
  sub_100033364(v5, v7, v11);
  swift_bridgeObjectRelease();
  long long v27 = v20[6];
  long long v28 = v20[7];
  long long v29 = v20[8];
  long long v23 = v20[2];
  long long v24 = v20[3];
  long long v25 = v20[4];
  long long v26 = v20[5];
  long long v21 = v20[0];
  __n128 v22 = (__n128)v20[1];
  uint64_t v14 = static Color.green.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v16 = v28;
  *(_OWORD *)(a2 + 96) = v27;
  *(_OWORD *)(a2 + 112) = v16;
  *(_OWORD *)(a2 + 128) = v29;
  long long v17 = v24;
  *(_OWORD *)(a2 + 32) = v23;
  *(_OWORD *)(a2 + 48) = v17;
  long long v18 = v26;
  *(_OWORD *)(a2 + 64) = v25;
  *(_OWORD *)(a2 + 80) = v18;
  __n128 result = v22;
  *(_OWORD *)a2 = v21;
  *(__n128 *)(a2 + 16) = result;
  *(void *)(a2 + 144) = KeyPath;
  *(void *)(a2 + 152) = v14;
  return result;
}

uint64_t sub_100057F40()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + 32) != 2)
  {
    char v3 = 0;
    return v3 & 1;
  }
  if (*(void *)(*(void *)(v1 + 56) + 16))
  {
    if (*(void *)(v0 + 32))
    {
LABEL_4:
      swift_retain();
      char v2 = sub_1000CC230(v1);
LABEL_46:
      char v3 = v2;
      swift_release();
      return v3 & 1;
    }
    goto LABEL_50;
  }
  unint64_t v4 = *(void *)(v1 + 144);
  if (v4 >> 62) {
    goto LABEL_43;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (1)
    {
      uint64_t v6 = *(void *)(v0 + 32);
      if ((v4 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          break;
        }
        if (!v6) {
          goto LABEL_49;
        }
        if ((*(unsigned char *)(v8 + 40) & 1) != 0 && (swift_beginAccess(), uint64_t v10 = *(void *)(v6 + 72), *(void *)(v10 + 16)))
        {
          swift_retain();
          uint64_t v11 = swift_unknownObjectRetain();
          uint64_t v12 = sub_1001BECD0(v11);
          if (v13)
          {
            uint64_t v14 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v12);
            uint64_t v15 = *v14;
            unint64_t v0 = v14[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v15 = 0;
            unint64_t v0 = 0xE000000000000000;
          }
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v15 = 0;
          unint64_t v0 = 0xE000000000000000;
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = HIBYTE(v0) & 0xF;
        if ((v0 & 0x2000000000000000) == 0) {
          uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
        }
        if (v16) {
          goto LABEL_40;
        }
        ++v7;
        if (v9 == v5) {
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_bridgeObjectRetain_n();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_44;
      }
    }
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_42;
      }
      if (!v6)
      {
        swift_retain();
LABEL_49:
        type metadata accessor for QuestionnaireState();
        sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
        EnvironmentObject.error()();
        __break(1u);
        goto LABEL_50;
      }
      if ((*(unsigned char *)(*(void *)(v4 + 8 * v17 + 32) + 40) & 1) == 0) {
        break;
      }
      swift_beginAccess();
      uint64_t v19 = *(void *)(v6 + 72);
      uint64_t v20 = *(void *)(v19 + 16);
      swift_retain();
      if (v20)
      {
        swift_retain();
        uint64_t v21 = swift_retain();
        uint64_t v22 = sub_1001BECD0(v21);
        if (v23)
        {
          long long v24 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v22);
          uint64_t v20 = *v24;
          unint64_t v0 = v24[1];
          swift_bridgeObjectRetain();
          swift_release();
          swift_release();
          goto LABEL_35;
        }
        swift_release();
        swift_release();
        goto LABEL_33;
      }
LABEL_34:
      unint64_t v0 = 0xE000000000000000;
LABEL_35:
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v25 = HIBYTE(v0) & 0xF;
      if ((v0 & 0x2000000000000000) == 0) {
        uint64_t v25 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v25)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      ++v17;
      if (v18 == v5)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    swift_retain();
LABEL_33:
    uint64_t v20 = 0;
    goto LABEL_34;
  }
LABEL_44:
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32))
  {
LABEL_45:
    swift_retain();
    char v2 = sub_1000CA784((void *)v1, 0, 3);
    goto LABEL_46;
  }
LABEL_50:
  type metadata accessor for QuestionnaireState();
  sub_1000588F4(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000582F4@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  uint64_t v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v3;
  uint64_t v11 = *(void *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v4;
  if ((void)v4)
  {
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = *(void *)(v4 + 80);
    sub_100008F88((void *)(v4 + 48), v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v9, v5, v6);
    *(void *)a1 = static HorizontalAlignment.center.getter();
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v7 = sub_100004010(&qword_100381BF0);
    sub_10005574C((uint64_t)v10, v9, a1 + *(int *)(v7 + 44));
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v9);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1000588F4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10005840C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10005846C()
{
  return sub_100057A8C(*(void *)(v0 + 88));
}

double sub_100058498@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100057DEC(v1, a1).n128_u64[0];
  return result;
}

uint64_t sub_1000584A0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10005850C()
{
  unint64_t result = qword_100381C58;
  if (!qword_100381C58)
  {
    sub_1000094C4(&qword_100381C50);
    sub_100043500();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381C58);
  }
  return result;
}

uint64_t sub_1000585B4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    sub_100009B18(a3, a4);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100058674()
{
  unint64_t result = qword_100381C78;
  if (!qword_100381C78)
  {
    sub_1000094C4(&qword_100381C28);
    sub_1000586F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381C78);
  }
  return result;
}

unint64_t sub_1000586F0()
{
  unint64_t result = qword_100381C80;
  if (!qword_100381C80)
  {
    sub_1000094C4(&qword_100381C20);
    sub_1000094C4(&qword_100381C10);
    sub_1000094C4(&qword_100381C08);
    type metadata accessor for BorderlessButtonStyle();
    sub_1000585B4((unint64_t *)&qword_100381C60, &qword_100381C08, &qword_100381C68, &qword_100381C00);
    sub_1000588F4(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381C80);
  }
  return result;
}

void sub_100058850()
{
}

uint64_t sub_100058878()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1000588D0()
{
  return sub_1000570EC();
}

uint64_t sub_1000588F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005894C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000589C0()
{
  return sub_100009B18(&qword_100381C88, &qword_100381C90);
}

uint64_t destroy for BuiltInRoadsideForkContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInRoadsideForkContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BuiltInRoadsideForkContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BuiltInRoadsideForkContentView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for BuiltInRoadsideForkContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInRoadsideForkContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInRoadsideForkContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInRoadsideForkContentView()
{
  return &type metadata for BuiltInRoadsideForkContentView;
}

uint64_t sub_100058D30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100058D4C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (_OWORD *)v1;
  uint64_t v4 = *(void **)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_100008F88(v4 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v19, v5, v6);
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    sub_100008F88(v19, v20);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 232))(v7, v8);
    uint64_t v10 = static HorizontalAlignment.center.getter();
    sub_100058F1C(v2, (uint64_t)v16);
    *(_OWORD *)&v17[71] = v16[4];
    *(_OWORD *)&v17[87] = v16[5];
    *(_OWORD *)&v17[103] = v16[6];
    *(_OWORD *)&v17[119] = v16[7];
    *(_OWORD *)&v17[7] = v16[0];
    *(_OWORD *)&v17[23] = v16[1];
    *(_OWORD *)&v17[39] = v16[2];
    *(_OWORD *)&v17[55] = v16[3];
    *(double *)(a1 + 8) = v9;
    long long v11 = *(_OWORD *)&v17[64];
    *(_OWORD *)(a1 + 97) = *(_OWORD *)&v17[80];
    long long v12 = *(_OWORD *)&v17[112];
    *(_OWORD *)(a1 + 113) = *(_OWORD *)&v17[96];
    *(_OWORD *)(a1 + 129) = v12;
    long long v13 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)&v17[16];
    long long v14 = *(_OWORD *)&v17[48];
    *(_OWORD *)(a1 + 49) = *(_OWORD *)&v17[32];
    *(_OWORD *)(a1 + 65) = v14;
    char v18 = 0;
    *(void *)a1 = v10;
    *(unsigned char *)(a1 + 16) = 0;
    *(void *)(a1 + 144) = *(void *)&v17[127];
    *(_OWORD *)(a1 + 81) = v11;
    *(_OWORD *)(a1 + 17) = v13;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v19);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100058F1C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD000000000000013;
  v27._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  v27._object = (void *)0x80000001002C9840;
  v6._object = (void *)0x80000001002C7F70;
  v7.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v7.value._object = (void *)0x80000001002C7760;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v27);

  uint64_t v10 = (_OWORD *)swift_allocObject();
  long long v11 = a1[3];
  v10[3] = a1[2];
  _OWORD v10[4] = v11;
  _OWORD v10[5] = a1[4];
  long long v12 = a1[1];
  v10[1] = *a1;
  uint64_t v10[2] = v12;
  sub_1000594D0((uint64_t)a1);
  type metadata accessor for UIMetrics();
  sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v13 = EnvironmentObject.init()();
  uint64_t v15 = v14;
  id v16 = [v4 mainBundle];
  v28._uint64_t countAndFlagsBits = 0xD000000000000044;
  v28._object = (void *)0x80000001002C9890;
  v17._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v17._object = (void *)0xE900000000000079;
  v18.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v18.value._object = (void *)0x80000001002C7760;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v28);

  type metadata accessor for OptionPresentation();
  uint64_t v21 = (Swift::String *)swift_allocObject();
  v21[1] = v20;
  v21[3]._uint64_t countAndFlagsBits = 0;
  v21[3]._object = 0;
  v21[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v21[2]._uint64_t countAndFlagsBits = 0;
  v21[2]._object = 0;
  uint64_t v22 = (_OWORD *)swift_allocObject();
  long long v23 = a1[3];
  v22[3] = a1[2];
  v22[4] = v23;
  v22[5] = a1[4];
  long long v24 = a1[1];
  v22[1] = *a1;
  uint64_t v22[2] = v24;
  sub_1000594D0((uint64_t)a1);
  uint64_t result = EnvironmentObject.init()();
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v15;
  *(Swift::String *)(a2 + 16) = v9;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = sub_1000594AC;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = result;
  *(void *)(a2 + 80) = v26;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 88) = v21;
  *(void *)(a2 + 112) = sub_100059548;
  *(void *)(a2 + 120) = v22;
  return result;
}

uint64_t sub_1000591BC()
{
  if (*(void *)v0)
  {
    swift_retain();
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    sub_100004010(&qword_10037ED78);
    uint64_t result = State.wrappedValue.getter();
    if ((v5 & 1) == 0)
    {
      State.wrappedValue.setter();
      unint64_t v2 = (_OWORD *)swift_allocObject();
      long long v3 = v0[3];
      v2[3] = v0[2];
      v2[4] = v3;
      _OWORD v2[5] = v0[4];
      long long v4 = v0[1];
      v2[1] = *v0;
      v2[2] = v4;
      swift_retain();
      sub_1000594D0((uint64_t)v0);
      PassthroughSubject.send(_:)();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_10004F378((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100059348(uint64_t a1)
{
  long long v5 = *(_OWORD *)(a1 + 64);
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.getter();
  if ((v7 & 1) == 0)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    Swift::String v6 = &type metadata for RecordedForkAnswer;
    LOWORD(v5) = 0;
    sub_1000CF5E8(v3, (uint64_t)&v5);
    uint64_t v4 = sub_100059550((uint64_t)&v5);
    return (*(uint64_t (**)(uint64_t))(a1 + 48))(v4);
  }
  return result;
}

uint64_t sub_1000593C8(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  long long v6 = *(_OWORD *)(a2 + 64);
  char v8 = 0;
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.setter();
  uint64_t v4 = *(void *)(a2 + 40);
  char v7 = &type metadata for RecordedForkAnswer;
  LOBYTE(v6) = 1;
  BYTE1(v6) = v3;
  sub_1000CF5E8(v4, (uint64_t)&v6);
  uint64_t result = sub_100059550((uint64_t)&v6);
  if (v3 == 1) {
    return (*(uint64_t (**)(uint64_t))(a2 + 48))(result);
  }
  return result;
}

uint64_t sub_100059464@<X0>(uint64_t a1@<X8>)
{
  return sub_100058D4C(a1);
}

uint64_t sub_1000594AC()
{
  return sub_1000591BC();
}

uint64_t sub_1000594D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100059548()
{
  return sub_100059348(v0 + 16);
}

uint64_t sub_100059550(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038D290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000595B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100059614(unsigned __int8 *a1)
{
  return sub_1000593C8(a1, v1 + 16);
}

unint64_t sub_100059620()
{
  unint64_t result = qword_100381C98;
  if (!qword_100381C98)
  {
    sub_1000094C4(&qword_100381CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381C98);
  }
  return result;
}

void *initializeWithCopy for FullScreenGuidanceActionTextView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FullScreenGuidanceActionTextView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

void *assignWithTake for FullScreenGuidanceActionTextView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for FullScreenGuidanceActionTextView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FullScreenGuidanceActionTextView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FullScreenGuidanceActionTextView()
{
  return &type metadata for FullScreenGuidanceActionTextView;
}

uint64_t sub_10005983C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100059858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v107 = a4;
  uint64_t v110 = a5;
  uint64_t v7 = sub_100004010(&qword_100381CA8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v108 = (uint64_t *)((char *)&v81 - v11);
  uint64_t v102 = type metadata accessor for OpacityTransition();
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  long long v98 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_100381CB0);
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  long long v99 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v101 = (char *)&v81 - v16;
  uint64_t v17 = type metadata accessor for Font.Leading();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::String v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    type metadata accessor for UIMetrics();
    sub_10005C830((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
LABEL_25:
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v21 = *(void *)(a3 + 72);
  uint64_t v22 = *(void *)(a3 + 80);
  sub_100008F88((void *)(a3 + 48), v21);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 32))(v133, v21, v22);
  if (!a1)
  {
    type metadata accessor for GuidanceMessagesModel();
    sub_10005C830(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    goto LABEL_25;
  }
  int v23 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v109 = v10;
  uint64_t v105 = a1;
  if (v23 == 1)
  {
    id v24 = [self mainBundle];
    v144._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
    v144._object = (void *)0x80000001002C9920;
    v25._object = (void *)0x80000001002C98E0;
    uint64_t v97 = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v26._uint64_t countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v144);
    uint64_t countAndFlagsBits = v27._countAndFlagsBits;
    object = v27._object;

    uint64_t v96 = 0;
    uint64_t v94 = 4;
  }
  else
  {
    uint64_t v30 = *(void *)(a1 + 48);
    if (v30)
    {
      unint64_t v31 = *(void *)(v30 + 24);
      uint64_t v111 = *(void *)(v30 + 16);
      unint64_t v32 = v31;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v111 = 0;
      unint64_t v32 = 0xE000000000000000;
    }
    swift_retain();
    sub_10020D580();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    swift_release();
    uint64_t v37 = (void *)0xE000000000000000;
    uint64_t v94 = 3;
    if (v36) {
      uint64_t v38 = v34;
    }
    else {
      uint64_t v38 = 0;
    }
    if (v36) {
      uint64_t v37 = v36;
    }
    uint64_t v96 = v38;
    uint64_t v97 = v37;
    object = (void *)v32;
    uint64_t countAndFlagsBits = v111;
  }
  uint64_t v111 = countAndFlagsBits;
  v115[0] = countAndFlagsBits;
  v115[1] = object;
  sub_100033310();
  uint64_t v95 = object;
  swift_bridgeObjectRetain();
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v92 = v40;
  uint64_t v93 = v39;
  int v90 = v41;
  uint64_t v91 = v42;
  uint64_t v43 = sub_100008F88(v133, v133[3]);
  uint64_t v44 = *v43;
  uint64_t v45 = *(void *)(*v43 + 184);
  uint64_t v88 = *(void *)(*v43 + 192);
  uint64_t v89 = v45;
  uint64_t v46 = *(void *)(v44 + 200);
  uint64_t v86 = *(void *)(v44 + 208);
  uint64_t v87 = v46;
  int v85 = static Edge.Set.all.getter();
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Font.Leading.tight(_:), v17);
  *((void *)&v84 + 1) = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *(void *)&long long v84 = swift_getKeyPath();
  id v47 = [self labelColor];
  *((void *)&v83 + 1) = Color.init(uiColor:)();
  *(void *)&long long v83 = swift_getKeyPath();
  id v48 = *(id *)(a3 + 112);
  char v49 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t KeyPath = swift_getKeyPath();
  id v50 = *(id *)(a3 + 112);
  char v51 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v52 = swift_getKeyPath();
  id v53 = *(id *)(a3 + 112);
  static Alignment.center.getter();
  if (static UIContentSizeCategory.>= infix(_:_:)())
  {
    static Alignment.center.getter();
    if (static Alignment.== infix(_:_:)()) {
      static Alignment.leading.getter();
    }
  }

  char v122 = v90 & 1;
  char v121 = 0;
  uint64_t v54 = v94;
  if (v49) {
    uint64_t v54 = 0;
  }
  char v120 = v49 & 1;
  *(void *)&long long v123 = v93;
  *((void *)&v123 + 1) = v92;
  LOBYTE(v124) = v90 & 1;
  *((void *)&v124 + 1) = v91;
  LOBYTE(v125) = v85;
  *((void *)&v125 + 1) = v89;
  *(void *)&long long v126 = v88;
  *((void *)&v126 + 1) = v87;
  *(void *)&long long v127 = v86;
  BYTE8(v127) = 0;
  long long v128 = v84;
  long long v129 = v83;
  *(void *)&long long v130 = KeyPath;
  *((void *)&v130 + 1) = v54;
  LOBYTE(v131) = v49 & 1;
  *((void *)&v131 + 1) = v52;
  BOOL v132 = (v51 & 1) == 0;
  long long v138 = v127;
  long long v139 = v84;
  long long v136 = v125;
  long long v137 = v126;
  BOOL v143 = v132;
  long long v141 = v130;
  long long v142 = v131;
  long long v140 = v83;
  long long v134 = v123;
  long long v135 = v124;
  sub_10016634C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v112, 0.0, 1, 0.0, 1);
  sub_10005BB38((uint64_t)&v123);
  id v55 = *(id *)(a3 + 112);
  char v56 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v56) {
    double v57 = 1.0;
  }
  else {
    double v57 = 0.5;
  }
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = v98;
  OpacityTransition.init()();
  static Animation.easeInOut.getter();
  uint64_t v60 = sub_10005C830(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v62 = v101;
  uint64_t v61 = v102;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v61);
  uint64_t v64 = v103;
  uint64_t v63 = v104;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v99, v62, v104);
  v115[0] = v61;
  v115[1] = v60;
  swift_getOpaqueTypeConformance2();
  uint64_t v102 = AnyTransition.init<A>(_:)();
  memcpy(v113, v112, sizeof(v113));
  (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v63);
  strcpy((char *)v115, "GuidanceText-");
  HIWORD(v115[1]) = -4864;
  v65._uint64_t countAndFlagsBits = v111;
  v65._object = v95;
  String.append(_:)(v65);
  swift_bridgeObjectRelease();
  uint64_t v66 = v115[0];
  uint64_t v104 = v115[0];
  uint64_t v111 = v115[1];
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v69 = v105;
  uint64_t v68 = v106;
  v67[2] = v105;
  v67[3] = v68;
  uint64_t v70 = v107;
  v67[4] = a3;
  v67[5] = v70;
  uint64_t v71 = (void *)swift_allocObject();
  v71[2] = v69;
  v71[3] = v68;
  v71[4] = a3;
  v71[5] = v70;
  swift_retain_n();
  swift_retain_n();
  uint64_t v72 = static Alignment.top.getter();
  uint64_t v73 = (uint64_t)v108;
  *uint64_t v108 = v72;
  *(void *)(v73 + 8) = v74;
  uint64_t v75 = sub_100004010(&qword_100381CC0);
  sub_10005A87C(v69, v68, a3, v70, v133, v96, v97, v73 + *(int *)(v75 + 44));
  swift_bridgeObjectRelease();
  uint64_t v76 = (uint64_t)v109;
  sub_10000D2A0(v73, (uint64_t)v109, &qword_100381CA8);
  memcpy(v114, v113, 0x108uLL);
  v114[33] = v58;
  *(double *)&v114[34] = v57;
  uint64_t v77 = v102;
  v114[35] = v102;
  v114[36] = v66;
  uint64_t v78 = v110;
  v114[37] = v111;
  v114[38] = sub_10005BBDC;
  v114[39] = v67;
  memset(&v114[40], 0, 32);
  v114[44] = sub_10005BC24;
  v114[45] = v71;
  memcpy(v110, v114, 0x170uLL);
  uint64_t v79 = sub_100004010(&qword_100381CC8);
  sub_10000D2A0(v76, (uint64_t)v78 + *(int *)(v79 + 48), &qword_100381CA8);
  sub_10005BC68((uint64_t)v114);
  sub_10000950C(v73, &qword_100381CA8);
  sub_10000950C(v76, &qword_100381CA8);
  memcpy(v115, v113, 0x108uLL);
  v115[33] = v58;
  *(double *)&v115[34] = v57;
  v115[35] = v77;
  v115[36] = v104;
  v115[37] = v111;
  v115[38] = sub_10005BBDC;
  v115[39] = v67;
  long long v116 = 0u;
  long long v117 = 0u;
  uint64_t v118 = sub_10005BC24;
  uint64_t v119 = v71;
  sub_10005BD84((uint64_t)v115);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v133);
}

uint64_t sub_10005A358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1) {
    goto LABEL_9;
  }
  sub_10000FDBC();
  swift_retain();
  *long long v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = v7 + 1;
  if (v7 == -1)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    type metadata accessor for GuidanceMessagesModel();
    sub_10005C830(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  *(void *)(a1 + 104) = v8;
  if (v8 != v7) {
    sub_100223B1C();
  }
  return swift_release();
}

uint64_t sub_10005A4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v22 = a4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FDBC();
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a1;
  void v17[3] = a2;
  uint64_t v18 = v22;
  v17[4] = a3;
  v17[5] = v18;
  aBlock[4] = v23;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = v24;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005C830((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v25);
}

uint64_t sub_10005A7E4(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    sub_10020D650();
    return swift_release();
  }
  else
  {
    type metadata accessor for GuidanceMessagesModel();
    sub_10005C830(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10005A87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  v109._uint64_t countAndFlagsBits = a6;
  v109._object = a7;
  uint64_t v82 = a4;
  uint64_t v108 = a3;
  uint64_t v95 = a2;
  uint64_t v106 = a8;
  uint64_t v103 = type metadata accessor for OpacityTransition();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  long long v98 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100004010(&qword_100381CB0);
  uint64_t v102 = *(void *)(v104 - 8);
  uint64_t v11 = __chkstk_darwin(v104);
  long long v99 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v82 - v13;
  uint64_t v97 = type metadata accessor for Font.Leading();
  uint64_t v14 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004010(&qword_100381CD0);
  uint64_t v17 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_100381CD8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v105 = (uint64_t)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v107 = (uint64_t)&v82 - v23;
  if (!a1)
  {
    type metadata accessor for GuidanceMessagesModel();
    sub_10005C830(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
LABEL_27:
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v24 = *(void *)(a1 + 48);
  if (!v24) {
    goto LABEL_8;
  }
  if (!*(void *)(v24 + 72))
  {
    swift_retain();
    uint64_t v25 = sub_100232DD0();
    swift_bridgeObjectRetain();
    swift_release();
    if (v25) {
      goto LABEL_6;
    }
LABEL_8:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v107, 1, 1, v96);
    goto LABEL_11;
  }
  uint64_t v25 = *(void *)(v24 + 72);
LABEL_6:
  if (*(void *)(v25 + 16) < 2uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_100004010(&qword_100381CE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, 1, 1, v31);
  }
  else
  {
    v111[0] = v25;
    uint64_t KeyPath = swift_getKeyPath();
    sub_1000090FC((uint64_t)a5, (uint64_t)v112);
    uint64_t v26 = (void *)swift_allocObject();
    sub_100009164((long long *)v112, (uint64_t)(v26 + 2));
    object = v109._object;
    v26[7] = v109._countAndFlagsBits;
    v26[8] = object;
    uint64_t v28 = v95;
    v26[9] = a1;
    v26[10] = v28;
    uint64_t v29 = v82;
    v26[11] = v108;
    v26[12] = v29;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100004010(&qword_100380040);
    sub_100004010(&qword_100381CF0);
    sub_100009B18(&qword_100381CF8, &qword_100380040);
    sub_10005C14C();
    ForEach<>.init(_:id:content:)();
    uint64_t v30 = sub_100004010(&qword_100381CE8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v19, 0, 1, v30);
  }
  uint64_t v32 = v107;
  sub_10000D544((uint64_t)v19, v107, &qword_100381CD0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v32, 0, 1, v96);
LABEL_11:
  uint64_t countAndFlagsBits = v109._countAndFlagsBits;
  unint64_t v33 = (unint64_t)v109._object;
  *(Swift::String *)uint64_t v112 = v109;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v95 = v36;
  uint64_t v96 = v35;
  char v38 = v37;
  uint64_t KeyPath = v39;
  uint64_t v40 = sub_100008F88(a5, a5[3]);
  uint64_t v41 = *v40;
  uint64_t v42 = *(void *)(*v40 + 184);
  uint64_t v92 = *(void *)(*v40 + 192);
  uint64_t v93 = v42;
  uint64_t v43 = *(void *)(v41 + 200);
  uint64_t v90 = *(void *)(v41 + 208);
  uint64_t v91 = v43;
  int v88 = static Edge.Set.all.getter();
  int v89 = static Edge.Set.top.getter();
  uint64_t v44 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v44 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v44) {
    sub_100008F88(a5, a5[3]);
  }
  uint64_t v45 = v108;
  EdgeInsets.init(_all:)();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  unsigned __int8 v138 = v38 & 1;
  unsigned __int8 v135 = 0;
  unsigned __int8 v132 = 0;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v54 = v97;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.Leading.tight(_:), v97);
  uint64_t v87 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v54);
  uint64_t v97 = swift_getKeyPath();
  int v84 = v138;
  int v85 = v135;
  int v86 = v132;
  id v55 = [self labelColor];
  *((void *)&v83 + 1) = Color.init(uiColor:)();
  *(void *)&long long v83 = swift_getKeyPath();
  if (!v45)
  {
    type metadata accessor for UIMetrics();
    sub_10005C830((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    goto LABEL_27;
  }
  id v56 = *(id *)(v45 + 112);
  char v57 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v58 = swift_getKeyPath();
  id v59 = *(id *)(v45 + 112);
  char v60 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v61 = swift_getKeyPath();
  id v62 = *(id *)(v45 + 112);
  static Alignment.center.getter();
  if (static UIContentSizeCategory.>= infix(_:_:)())
  {
    static Alignment.center.getter();
    if (static Alignment.== infix(_:_:)()) {
      static Alignment.leading.getter();
    }
  }

  *(_DWORD *)((char *)&v120 + 1) = *(_DWORD *)v137;
  uint64_t v63 = 3;
  if (v57) {
    uint64_t v63 = 0;
  }
  DWORD1(v120) = *(_DWORD *)&v137[3];
  *(_DWORD *)((char *)&v121 + 1) = *(_DWORD *)v136;
  DWORD1(v121) = *(_DWORD *)&v136[3];
  *(_DWORD *)((char *)&v123 + 9) = *(_DWORD *)v134;
  HIDWORD(v123) = *(_DWORD *)&v134[3];
  DWORD1(v124) = *(_DWORD *)&v133[3];
  *(_DWORD *)((char *)&v124 + 1) = *(_DWORD *)v133;
  HIDWORD(v126) = *(_DWORD *)&v139[3];
  *(_DWORD *)((char *)&v126 + 9) = *(_DWORD *)v139;
  char v118 = v57 & 1;
  *(void *)&long long v119 = v96;
  *((void *)&v119 + 1) = v95;
  LOBYTE(v120) = v84;
  *((void *)&v120 + 1) = KeyPath;
  LOBYTE(v121) = v88;
  *((void *)&v121 + 1) = v93;
  *(void *)&long long v122 = v92;
  *((void *)&v122 + 1) = v91;
  *(void *)&long long v123 = v90;
  BYTE8(v123) = v85;
  LOBYTE(v124) = v89;
  *((void *)&v124 + 1) = v47;
  *(void *)&long long v125 = v49;
  *((void *)&v125 + 1) = v51;
  *(void *)&long long v126 = v53;
  BYTE8(v126) = v86;
  *(void *)&long long v127 = v97;
  *((void *)&v127 + 1) = v87;
  long long v128 = v83;
  *(void *)&long long v129 = v58;
  *((void *)&v129 + 1) = v63;
  LOBYTE(v130) = v57 & 1;
  *((void *)&v130 + 1) = v61;
  BOOL v131 = (v60 & 1) == 0;
  long long v143 = v122;
  long long v142 = v121;
  long long v140 = v119;
  long long v141 = v120;
  long long v147 = v126;
  long long v146 = v125;
  long long v144 = v123;
  long long v145 = v124;
  BOOL v152 = v131;
  long long v151 = v130;
  long long v150 = v129;
  long long v148 = v127;
  long long v149 = v83;
  sub_100166530(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v110, 0.0, 1, 0.0, 1);
  sub_10005BEB0((uint64_t)&v119);
  id v64 = *(id *)(v108 + 112);
  char v65 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v65) {
    double v66 = 1.0;
  }
  else {
    double v66 = 0.5;
  }
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = v98;
  OpacityTransition.init()();
  static Animation.easeInOut.getter();
  uint64_t v69 = sub_10005C830(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v70 = v100;
  uint64_t v71 = v103;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v68, v71);
  uint64_t v72 = v102;
  uint64_t v73 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v70, v104);
  *(void *)uint64_t v112 = v71;
  *(void *)&v112[8] = v69;
  swift_getOpaqueTypeConformance2();
  uint64_t v74 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v70, v73);
  *(void *)uint64_t v112 = 0xD000000000000010;
  *(void *)&v112[8] = 0x80000001002C9980;
  String.append(_:)(v109);
  uint64_t v75 = *(void *)v112;
  uint64_t v76 = *(void *)&v112[8];
  uint64_t v77 = v107;
  uint64_t v78 = v105;
  sub_10000D2A0(v107, v105, &qword_100381CD8);
  uint64_t v79 = v106;
  sub_10000D2A0(v78, v106, &qword_100381CD8);
  uint64_t v80 = (void *)(v79 + *(int *)(sub_100004010(&qword_100381CE0) + 48));
  memcpy(v111, v110, 0x138uLL);
  v111[39] = v67;
  *(double *)&v111[40] = v66;
  v111[41] = v74;
  v111[42] = v75;
  v111[43] = v76;
  memcpy(v80, v111, 0x160uLL);
  sub_10005BF48((uint64_t)v111);
  sub_10000950C(v77, &qword_100381CD8);
  memcpy(v112, v110, sizeof(v112));
  uint64_t v113 = v67;
  double v114 = v66;
  uint64_t v115 = v74;
  uint64_t v116 = v75;
  uint64_t v117 = v76;
  sub_10005C018((uint64_t)v112);
  return sub_10000950C(v78, &qword_100381CD8);
}

uint64_t sub_10005B4B8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v67 = a6;
  uint64_t v68 = a5;
  uint64_t v10 = type metadata accessor for Font.Leading();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004010(&qword_100381CF0);
  __chkstk_darwin(v14 - 8);
  double v66 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  v69[0] = v16;
  v69[1] = v17;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v64 = v19;
  uint64_t v65 = v18;
  char v21 = v20;
  uint64_t v63 = v22;
  uint64_t v23 = sub_100008F88(a2, a2[3]);
  uint64_t v24 = *v23;
  uint64_t v25 = *(void *)(*v23 + 184);
  uint64_t v61 = *(void *)(*v23 + 192);
  uint64_t v62 = v25;
  uint64_t v26 = *(void *)(v24 + 200);
  uint64_t v59 = *(void *)(v24 + 208);
  uint64_t v60 = v26;
  int v57 = static Edge.Set.all.getter();
  int v58 = static Edge.Set.top.getter();
  uint64_t v27 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v27 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v27) {
    sub_100008F88(a2, a2[3]);
  }
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  unsigned __int8 v93 = v21 & 1;
  unsigned __int8 v90 = 0;
  unsigned __int8 v87 = 0;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Font.Leading.tight(_:), v10);
  *((void *)&v56 + 1) = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)&long long v56 = swift_getKeyPath();
  int v53 = v93;
  int v54 = v90;
  int v55 = v87;
  id v36 = [self labelColor];
  *((void *)&v52 + 1) = Color.init(uiColor:)();
  *(void *)&long long v52 = swift_getKeyPath();
  uint64_t v37 = v68;
  if (v68)
  {
    id v38 = *(id *)(v68 + 112);
    char v39 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v40 = *(id *)(v37 + 112);
    char v41 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v42 = swift_getKeyPath();
    id v43 = *(id *)(v37 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    *(_DWORD *)((char *)&v74 + 1) = *(_DWORD *)v92;
    uint64_t v44 = 3;
    if (v39) {
      uint64_t v44 = 0;
    }
    DWORD1(v74) = *(_DWORD *)&v92[3];
    *(_DWORD *)((char *)&v75 + 1) = *(_DWORD *)v91;
    DWORD1(v75) = *(_DWORD *)&v91[3];
    *(_DWORD *)((char *)&v77 + 9) = *(_DWORD *)v89;
    HIDWORD(v77) = *(_DWORD *)&v89[3];
    *(_DWORD *)((char *)&v78 + 1) = *(_DWORD *)v88;
    DWORD1(v78) = *(_DWORD *)&v88[3];
    HIDWORD(v80) = *(_DWORD *)&v94[3];
    *(_DWORD *)((char *)&v80 + 9) = *(_DWORD *)v94;
    char v72 = v39 & 1;
    *(void *)&long long v73 = v65;
    *((void *)&v73 + 1) = v64;
    LOBYTE(v74) = v53;
    *((void *)&v74 + 1) = v63;
    LOBYTE(v75) = v57;
    *((void *)&v75 + 1) = v62;
    *(void *)&long long v76 = v61;
    *((void *)&v76 + 1) = v60;
    *(void *)&long long v77 = v59;
    BYTE8(v77) = v54;
    LOBYTE(v78) = v58;
    *((void *)&v78 + 1) = v29;
    *(void *)&long long v79 = v31;
    *((void *)&v79 + 1) = v33;
    *(void *)&long long v80 = v35;
    BYTE8(v80) = v55;
    long long v81 = v56;
    long long v82 = v52;
    *(void *)&long long v83 = KeyPath;
    *((void *)&v83 + 1) = v44;
    LOBYTE(v84) = v39 & 1;
    *((void *)&v84 + 1) = v42;
    BOOL v85 = (v41 & 1) == 0;
    long long v98 = v76;
    long long v97 = v75;
    long long v95 = v73;
    long long v96 = v74;
    long long v102 = v80;
    long long v101 = v79;
    long long v99 = v77;
    long long v100 = v78;
    BOOL v107 = v85;
    long long v106 = v84;
    long long v105 = v83;
    long long v103 = v56;
    long long v104 = v52;
    sub_100166530(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v86, 0.0, 1, 0.0, 1);
    sub_10005BEB0((uint64_t)&v73);
    id v45 = *(id *)(v68 + 112);
    char v46 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v46) {
      double v47 = 1.0;
    }
    else {
      double v47 = 0.5;
    }
    uint64_t v48 = swift_getKeyPath();
    memcpy(v71, v86, 0x138uLL);
    v71[39] = v48;
    *(double *)&v71[40] = v47;
    memcpy(v69, v71, 0x148uLL);
    v69[41] = 0;
    char v70 = 0;
    sub_100004010(&qword_100381D10);
    sub_10005C1F8();
    uint64_t v49 = (uint64_t)v66;
    View.accessibilityHidden(_:)();
    sub_10005C75C((uint64_t)v71);
    return sub_10000D544(v49, v67, &qword_100381CF0);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10005C830((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10005BB0C@<X0>(void *a1@<X8>)
{
  return sub_100059858(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_10005BB38(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005BBDC()
{
  return sub_10005A4FC(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_100350DB8, (uint64_t)sub_10005C8BC, (uint64_t)&unk_100350DD0);
}

uint64_t sub_10005BC24()
{
  return sub_10005A4FC(v0[2], v0[3], v0[4], v0[5], (uint64_t)&unk_100350D68, (uint64_t)sub_10005C80C, (uint64_t)&unk_100350D80);
}

uint64_t sub_10005BC68(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 304);
  uint64_t v4 = *(void *)(a1 + 320);
  uint64_t v5 = *(void *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 352);
  sub_100033724(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001EA7C(v3);
  sub_10001EA7C(v4);
  sub_10001EA7C(v5);
  sub_10001EA7C(v6);
  return a1;
}

uint64_t sub_10005BD84(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 304);
  uint64_t v4 = *(void *)(a1 + 320);
  uint64_t v5 = *(void *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 352);
  sub_100033364(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10005BEA0(v3);
  sub_10005BEA0(v4);
  sub_10005BEA0(v5);
  sub_10005BEA0(v6);
  return a1;
}

uint64_t sub_10005BEA0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10005BEB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005BF48(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005C018(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005C0E8()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10005C138@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005B4B8(a1, v2 + 2, v2[7], v2[8], v2[11], a2);
}

unint64_t sub_10005C14C()
{
  unint64_t result = qword_100381D00;
  if (!qword_100381D00)
  {
    sub_1000094C4(&qword_100381CF0);
    sub_10005C1F8();
    sub_10005C830(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D00);
  }
  return result;
}

unint64_t sub_10005C1F8()
{
  unint64_t result = qword_100381D08;
  if (!qword_100381D08)
  {
    sub_1000094C4(&qword_100381D10);
    sub_10005C618(&qword_100381D18, &qword_100381D20, (void (*)(void))sub_10005C2A0);
    sub_10005C708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D08);
  }
  return result;
}

unint64_t sub_10005C2A0()
{
  unint64_t result = qword_100381D28;
  if (!qword_100381D28)
  {
    sub_1000094C4(&qword_100381D30);
    sub_10005C618(&qword_100381D38, &qword_100381D40, (void (*)(void))sub_10005C36C);
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D28);
  }
  return result;
}

unint64_t sub_10005C36C()
{
  unint64_t result = qword_100381D48;
  if (!qword_100381D48)
  {
    sub_1000094C4(&qword_100381D50);
    sub_10005C40C();
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D48);
  }
  return result;
}

unint64_t sub_10005C40C()
{
  unint64_t result = qword_100381D58;
  if (!qword_100381D58)
  {
    sub_1000094C4(&qword_100381D60);
    sub_10005C4AC();
    sub_100009B18(&qword_100380A78, &qword_100380A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D58);
  }
  return result;
}

unint64_t sub_10005C4AC()
{
  unint64_t result = qword_100381D68;
  if (!qword_100381D68)
  {
    sub_1000094C4(&qword_100381D70);
    sub_10005C54C();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D68);
  }
  return result;
}

unint64_t sub_10005C54C()
{
  unint64_t result = qword_100381D78;
  if (!qword_100381D78)
  {
    sub_1000094C4(&qword_100381D80);
    sub_10005C618(&qword_100381D88, &qword_100381D90, (void (*)(void))sub_10005C694);
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D78);
  }
  return result;
}

uint64_t sub_10005C618(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005C694()
{
  unint64_t result = qword_100381D98;
  if (!qword_100381D98)
  {
    sub_1000094C4(&qword_100381DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381D98);
  }
  return result;
}

unint64_t sub_10005C708()
{
  unint64_t result = qword_100381DA8;
  if (!qword_100381DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381DA8);
  }
  return result;
}

uint64_t sub_10005C75C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005C80C()
{
  return sub_10005A7E4(*(void *)(v0 + 16));
}

uint64_t sub_10005C818(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005C828()
{
  return swift_release();
}

uint64_t sub_10005C830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005C87C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005C8BC()
{
  return sub_10005A358(*(void *)(v0 + 16));
}

uint64_t sub_10005C8C8()
{
  return sub_100009B18(&qword_100381DB0, &qword_100381DB8);
}

uint64_t destroy for TransitionAlertModel.AlertButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ExplorerSuggestionView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ExplorerSuggestionView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ExplorerSuggestionView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ExplorerSuggestionView()
{
  return &type metadata for ExplorerSuggestionView;
}

uint64_t sub_10005CA5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005CA78(char a1, uint64_t a2)
{
  switch(a1)
  {
    case 1:
      uint64_t v15 = self;
      id v16 = [v15 mainBundle];
      v94._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      v94._object = (void *)0x80000001002C9F20;
      v17._object = (void *)0x80000001002C9F00;
      v17._uint64_t countAndFlagsBits = 0xD000000000000019;
      v18.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v18.value._object = (void *)0xED00006E6F656769;
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v94)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1002B3350;
      id v21 = [v15 mainBundle];
      v95._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v22._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v95._object = (void *)0x80000001002C9F90;
      v22._object = (void *)0x80000001002C9F50;
      v23.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v23.value._object = (void *)0xED00006E6F656769;
      v24._uint64_t countAndFlagsBits = 0;
      v24._object = (void *)0xE000000000000000;
      Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v95);

      *(Swift::String *)(v20 + 32) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 2:
    case 3:
      uint64_t v26 = self;
      id v27 = [v26 mainBundle];
      v96._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
      v96._object = (void *)0x80000001002C8F00;
      v28._object = (void *)0x80000001002C8EE0;
      v28._uint64_t countAndFlagsBits = 0xD000000000000019;
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v96)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1002B3350;
      id v31 = [v26 mainBundle];
      v97._uint64_t countAndFlagsBits = 0xD000000000000025;
      v97._object = (void *)0x80000001002C9ED0;
      v32._object = (void *)0x80000001002C9E40;
      v32._uint64_t countAndFlagsBits = 0x100000000000008ELL;
      v33.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v33.value._object = (void *)0xED00006E6F656769;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v97);

      *(Swift::String *)(v30 + 32) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 4:
      id v36 = self;
      id v37 = [v36 mainBundle];
      v38._uint64_t countAndFlagsBits = 0xD000000000000013;
      v98._uint64_t countAndFlagsBits = 0xD000000000000068;
      v98._object = (void *)0x80000001002C9D40;
      v38._object = (void *)0x80000001002C9D20;
      v39.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v39.value._object = (void *)0xED00006E6F656769;
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v98)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1002B3350;
      id v42 = [v36 mainBundle];
      v99._uint64_t countAndFlagsBits = 0xD000000000000031;
      v43._uint64_t countAndFlagsBits = 0xD000000000000044;
      v99._object = (void *)0x80000001002C9E00;
      v43._object = (void *)0x80000001002C9DB0;
      v44.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v44.value._object = (void *)0xED00006E6F656769;
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v99);

      *(Swift::String *)(v41 + 32) = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 5:
      double v47 = self;
      id v48 = [v47 mainBundle];
      v49._uint64_t countAndFlagsBits = 0xD000000000000015;
      v100._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
      v100._object = (void *)0x80000001002C9C50;
      v49._object = (void *)0x80000001002C9B40;
      v50.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v50.value._object = (void *)0xED00006E6F656769;
      v51._uint64_t countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v100)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1002B3350;
      id v53 = [v47 mainBundle];
      v101._uint64_t countAndFlagsBits = 0xD000000000000025;
      v54._uint64_t countAndFlagsBits = 0xD000000000000037;
      v101._object = (void *)0x80000001002C9CF0;
      v54._object = (void *)0x80000001002C9CB0;
      v55.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v55.value._object = (void *)0xED00006E6F656769;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      Swift::String v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v101);

      *(Swift::String *)(v52 + 32) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 6:
      int v58 = self;
      id v59 = [v58 mainBundle];
      v60._uint64_t countAndFlagsBits = 0xD000000000000015;
      v102._uint64_t countAndFlagsBits = 0xD000000000000064;
      v102._object = (void *)0x80000001002C9B60;
      v60._object = (void *)0x80000001002C9B40;
      v61.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v61.value._object = (void *)0xED00006E6F656769;
      v62._uint64_t countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v59, v62, v102)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_1002B3350;
      id v64 = [v58 mainBundle];
      v103._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v65._uint64_t countAndFlagsBits = 0xD000000000000043;
      v103._object = (void *)0x80000001002C9C20;
      v65._object = (void *)0x80000001002C9BD0;
      v66.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v66.value._object = (void *)0xED00006E6F656769;
      v67._uint64_t countAndFlagsBits = 0;
      v67._object = (void *)0xE000000000000000;
      Swift::String v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, v66, (NSBundle)v64, v67, v103);

      *(Swift::String *)(v63 + 32) = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 7:
      uint64_t v69 = self;
      id v70 = [v69 mainBundle];
      v71._uint64_t countAndFlagsBits = 0xD000000000000018;
      v104._uint64_t countAndFlagsBits = 0xD000000000000051;
      v104._object = (void *)0x80000001002C99C0;
      v71._object = (void *)0x80000001002C9AD0;
      v72.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v72.value._object = (void *)0xED00006E6F656769;
      v73._uint64_t countAndFlagsBits = 0;
      v73._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v104)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_1002B3350;
      id v75 = [v69 mainBundle];
      v76._uint64_t countAndFlagsBits = 0xD000000000000044;
      v105._uint64_t countAndFlagsBits = 0xD000000000000050;
      v105._object = (void *)0x80000001002C9A70;
      v76._object = (void *)0x80000001002C9AF0;
      v77.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v77.value._object = (void *)0xED00006E6F656769;
      v78._uint64_t countAndFlagsBits = 0;
      v78._object = (void *)0xE000000000000000;
      Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v76, v77, (NSBundle)v75, v78, v105);

      *(Swift::String *)(v74 + 32) = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 8:
      long long v80 = self;
      id v81 = [v80 mainBundle];
      v82._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v106._uint64_t countAndFlagsBits = 0xD000000000000051;
      v106._object = (void *)0x80000001002C99C0;
      v82._object = (void *)0x80000001002C99A0;
      v83.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v83.value._object = (void *)0xED00006E6F656769;
      v84._uint64_t countAndFlagsBits = 0;
      v84._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v106)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = xmmword_1002B3350;
      id v86 = [v80 mainBundle];
      v87._uint64_t countAndFlagsBits = 0xD000000000000046;
      v107._uint64_t countAndFlagsBits = 0xD000000000000050;
      v107._object = (void *)0x80000001002C9A70;
      v87._object = (void *)0x80000001002C9A20;
      v88.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v88.value._object = (void *)0xED00006E6F656769;
      v89._uint64_t countAndFlagsBits = 0;
      v89._object = (void *)0xE000000000000000;
      Swift::String v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, v88, (NSBundle)v86, v89, v107);

      *(Swift::String *)(v85 + 32) = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    default:
      uint64_t v3 = self;
      id v4 = [v3 mainBundle];
      v92._uint64_t countAndFlagsBits = 0xD000000000000028;
      v92._object = (void *)0x80000001002C9FC0;
      v5._object = (void *)0x80000001002C9F00;
      v5._uint64_t countAndFlagsBits = 0xD000000000000019;
      v6.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v6.value._object = (void *)0xED00006E6F656769;
      v7._uint64_t countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v92)._countAndFlagsBits;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1002B3350;
      id v10 = [v3 mainBundle];
      v11._uint64_t countAndFlagsBits = 0x1000000000000074;
      v93._uint64_t countAndFlagsBits = 0xD000000000000027;
      v93._object = (void *)0x80000001002CA070;
      v11._object = (void *)0x80000001002C9FF0;
      v12.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v12.value._object = (void *)0xED00006E6F656769;
      v13._uint64_t countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v93);

      *(Swift::String *)(v9 + 32) = v14;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      break;
  }
  sub_10005EEBC(a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_10005D7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  uint64_t v62 = a6;
  int v61 = a5;
  uint64_t v57 = a4;
  uint64_t v13 = sub_100004010(&qword_100381DD8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v66 = (uint64_t)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)v52 - v16;
  uint64_t v18 = sub_100004010(&qword_100381DE0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v65 = (uint64_t)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  Swift::String v22 = (char *)v52 - v21;
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v23 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  static Font.headline.getter();
  uint64_t v28 = Text.font(_:)();
  uint64_t v58 = v29;
  uint64_t v59 = v28;
  char v31 = v30;
  uint64_t v60 = v32;
  swift_release();
  int v54 = v31 & 1;
  sub_100033364(v23, v25, v27);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v55 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  *(void *)Swift::String v22 = static HorizontalAlignment.center.getter();
  *((void *)v22 + 1) = 0x4028000000000000;
  v22[16] = 0;
  Swift::String v67 = v22;
  sub_100004010(&qword_100381DE8);
  uint64_t v68 = a3;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100380040);
  sub_100004010(&qword_1003809B8);
  sub_100009B18(&qword_100381CF8, &qword_100380040);
  sub_100033620();
  ForEach<>.init(_:id:content:)();
  uint64_t v41 = (uint64_t)v17;
  *(void *)Swift::String v17 = static HorizontalAlignment.center.getter();
  *((void *)v17 + 1) = 0x4028000000000000;
  v17[16] = 0;
  v52[1] = &v17[*(int *)(sub_100004010(&qword_100381DF0) + 44)];
  id v53 = v17;
  uint64_t v68 = v57;
  swift_getKeyPath();
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = v61;
  uint64_t v43 = v63;
  *(void *)(v42 + 24) = v62;
  *(void *)(v42 + 32) = v43;
  *(void *)(v42 + 40) = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100004010(&qword_100381DF8);
  sub_100004010(&qword_100381E00);
  sub_100009B18(&qword_100381E08, &qword_100381DF8);
  sub_10005E80C();
  sub_10005E860();
  ForEach<>.init(_:id:content:)();
  LOBYTE(v17) = v54;
  LOBYTE(v68) = v54;
  uint64_t v44 = v65;
  sub_10000D2A0((uint64_t)v67, v65, &qword_100381DE0);
  uint64_t v45 = v66;
  sub_10000D2A0(v41, v66, &qword_100381DD8);
  uint64_t v46 = v58;
  uint64_t v47 = v59;
  *(void *)a9 = v59;
  *(void *)(a9 + 8) = v46;
  *(unsigned char *)(a9 + 16) = (_BYTE)v17;
  uint64_t v48 = KeyPath;
  *(void *)(a9 + 24) = v60;
  *(void *)(a9 + 32) = v48;
  *(unsigned char *)(a9 + 40) = 1;
  *(unsigned char *)(a9 + 48) = v55;
  *(void *)(a9 + 56) = v34;
  *(void *)(a9 + 64) = v36;
  *(void *)(a9 + 72) = v38;
  *(void *)(a9 + 80) = v40;
  *(unsigned char *)(a9 + 88) = 0;
  *(void *)(a9 + 96) = 0x4018000000000000;
  *(unsigned char *)(a9 + 104) = 0;
  Swift::String v49 = (int *)sub_100004010(&qword_100381E48);
  sub_10000D2A0(v44, a9 + v49[16], &qword_100381DE0);
  uint64_t v50 = a9 + v49[20];
  *(void *)uint64_t v50 = 0x4032000000000000;
  *(unsigned char *)(v50 + 8) = 0;
  sub_10000D2A0(v45, a9 + v49[24], &qword_100381DD8);
  sub_100033724(v47, v46, (char)v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100033724(v47, v46, (char)v17);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10000950C((uint64_t)v53, &qword_100381DD8);
  sub_10000950C((uint64_t)v67, &qword_100381DE0);
  sub_100033364(v47, v46, (char)v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000950C(v45, &qword_100381DD8);
  sub_10000950C(v44, &qword_100381DE0);
  sub_100033364(v47, v46, v68);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005DD40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.subheadline.getter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  sub_100033364(v10, v12, v14);
  swift_bridgeObjectRelease();
  LODWORD(v29) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v20 = Text.foregroundStyle<A>(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  sub_100033364(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v24 & 1;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 40) = 1;
  return result;
}

uint64_t sub_10005DF68@<X0>(char *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  int v47 = a2;
  uint64_t v58 = a6;
  uint64_t v8 = type metadata accessor for BorderedButtonStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  __chkstk_darwin(v8);
  id v53 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for ButtonBorderShape();
  uint64_t v11 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004010(&qword_100381E38);
  uint64_t v14 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004010(&qword_100381E20);
  __chkstk_darwin(v46);
  char v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_100381E50);
  uint64_t v54 = *(void *)(v19 - 8);
  uint64_t v55 = v19;
  __chkstk_darwin(v19);
  uint64_t v48 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v21 = *a1;
  uint64_t v23 = *((void *)a1 + 1);
  uint64_t v22 = *((void *)a1 + 2);
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = v47;
  uint64_t v25 = v49;
  *(void *)(v24 + 24) = a3;
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v50;
  *(unsigned char *)(v24 + 48) = v21;
  *(void *)(v24 + 56) = v23;
  *(void *)(v24 + 64) = v22;
  char v59 = v21;
  uint64_t v60 = v23;
  uint64_t v61 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100381E58);
  sub_10005EAF4();
  Button.init(action:label:)();
  static ButtonBorderShape.roundedRectangle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = (uint64_t *)&v18[*(int *)(v46 + 36)];
  uint64_t v28 = sub_100004010(&qword_100381038);
  uint64_t v29 = v52;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v27 + *(int *)(v28 + 28), v13, v52);
  *char v27 = KeyPath;
  uint64_t v30 = v51;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v51);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
  char v31 = v53;
  BorderedButtonStyle.init()();
  sub_10005E954();
  sub_10005EA18();
  uint64_t v32 = v48;
  uint64_t v33 = v56;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v33);
  sub_10000950C((uint64_t)v18, &qword_100381E20);
  id v34 = [self labelColor];
  uint64_t v35 = Color.init(uiColor:)();
  uint64_t v36 = swift_getKeyPath();
  uint64_t v62 = v35;
  swift_retain();
  uint64_t v37 = AnyShapeStyle.init<A>(_:)();
  uint64_t v38 = v54;
  uint64_t v39 = v58;
  uint64_t v40 = v32;
  uint64_t v41 = v32;
  uint64_t v42 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v58, v40, v55);
  swift_release();
  uint64_t v43 = (uint64_t *)(v39 + *(int *)(sub_100004010(&qword_100381E00) + 36));
  uint64_t *v43 = v36;
  v43[1] = v37;
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v41, v42);
}

uint64_t sub_10005E494@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)&long long v26 = a1;
  *((void *)&v26 + 1) = a2;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, v11, v12, v4, v6, v10, v8);
  sub_100033364(v4, v6, v10);
  swift_bridgeObjectRelease();
  long long v32 = v24[6];
  long long v33 = v24[7];
  long long v34 = v24[8];
  long long v28 = v24[2];
  long long v29 = v24[3];
  long long v30 = v24[4];
  long long v31 = v24[5];
  long long v26 = v24[0];
  long long v27 = v24[1];
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  uint64_t v13 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v8) = static Edge.Set.vertical.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  char v25 = 0;
  long long v16 = v33;
  *(_OWORD *)(a3 + 96) = v32;
  *(_OWORD *)(a3 + 112) = v16;
  *(_OWORD *)(a3 + 128) = v34;
  long long v17 = v29;
  *(_OWORD *)(a3 + 32) = v28;
  *(_OWORD *)(a3 + 48) = v17;
  long long v18 = v31;
  *(_OWORD *)(a3 + 64) = v30;
  *(_OWORD *)(a3 + 80) = v18;
  long long v19 = v27;
  *(_OWORD *)a3 = v26;
  *(_OWORD *)(a3 + 16) = v19;
  *(void *)(a3 + 144) = KeyPath;
  *(void *)(a3 + 152) = v13;
  *(unsigned char *)(a3 + 160) = v8;
  *(_DWORD *)(a3 + 161) = v24[0];
  *(_DWORD *)(a3 + 164) = *(_DWORD *)((char *)v24 + 3);
  *(void *)(a3 + 168) = v20;
  *(void *)(a3 + 176) = v21;
  *(void *)(a3 + 184) = v22;
  *(void *)(a3 + 192) = v23;
  *(unsigned char *)(a3 + 200) = v25;
  return result;
}

uint64_t sub_10005E63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_100381DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  int v9 = *(unsigned __int8 *)v1;
  uint64_t v10 = sub_10005CA78(v9, v6);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v17 = sub_100004010(&qword_100381DC8);
  sub_10005D7B8(v10, v12, v14, v16, v9, v6, v7, v8, (uint64_t)&v5[*(int *)(v17 + 44)]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v16) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v5, a1, &qword_100381DC0);
  uint64_t v18 = a1 + *(int *)(sub_100004010(&qword_100381DD0) + 36);
  *(unsigned char *)uint64_t v18 = v16;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(unsigned char *)(v18 + 40) = 1;
  return sub_10000950C((uint64_t)v5, &qword_100381DC0);
}

uint64_t sub_10005E7BC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005E7FC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DF68(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

unint64_t sub_10005E80C()
{
  unint64_t result = qword_100381E10;
  if (!qword_100381E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E10);
  }
  return result;
}

unint64_t sub_10005E860()
{
  unint64_t result = qword_100381E18;
  if (!qword_100381E18)
  {
    sub_1000094C4(&qword_100381E00);
    sub_1000094C4(&qword_100381E20);
    type metadata accessor for BorderedButtonStyle();
    sub_10005E954();
    sub_10005EA18();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E18);
  }
  return result;
}

unint64_t sub_10005E954()
{
  unint64_t result = qword_100381E28;
  if (!qword_100381E28)
  {
    sub_1000094C4(&qword_100381E20);
    sub_100009B18(&qword_100381E30, &qword_100381E38);
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E28);
  }
  return result;
}

unint64_t sub_10005EA18()
{
  unint64_t result = qword_100381E40;
  if (!qword_100381E40)
  {
    type metadata accessor for BorderedButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E40);
  }
  return result;
}

uint64_t sub_10005EA70()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10005EAB8()
{
  return (*(uint64_t (**)(void))(v0 + 32))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_10005EAE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10005E494(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_10005EAF4()
{
  unint64_t result = qword_100381E60;
  if (!qword_100381E60)
  {
    sub_1000094C4(&qword_100381E58);
    sub_10005EB70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E60);
  }
  return result;
}

unint64_t sub_10005EB70()
{
  unint64_t result = qword_100381E68;
  if (!qword_100381E68)
  {
    sub_1000094C4(&qword_100381E70);
    sub_100043500();
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E68);
  }
  return result;
}

uint64_t sub_10005EC28(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000014;
      unint64_t v13 = 0x80000001002CA1B0;
      unint64_t v3 = 0x80000001002CA190;
      goto LABEL_5;
    case 2:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD00000000000001BLL;
      unint64_t v4 = 0xD00000000000003ALL;
      unint64_t v13 = 0x80000001002CA150;
      uint64_t v5 = "Try Connecting to Satellite";
      goto LABEL_8;
    case 3:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000011;
      unint64_t v4 = 0xD000000000000033;
      unint64_t v13 = 0x80000001002CA0F0;
      uint64_t v5 = "Try Emergency SOS";
      goto LABEL_8;
    case 4:
    case 5:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v13 = 0x80000001002CA0A0;
      unint64_t v2 = 0x6553206F74206F47;
      unint64_t v3 = 0xEE0073676E697474;
LABEL_5:
      uint64_t v6 = 0x5072656972726143;
      unint64_t v7 = 0xED00006E6F656769;
      v8.super.Class isa = v1;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      unint64_t v4 = 0xD000000000000029;
      goto LABEL_9;
    default:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD00000000000001ALL;
      unint64_t v4 = 0xD00000000000002ELL;
      unint64_t v13 = 0x80000001002CA200;
      uint64_t v5 = "Use Messages via Satellite";
LABEL_8:
      unint64_t v3 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v6 = 0x5072656972726143;
      unint64_t v7 = 0xED00006E6F656769;
      v8.super.Class isa = v1;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
LABEL_9:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v6, v8, *(Swift::String *)&v9, *(Swift::String *)(&v13 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

void *sub_10005EEBC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001BF6E4(0, v1, 0);
    unint64_t v3 = (char *)(a1 + 32);
    do
    {
      char v5 = *v3++;
      char v4 = v5;
      uint64_t v6 = sub_10005EC28(v5);
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001BF6E4(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[3 * v10];
      *((unsigned char *)v11 + 32) = v4;
      v11[5] = v6;
      void v11[6] = v8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t destroy for QuestionnairePolicy()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s8SOSBuddy22ExplorerSuggestionViewV18ActionPresentationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplorerSuggestionView.ActionPresentation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplorerSuggestionView.ActionPresentation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerSuggestionView.ActionPresentation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerSuggestionView.ActionPresentation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerSuggestionView.ActionPresentation()
{
  return &type metadata for ExplorerSuggestionView.ActionPresentation;
}

unint64_t sub_10005F110()
{
  unint64_t result = qword_100381E78;
  if (!qword_100381E78)
  {
    sub_1000094C4(&qword_100381DD0);
    sub_100009B18(&qword_100381E80, &qword_100381DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381E78);
  }
  return result;
}

uint64_t destroy for QuestionnaireBackToPreviousPageView(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for QuestionnaireBackToPreviousPageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a2 + 32;
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v8;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(void *)(a1 + 48) = *(void *)(v6 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for QuestionnaireBackToPreviousPageView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      swift_retain();
      swift_release();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10005F3C0(a1 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *uint64_t v4 = *v7;
      *(void *)(a1 + 48) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *uint64_t v4 = v9;
  }
  return a1;
}

uint64_t sub_10005F3C0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for QuestionnaireBackToPreviousPageView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_10005F3C0(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)(a1 + 32) = v5;
  swift_release();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StewieAppDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StewieAppDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireBackToPreviousPageView()
{
  return &type metadata for QuestionnaireBackToPreviousPageView;
}

uint64_t sub_10005F55C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005F578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v47 = type metadata accessor for ControlSize();
  uint64_t v41 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10037F118);
  uint64_t v40 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004010(&qword_10037F120);
  uint64_t v9 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100381E88);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004010(&qword_100381E90);
  __chkstk_darwin(v44);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)*v1;
  if (*v1)
  {
    uint64_t v18 = v17[9];
    uint64_t v19 = v17[10];
    sub_100008F88(v17 + 6, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 24))(v49, v18, v19);
    *(void *)uint64_t v14 = static HorizontalAlignment.center.getter();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    uint64_t v20 = &v14[*(int *)(sub_100004010(&qword_100381E98) + 44)];
    ProgressView<>.init<>()();
    CircularProgressViewStyle.init()();
    sub_100009B18(&qword_10037F210, &qword_10037F118);
    sub_10005FB44(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v21 = v43;
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v21);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v6);
    uint64_t v22 = v41;
    uint64_t v24 = v46;
    uint64_t v23 = v47;
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v46, enum case for ControlSize.regular(_:), v47);
    uint64_t KeyPath = swift_getKeyPath();
    long long v26 = (uint64_t *)&v20[*(int *)(sub_100004010(&qword_10037F128) + 36)];
    uint64_t v27 = sub_100004010(&qword_10037F228);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v26 + *(int *)(v27 + 28), v24, v23);
    *long long v26 = KeyPath;
    uint64_t v28 = v45;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v20, v11, v45);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
    uint64_t v29 = v50;
    uint64_t v30 = v51;
    sub_100008F88(v49, v50);
    double v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    LOBYTE(v29) = static Edge.Set.all.getter();
    sub_10005FB94((uint64_t)v14, (uint64_t)v16);
    uint64_t v38 = &v16[*(int *)(v44 + 36)];
    *uint64_t v38 = v29;
    *((double *)v38 + 1) = v31;
    *((void *)v38 + 2) = v33;
    *((void *)v38 + 3) = v35;
    *((void *)v38 + 4) = v37;
    v38[40] = 0;
    sub_10005FBFC((uint64_t)v14);
    sub_10005FC5C((uint64_t)v16, v48);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v49);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10005FB44((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10005FB44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005FB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005FBFC(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100381E88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005FCC8()
{
  unint64_t result = qword_100381EA0;
  if (!qword_100381EA0)
  {
    sub_1000094C4(&qword_100381E90);
    sub_100009B18(&qword_100381EA8, &qword_100381E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381EA0);
  }
  return result;
}

uint64_t sub_10005FD68(uint64_t a1)
{
  return sub_10005FEC0(a1, (SEL *)&selRef_systemGrayColor, (uint64_t (*)(id))&Color.init(uiColor:), &qword_1003A9860);
}

uint64_t sub_10005FD90()
{
  uint64_t v0 = type metadata accessor for Color.RGBColorSpace();
  __chkstk_darwin(v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:));
  uint64_t result = Color.init(_:red:green:blue:opacity:)();
  qword_1003A9868 = result;
  return result;
}

uint64_t sub_10005FE70(uint64_t a1)
{
  return sub_10005FEC0(a1, (SEL *)&selRef_systemGray3Color, (uint64_t (*)(id))&Color.init(_:), &qword_1003A9870);
}

uint64_t sub_10005FE98(uint64_t a1)
{
  return sub_10005FEC0(a1, (SEL *)&selRef_secondaryLabelColor, (uint64_t (*)(id))&Color.init(_:), &qword_1003A9878);
}

uint64_t sub_10005FEC0(uint64_t a1, SEL *a2, uint64_t (*a3)(id), uint64_t *a4)
{
  id v6 = [self *a2];
  uint64_t result = a3(v6);
  *a4 = result;
  return result;
}

ValueMetadata *type metadata accessor for BuiltInQuestionFooterView()
{
  return &type metadata for BuiltInQuestionFooterView;
}

uint64_t sub_10005FF28()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10005FF44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(*(unsigned char *)(a1 + 64))
  {
    case 1:
    case 2:
    case 4:
    case 6:
      type metadata accessor for AppEvents();
      sub_100060A88((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      swift_retain();
      swift_retain();
      EnvironmentObject.init()();
      type metadata accessor for UIMetrics();
      sub_100060A88((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      EnvironmentObject.init()();
      type metadata accessor for QuestionnaireState();
      sub_100060A88(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
      EnvironmentObject.init()();
      sub_1000553DC();
      sub_100060A34();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v10 = v4;
      long long v11 = v5;
      long long v12 = v6;
      long long v13 = v7;
      uint64_t v14 = v8;
      LOBYTE(v15) = v9;
      HIBYTE(v15) = 1;
      sub_100004010(&qword_100381EC8);
      sub_100004010(&qword_100381EE8);
      sub_10006088C();
      sub_1000609F8();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_100381EB0);
      sub_1000608C8(&qword_100381EB8, &qword_100381EB0, (void (*)(void))sub_10006088C, (void (*)(void))sub_1000609F8);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
      goto LABEL_7;
    case 3:
      type metadata accessor for StewieModel();
      sub_100060A88(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
      EnvironmentObject.init()();
      sub_100060950();
      sub_1000609A4();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      *((void *)&v13 + 1) = BYTE8(v13);
      uint64_t v14 = 0;
      __int16 v15 = 0;
      sub_100004010(&qword_100381EC8);
      sub_100004010(&qword_100381EE8);
      sub_10006088C();
      sub_1000609F8();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_100381EB0);
      sub_1000608C8(&qword_100381EB8, &qword_100381EB0, (void (*)(void))sub_10006088C, (void (*)(void))sub_1000609F8);
      _ConditionalContent<>.init(storage:)();
      goto LABEL_8;
    case 5:
      type metadata accessor for RoadsideAssistanceModel();
      sub_100060A88(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      swift_retain();
      swift_retain();
      EnvironmentObject.init()();
      type metadata accessor for QuestionnaireState();
      sub_100060A88(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
      EnvironmentObject.init()();
      sub_1000553DC();
      sub_100060A34();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      long long v10 = v4;
      long long v11 = v5;
      long long v12 = v6;
      long long v13 = v7;
      uint64_t v14 = v8;
      LOBYTE(v15) = v9;
      HIBYTE(v15) = 1;
      goto LABEL_6;
    case 7:
      sub_100004010(&qword_100381EB0);
      sub_1000608C8(&qword_100381EB8, &qword_100381EB0, (void (*)(void))sub_10006088C, (void (*)(void))sub_1000609F8);
      _ConditionalContent<>.init(storage:)();
      goto LABEL_9;
    default:
      type metadata accessor for UIMetrics();
      sub_100060A88((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      swift_retain();
      swift_retain();
      EnvironmentObject.init()();
      type metadata accessor for QuestionnaireState();
      sub_100060A88(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
      EnvironmentObject.init()();
      sub_100060950();
      sub_1000609A4();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      *((void *)&v13 + 1) = BYTE8(v13);
      uint64_t v14 = 0;
      __int16 v15 = 0;
LABEL_6:
      sub_100004010(&qword_100381EC8);
      sub_100004010(&qword_100381EE8);
      sub_10006088C();
      sub_1000609F8();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_100381EB0);
      sub_1000608C8(&qword_100381EB8, &qword_100381EB0, (void (*)(void))sub_10006088C, (void (*)(void))sub_1000609F8);
      _ConditionalContent<>.init(storage:)();
      swift_release();
LABEL_7:
      swift_release();
      swift_release();
LABEL_8:
      swift_release();
LABEL_9:
      double result = *(double *)&v10;
      *(_OWORD *)a2 = v10;
      *(_OWORD *)(a2 + 16) = v11;
      *(_OWORD *)(a2 + 32) = v12;
      *(_OWORD *)(a2 + 48) = v13;
      *(void *)(a2 + 64) = v14;
      *(_WORD *)(a2 + 72) = v15;
      *(unsigned char *)(a2 + 74) = v16;
      return result;
  }
}

double sub_100060880@<D0>(uint64_t a1@<X8>)
{
  return sub_10005FF44(*v1, a1);
}

uint64_t sub_10006088C()
{
  return sub_1000608C8(&qword_100381EC0, &qword_100381EC8, (void (*)(void))sub_100060950, (void (*)(void))sub_1000609A4);
}

uint64_t sub_1000608C8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100060950()
{
  unint64_t result = qword_100381ED0;
  if (!qword_100381ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381ED0);
  }
  return result;
}

unint64_t sub_1000609A4()
{
  unint64_t result = qword_100381ED8;
  if (!qword_100381ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381ED8);
  }
  return result;
}

uint64_t sub_1000609F8()
{
  return sub_1000608C8(&qword_100381EE0, &qword_100381EE8, (void (*)(void))sub_1000553DC, (void (*)(void))sub_100060A34);
}

unint64_t sub_100060A34()
{
  unint64_t result = qword_100381EF0;
  if (!qword_100381EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381EF0);
  }
  return result;
}

uint64_t sub_100060A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100060AD4()
{
  unint64_t result = qword_100381EF8;
  if (!qword_100381EF8)
  {
    sub_1000094C4(&qword_100381F00);
    sub_1000608C8(&qword_100381EB8, &qword_100381EB0, (void (*)(void))sub_10006088C, (void (*)(void))sub_1000609F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381EF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireIntroductionView()
{
  return &type metadata for QuestionnaireIntroductionView;
}

uint64_t sub_100060B98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100060BB4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v3 = *(void **)(v1 + 32);
  if (v3)
  {
    uint64_t v5 = v3[9];
    uint64_t v6 = v3[10];
    sub_100008F88(v3 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v15, v5, v6);
    v11[0] = static HorizontalAlignment.center.getter();
    v11[1] = 0;
    char v12 = 0;
    sub_100060D58((long long *)v1, (uint64_t)v15, (uint64_t)&v13);
    long long v7 = *(_OWORD *)v1;
    long long v16 = *(_OWORD *)(v1 + 16);
    long long v17 = v7;
    uint64_t v8 = (_OWORD *)swift_allocObject();
    long long v9 = v2[1];
    v8[1] = *v2;
    _OWORD v8[2] = v9;
    v8[3] = v2[2];
    sub_10000D2A0((uint64_t)v11, (uint64_t)__src, &qword_100381F08);
    __src[43] = sub_100063E28;
    __src[44] = v8;
    __src[46] = 0;
    __src[45] = 0;
    sub_10004ED30((uint64_t)&v17);
    sub_10004ED30((uint64_t)&v16);
    swift_retain();
    sub_10000950C((uint64_t)v11, &qword_100381F08);
    memcpy(a1, __src, 0x178uLL);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v15);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10006544C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100060D58@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *a1;
  uint64_t v7 = *((void *)a1 + 2);
  long long v42 = a1[2];
  long long v43 = v6;
  sub_1000090FC(a2, (uint64_t)v26);
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = a1[1];
  v8[1] = *a1;
  _OWORD v8[2] = v9;
  v8[3] = a1[2];
  sub_100009164(v26, (uint64_t)(v8 + 4));
  sub_1000090FC(a2, (uint64_t)v24);
  long long v10 = (_OWORD *)swift_allocObject();
  long long v11 = a1[1];
  v10[1] = *a1;
  uint64_t v10[2] = v11;
  v10[3] = a1[2];
  sub_100009164(v24, (uint64_t)(v10 + 4));
  sub_10004ED30((uint64_t)&v43);
  swift_retain();
  sub_10004ED30((uint64_t)&v42);
  sub_10004ED30((uint64_t)&v43);
  swift_retain();
  sub_10004ED30((uint64_t)&v42);
  sub_1001621AC(&v30, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_100063E34, v8, sub_100063ED4, v10, 0);
  if (v7)
  {
    if (*(void *)(v7 + 88))
    {
      uint64_t v44 = *(void *)(v7 + 88);
      char v45 = 1;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v46 = 0;
      swift_retain();
      sub_1000FF148((uint64_t)&v44, (uint64_t)v28);
    }
    else
    {
      uint64_t v29 = 0;
      memset(v28, 0, sizeof(v28));
    }
    sub_10000D2A0((uint64_t)v28, (uint64_t)v23, &qword_100381F10);
    long long v12 = v39;
    unsigned char v24[8] = v38;
    _OWORD v24[9] = v39;
    long long v13 = v40;
    v24[10] = v40;
    long long v14 = v34;
    long long v15 = v35;
    v24[4] = v34;
    v24[5] = v35;
    long long v16 = v36;
    long long v17 = v37;
    v24[6] = v36;
    v24[7] = v37;
    long long v18 = v30;
    long long v19 = v31;
    v24[0] = v30;
    v24[1] = v31;
    long long v20 = v32;
    long long v21 = v33;
    uint64_t v24[2] = v32;
    v24[3] = v33;
    *(_OWORD *)(a3 + 128) = v38;
    *(_OWORD *)(a3 + 144) = v12;
    *(_OWORD *)(a3 + 160) = v13;
    *(_OWORD *)(a3 + 64) = v14;
    *(_OWORD *)(a3 + 80) = v15;
    *(_OWORD *)(a3 + 96) = v16;
    *(_OWORD *)(a3 + 112) = v17;
    *(_OWORD *)a3 = v18;
    *(_OWORD *)(a3 + 16) = v19;
    uint64_t v25 = v41;
    *(void *)(a3 + 176) = v41;
    *(_OWORD *)(a3 + 32) = v20;
    *(_OWORD *)(a3 + 48) = v21;
    sub_10000D2A0((uint64_t)v23, a3 + 184, &qword_100381F10);
    sub_100009254((uint64_t)v24);
    sub_10000950C((uint64_t)v28, &qword_100381F10);
    sub_10000950C((uint64_t)v23, &qword_100381F10);
    v26[8] = v38;
    v26[9] = v39;
    v26[10] = v40;
    uint64_t v27 = v41;
    v26[4] = v34;
    v26[5] = v35;
    v26[6] = v36;
    v26[7] = v37;
    v26[0] = v30;
    v26[1] = v31;
    uint64_t v26[2] = v32;
    v26[3] = v33;
    return sub_100009354((uint64_t)v26);
  }
  else
  {
    type metadata accessor for EmergencyModel();
    sub_10006544C(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100061114@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v131 = a2;
  uint64_t v127 = a3;
  uint64_t v4 = sub_100004010(&qword_100381FB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v9 = (void *)((char *)v115 - v8);
  uint64_t v10 = type metadata accessor for AccessibilityTraits();
  uint64_t v122 = *(void *)(v10 - 8);
  uint64_t v123 = v10;
  __chkstk_darwin(v10);
  long long v120 = (char *)v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100381FB8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  long long v15 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  long long v121 = (char *)v115 - v17;
  __chkstk_darwin(v16);
  uint64_t v130 = (uint64_t)v115 - v18;
  uint64_t v19 = type metadata accessor for Image.ResizingMode();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004010(&qword_100381FC0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v124 = (uint64_t)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v129 = (uint64_t)v115 - v26;
  uint64_t v27 = *(void *)(a1 + 32);
  if (v27)
  {
    uint64_t v118 = *(void *)(a1 + 32);
    id v28 = *(id *)(v27 + 112);
    UIContentSizeCategory v119 = UIContentSizeCategoryAccessibilityExtraLarge;
    char v29 = static UIContentSizeCategory.>= infix(_:_:)();

    long long v128 = v7;
    long long v125 = v15;
    long long v126 = v9;
    if (v29)
    {
      uint64_t v30 = sub_100004010(&qword_100381FE8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v129, 1, 1, v30);
      long long v31 = v131;
    }
    else
    {
      Image.init(_:bundle:)();
      (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for Image.ResizingMode.stretch(_:), v19);
      uint64_t v32 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      long long v31 = v131;
      uint64_t v33 = v131[3];
      uint64_t v34 = v131[4];
      sub_100008F88(v131, v33);
      double v35 = (*(double (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34);
      uint64_t v36 = static Alignment.center.getter();
      sub_10016671C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v146, 0.0, 1, v35, 0, v36, v37, v32, 0, 1);
      swift_release();
      long long v138 = v152;
      long long v139 = v153;
      *(void *)&long long v140 = v154;
      long long v134 = v148;
      long long v135 = v149;
      long long v136 = v150;
      long long v137 = v151;
      long long v132 = v146;
      long long v133 = v147;
      uint64_t v38 = v31[3];
      uint64_t v39 = v31[4];
      sub_100008F88(v31, v38);
      double v40 = (*(double (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
      uint64_t v42 = v41;
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      char v47 = static Edge.Set.all.getter();
      long long v152 = v138;
      long long v153 = v139;
      *(void *)&long long v154 = v140;
      long long v148 = v134;
      long long v149 = v135;
      long long v150 = v136;
      long long v151 = v137;
      long long v146 = v132;
      long long v147 = v133;
      LOBYTE(v159) = 0;
      BYTE8(v154) = v47;
      *(_DWORD *)((char *)&v154 + 9) = v158[0];
      HIDWORD(v154) = *(_DWORD *)((char *)v158 + 3);
      *(double *)&long long v155 = v40;
      *((void *)&v155 + 1) = v42;
      *(void *)&long long v156 = v44;
      *((void *)&v156 + 1) = v46;
      LOBYTE(v157[0]) = 0;
      sub_100004010(&qword_100381FC8);
      sub_1000652BC(&qword_100381FD0, &qword_100381FC8, (void (*)(void))sub_1000650C0);
      uint64_t v48 = v129;
      View.accessibility(hidden:)();
      sub_10004F584((uint64_t)&v132);
      uint64_t v49 = sub_100004010(&qword_100381FE8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
    }
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v52 = v51;
    char v54 = v53 & 1;
    uint64_t v55 = v31[3];
    uint64_t v56 = v31[4];
    sub_100008F88(v31, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 64))(v55, v56);
    uint64_t v57 = Text.font(_:)();
    uint64_t v59 = v58;
    LOBYTE(v56) = v60;
    v115[1] = v61;
    swift_release();
    sub_100033364(v50, v52, v54);
    swift_bridgeObjectRelease();
    uint64_t v62 = v31[3];
    uint64_t v63 = v31[4];
    sub_100008F88(v31, v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 56))(v62, v63);
    uint64_t v117 = Text.foregroundColor(_:)();
    uint64_t v65 = v64;
    int v116 = v66;
    uint64_t v68 = v67;
    swift_release();
    sub_100033364(v57, v59, v56 & 1);
    swift_bridgeObjectRelease();
    uint64_t v69 = v118;
    id v70 = *(id *)(v118 + 112);
    char v71 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v73 = *(id *)(v69 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v74 = v116 & 1;
    BOOL v75 = (v71 & 1) == 0;
    uint64_t v76 = v117;
    uint64_t v159 = v117;
    uint64_t v160 = v65;
    char v161 = v116 & 1;
    uint64_t v162 = v68;
    uint64_t v163 = KeyPath;
    BOOL v164 = v75;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v158, 0.0, 1, 0.0, 1);
    sub_100033364(v76, v65, v74);
    swift_release();
    swift_bridgeObjectRelease();
    Swift::String_optional v77 = v131;
    uint64_t v78 = v131[3];
    uint64_t v79 = v131[4];
    sub_100008F88(v131, v78);
    double v80 = (*(double (**)(uint64_t, uint64_t))(v79 + 48))(v78, v79);
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    char v87 = static Edge.Set.all.getter();
    char v144 = 0;
    long long v138 = v158[6];
    long long v139 = v158[7];
    long long v140 = v158[8];
    long long v141 = v158[9];
    long long v134 = v158[2];
    long long v135 = v158[3];
    long long v136 = v158[4];
    long long v137 = v158[5];
    long long v132 = v158[0];
    long long v133 = v158[1];
    LOBYTE(v142) = v87;
    *(_DWORD *)((char *)&v142 + 1) = *(_DWORD *)v145;
    DWORD1(v142) = *(_DWORD *)&v145[3];
    *((double *)&v142 + 1) = v80;
    *(void *)&v143[0] = v82;
    *((void *)&v143[0] + 1) = v84;
    *(void *)&v143[1] = v86;
    BYTE8(v143[1]) = 0;
    Swift::String_optional v88 = v120;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100381FF0);
    sub_1000652BC(&qword_100381FF8, &qword_100381FF0, (void (*)(void))sub_100033574);
    uint64_t v89 = (uint64_t)v121;
    View.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v88, v123);
    long long v156 = v142;
    v157[0] = v143[0];
    *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)((char *)v143 + 9);
    long long v152 = v138;
    long long v153 = v139;
    long long v154 = v140;
    long long v155 = v141;
    long long v148 = v134;
    long long v149 = v135;
    long long v150 = v136;
    long long v151 = v137;
    long long v146 = v132;
    long long v147 = v133;
    sub_1000650F0((uint64_t)&v146);
    sub_10000D544(v89, v130, &qword_100381FB8);
    sub_100004010((uint64_t *)&unk_1003839F0);
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_1002B4DF0;
    uint64_t v91 = self;
    id v92 = [v91 mainBundle];
    v93._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v165._object = (void *)0x80000001002CA3E0;
    v93._object = (void *)0x80000001002CA3C0;
    v94._uint64_t countAndFlagsBits = 0;
    v94._object = (void *)0xE000000000000000;
    v165._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v95 = NSLocalizedString(_:tableName:bundle:value:comment:)(v93, (Swift::String_optional)0, (NSBundle)v92, v94, v165);

    *(Swift::String *)(v90 + 32) = v95;
    id v96 = [v91 mainBundle];
    v97._uint64_t countAndFlagsBits = 0xD000000000000022;
    v166._object = (void *)0x80000001002CA3E0;
    v97._object = (void *)0x80000001002CA440;
    v98._uint64_t countAndFlagsBits = 0;
    v98._object = (void *)0xE000000000000000;
    v166._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v166);

    *(Swift::String *)(v90 + 48) = v99;
    id v100 = [v91 mainBundle];
    v101._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v167._object = (void *)0x80000001002CA3E0;
    v101._object = (void *)0x80000001002C7A80;
    v102._uint64_t countAndFlagsBits = 0;
    v102._object = (void *)0xE000000000000000;
    v167._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v167);

    *(Swift::String *)(v90 + 64) = v103;
    uint64_t v104 = static VerticalAlignment.top.getter();
    uint64_t v105 = (uint64_t)v126;
    *long long v126 = v104;
    *(void *)(v105 + 8) = 0;
    *(unsigned char *)(v105 + 16) = 1;
    uint64_t v106 = sub_100004010(&qword_100382000);
    sub_100061DFC(v90, (uint64_t)v77, 10649826, 0xA300000000000000, v105 + *(int *)(v106 + 44));
    swift_bridgeObjectRelease();
    uint64_t v107 = v129;
    uint64_t v108 = v124;
    sub_10000D2A0(v129, v124, &qword_100381FC0);
    uint64_t v109 = v130;
    uint64_t v110 = (uint64_t)v125;
    sub_10000D2A0(v130, (uint64_t)v125, &qword_100381FB8);
    uint64_t v111 = (uint64_t)v128;
    sub_10000D2A0(v105, (uint64_t)v128, &qword_100381FB0);
    uint64_t v112 = v127;
    sub_10000D2A0(v108, v127, &qword_100381FC0);
    uint64_t v113 = sub_100004010(&qword_100382008);
    sub_10000D2A0(v110, v112 + *(int *)(v113 + 48), &qword_100381FB8);
    sub_10000D2A0(v111, v112 + *(int *)(v113 + 64), &qword_100381FB0);
    sub_10000950C(v105, &qword_100381FB0);
    sub_10000950C(v109, &qword_100381FB8);
    sub_10000950C(v107, &qword_100381FC0);
    sub_10000950C(v111, &qword_100381FB0);
    sub_10000950C(v110, &qword_100381FB8);
    return sub_10000950C(v108, &qword_100381FC0);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10006544C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100061DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_100004010(&qword_100382010);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v15 = (char *)v19 - v14;
  *(void *)long long v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_100004010(&qword_100382018);
  uint64_t v20 = a1;
  swift_getKeyPath();
  sub_1000090FC(a2, (uint64_t)v19);
  uint64_t v16 = swift_allocObject();
  sub_100009164(v19, v16 + 16);
  *(void *)(v16 + 56) = a3;
  *(void *)(v16 + 64) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100380040);
  sub_100004010(&qword_100382020);
  sub_100009B18(&qword_100381CF8, &qword_100380040);
  sub_100009B18(&qword_100382028, &qword_100382020);
  ForEach<>.init(_:id:content:)();
  sub_10000D2A0((uint64_t)v15, (uint64_t)v13, &qword_100382010);
  sub_10000D2A0((uint64_t)v13, a5, &qword_100382010);
  uint64_t v17 = a5 + *(int *)(sub_100004010(&qword_100382030) + 48);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 0;
  sub_10000950C((uint64_t)v15, &qword_100382010);
  return sub_10000950C((uint64_t)v13, &qword_100382010);
}

uint64_t sub_100062048@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v8 = sub_100004010(&qword_100382038);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (double *)((char *)&v36 - v12);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = static VerticalAlignment.firstTextLineCenter.getter();
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  sub_100008F88(a2, v17);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 72))(v17, v18);
  *(void *)uint64_t v13 = v16;
  v13[1] = v19;
  *((unsigned char *)v13 + 16) = 0;
  uint64_t v20 = sub_100004010(&qword_100382040);
  sub_100062408(a3, v44, a2, v14, v15, (uint64_t)v13 + *(int *)(v20 + 44));
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  sub_100008F88(a2, v21);
  double v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 80))(v21, v22);
  static Alignment.center.getter();
  if (v23 < 8.0)
  {
    static os_log_type_t.fault.getter();
    uint64_t v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v44 = v53;
  uint64_t v43 = v55;
  uint64_t v42 = v57;
  uint64_t v41 = v59;
  uint64_t v40 = v61;
  uint64_t v39 = v63;
  uint64_t v38 = v65;
  uint64_t v37 = v66;
  char v52 = 1;
  char v51 = v54;
  char v50 = v56;
  char v49 = v58;
  char v48 = v60;
  char v47 = v62;
  char v46 = v64;
  uint64_t v36 = v13;
  sub_10000D2A0((uint64_t)v13, (uint64_t)v11, &qword_100382038);
  char v25 = v52;
  char v26 = v51;
  char v27 = v50;
  char v28 = v49;
  char v29 = v48;
  char v30 = v47;
  char v31 = v46;
  uint64_t v32 = v45;
  sub_10000D2A0((uint64_t)v11, v45, &qword_100382038);
  uint64_t v33 = v32 + *(int *)(sub_100004010(&qword_100382048) + 48);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = v25;
  *(void *)(v33 + 16) = v44;
  *(unsigned char *)(v33 + 24) = v26;
  *(void *)(v33 + 32) = v43;
  *(unsigned char *)(v33 + 40) = v27;
  *(void *)(v33 + 48) = v42;
  *(unsigned char *)(v33 + 56) = v28;
  *(void *)(v33 + 64) = v41;
  *(unsigned char *)(v33 + 72) = v29;
  *(void *)(v33 + 80) = v40;
  *(unsigned char *)(v33 + 88) = v30;
  *(void *)(v33 + 96) = v39;
  *(unsigned char *)(v33 + 104) = v31;
  uint64_t v34 = v37;
  *(void *)(v33 + 112) = v38;
  *(void *)(v33 + 120) = v34;
  sub_10000950C((uint64_t)v36, &qword_100382038);
  return sub_10000950C((uint64_t)v11, &qword_100382038);
}

uint64_t sub_100062408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v63 = a5;
  uint64_t v65 = a6;
  uint64_t v9 = sub_100004010(&qword_100382050);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v64 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (uint64_t)v57 - v12;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  unint64_t v61 = sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v18 = a3[3];
  uint64_t v19 = a3[4];
  uint64_t v59 = v18;
  uint64_t v20 = sub_100008F88(a3, v18);
  uint64_t v58 = v19;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 88);
  v57[0] = v20;
  v57[1] = v19 + 88;
  char v60 = v21;
  v21(v18, v19);
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  LOBYTE(v18) = v25;
  swift_release();
  sub_100033364(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[3];
  uint64_t v27 = a3[4];
  sub_100008F88(a3, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
  uint64_t v28 = Text.foregroundColor(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  uint64_t v34 = v33;
  swift_release();
  v32 &= 1u;
  sub_100033364(v22, v24, v18 & 1);
  swift_bridgeObjectRelease();
  uint64_t v67 = v28;
  uint64_t v68 = v30;
  char v69 = v32;
  uint64_t v70 = v34;
  View.accessibility(hidden:)();
  sub_100033364(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v67 = v62;
  uint64_t v68 = v63;
  swift_bridgeObjectRetain();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  LOBYTE(v30) = v38 & 1;
  v60(v59, v58);
  uint64_t v39 = Text.font(_:)();
  uint64_t v41 = v40;
  LOBYTE(v22) = v42;
  swift_release();
  sub_100033364(v35, v37, v30);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[3];
  uint64_t v44 = a3[4];
  sub_100008F88(a3, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
  uint64_t v45 = Text.foregroundColor(_:)();
  uint64_t v47 = v46;
  LOBYTE(v30) = v48;
  uint64_t v50 = v49;
  swift_release();
  sub_100033364(v39, v41, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v66;
  uint64_t v53 = v64;
  sub_10000D2A0(v66, v64, &qword_100382050);
  uint64_t v54 = v65;
  sub_10000D2A0(v53, v65, &qword_100382050);
  uint64_t v55 = v54 + *(int *)(sub_100004010(&qword_100382058) + 48);
  *(void *)uint64_t v55 = v45;
  *(void *)(v55 + 8) = v47;
  *(unsigned char *)(v55 + 16) = v30 & 1;
  *(void *)(v55 + 24) = v50;
  *(void *)(v55 + 32) = KeyPath;
  *(_WORD *)(v55 + 40) = 0;
  *(unsigned char *)(v55 + 42) = 1;
  sub_100033724(v45, v47, v30 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10000950C(v52, &qword_100382050);
  sub_100033364(v45, v47, v30 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10000950C(v53, &qword_100382050);
}

uint64_t sub_100062830@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, void (*a5)(uint64_t, void *)@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_100004010(a3);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v16 = static HorizontalAlignment.center.getter();
  *((void *)v16 + 1) = 0;
  unsigned char v16[16] = 0;
  sub_100004010(a4);
  a5(a1, a2);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  sub_100008F88(a2, v17);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  LOBYTE(a5) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v16, a7, a3);
  uint64_t v26 = a7 + *(int *)(sub_100004010(a6) + 36);
  *(unsigned char *)uint64_t v26 = (_BYTE)a5;
  *(double *)(v26 + 8) = v19;
  *(void *)(v26 + 16) = v21;
  *(void *)(v26 + 24) = v23;
  *(void *)(v26 + 32) = v25;
  *(unsigned char *)(v26 + 40) = 0;
  return sub_10000950C((uint64_t)v16, a3);
}

uint64_t sub_100062988@<X0>(long long *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v184 = a3;
  uint64_t v5 = type metadata accessor for KeyboardShortcut();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ButtonBorderShape();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v166 = *(void *)(v13 - 8);
  uint64_t v167 = v13;
  __chkstk_darwin(v13);
  BOOL v164 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ControlSize();
  uint64_t v157 = *(void *)(v15 - 8);
  uint64_t v158 = v15;
  __chkstk_darwin(v15);
  long long v154 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_100381F30);
  uint64_t v152 = *(void *)(v17 - 8);
  uint64_t v153 = v17;
  __chkstk_darwin(v17);
  long long v151 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100004010(&qword_100381F38);
  __chkstk_darwin(v155);
  long long v156 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_100381F40);
  uint64_t v162 = *(void *)(v20 - 8);
  uint64_t v163 = v20;
  __chkstk_darwin(v20);
  uint64_t v159 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_100004010(&qword_100381F48);
  __chkstk_darwin(v160);
  char v161 = (char *)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004010(&qword_100381F50);
  uint64_t v170 = *(void *)(v23 - 8);
  uint64_t v171 = v23;
  __chkstk_darwin(v23);
  uint64_t v168 = (char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100004010(&qword_100381F58);
  __chkstk_darwin(v165);
  uint64_t v172 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100004010(&qword_100381F60);
  __chkstk_darwin(v169);
  uint64_t v27 = (char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004010(&qword_100381F68);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v185 = a1;
  uint64_t v33 = *((void *)a1 + 2);
  if (!v33)
  {
    type metadata accessor for EmergencyModel();
    char v144 = &qword_100380D50;
    long long v145 = type metadata accessor for EmergencyModel;
LABEL_14:
    sub_10006544C(v144, (void (*)(uint64_t))v145);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v173 = v30;
  uint64_t v174 = v27;
  uint64_t v178 = v8;
  uint64_t v179 = v6;
  uint64_t v180 = v5;
  uint64_t v181 = (uint64_t)&v147 - v31;
  uint64_t v182 = v32;
  uint64_t v34 = *(void *)(v33 + 152);
  uint64_t v176 = v10;
  uint64_t v177 = v9;
  __int16 v175 = v12;
  uint64_t v186 = v33;
  if (v34 == 1 || *(void *)(v33 + 144) >> 60 == 15)
  {
    id v35 = [self mainBundle];
    unint64_t v36 = 0xD000000000000069;
    unint64_t v146 = 0x80000001002CA250;
    unint64_t v37 = 0x80000001002CA230;
    unint64_t v38 = 0xD00000000000001DLL;
  }
  else
  {
    id v35 = [self mainBundle];
    unint64_t v38 = 0xD00000000000002BLL;
    unint64_t v36 = 0xD00000000000006ALL;
    unint64_t v146 = 0x80000001002CA2F0;
    unint64_t v37 = 0x80000001002CA2C0;
  }
  v39._uint64_t countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  Swift::String v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v38, (Swift::String_optional)0, (NSBundle)v35, v39, *(Swift::String *)&v36);

  v216[0] = v40;
  sub_100033310();
  uint64_t v41 = Text.init<A>(_:)();
  uint64_t v43 = v42;
  char v45 = v44 & 1;
  uint64_t v46 = a2[3];
  uint64_t v47 = a2[4];
  sub_100008F88(a2, v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 96))(v46, v47);
  uint64_t v48 = Text.font(_:)();
  uint64_t v50 = v49;
  char v52 = v51;
  uint64_t v148 = v53;
  swift_release();
  sub_100033364(v41, v43, v45);
  swift_bridgeObjectRelease();
  uint64_t v54 = a2[3];
  uint64_t v55 = a2[4];
  uint64_t v183 = a2;
  sub_100008F88(a2, v54);
  (*(void (**)(uint64_t, uint64_t))(v55 + 56))(v54, v55);
  uint64_t v150 = Text.foregroundColor(_:)();
  uint64_t v57 = v56;
  int v149 = v58;
  uint64_t v60 = v59;
  swift_release();
  sub_100033364(v48, v50, v52 & 1);
  swift_bridgeObjectRelease();
  uint64_t v61 = *((void *)v185 + 4);
  if (!v61)
  {
    type metadata accessor for UIMetrics();
    char v144 = (unint64_t *)&qword_10037EFF0;
    long long v145 = type metadata accessor for UIMetrics;
    goto LABEL_14;
  }
  id v62 = *(id *)(v61 + 112);
  char v63 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v147 = v61;
  id v65 = *(id *)(v61 + 112);
  static Alignment.center.getter();
  if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) != 0
    && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)() & 1) != 0))
  {
    uint64_t v66 = v57;
    static Alignment.leading.getter();
  }
  else
  {
    uint64_t v66 = v57;
  }

  char v67 = v149 & 1;
  uint64_t v68 = v150;
  uint64_t v232 = v150;
  uint64_t v233 = v66;
  char v234 = v149 & 1;
  uint64_t v235 = v60;
  uint64_t v236 = KeyPath;
  BOOL v237 = (v63 & 1) == 0;
  sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v230, 0.0, 1, 0.0, 1);
  sub_100033364(v68, v66, v67);
  swift_release();
  swift_bridgeObjectRelease();
  long long v199 = v230[6];
  long long v200 = v230[7];
  long long v201 = v230[8];
  long long v202 = v230[9];
  long long v195 = v230[2];
  long long v196 = v230[3];
  long long v197 = v230[4];
  long long v198 = v230[5];
  long long v193 = v230[0];
  long long v194 = v230[1];
  int v149 = static Edge.Set.top.getter();
  unsigned __int8 v187 = 1;
  LODWORD(v150) = static Edge.Set.bottom.getter();
  char v69 = v183;
  uint64_t v70 = v183[3];
  uint64_t v71 = v183[4];
  sub_100008F88(v183, v70);
  (*(void (**)(uint64_t, uint64_t))(v71 + 104))(v70, v71);
  EdgeInsets.init(_all:)();
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  v192[0] = *(_DWORD *)v188;
  *(_DWORD *)((char *)v192 + 3) = *(_DWORD *)&v188[3];
  LODWORD(v148) = v187;
  char v189 = 0;
  double v80 = (_OWORD *)swift_allocObject();
  uint64_t v81 = v185;
  long long v82 = *v185;
  long long v83 = v185[1];
  v80[1] = *v185;
  v80[2] = v83;
  v80[3] = v81[2];
  long long v231 = v82;
  swift_retain();
  swift_retain();
  sub_10004ED30((uint64_t)&v231);
  sub_100064D30();
  uint64_t v84 = v151;
  Button.init(action:label:)();
  uint64_t v86 = v157;
  uint64_t v85 = v158;
  char v87 = v154;
  (*(void (**)(char *, void, uint64_t))(v157 + 104))(v154, enum case for ControlSize.large(_:), v158);
  uint64_t v88 = swift_getKeyPath();
  uint64_t v89 = (uint64_t)v156;
  uint64_t v90 = (uint64_t *)&v156[*(int *)(v155 + 36)];
  uint64_t v91 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))((char *)v90 + *(int *)(v91 + 28), v87, v85);
  *uint64_t v90 = v88;
  uint64_t v93 = v152;
  uint64_t v92 = v153;
  (*(void (**)(uint64_t, char *, uint64_t))(v152 + 16))(v89, v84, v153);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v85);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v84, v92);
  Swift::String v94 = v164;
  BorderedProminentButtonStyle.init()();
  sub_100064D8C();
  sub_10006544C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  Swift::String v95 = v159;
  uint64_t v96 = v167;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v94, v96);
  sub_10000950C(v89, &qword_100381F38);
  Swift::String v97 = v175;
  static ButtonBorderShape.roundedRectangle.getter();
  uint64_t v98 = swift_getKeyPath();
  uint64_t v99 = (uint64_t)v161;
  id v100 = (uint64_t *)&v161[*(int *)(v160 + 36)];
  uint64_t v101 = sub_100004010(&qword_100381038);
  uint64_t v103 = v176;
  uint64_t v102 = v177;
  (*(void (**)(char *, char *, uint64_t))(v176 + 16))((char *)v100 + *(int *)(v101 + 28), v97, v177);
  uint64_t *v100 = v98;
  uint64_t v105 = v162;
  uint64_t v104 = v163;
  (*(void (**)(uint64_t, char *, uint64_t))(v162 + 16))(v99, v95, v163);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v97, v102);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v95, v104);
  uint64_t v106 = v178;
  static KeyboardShortcut.defaultAction.getter();
  sub_100064E58();
  uint64_t v107 = v168;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v179 + 8))(v106, v180);
  sub_10000950C(v99, &qword_100381F48);
  uint64_t v108 = v69[3];
  uint64_t v109 = v69[4];
  sub_100008F88(v69, v108);
  uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 296))(v108, v109);
  uint64_t v111 = swift_getKeyPath();
  *(void *)&v216[0] = v110;
  swift_retain();
  uint64_t v112 = AnyShapeStyle.init<A>(_:)();
  uint64_t v114 = v170;
  uint64_t v113 = v171;
  uint64_t v115 = (uint64_t)v172;
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v172, v107, v171);
  swift_release();
  int v116 = (uint64_t *)(v115 + *(int *)(v165 + 36));
  *int v116 = v111;
  v116[1] = v112;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v107, v113);
  LOBYTE(v112) = *(unsigned char *)(v186 + 130);
  uint64_t v117 = swift_getKeyPath();
  uint64_t v118 = swift_allocObject();
  *(unsigned char *)(v118 + 16) = v112;
  uint64_t v119 = (uint64_t)v174;
  sub_10000D2A0(v115, (uint64_t)v174, &qword_100381F58);
  long long v120 = (uint64_t *)(v119 + *(int *)(v169 + 36));
  *long long v120 = v117;
  v120[1] = (uint64_t)sub_100065058;
  v120[2] = v118;
  sub_10000950C(v115, &qword_100381F58);
  LOBYTE(v118) = static Edge.Set.bottom.getter();
  uint64_t v121 = v69[3];
  uint64_t v122 = v69[4];
  sub_100008F88(v69, v121);
  (*(void (**)(uint64_t, uint64_t))(v122 + 112))(v121, v122);
  EdgeInsets.init(_all:)();
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  uint64_t v131 = v182;
  sub_10000D2A0(v119, v182, &qword_100381F60);
  uint64_t v132 = v131 + *(int *)(v173 + 36);
  *(unsigned char *)uint64_t v132 = v118;
  *(void *)(v132 + 8) = v124;
  *(void *)(v132 + 16) = v126;
  *(void *)(v132 + 24) = v128;
  *(void *)(v132 + 32) = v130;
  *(unsigned char *)(v132 + 40) = 0;
  sub_10000950C(v119, &qword_100381F60);
  uint64_t v133 = v181;
  sub_10000D544(v131, v181, &qword_100381F68);
  LOBYTE(v118) = v189;
  sub_10000D2A0(v133, v131, &qword_100381F68);
  long long v209 = v199;
  long long v210 = v200;
  long long v211 = v201;
  long long v212 = v202;
  long long v205 = v195;
  long long v206 = v196;
  long long v207 = v197;
  long long v208 = v198;
  long long v203 = v193;
  long long v204 = v194;
  LOBYTE(v119) = v149;
  LOBYTE(v89) = v150;
  LOBYTE(v213[0]) = v149;
  *(_DWORD *)((char *)v213 + 1) = v192[0];
  DWORD1(v213[0]) = *(_DWORD *)((char *)v192 + 3);
  *(_OWORD *)((char *)v213 + 8) = 0u;
  *(_OWORD *)((char *)&v213[1] + 8) = 0u;
  LOBYTE(v114) = v148;
  BYTE8(v213[2]) = v148;
  HIDWORD(v213[2]) = *(_DWORD *)&v191[3];
  *(_DWORD *)((char *)&v213[2] + 9) = *(_DWORD *)v191;
  LOBYTE(v214) = v150;
  *(_DWORD *)((char *)&v214 + 1) = *(_DWORD *)v190;
  DWORD1(v214) = *(_DWORD *)&v190[3];
  *((void *)&v214 + 1) = v73;
  *(void *)&v215[0] = v75;
  *((void *)&v215[0] + 1) = v77;
  *(void *)&v215[1] = v79;
  BYTE8(v215[1]) = v118;
  long long v134 = v196;
  long long v135 = v184;
  v184[2] = v195;
  v135[3] = v134;
  long long v136 = v204;
  *long long v135 = v203;
  v135[1] = v136;
  long long v137 = v210;
  v135[6] = v209;
  v135[7] = v137;
  long long v138 = v208;
  v135[4] = v207;
  v135[5] = v138;
  long long v139 = v213[1];
  v135[10] = v213[0];
  v135[11] = v139;
  long long v140 = v212;
  v135[8] = v211;
  v135[9] = v140;
  long long v141 = v214;
  v135[12] = v213[2];
  v135[13] = v141;
  *(_OWORD *)((char *)v135 + 233) = *(_OWORD *)((char *)v215 + 9);
  v135[14] = v215[0];
  uint64_t v142 = sub_100004010(&qword_100381F90);
  sub_10000D2A0(v131, (uint64_t)v135 + *(int *)(v142 + 48), &qword_100381F68);
  sub_100065070((uint64_t)&v203);
  sub_10000950C(v133, &qword_100381F68);
  sub_10000950C(v131, &qword_100381F68);
  v216[6] = v199;
  v216[7] = v200;
  v216[8] = v201;
  v216[9] = v202;
  v216[2] = v195;
  v216[3] = v196;
  v216[4] = v197;
  v216[5] = v198;
  v216[0] = v193;
  v216[1] = v194;
  char v217 = v119;
  *(_DWORD *)uint64_t v218 = v192[0];
  *(_DWORD *)&v218[3] = *(_DWORD *)((char *)v192 + 3);
  long long v219 = 0u;
  long long v220 = 0u;
  char v221 = v114;
  *(_DWORD *)uint64_t v222 = *(_DWORD *)v191;
  *(_DWORD *)&v222[3] = *(_DWORD *)&v191[3];
  char v223 = v89;
  *(_DWORD *)uint64_t v224 = *(_DWORD *)v190;
  *(_DWORD *)&v224[3] = *(_DWORD *)&v190[3];
  uint64_t v225 = v73;
  uint64_t v226 = v75;
  uint64_t v227 = v77;
  uint64_t v228 = v79;
  char v229 = v118;
  return sub_1000650F0((uint64_t)v216);
}

void *sub_100063AB8(void *result)
{
  uint64_t v1 = result[2];
  if (!v1)
  {
    type metadata accessor for EmergencyModel();
    sub_10006544C(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(v1 + 88)) {
    return result;
  }
  if (!*result)
  {
LABEL_7:
    type metadata accessor for AppEvents();
    sub_10006544C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    swift_retain();
    uint64_t result = (void *)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  sub_1000C9FF4();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  return (void *)swift_release();
}

uint64_t sub_100063C2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EmergencyModel();
  sub_10006544C(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_100063C9C(void *result)
{
  uint64_t v1 = result[2];
  if (!v1)
  {
    type metadata accessor for EmergencyModel();
    sub_10006544C(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(v1 + 88)) {
    return result;
  }
  if (!*result)
  {
LABEL_7:
    type metadata accessor for AppEvents();
    sub_10006544C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    swift_retain();
    uint64_t result = (void *)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  return (void *)swift_release();
}

uint64_t sub_100063DE8@<X0>(void *a1@<X8>)
{
  return sub_100060BB4(a1);
}

void *sub_100063E28()
{
  return sub_100063C9C((void *)(v0 + 16));
}

uint64_t sub_100063E34@<X0>(uint64_t a1@<X8>)
{
  return sub_100062830(v1 + 16, (void *)(v1 + 64), &qword_100381F98, &qword_100381FA0, (void (*)(uint64_t, void *))sub_100061114, &qword_100381FA8, a1);
}

uint64_t sub_100063E84()
{
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 64);

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100063ED4@<X0>(uint64_t a1@<X8>)
{
  return sub_100062830(v1 + 16, (void *)(v1 + 64), &qword_100381F18, &qword_100381F20, (void (*)(uint64_t, void *))sub_100062988, &qword_100381F28, a1);
}

uint64_t sub_100063F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v76[1] = a2;
  uint64_t v99 = a1;
  uint64_t v104 = a3;
  uint64_t v91 = type metadata accessor for ControlSize();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100004010(&qword_10037F118);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100004010(&qword_10037F120);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004010(&qword_10037F128);
  __chkstk_darwin(v77);
  uint64_t v88 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004010(&qword_100382080);
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v87 = (uint64_t)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100382088);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v103 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v101 = (uint64_t)v76 - v12;
  uint64_t v93 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v93);
  uint64_t v14 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004010(&qword_100382090);
  uint64_t v15 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v17 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004010(&qword_100382098);
  __chkstk_darwin(v92);
  uint64_t v19 = (char *)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_1003820A0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004010(&qword_1003820A8);
  __chkstk_darwin(v94);
  uint64_t v24 = (char *)v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004010(&qword_1003820B0);
  __chkstk_darwin(v96);
  uint64_t v26 = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004010(&qword_1003820B8);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v98 = (char *)v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)v76 - v31;
  __chkstk_darwin(v30);
  uint64_t v97 = (uint64_t)v76 - v33;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v105 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v106 = v34;
  char v107 = v35 & 1;
  uint64_t v108 = v36;
  uint64_t v37 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v38 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v14, v37, v38);
  sub_10006544C(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_100009B18(&qword_10037F030, &qword_10037F010);
  View.dynamicTypeSize<A>(_:)();
  sub_10000950C((uint64_t)v14, &qword_10037F010);
  sub_100033364(v105, v106, v107);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = v95;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v95);
  uint64_t v41 = &v19[*(int *)(v92 + 36)];
  *(void *)uint64_t v41 = KeyPath;
  v41[8] = 1;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v40);
  uint64_t v42 = static Alignment.center.getter();
  sub_100166904(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v42, v43);
  sub_10000950C((uint64_t)v19, &qword_100382098);
  sub_10000D2A0((uint64_t)v22, (uint64_t)v24, &qword_1003820A0);
  *(_WORD *)&v24[*(int *)(v94 + 36)] = 256;
  sub_10000950C((uint64_t)v22, &qword_1003820A0);
  uint64_t v44 = v99;
  if (!v99)
  {
LABEL_11:
    type metadata accessor for EmergencyModel();
    sub_10006544C(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(v99 + 130)) {
    double v45 = 0.0;
  }
  else {
    double v45 = 1.0;
  }
  sub_10000D2A0((uint64_t)v24, (uint64_t)v26, &qword_1003820A8);
  *(double *)&v26[*(int *)(v96 + 36)] = v45;
  sub_10000950C((uint64_t)v24, &qword_1003820A8);
  sub_1000652BC(&qword_1003820C0, &qword_1003820B0, (void (*)(void))sub_10006525C);
  View.accessibilityHidden(_:)();
  sub_10000950C((uint64_t)v26, &qword_1003820B0);
  uint64_t v46 = v97;
  sub_10000D544((uint64_t)v32, v97, &qword_1003820B8);
  if (*(unsigned char *)(v44 + 130))
  {
    uint64_t v47 = v78;
    ProgressView<>.init<>()();
    uint64_t v48 = v81;
    CircularProgressViewStyle.init()();
    sub_100009B18(&qword_10037F210, &qword_10037F118);
    sub_10006544C(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v49 = v84;
    uint64_t v50 = v80;
    uint64_t v51 = v83;
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v48, v51);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v50);
    uint64_t v52 = v90;
    uint64_t v53 = v89;
    uint64_t v54 = v91;
    (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, enum case for ControlSize.small(_:), v91);
    uint64_t v55 = swift_getKeyPath();
    uint64_t v56 = (uint64_t)v88;
    uint64_t v57 = (uint64_t *)&v88[*(int *)(v77 + 36)];
    uint64_t v58 = sub_100004010(&qword_10037F228);
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v57 + *(int *)(v58 + 28), v53, v54);
    uint64_t *v57 = v55;
    uint64_t v59 = v85;
    uint64_t v60 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v56, v49, v86);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v60);
    id v61 = [self labelColor];
    uint64_t v62 = Color.init(uiColor:)();
    uint64_t v63 = swift_getKeyPath();
    uint64_t v105 = v62;
    swift_retain();
    uint64_t v64 = AnyShapeStyle.init<A>(_:)();
    uint64_t v65 = v87;
    sub_10000D2A0(v56, v87, &qword_10037F128);
    swift_release();
    uint64_t v66 = v102;
    char v67 = (uint64_t *)(v65 + *(int *)(v102 + 36));
    *char v67 = v63;
    v67[1] = v64;
    sub_10000950C(v56, &qword_10037F128);
    uint64_t v68 = v65;
    uint64_t v69 = v101;
    sub_10000D544(v68, v101, &qword_100382080);
    uint64_t v70 = 0;
    uint64_t v72 = (uint64_t)v103;
    uint64_t v71 = v104;
  }
  else
  {
    uint64_t v70 = 1;
    uint64_t v72 = (uint64_t)v103;
    uint64_t v71 = v104;
    uint64_t v69 = v101;
    uint64_t v66 = v102;
  }
  uint64_t v73 = (uint64_t)v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v69, v70, 1, v66);
  sub_10000D2A0(v46, v73, &qword_1003820B8);
  sub_10000D2A0(v69, v72, &qword_100382088);
  sub_10000D2A0(v73, v71, &qword_1003820B8);
  uint64_t v74 = sub_100004010(&qword_1003820E0);
  sub_10000D2A0(v72, v71 + *(int *)(v74 + 48), &qword_100382088);
  sub_10000950C(v69, &qword_100382088);
  sub_10000950C(v46, &qword_1003820B8);
  sub_10000950C(v72, &qword_100382088);
  return sub_10000950C(v73, &qword_1003820B8);
}

uint64_t sub_100064C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  *a1 = static Alignment.center.getter();
  a1[1] = v5;
  uint64_t v6 = sub_100004010(&qword_100382078);
  return sub_100063F20(v4, v3, (uint64_t)a1 + *(int *)(v6 + 44));
}

uint64_t sub_100064CE0()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void *sub_100064D28()
{
  return sub_100063AB8((void *)(v0 + 16));
}

unint64_t sub_100064D30()
{
  unint64_t result = qword_100381F70;
  if (!qword_100381F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381F70);
  }
  return result;
}

unint64_t sub_100064D8C()
{
  unint64_t result = qword_100381F78;
  if (!qword_100381F78)
  {
    sub_1000094C4(&qword_100381F38);
    sub_100009B18(&qword_100381F80, &qword_100381F30);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381F78);
  }
  return result;
}

unint64_t sub_100064E58()
{
  unint64_t result = qword_100381F88;
  if (!qword_100381F88)
  {
    sub_1000094C4(&qword_100381F48);
    sub_1000094C4(&qword_100381F38);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_100064D8C();
    sub_10006544C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381F88);
  }
  return result;
}

uint64_t sub_100064F84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100064FB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100064FE4()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_10006500C()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_100065034(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100065048()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_100065058(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_100065070(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000650C0()
{
  return sub_1000652BC(&qword_100381FD8, &qword_100381FE0, (void (*)(void))sub_10003F5C0);
}

uint64_t sub_1000650F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100065140()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100065180@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100062048(a1, v2 + 2, v2[7], v2[8], a2);
}

ValueMetadata *type metadata accessor for ReportEmergencyButtonLabelView()
{
  return &type metadata for ReportEmergencyButtonLabelView;
}

unint64_t sub_1000651A0()
{
  unint64_t result = qword_100382060;
  if (!qword_100382060)
  {
    sub_1000094C4(&qword_100382068);
    sub_100009B18(&qword_100382070, &qword_100381F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382060);
  }
  return result;
}

uint64_t sub_100065240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006525C()
{
  return sub_1000652BC(&qword_1003820C8, &qword_1003820A8, (void (*)(void))sub_10006528C);
}

uint64_t sub_10006528C()
{
  return sub_1000652BC(&qword_1003820D0, &qword_1003820A0, (void (*)(void))sub_100065338);
}

uint64_t sub_1000652BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100065338()
{
  unint64_t result = qword_1003820D8;
  if (!qword_1003820D8)
  {
    sub_1000094C4(&qword_100382098);
    sub_1000094C4(&qword_10037F010);
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003820D8);
  }
  return result;
}

uint64_t sub_10006544C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065494()
{
  return sub_100009B18(&qword_1003820E8, &qword_1003820F0);
}

uint64_t sub_1000654D0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Bits()
{
  return self;
}

uint64_t destroy for BuiltInNotifyContactsConsentContentView()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for BuiltInNotifyContactsConsentContentView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BuiltInNotifyContactsConsentContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BuiltInNotifyContactsConsentContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationAgent.ActionReceived(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationAgent.ActionReceived(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInNotifyContactsConsentContentView()
{
  return &type metadata for BuiltInNotifyContactsConsentContentView;
}

uint64_t sub_100065708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100065724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100382190);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    unint64_t v8 = *(void *)(a1 + 152);
    if (v8 >= 2 && *(void *)(v8 + 16))
    {
      v13[0] = v5;
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_100065AE4(v9);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
      *((void *)v7 + 1) = 0;
      v7[16] = 0;
      sub_100004010(&qword_100382198);
      v13[1] = v10;
      *(void *)(swift_allocObject() + 16) = v10;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_1003821A0);
      sub_100009B18(&qword_1003821A8, &qword_1003821A0);
      sub_100065C84();
      sub_100065CD8();
      ForEach<>.init(_:content:)();
      sub_10000D544((uint64_t)v7, a2, &qword_100382190);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13[0] + 56))(a2, 0, 1, v4);
    }
    else
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      return v12(a2, 1, 1, v4);
    }
  }
  else
  {
    type metadata accessor for EmergencyModel();
    sub_1000669FC(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000659C0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = a2[2];
  if (v8)
  {
    uint64_t v9 = a2 + 4;
    if (v4 == a2[4] && v5 == a2[5]) {
      char v11 = 1;
    }
    else {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    uint64_t v13 = &v9[4 * v8];
    if (v4 == *(v13 - 4) && v5 == *(v13 - 3)) {
      char v12 = 1;
    }
    else {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v12 = 0;
    char v11 = 0;
  }
  type metadata accessor for UIMetrics();
  sub_1000669FC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = EnvironmentObject.init()();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v4;
  *(void *)(a3 + 24) = v5;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 40) = v6;
  *(unsigned char *)(a3 + 48) = v11 & 1;
  *(unsigned char *)(a3 + 49) = v12 & 1;
  return result;
}

void *sub_100065AE4(uint64_t a1)
{
  sub_1001BF704(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v9 = v8;
      uint64_t v10 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v10 = v5 & 0xFFFFFFFFFFFFLL;
      }
      if (!v10)
      {
        swift_bridgeObjectRelease();
        unint64_t v6 = 0xE100000000000000;
        uint64_t v5 = 63;
      }
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1001BF704(v11 > 1, v12 + 1, 1);
      }
      ++v3;
      v4 += 2;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[4 * v12];
      v13[4] = v7;
      v13[5] = v9;
      v13[6] = v5;
      v13[7] = v6;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100065C3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100065724(*v1, a1);
}

uint64_t sub_100065C44()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100065C7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000659C0(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_100065C84()
{
  unint64_t result = qword_1003821B0;
  if (!qword_1003821B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003821B0);
  }
  return result;
}

unint64_t sub_100065CD8()
{
  unint64_t result = qword_1003821B8;
  if (!qword_1003821B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003821B8);
  }
  return result;
}

uint64_t sub_100065D2C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100065D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_1003821D8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_1003821E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)*v1;
  if (*v1)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24))(v17, v10, v11);
    *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 0;
    uint64_t v12 = sub_100004010(&qword_1003821E8);
    sub_100065F38((uint64_t)v1, v17, (uint64_t)&v5[*(int *)(v12 + 44)]);
    uint64_t v13 = static Alignment.center.getter();
    sub_100166B30(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v13, v14);
    sub_10000950C((uint64_t)v5, &qword_1003821D8);
    sub_10000D544((uint64_t)v8, a1, &qword_1003821E0);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v17);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1000669FC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100065F38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = type metadata accessor for Divider();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v66 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v40 - v9;
  uint64_t v10 = sub_100004010(&qword_1003821F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  char v16 = *(unsigned char *)(a1 + 48);
  uint64_t v44 = v6;
  uint64_t v45 = v5;
  uint64_t v63 = (uint64_t)&v40 - v14;
  if (v16)
  {
    Divider.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))((char *)&v40 - v14, 1, 1, v5);
  }
  uint64_t v64 = static VerticalAlignment.center.getter();
  uint64_t v62 = static HorizontalAlignment.center.getter();
  sub_1000667D0(a1, a2, (uint64_t)v144);
  *(_OWORD *)((char *)&v146[8] + 7) = v144[8];
  *(_OWORD *)((char *)&v146[9] + 7) = v144[9];
  *(_OWORD *)((char *)&v146[10] + 7) = v145[0];
  v146[11] = *(_OWORD *)((char *)v145 + 9);
  *(_OWORD *)((char *)&v146[4] + 7) = v144[4];
  *(_OWORD *)((char *)&v146[5] + 7) = v144[5];
  *(_OWORD *)((char *)&v146[6] + 7) = v144[6];
  *(_OWORD *)((char *)&v146[7] + 7) = v144[7];
  *(_OWORD *)((char *)v146 + 7) = v144[0];
  *(_OWORD *)((char *)&v146[1] + 7) = v144[1];
  *(_OWORD *)((char *)&v146[2] + 7) = v144[2];
  char v147 = 0;
  *(_OWORD *)((char *)&v146[3] + 7) = v144[3];
  int v61 = 0;
  char v148 = 0;
  uint64_t v18 = a2[3];
  uint64_t v17 = a2[4];
  sub_100008F88(a2, v18);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v17 + 344))(v18, v17);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  int v60 = static Edge.Set.all.getter();
  uint64_t v26 = a2[3];
  uint64_t v27 = a2[4];
  sub_100008F88(a2, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 336))(v26, v27);
  static Alignment.center.getter();
  long long v85 = v146[9];
  long long v86 = v146[10];
  long long v87 = v146[11];
  long long v81 = v146[5];
  long long v82 = v146[6];
  long long v83 = v146[7];
  long long v84 = v146[8];
  long long v76 = v146[0];
  long long v77 = v146[1];
  long long v78 = v146[2];
  long long v79 = v146[3];
  long long v80 = v146[4];
  unsigned __int8 v89 = 0;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v51 = v149;
  uint64_t v53 = v151;
  uint64_t v54 = v153;
  uint64_t v55 = v155;
  uint64_t v56 = v157;
  uint64_t v57 = v159;
  uint64_t v58 = v162;
  uint64_t v59 = v161;
  int v48 = v89;
  unsigned __int8 v95 = v150;
  unsigned __int8 v94 = v152;
  unsigned __int8 v93 = v154;
  unsigned __int8 v92 = v156;
  unsigned __int8 v91 = v158;
  unsigned __int8 v90 = v160;
  uint64_t v28 = v65;
  Divider.init()();
  sub_100066DA4(v63, (uint64_t)v13);
  unsigned __int8 v29 = v95;
  int v41 = v95;
  int v46 = v94;
  int v47 = v93;
  int v49 = v92;
  int v50 = v91;
  int v52 = v90;
  uint64_t v30 = (uint64_t)v13;
  uint64_t v42 = v13;
  uint64_t v31 = v44;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v32 = v28;
  uint64_t v33 = v45;
  v40(v66, v32, v45);
  uint64_t v34 = v43;
  sub_100066DA4(v30, v43);
  uint64_t v35 = sub_100004010(&qword_1003821F8);
  uint64_t v36 = *(int *)(v35 + 48);
  *(_OWORD *)((char *)&v96[21] + 1) = v84;
  *(_OWORD *)((char *)&v96[23] + 1) = v85;
  *(_OWORD *)((char *)&v96[25] + 1) = v86;
  *(_OWORD *)((char *)&v96[27] + 1) = v87;
  *(_OWORD *)((char *)&v96[13] + 1) = v80;
  *(_OWORD *)((char *)&v96[15] + 1) = v81;
  *(_OWORD *)((char *)&v96[17] + 1) = v82;
  *(_OWORD *)((char *)&v96[19] + 1) = v83;
  *(_OWORD *)((char *)&v96[5] + 1) = v76;
  *(_OWORD *)((char *)&v96[7] + 1) = v77;
  *(_OWORD *)((char *)&v96[9] + 1) = v78;
  v96[0] = v64;
  v96[1] = 0;
  LOBYTE(v96[2]) = 0;
  *(_DWORD *)((char *)&v96[2] + 1) = *(_DWORD *)v88;
  HIDWORD(v96[2]) = *(_DWORD *)&v88[3];
  void v96[3] = v62;
  v96[4] = 0;
  LOBYTE(v96[5]) = v61;
  *(_OWORD *)((char *)&v96[11] + 1) = v79;
  *(_DWORD *)((char *)&v96[29] + 1) = *(_DWORD *)v75;
  HIDWORD(v96[29]) = *(_DWORD *)&v75[3];
  LOBYTE(v96[30]) = v60;
  *(_DWORD *)((char *)&v96[30] + 1) = *(_DWORD *)v74;
  HIDWORD(v96[30]) = *(_DWORD *)&v74[3];
  *(double *)&v96[31] = v19;
  v96[32] = v21;
  v96[33] = v23;
  v96[34] = v25;
  LOBYTE(v96[35]) = v48;
  *(_DWORD *)((char *)&v96[35] + 1) = *(_DWORD *)v73;
  HIDWORD(v96[35]) = *(_DWORD *)&v73[3];
  v96[36] = v51;
  LOBYTE(v96[37]) = v29;
  *(_DWORD *)((char *)&v96[37] + 1) = *(_DWORD *)v72;
  HIDWORD(v96[37]) = *(_DWORD *)&v72[3];
  v96[38] = v53;
  LOBYTE(v96[39]) = v46;
  *(_DWORD *)((char *)&v96[39] + 1) = *(_DWORD *)v71;
  HIDWORD(v96[39]) = *(_DWORD *)&v71[3];
  v96[40] = v54;
  LOBYTE(v96[41]) = v47;
  *(_DWORD *)((char *)&v96[41] + 1) = *(_DWORD *)v70;
  HIDWORD(v96[41]) = *(_DWORD *)&v70[3];
  v96[42] = v55;
  LOBYTE(v96[43]) = v49;
  *(_DWORD *)((char *)&v96[43] + 1) = *(_DWORD *)v69;
  HIDWORD(v96[43]) = *(_DWORD *)&v69[3];
  v96[44] = v56;
  LOBYTE(v96[45]) = v50;
  *(_DWORD *)((char *)&v96[45] + 1) = *(_DWORD *)v68;
  HIDWORD(v96[45]) = *(_DWORD *)&v68[3];
  v96[46] = v57;
  LOBYTE(v96[47]) = v52;
  *(_DWORD *)((char *)&v96[47] + 1) = *(_DWORD *)v67;
  HIDWORD(v96[47]) = *(_DWORD *)&v67[3];
  v96[48] = v59;
  v96[49] = v58;
  memcpy((void *)(v34 + v36), v96, 0x190uLL);
  uint64_t v37 = v66;
  v40((char *)(v34 + *(int *)(v35 + 64)), v66, v33);
  sub_100066E0C((uint64_t)v96);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v65, v33);
  sub_10000950C(v63, &qword_1003821F0);
  v38(v37, v33);
  long long v111 = v84;
  long long v112 = v85;
  long long v113 = v86;
  long long v114 = v87;
  long long v107 = v80;
  long long v108 = v81;
  long long v109 = v82;
  long long v110 = v83;
  long long v103 = v76;
  long long v104 = v77;
  long long v105 = v78;
  v97[0] = v64;
  v97[1] = 0;
  char v98 = 0;
  *(_DWORD *)uint64_t v99 = *(_DWORD *)v88;
  *(_DWORD *)&v99[3] = *(_DWORD *)&v88[3];
  uint64_t v100 = v62;
  uint64_t v101 = 0;
  char v102 = v61;
  long long v106 = v79;
  *(_DWORD *)uint64_t v115 = *(_DWORD *)v75;
  *(_DWORD *)&v115[3] = *(_DWORD *)&v75[3];
  char v116 = v60;
  *(_DWORD *)uint64_t v117 = *(_DWORD *)v74;
  *(_DWORD *)&v117[3] = *(_DWORD *)&v74[3];
  double v118 = v19;
  uint64_t v119 = v21;
  uint64_t v120 = v23;
  uint64_t v121 = v25;
  char v122 = v48;
  *(_DWORD *)uint64_t v123 = *(_DWORD *)v73;
  *(_DWORD *)&v123[3] = *(_DWORD *)&v73[3];
  uint64_t v124 = v51;
  char v125 = v41;
  *(_DWORD *)uint64_t v126 = *(_DWORD *)v72;
  *(_DWORD *)&v126[3] = *(_DWORD *)&v72[3];
  uint64_t v127 = v53;
  char v128 = v46;
  *(_DWORD *)uint64_t v129 = *(_DWORD *)v71;
  *(_DWORD *)&v129[3] = *(_DWORD *)&v71[3];
  uint64_t v130 = v54;
  char v131 = v47;
  *(_DWORD *)uint64_t v132 = *(_DWORD *)v70;
  *(_DWORD *)&v132[3] = *(_DWORD *)&v70[3];
  uint64_t v133 = v55;
  char v134 = v49;
  *(_DWORD *)long long v135 = *(_DWORD *)v69;
  *(_DWORD *)&v135[3] = *(_DWORD *)&v69[3];
  uint64_t v136 = v56;
  char v137 = v50;
  *(_DWORD *)long long v138 = *(_DWORD *)v68;
  *(_DWORD *)&v138[3] = *(_DWORD *)&v68[3];
  uint64_t v139 = v57;
  char v140 = v52;
  *(_DWORD *)long long v141 = *(_DWORD *)v67;
  *(_DWORD *)&v141[3] = *(_DWORD *)&v67[3];
  uint64_t v142 = v59;
  uint64_t v143 = v58;
  sub_100066E98((uint64_t)v97);
  return sub_10000950C((uint64_t)v42, &qword_1003821F0);
}

__n128 sub_1000667D0@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)&long long v29 = *(void *)(a1 + 32);
  *((void *)&v29 + 1) = v5;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = static Alignment.leading.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v28, 0.0, 1, 0.0, 1, v13, v14, v6, v8, v12, v10);
  sub_100033364(v6, v8, v12);
  swift_bridgeObjectRelease();
  long long v35 = v28[6];
  long long v36 = v28[7];
  long long v37 = v28[8];
  long long v31 = v28[2];
  long long v32 = v28[3];
  long long v33 = v28[4];
  long long v34 = v28[5];
  long long v29 = v28[0];
  __n128 v30 = (__n128)v28[1];
  uint64_t v15 = a2[3];
  uint64_t v16 = a2[4];
  sub_100008F88(a2, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 200))(v15, v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  sub_100008F88(a2, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 168))(v19, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  long long v24 = v36;
  *(_OWORD *)(a3 + 96) = v35;
  *(_OWORD *)(a3 + 112) = v24;
  *(_OWORD *)(a3 + 128) = v37;
  long long v25 = v32;
  *(_OWORD *)(a3 + 32) = v31;
  *(_OWORD *)(a3 + 48) = v25;
  long long v26 = v34;
  *(_OWORD *)(a3 + 64) = v33;
  *(_OWORD *)(a3 + 80) = v26;
  __n128 result = v30;
  *(_OWORD *)a3 = v29;
  *(__n128 *)(a3 + 16) = result;
  *(void *)(a3 + 144) = KeyPath;
  *(void *)(a3 + 152) = v17;
  *(void *)(a3 + 160) = v22;
  *(void *)(a3 + 168) = v21;
  *(void *)(a3 + 176) = v23;
  *(unsigned char *)(a3 + 184) = 0;
  return result;
}

uint64_t sub_1000669B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100065D38(a1);
}

uint64_t sub_1000669FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for EmergencyContactListItem()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencyContactListItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyContactListItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 initializeWithTake for EmergencyContactListItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EmergencyContactListItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyContactListItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyContactListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyContactListItem()
{
  return &type metadata for EmergencyContactListItem;
}

ValueMetadata *type metadata accessor for EmergencyContactInfo()
{
  return &type metadata for EmergencyContactInfo;
}

unint64_t sub_100066CE4()
{
  unint64_t result = qword_1003821C0;
  if (!qword_1003821C0)
  {
    sub_1000094C4(&qword_1003821C8);
    sub_100009B18(&qword_1003821D0, &qword_100382190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003821C0);
  }
  return result;
}

void *sub_100066D7C()
{
  return &protocol witness table for String;
}

uint64_t sub_100066D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100066DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003821F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100066E0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100066E98(uint64_t a1)
{
  return a1;
}

unint64_t sub_100066F40()
{
  unint64_t result = qword_100382200;
  if (!qword_100382200)
  {
    sub_1000094C4(&qword_1003821E0);
    sub_100009B18(&qword_100382208, &qword_1003821D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382200);
  }
  return result;
}

uint64_t destroy for ExplorerTryOutIntroductionView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExplorerTryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplorerTryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplorerTryOutIntroductionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerTryOutIntroductionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerTryOutIntroductionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerTryOutIntroductionView()
{
  return &type metadata for ExplorerTryOutIntroductionView;
}

uint64_t sub_100067248()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100067264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v26 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100382210);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v9 = v8[9];
    uint64_t v10 = v8[10];
    sub_100008F88(v8 + 6, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v34, v9, v10);
    sub_100068B8C(*(unsigned char *)(v1 + 16), (unint64_t *)v35);
    uint64_t v11 = *(void *)(v1 + 24);
    uint64_t v37 = *(void *)(v1 + 40);
    v38[0] = v11;
    sub_1000090FC((uint64_t)v34, (uint64_t)v32);
    uint64_t v12 = swift_allocObject();
    long long v13 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v12 + 32) = v13;
    long long v14 = v35[0];
    long long v15 = v35[1];
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v12 + 64) = v14;
    *(_OWORD *)(v12 + 80) = v15;
    *(void *)(v12 + 96) = v36;
    sub_100009164(v32, v12 + 104);
    sub_1000090FC((uint64_t)v34, (uint64_t)v32);
    uint64_t v16 = (_OWORD *)swift_allocObject();
    long long v17 = *(_OWORD *)(v1 + 16);
    v16[1] = *(_OWORD *)v1;
    uint64_t v16[2] = v17;
    v16[3] = *(_OWORD *)(v1 + 32);
    sub_100009164(v32, (uint64_t)(v16 + 4));
    swift_retain();
    sub_10004ED30((uint64_t)v38);
    swift_retain();
    sub_10003E68C((uint64_t)&v37);
    swift_retain();
    sub_10004ED30((uint64_t)v38);
    swift_retain();
    sub_10003E68C((uint64_t)&v37);
    sub_1001621AC(v30, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_100069138, v12, sub_1000691A0, v16, 0);
    uint64_t v18 = v26;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v26);
    uint64_t v19 = sub_100004010(&qword_100382218);
    uint64_t v20 = sub_100009B18(&qword_100382220, &qword_100382218);
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    v32[8] = v30[8];
    v32[9] = v30[9];
    v32[10] = v30[10];
    uint64_t v33 = v31;
    v32[4] = v30[4];
    v32[5] = v30[5];
    v32[6] = v30[6];
    v32[7] = v30[7];
    v32[0] = v30[0];
    v32[1] = v30[1];
    uint64_t v32[2] = v30[2];
    v32[3] = v30[3];
    sub_100009354((uint64_t)v32);
    sub_100004010(&qword_100382228);
    *(void *)&v30[0] = v19;
    *((void *)&v30[0] + 1) = v20;
    swift_getOpaqueTypeConformance2();
    uint64_t v21 = sub_1000094C4(&qword_1003818D0);
    uint64_t v22 = sub_100009B18(&qword_100382230, &qword_1003818D0);
    *(void *)&v30[0] = v21;
    *((void *)&v30[0] + 1) = v22;
    swift_getOpaqueTypeConformance2();
    uint64_t v23 = v28;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v23);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v34);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100067758@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int v52 = a3;
  uint64_t v7 = sub_100004010(&qword_100382240);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_100382248);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004010(&qword_100382250);
  uint64_t v12 = __chkstk_darwin(v51);
  long long v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  int v49 = a1;
  if (*a1)
  {
    uint64_t v17 = a2[1];
    uint64_t v54 = *a2;
    uint64_t v18 = self;
    swift_retain();
    id v19 = [v18 sharedApplication];
    id v20 = [v19 userInterfaceLayoutDirection];

    uint64_t v53 = v16;
    if (v20 == (id)1)
    {
      uint64_t v55 = v54;
      uint64_t v56 = v17;
      swift_bridgeObjectRetain();
      v21._uint64_t countAndFlagsBits = 1819570733;
      v21._object = (void *)0xE400000000000000;
      String.append(_:)(v21);
      uint64_t v47 = v55;
      uint64_t v50 = v56;
      uint64_t v22 = v17;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v47 = v54;
      uint64_t v50 = v17;
      uint64_t v54 = 0;
    }
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v24 = EnvironmentObject.init()();
    uint64_t v46 = v25;
    *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v26 = sub_100004010(&qword_100382258);
    sub_100067C24((uint64_t)a2, v49, (uint64_t)&v9[*(int *)(v26 + 44)]);
    char v27 = static Edge.Set.top.getter();
    sub_10000D2A0((uint64_t)v9, (uint64_t)v11, &qword_100382240);
    uint64_t v28 = &v11[*(int *)(v48 + 36)];
    *uint64_t v28 = v27;
    *(_OWORD *)(v28 + 8) = 0u;
    *(_OWORD *)(v28 + 24) = 0u;
    v28[40] = 1;
    sub_10000950C((uint64_t)v9, &qword_100382240);
    uint64_t v29 = v52[3];
    uint64_t v30 = v52[4];
    sub_100008F88(v52, v29);
    double v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    char v38 = static Edge.Set.all.getter();
    sub_10000D2A0((uint64_t)v11, (uint64_t)v14, &qword_100382248);
    Swift::String v39 = &v14[*(int *)(v51 + 36)];
    char *v39 = v38;
    *((double *)v39 + 1) = v31;
    *((void *)v39 + 2) = v33;
    *((void *)v39 + 3) = v35;
    *((void *)v39 + 4) = v37;
    v39[40] = 0;
    sub_10000950C((uint64_t)v11, &qword_100382248);
    uint64_t v40 = (uint64_t)v53;
    sub_10000D544((uint64_t)v14, (uint64_t)v53, &qword_100382250);
    sub_10000D2A0(v40, (uint64_t)v14, &qword_100382250);
    uint64_t v41 = v46;
    *(void *)a4 = v24;
    *(void *)(a4 + 8) = v41;
    *(void *)(a4 + 16) = KeyPath;
    *(unsigned char *)(a4 + 24) = 0;
    uint64_t v42 = v50;
    *(void *)(a4 + 32) = v47;
    *(void *)(a4 + 40) = v42;
    *(void *)(a4 + 48) = v54;
    *(void *)(a4 + 56) = v22;
    uint64_t v43 = sub_100004010(&qword_100382260);
    sub_10000D2A0((uint64_t)v14, a4 + *(int *)(v43 + 48), &qword_100382250);
    swift_retain();
    sub_10004C6D4(KeyPath, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000950C(v40, &qword_100382250);
    sub_10000950C((uint64_t)v14, &qword_100382250);
    swift_release();
    sub_10004C738(KeyPath, 0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100067C24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v5 = sub_100004010(&qword_100382268);
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v79 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  long long v77 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v75 = (char *)v61 - v8;
  uint64_t v70 = type metadata accessor for AccessibilityTraits();
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v66 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100382270);
  __chkstk_darwin(v10 - 8);
  uint64_t v71 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004010(&qword_100382278);
  uint64_t v12 = __chkstk_darwin(v69);
  uint64_t v74 = (uint64_t)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v67 = (uint64_t)v61 - v15;
  __chkstk_darwin(v14);
  uint64_t v80 = (uint64_t)v61 - v16;
  uint64_t v72 = a1;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  *(void *)&v93[0] = v17;
  *((void *)&v93[0] + 1) = v18;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static Font.title.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v24 = Text.font(_:)();
  uint64_t v63 = v25;
  int v62 = v26;
  uint64_t v65 = v27;
  swift_release();
  sub_100033364(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v73 = a2;
  uint64_t v28 = *a2;
  if (*a2)
  {
    id v29 = *(id *)(v28 + 112);
    char v30 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v32 = *(id *)(v28 + 112);
    static Alignment.center.getter();
    v61[1] = UIContentSizeCategoryAccessibilityExtraLarge;
    char v33 = static UIContentSizeCategory.>= infix(_:_:)();
    uint64_t v64 = v28;
    if (v33 & 1) != 0 && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)()))
    {
      uint64_t v34 = KeyPath;
      static Alignment.leading.getter();
    }
    else
    {
      uint64_t v34 = KeyPath;
    }

    char v35 = v62 & 1;
    uint64_t v36 = v63;
    v96[1] = v24;
    v96[2] = v63;
    char v97 = v62 & 1;
    uint64_t v98 = v65;
    uint64_t v99 = v34;
    BOOL v100 = (v30 & 1) == 0;
    __int16 v101 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v94, 0.0, 1, 0.0, 1);
    sub_100033364(v24, v36, v35);
    swift_release();
    swift_bridgeObjectRelease();
    id v37 = *(id *)(v64 + 112);
    char v38 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v38) {
      double v39 = 1.0;
    }
    else {
      double v39 = 0.5;
    }
    uint64_t v40 = swift_getKeyPath();
    long long v88 = v94[6];
    long long v89 = v94[7];
    long long v90 = v94[8];
    long long v91 = v94[9];
    long long v84 = v94[2];
    long long v85 = v94[3];
    long long v86 = v94[4];
    long long v87 = v94[5];
    long long v82 = v94[0];
    long long v83 = v94[1];
    *(void *)&long long v92 = v40;
    *((double *)&v92 + 1) = v39;
    uint64_t v41 = v66;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100381968);
    sub_10004F740();
    uint64_t v42 = (uint64_t)v71;
    View.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v70);
    v93[8] = v90;
    v93[9] = v91;
    v93[10] = v92;
    v93[4] = v86;
    v93[5] = v87;
    v93[6] = v88;
    v93[7] = v89;
    v93[0] = v82;
    v93[1] = v83;
    v93[2] = v84;
    v93[3] = v85;
    sub_100043A24((uint64_t)v93);
    char v43 = static Edge.Set.bottom.getter();
    uint64_t v44 = v67;
    sub_10000D2A0(v42, v67, &qword_100382270);
    uint64_t v45 = v44 + *(int *)(v69 + 36);
    *(unsigned char *)uint64_t v45 = v43;
    *(_OWORD *)(v45 + 8) = 0u;
    *(_OWORD *)(v45 + 24) = 0u;
    *(unsigned char *)(v45 + 40) = 1;
    sub_10000950C(v42, &qword_100382270);
    uint64_t v46 = v80;
    sub_10000D544(v44, v80, &qword_100382278);
    uint64_t v81 = *(void *)(v72 + 32);
    *(void *)&long long v82 = v81;
    swift_getKeyPath();
    uint64_t v47 = v73;
    uint64_t v48 = v73[3];
    uint64_t v95 = v73[5];
    v96[0] = v48;
    int v49 = (_OWORD *)swift_allocObject();
    long long v50 = v47[1];
    v49[1] = *v47;
    void v49[2] = v50;
    void v49[3] = v47[2];
    sub_10003E68C((uint64_t)&v82);
    swift_retain();
    sub_10004ED30((uint64_t)v96);
    swift_retain();
    sub_10003E68C((uint64_t)&v95);
    sub_100004010(&qword_100380040);
    sub_100004010(&qword_100381958);
    sub_100009B18(&qword_100381CF8, &qword_100380040);
    sub_100069208(&qword_100381950, &qword_100381958, (void (*)(void))sub_10004F740);
    uint64_t v51 = v75;
    ForEach<>.init(_:id:content:)();
    uint64_t v52 = v74;
    sub_10000D2A0(v46, v74, &qword_100382278);
    uint64_t v54 = v77;
    uint64_t v53 = v78;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    uint64_t v56 = v79;
    v55(v77, v51, v79);
    uint64_t v57 = v76;
    sub_10000D2A0(v52, v76, &qword_100382278);
    uint64_t v58 = sub_100004010(&qword_100382280);
    v55((char *)(v57 + *(int *)(v58 + 48)), v54, v56);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
    v59(v51, v56);
    sub_10000950C(v80, &qword_100382278);
    v59(v54, v56);
    return sub_10000950C(v52, &qword_100382278);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100068448@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[1];
  *(void *)&v35[0] = *a1;
  *((void *)&v35[0] + 1) = v5;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.body.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v34 = v12;
  char v33 = v13;
  uint64_t v15 = v14;
  swift_release();
  sub_100033364(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = *a2;
  if (*a2)
  {
    id v17 = *(id *)(v16 + 112);
    char v31 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v18 = *(id *)(v16 + 112);
    static Alignment.center.getter();
    if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) != 0
      && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)() & 1) != 0))
    {
      uint64_t v19 = v11;
      uint64_t v20 = v15;
      static Alignment.leading.getter();
    }
    else
    {
      uint64_t v19 = v11;
      uint64_t v20 = v15;
    }

    uint64_t v36 = v19;
    uint64_t v37 = v34;
    char v38 = v33 & 1;
    uint64_t v39 = v20;
    uint64_t v40 = KeyPath;
    BOOL v41 = (v31 & 1) == 0;
    __int16 v42 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v35, 0.0, 1, 0.0, 1);
    sub_100033364(v19, v34, v33 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    id v21 = *(id *)(v16 + 112);
    char v22 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v22) {
      double v23 = 1.0;
    }
    else {
      double v23 = 0.5;
    }
    uint64_t v24 = swift_getKeyPath();
    uint64_t result = static Edge.Set.bottom.getter();
    long long v26 = v35[7];
    *(_OWORD *)(a3 + 96) = v35[6];
    *(_OWORD *)(a3 + 112) = v26;
    long long v27 = v35[9];
    *(_OWORD *)(a3 + 128) = v35[8];
    *(_OWORD *)(a3 + 144) = v27;
    long long v28 = v35[3];
    *(_OWORD *)(a3 + 32) = v35[2];
    *(_OWORD *)(a3 + 48) = v28;
    long long v29 = v35[5];
    *(_OWORD *)(a3 + 64) = v35[4];
    *(_OWORD *)(a3 + 80) = v29;
    long long v30 = v35[1];
    *(_OWORD *)a3 = v35[0];
    *(_OWORD *)(a3 + 16) = v30;
    *(void *)(a3 + 160) = v24;
    *(double *)(a3 + 168) = v23;
    *(unsigned char *)(a3 + 176) = result;
    *(_OWORD *)(a3 + 184) = 0u;
    *(_OWORD *)(a3 + 200) = 0u;
    *(unsigned char *)(a3 + 216) = 1;
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100068764@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 3)
  {
    type metadata accessor for AppEvents();
    sub_10004F378((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t v5 = EnvironmentObject.init()();
    uint64_t v24 = v6;
    uint64_t v25 = v5;
    LOBYTE(v26[0]) = 0;
    State.init(wrappedValue:)();
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    sub_100008F88(a2, v7);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    LOBYTE(v7) = static Edge.Set.all.getter();
    LOBYTE(v8) = static Edge.Set.top.getter();
    char v16 = static Edge.Set.bottom.getter();
    uint64_t v17 = a2[3];
    uint64_t v18 = a2[4];
    sub_100008F88(a2, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 112))(v17, v18);
    EdgeInsets.init(_all:)();
    v26[0] = v25;
    v26[1] = v24;
    char v27 = 3;
    char v28 = v46[0];
    uint64_t v29 = v47;
    char v30 = v7;
    double v31 = v9;
    uint64_t v32 = v11;
    uint64_t v33 = v13;
    uint64_t v34 = v15;
    char v35 = 0;
    char v36 = v8;
    long long v38 = 0u;
    long long v37 = 0u;
    char v39 = 1;
    char v40 = v16;
    uint64_t v41 = v19;
    uint64_t v42 = v20;
    uint64_t v43 = v21;
    uint64_t v44 = v22;
    char v45 = 0;
    ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v26);
  }
  else
  {
    sub_1000691B4((uint64_t)v26);
  }
  sub_10000D544((uint64_t)v26, (uint64_t)v46, &qword_100382238);
  return sub_10000D544((uint64_t)v46, a3, &qword_100382238);
}

uint64_t sub_100068970()
{
  uint64_t v0 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100004010(&qword_1003818D0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  sub_10004F324();
  ToolbarItem<>.init(placement:content:)();
  sub_100009B18(&qword_100382230, &qword_1003818D0);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100068AF4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10004F378((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

void sub_100068B8C(unsigned __int8 a1@<W0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = a1;
  uint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v5 = 0xE000000000000000;
  uint64_t countAndFlagsBits = a1;
  object = (void *)0xE000000000000000;
  switch(a1)
  {
    case 1u:
      uint64_t v25 = self;
      id v26 = [v25 mainBundle];
      v27._uint64_t countAndFlagsBits = 0xD000000000000021;
      v50._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
      v50._object = (void *)0x80000001002CA8A0;
      v27._object = (void *)0x80000001002C7730;
      v28.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v28.value._object = (void *)0xED00006E6F656769;
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v50);
      uint64_t countAndFlagsBits = v30._countAndFlagsBits;
      object = v30._object;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v4 = (void *)swift_allocObject();
      *((_OWORD *)v4 + 1) = xmmword_1002B3350;
      id v31 = [v25 mainBundle];
      v51._uint64_t countAndFlagsBits = 0xD000000000000034;
      v32._uint64_t countAndFlagsBits = 0xD00000000000007ALL;
      v51._object = (void *)0x80000001002CA960;
      v32._object = (void *)0x80000001002CA8E0;
      v33.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v33.value._object = (void *)0xED00006E6F656769;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v51);

      *((Swift::String *)v4 + 2) = v35;
      unint64_t v3 = 0xD000000000000025;
      uint64_t v24 = "TryOutIntroGraphicsRoadsideAssistance";
      goto LABEL_5;
    case 2u:
      char v36 = self;
      id v37 = [v36 mainBundle];
      v38._uint64_t countAndFlagsBits = 0xD000000000000022;
      v52._object = (void *)0x80000001002CA770;
      v38._object = (void *)0x80000001002CA740;
      v39.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v39.value._object = (void *)0xED00006E6F656769;
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      v52._uint64_t countAndFlagsBits = 0xD000000000000030;
      Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v52);
      uint64_t countAndFlagsBits = v41._countAndFlagsBits;
      object = v41._object;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v4 = (void *)swift_allocObject();
      *((_OWORD *)v4 + 1) = xmmword_1002B3350;
      id v42 = [v36 mainBundle];
      v53._object = (void *)0x80000001002CA830;
      v43._object = (void *)0x80000001002CA7B0;
      v43._uint64_t countAndFlagsBits = 0x1000000000000072;
      v44.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v44.value._object = (void *)0xED00006E6F656769;
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      v53._uint64_t countAndFlagsBits = 0xD000000000000030;
      Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v53);

      *((Swift::String *)v4 + 2) = v46;
      unint64_t v3 = 0xD000000000000019;
      uint64_t v24 = "TryOutIntroGraphicsFindMy";
      goto LABEL_5;
    case 3u:
    case 4u:
      uint64_t v8 = self;
      id v9 = [v8 mainBundle];
      v10._uint64_t countAndFlagsBits = 0xD000000000000016;
      v47._object = (void *)0x80000001002CA540;
      v10._object = (void *)0x80000001002CA520;
      v11.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v11.value._object = (void *)0xED00006E6F656769;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      v47._uint64_t countAndFlagsBits = 0xD000000000000031;
      Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v47);
      uint64_t countAndFlagsBits = v13._countAndFlagsBits;
      object = v13._object;

      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v4 = (void *)swift_allocObject();
      *((_OWORD *)v4 + 1) = xmmword_1002B31C0;
      id v14 = [v8 mainBundle];
      v15._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
      v48._object = (void *)0x80000001002CA600;
      v15._object = (void *)0x80000001002CA580;
      v16.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v16.value._object = (void *)0xED00006E6F656769;
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v48._uint64_t countAndFlagsBits = 0xD000000000000031;
      Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v48);

      *((Swift::String *)v4 + 2) = v18;
      id v19 = [v8 mainBundle];
      v20._uint64_t countAndFlagsBits = 0xD000000000000095;
      v49._object = (void *)0x80000001002CA6E0;
      v20._object = (void *)0x80000001002CA640;
      v21.value._uint64_t countAndFlagsBits = 0x5072656972726143;
      v21.value._object = (void *)0xED00006E6F656769;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v49._uint64_t countAndFlagsBits = 0xD000000000000031;
      Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v49);

      *((Swift::String *)v4 + 3) = v23;
      unint64_t v3 = 0xD00000000000001BLL;
      uint64_t v24 = "TryOutIntroGraphicsMessages";
LABEL_5:
      unint64_t v5 = (unint64_t)(v24 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  *a2 = v3;
  a2[1] = v5;
  a2[2] = countAndFlagsBits;
  a2[3] = (unint64_t)object;
  a2[4] = (unint64_t)v4;
}

uint64_t sub_1000690C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 104);

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100069138@<X0>(uint64_t a1@<X8>)
{
  return sub_100067758(v1 + 2, v1 + 8, v1 + 13, a1);
}

uint64_t sub_100069148()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 64);

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1000691A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100068764(v1 + 16, (void *)(v1 + 64), a1);
}

double sub_1000691B4(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 161) = 0u;
  return result;
}

uint64_t sub_100069208(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100069284()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000692D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068448(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_1000692DC()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100069414()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_lockedStateDidChange;
  sub_100004010(&qword_100385860);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent] = 0;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for LockScreenSource();
  id v3 = [super init];
  uint64_t v4 = qword_10037DD80;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    Swift::String v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)Swift::String v10 = 136446210;
    id v11 = v7;
    id v12 = [v11 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1001B3178(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "init: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v7;
}

id sub_100069684()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for LockScreenSource();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for LockScreenSource()
{
  return self;
}

uint64_t sub_100069910()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "start", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = objc_allocWithZone((Class)type metadata accessor for LockScreenAgent());
  id v13 = sub_100010758((uint64_t)sub_100069F84, v11);
  uint64_t v14 = OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent;
  unint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent) = v13;

  Swift::String_optional v16 = *(void **)(v1 + v14);
  if (v16)
  {
    id v17 = v16;
    BOOL v18 = sub_100010ECC();

    if (v18) {
      return 1;
    }
  }
  Swift::String v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    Swift::String v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to start LockScreenAgent", v22, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_100069BE0(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)&v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v8 = (void *)result;
      swift_retain();

      v9[7] = a1 & 1;
      PassthroughSubject.send(_:)();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100069D58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "stop", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent;
  id v12 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_agent);
  if (v12)
  {
    id v13 = v12;
    sub_1000113E8();

    id v12 = *(void **)(v1 + v11);
  }
  *(void *)(v1 + v11) = 0;
}

uint64_t sub_100069F4C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100069F84(char a1)
{
  return sub_100069BE0(a1);
}

uint64_t sub_100069F8C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_100074A34((uint64_t)v5, (uint64_t)v7) & 1;
}

BOOL sub_100069FD8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t sub_10006A004(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)a2 + 42);
  return sub_100074958((uint64_t)v5, (uint64_t)v7) & 1;
}

void *sub_10006A060()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v26 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v25);
  v24[3] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  swift_retain();
  v0[4] = PassthroughSubject.init()();
  sub_100004010(&qword_100382460);
  swift_allocObject();
  v0[5] = PassthroughSubject.init()();
  v0[7] = 0;
  swift_unknownObjectWeakInit();
  v0[9] = 0;
  swift_unknownObjectWeakInit();
  v0[11] = 0;
  swift_unknownObjectWeakInit();
  id v8 = [self mainBundle];
  id v9 = [v8 bundleIdentifier];

  v24[1] = v2;
  uint64_t v27 = v3;
  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v12 = 0x80000001002C5A40;
    uint64_t v10 = 0xD000000000000012;
  }
  uint64_t v24[2] = sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  v29[0] = v10;
  v29[1] = v12;
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = 0xD000000000000026;
  v13._object = (void *)0x80000001002CAC20;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v29[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100009B18((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v26, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v27);
  v1[12] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_OWORD *)(v1 + 13) = 0u;
  *(_OWORD *)(v1 + 15) = 0u;
  *(_OWORD *)(v1 + 17) = 0u;
  *(_OWORD *)(v1 + 19) = 0u;
  *((unsigned char *)v1 + 168) = 2;
  v1[22] = 0;
  *((unsigned char *)v1 + 184) = 1;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  v1[30] = 0;
  *((_WORD *)v1 + 124) = 3;
  *((unsigned char *)v1 + 250) = 0;
  v1[32] = 0;
  v1[33] = 0;
  *((unsigned char *)v1 + 272) = 2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    uint64_t v14 = _swiftEmptySetSingleton;
    v1[35] = _swiftEmptySetSingleton;
    goto LABEL_6;
  }
  if (_CocoaArrayWrapper.endIndex.getter())
  {
    v1[35] = sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v14 = _swiftEmptySetSingleton;
    v1[35] = _swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_6;
    }
  }
  if (_CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v14 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v14 = _swiftEmptySetSingleton;
  }
LABEL_6:
  v1[36] = v14;
  v1[37] = 0;
  *((_OWORD *)v1 + 19) = xmmword_1002B5340;
  *((_OWORD *)v1 + 20) = xmmword_1002B5340;
  v1[42] = 1;
  *(_OWORD *)(v1 + 43) = 0u;
  *(_OWORD *)(v1 + 45) = 0u;
  swift_release();
  swift_allocObject();
  v1[2] = PassthroughSubject.init()();
  swift_allocObject();
  v1[3] = PassthroughSubject.init()();
  uint64_t v15 = qword_10037DD80;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000FD84(v16, (uint64_t)qword_1003A9958);
  swift_retain_n();
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = (uint64_t)v1;
    v29[0] = v20;
    *(_DWORD *)id v19 = 136446210;
    swift_retain();
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v28 = sub_1001B3178(v21, v22, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%{public}s] init", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10006A6E4()
{
  swift_release();
  swift_release();
  sub_10002D3E4(v0 + 48);
  sub_10002D3E4(v0 + 64);
  sub_10002D3E4(v0 + 80);

  swift_release();
  swift_bridgeObjectRelease();
  sub_100075E64(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  sub_100075F88(*(void *)(v0 + 296), *(void *)(v0 + 304));
  sub_100075F88(v1, v2);
  sub_1000760DC(v3, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006A7D0()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10002D3E4(v1 + 48);
  sub_10002D3E4(v1 + 64);
  sub_10002D3E4(v1 + 80);

  swift_release();
  swift_bridgeObjectRelease();
  sub_100075E64(*(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v1 + 312);
  uint64_t v9 = *(void *)(v1 + 320);
  uint64_t v10 = *(void *)(v1 + 328);
  uint64_t v11 = *(void *)(v1 + 336);
  sub_100075F88(*(void *)(v1 + 296), *(void *)(v1 + 304));
  sub_100075F88(v8, v9);
  sub_1000760DC(v10, v11);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10006AA74()
{
  sub_10006A7D0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RoadsideAssistanceModel()
{
  return self;
}

uint64_t destroy for QuestionnaireLoadingState(void *a1)
{
  if (a1[1] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[3] != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[5];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for QuestionnaireLoadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v5;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for QuestionnaireLoadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 == 1)
  {
    sub_100039F34(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) == 1)
  {
    if (v5 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v5 == 1)
  {
    sub_100039F34(a1 + 16);
LABEL_13:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 48);
      _OWORD *v6 = *v7;
      *(_OWORD *)(a1 + 48) = v9;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_10006ADB4(a1 + 32);
    long long v10 = *(_OWORD *)(a2 + 48);
    _OWORD *v6 = *v7;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_10006ADB4(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for QuestionnaireLoadingState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_100039F34(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v5 = (_OWORD *)(a2 + 16);
  if (*(void *)(a1 + 24) == 1)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v5;
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    sub_100039F34(a1 + 16);
    goto LABEL_9;
  }
  *(void *)(a1 + 16) = *(void *)v5;
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
LABEL_11:
  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    if (v7 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10006ADB4(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireLoadingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireLoadingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s8SOSBuddy25QuestionnaireLoadingStateVMa_0()
{
  return &_s8SOSBuddy25QuestionnaireLoadingStateVN_0;
}

uint64_t getEnumTagSinglePayload for DeviceOrientationErrorOverrideMessage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceOrientationErrorOverrideMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s8SOSBuddy25QuestionnaireLoadingStateV11RequestDoneVMa_0()
{
  return &_s8SOSBuddy25QuestionnaireLoadingStateV11RequestDoneVN_0;
}

uint64_t getEnumTagSinglePayload for QuestionnaireState.RecordedAnswer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireState.RecordedAnswer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s8SOSBuddy25QuestionnaireLoadingStateV7RequestVMa_0()
{
  return &_s8SOSBuddy25QuestionnaireLoadingStateV7RequestVN_0;
}

__n128 initializeWithCopy for RoadsideAssistanceModel.RoadsideAssistance(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RoadsideAssistanceModel.RoadsideAssistance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 58)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoadsideAssistanceModel.RoadsideAssistance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceModel.RoadsideAssistance()
{
  return &type metadata for RoadsideAssistanceModel.RoadsideAssistance;
}

uint64_t destroy for RoadsideAssistanceProvider()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoadsideAssistanceProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoadsideAssistanceProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RoadsideAssistanceProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoadsideAssistanceProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoadsideAssistanceProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceProvider()
{
  return &type metadata for RoadsideAssistanceProvider;
}

uint64_t sub_10006B400()
{
  uint64_t v1 = v0;
  unint64_t v2 = v0 + 37;
  v0[7] = 0;
  swift_unknownObjectWeakAssign();
  v0[9] = 0;
  swift_unknownObjectWeakAssign();
  v0[11] = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v3 = v0[37];
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[39];
  uint64_t v6 = v1[40];
  uint64_t v7 = v2[4];
  uint64_t v8 = v1[42];
  *(_OWORD *)unint64_t v2 = xmmword_1002B3310;
  *((_OWORD *)v2 + 1) = xmmword_1002B3310;
  *((_OWORD *)v2 + 2) = xmmword_1002B3310;
  v1[43] = 0;
  v1[44] = 0;
  sub_100075F88(v3, v4);
  sub_100075F88(v5, v6);
  sub_1000760DC(v7, v8);
  uint64_t v9 = *((unsigned __int8 *)v1 + 250);
  if (v9 == 1)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *((unsigned char *)v1 + 250) = 0;
  sub_1000702F0(v9);
  *((unsigned char *)v1 + 272) = 2;
  swift_beginAccess();
  uint64_t v10 = v1[14];
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  v1[14] = 0;
  swift_bridgeObjectRelease();
  sub_10006E9FC(v10);
  swift_bridgeObjectRelease();
  sub_10000D544((uint64_t)(v1 + 15), (uint64_t)v20, &qword_100382448);
  uint64_t v11 = v1[15];
  uint64_t v12 = v1[16];
  uint64_t v13 = v1[17];
  sub_10000D544((uint64_t)v20, (uint64_t)v21, &qword_100382448);
  if (v22)
  {
    sub_100075EA8(v20, (void (*)(void, void, void, void, void))sub_100075EE4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100075E64(v11, v12, v13);
    sub_100075E64(0, 0, 0);
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  uint64_t v14 = v1[15];
  uint64_t v15 = v1[16];
  uint64_t v16 = v1[17];
  *(_OWORD *)(v1 + 15) = 0u;
  *(_OWORD *)(v1 + 17) = 0u;
  v1[19] = 0;
  sub_100075E64(v14, v15, v16);
  sub_10006F2BC(v20);
  sub_100075EA8(v20, (void (*)(void, void, void, void, void))sub_100075E64);
  id v17 = (void *)v1[20];
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  v1[20] = 0;
  swift_bridgeObjectRelease();
  sub_10006F804(v17);
  swift_bridgeObjectRelease();
  sub_10000D544((uint64_t)(v1 + 24), (uint64_t)v19, &qword_100382418);
  sub_10000D544((uint64_t)v19, (uint64_t)v23, &qword_100382418);
  if (v23[56] != 3)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  v1[30] = 0;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_WORD *)v1 + 124) = 3;
  sub_10006FEF8((uint64_t)v19);
  v1[45] = 0;
  v1[46] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006B824(uint64_t a1)
{
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9B20);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    sub_10000D544(a1, (uint64_t)v9, &qword_100382440);
    sub_100004010(&qword_100382440);
    uint64_t v6 = String.init<A>(describing:)();
    v9[0] = sub_1001B3178(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "onRequest - %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return sub_10006B9E0(a1, 0);
}

uint64_t sub_10006B9E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_10000FD84(v11, (uint64_t)qword_1003A9B20);
  swift_retain_n();
  uint64_t v39 = v12;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v37 = v7;
    v42[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446466;
    int v36 = a2;
    uint64_t v38 = v6;
    uint64_t v35 = v8;
    sub_10000D544(a1, (uint64_t)&v43, &qword_100382440);
    sub_100004010(&qword_100382440);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)&long long v43 = sub_1001B3178(v17, v18, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v19 = v3[30];
    __int16 v20 = *((_WORD *)v3 + 124);
    long long v21 = *((_OWORD *)v3 + 13);
    long long v43 = *((_OWORD *)v3 + 12);
    *(_OWORD *)Swift::String_optional v44 = v21;
    *(_OWORD *)&v44[16] = *((_OWORD *)v3 + 14);
    uint64_t v45 = v19;
    __int16 v46 = v20;
    sub_100004010(&qword_100382418);
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)&long long v43 = sub_1001B3178(v22, v23, v42);
    uint64_t v8 = v35;
    LOBYTE(a2) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v6 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Received request: %{public}s for currentRoadsideAssistance: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v37;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_10000D544(a1, (uint64_t)&v40, &qword_100382440);
  if (BYTE8(v40) != 2)
  {
    long long v43 = v40;
    *(_OWORD *)Swift::String_optional v44 = v41[0];
    *(_OWORD *)&v44[10] = *(_OWORD *)((char *)v41 + 10);
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    long long v27 = *(_OWORD *)v44;
    *(_OWORD *)(v26 + 24) = v43;
    *(_OWORD *)(v26 + 40) = v27;
    *(_OWORD *)(v26 + 50) = *(_OWORD *)&v44[10];
    *(unsigned char *)(v26 + 66) = a2 & 1;
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    swift_retain_n();
    *uint64_t v10 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
    char v28 = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
    if ((v28 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    swift_beginAccess();
    if (v3[14])
    {
      swift_bridgeObjectRetain();
      sub_100074FA0(v25, &v43, a2 & 1);
      swift_release();
      swift_release();
    }
    else
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        Swift::String v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          id v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Fetching roadside providers", v31, 2u);
          swift_slowDealloc();
        }

        uint64_t v32 = swift_allocObject();
        swift_weakInit();
        Swift::String_optional v33 = (void *)swift_allocObject();
        v33[2] = v32;
        _OWORD v33[3] = sub_100075DFC;
        v33[4] = v26;
        v33[5] = v6;
        swift_retain();
        swift_retain();
        sub_1002792C4((uint64_t)sub_1000763A8, (uint64_t)v33);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        return swift_release();
      }
      sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
      sub_100074FA0(v25, &v43, a2 & 1);
      swift_release();
      swift_release();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  sub_10000D544((uint64_t)(v3 + 24), (uint64_t)v42, &qword_100382418);
  sub_10000D544((uint64_t)v42, (uint64_t)&v43, &qword_100382418);
  if (v46 != 3)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  v3[30] = 0;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_WORD *)v3 + 124) = 3;
  return sub_10006FEF8((uint64_t)v42);
}

void sub_10006C094(uint64_t a1, __int16 a2)
{
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9B20);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_10000D544(a1, (uint64_t)&v53, &qword_100382458);
    sub_100004010(&qword_100382458);
    uint64_t v8 = String.init<A>(describing:)();
    *(void *)&long long v53 = sub_1001B3178(v8, v9, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    LOBYTE(v53) = a2;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)&long long v53 = sub_1001B3178(v10, v11, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "onConversationDidChange - %{public}s, fromSOSBuddy - %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10000D544(a1, (uint64_t)&v37, &qword_100382458);
  if (v38 == 2)
  {
    long long v53 = xmmword_1002B5350;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v54 = 0;
    __int16 v57 = 0;
    uint64_t v12 = &v53;
LABEL_18:
    sub_10006B9E0((uint64_t)v12, 1);
    return;
  }
  uint64_t v13 = v37;
  if (v37 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v14 = v39;
    uint64_t v15 = v41;
    uint64_t v16 = v38 & 1;
    uint64_t v17 = v40 & 1;
    int v18 = v42 & 1;
    unsigned int v19 = *(unsigned __int16 *)(v2 + 248);
    if (*(_WORD *)(v2 + 248) == 3) {
      goto LABEL_15;
    }
    uint64_t v20 = *(void *)(v2 + 240);
    int v21 = *(_DWORD *)(v2 + 232);
    uint64_t v22 = *(void *)(v2 + 224);
    char v23 = *(_DWORD *)(v2 + 216);
    uint64_t v24 = *(void *)(v2 + 208);
    char v25 = *(_DWORD *)(v2 + 200);
    uint64_t v26 = *(void *)(v2 + 192);
    unsigned int v27 = v19 >> 8;
    uint64_t v45 = v26;
    char v28 = v25 & 1;
    char v46 = v28;
    uint64_t v47 = v24;
    char v48 = v23 & 1;
    uint64_t v49 = v22;
    char v50 = v21 & 1;
    uint64_t v51 = v20;
    __int16 v52 = v19;
    __int16 v29 = a2;
    if (v27 != 2) {
      __int16 v29 = v27;
    }
    *(void *)&long long v53 = v26;
    BYTE8(v53) = v28;
    uint64_t v54 = v39;
    LOBYTE(v55) = v17 != 0;
    uint64_t v56 = v41;
    LOBYTE(v57) = v18 != 0;
    uint64_t v58 = v37;
    char v59 = 2 * v16;
    a2 = v29;
    char v60 = v29;
    if ((sub_100074958((uint64_t)&v45, (uint64_t)&v53) & 1) == 0)
    {
LABEL_15:
      Swift::String_optional v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Updating roadside assistance with the simulated request", v35, 2u);
        swift_slowDealloc();
      }

      v43[0] = v13;
      v43[1] = v16;
      v43[2] = v14;
      v43[3] = v17;
      v43[4] = v15;
      __int16 v44 = v18 | (a2 << 8);
      uint64_t v12 = (long long *)v43;
      goto LABEL_18;
    }
    os_log_type_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "onConversationDidChange - the same roadside assistance request is tracked already", v32, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10006C4FC(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 272);
  BOOL v4 = v2 == 2;
  int v3 = v2 & 1;
  BOOL v4 = !v4 && v3 == (a1 & 1);
  if (!v4)
  {
    uint64_t v5 = v1;
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9B20);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446466;
      sub_100004010((uint64_t *)&unk_10038EBC0);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      if (a1) {
        uint64_t v13 = 1702195828;
      }
      else {
        uint64_t v13 = 0x65736C6166;
      }
      if (a1) {
        unint64_t v14 = 0xE400000000000000;
      }
      else {
        unint64_t v14 = 0xE500000000000000;
      }
      sub_1001B3178(v13, v14, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Cached _linkConnected state changed from %{public}s to %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(v5 + 272) = a1 & 1;
    if (a1)
    {
      if (*(void *)(v5 + 104))
      {
        swift_retain();
        uint64_t v15 = sub_1000C9680();
        unint64_t v17 = v16;
        swift_release();
        if (v17)
        {
          if (*(void *)(v5 + 104))
          {
            swift_retain();
            sub_1000C6184(v15, v17);
            swift_release();
          }
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_10006C7A4(uint64_t result, uint64_t a2)
{
  int v3 = v2;
  uint64_t v5 = result;
  uint64_t v6 = v2[33];
  if (v6)
  {
    if (a2)
    {
      uint64_t result = v2[32];
      if (result == v5 && v6 == a2) {
        return result;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        return result;
      }
    }
  }
  else if (!a2)
  {
    return result;
  }
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v12 = String.init<A>(describing:)();
    sub_1001B3178(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v14 = String.init<A>(describing:)();
    sub_1001B3178(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "iso3166Alpha3CountryCode changed from %{public}s to %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v3[32] = v5;
  v3[33] = a2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3[13])
  {
    uint64_t result = sub_1000C8F28();
    if ((result & 1) == 0)
    {
      uint64_t v16 = v3[32];
      uint64_t v17 = v3[33];
      swift_bridgeObjectRetain();
      sub_10006CA70(v16, v17);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_10006CA70(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v53 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_10000FD84(v13, (uint64_t)qword_1003A9B20);
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    __int16 v52 = v3;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "_updateQuestionnaireStateAsync", v17, 2u);
    int v3 = v52;
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v19 = v3[40];
  if (v19 == 1)
  {
    uint64_t v20 = v3[42];
    uint64_t v21 = v57;
    if (v20 == 1)
    {
LABEL_8:
      uint64_t v22 = v3[39];
      uint64_t v23 = v3[40];
      uint64_t v24 = v56;
      v3[39] = v56;
      v3[40] = v21;
      swift_bridgeObjectRetain();
      sub_100075F88(v22, v23);
      sub_100070534();
      __int16 v52 = (void *)v3[12];
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      uint64_t v26 = (void *)swift_allocObject();
      void v26[2] = v25;
      v26[3] = v24;
      v26[4] = v21;
      uint64_t v63 = sub_100076014;
      uint64_t v64 = v26;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v60 = 1107296256;
      int v61 = sub_100207A1C;
      int v62 = &unk_1003519F8;
      unsigned int v27 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      char v28 = v53;
      static DispatchQoS.unspecified.getter();
      uint64_t v58 = _swiftEmptyArrayStorage;
      sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
      __int16 v29 = v55;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v7);
      swift_release();
      swift_release();
      return;
    }
    if (v57)
    {
      if (!v20) {
        goto LABEL_8;
      }
      uint64_t v36 = v3[41];
      if (v36 == v56 && v20 == v57)
      {
        swift_bridgeObjectRetain_n();
        sub_100076020(v56, v21);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        LODWORD(v52) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRetain_n();
        sub_100076020(v36, v20);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      if (v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v47, v48)) {
      goto LABEL_37;
    }
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    char v50 = "Questionnaire is already loaded for the requested country code, ignoring this request";
    goto LABEL_36;
  }
  uint64_t v30 = v3[39];
  sub_100076068(v30, v3[40]);
  sub_100076068(v30, v19);
  swift_bridgeObjectRetain();
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    Swift::String_optional v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = (void *)swift_slowAlloc();
    uint64_t aBlock = v30;
    uint64_t v55 = (char *)v14;
    *(_DWORD *)Swift::String_optional v33 = 136446210;
    uint64_t v60 = v19;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t aBlock = sub_1001B3178(v34, v35, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075F88(v30, v19);
    sub_100075F88(v30, v19);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Questionnaire loading is in progress for iso3166Alpha3CountryCode: %{public}s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100075F88(v30, v19);
    sub_100075F88(v30, v19);
  }

  uint64_t v38 = v56;
  uint64_t v37 = v57;
  if (v57)
  {
    if (v19)
    {
      if (v30 == v56 && v19 == v57)
      {
        sub_100075F88(v56, v57);
LABEL_29:
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v47, v48))
        {
LABEL_37:

          return;
        }
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        char v50 = "Questionnaire is already loading for the requested country code, ignoring this request";
LABEL_36:
        _os_log_impl((void *)&_mh_execute_header, v47, v48, v50, v49, 2u);
        swift_slowDealloc();
        goto LABEL_37;
      }
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100075F88(v30, v19);
      if (v46) {
        goto LABEL_29;
      }
      goto LABEL_24;
    }
  }
  else if (!v19)
  {
    goto LABEL_29;
  }
  sub_100075F88(v30, v19);
LABEL_24:
  swift_bridgeObjectRetain_n();
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = (void *)swift_slowAlloc();
    uint64_t aBlock = v38;
    *(_DWORD *)uint64_t v41 = 136446210;
    uint64_t v60 = v57;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v42 = String.init<A>(describing:)();
    uint64_t aBlock = sub_1001B3178(v42, v43, (uint64_t *)&v58);
    uint64_t v37 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v38 = v56;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Deferring questionnaire loading for iso3166Alpha3CountryCode: %{public}s", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v44 = v3[37];
  uint64_t v45 = v3[38];
  v3[37] = v38;
  v3[38] = v37;
  swift_bridgeObjectRetain();
  sub_100075F88(v44, v45);
}

uint64_t sub_10006D47C(void (*a1)(void), uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  swift_beginAccess();
  if (v3[14])
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t))a1)(v12);
    return swift_bridgeObjectRelease();
  }
  if (!swift_unknownObjectWeakLoadStrong())
  {
    sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
    a1();
    return swift_bridgeObjectRelease();
  }
  if (qword_10037DE18 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000FD84(v14, (uint64_t)qword_1003A9B20);
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Fetching roadside providers", v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = v18;
  void v19[3] = a1;
  _DWORD v19[4] = a2;
  v19[5] = v6;
  swift_retain();
  swift_retain();
  sub_1002792C4((uint64_t)sub_100074B34, (uint64_t)v19);
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_10006D78C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (void *)((char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
LABEL_4:
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000FD84(v14, (uint64_t)qword_1003A9958);
    id v15 = a1;
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v30 = a3;
      uint64_t v31 = (uint64_t)a1;
      v32[0] = v19;
      v29[1] = a4;
      *(_DWORD *)uint64_t v18 = 136315138;
      id v20 = v15;
      sub_100004010(&qword_100382408);
      uint64_t v21 = String.init<A>(describing:)();
      uint64_t v31 = sub_1001B3178(v21, v22, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Roadside providers fetched: %s", v18, 0xCu);
      swift_arrayDestroy();
      a3 = v30;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v23 = sub_10007533C(a1);
    if (!v23) {
      unint64_t v23 = sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
    }
    uint64_t v24 = v23;
    swift_beginAccess();
    uint64_t v25 = *(void *)(a2 + 112);
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = swift_bridgeObjectRetain();
      if (sub_100123510(v26, v24, v27)) {
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
LABEL_15:
    *(void *)(a2 + 112) = v24;
    swift_bridgeObjectRelease();
    sub_10006E9FC(v25);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t))a3)(v24);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    a2 = Strong;
    if (qword_10037DD80 == -1) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
  a3();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006DB90(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(long long *))
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    return a4(&v39);
  }
  uint64_t v14 = (void *)Strong;
  uint64_t v36 = a4;
  if (a2)
  {
    uint64_t v25 = (_OWORD *)(Strong + 120);
    sub_10000D544(Strong + 120, (uint64_t)v38, &qword_100382448);
    uint64_t v26 = v14[15];
    uint64_t v27 = v14[16];
    uint64_t v28 = v14[17];
    sub_10000D544((uint64_t)v38, (uint64_t)&v39, &qword_100382448);
    if ((void)v40)
    {
      sub_100075EA8(v38, (void (*)(void, void, void, void, void))sub_100075EE4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100075E64(v26, v27, v28);
      sub_100075E64(0, 0, 0);
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    uint64_t v29 = v14[15];
    uint64_t v30 = v14[16];
    uint64_t v31 = v14[17];
    *uint64_t v25 = 0u;
    *(_OWORD *)(v14 + 17) = 0u;
    v14[19] = 0;
    sub_100075E64(v29, v30, v31);
    goto LABEL_18;
  }
  swift_beginAccess();
  uint64_t v15 = v14[14];
  long long v16 = 0uLL;
  if (v15)
  {
    if (*(void *)(v15 + 16))
    {
      uint64_t v17 = sub_1001C92C8(a1, (__n128)0);
      if (v18)
      {
        uint64_t v19 = *(void *)(v15 + 56) + 40 * v17;
        long long v35 = *(_OWORD *)v19;
        uint64_t v15 = *(void *)(v19 + 16);
        uint64_t v20 = *(unsigned __int8 *)(v19 + 24);
        int v21 = *(unsigned __int8 *)(v19 + 25);
        uint64_t v22 = *(void *)(v19 + 32);
        uint64_t v23 = 256;
        if (!v21) {
          uint64_t v23 = 0;
        }
        uint64_t v24 = v23 | v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v16 = v35;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v24 = 0;
        uint64_t v22 = 0;
        long long v16 = 0uLL;
      }
      goto LABEL_17;
    }
    uint64_t v15 = 0;
  }
  uint64_t v24 = 0;
  uint64_t v22 = 0;
LABEL_17:
  long long v39 = v16;
  *(void *)&long long v40 = v15;
  *((void *)&v40 + 1) = v24;
  uint64_t v41 = v22;
  swift_endAccess();
  sub_10000D544((uint64_t)(v14 + 15), (uint64_t)v38, &qword_100382448);
  sub_100075EA8(v38, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_10006EFC8(&v39);
  uint64_t v32 = v14[15];
  uint64_t v33 = v14[16];
  uint64_t v34 = v14[17];
  sub_10000D544((uint64_t)&v39, (uint64_t)(v14 + 15), &qword_100382448);
  sub_100075E64(v32, v33, v34);
LABEL_18:
  sub_10006F2BC(v38);
  sub_100075EA8(v38, (void (*)(void, void, void, void, void))sub_100075E64);
  sub_10000D544((uint64_t)(v14 + 15), (uint64_t)v37, &qword_100382448);
  sub_100075EA8(v37, (void (*)(void, void, void, void, void))sub_100075EE4);
  v36((long long *)v37);
  sub_100075EA8(v37, (void (*)(void, void, void, void, void))sub_100075E64);
  return swift_release();
}

uint64_t sub_10006DFE4(void *a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a3(_swiftEmptyArrayStorage);
  }
  a2 = Strong;
  if (qword_10037DE18 != -1) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000FD84(v14, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = a4;
    uint64_t v25 = (uint64_t)a1;
    uint64_t v26 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100382450);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v25 = sub_1001B3178(v19, v20, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "My phone numbers fetched: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1) {
    uint64_t v22 = a1;
  }
  else {
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v23 = *(void **)(a2 + 160);
  if (!v23) {
    goto LABEL_15;
  }
  if ((sub_100231EF4(*(void **)(a2 + 160), v22) & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_16:
  *(void *)(a2 + 160) = v22;
  swift_bridgeObjectRelease();
  sub_10006F804(v23);
  swift_bridgeObjectRelease();
  a3(v22);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10006E3D4(NSObject *a1)
{
  uint64_t v2 = v1 + 192;
  uint64_t v3 = *(void *)(v1 + 192);
  unsigned int v4 = *(unsigned __int16 *)(v1 + 248);
  int v5 = *(_WORD *)(v1 + 248);
  if (v5 == 3)
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9B20);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "onProviderSelected - _currentRoadsideAssistance == nil, ignoring request", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = oslog;
LABEL_19:

    return;
  }
  uint64_t v10 = v1;
  uint64_t v11 = *(void *)(v1 + 208);
  uint64_t v12 = *(void *)(v1 + 224);
  uint64_t v13 = *(void *)(v1 + 240);
  uint64_t v14 = *(void *)(v1 + 216);
  uint64_t v41 = *(void *)(v1 + 200) & 1;
  os_log_t osloga = (os_log_t)(*(void *)(v1 + 232) & 1);
  unsigned int v15 = v4 >> 8;
  if (v5 == 2)
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000FD84(v16, (uint64_t)qword_1003A9B20);
    log = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(log, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v53 = v19;
      uint64_t v62 = v3;
      BOOL v63 = v41 != 0;
      uint64_t v64 = v11;
      char v65 = v14 & 1;
      uint64_t v66 = v12;
      BOOL v67 = osloga != 0;
      uint64_t v68 = v13;
      char v69 = 2;
      char v70 = BYTE1(v4);
      uint64_t v20 = String.init<A>(describing:)();
      uint64_t v62 = sub_1001B3178(v20, v21, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v17, "onProviderSelected - current conversation is already committed: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    uint64_t v9 = log;
    goto LABEL_19;
  }
  uint64_t v37 = *(void *)(v1 + 192);
  os_log_t loga = a1;
  if ((v14 & 1) != 0 || v11 != a1)
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000FD84(v22, (uint64_t)qword_1003A9B20);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, type))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v62 = v11;
      BOOL v63 = v14 & 1;
      sub_100004010(&qword_100382420);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v62 = sub_1001B3178(v25, v26, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      uint64_t v62 = (uint64_t)loga;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, type, "onProviderSelected - overriding current providerId: %{public}s with %llu", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = v37;
      swift_slowDealloc();
    }
    else
    {
    }
    a1 = loga;
    LOBYTE(v15) = BYTE1(v4);
  }
  uint64_t v53 = v3;
  BOOL v54 = v41 != 0;
  uint64_t v55 = a1;
  char v56 = 0;
  *(void *)typea = v12;
  uint64_t v57 = v12;
  BOOL v58 = osloga != 0;
  uint64_t v38 = v13;
  uint64_t v59 = v13;
  char v60 = v5;
  char v61 = v15;
  sub_10000D544(v2, (uint64_t)v44, &qword_100382418);
  uint64_t v28 = *(void *)(v10 + 192);
  uint64_t v27 = *(void *)(v10 + 200);
  uint64_t v29 = *(void *)(v10 + 208);
  uint64_t v30 = *(void *)(v10 + 216);
  uint64_t v32 = *(void *)(v10 + 224);
  uint64_t v31 = *(void *)(v10 + 232);
  uint64_t v34 = *(void *)(v10 + 240);
  __int16 v33 = *(_WORD *)(v10 + 248);
  sub_10000D544((uint64_t)v44, (uint64_t)&v62, &qword_100382418);
  if (v69 == 3) {
    goto LABEL_26;
  }
  uint64_t v45 = v28;
  char v46 = v27 & 1;
  uint64_t v47 = v29;
  char v48 = v30 & 1;
  uint64_t v49 = v32;
  char v50 = v31 & 1;
  uint64_t v51 = v34;
  __int16 v52 = v33;
  if ((sub_100074958((uint64_t)&v45, (uint64_t)&v53) & 1) == 0)
  {
LABEL_26:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(void *)(v10 + 192) = v37;
  *(void *)(v10 + 200) = v41;
  *(void *)(v10 + 208) = loga;
  *(void *)(v10 + 216) = 0;
  *(void *)(v10 + 224) = *(void *)typea;
  *(void *)(v10 + 232) = osloga;
  *(void *)(v10 + 240) = v38;
  *(_WORD *)(v10 + 248) = v4;
  sub_10006FEF8((uint64_t)v44);
}

uint64_t sub_10006E9FC(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(v1 + 112))
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = swift_bridgeObjectRetain();
      char v6 = sub_100123510(v4, a1, v5);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        return result;
      }
    }
  }
  else if (!a1)
  {
    return result;
  }
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100382410);
    uint64_t v11 = String.init<A>(describing:)();
    sub_1001B3178(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "providers changed from %{public}s to %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_10006EC9C();
}

uint64_t sub_10006EC9C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100075D30;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_100351818;
  os_log_type_t v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

uint64_t sub_10006EFC8(void *a1)
{
  sub_10000D544((uint64_t)a1, (uint64_t)v14, &qword_100382448);
  uint64_t v4 = v14[0];
  uint64_t v3 = v14[1];
  unint64_t v5 = v14[3];
  uint64_t v12 = (void *)v14[4];
  uint64_t v13 = v14[2];
  uint64_t v7 = v1[15];
  uint64_t v6 = v1[16];
  uint64_t v8 = v1[17];
  unint64_t v9 = v1[18];
  uint64_t v10 = (void *)v1[19];
  if (v8)
  {
    sub_10000D544((uint64_t)a1, (uint64_t)v15, &qword_100382448);
    if (v16)
    {
      if (v7 == v4)
      {
        if (v6 == v3 && v8 == v13)
        {
          if (((v5 ^ v9) & 1) != 0 || ((v5 >> 8) & 1) != ((v9 >> 8) & 1)) {
            goto LABEL_19;
          }
        }
        else if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0 {
               || ((v5 ^ v9) & 1) != 0
        }
               || ((v5 >> 8) & 1) != ((v9 >> 8) & 1))
        {
          goto LABEL_19;
        }
        if (v10)
        {
          if (v12 && (sub_100231EF4(v10, v12) & 1) != 0) {
            goto LABEL_22;
          }
        }
        else if (!v12)
        {
LABEL_22:
          sub_100075EE4(v4, v6, v8);
          sub_100075EE4(v4, v6, v8);
          sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100075E64(v4, v6, v8);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_19:
      sub_100075EE4(v7, v6, v8);
      sub_100075EE4(v7, v6, v8);
      sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100075E64(v7, v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t result = sub_10000D544((uint64_t)a1, (uint64_t)v15, &qword_100382448);
    if (!v16) {
      return result;
    }
  }
  sub_100075EE4(v7, v6, v8);
  sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_100075E64(v7, v6, v8);
  sub_100075E64(v4, v3, v13);
LABEL_20:
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_10006F2BC(void *a1)
{
  uint64_t v2 = v1;
  sub_10000D544((uint64_t)a1, (uint64_t)v29, &qword_100382448);
  uint64_t v5 = v29[0];
  uint64_t v4 = v29[1];
  unint64_t v6 = v29[3];
  uint64_t v25 = (void *)v29[4];
  uint64_t v26 = v29[2];
  uint64_t v8 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v9 = v1[17];
  unint64_t v11 = v2[18];
  uint64_t v10 = (void *)v2[19];
  if (v9)
  {
    sub_10000D544((uint64_t)a1, (uint64_t)v30, &qword_100382448);
    if (v31)
    {
      if (v8 == v5)
      {
        if (v7 == v4 && v9 == v26)
        {
          if (((v6 ^ v11) & 1) != 0 || ((v6 >> 8) & 1) != ((v11 >> 8) & 1)) {
            goto LABEL_19;
          }
        }
        else if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0 {
               || ((v6 ^ v11) & 1) != 0
        }
               || ((v6 >> 8) & 1) != ((v11 >> 8) & 1))
        {
          goto LABEL_19;
        }
        if (v10)
        {
          if (v25 && (sub_100231EF4(v10, v25) & 1) != 0) {
            goto LABEL_27;
          }
        }
        else if (!v25)
        {
LABEL_27:
          sub_100075EE4(v5, v7, v9);
          sub_100075EE4(v5, v7, v9);
          sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100075E64(v5, v7, v9);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
LABEL_19:
      sub_100075EE4(v8, v7, v9);
      sub_100075EE4(v8, v7, v9);
      sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100075E64(v8, v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t result = sub_10000D544((uint64_t)a1, (uint64_t)v30, &qword_100382448);
    if (!v31) {
      return result;
    }
  }
  sub_100075EE4(v8, v7, v9);
  sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_100075E64(v8, v7, v9);
  sub_100075E64(v5, v4, v26);
LABEL_20:
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9B20);
  sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
  swift_retain();
  sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
  swift_retain();
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_10000D544((uint64_t)a1, (uint64_t)v27, &qword_100382448);
    sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075EE4);
    sub_100004010(&qword_100382448);
    uint64_t v17 = String.init<A>(describing:)();
    v27[0] = sub_1001B3178(v17, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075E64);
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v19 = v2[16];
    uint64_t v20 = v2[17];
    uint64_t v21 = v2[18];
    uint64_t v22 = v2[19];
    v27[0] = v2[15];
    v27[1] = v19;
    v27[2] = v20;
    v27[3] = v21;
    v27[4] = v22;
    sub_100075EE4(v27[0], v19, v20);
    uint64_t v23 = String.init<A>(describing:)();
    v27[0] = sub_1001B3178(v23, v24, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "resumableProvider changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a1, (void (*)(void, void, void, void, void))sub_100075E64);

    swift_release_n();
  }
  return sub_10006EC9C();
}

uint64_t sub_10006F804(void *a1)
{
  uint64_t result = *(void *)(v1 + 160);
  if (result)
  {
    if (a1)
    {
      uint64_t result = sub_100231EF4((void *)result, a1);
      if (result) {
        return result;
      }
    }
  }
  else if (!a1)
  {
    return result;
  }
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446467;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100382450);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "My phone numbers changed from %{public}s to %{private}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_10006EC9C();
}

void sub_10006FA6C(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 168);
  if (v2 == 2)
  {
    if (a1 == 2) {
      return;
    }
  }
  else if (a1 != 2 && ((((a1 & 1) == 0) ^ v2) & 1) != 0)
  {
    return;
  }
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9B20);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "lastConversationWasCommitted changed from %{public}s to %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_10006FCB0(uint64_t a1, char a2)
{
  if (*(unsigned char *)(v2 + 184))
  {
    if (a2) {
      return;
    }
  }
  else if ((a2 & 1) == 0 && *(void *)(v2 + 176) == a1)
  {
    return;
  }
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9B20);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    sub_100004010(&qword_100382420);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "lastActiveProviderId changed from %{public}s to %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_10006FEF8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000D544(a1, (uint64_t)&v42, &qword_100382418);
  __int16 v4 = *(_WORD *)(v1 + 248);
  if (v4 == 3)
  {
    uint64_t result = sub_10000D544(a1, (uint64_t)v50, &qword_100382418);
    if (v51 == 3) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t v6 = v42;
  char v7 = v43;
  char v8 = v45;
  uint64_t v34 = v44;
  char v35 = v47;
  unsigned int v37 = v49;
  uint64_t v10 = *(void *)(v2 + 192);
  uint64_t v9 = *(void *)(v2 + 200);
  uint64_t v11 = *(void *)(v2 + 208);
  uint64_t v12 = *(void *)(v2 + 216);
  uint64_t v30 = *(void *)(v2 + 224);
  uint64_t v31 = v46;
  uint64_t v36 = *(void *)(v2 + 232);
  uint64_t v32 = *(void *)(v2 + 240);
  uint64_t v33 = v48;
  uint64_t result = sub_10000D544(a1, (uint64_t)v50, &qword_100382418);
  if (v51 != 3)
  {
    if (v9)
    {
      if ((v7 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else if ((v7 & 1) != 0 || v10 != v6)
    {
      goto LABEL_5;
    }
    if (v12)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else if ((v8 & 1) != 0 || v11 != v34)
    {
      goto LABEL_5;
    }
    if (v36)
    {
      if ((v35 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else if ((v35 & 1) != 0 || v30 != v31)
    {
      goto LABEL_5;
    }
    if (v32 == v33 && v4 == v37)
    {
      if ((v4 & 0xFF00) == 0x200)
      {
        if (v37 >> 8 == 2) {
          return result;
        }
      }
      else if (v37 >> 8 != 2 && ((((v4 & 0x100) == 0) ^ ((unsigned __int16)(v37 & 0x100) >> 8)) & 1) != 0)
      {
        return result;
      }
    }
  }
LABEL_5:
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9B20);
  swift_retain_n();
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_10000D544(a1, (uint64_t)v38, &qword_100382418);
    sub_100004010(&qword_100382418);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)&v38[0] = sub_1001B3178(v17, v18, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v19 = *(void *)(v2 + 240);
    __int16 v20 = *(_WORD *)(v2 + 248);
    long long v21 = *(_OWORD *)(v2 + 208);
    v38[0] = *(_OWORD *)(v2 + 192);
    v38[1] = v21;
    v38[2] = *(_OWORD *)(v2 + 224);
    uint64_t v39 = v19;
    __int16 v40 = v20;
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)&v38[0] = sub_1001B3178(v22, v23, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "currentRoadsideAssistance changed from %{public}s to %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  int v24 = *(unsigned __int8 *)(v2 + 248);
  if (v24 != 3)
  {
    uint64_t v26 = *(void *)(v2 + 208);
    uint64_t v25 = *(void *)(v2 + 216);
    char v27 = *(unsigned char *)(v2 + 168);
    *(unsigned char *)(v2 + 168) = v24 != 0;
    sub_10006FA6C(v27);
    if (*(unsigned char *)(v2 + 168))
    {
      uint64_t v28 = *(void *)(v2 + 176);
      char v29 = *(unsigned char *)(v2 + 184);
      *(void *)(v2 + 176) = v26;
      *(unsigned char *)(v2 + 184) = v25 & 1;
      sub_10006FCB0(v28, v29);
    }
  }
  return sub_10006EC9C();
}

uint64_t sub_1000702F0(uint64_t result)
{
  if (*(unsigned char *)(v1 + 250) != (result & 1))
  {
    uint64_t v2 = v1;
    char v3 = result;
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9B20);
    swift_retain_n();
    os_log_type_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      if (v3) {
        uint64_t v8 = 1702195828;
      }
      else {
        uint64_t v8 = 0x65736C6166;
      }
      if (v3) {
        unint64_t v9 = 0xE400000000000000;
      }
      else {
        unint64_t v9 = 0xE500000000000000;
      }
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      if (*(unsigned char *)(v2 + 250)) {
        uint64_t v10 = 1702195828;
      }
      else {
        uint64_t v10 = 0x65736C6166;
      }
      if (*(unsigned char *)(v2 + 250)) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "syncInProgress state changed from %{public}s to %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return sub_10006EC9C();
  }
  return result;
}

uint64_t sub_100070534()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *os_log_type_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(void *)(v1 + 320) == 1)
    {
      int v8 = *(void *)(v1 + 368) != 0;
      uint64_t v9 = *(unsigned __int8 *)(v1 + 250);
      if (v9 == v8) {
        goto LABEL_9;
      }
    }
    else
    {
      LOBYTE(v8) = 1;
      if (*(unsigned char *)(v1 + 250))
      {
        uint64_t v9 = 1;
LABEL_9:
        *(unsigned char *)(v1 + 250) = v8;
        return sub_1000702F0(v9);
      }
      uint64_t v9 = 0;
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000706F0()
{
  uint64_t v1 = v0;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchTime();
  uint64_t v29 = *(void *)(v36 - 8);
  uint64_t v4 = __chkstk_darwin(v36);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v28 = (char *)&v28 - v7;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v12 = UUID.uuidString.getter();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v18 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1001B3178(v12, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Artificially delaying sync for 2 seconds to let imagent to start up for token %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)(v1 + 360) = v12;
  *(void *)(v1 + 368) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100070534();
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  __int16 v20 = v28;
  + infix(_:_:)();
  uint64_t v29 = *(void *)(v29 + 8);
  ((void (*)(char *, uint64_t))v29)(v6, v36);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v22[2] = v21;
  v22[3] = v12;
  v22[4] = v14;
  aBlock[4] = (uint64_t)sub_100075F7C;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  aBlock[3] = (uint64_t)&unk_1003519A8;
  unint64_t v23 = _Block_copy(aBlock);
  swift_release();
  int v24 = v31;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v25 = v33;
  uint64_t v26 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v34);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v36);
}

uint64_t sub_100070D24(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100070D98(a2, a3);
    return swift_release();
  }
  return result;
}

void sub_100070D98(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 368);
  if (v5
    && ((v6 = v2, *(void *)(v2 + 360) == a1) ? (BOOL v7 = v5 == a2) : (BOOL v7 = 0),
        v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000FD84(v8, (uint64_t)qword_1003A9B20);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)unint64_t v11 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001B3178(a1, a2, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Done delaying sync for 2 seconds for token %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(void *)(v6 + 360) = 0;
    *(void *)(v6 + 368) = 0;
    swift_bridgeObjectRelease();
    sub_100070534();
  }
  else
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000FD84(v12, (uint64_t)qword_1003A9B20);
    swift_bridgeObjectRetain_n();
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001B3178(a1, a2, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Delaying sync token %{public}s expired, ignoring", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1000710F8(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10007116C(a3, a4 & 1);
    return swift_release();
  }
  return result;
}

void sub_10007116C(uint64_t *a1, char a2)
{
  uint64_t v3 = (void *)v2;
  int v4 = *(_WORD *)(v2 + 248);
  if (v4 != 3)
  {
    uint64_t v12 = *(void *)(v2 + 240);
    uint64_t v13 = *a1;
    BOOL v7 = v12 == *a1;
    char v14 = *((unsigned char *)a1 + 8);
    char v6 = v14 & 1;
    if (v14)
    {
      if (v12 != v13)
      {
        BOOL v7 = 0;
        if (a2)
        {
          char v55 = 0;
          char v8 = 0;
          unsigned int v10 = *(unsigned __int8 *)(v2 + 200);
          uint64_t v11 = *(void *)(v2 + 192);
          goto LABEL_26;
        }
        char v55 = 0;
        char v15 = 0;
        unsigned int v10 = *((unsigned __int8 *)a1 + 24);
        uint64_t v11 = a1[2];
        goto LABEL_34;
      }
      char v55 = 0;
    }
    else
    {
      char v55 = a2 ^ 1;
      if (v12 != v13) {
        goto LABEL_24;
      }
    }
    char v16 = *((unsigned char *)a1 + 24);
    if (*(unsigned char *)(v2 + 216))
    {
      if (*(_WORD *)(v2 + 248) == 2) {
        char v16 = 0;
      }
      if ((v16 & 1) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      if (*(void *)(v2 + 208) != a1[2]) {
        char v16 = 1;
      }
      if ((v16 & 1) != 0 || *(_WORD *)(v2 + 248) == 2)
      {
LABEL_24:
        char v15 = 0;
        char v8 = 0;
        if (a2)
        {
LABEL_25:
          unsigned int v10 = *(unsigned __int8 *)(v2 + 200);
          uint64_t v11 = *(void *)(v2 + 192);
          if ((a1[1] & 1) == 0)
          {
            __int16 v9 = 0;
            goto LABEL_28;
          }
LABEL_26:
          __int16 v9 = 2;
          goto LABEL_28;
        }
LABEL_22:
        unsigned int v10 = *((unsigned __int8 *)a1 + 24);
        uint64_t v11 = a1[2];
        if ((v6 & 1) == 0)
        {
          __int16 v9 = 0;
LABEL_35:
          char v56 = v15;
          BOOL v57 = v7;
          uint64_t v18 = *a1;
LABEL_36:
          LOWORD(v17) = *((unsigned __int8 *)a1 + 41);
          goto LABEL_37;
        }
LABEL_34:
        __int16 v9 = 2;
        goto LABEL_35;
      }
    }
    BOOL v7 = 1;
    char v15 = v14 & 1;
    char v8 = v14 & 1;
    if (a2) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  char v5 = *((unsigned char *)a1 + 8);
  char v6 = v5 & 1;
  if ((a2 & 1) == 0)
  {
    char v55 = (v5 & 1) == 0;
    char v15 = 0;
    BOOL v7 = 0;
    goto LABEL_22;
  }
  BOOL v7 = 0;
  char v55 = 0;
  char v8 = 0;
  __int16 v9 = 0;
  unsigned int v10 = *((unsigned __int8 *)a1 + 24);
  uint64_t v11 = a1[2];
  if (a1[1]) {
    goto LABEL_26;
  }
LABEL_28:
  int v17 = HIBYTE(*(unsigned __int16 *)(v2 + 248));
  uint64_t v18 = *a1;
  BOOL v19 = v4 == 3 || v17 == 2;
  char v56 = v8;
  BOOL v57 = v7;
  if (v19) {
    goto LABEL_36;
  }
LABEL_37:
  uint64_t v20 = a1[2];
  uint64_t v21 = *((unsigned __int8 *)a1 + 24);
  uint64_t v22 = a1[4];
  uint64_t v63 = v11;
  uint64_t v64 = *((unsigned __int8 *)a1 + 40);
  uint64_t v76 = v11;
  char v77 = v10;
  uint64_t v60 = v21;
  uint64_t v61 = v20;
  uint64_t v78 = v20;
  char v79 = v21;
  uint64_t v65 = v22;
  uint64_t v80 = v22;
  char v81 = v64;
  uint64_t v58 = v10;
  uint64_t v62 = v18;
  uint64_t v82 = v18;
  char v83 = v9;
  __int16 v59 = v9 | ((_WORD)v17 << 8);
  char v84 = v17;
  sub_10000D544(v2 + 192, (uint64_t)v67, &qword_100382418);
  uint64_t v24 = *(void *)(v2 + 192);
  uint64_t v23 = *(void *)(v2 + 200);
  uint64_t v26 = *(void *)(v2 + 208);
  uint64_t v25 = *(void *)(v2 + 216);
  uint64_t v28 = *(void *)(v2 + 224);
  uint64_t v27 = *(void *)(v2 + 232);
  uint64_t v29 = *(void *)(v2 + 240);
  __int16 v30 = *(_WORD *)(v2 + 248);
  sub_10000D544((uint64_t)v67, (uint64_t)v85, &qword_100382418);
  if (v85[56] == 3) {
    goto LABEL_39;
  }
  uint64_t v68 = v24;
  char v69 = v23 & 1;
  uint64_t v70 = v26;
  char v71 = v25 & 1;
  uint64_t v72 = v28;
  char v73 = v27 & 1;
  uint64_t v74 = v29;
  __int16 v75 = v30;
  if ((sub_100074958((uint64_t)&v68, (uint64_t)&v76) & 1) == 0)
  {
LABEL_39:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(void *)(v2 + 192) = v63;
  *(void *)(v2 + 200) = v58;
  *(void *)(v2 + 208) = v61;
  *(void *)(v2 + 216) = v60;
  *(void *)(v2 + 224) = v65;
  *(void *)(v2 + 232) = v64;
  *(void *)(v2 + 240) = v62;
  *(_WORD *)(v2 + 248) = v59;
  sub_10006FEF8((uint64_t)v67);
  if (!(v55 & 1 | !v57))
  {
    char v31 = v56;
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000FD84(v37, (uint64_t)qword_1003A9B20);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      __int16 v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)__int16 v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "ConversationId is the same, keeping the current questionnaire state", v40, 2u);
      swift_slowDealloc();
    }

LABEL_53:
    if (v64) {
      goto LABEL_67;
    }
    goto LABEL_60;
  }
  char v31 = v56;
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000FD84(v32, (uint64_t)qword_1003A9B20);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "ConversationId changed or this is a new request for non-committed conversation, attempting to reset the questionnaire", v35, 2u);
    swift_slowDealloc();
  }

  uint64_t v36 = v3[13];
  if (!v36) {
    goto LABEL_53;
  }
  if (*(void *)(v36 + 32))
  {
    *(unsigned char *)(v36 + 40) = 1;
    swift_retain();
  }
  else
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  sub_1000C99B4(0);
  if (*(void *)(v36 + 32))
  {
    *(unsigned char *)(v36 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  swift_release();
  if (v64) {
    goto LABEL_67;
  }
LABEL_60:
  if (v65 == 8)
  {
    uint64_t v41 = 1;
    if (!v3[13]) {
      goto LABEL_69;
    }
LABEL_68:
    swift_retain();
    sub_1000CA424(v41);
    swift_release();
    goto LABEL_69;
  }
  if (v65 != 1)
  {
LABEL_67:
    uint64_t v41 = 2;
    if (!v3[13]) {
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (byte_10038ADB8 == 2) {
    uint64_t v41 = 1;
  }
  else {
    uint64_t v41 = byte_10038ADB8;
  }
  if (v3[13]) {
    goto LABEL_68;
  }
LABEL_69:
  if (v31) {
    return;
  }
  uint64_t v42 = v3[32];
  uint64_t v43 = v3[33];
  swift_bridgeObjectRetain();
  sub_10006CA70(v42, v43);
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0 && (unint64_t v44 = v3[46]) != 0)
  {
    uint64_t v45 = v3[45];
    uint64_t v46 = qword_10037DE18;
    swift_bridgeObjectRetain();
    if (v46 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000FD84(v47, (uint64_t)qword_1003A9B20);
    swift_bridgeObjectRetain();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      char v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)char v50 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001B3178(v45, v44, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Delay request token %{public}s is already pending, skipping this one", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_82;
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if ((v64 & 1) == 0 && v65 == 1)
    {
      if (qword_10037DE18 != -1) {
        swift_once();
      }
      uint64_t v51 = type metadata accessor for Logger();
      sub_10000FD84(v51, (uint64_t)qword_1003A9B20);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v48, v52)) {
        goto LABEL_83;
      }
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v52, "Roadside assistance started from emergency flow, skipping the delay", v53, 2u);
LABEL_82:
      swift_slowDealloc();
LABEL_83:

      return;
    }
    sub_1000706F0();
  }
}

uint64_t sub_1000719B0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100071A08();
    return swift_release();
  }
  return result;
}

void sub_100071A08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)v56 - v14;
  int v16 = *(unsigned __int8 *)(v1 + 248);
  if (v16 == 3) {
    goto LABEL_50;
  }
  if (*(unsigned char *)(v1 + 250)) {
    return;
  }
  if (*(unsigned char *)(v1 + 216))
  {
LABEL_50:
    if (*(void *)(v1 + 104)) {
      goto LABEL_3;
    }
    return;
  }
  uint64_t v64 = v3;
  uint64_t v17 = *(void *)(v1 + 104);
  if (!v16)
  {
    if (v17)
    {
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 144);
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        LODWORD(v63) = *(unsigned __int8 *)(v19 + v18 + 31);
        swift_retain();
        if (v63 != 4)
        {
          sub_1000C6818();
LABEL_5:
          swift_release();
          return;
        }
        uint64_t v63 = v17;
        uint64_t v20 = sub_1000C9680();
        if (v21)
        {
          if ((v22 & 0x100) != 0)
          {
            uint64_t v35 = v20;
            unint64_t v36 = v21;
            if (qword_10037DE18 != -1) {
              swift_once();
            }
            uint64_t v37 = type metadata accessor for Logger();
            sub_10000FD84(v37, (uint64_t)qword_1003A9B20);
            swift_bridgeObjectRetain_n();
            uint64_t v38 = Logger.logObject.getter();
            os_log_type_t v39 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v38, v39))
            {
              __int16 v40 = (uint8_t *)swift_slowAlloc();
              aBlock[0] = swift_slowAlloc();
              *(_DWORD *)__int16 v40 = 136446210;
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_1001B3178(v35, v36, aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v38, v39, "Send questionnaire for token %{public}s", v40, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            sub_1000C6C64(v35, v36);
            swift_bridgeObjectRelease();
            uint64_t v41 = Logger.logObject.getter();
            os_log_type_t v42 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v41, v42))
            {
              uint64_t v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v43 = 0;
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "Sending the start message with questionnaire out", v43, 2u);
              swift_slowDealloc();
            }

            sub_100074128();
          }
          else
          {
            uint64_t v23 = v20;
            unint64_t v24 = v21;
            if (qword_10037DE18 != -1) {
              swift_once();
            }
            uint64_t v25 = type metadata accessor for Logger();
            sub_10000FD84(v25, (uint64_t)qword_1003A9B20);
            swift_bridgeObjectRetain();
            uint64_t v26 = Logger.logObject.getter();
            os_log_type_t v27 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v26, v27))
            {
              uint64_t v28 = (uint8_t *)swift_slowAlloc();
              aBlock[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v28 = 136446210;
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_1001B3178(v23, v24, aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v26, v27, "Pending send token %{public}s", v28, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
          }
          goto LABEL_5;
        }
        LODWORD(v62) = *(unsigned __int8 *)(v1 + 272);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v61 = (uint8_t *)*(id *)(Strong + 152);
          swift_unknownObjectRelease();
          os_log_type_t v34 = &off_100361640;
        }
        else
        {
          uint64_t v61 = 0;
          os_log_type_t v34 = 0;
        }
        uint64_t v60 = sub_1000C7498(v62 & 1, (uint64_t)v61, (uint64_t)v34);
        uint64_t v62 = v44;
        swift_unknownObjectRelease();
        if (qword_10037DE18 != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        sub_10000FD84(v45, (uint64_t)qword_1003A9B20);
        swift_bridgeObjectRetain_n();
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.default.getter();
        LODWORD(v59) = v47;
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          aBlock[0] = v57;
          uint64_t v58 = v46;
          uint64_t v48 = v61;
          unint64_t v49 = (unint64_t)v62;
          char v50 = v61;
          *(_DWORD *)uint64_t v61 = 136446210;
          v56[0] = v48 + 4;
          v56[1] = v50 + 12;
          swift_bridgeObjectRetain();
          uint64_t v66 = sub_1001B3178(v60, v49, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v59, "Starting new questionnaire send attempt for token %{public}s", v61, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_10001E6FC(0, (unint64_t *)&qword_100387440);
        uint64_t v59 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v61 = *(uint8_t **)(v10 + 8);
        ((void (*)(char *, uint64_t))v61)(v13, v9);
        uint64_t v51 = swift_allocObject();
        swift_weakInit();
        os_log_type_t v52 = (void *)swift_allocObject();
        uint64_t v53 = v60;
        void v52[2] = v51;
        v52[3] = v53;
        v52[4] = v62;
        aBlock[4] = (uint64_t)sub_100075D6C;
        aBlock[5] = (uint64_t)v52;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100207A1C;
        aBlock[3] = (uint64_t)&unk_100351868;
        uint64_t v62 = _Block_copy(aBlock);
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        BOOL v54 = v62;
        char v55 = (void *)v59;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        swift_release();
        _Block_release(v54);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v8, v6);
        ((void (*)(char *, uint64_t))v61)(v15, v9);
        return;
      }
      __break(1u);
    }
    else if (qword_10037DE18 == -1)
    {
LABEL_22:
      uint64_t v29 = type metadata accessor for Logger();
      sub_10000FD84(v29, (uint64_t)qword_1003A9B20);
      __int16 v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Sending start message without questionnaire out", v32, 2u);
        swift_slowDealloc();
      }

      sub_100074128();
      return;
    }
    swift_once();
    goto LABEL_22;
  }
  if (v17)
  {
LABEL_3:
    swift_retain();
    sub_1000C6818();
    goto LABEL_5;
  }
}

void sub_100072518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = (void *)a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000FD84(v22, (uint64_t)qword_1003A9B20);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t aBlock = v65;
      uint64_t v67 = a3;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t aBlock = (void *)sub_1001B3178(v26, v27, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Loading questionnaire request for iso3166Alpha3CountryCode: %{public}s has expired", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

LABEL_22:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v12 = Strong;
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (!v13)
  {
    if (qword_10037DE18 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000FD84(v28, (uint64_t)qword_1003A9B20);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v31 = 136446210;
      uint64_t aBlock = v65;
      uint64_t v67 = a3;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v32 = String.init<A>(describing:)();
      uint64_t aBlock = (void *)sub_1001B3178(v32, v33, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Loading questionnaire request for iso3166Alpha3CountryCode: %{public}s has expired, no countryBundleLocationProvider available", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      return;
    }

    swift_release();
    goto LABEL_22;
  }
  uint64_t v59 = v8;
  id v63 = *(id *)(v13 + 152);
  swift_unknownObjectRelease();
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_10000FD84(v14, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  char v56 = (void *)v15;
  int v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v61 = v4;
  uint64_t v62 = v12;
  uint64_t v60 = v5;
  uint64_t v57 = v9;
  uint64_t v58 = v7;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t aBlock = v65;
    uint64_t v67 = a3;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t aBlock = (void *)sub_1001B3178(v20, v21, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Requesting bundle location for iso3166Alpha3CountryCode: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v34 = sub_100276FA0((uint64_t)v65, a3);
  uint64_t v36 = v35;
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    char v56 = (void *)v34;
    os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v39 = 136446210;
    uint64_t v55 = a3;
    uint64_t aBlock = v56;
    uint64_t v67 = v36;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v40 = String.init<A>(describing:)();
    uint64_t aBlock = (void *)sub_1001B3178(v40, v41, v72);
    a3 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Loading questionnaire from bundleLocation: %{public}s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v42 = sub_1000C3B80();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  os_log_type_t v47 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v48 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  unint64_t v49 = (void *)swift_allocObject();
  uint64_t v50 = (uint64_t)v65;
  void v49[2] = v48;
  void v49[3] = v50;
  v49[4] = a3;
  v49[5] = v42;
  v49[6] = v44;
  v49[7] = v46;
  uint64_t v70 = sub_1000760CC;
  char v71 = v49;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v67 = 1107296256;
  uint64_t v68 = sub_100207A1C;
  char v69 = &unk_100351A48;
  uint64_t v51 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  os_log_type_t v52 = v64;
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v53 = v58;
  uint64_t v54 = v61;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v51);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v59);
}

uint64_t sub_100072F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t, void))
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100073024(a2, a3, a4, a5, a6);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100070534();
    return swift_release();
  }
  return result;
}

void sub_100073024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t, void))
{
  uint64_t v6 = v5;
  uint64_t v90 = a4;
  long long v91 = a5;
  *(void *)&long long v92 = a1;
  uint64_t v9 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v9 - 8);
  long long v86 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  __chkstk_darwin(v11);
  long long v87 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v16 = (void *)((char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_10000FD84(v17, (uint64_t)qword_1003A9B20);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v93 = v18;
  if (v21)
  {
    uint64_t v84 = v13;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v85 = a3;
    v94[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v83 = (uint64_t)(v22 + 4);
    uint64_t v96 = v92;
    uint64_t v97 = a2;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v96 = sub_1001B3178(v24, v25, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v26 = a2;
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v84;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "_onQuestionnaireLoadRequestDone for iso3166Alpha3CountryCode: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v26 = a2;
    swift_bridgeObjectRelease_n();
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *int v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  uint64_t v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_54:
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v66 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
      goto LABEL_49;
    }
LABEL_48:
    uint64_t v66 = &_swiftEmptySetSingleton;
LABEL_49:
    uint64_t v67 = v6 + 288;
    swift_beginAccess();
    *(void *)(v6 + 288) = v66;
    swift_bridgeObjectRelease();
    v94[0] = *(void *)(v27 + 16);
    swift_retain();
    id v95 = (id)static OS_dispatch_queue.main.getter();
    *(void *)&long long v92 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v68 = *(void *)(v92 - 8);
    long long v91 = *(void (**)(char *, uint64_t, uint64_t, void))(v68 + 56);
    uint64_t v93 = v68 + 56;
    uint64_t v69 = (uint64_t)v86;
    v91(v86, 1, 1, v92);
    uint64_t v84 = sub_100004010(&qword_100393AA0);
    uint64_t v70 = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
    uint64_t v82 = v6;
    uint64_t v90 = v70;
    uint64_t v85 = sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
    char v71 = v87;
    Publisher.receive<A>(on:options:)();
    sub_10000950C(v69, &qword_1003924A0);

    swift_release();
    uint64_t v72 = v27;
    uint64_t v73 = swift_allocObject();
    swift_weakInit();
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = sub_100076124;
    *(void *)(v74 + 24) = v73;
    uint64_t v83 = sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
    uint64_t v75 = v89;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v88 = *(void *)(v88 + 8);
    ((void (*)(char *, uint64_t))v88)(v71, v75);
    v81[1] = v67;
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    v94[0] = *(void *)(v72 + 24);
    swift_retain();
    id v95 = (id)static OS_dispatch_queue.main.getter();
    v91((char *)v69, 1, 1, v92);
    Publisher.receive<A>(on:options:)();
    sub_10000950C(v69, &qword_1003924A0);

    swift_release();
    uint64_t v76 = swift_allocObject();
    uint64_t v77 = v82;
    swift_weakInit();
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_100076164;
    *(void *)(v78 + 24) = v76;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    ((void (*)(char *, uint64_t))v88)(v71, v75);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    *(void *)(v77 + 104) = v72;
    swift_retain();
    swift_release();
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    sub_10006EC9C();
    Subject<>.send()();
    swift_release();
    return;
  }
  uint64_t v28 = *(void *)(v6 + 312);
  uint64_t v29 = *(void *)(v6 + 320);
  if (!v29)
  {
    if (!v26)
    {
      uint64_t v33 = *(void *)(v6 + 312);
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  if (v29 == 1)
  {
    os_log_type_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v31))
    {
LABEL_25:

      return;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "No questionnaire loading requests are in progress, ignoring", v32, 2u);
LABEL_23:
    swift_slowDealloc();
    goto LABEL_25;
  }
  if (!v26) {
    goto LABEL_21;
  }
  uint64_t v33 = v92;
  if (v28 != (void)v92 || v29 != v26)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      uint64_t v33 = *(void *)(v6 + 312);
      uint64_t v26 = *(void *)(v6 + 320);
      goto LABEL_18;
    }
LABEL_21:
    sub_100076068(v28, v29);
    swift_bridgeObjectRetain();
    os_log_type_t v30 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v41))
    {
      sub_100075F88(v28, v29);
      sub_100075F88(v28, v29);
      goto LABEL_25;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136446210;
    uint64_t v96 = v28;
    uint64_t v97 = v29;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v43 = String.init<A>(describing:)();
    uint64_t v96 = sub_1001B3178(v43, v44, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075F88(v28, v29);
    sub_100075F88(v28, v29);
    _os_log_impl((void *)&_mh_execute_header, v30, v41, "Received questionnaire loading result not for the expected country code %{public}s, ignoring", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_23;
  }
LABEL_18:
  long long v92 = xmmword_1002B3310;
  *(_OWORD *)(v6 + 312) = xmmword_1002B3310;
  swift_bridgeObjectRetain();
  sub_100075F88(v33, v26);
  uint64_t v34 = *(void *)(v6 + 304);
  if (v34 != 1)
  {
    uint64_t v45 = *(void *)(v6 + 296);
    sub_100076068(v45, *(void *)(v6 + 304));
    sub_100075F88(v28, v29);
    uint64_t v46 = *(void *)(v6 + 296);
    uint64_t v47 = *(void *)(v6 + 304);
    *(_OWORD *)(v6 + 296) = v92;
    sub_100075F88(v46, v47);
    sub_10006CA70(v45, v34);
    sub_100075F88(v45, v34);
    return;
  }
  uint64_t v36 = *(void *)(v6 + 328);
  uint64_t v35 = *(void *)(v6 + 336);
  uint64_t v37 = *(void *)(v6 + 344);
  os_log_type_t v38 = *(void (**)(char *, uint64_t, uint64_t, void))(v6 + 352);
  if (v35 == 1)
  {
    uint64_t v93 = 1;
    uint64_t v40 = v90;
    os_log_type_t v39 = (void (*)(void, void, void, void))v91;
    goto LABEL_36;
  }
  uint64_t v40 = v90;
  os_log_type_t v39 = (void (*)(void, void, void, void))v91;
  if (v38)
  {
    if (v91)
    {
      if (v37 == v90 && v38 == v91) {
        goto LABEL_32;
      }
      *(void *)&long long v92 = *(void *)(v6 + 344);
      uint64_t v85 = (uint64_t)v38;
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      os_log_type_t v38 = (void (*)(char *, uint64_t, uint64_t, void))v85;
      uint64_t v37 = v92;
      if (v48) {
        goto LABEL_32;
      }
    }
LABEL_35:
    uint64_t v36 = *(void *)(v6 + 328);
    uint64_t v93 = *(void *)(v6 + 336);
LABEL_36:
    *(void *)(v6 + 328) = v28;
    *(void *)(v6 + 336) = v29;
    *(void *)(v6 + 344) = v40;
    *(void *)(v6 + 352) = v39;
    swift_bridgeObjectRetain();
    sub_1000760DC(v36, v93);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong) {
      uint64_t v61 = &off_10035BAE0;
    }
    else {
      uint64_t v61 = 0;
    }
    type metadata accessor for QuestionnaireState();
    swift_allocObject();
    uint64_t v62 = swift_retain();
    sub_1000C978C(v62, Strong, (uint64_t)v61);
    uint64_t v27 = v63;
    if (*(unsigned char *)(v6 + 248) != 3 && (*(unsigned char *)(v6 + 232) & 1) == 0)
    {
      uint64_t v64 = *(void *)(v6 + 224);
      if (v64 == 8)
      {
        uint64_t v65 = 1;
        goto LABEL_47;
      }
      if (v64 == 1)
      {
        if (byte_10038ADB8 == 2) {
          uint64_t v65 = 1;
        }
        else {
          uint64_t v65 = byte_10038ADB8;
        }
LABEL_47:
        sub_1000CA424(v65);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_54;
      }
    }
    uint64_t v65 = 2;
    goto LABEL_47;
  }
  if (v91) {
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v49 = v37;
  uint64_t v50 = (void (*)(void, void, void, void))v38;
  sub_100076068(v28, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100076068(v28, v29);
  uint64_t v51 = (void (*)(char *, uint64_t, uint64_t, void))v36;
  *(void *)&long long v92 = v49;
  sub_100076020(v36, v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    long long v91 = v51;
    uint64_t v55 = v54;
    uint64_t v93 = swift_slowAlloc();
    v94[0] = v93;
    *(_DWORD *)uint64_t v55 = 136446466;
    uint64_t v96 = v28;
    uint64_t v97 = v29;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v82 = v6;
    uint64_t v56 = String.init<A>(describing:)();
    uint64_t v96 = sub_1001B3178(v56, v57, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075F88(v28, v29);
    sub_100075F88(v28, v29);
    *(_WORD *)(v55 + 12) = 2082;
    uint64_t v96 = (uint64_t)v91;
    uint64_t v97 = v35;
    swift_bridgeObjectRetain();
    uint64_t v6 = v82;
    uint64_t v58 = String.init<A>(describing:)();
    uint64_t v96 = sub_1001B3178(v58, v59, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Questionnaire for country code %{public}s, is loaded from the same source as the previous country code %{public}s, ignoring", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100075F88(v28, v29);
    sub_100075F88(v28, v29);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v79 = *(void *)(v6 + 328);
  uint64_t v80 = *(void *)(v6 + 336);
  *(void *)(v6 + 328) = v28;
  *(void *)(v6 + 336) = v29;
  *(void *)(v6 + 344) = v92;
  *(void *)(v6 + 352) = v50;
  sub_1000760DC(v79, v80);
}

uint64_t sub_100073E84()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

uint64_t sub_100073F28()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10006EC9C();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

uint64_t sub_10007400C()
{
  if (*(unsigned char *)(v0 + 248) == 3 || (*(unsigned char *)(v0 + 216) & 1) != 0) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 208);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 112);
  if (v3)
  {
    unint64_t v4 = *(void *)(v0 + 112);
    if (!*(void *)(v3 + 16)) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v4 = sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
    if (!*(void *)(v4 + 16))
    {
LABEL_12:
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v5 = sub_1001C92C8(v1, v2);
  if ((v6 & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(v4 + 56) + 40 * v5;
  char v8 = *(unsigned char *)(v7 + 25);
  uint64_t v9 = *(void *)(v7 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  if (v9 && !*(void *)(v9 + 16)) {
    goto LABEL_13;
  }
  return v9;
}

void sub_100074128()
{
  uint64_t v1 = v0;
  if (qword_10037DE18 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9B20);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "_sendStartMessage", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 192);
  __int16 v7 = *(_WORD *)(v1 + 248);
  if (v7 == 3)
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      uint64_t v10 = "currentRoadsideAssistance == nil, nothing to associate start message with";
LABEL_17:
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, v10, v9, 2u);
      swift_slowDealloc();
      goto LABEL_18;
    }
    goto LABEL_18;
  }
  if (*(unsigned char *)(v1 + 216))
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      uint64_t v10 = "currentRoadsideAssistance.providerId == nil, nothing to associate start message with";
      goto LABEL_17;
    }
LABEL_18:

    return;
  }
  uint64_t v11 = *(void *)(v1 + 208);
  uint64_t v12 = *(void *)(v1 + 240);
  uint64_t v42 = *(void *)(v1 + 200) & 1;
  os_log_t osloga = *(os_log_t *)(v1 + 224);
  uint64_t v41 = *(void *)(v1 + 232) & 1;
  if (!*(_WORD *)(v1 + 248))
  {
    int v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    uint64_t v40 = v11;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134349056;
      v64[0] = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Marking conversation id %{public}llu as committing", v18, 0xCu);
      uint64_t v11 = v40;
      swift_slowDealloc();
    }

    uint64_t v55 = v6;
    BOOL v56 = v42 != 0;
    uint64_t v57 = v11;
    char v58 = 0;
    os_log_t v59 = osloga;
    BOOL v60 = v41 != 0;
    uint64_t v39 = v12;
    uint64_t v61 = v12;
    char v62 = 1;
    __int16 v38 = v7 & 0xFF00 | 1;
    char v63 = HIBYTE(v7);
    sub_10000D544(v1 + 192, (uint64_t)v46, &qword_100382418);
    uint64_t v19 = *(void *)(v1 + 192);
    uint64_t v20 = *(void *)(v1 + 200);
    uint64_t v21 = *(void *)(v1 + 208);
    uint64_t v22 = *(void *)(v1 + 216);
    uint64_t v35 = *(void *)(v1 + 224);
    uint64_t v36 = *(void *)(v1 + 232);
    uint64_t v37 = *(void *)(v1 + 240);
    __int16 v23 = *(_WORD *)(v1 + 248);
    sub_10000D544((uint64_t)v46, (uint64_t)v64, &qword_100382418);
    if (v65 == 3) {
      goto LABEL_25;
    }
    uint64_t v47 = v19;
    char v48 = v20 & 1;
    uint64_t v49 = v21;
    char v50 = v22 & 1;
    uint64_t v51 = v35;
    char v52 = v36 & 1;
    uint64_t v53 = v37;
    __int16 v54 = v23;
    if ((sub_100074958((uint64_t)&v47, (uint64_t)&v55) & 1) == 0)
    {
LABEL_25:
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(void *)(v1 + 192) = v6;
    *(void *)(v1 + 200) = v42;
    *(void *)(v1 + 208) = v40;
    *(void *)(v1 + 216) = 0;
    *(void *)(v1 + 224) = osloga;
    *(void *)(v1 + 232) = v41;
    *(void *)(v1 + 240) = v39;
    *(_WORD *)(v1 + 248) = v38;
    sub_10006FEF8((uint64_t)v46);
    if (*(void *)(v1 + 104)) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  if (v7 != 1)
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 134349056;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v33, "conversation id %{public}llu is already committed, it should not have been", v34, 0xCu);
      swift_slowDealloc();

      return;
    }
    goto LABEL_18;
  }
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134349056;
    v64[0] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Already in the process of committing conversation id %{public}llu, overriding it", v15, 0xCu);
    swift_slowDealloc();
  }

  if (!*(void *)(v1 + 104))
  {
LABEL_27:
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v45 = v27;
      uint64_t v28 = String.init<A>(describing:)();
      sub_1001B3178(v28, v29, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Questionnaire state is not defined for: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
LABEL_30:
  swift_retain();
  PassthroughSubject.send(_:)();
  os_log_type_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Requested starting roadside assistance thread", v32, 2u);
    swift_slowDealloc();
  }

  swift_release();
}

uint64_t sub_1000748CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + 104);
    swift_retain();
    uint64_t result = swift_release();
    if (v6)
    {
      sub_1000C7D1C(a2, a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100074958(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
LABEL_7:
    char v3 = *(unsigned char *)(a2 + 24);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!*(unsigned char *)(a2 + 24)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
        char v3 = 1;
      }
      if (v3) {
        return 0;
      }
    }
    char v4 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
    }
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || *(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56)) {
      return 0;
    }
    int v5 = *(unsigned __int8 *)(a1 + 57);
    int v6 = *(unsigned __int8 *)(a2 + 57);
    if (v5 == 2)
    {
      if (v6 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL v7 = (v5 & 1) == 0;
      if (v6 == 2 || ((v7 ^ v6) & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_7;
  }
  return 0;
}

uint64_t sub_100074A34(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) != 0
      || ((*(unsigned __int8 *)(a1 + 25) ^ *(unsigned __int8 *)(a2 + 25)) & 1) != 0)
    {
      return 0;
    }
    BOOL v7 = *(void **)(a1 + 32);
    os_log_type_t v8 = *(void **)(a2 + 32);
    if (v7)
    {
      if (v8 && (sub_100231EF4(v7, v8) & 1) != 0) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100074AE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100074B18()
{
  return sub_100075FB8((void (*)(void))&_swift_release, 48);
}

uint64_t sub_100074B34(void *a1)
{
  return sub_10006D78C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100074B40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (uint64_t *)((char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v12 + 24) = *(_OWORD *)a2;
    *(_OWORD *)(v12 + 40) = v13;
    *(_OWORD *)(v12 + 50) = *(_OWORD *)(a2 + 26);
    *(unsigned char *)(v12 + 66) = a3 & 1;
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    swift_retain_n();
    *os_log_type_t v8 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
    char v14 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    if (v14)
    {
      if (*(void *)(v10 + 160))
      {
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          swift_bridgeObjectRetain();
          sub_10007116C((uint64_t *)a2, a3 & 1);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_14:
          swift_release();
          swift_release();
          return swift_release();
        }
        goto LABEL_13;
      }
      if (!swift_unknownObjectWeakLoadStrong())
      {
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          sub_10007116C((uint64_t *)a2, a3 & 1);
          swift_release();
          swift_release();
          goto LABEL_14;
        }
LABEL_13:
        swift_release();
        goto LABEL_14;
      }
      a2 = *(void *)(v10 + 88);
      if (qword_10037DE18 == -1)
      {
LABEL_8:
        uint64_t v15 = type metadata accessor for Logger();
        sub_10000FD84(v15, (uint64_t)qword_1003A9B20);
        int v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "Fetching my phone numbers", v18, 2u);
          swift_slowDealloc();
        }

        uint64_t ObjectType = swift_getObjectType();
        uint64_t v19 = swift_allocObject();
        swift_weakInit();
        uint64_t v20 = (void *)swift_allocObject();
        uint64_t v20[2] = v19;
        uint64_t v20[3] = sub_100075F28;
        void v20[4] = v12;
        uint64_t v21 = a2;
        uint64_t v22 = *(void (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a2 + 8);
        swift_retain();
        swift_retain();
        v22(sub_100075F54, v20, ObjectType, v21);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_100074FA0(uint64_t a1, _OWORD *a2, char a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (uint64_t *)&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    long long v12 = a2[1];
    *(_OWORD *)(v11 + 24) = *a2;
    *(_OWORD *)(v11 + 40) = v12;
    *(_OWORD *)(v11 + 50) = *(_OWORD *)((char *)a2 + 26);
    *(unsigned char *)(v11 + 66) = a3 & 1;
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    swift_retain_n();
    *os_log_type_t v8 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
    char v13 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    if (v13)
    {
      if (!swift_unknownObjectWeakLoadStrong())
      {
        sub_100074B40(v10, (uint64_t)a2, a3 & 1);
        swift_release();
LABEL_9:
        swift_release();
        swift_release();
        return swift_release();
      }
      if (qword_10037DE18 == -1)
      {
LABEL_5:
        uint64_t v14 = type metadata accessor for Logger();
        sub_10000FD84(v14, (uint64_t)qword_1003A9B20);
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v17 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Fetching resumable roadside provider", v17, 2u);
          swift_slowDealloc();
        }

        uint64_t v18 = swift_allocObject();
        swift_weakInit();
        uint64_t v19 = (void *)swift_allocObject();
        long long v19[2] = v18;
        void v19[3] = sub_100075E28;
        _DWORD v19[4] = v11;
        swift_retain();
        swift_retain();
        sub_100279944((uint64_t)sub_100075E54, (uint64_t)v19);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_10007533C(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100382428);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = [a1 providers];
    uint64_t v10 = sub_10001E6FC(0, (unint64_t *)&qword_100393B80);
    uint64_t v11 = sub_10001E6FC(0, &qword_100382430);
    sub_100075D78((unint64_t *)&qword_100382438, (unint64_t *)&qword_100393B80);
    uint64_t v99 = v11;
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    static Locale.autoupdatingCurrent.getter();
    Locale.region.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v13 = type metadata accessor for Locale.Region();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_10000950C((uint64_t)v8, &qword_100382428);
      uint64_t countAndFlagsBits = 0;
      object = 0;
    }
    else
    {
      Locale.Region.identifier.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
      Swift::String v22 = String.lowercased()();
      uint64_t countAndFlagsBits = v22._countAndFlagsBits;
      object = v22._object;
      swift_bridgeObjectRelease();
    }
    type metadata accessor for PhoneNumberFormatter();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = countAndFlagsBits;
    *(void *)(inited + 24) = object;
    uint64_t v94 = inited;
    unint64_t v95 = sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v24 = v12;
    if ((v12 & 0xC000000000000001) != 0)
    {
      uint64_t v25 = __CocoaDictionary.makeIterator()();
      uint64_t v103 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 0;
      unint64_t v24 = v25 | 0x8000000000000000;
    }
    else
    {
      uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
      uint64_t v29 = *(void *)(v12 + 64);
      uint64_t v103 = v12 + 64;
      uint64_t v26 = ~v28;
      uint64_t v30 = -v28;
      if (v30 < 64) {
        uint64_t v31 = ~(-1 << v30);
      }
      else {
        uint64_t v31 = -1;
      }
      unint64_t v27 = v31 & v29;
    }
    uint64_t v32 = 0;
    uint64_t v93 = v26;
    uint64_t v101 = v24 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v102 = (unint64_t)(v26 + 64) >> 6;
    CFAllocatorRef v100 = kCFAllocatorDefault;
    p_base_prots = &SessionEnvironmentFactory.base_prots;
    uint64_t v98 = (char *)&type metadata for Swift.AnyObject + 8;
    while (2)
    {
      uint64_t v34 = v32;
      unint64_t v35 = v27;
      if ((v24 & 0x8000000000000000) == 0)
      {
LABEL_17:
        if (v35)
        {
          uint64_t v36 = (v35 - 1) & v35;
          unint64_t v37 = __clz(__rbit64(v35)) | (v34 << 6);
          uint64_t v32 = v34;
          goto LABEL_36;
        }
        int64_t v43 = v34 + 1;
        if (!__OFADD__(v34, 1))
        {
          if (v43 < v102)
          {
            unint64_t v44 = *(void *)(v103 + 8 * v43);
            uint64_t v32 = v34 + 1;
            if (v44) {
              goto LABEL_35;
            }
            uint64_t v32 = v34 + 2;
            if (v34 + 2 >= v102) {
              goto LABEL_69;
            }
            unint64_t v44 = *(void *)(v103 + 8 * v32);
            if (v44) {
              goto LABEL_35;
            }
            uint64_t v32 = v34 + 3;
            if (v34 + 3 >= v102) {
              goto LABEL_69;
            }
            unint64_t v44 = *(void *)(v103 + 8 * v32);
            if (v44)
            {
LABEL_35:
              uint64_t v36 = (v44 - 1) & v44;
              unint64_t v37 = __clz(__rbit64(v44)) + (v32 << 6);
LABEL_36:
              uint64_t v46 = 8 * v37;
              uint64_t v47 = *(void **)(*(void *)(v24 + 56) + v46);
              id v41 = *(id *)(*(void *)(v24 + 48) + v46);
              id v42 = v47;
              if (v41) {
                goto LABEL_37;
              }
              goto LABEL_69;
            }
            uint64_t v32 = v34 + 4;
            if (v34 + 4 < v102)
            {
              unint64_t v44 = *(void *)(v103 + 8 * v32);
              if (!v44)
              {
                uint64_t v45 = v34 + 5;
                while (v102 != v45)
                {
                  unint64_t v44 = *(void *)(v103 + 8 * v45++);
                  if (v44)
                  {
                    uint64_t v32 = v45 - 1;
                    goto LABEL_35;
                  }
                }
                goto LABEL_69;
              }
              goto LABEL_35;
            }
          }
LABEL_69:
          sub_100075DBC();
          swift_setDeallocating();
          swift_bridgeObjectRelease();
          return v95;
        }
        __break(1u);
        goto LABEL_71;
      }
      while (1)
      {
        uint64_t v38 = __CocoaDictionary.Iterator.next()();
        if (!v38) {
          goto LABEL_69;
        }
        uint64_t v40 = v39;
        uint64_t v104 = v38;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v41 = v105;
        swift_unknownObjectRelease();
        uint64_t v104 = v40;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v42 = v105;
        swift_unknownObjectRelease();
        uint64_t v32 = v34;
        uint64_t v36 = v35;
        if (!v41) {
          goto LABEL_69;
        }
LABEL_37:

        if (objc_msgSend(v42, (SEL)p_base_prots[384])) {
          break;
        }

        uint64_t v34 = v32;
        unint64_t v35 = v36;
        if ((v24 & 0x8000000000000000) == 0) {
          goto LABEL_17;
        }
      }
      char v48 = [v42 associatedPhoneNumbers];
      uint64_t v90 = v36;
      uint64_t v91 = v10;
      if (v48)
      {
        uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v92 = v49;
        uint64_t v50 = *(void *)(v49 + 16);
        if (v50)
        {
          unint64_t v89 = v24;
          uint64_t v51 = *(void *)(v94 + 24);
          uint64_t v96 = *(void *)(v94 + 16);
          swift_retain();
          uint64_t v52 = swift_bridgeObjectRetain() + 40;
          char v48 = _swiftEmptyArrayStorage;
          uint64_t v97 = v51;
          do
          {
            swift_bridgeObjectRetain();
            NSString v53 = String._bridgeToObjectiveC()();
            if (v51) {
              NSString v54 = String._bridgeToObjectiveC()();
            }
            else {
              NSString v54 = 0;
            }
            uint64_t v55 = (void *)CFPhoneNumberCreate();

            uint64_t String = CFPhoneNumberCreateString();
            if (String)
            {
              uint64_t v57 = (void *)String;
              uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v60 = v59;
              swift_bridgeObjectRelease();

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v48 = sub_1001B1A30(0, v48[2] + 1, 1, v48);
              }
              uint64_t v51 = v97;
              unint64_t v62 = v48[2];
              unint64_t v61 = v48[3];
              if (v62 >= v61 >> 1) {
                char v48 = sub_1001B1A30((void *)(v61 > 1), v62 + 1, 1, v48);
              }
              uint64_t v48[2] = v62 + 1;
              char v63 = &v48[2 * v62];
              v63[4] = v58;
              v63[5] = v60;
            }
            else
            {
              swift_bridgeObjectRelease();

              uint64_t v51 = v97;
            }
            v52 += 16;
            --v50;
          }
          while (v50);
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v24 = v89;
        }
        else
        {
          char v48 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
      }
      unint64_t v64 = (unint64_t)[v42 providerId];
      if ((v64 & 0x8000000000000000) == 0)
      {
        unint64_t v65 = v64;
        id v66 = [v42 providerName];
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;

        LODWORD(v96) = [v42 supportsPayPerUse];
        LODWORD(v92) = [v42 isCarrierProvider];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v69 = v95;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v105 = (void *)v69;
        unint64_t v73 = sub_1001C92C8(v65, v71);
        uint64_t v74 = *(void *)(v69 + 16);
        BOOL v75 = (v72 & 1) == 0;
        uint64_t v76 = v74 + v75;
        if (__OFADD__(v74, v75))
        {
          __break(1u);
        }
        else
        {
          char v77 = v72;
          if (*(void *)(v69 + 24) >= v76)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1000A1A34();
            }
          }
          else
          {
            sub_10009EBE8(v76, isUniquelyReferenced_nonNull_native);
            uint64_t v79 = sub_1001C92C8(v65, v78);
            if ((v77 & 1) != (v80 & 1))
            {
LABEL_75:
              uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
              return result;
            }
            unint64_t v73 = v79;
          }
          char v81 = v105;
          unint64_t v95 = (unint64_t)v105;
          if (v77)
          {
            uint64_t v82 = v105[7] + 40 * v73;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v83 = v97;
            *(void *)uint64_t v82 = v65;
            *(void *)(v82 + 8) = v83;
            *(void *)(v82 + 16) = v68;
            *(unsigned char *)(v82 + 24) = v96;
            *(unsigned char *)(v82 + 25) = v92;
            *(void *)(v82 + 32) = v48;
LABEL_68:
            unint64_t v27 = v90;
            uint64_t v10 = v91;
            p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            continue;
          }
          v105[(v73 >> 6) + 8] |= 1 << v73;
          *(void *)(v81[6] + 8 * v73) = v65;
          uint64_t v84 = v81[7] + 40 * v73;
          uint64_t v85 = v97;
          *(void *)uint64_t v84 = v65;
          *(void *)(v84 + 8) = v85;
          *(void *)(v84 + 16) = v68;
          *(unsigned char *)(v84 + 24) = v96;
          *(unsigned char *)(v84 + 25) = v92;
          *(void *)(v84 + 32) = v48;
          uint64_t v86 = v81[2];
          BOOL v87 = __OFADD__(v86, 1);
          uint64_t v88 = v86 + 1;
          if (!v87)
          {
            void v81[2] = v88;
            goto LABEL_68;
          }
        }
        __break(1u);
      }
      break;
    }
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_75;
  }
  if (qword_10037DD80 != -1) {
LABEL_71:
  }
    swift_once();
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000FD84(v17, (uint64_t)qword_1003A9958);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Roadside providers fetch failed", v20, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_100075D30()
{
  return sub_1000719B0();
}

uint64_t sub_100075D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100075D48()
{
  return swift_release();
}

uint64_t sub_100075D50()
{
  return sub_100075FB8((void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_100075D6C()
{
  return sub_1000748CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100075D78(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001E6FC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100075DBC()
{
  return swift_release();
}

uint64_t sub_100075DC4()
{
  swift_release();

  return _swift_deallocObject(v0, 67, 7);
}

uint64_t sub_100075DFC()
{
  return sub_100074FA0(*(void *)(v0 + 16), (_OWORD *)(v0 + 24), *(unsigned char *)(v0 + 66));
}

uint64_t sub_100075E0C()
{
  return sub_100075FB8((void (*)(void))&_swift_release, 48);
}

uint64_t sub_100075E28()
{
  return sub_100074B40(*(void *)(v0 + 16), v0 + 24, *(unsigned char *)(v0 + 66));
}

uint64_t sub_100075E38()
{
  return sub_100075FB8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100075E54(uint64_t a1, char a2)
{
  return sub_10006DB90(a1, a2 & 1, *(void *)(v2 + 16), *(uint64_t (**)(long long *))(v2 + 24));
}

uint64_t sub_100075E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100075EA8(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100075EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100075F28(uint64_t a1)
{
  return sub_1000710F8(a1, *(void *)(v1 + 16), (uint64_t *)(v1 + 24), *(unsigned char *)(v1 + 66));
}

uint64_t sub_100075F38()
{
  return sub_100075FB8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100075F54(void *a1)
{
  return sub_10006DFE4(a1, *(void *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100075F60()
{
  return sub_100075FB8((void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_100075F7C()
{
  return sub_100070D24(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100075F88(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100075F9C()
{
  return sub_100075FB8((void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_100075FB8(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_100076014()
{
  sub_100072518(v0[2], v0[3], v0[4]);
}

uint64_t sub_100076020(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100076068(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10007607C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000760CC()
{
  return sub_100072F58(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void (**)(char *, uint64_t, uint64_t, void))(v0 + 56));
}

uint64_t sub_1000760DC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100076124()
{
  return sub_100073E84();
}

uint64_t sub_10007612C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100076164()
{
  return sub_100073F28();
}

uint64_t sub_10007616C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RoadsideAssistanceModel.ConversationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100076280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceModel.ConversationState()
{
  return &type metadata for RoadsideAssistanceModel.ConversationState;
}

uint64_t getEnumTagSinglePayload for EmergencyModel.Conversation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyModel.Conversation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceModel.Conversation()
{
  return &type metadata for RoadsideAssistanceModel.Conversation;
}

unint64_t sub_100076354()
{
  unint64_t result = qword_100382468;
  if (!qword_100382468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382468);
  }
  return result;
}

unsigned char *sub_1000763D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_1003826A0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Data(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  sub_10000D544(a1, (uint64_t)v41, &qword_1003826B8);
  if (!*((void *)&v41[0] + 1)) {
    goto LABEL_3;
  }
  v43[2] = v41[2];
  v43[3] = v41[3];
  v43[4] = v41[4];
  uint64_t v44 = v42;
  v43[0] = v41[0];
  v43[1] = v41[1];
  sub_1000207A0(v43, &v45);
  unint64_t result = sub_1000207A0(&v45, v46);
  if (v46[0] != 5)
  {
LABEL_3:
    uint64_t v15 = v2 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data;
    swift_beginAccess();
    sub_100078748(v15, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return (unsigned char *)sub_1000787B0((uint64_t)v6);
    }
    else
    {
      sub_100078810((uint64_t)v6, (uint64_t)v13);
      if (qword_10037DD78 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000FD84(v16, (uint64_t)qword_1003A9940);
      sub_100078D08((uint64_t)v13, (uint64_t)v11);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
        v40[0] = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v19 = 136446210;
        uint64_t v20 = (uint64_t *)&v11[*(int *)(v7 + 20)];
        uint64_t v21 = *v20;
        uint64_t v22 = v20[1];
        uint64_t v23 = v20[2];
        uint64_t v24 = v20[3];
        uint64_t v25 = v20[4];
        uint64_t v26 = v20[5];
        uint64_t v27 = v20[6];
        uint64_t v28 = v20[7];
        uint64_t v31 = v19 + 4;
        uint64_t v32 = v21;
        uint64_t v33 = v22;
        uint64_t v34 = v23;
        uint64_t v35 = v24;
        uint64_t v36 = v25;
        uint64_t v37 = v26;
        uint64_t v38 = v27;
        uint64_t v39 = v28;
        sub_10007800C();
        uint64_t v29 = String.init<A>(describing:)();
        uint64_t v32 = sub_1001B3178(v29, v30, v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100078BA8((uint64_t)v11);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Start message %{public}s was not committed, considering it not ACKed and dropped.", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100078BA8((uint64_t)v11);
      }

      sub_100077580();
      return (unsigned char *)sub_100078BA8((uint64_t)v13);
    }
  }
  return result;
}

uint64_t sub_100076780(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_1003826A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v28 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data;
  swift_beginAccess();
  sub_100078748(v12, (uint64_t)v11);
  uint64_t v13 = (int *)type metadata accessor for Data(0);
  uint64_t v14 = *((void *)v13 - 1);
  int v15 = (*(uint64_t (**)(char *, uint64_t, int *))(v14 + 48))(v11, 1, v13);
  sub_1000787B0((uint64_t)v11);
  if (v15 != 1)
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000FD84(v23, (uint64_t)qword_1003A9940);
    sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
    sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v31 = v6;
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v33 = v30;
      *(_DWORD *)os_log_type_t v19 = 136446210;
      uint64_t v29 = v19 + 4;
      sub_100078DB0((uint64_t)a1, (uint64_t)v32);
      sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
      uint64_t v24 = String.init<A>(describing:)();
      v32[0] = sub_1001B3178(v24, v25, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unsigned int v6 = v31;
      swift_bridgeObjectRelease();
      sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
      sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
      uint64_t v22 = "Resetting tracking start message for %{public}s";
      goto LABEL_10;
    }
LABEL_11:
    sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
    sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
    goto LABEL_12;
  }
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000FD84(v16, (uint64_t)qword_1003A9940);
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v17, v18)) {
    goto LABEL_11;
  }
  os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
  uint64_t v30 = swift_slowAlloc();
  uint64_t v33 = v30;
  uint64_t v31 = v6;
  *(_DWORD *)os_log_type_t v19 = 136446210;
  uint64_t v29 = v19 + 4;
  sub_100078DB0((uint64_t)a1, (uint64_t)v32);
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
  uint64_t v20 = String.init<A>(describing:)();
  v32[0] = sub_1001B3178(v20, v21, &v33);
  unsigned int v6 = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007809C);
  uint64_t v22 = "Tracking start message for %{public}s";
LABEL_10:
  _os_log_impl((void *)&_mh_execute_header, v17, v18, v22, v19, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_12:

  static DispatchTime.now()();
  sub_100078DB0((uint64_t)a1, (uint64_t)&v9[v13[5]]);
  uint64_t v26 = &v9[v13[6]];
  *((void *)v26 + 4) = 0;
  *(_OWORD *)uint64_t v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  v26[40] = 1;
  v9[v13[7]] = 0;
  (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v9, 0, 1, v13);
  sub_10000D544((uint64_t)v9, (uint64_t)v6, &qword_1003826A0);
  swift_beginAccess();
  sub_100078D6C(a1, (void (*)(void, void, void, void, void, void, void, void))sub_10007800C);
  sub_100078C04((uint64_t)v6, v12);
  return swift_endAccess();
}

uint64_t sub_100076D1C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - v7;
  uint64_t v9 = sub_100004010(&qword_1003826A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v65 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = type metadata accessor for Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v60 - v19;
  uint64_t v63 = v1;
  uint64_t v21 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data;
  swift_beginAccess();
  sub_100078748(v21, (uint64_t)v13);
  unint64_t v64 = (uint8_t *)v15;
  uint64_t v22 = v14;
  uint64_t v23 = v14;
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v24(v13, 1, v23) == 1) {
    return sub_1000787B0((uint64_t)v13);
  }
  unint64_t v61 = v6;
  uint64_t v26 = v21;
  uint64_t v27 = v20;
  sub_100078810((uint64_t)v13, (uint64_t)v20);
  sub_100078CAC(a1, (uint64_t)&v74);
  uint64_t v62 = a1;
  if (v76 < 0)
  {
    v76 &= ~0x80u;
    uint64_t v28 = v74;
    if (v74 < 0) {
      goto LABEL_32;
    }
    uint64_t v29 = v22;
    uint64_t v30 = (int *)(v22 + 20);
    uint64_t v31 = (uint64_t)v27;
    uint64_t v32 = &v27[*(int *)(v22 + 20)];
    if ((*((void *)v32 + 3) & 0x8000000000000000) != 0) {
      goto LABEL_6;
    }
LABEL_15:
    uint64_t v33 = v26;
LABEL_16:
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v42 = v67;
    uint64_t v43 = sub_10000FD84(v67, (uint64_t)qword_1003A9940);
    uint64_t v44 = v66;
    char v45 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v61, v43, v42);
    sub_100078D08(v31, (uint64_t)v18);
    uint64_t v46 = Logger.logObject.getter();
    int v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      LODWORD(v63) = v47;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v68 = (char *)v60;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v49 = (uint64_t *)&v18[*v30];
      uint64_t v50 = *v49;
      LOBYTE(v49) = v49[3] < 0;
      uint64_t v71 = v50;
      LOBYTE(v72) = (_BYTE)v49;
      uint64_t v51 = String.init<A>(describing:)();
      uint64_t v71 = sub_1001B3178(v51, v52, (uint64_t *)&v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100078BA8((uint64_t)v18);
      *(_WORD *)(v48 + 12) = 2080;
      sub_100078CAC(v62, (uint64_t)&v71);
      int v53 = v73;
      if (v73 < 0)
      {
        v73 &= ~0x80u;
        uint64_t v54 = v71;
        if (v71 < 0) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v54 = v72;
        if (v72 < 0) {
          goto LABEL_32;
        }
      }
      uint64_t v69 = v54;
      BOOL v70 = v53 < 0;
      uint64_t v57 = String.init<A>(describing:)();
      uint64_t v69 = sub_1001B3178(v57, v58, (uint64_t *)&v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v63, "Conversation for the pending start message %{public}s does not match the current one %s, resetting.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v67);
    }
    else
    {

      sub_100078BA8((uint64_t)v18);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v42);
    }
    sub_100078BA8(v31);
    uint64_t v59 = (uint64_t)v65;
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v64 + 7))(v65, 1, 1, v29);
    swift_beginAccess();
    sub_100078C04(v59, v33);
    return swift_endAccess();
  }
  uint64_t v28 = v75;
  if (v75 < 0) {
    goto LABEL_32;
  }
  uint64_t v29 = v22;
  uint64_t v30 = (int *)(v22 + 20);
  uint64_t v31 = (uint64_t)v27;
  uint64_t v32 = &v27[*(int *)(v22 + 20)];
  if ((*((void *)v32 + 3) & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
LABEL_6:
  uint64_t v33 = v26;
  if (v28 != *(void *)v32) {
    goto LABEL_16;
  }
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v34 = v67;
  uint64_t v35 = sub_10000FD84(v67, (uint64_t)qword_1003A9940);
  uint64_t v36 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v8, v35, v34);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v37, v38))
  {

    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v34);
LABEL_26:
    if (v24((char *)v33, 1, v29) != 1)
    {
      *(unsigned char *)(v33 + *(int *)(v29 + 28)) = 1;
      sub_100077580();
      return sub_100078BA8(v31);
    }
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v39 = (uint8_t *)swift_slowAlloc();
  unint64_t v65 = (char *)swift_slowAlloc();
  uint64_t v68 = v65;
  *(_DWORD *)uint64_t v39 = 136446210;
  sub_100078CAC(v62, (uint64_t)&v71);
  int v40 = v73;
  if ((v73 & 0x80000000) == 0)
  {
    uint64_t v41 = v72;
    if (v72 < 0) {
      goto LABEL_32;
    }
    goto LABEL_25;
  }
  v73 &= ~0x80u;
  uint64_t v41 = v71;
  if ((v71 & 0x8000000000000000) == 0)
  {
LABEL_25:
    unint64_t v64 = v39 + 4;
    uint64_t v69 = v41;
    BOOL v70 = v40 < 0;
    uint64_t v55 = String.init<A>(describing:)();
    uint64_t v69 = sub_1001B3178(v55, v56, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Conversation %{public}s is committed, considering start message ACKed.", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v67);
    goto LABEL_26;
  }
LABEL_32:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100077580()
{
  uint64_t v1 = sub_100004010(&qword_1003826A0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  unsigned int v6 = &v18[-v5];
  uint64_t v7 = type metadata accessor for Data(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data;
  swift_beginAccess();
  sub_100078748(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000787B0((uint64_t)v6);
  }
  sub_100078810((uint64_t)v6, (uint64_t)v10);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget + 32);
  char v14 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget + 40);
  uint64_t v15 = &v10[*(int *)(v7 + 24)];
  long long v16 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget);
  *((_OWORD *)v15 + 1) = v16;
  *((void *)v15 + 4) = v13;
  v15[40] = v14;
  unint64_t v17 = sub_1000777AC();
  sub_1001B6D38(5, v17);
  swift_bridgeObjectRelease();
  sub_100078BA8((uint64_t)v10);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  swift_beginAccess();
  sub_100078C04((uint64_t)v4, v11);
  return swift_endAccess();
}

unint64_t sub_1000777AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = 0x737574617473;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v7 = (int *)type metadata accessor for Data(0);
  int v8 = *(unsigned __int8 *)(v1 + v7[7]);
  *(NSNumber *)(inited + 48) = Bool._bridgeToObjectiveC()();
  unint64_t v9 = sub_100283ACC(inited);
  if (v8 == 1)
  {
    static DispatchTime.now()();
    unint64_t v10 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v10)
    {
      unint64_t v11 = DispatchTime.uptimeNanoseconds.getter();
      if (v11 < DispatchTime.uptimeNanoseconds.getter()) {
        __break(1u);
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v9;
    sub_1002699E8((uint64_t)isa, 0xD000000000000010, 0x80000001002CACB0, isUniquelyReferenced_nonNull_native);
    unint64_t v9 = v43;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + v7[6] + 40) & 1) == 0)
  {
    Class v14 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v9;
    sub_1002699E8((uint64_t)v14, 0x4449746173, 0xE500000000000000, v15);
    unint64_t v9 = v43;
    swift_bridgeObjectRelease();
  }
  sub_100078874();
  if ((v16 & 1) == 0)
  {
    Class v17 = Int._bridgeToObjectiveC()().super.super.isa;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v9;
    sub_1002699E8((uint64_t)v17, 0x4C79726574746162, 0xEC0000006C657665, v18);
    unint64_t v9 = v43;
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (void *)(v1 + v7[5]);
  unint64_t v20 = v19[2];
  uint64_t v21 = v19[3];
  if (v21 < 0)
  {
    sub_100078C6C();
    uint64_t v35 = NSString.init(stringLiteral:)();
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v9;
    sub_1002699E8(v35, 0x5465636976726573, 0xEB00000000657079, v36);
    unint64_t v37 = v43;
    swift_bridgeObjectRelease();
    Class v38 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v37;
    sub_1002699E8((uint64_t)v38, 0x5065636976726573, 0xEF72656469766F72, v39);
    unint64_t v29 = v43;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
LABEL_18:
      Class v40 = UInt64._bridgeToObjectiveC()().super.super.isa;
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v43 = v29;
      sub_1002699E8((uint64_t)v40, 0x6E6F697473657571, 0xEF6449657269616ELL, v41);
      unint64_t v29 = v43;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v22 = v19[7];
    uint64_t v23 = v19[5];
    sub_100078C6C();
    uint64_t v24 = NSString.init(stringLiteral:)();
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v9;
    sub_1002699E8(v24, 0x5465636976726573, 0xEB00000000657079, v25);
    unint64_t v26 = v43;
    swift_bridgeObjectRelease();
    Class v27 = Bool._bridgeToObjectiveC()().super.super.isa;
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v26;
    sub_1002699E8((uint64_t)v27, 0x725079654B646545, 0xED0000746E657365, v28);
    unint64_t v29 = v43;
    swift_bridgeObjectRelease();
    if (v22)
    {
      NSString v30 = String._bridgeToObjectiveC()();
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v43 = v29;
      sub_1002699E8((uint64_t)v30, 0x65707954676D65, 0xE700000000000000, v31);
      unint64_t v29 = v43;
      swift_bridgeObjectRelease();
    }
    sub_100078A00(v20);
    if (v32)
    {
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v43 = v29;
      sub_1002699E8((uint64_t)v33, 0xD000000000000011, 0x80000001002CAC90, v34);
      unint64_t v29 = v43;
      swift_bridgeObjectRelease();
    }
    if ((v23 & 1) == 0) {
      goto LABEL_18;
    }
  }
  return v29;
}

uint64_t sub_100077D00()
{
  swift_release();
  sub_1000787B0(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data);

  return swift_deallocClassInstance();
}

uint64_t sub_100077D6C()
{
  return type metadata accessor for AnalyticsStartMessage(0);
}

uint64_t type metadata accessor for AnalyticsStartMessage(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_1003824A8);
}

void sub_100077D94()
{
  sub_100077E3C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100077E3C()
{
  if (!qword_1003824B8)
  {
    type metadata accessor for Data(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1003824B8);
    }
  }
}

uint64_t type metadata accessor for Data(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100382658);
}

void *sub_100077EB4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DispatchTime();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    uint64_t v12 = v10[2];
    uint64_t v13 = v10[3];
    uint64_t v14 = v10[4];
    uint64_t v15 = v10[5];
    uint64_t v16 = v10[6];
    uint64_t v24 = v10[7];
    uint64_t v25 = *v10;
    sub_10007800C();
    *unint64_t v9 = v25;
    v9[1] = v11;
    uint64_t v9[2] = v12;
    v9[3] = v13;
    _OWORD v9[4] = v14;
    void v9[5] = v15;
    uint64_t v9[6] = v16;
    v9[7] = v24;
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (_OWORD *)((char *)a1 + v17);
    unint64_t v20 = (_OWORD *)((char *)a2 + v17);
    long long v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(_OWORD *)((char *)v19 + 25) = *(_OWORD *)((char *)v20 + 25);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  }
  return a1;
}

uint64_t sub_10007800C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100078018(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return sub_10007809C();
}

uint64_t sub_10007809C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000780A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  uint64_t v13 = v9[3];
  uint64_t v14 = v9[4];
  uint64_t v15 = v9[5];
  uint64_t v17 = v9[6];
  uint64_t v16 = v9[7];
  sub_10007800C();
  *uint64_t v8 = v10;
  v8[1] = v11;
  _OWORD v8[2] = v12;
  v8[3] = v13;
  v8[4] = v14;
  v8[5] = v15;
  _OWORD v8[6] = v17;
  v8[7] = v16;
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  unint64_t v20 = (_OWORD *)(a1 + v18);
  long long v21 = (_OWORD *)(a2 + v18);
  long long v22 = v21[1];
  *unint64_t v20 = *v21;
  v20[1] = v22;
  *(_OWORD *)((char *)v20 + 25) = *(_OWORD *)((char *)v21 + 25);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t sub_1000781B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  uint64_t v13 = v9[3];
  uint64_t v14 = v9[4];
  uint64_t v15 = v9[5];
  uint64_t v17 = v9[6];
  uint64_t v16 = v9[7];
  sub_10007800C();
  *uint64_t v8 = v10;
  v8[1] = v11;
  _OWORD v8[2] = v12;
  v8[3] = v13;
  v8[4] = v14;
  v8[5] = v15;
  _OWORD v8[6] = v17;
  v8[7] = v16;
  sub_10007809C();
  uint64_t v18 = a3[6];
  uint64_t v19 = (_OWORD *)(a1 + v18);
  unint64_t v20 = (_OWORD *)(a2 + v18);
  long long v21 = *(_OWORD *)((char *)v20 + 25);
  long long v22 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v22;
  *(_OWORD *)((char *)v19 + 25) = v21;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1000782D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  unint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *unint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  uint64_t v9[2] = v10[2];
  v9[3] = v12;
  uint64_t v13 = (_OWORD *)(a1 + v8);
  uint64_t v14 = (_OWORD *)(a2 + v8);
  long long v15 = v14[1];
  _OWORD *v13 = *v14;
  v13[1] = v15;
  *(_OWORD *)((char *)v13 + 25) = *(_OWORD *)((char *)v14 + 25);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100078388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  unint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  long long v11 = v9[3];
  _OWORD v8[2] = v9[2];
  v8[3] = v11;
  sub_10007809C();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)(a1 + v12);
  long long v15 = (_OWORD *)(a2 + v12);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(_OWORD *)((char *)v14 + 25) = *(_OWORD *)((char *)v15 + 25);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_10007844C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078460);
}

uint64_t sub_100078460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(_DWORD *)(a1 + *(int *)(a3 + 20) + 25);
    if (v10 > 0x80000000) {
      return -v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100078520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100078534);
}

double sub_100078534(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    *(void *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = (unint64_t)-(int)a2 << 8;
    double result = 0.0;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)(v12 + 48) = 0u;
  }
  return result;
}

uint64_t sub_100078604()
{
  uint64_t result = type metadata accessor for DispatchTime();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000786AC(uint64_t a1)
{
  return sub_10000D544(a1, *v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget, &qword_100382698);
}

unsigned char *sub_1000786DC(uint64_t a1)
{
  return sub_1000763D8(a1);
}

uint64_t sub_100078700(void *a1)
{
  return sub_100076780(a1);
}

uint64_t sub_100078724(uint64_t a1)
{
  return sub_100076D1C(a1);
}

uint64_t sub_100078748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003826A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000787B0(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_1003826A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100078810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100078874()
{
  unint64_t v0 = self;
  id v1 = [v0 currentDevice];
  id v2 = [v1 isBatteryMonitoringEnabled];

  id v3 = [v0 currentDevice];
  [v3 setBatteryMonitoringEnabled:1];

  id v4 = [v0 currentDevice];
  id v5 = [v4 batteryState];

  if (v5)
  {
    id v6 = [v0 currentDevice];
    [v6 batteryLevel];
    float v8 = v7;

    float v9 = v8 * 100.0;
  }
  else
  {
    float v9 = 0.0;
  }
  id v10 = [v0 currentDevice];
  [v10 setBatteryMonitoringEnabled:v2];

  if (v5)
  {
    float v11 = roundf(v9);
    if ((~LODWORD(v11) & 0x7F800000) != 0)
    {
      if (v11 > -9.2234e18)
      {
        if (v11 < 9.2234e18) {
          return;
        }
LABEL_12:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

unint64_t sub_100078A00(unint64_t a1)
{
  unint64_t v1 = a1;
  switch(a1)
  {
    case 0uLL:
      return v1;
    case 1uLL:
      unint64_t v1 = 0x746F4E746F4E6F44;
      break;
    case 2uLL:
    case 3uLL:
      unint64_t v1 = 0xD000000000000017;
      break;
    default:
      if (qword_10037DD78 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      sub_10000FD84(v2, (uint64_t)qword_1003A9940);
      id v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v3, v4))
      {
        id v5 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v5 = 134349056;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unhandled CTStewieNotifyOption value %{public}ld", v5, 0xCu);
        swift_slowDealloc();
      }

      unint64_t v1 = 0;
      break;
  }
  return v1;
}

uint64_t sub_100078BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Data(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100078C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003826A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100078C6C()
{
  unint64_t result = qword_1003826B0;
  if (!qword_1003826B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1003826B0);
  }
  return result;
}

uint64_t sub_100078CAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100078D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100078D6C(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100078DB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100078E10(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v4 = __CocoaSet.contains(_:)();
    swift_release();
    return v4 & 1;
  }
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v8 = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v10 = v8 & ~v9;
    uint64_t v11 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
    {
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(v12 + 8 * v10);
      BOOL v14 = *(void *)(v13 + 16) == v6 && *(void *)(v13 + 24) == v7;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v15 = ~v9;
      unint64_t v16 = (v10 + 1) & v15;
      if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
      {
        while (1)
        {
          uint64_t v17 = *(void *)(v12 + 8 * v16);
          BOOL v18 = *(void *)(v17 + 16) == v6 && *(void *)(v17 + 24) == v7;
          if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v16 = (v16 + 1) & v15;
          if (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100078F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1000790C8(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v3);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_1000791B8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = (double *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  if (!CGRectEqualToRect(*(CGRect *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop], v23))
  {
    if (qword_10037DE38 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9B80);
    unint64_t v11 = v4;
    int v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v15 = sub_100102D08(2, a1, a2, a3, a4);
      sub_1001B3178(v15, v16, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v17 = sub_100102D08(2, *v9, v9[1], v9[2], v9[3]);
      uint64_t v21 = sub_1001B3178(v17, v18, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "obstructedAreaAtTheTop changed from %s to %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v19 = [v11 view:v21, v22];
    if (v19)
    {
      unint64_t v20 = v19;
      [v19 setNeedsLayout];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100079434(char *a1, _OWORD *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayMetrics;
  type metadata accessor for ConnectionAssistantDisplayState();
  swift_allocObject();
  unint64_t v16 = v9;
  *(void *)&v9[v15] = sub_1000154C0();
  v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAnimationFinished] = 0;
  uint64_t v17 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = 2;
  uint64_t v18 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController;
  *(void *)&v16[v18] = [objc_allocWithZone((Class)type metadata accessor for ConnectionAssistantConnectionViewController()) init];
  *(void *)&v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__innerShadowView] = 0;
  *(void *)&v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink] = 0;
  *(void *)&v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertion] = 0;
  *(void *)&v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress] = 0;
  id v19 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending];
  *(void *)id v19 = 0;
  v19[8] = 1;
  unint64_t v20 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  *(_OWORD *)unint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  uint64_t v21 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  unsigned char v21[32] = 0;
  uint64_t v22 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics];
  long long v23 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)a1;
  *((_OWORD *)v22 + 1) = v23;
  long long v24 = *((_OWORD *)a1 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)a1 + 2);
  *((_OWORD *)v22 + 3) = v24;
  *((void *)v22 + 14) = *((void *)a1 + 14);
  long long v25 = *((_OWORD *)a1 + 6);
  long long v26 = *((_OWORD *)a1 + 4);
  *((_OWORD *)v22 + 5) = *((_OWORD *)a1 + 5);
  *((_OWORD *)v22 + 6) = v25;
  *((_OWORD *)v22 + 4) = v26;
  Class v27 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter];
  long long v28 = a2[5];
  *((_OWORD *)v27 + 4) = a2[4];
  *((_OWORD *)v27 + 5) = v28;
  *(_OWORD *)(v27 + 89) = *(_OWORD *)((char *)a2 + 89);
  long long v29 = a2[1];
  *(_OWORD *)Class v27 = *a2;
  *((_OWORD *)v27 + 1) = v29;
  long long v30 = a2[3];
  *((_OWORD *)v27 + 2) = a2[2];
  *((_OWORD *)v27 + 3) = v30;
  char v31 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertionProducer];
  *(void *)char v31 = a6;
  *((void *)v31 + 1) = a7;
  uint64_t v32 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__viewDidLoadCallback];
  *(void *)uint64_t v32 = a8;
  *((void *)v32 + 1) = a9;
  uint64_t v33 = qword_10037DCF0;
  swift_retain();
  swift_retain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1003A98A8;
  char v35 = word_1003A98B0;
  char v36 = HIBYTE(word_1003A98B0);
  char v37 = byte_1003A98B2;
  uint64_t v38 = qword_1003A98B8;
  char v39 = word_1003A98F0;
  char v40 = HIBYTE(word_1003A98F0);
  char v41 = &v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState];
  long long v42 = xmmword_1003A98C0;
  long long v43 = unk_1003A98D0;
  long long v44 = xmmword_1003A98E0;
  *char v41 = byte_1003A98A0;
  *((void *)v41 + 1) = v34;
  v41[16] = v35;
  v41[17] = v36;
  v41[18] = v37;
  *((void *)v41 + 3) = v38;
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  *((_OWORD *)v41 + 4) = v44;
  v41[80] = v39;
  v41[81] = v40;
  *((void *)v41 + 11) = a3;
  *((void *)v41 + 12) = a4;
  v41[104] = a5;
  v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__skipLocationAnimation] = a5 != 2;
  char v45 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v46 = MTLCreateSystemDefaultDevice();
  if (v46)
  {
    int v47 = v46;
    id v48 = objc_allocWithZone((Class)type metadata accessor for ConnectionAssistantEarthViewController());
    *(void *)&v16[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController] = sub_100052478(v45 ^ 1u, v47);

    v61.receiver = v16;
    v61.super_class = (Class)type metadata accessor for ConnectionAssistantViewController();
    [super initWithNibName:0 bundle:0];
    uint64_t v50 = (objc_class *)type metadata accessor for WeakCADisplayLinkTarget();
    uint64_t v51 = (char *)objc_allocWithZone(v50);
    *(void *)&v51[OBJC_IVAR____TtC8SOSBuddy23WeakCADisplayLinkTarget__target + 8] = 0;
    *(void *)(swift_unknownObjectWeakInit() + 8) = &off_100351C58;
    swift_unknownObjectWeakAssign();
    v60.receiver = v51;
    v60.super_class = v50;
    unint64_t v52 = (char *)v49;
    id v53 = [super init];
    id v54 = [self displayLinkWithTarget:v53 selector:"updateFrom:"];

    swift_release();
    swift_release();

    uint64_t v55 = *(void **)&v52[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink];
    *(void *)&v52[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink] = v54;

    return (uint64_t)v52;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

id sub_10007987C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for ConnectionAssistantViewController();
  v46.receiver = v0;
  v46.super_class = v9;
  [super viewDidLoad];
  [v0 setOverrideUserInterfaceStyle:2];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v11 = result;
  int v12 = self;
  id v13 = [v12 systemBackgroundColor];
  [v11 setBackgroundColor:v13];

  id result = [v1 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v14 = result;
  uint64_t v44 = v6;
  id v15 = [v12 labelColor];
  [v14 setTintColor:v15];

  unint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController];
  [v1 addChildViewController:v16];
  id result = [v1 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = result;
  id result = [v16 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v18 = result;
  [v17 addSubview:result];

  [v16 didMoveToParentViewController:v1];
  if (v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics] == 1)
  {
    uint64_t v42 = v3;
    type metadata accessor for ShadowView();
    id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v20 = [v12 blackColor];
    id v21 = [v19 layer];
    if (v20) {
      id v22 = [v20 CGColor];
    }
    else {
      id v22 = 0;
    }
    [v21 setShadowColor:v22];

    id v23 = [v19 layer];
    [v23 setInvertsShadow:1];

    id v24 = [v19 layer];
    [v24 setCornerCurve:kCACornerCurveContinuous];

    id v25 = [v19 layer];
    LODWORD(v26) = 1.0;
    [v25 setShadowOpacity:v26];

    id v27 = [v19 layer];
    [v27 setShadowRadius:12.0];

    double vertical = UIOffsetZero.vertical;
    id v29 = [v19 layer];
    [v29 setShadowOffset:UIOffsetZero.horizontal, vertical];

    long long v30 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__innerShadowView];
    *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__innerShadowView] = v19;
    id v31 = v19;

    id result = [v1 view];
    if (!result) {
      goto LABEL_20;
    }
    uint64_t v32 = result;
    [result addSubview:v31];

    uint64_t v3 = v42;
  }
  uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController];
  [v1 addChildViewController:v33];
  id result = [v1 view];
  uint64_t v34 = v44;
  if (result)
  {
    char v35 = result;
    id result = [v33 view];
    if (result)
    {
      char v36 = result;
      [v35 addSubview:result];

      [v33 didMoveToParentViewController:v1];
      sub_10000FDBC();
      char v37 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v1;
      aBlock[4] = sub_10007C96C;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100207A1C;
      aBlock[3] = &unk_100351CE0;
      char v39 = _Block_copy(aBlock);
      char v40 = v1;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10007C914();
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_10004A6CC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v8, v34);
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_100079F78(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = (objc_class *)type metadata accessor for ConnectionAssistantViewController();
  v32.receiver = v2;
  v32.super_class = v18;
  [super viewDidAppear:a1 & 1];
  if (v2[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 104] == 2)
  {
    sub_10000FDBC();
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    long long v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28(v15, v11);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v2;
    aBlock[4] = sub_10007C8F4;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_100351C90;
    id v20 = _Block_copy(aBlock);
    id v21 = v2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10007C914();
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_10004A6CC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v22 = (void *)v27;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
    return ((uint64_t (*)(char *, uint64_t))v28)(v17, v11);
  }
  else
  {
    id v24 = *(uint64_t (**)(uint64_t))&v2[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertionProducer];
    uint64_t v25 = swift_retain();
    uint64_t v26 = v24(v25);
    swift_release();
    *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertion] = v26;
    return swift_release();
  }
}

uint64_t sub_10007A350(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(a1
                                         + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertionProducer);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertion) = v4;

  return swift_release();
}

void sub_10007A4A4(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for ConnectionAssistantViewController();
  uint64_t v8 = *a4;
  uint64_t v9 = (char *)v14.receiver;
  [super v8:a3];
  uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink];
  if (v10)
  {
    uint64_t v11 = self;
    id v12 = v10;
    id v13 = [v11 mainRunLoop];
    [v12 *a5:v13:NSRunLoopCommonModes];
  }
  else
  {
    __break(1u);
  }
}

void sub_10007A57C()
{
  v48.receiver = v0;
  v48.super_class = (Class)type metadata accessor for ConnectionAssistantViewController();
  [super viewWillLayoutSubviews];
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController] view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  id v3 = [v0 view];
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = v3;
  [v3 bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  [v2 setFrame:v6, v8, v10, v12];
  id v13 = [*(id *)&v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController] view];
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_super v14 = v13;
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v15;
  [v15 bounds];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  [v14 setFrame:v18, v20, v22, v24];
  if (v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics])
  {
    sub_10007B154();
    return;
  }
  id v25 = [v0 view];
  if (!v25) {
    goto LABEL_14;
  }
  uint64_t v26 = v25;
  [v25 safeAreaInsets];
  double v28 = v27;
  double v30 = v29;

  id v31 = [v0 view];
  if (v31)
  {
    objc_super v32 = v31;
    [v31 bounds];
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;
    double v40 = v39;

    v49.origin.CGFloat x = sub_10007C8A0(v34, v36, v38, v40, v28, v30);
    CGFloat x = v49.origin.x;
    CGFloat y = v49.origin.y;
    CGFloat width = v49.size.width;
    CGFloat height = v49.size.height;
    CGFloat v45 = CGRectGetHeight(v49);
    v50.origin.CGFloat x = x;
    v50.origin.CGFloat y = y;
    v50.size.CGFloat width = width;
    v50.size.CGFloat height = height;
    CGFloat v46 = CGRectGetHeight(v50);
    int v47 = &v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
    *(double *)int v47 = v28;
    *((void *)v47 + 1) = 0x4075E00000000000;
    *((CGFloat *)v47 + 2) = v45;
    *((CGFloat *)v47 + 3) = v46;
    v47[32] = 1;
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10007A858()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending + 8) != 1
    || (uint64_t v3 = sub_100012A54(), (v3 & 0x100000000) != 0))
  {
    uint64_t v17 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink;
    double v18 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink);
    if (v18)
    {
      [v18 preferredFrameRateRange];
      float maximum = CAFrameRateRangeDefault.maximum;
      float preferred = CAFrameRateRangeDefault.preferred;
      if (static CAFrameRateRange.== infix(_:_:)()) {
        return;
      }
      if (qword_10037DE38 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_10000FD84(v21, (uint64_t)qword_1003A9B80);
      double v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        double v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Updating CA frame rate to: default", v24, 2u);
        swift_slowDealloc();
      }

      double v28 = *(void **)(v1 + v17);
      if (v28)
      {
        *(float *)&double v25 = CAFrameRateRangeDefault.minimum;
        *(float *)&double v26 = maximum;
        *(float *)&double v27 = preferred;
        [v28 setPreferredFrameRateRange:v25, v26, v27];
        double v29 = *(void **)(v1 + v17);
        if (v29)
        {
          uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController);
          [v29 preferredFrameRateRange];
          id v31 = *(void **)(v30 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink);
          if (v31)
          {
            [v31 setPreferredFrameRateRange:];
            if ((*(unsigned char *)(v2 + 8) & 1) == 0)
            {
              double v32 = *(double *)v2;
              sub_10007AC0C(v32);
            }
            return;
          }
          goto LABEL_31;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
  float v4 = *(float *)&v3;
  uint64_t v5 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink;
  double v6 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink);
  if (!v6)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  [v6 preferredFrameRateRange];
  uint64_t v7 = CAFrameRateRange.preferred.getter();
  if ((v7 & 0x100000000) != 0 || *(float *)&v7 != v4)
  {
    if (qword_10037DE38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000FD84(v8, (uint64_t)qword_1003A9B80);
    double v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      double v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)double v11 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Updating CA frame rate to: %f", v11, 0xCu);
      swift_slowDealloc();
    }

    double v12 = *(void **)(v1 + v5);
    if (v12)
    {
      id v13 = v12;
      CAFrameRateRange v34 = CAFrameRateRange.init(minimum:maximum:preferred:)(v4, v4, (Swift::Float_optional *)LODWORD(v4));
      [v13 setPreferredFrameRateRange:*(double *)&v34.minimum, *(double *)&v34.maximum, *(double *)&v34.preferred];

      objc_super v14 = *(void **)(v1 + v5);
      if (v14)
      {
        uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController);
        [v14 preferredFrameRateRange];
        uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController__displayLink);
        if (v16)
        {
          [v16 setPreferredFrameRateRange:];
          return;
        }
        goto LABEL_35;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      return;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
}

void sub_10007AC0C(double a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  float v4 = *(char **)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController];
  double v5 = *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_coveredProgress];
  *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_coveredProgress] = a1;
  if (v5 != a1)
  {
    id v6 = [v4 view];
    if (!v6)
    {
LABEL_13:
      __break(1u);
      return;
    }
    uint64_t v7 = v6;
    [v6 setNeedsLayout];
  }
  *(double *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress] = a1;
  if ((v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics] & 1) == 0)
  {
    id v8 = [v1 view];
    if (v8)
    {
      double v9 = v8;
      [v8 safeAreaInsets];
      double v11 = v10;
      double v13 = v12;

      id v14 = [v1 view];
      if (v14)
      {
        uint64_t v15 = v14;
        [v14 bounds];
        double v17 = v16;
        double v19 = v18;
        double v21 = v20;
        double v23 = v22;

        v32.origin.CGFloat x = sub_10007C8A0(v17, v19, v21, v23, v11, v13);
        CGFloat x = v32.origin.x;
        CGFloat y = v32.origin.y;
        CGFloat width = v32.size.width;
        CGFloat height = v32.size.height;
        CGFloat v28 = CGRectGetHeight(v32);
        v33.origin.CGFloat x = x;
        v33.origin.CGFloat y = y;
        v33.size.CGFloat width = width;
        v33.size.CGFloat height = height;
        CGFloat v29 = CGRectGetHeight(v33);
        uint64_t v30 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
        *(double *)uint64_t v30 = v11;
        *((void *)v30 + 1) = 0x4075E00000000000;
        *((CGFloat *)v30 + 2) = v28;
        *((CGFloat *)v30 + 3) = v29;
        v30[32] = 1;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }

  sub_10007B154();
}

void sub_10007AE0C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  v83.origin.CGFloat x = 0.0;
  v83.origin.CGFloat y = 0.0;
  v83.size.CGFloat width = 0.0;
  v83.size.CGFloat height = 0.0;
  if (!CGRectEqualToRect(*(CGRect *)&a1, v83))
  {
    v79.origin.CGFloat x = a1;
    v79.origin.CGFloat y = a2;
    v79.size.CGFloat width = a3;
    v79.size.CGFloat height = a4;
    *(CGRect *)&CGFloat v42 = CGRectInset(v79, -5.0, 0.0);
    double v20 = v44;
    double Height = v45;
    goto LABEL_12;
  }
  id v9 = [v4 view];
  if (!v9)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  double v10 = v9;
  [v9 bounds];
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  v76.origin.CGFloat x = v12;
  v76.origin.CGFloat y = v14;
  v76.size.CGFloat width = v16;
  v76.size.CGFloat height = v18;
  double v19 = CGRectGetWidth(v76) * 0.5;
  if (v19 <= 2.0) {
    double v20 = v19;
  }
  else {
    double v20 = 2.0;
  }
  id v21 = [v4 view];
  if (!v21) {
    goto LABEL_20;
  }
  double v22 = v21;
  [v21 bounds];
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;

  v77.origin.CGFloat x = v24;
  v77.origin.CGFloat y = v26;
  v77.size.CGFloat width = v28;
  v77.size.CGFloat height = v30;
  double Height = CGRectGetHeight(v77);
  id v32 = [v4 view];
  if (!v32)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  CGRect v33 = v32;
  if (Height > 35.0) {
    double Height = 35.0;
  }
  [v32 bounds];
  CGFloat v35 = v34;
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;

  v78.origin.CGFloat x = v35;
  v78.origin.CGFloat y = v37;
  v78.size.CGFloat width = v39;
  v78.size.CGFloat height = v41;
  CGFloat v42 = CGRectGetMidX(v78) + v20 * -0.5;
  uint64_t v43 = 0;
LABEL_12:
  double v46 = v20;
  double v47 = Height;
  CGRect v80 = CGRectInset(*(CGRect *)&v42, 0.0, -10.0);
  CGFloat v48 = *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  CGFloat v49 = *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop + 8];
  CGFloat v50 = *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop + 16];
  CGFloat v51 = *(double *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop + 24];
  *(CGRect *)&v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop] = v80;
  sub_1000791B8(v48, v49, v50, v51);
  if ((v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics] & 1) == 0)
  {
    id v52 = [v4 view];
    if (v52)
    {
      id v53 = v52;
      [v52 safeAreaInsets];
      double v55 = v54;
      double v57 = v56;

      id v58 = [v4 view];
      if (v58)
      {
        uint64_t v59 = v58;
        [v58 bounds];
        double v61 = v60;
        double v63 = v62;
        double v65 = v64;
        double v67 = v66;

        v81.origin.CGFloat x = sub_10007C8A0(v61, v63, v65, v67, v55, v57);
        CGFloat x = v81.origin.x;
        CGFloat y = v81.origin.y;
        CGFloat width = v81.size.width;
        CGFloat v71 = v81.size.height;
        CGFloat v72 = CGRectGetHeight(v81);
        v82.origin.CGFloat x = x;
        v82.origin.CGFloat y = y;
        v82.size.CGFloat width = width;
        v82.size.CGFloat height = v71;
        CGFloat v73 = CGRectGetHeight(v82);
        uint64_t v74 = &v4[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
        *(double *)uint64_t v74 = v55;
        *((void *)v74 + 1) = 0x4075E00000000000;
        *((CGFloat *)v74 + 2) = v72;
        *((CGFloat *)v74 + 3) = v73;
        v74[32] = 1;
        return;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }

  sub_10007B154();
}

void sub_10007B154()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v3 = v2;
  [v2 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v100.origin.double x = v5;
  v100.origin.double y = v7;
  v100.size.CGFloat width = v9;
  v100.size.double height = v11;
  CGFloat MaxY = CGRectGetMaxY(v100);
  double v13 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
  *(CGFloat *)double v13 = MaxY + -56.0;
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 1) = 0;
  v13[32] = 0;
  id v14 = [v1 view];
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v15 = v14;
  [v14 bounds];
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;

  v101.origin.double x = v17;
  v101.origin.double y = v19;
  v101.size.CGFloat width = v21;
  v101.size.double height = v23;
  double MidX = CGRectGetMidX(v101);
  double v25 = (CGFloat *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  double Width = CGRectGetWidth(*(CGRect *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop]);
  id v27 = [v1 view];
  if (!v27)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  CGFloat v28 = v27;
  double v29 = MidX - Width * 0.5;
  [v27 bounds];
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  CGFloat v37 = v36;

  v102.origin.double x = v31;
  v102.origin.double y = v33;
  v102.size.CGFloat width = v35;
  v102.size.double height = v37;
  double MinY = CGRectGetMinY(v102);
  double v39 = v25[2];
  double v40 = v25[3];
  v103.origin.double x = *v25;
  v103.origin.double y = v25[1];
  v103.size.CGFloat width = v39;
  v103.size.double height = v40;
  CGFloat v41 = CGRectGetHeight(v103) * 0.5;
  CGFloat v42 = self;
  sub_10004FF24([v42 bezierPathWithRoundedRect:v29 cornerRadius:MinY v39 cornerRadius:v40 cornerRadius:v41]);
  uint64_t v43 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__innerShadowView];
  if (!v43) {
    return;
  }
  id v44 = v43;
  id v45 = [v1 view];
  if (!v45) {
    goto LABEL_19;
  }
  double v46 = v45;
  [v45 bounds];

  [v44 bounds];
  [v44 setBounds:];

  id v47 = v44;
  id v48 = [v1 view];
  if (!v48)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  CGFloat v49 = v48;
  [v48 bounds];
  CGFloat v51 = v50;
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  CGFloat v57 = v56;

  v104.origin.double x = v51;
  v104.origin.double y = v53;
  v104.size.CGFloat width = v55;
  v104.size.double height = v57;
  double v58 = CGRectGetMidX(v104);
  id v59 = [v1 view];
  if (!v59)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v60 = v59;
  [v59 bounds];
  CGFloat v62 = v61;
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;

  v105.origin.double x = v62;
  v105.origin.double y = v64;
  v105.size.CGFloat width = v66;
  v105.size.double height = v68;
  [v47 setCenter:v58, CGRectGetMidY(v105)];

  id v69 = [v47 layer];
  id v70 = [v1 view];
  if (!v70)
  {
LABEL_22:
    __break(1u);
    return;
  }
  CGFloat v71 = v70;
  id v72 = [v70 traitCollection];

  [v72 displayCornerRadius];
  double v74 = v73;

  [v69 setCornerRadius:v74 + -11.0];
  [v47 bounds];
  CGFloat v76 = v75;
  CGFloat v78 = v77;
  CGFloat v80 = v79;
  CGFloat v82 = v81;
  id v83 = [v47 layer];
  [v83 shadowRadius];
  CGFloat v85 = v84;

  id v86 = [v47 layer];
  [v86 shadowRadius];
  CGFloat v88 = v87;

  v106.origin.double x = v76;
  v106.origin.double y = v78;
  v106.size.CGFloat width = v80;
  v106.size.double height = v82;
  CGRect v107 = CGRectInset(v106, v85, v88);
  double x = v107.origin.x;
  double y = v107.origin.y;
  double v91 = v107.size.width;
  double height = v107.size.height;
  id v93 = [v47 layer];
  [v93 cornerRadius];
  double v95 = v94;

  id v98 = [v42 bezierPathWithRoundedRect:x, y, v91, height, v95];
  id v96 = [v47 layer];
  if (v98) {
    id v97 = [v98 CGPath];
  }
  else {
    id v97 = 0;
  }
  [v96 setShadowPath:v97];
}

void sub_10007B6B8(char *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v7 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState];
  long long v8 = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 80];
  v89[4] = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 64];
  v90[0] = v8;
  *(_OWORD *)((char *)v90 + 9) = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState
                                              + 89];
  long long v9 = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 16];
  v89[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState];
  v89[1] = v9;
  long long v10 = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 48];
  v89[2] = *(_OWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 32];
  v89[3] = v10;
  sub_10007C7F0((uint64_t)v89);
  char v11 = sub_100091B68((unsigned __int8 *)v89, (unsigned __int8 *)a1);
  sub_10007C848((uint64_t)v89);
  if ((v11 & 1) == 0)
  {
    double v79 = v1;
    if (qword_10037DDC8 != -1) {
      swift_once();
    }
    sub_10000FD84(v3, (uint64_t)qword_1003A9A30);
    sub_10007C7F0((uint64_t)a1);
    sub_10007C7F0((uint64_t)a1);
    CGFloat v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v77 = v4;
    uint64_t v78 = v3;
    CGFloat v76 = v6;
    if (v14)
    {
      double v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      double v75 = (char *)v16;
      *(_DWORD *)double v15 = 136315138;
      long long v17 = *((_OWORD *)a1 + 4);
      long long v18 = *((_OWORD *)a1 + 5);
      long long v19 = *((_OWORD *)a1 + 2);
      long long v86 = *((_OWORD *)a1 + 3);
      long long v87 = v17;
      v88[0] = v18;
      *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)(a1 + 89);
      long long v20 = *((_OWORD *)a1 + 1);
      long long v83 = *(_OWORD *)a1;
      *(void *)&v81[0] = v16;
      long long v84 = v20;
      long long v85 = v19;
      sub_10007C7F0((uint64_t)a1);
      uint64_t v21 = String.init<A>(describing:)();
      *(void *)&long long v83 = sub_1001B3178(v21, v22, (uint64_t *)v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10007C848((uint64_t)a1);
      sub_10007C848((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "updateGuidanceState to %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10007C848((uint64_t)a1);
      sub_10007C848((uint64_t)a1);
    }

    CGFloat v23 = v79;
    if ((v79[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__skipLocationAnimation] & 1) == 0
      && (v79[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAnimationFinished] & 1) == 0)
    {
      CGFloat v24 = (double *)&v79[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation];
      int v25 = v79[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation + 16];
      double v26 = *((double *)a1 + 11);
      double v27 = *((double *)a1 + 12);
      int v28 = a1[104];
      if (v25 == 2)
      {
        if (v28 == 2) {
          goto LABEL_17;
        }
LABEL_16:
        double *v24 = v26;
        v24[1] = v27;
        *((unsigned char *)v24 + 16) = v28;
        goto LABEL_17;
      }
      if (v28 == 2 || *v24 != v26 || v24[1] != v27 || ((v28 ^ v25) & 1) != 0) {
        goto LABEL_16;
      }
    }
LABEL_17:
    long long v29 = *((_OWORD *)a1 + 5);
    *((_OWORD *)v7 + 4) = *((_OWORD *)a1 + 4);
    *((_OWORD *)v7 + 5) = v29;
    *(_OWORD *)(v7 + 89) = *(_OWORD *)(a1 + 89);
    long long v30 = *((_OWORD *)a1 + 1);
    *(_OWORD *)CGFloat v7 = *(_OWORD *)a1;
    *((_OWORD *)v7 + 1) = v30;
    long long v31 = *((_OWORD *)a1 + 3);
    *((_OWORD *)v7 + 2) = *((_OWORD *)a1 + 2);
    *((_OWORD *)v7 + 3) = v31;
    sub_10007C7F0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100052C68((unsigned __int8 *)a1);
    char v32 = *v7;
    uint64_t v33 = *((void *)v7 + 1);
    char v34 = v7[16];
    char v35 = v7[17];
    char v36 = v7[18];
    uint64_t v37 = *((void *)v7 + 3);
    char v38 = v7[80];
    char v39 = v7[81];
    char v40 = v7[104];
    double v75 = *(char **)&v23[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController];
    CGFloat v41 = &v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state];
    long long v42 = *((_OWORD *)v7 + 2);
    long long v43 = *((_OWORD *)v7 + 3);
    long long v44 = *((_OWORD *)v7 + 4);
    long long v45 = *(_OWORD *)(v7 + 88);
    long long v47 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 64];
    long long v46 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 80];
    long long v48 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 48];
    *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state
                                                 + 89];
    long long v87 = v47;
    v88[0] = v46;
    long long v86 = v48;
    long long v49 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state];
    long long v50 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 32];
    long long v84 = *(_OWORD *)&v75[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_state + 16];
    long long v85 = v50;
    long long v83 = v49;
    *CGFloat v41 = v32;
    *((void *)v41 + 1) = v33;
    v41[16] = v34;
    v41[17] = v35;
    v41[18] = v36;
    *((void *)v41 + 3) = v37;
    *((_OWORD *)v41 + 2) = v42;
    *((_OWORD *)v41 + 3) = v43;
    *((_OWORD *)v41 + 4) = v44;
    v41[80] = v38;
    v41[81] = v39;
    *(_OWORD *)(v41 + 88) = v45;
    v41[104] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007C7F0((uint64_t)&v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v51 = *(_OWORD *)v41;
    long long v52 = *((_OWORD *)v41 + 2);
    v81[1] = *((_OWORD *)v41 + 1);
    void v81[2] = v52;
    v81[0] = v51;
    long long v53 = *((_OWORD *)v41 + 3);
    long long v54 = *((_OWORD *)v41 + 4);
    long long v55 = *((_OWORD *)v41 + 5);
    *(_OWORD *)((char *)v82 + 9) = *(_OWORD *)(v41 + 89);
    v81[4] = v54;
    v82[0] = v55;
    void v81[3] = v53;
    sub_10007C7F0((uint64_t)v81);
    LOBYTE(v33) = sub_100091B68((unsigned __int8 *)v81, (unsigned __int8 *)&v83);
    sub_10007C848((uint64_t)v81);
    uint64_t v57 = v77;
    uint64_t v56 = v78;
    double v58 = v76;
    if ((v33 & 1) == 0)
    {
      id v59 = v75;
      sub_100051ADC();
      id v60 = [v59 view];
      if (!v60) {
        goto LABEL_32;
      }
      double v61 = v60;
      [v60 setNeedsLayout];
    }
    sub_10007C848((uint64_t)&v83);
    uint64_t v62 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink;
    double v63 = v79;
    CGFloat v64 = *(void **)&v79[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink];
    if (v64)
    {
      unsigned int v65 = [v64 isPaused];
      int v66 = *a1;
      if ((v65 ^ v66)) {
        return;
      }
      double v67 = *(void **)&v63[v62];
      if (v67)
      {
        [v67 setPaused:(v66 & 1) == 0];
        if (qword_10037DE38 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_10000FD84(v56, (uint64_t)qword_1003A9B80);
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v68, v56);
        a1 = v63;
        id v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v69, v70))
        {

          id v69 = a1;
          goto LABEL_29;
        }
        CGFloat v71 = (uint8_t *)swift_slowAlloc();
        id v72 = v63;
        double v73 = v71;
        *(_DWORD *)CGFloat v71 = 67109120;
        double v74 = *(void **)&v72[v62];
        if (v74)
        {
          unsigned int v80 = [v74 isPaused];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v69, v70, "Explorer rendering is paused: %{BOOL}d", v73, 8u);
          swift_slowDealloc();
LABEL_29:

          (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
          return;
        }
LABEL_34:

        __break(1u);
        return;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
}

id sub_10007BDD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConnectionAssistantViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ConnectionAssistantViewController()
{
  return self;
}

void sub_10007BF24(double a1, double a2)
{
  uint64_t v3 = v2;
  *(double *)&uint64_t v6 = COERCE_DOUBLE(sub_10007C6E0((uint64_t)v2));
  unsigned __int8 v8 = v7;
  long long v9 = &v2[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState];
  int v10 = v2[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 16];
  id v11 = [v2 view];
  if (!v11)
  {
    __break(1u);
    goto LABEL_28;
  }
  CGFloat v12 = v11;
  double v115 = a1;
  double v116 = a2;
  double v117 = *(double *)&v6;
  unsigned __int8 v118 = v8;
  uint64_t v119 = v9;
  [v11 safeAreaInsets];
  double v14 = v13;
  uint64_t v113 = v16;
  uint64_t v114 = v15;
  uint64_t v112 = v17;

  v188.origin.double x = *(CGFloat *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  double v18 = *(double *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop + 8];
  v188.size.CGFloat width = *(CGFloat *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop
                                  + 16];
  v188.size.double height = *(CGFloat *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop
                                   + 24];
  v188.origin.double y = v18;
  double Height = CGRectGetHeight(v188);
  id v20 = [v3 view];
  if (!v20)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v21 = v20;
  int v111 = v10;
  double v110 = v14 + v18 + Height;
  [v20 bounds];
  uint64_t v108 = v23;
  uint64_t v109 = v22;
  uint64_t v25 = v24;
  uint64_t v107 = v26;

  id v27 = [v3 traitCollection];
  [v27 displayScale];
  uint64_t v29 = v28;

  char v90 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics];
  uint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 8];
  uint64_t v89 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 16];
  char v86 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 24];
  uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 32];
  uint64_t v31 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 40];
  uint64_t v33 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 48];
  uint64_t v98 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 56];
  char v34 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 64];
  uint64_t v103 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 72];
  char v102 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 80];
  uint64_t v101 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 88];
  char v100 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 96];
  uint64_t v35 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 104];
  uint64_t v36 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__metrics + 112];
  char v37 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 8];
  uint64_t v87 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter];
  uint64_t v88 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 16];
  char v38 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 24];
  uint64_t v97 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 32];
  char v96 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 40];
  char v39 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 56];
  uint64_t v99 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 64];
  char v40 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 72];
  uint64_t v104 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 80];
  char v41 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 88];
  uint64_t v106 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 96];
  char v105 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 104];
  uint64_t v94 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
  uint64_t v95 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthDiameter + 48];
  uint64_t v92 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset + 16];
  uint64_t v93 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset + 8];
  uint64_t v91 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset + 24];
  char v42 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset + 32];
  long long v43 = *(char **)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController];
  char v44 = sub_10023E8C0(*(_WORD *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController__connectivity]);
  uint64_t v48 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress];
  char v49 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__skipLocationAnimation];
  long long v50 = &v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation];
  int v51 = v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation + 16];
  long long v85 = &v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation];
  if (v51 == 2)
  {
    long long v52 = v119;
    long long v50 = v119 + 88;
    long long v53 = (uint64_t *)(v119 + 96);
    LOBYTE(v51) = v119[104];
  }
  else
  {
    long long v53 = (uint64_t *)(v50 + 8);
    long long v52 = v119;
  }
  uint64_t v54 = *v53;
  uint64_t v55 = *(void *)v50;
  char v56 = v52[17];
  v140[0] = v109;
  v140[1] = v108;
  v140[2] = v25;
  v140[3] = v107;
  *(double *)&v140[4] = v110;
  v140[5] = v114;
  v140[6] = v113;
  v140[7] = v112;
  v140[8] = v29;
  char v141 = v90;
  uint64_t v142 = v30;
  uint64_t v143 = v89;
  char v144 = v86;
  uint64_t v145 = v32;
  uint64_t v146 = v31;
  uint64_t v147 = v33;
  uint64_t v148 = v98;
  char v149 = v34;
  uint64_t v150 = v103;
  char v151 = v102;
  uint64_t v152 = v101;
  char v153 = v100;
  uint64_t v154 = v35;
  uint64_t v155 = v36;
  uint64_t v156 = v87;
  char v157 = v37;
  uint64_t v158 = v88;
  char v159 = v38;
  uint64_t v160 = v97;
  char v161 = v96;
  uint64_t v162 = v95;
  char v163 = v39;
  uint64_t v164 = v99;
  char v165 = v40;
  uint64_t v166 = v104;
  char v167 = v41;
  uint64_t v168 = v106;
  char v169 = v105;
  uint64_t v170 = v94;
  uint64_t v171 = v93;
  uint64_t v172 = v92;
  uint64_t v173 = v91;
  char v174 = v42;
  char v175 = v44 & 1;
  uint64_t v57 = v45;
  uint64_t v176 = v45;
  __int16 v177 = v46 & 0x101;
  long long v178 = v47;
  uint64_t v179 = v48;
  char v180 = v49;
  uint64_t v181 = v55;
  uint64_t v182 = v54;
  char v183 = v51;
  double v184 = v117;
  unsigned __int8 v185 = v118;
  BOOL v186 = v111 != 9;
  char v187 = v56;
  sub_100012E24((uint64_t)v140, __src, v115, v116);
  uint64_t v58 = *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__earthViewController];
  memcpy((void *)(v58 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_earth), __src, 0x203uLL);
  memcpy(__dst, v123, 0x180uLL);
  sub_10007C7E8((uint64_t)__dst);
  sub_100053360((uint64_t)__dst, v58 + OBJC_IVAR____TtC8SOSBuddy38ConnectionAssistantEarthViewController_camera);
  double v59 = v124;
  double v60 = v125;
  double v61 = (double *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation];
  double v63 = *(double *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation];
  double v62 = *(double *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_centerLocation + 8];
  double *v61 = v124;
  v61[1] = v60;
  if (v59 != v63 || v60 != v62)
  {
    id v64 = [v43 view:v85];
    if (!v64)
    {
LABEL_30:
      __break(1u);
      return;
    }
    unsigned int v65 = v64;
    [v64 setNeedsLayout];
  }
  int v66 = (double *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_target];
  double v67 = *(double *)&v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_target];
  int v68 = v43[OBJC_IVAR____TtC8SOSBuddy43ConnectionAssistantConnectionViewController_target + 8];
  *int v66 = v117;
  *((unsigned char *)v66 + 8) = v118;
  if (v118 != 4)
  {
    if (v68 != 4 && v67 == v117 && v68 == v118) {
      goto LABEL_16;
    }
LABEL_14:
    sub_100051ADC();
    id v69 = [v43 view];
    if (v69)
    {
      os_log_type_t v70 = v69;
      [v69 setNeedsLayout];

      goto LABEL_16;
    }
    goto LABEL_29;
  }
  if (v68 != 4) {
    goto LABEL_14;
  }
LABEL_16:
  int v71 = v85[16];
  if (v71 != 2 && (v126 & 1) != 0)
  {
    long long v120 = *(_OWORD *)v85;
    char v72 = v71 & 1;
    if (qword_10037DDC8 != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    sub_10000FD84(v73, (uint64_t)qword_1003A9A30);
    double v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      CGFloat v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Location animation finished", v76, 2u);
      swift_slowDealloc();
    }

    v3[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAnimationFinished] = 1;
    *(void *)long long v85 = 0;
    *((void *)v85 + 1) = 0;
    v85[16] = 2;
    uint64_t v77 = *((void *)v52 + 1);
    char v78 = v52[16];
    char v79 = v52[17];
    char v80 = v52[18];
    uint64_t v81 = *((void *)v52 + 3);
    char v82 = v52[80];
    char v83 = v52[81];
    v127[0] = *v52;
    uint64_t v128 = v77;
    char v129 = v78;
    char v130 = v79;
    char v131 = v80;
    uint64_t v132 = v81;
    long long v84 = *((_OWORD *)v52 + 3);
    long long v133 = *((_OWORD *)v52 + 2);
    long long v134 = v84;
    long long v135 = *((_OWORD *)v52 + 4);
    char v136 = v82;
    char v137 = v83;
    long long v138 = v120;
    char v139 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007B6B8(v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10007A858();
}

uint64_t sub_10007C6E0(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__guidanceState + 80)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 72);
  if (!sub_1000790C8(3u, *(void *)(v1 + 8)) && !sub_1000790C8(1u, *(void *)(v1 + 8))) {
    sub_1000790C8(2u, *(void *)(v1 + 8));
  }
  return v2;
}

void sub_10007C770(void *a1)
{
  [a1 targetTimestamp];
  double v3 = v2;
  [a1 targetTimestamp];
  double v5 = v4;
  [a1 timestamp];

  sub_10007BF24(v3, v5 - v6);
}

uint64_t sub_10007C7E8(uint64_t result)
{
  *(unsigned char *)(result + 384) = 0;
  return result;
}

uint64_t sub_10007C7F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10007C848(uint64_t a1)
{
  return a1;
}

double sub_10007C8A0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_10007C8BC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007C8F4()
{
  return sub_10007A350(*(void *)(v0 + 16));
}

uint64_t sub_10007C8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007C90C()
{
  return swift_release();
}

unint64_t sub_10007C914()
{
  unint64_t result = qword_100383A00;
  if (!qword_100383A00)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383A00);
  }
  return result;
}

uint64_t sub_10007C96C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__viewDidLoadCallback);
  swift_retain();
  v2(v1);

  return swift_release();
}

void sub_10007C9CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayMetrics;
  type metadata accessor for ConnectionAssistantDisplayState();
  swift_allocObject();
  *(void *)&v0[v2] = sub_1000154C0();
  v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAnimationFinished] = 0;
  double v3 = &v0[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__animateToLocation];
  *(void *)double v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 2;
  uint64_t v4 = OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__connectionViewController;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)type metadata accessor for ConnectionAssistantConnectionViewController()) init];
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__innerShadowView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__locationAssertion] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress] = 0;
  double v5 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending];
  *(void *)double v5 = 0;
  v5[8] = 1;
  double v6 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__obstructedAreaAtTheTop];
  *(_OWORD *)double v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  unsigned __int8 v7 = &v1[OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__topInset];
  v7[32] = 0;
  *(_OWORD *)unsigned __int8 v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t destroy for TryOutMessageEntryView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for TryOutMessageEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutMessageEntryView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TryOutMessageEntryView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutMessageEntryView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutMessageEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutMessageEntryView()
{
  return &type metadata for TryOutMessageEntryView;
}

ValueMetadata *type metadata accessor for TryOutMessageEntryViewHeader()
{
  return &type metadata for TryOutMessageEntryViewHeader;
}

uint64_t sub_10007CE84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007CEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_100004010(&qword_100382780);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = sub_100004010(&qword_100382788);
  uint64_t v6 = __chkstk_darwin(v42);
  unsigned __int8 v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  int v10 = &v40[-v9];
  uint64_t v11 = sub_100004010(&qword_100382790);
  __chkstk_darwin(v11 - 8);
  double v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100004010(&qword_100382798);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100004010(&qword_1003827A0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = &v40[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v23 = &v40[-v22];
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v25 = *(void *)(v24 + 96);
    if (v25 && (uint64_t v26 = *(void *)(v25 + 16)) != 0 && *(unsigned char *)(v26 + 16) == 2)
    {
      *(void *)double v13 = static VerticalAlignment.center.getter();
      *((void *)v13 + 1) = 0;
      unsigned char v13[16] = 1;
      uint64_t v27 = sub_100004010(&qword_1003827C0);
      sub_10007D334((_OWORD *)a1, &v13[*(int *)(v27 + 44)]);
      int v41 = static Edge.Set.bottom.getter();
      sub_10000D2A0((uint64_t)v13, (uint64_t)v17, &qword_100382790);
      uint64_t v28 = &v17[*(int *)(v14 + 36)];
      *uint64_t v28 = v41;
      *(_OWORD *)(v28 + 8) = 0u;
      *(_OWORD *)(v28 + 24) = 0u;
      v28[40] = 1;
      sub_10000950C((uint64_t)v13, &qword_100382790);
      sub_10000D544((uint64_t)v17, (uint64_t)v23, &qword_100382798);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(&v40[-v22], 1, 1, v14);
    }
    *(void *)uint64_t v5 = static VerticalAlignment.firstTextLineCenter.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    uint64_t v29 = sub_100004010(&qword_1003827B0);
    sub_10007E0BC(a1, (uint64_t *)&v5[*(int *)(v29 + 44)]);
    char v30 = static Edge.Set.all.getter();
    sub_10000D2A0((uint64_t)v5, (uint64_t)v8, &qword_100382780);
    uint64_t v31 = &v8[*(int *)(v42 + 36)];
    *uint64_t v31 = v30;
    *(_OWORD *)(v31 + 8) = xmmword_1002B5660;
    __asm { FMOV            V0.2D, #8.0 }
    *(_OWORD *)(v31 + 24) = _Q0;
    v31[40] = 0;
    sub_10000950C((uint64_t)v5, &qword_100382780);
    sub_10000D544((uint64_t)v8, (uint64_t)v10, &qword_100382788);
    sub_10000D2A0((uint64_t)v23, (uint64_t)v21, &qword_1003827A0);
    sub_10000D2A0((uint64_t)v10, (uint64_t)v8, &qword_100382788);
    uint64_t v37 = v43;
    sub_10000D2A0((uint64_t)v21, v43, &qword_1003827A0);
    uint64_t v38 = sub_100004010(&qword_1003827B8);
    sub_10000D2A0((uint64_t)v8, v37 + *(int *)(v38 + 48), &qword_100382788);
    sub_10000950C((uint64_t)v10, &qword_100382788);
    sub_10000950C((uint64_t)v23, &qword_1003827A0);
    sub_10000950C((uint64_t)v8, &qword_100382788);
    return sub_10000950C((uint64_t)v21, &qword_1003827A0);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_100081474(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10007D334@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v101 = type metadata accessor for KeyboardShortcut();
  uint64_t v104 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v98 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for ButtonBorderShape();
  uint64_t v103 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v89 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned __int8 v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100380E00);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004010(&qword_100381AE8);
  uint64_t v102 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004010(&qword_100381AF0);
  __chkstk_darwin(v93);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004010(&qword_100381AF8);
  uint64_t v100 = *(void *)(v95 - 8);
  uint64_t v17 = __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  char v90 = (char *)&v69 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v94 = (char *)&v69 - v22;
  __chkstk_darwin(v21);
  uint64_t v99 = (char *)&v69 - v23;
  long long v24 = *a1;
  long long v106 = a1[1];
  long long v107 = v24;
  long long v105 = a1[2];
  uint64_t v25 = (_OWORD *)swift_allocObject();
  char v82 = a1;
  long long v26 = a1[1];
  v25[1] = *a1;
  v25[2] = v26;
  v25[3] = a1[2];
  sub_10004ED30((uint64_t)&v107);
  sub_10004ED30((uint64_t)&v106);
  sub_10004ED30((uint64_t)&v105);
  id v69 = v12;
  Button.init(action:label:)();
  os_log_type_t v70 = v8;
  BorderedProminentButtonStyle.init()();
  uint64_t v88 = sub_100009B18(&qword_100380E08, &qword_100380E00);
  uint64_t v87 = sub_100081474(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v75 = v9;
  uint64_t v81 = v5;
  View.buttonStyle<A>(_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v85 = v6 + 8;
  char v86 = v27;
  v27(v8, v5);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v83 = v10 + 8;
  long long v84 = v28;
  v28(v12, v9);
  uint64_t v29 = v89;
  static ButtonBorderShape.capsule.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t *)&v16[*(int *)(v93 + 36)];
  uint64_t v80 = sub_100004010(&qword_100381038);
  uint64_t v32 = (char *)v31 + *(int *)(v80 + 28);
  uint64_t v33 = v103;
  char v34 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v78 = v103 + 16;
  char v79 = v34;
  uint64_t v35 = v97;
  v34(v32, v29, v97);
  *uint64_t v31 = KeyPath;
  uint64_t v36 = v102;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v102 + 16);
  uint64_t v37 = v96;
  v77(v16, v14, v96);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v103 = v33 + 8;
  CGFloat v76 = v38;
  v38(v29, v35);
  char v39 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v102 = v36 + 8;
  double v74 = v39;
  char v40 = v14;
  v39(v14, v37);
  int v41 = v98;
  static KeyboardShortcut.defaultAction.getter();
  unint64_t v73 = sub_100054C70();
  uint64_t v42 = v94;
  View.keyboardShortcut(_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v104 + 8);
  v104 += 8;
  char v72 = v43;
  v43(v41, v101);
  uint64_t v44 = (uint64_t)v16;
  sub_10000950C((uint64_t)v16, &qword_100381AF0);
  int v71 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
  v71(v99, v42, v95);
  long long v45 = (_OWORD *)swift_allocObject();
  __int16 v46 = v82;
  long long v47 = v82[1];
  v45[1] = *v82;
  v45[2] = v47;
  v45[3] = v46[2];
  sub_10004ED30((uint64_t)&v107);
  sub_10004ED30((uint64_t)&v106);
  sub_10004ED30((uint64_t)&v105);
  uint64_t v48 = v69;
  Button.init(action:label:)();
  char v49 = v70;
  BorderedProminentButtonStyle.init()();
  uint64_t v50 = v75;
  uint64_t v51 = v81;
  View.buttonStyle<A>(_:)();
  v86(v49, v51);
  v84(v48, v50);
  static ButtonBorderShape.capsule.getter();
  uint64_t v52 = swift_getKeyPath();
  long long v53 = (uint64_t *)(v44 + *(int *)(v93 + 36));
  uint64_t v54 = v97;
  v79((char *)v53 + *(int *)(v80 + 28), v29, v97);
  *long long v53 = v52;
  uint64_t v55 = v96;
  v77((char *)v44, v40, v96);
  v76(v29, v54);
  v74(v40, v55);
  char v56 = v98;
  static KeyboardShortcut.defaultAction.getter();
  uint64_t v57 = v90;
  View.keyboardShortcut(_:)();
  v72(v56, v101);
  sub_10000950C(v44, &qword_100381AF0);
  uint64_t v58 = v94;
  uint64_t v59 = v95;
  v71(v94, v57, v95);
  double v61 = v99;
  uint64_t v60 = v100;
  double v62 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v62(v57, v99, v59);
  double v63 = v91;
  id v64 = v58;
  v62(v91, v58, v59);
  unsigned int v65 = v92;
  v62(v92, v57, v59);
  uint64_t v66 = sub_100004010(&qword_1003827C8);
  v62(&v65[*(int *)(v66 + 48)], v63, v59);
  double v67 = *(void (**)(char *, uint64_t))(v60 + 8);
  v67(v64, v59);
  v67(v61, v59);
  v67(v63, v59);
  return ((uint64_t (*)(char *, uint64_t))v67)(v57, v59);
}

uint64_t sub_10007DDC4(void *a1)
{
  if (*a1)
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100081474((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10007DEB0@<X0>(uint64_t a1@<X8>)
{
  return sub_10007E05C(a1);
}

uint64_t sub_10007DEC8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 96);
    if (v2)
    {
      uint64_t v3 = *(void *)(v2 + 16);
      if (v3)
      {
        uint64_t result = swift_unknownObjectWeakLoadStrong();
        if (result)
        {
          uint64_t v4 = result;
          char v5 = *(unsigned char *)(v3
                        + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_connected);
          type metadata accessor for MessageSimulationEngineImplementation.OnState(0);
          uint64_t v6 = swift_allocObject();
          swift_unknownObjectRetain();
          swift_retain();
          swift_retain();
          uint64_t v7 = sub_10029A434(v4, v5, v6);
          swift_unknownObjectRelease();
          *(void *)(v2 + 16) = v7;
          swift_release();
          if (*(void *)(v2 + 16))
          {
            swift_retain();
            sub_1000441BC();
            swift_release();
          }
          sub_100299248();
          swift_release();
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_100081474(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10007E040@<X0>(uint64_t a1@<X8>)
{
  return sub_10007E05C(a1);
}

uint64_t sub_10007E05C@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10007E0BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_1003827D0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v73 = (char *)&v72 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v72 - v14;
  uint64_t v16 = *(void *)(a1 + 32);
  if (v16)
  {
    uint64_t v89 = *(void *)(a1 + 32);
    id v17 = *(id *)(v16 + 112);
    UIContentSizeCategory v90 = UIContentSizeCategoryAccessibilityExtraLarge;
    char v18 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v79 = v8;
    uint64_t v78 = v11;
    uint64_t v88 = v15;
    uint64_t v76 = v4;
    if (v18)
    {
      uint64_t v77 = 0;
      uint64_t v75 = 0;
      uint64_t v87 = 0;
      uint64_t v74 = 0;
    }
    else
    {
      Image.init(systemName:)();
      uint64_t v19 = Text.init(_:)();
      uint64_t v21 = v20;
      char v23 = v22 & 1;
      static Font.footnote.getter();
      uint64_t v77 = Text.font(_:)();
      uint64_t v75 = v24;
      char v26 = v25;
      uint64_t v74 = v27;
      swift_release();
      uint64_t v87 = v26 & 1;
      sub_100033364(v19, v21, v23);
      swift_bridgeObjectRelease();
    }
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v28 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    static Font.footnote.getter();
    static Font.Weight.bold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v85 = Text.font(_:)();
    uint64_t v84 = v33;
    int v83 = v34;
    uint64_t v36 = v35;
    swift_release();
    sub_100033364(v28, v30, v32);
    swift_bridgeObjectRelease();
    uint64_t v37 = v89;
    id v38 = *(id *)(v89 + 112);
    LOBYTE(v30) = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v40 = *(id *)(v37 + 112);
    static Alignment.center.getter();
    char v41 = static UIContentSizeCategory.>= infix(_:_:)();
    uint64_t v81 = a2;
    uint64_t v80 = v7;
    char v86 = v6;
    BOOL v82 = (v30 & 1) == 0;
    if (v41 & 1) != 0 && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)()))
    {
      uint64_t v42 = KeyPath;
      uint64_t v43 = v36;
      static Alignment.leading.getter();
    }
    else
    {
      uint64_t v42 = KeyPath;
      uint64_t v43 = v36;
    }

    _FrameLayout.init(width:height:alignment:)();
    uint64_t v44 = v106;
    char v45 = v107;
    uint64_t v46 = v108;
    char v47 = v109;
    uint64_t v49 = v110;
    uint64_t v48 = v111;
    id v50 = *(id *)(v89 + 112);
    char v51 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v51) {
      double v52 = 1.0;
    }
    else {
      double v52 = 0.5;
    }
    uint64_t v53 = swift_getKeyPath();
    uint64_t v91 = v85;
    uint64_t v92 = v84;
    char v93 = v83 & 1;
    uint64_t v94 = v43;
    uint64_t v95 = v42;
    BOOL v96 = v82;
    uint64_t v97 = v44;
    char v98 = v45;
    uint64_t v99 = v46;
    char v100 = v47;
    uint64_t v101 = v49;
    uint64_t v102 = v48;
    uint64_t v103 = v53;
    double v104 = v52;
    __int16 v105 = 256;
    uint64_t v54 = enum case for DynamicTypeSize.xxxLarge(_:);
    uint64_t v55 = type metadata accessor for DynamicTypeSize();
    uint64_t v56 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v86, v54, v55);
    sub_100081474(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      sub_100004010(&qword_1003827D8);
      sub_10008104C(&qword_1003827E0, &qword_1003827D8, (void (*)(void))sub_10008083C);
      sub_100009B18(&qword_10037F030, &qword_10037F010);
      uint64_t v57 = v73;
      View.dynamicTypeSize<A>(_:)();
      sub_10000950C(v56, &qword_10037F010);
      sub_100033364(v91, v92, v93);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v58 = v79;
      uint64_t v59 = v88;
      uint64_t v60 = v80;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v88, v57, v80);
      id v61 = *(id *)(v89 + 112);
      LODWORD(v90) = static UIContentSizeCategory.>= infix(_:_:)();

      double v62 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
      double v63 = v78;
      v62(v78, v59, v60);
      id v64 = v81;
      uint64_t v65 = v77;
      uint64_t v66 = v75;
      *uint64_t v81 = v77;
      v64[1] = v66;
      uint64_t v67 = v74;
      uint64_t v64[2] = v87;
      v64[3] = v67;
      uint64_t v68 = sub_100004010(&qword_100382808);
      v62((char *)v64 + *(int *)(v68 + 48), v63, v60);
      id v69 = (char *)v64 + *(int *)(v68 + 64);
      *(void *)id v69 = 0;
      v69[8] = 0;
      v69[9] = (v90 & 1) == 0;
      LOBYTE(v68) = v87;
      sub_100080908(v65, v66, v87, v67);
      os_log_type_t v70 = *(void (**)(char *, uint64_t))(v58 + 8);
      v70(v88, v60);
      v70(v63, v60);
      return sub_10008094C(v65, v66, v68, v67);
    }
    __break(1u);
  }
  type metadata accessor for UIMetrics();
  sub_100081474((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10007E928@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  _OWORD v6[2] = v1[2];
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_100004010(&qword_100382778);
  return sub_10007CEA0((uint64_t)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_10007E988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v77);
  uint64_t v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100382810);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_100382818);
  __chkstk_darwin(v74);
  uint64_t v9 = (uint64_t *)((char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = type metadata accessor for LayoutDirection();
  uint64_t v10 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100382820);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100382828);
  __chkstk_darwin(v15);
  id v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_100382830);
  uint64_t v19 = __chkstk_darwin(v18);
  char v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)v1;
  if (*(void *)v1)
  {
    uint64_t v24 = *(void *)(v23 + 96);
    uint64_t v84 = v19;
    uint64_t v85 = a1;
    uint64_t v82 = v15;
    int v83 = v17;
    uint64_t v80 = v22;
    uint64_t v81 = v20;
    uint64_t v78 = v23;
    uint64_t v79 = v4;
    if (v24 && (uint64_t v25 = *(void *)(v24 + 16)) != 0)
    {
      if (*(unsigned char *)(v25 + 16) == 2)
      {
        char v26 = 1;
      }
      else
      {
        uint64_t v27 = v25
            + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress;
        swift_beginAccess();
        char v26 = *(void *)(*(void *)v27 + 16) > 0x3FuLL;
      }
    }
    else
    {
      char v26 = 0;
    }
    *(void *)uint64_t v14 = static VerticalAlignment.bottom.getter();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    uint64_t v28 = &v14[*(int *)(sub_100004010(&qword_100382838) + 44)];
    uint64_t v29 = static Alignment.bottom.getter();
    uint64_t v31 = v30;
    sub_10007F144(v1, v26, (uint64_t)v87);
    long long v99 = v87[10];
    long long v100 = v87[11];
    long long v101 = v87[12];
    long long v95 = v87[6];
    long long v96 = v87[7];
    long long v97 = v87[8];
    long long v98 = v87[9];
    long long v91 = v87[2];
    long long v92 = v87[3];
    long long v93 = v87[4];
    long long v94 = v87[5];
    long long v89 = v87[0];
    long long v90 = v87[1];
    *(void *)&long long v88 = v29;
    *((void *)&v88 + 1) = v31;
    uint64_t KeyPath = swift_getKeyPath();
    int v34 = v75;
    uint64_t v33 = v76;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v75, enum case for LayoutDirection.leftToRight(_:), v76);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v9 + *(int *)(v74 + 28), v34, v33);
    *uint64_t v9 = KeyPath;
    uint64_t v35 = sub_100004010(&qword_100382840);
    sub_10000D2A0((uint64_t)v9, (uint64_t)&v28[*(int *)(v35 + 36)], &qword_100382818);
    long long v36 = v99;
    *((_OWORD *)v28 + 10) = v98;
    *((_OWORD *)v28 + 11) = v36;
    long long v37 = v101;
    *((_OWORD *)v28 + 12) = v100;
    *((_OWORD *)v28 + 13) = v37;
    long long v38 = v95;
    *((_OWORD *)v28 + 6) = v94;
    *((_OWORD *)v28 + 7) = v38;
    long long v39 = v97;
    *((_OWORD *)v28 + 8) = v96;
    *((_OWORD *)v28 + 9) = v39;
    long long v40 = v91;
    *((_OWORD *)v28 + 2) = v90;
    *((_OWORD *)v28 + 3) = v40;
    long long v41 = v93;
    *((_OWORD *)v28 + 4) = v92;
    *((_OWORD *)v28 + 5) = v41;
    long long v42 = v89;
    *(_OWORD *)uint64_t v28 = v88;
    *((_OWORD *)v28 + 1) = v42;
    sub_100080998((uint64_t)&v88);
    sub_10000950C((uint64_t)v9, &qword_100382818);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v33);
    sub_100080A68((uint64_t)v87);
    uint64_t v43 = v79;
    uint64_t v44 = (char *)v79 + *(int *)(v77 + 20);
    uint64_t v45 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v46 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v44, v45, v46);
    __asm { FMOV            V0.2D, #20.0 }
    _OWORD *v43 = _Q0;
    if (qword_10037DCD8 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_1003A9870;
    swift_retain();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    sub_100034580((uint64_t)v43, (uint64_t)v7);
    uint64_t v53 = &v7[*(int *)(sub_100004010(&qword_100382848) + 36)];
    long long v54 = v103;
    *(_OWORD *)uint64_t v53 = v102;
    *((_OWORD *)v53 + 1) = v54;
    *((void *)v53 + 4) = v104;
    uint64_t v55 = sub_100004010(&qword_100382850);
    *(void *)&v7[*(int *)(v55 + 52)] = v52;
    *(_WORD *)&v7[*(int *)(v55 + 56)] = 256;
    uint64_t v56 = static Alignment.center.getter();
    uint64_t v58 = v57;
    uint64_t v59 = (uint64_t *)&v7[*(int *)(sub_100004010(&qword_100382858) + 36)];
    uint64_t *v59 = v56;
    v59[1] = v58;
    sub_1000345E4((uint64_t)v43);
    uint64_t v60 = static Alignment.center.getter();
    uint64_t v62 = v61;
    uint64_t v63 = (uint64_t)v83;
    uint64_t v64 = (uint64_t)&v83[*(int *)(v82 + 36)];
    sub_10000D2A0((uint64_t)v7, v64, &qword_100382810);
    uint64_t v65 = (uint64_t *)(v64 + *(int *)(sub_100004010(&qword_100382860) + 36));
    uint64_t *v65 = v60;
    v65[1] = v62;
    sub_10000D2A0((uint64_t)v14, v63, &qword_100382820);
    sub_10000950C((uint64_t)v7, &qword_100382810);
    sub_10000950C((uint64_t)v14, &qword_100382820);
    uint64_t v66 = *(void *)(v78 + 96);
    if (v66)
    {
      uint64_t v67 = *(void *)(v66 + 16);
      uint64_t v68 = v85;
      if (v67) {
        LOBYTE(v67) = *(unsigned char *)(v67 + 16);
      }
    }
    else
    {
      LOBYTE(v67) = 3;
      uint64_t v68 = v85;
    }
    char v86 = v67;
    uint64_t v69 = swift_allocObject();
    long long v70 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v69 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v69 + 64) = v70;
    *(_OWORD *)(v69 + 80) = *(_OWORD *)(v1 + 64);
    *(void *)(v69 + 96) = *(void *)(v1 + 80);
    long long v71 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v69 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v69 + 32) = v71;
    sub_100080B40(v1);
    sub_100004010(&qword_100382868);
    sub_100080BC0();
    sub_100080C84();
    uint64_t v72 = v80;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10000950C(v63, &qword_100382828);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v81 + 32))(v68, v72, v84);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_100081474(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

__n128 sub_10007F144@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = static VerticalAlignment.center.getter();
  sub_10007F248(a2, &v20);
  uint64_t v7 = *(void *)v21;
  long long v18 = *(_OWORD *)&v21[8];
  __n128 v19 = v20;
  long long v16 = *(_OWORD *)&v22[16];
  long long v17 = *(_OWORD *)v22;
  uint64_t v8 = static VerticalAlignment.center.getter();
  sub_10007F318(a1, a2, (uint64_t)&v20);
  __n128 result = v20;
  long long v10 = *(_OWORD *)v21;
  uint64_t v11 = *(void *)&v21[16];
  char v12 = v22[0];
  uint64_t v13 = v23;
  long long v14 = *(_OWORD *)&v22[8];
  long long v15 = *(_OWORD *)&v22[24];
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(__n128 *)(a3 + 24) = v19;
  *(void *)(a3 + 40) = v7;
  *(_OWORD *)(a3 + 48) = v18;
  *(_OWORD *)(a3 + 64) = v17;
  *(_OWORD *)(a3 + 80) = v16;
  *(void *)(a3 + 96) = v8;
  *(void *)(a3 + 104) = 0;
  *(unsigned char *)(a3 + 112) = 1;
  *(__n128 *)(a3 + 120) = result;
  *(_OWORD *)(a3 + 136) = v10;
  *(void *)(a3 + 152) = v11;
  *(unsigned char *)(a3 + 160) = v12;
  *(_OWORD *)(a3 + 168) = v14;
  *(_OWORD *)(a3 + 184) = v15;
  *(void *)(a3 + 200) = v13;
  return result;
}

__n128 sub_10007F248@<Q0>(char a1@<W1>, __n128 *a2@<X8>)
{
  sub_100004010(&qword_100382890);
  State.projectedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  __n128 result = v7;
  *a2 = v7;
  a2[1].n128_u64[0] = v8;
  a2[1].n128_u64[1] = v9;
  a2[2].n128_u64[0] = KeyPath;
  a2[2].n128_u64[1] = (unint64_t)sub_1000814F8;
  a2[3].n128_u64[0] = v5;
  a2[3].n128_u64[1] = (unint64_t)ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
  a2[4].n128_u64[0] = 0;
  return result;
}

uint64_t sub_10007F318@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  long long v14 = *(_OWORD *)(a1 + 40);
  sub_100004010(&qword_100382890);
  State.projectedValue.getter();
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v6 + 96) = *(void *)(a1 + 80);
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v8;
  if (a2)
  {
    sub_100080B40(a1);
    BOOL v9 = 1;
  }
  else
  {
    sub_100080B40(a1);
    State.wrappedValue.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = HIBYTE(*((void *)&v14 + 1)) & 0xFLL;
    if ((*((void *)&v14 + 1) & 0x2000000000000000) == 0) {
      uint64_t v10 = v14 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v9 = v10 == 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v9;
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v17;
  *(void *)(a3 + 24) = v18;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  *(void *)(a3 + 48) = sub_100080D64;
  *(void *)(a3 + 56) = v6;
  *(void *)(a3 + 64) = KeyPath;
  *(void *)(a3 + 72) = sub_100080D84;
  *(void *)(a3 + 80) = v12;
  swift_retain();
  swift_retain();
  swift_release();
  return swift_release();
}

uint64_t sub_10007F4B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = ((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)a1)
  {
    uint64_t v6 = *(void *)(*(void *)a1 + 96);
    if (v6)
    {
      swift_retain();
      UUID.init()();
      long long v12 = *(_OWORD *)(a1 + 64);
      uint64_t v13 = *(void *)(a1 + 80);
      sub_100004010(&qword_100382890);
      State.wrappedValue.getter();
      uint64_t v7 = v11;
      if (*(void *)(v6 + 16))
      {
        uint64_t v8 = v10;
        swift_retain();
        sub_100044850(v5, v8, v7, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(NSObject *, uint64_t))(v3 + 8))(v5, v2);
    }
    long long v12 = *(_OWORD *)(a1 + 64);
    uint64_t v13 = *(void *)(a1 + 80);
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_100004010(&qword_100382890);
    return State.wrappedValue.setter();
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_100081474(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_10007F6B8(uint64_t a1, unsigned char *a2)
{
  if (*a2 == 2)
  {
    if (qword_10037DDC0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000FD84(v2, (uint64_t)qword_1003A9A18);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Transcript is finished, clearing the state", v5, 2u);
      swift_slowDealloc();
    }

    sub_100004010(&qword_100382890);
    State.wrappedValue.setter();
  }
}

uint64_t sub_10007F7DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10007E988(a1);
}

uint64_t sub_10007F828()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F848()
{
  return sub_10007DDC4((void *)(v0 + 16));
}

uint64_t sub_10007F850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v63 = a5;
  uint64_t v64 = a1;
  uint64_t v6 = sub_100004010(&qword_100382910);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v60 = v7;
  __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100382918);
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004010(&qword_100380A00);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  long long v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_100380A08);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_100382920);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  __n128 v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_100382928);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v54 = (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = [self mainBundle];
  v76._uint64_t countAndFlagsBits = 0xD000000000000055;
  v76._object = (void *)0x80000001002CB0C0;
  v25._object = (void *)0x80000001002CB0A0;
  v25._uint64_t countAndFlagsBits = 0xD000000000000011;
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v76);

  Swift::String v75 = v27;
  uint64_t v67 = v64;
  uint64_t v68 = v65;
  uint64_t v69 = v66;
  uint64_t v70 = a4;
  uint64_t v52 = sub_100004010(&qword_100387430);
  Binding.projectedValue.getter();
  sub_100033310();
  TextField<>.init<A>(_:text:axis:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v55;
  uint64_t v30 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v16, v12, v56);
  uint64_t v31 = &v16[*(int *)(v14 + 44)];
  *(void *)uint64_t v31 = KeyPath;
  *((void *)v31 + 1) = 5;
  v31[16] = 0;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  LOBYTE(v12) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v16, (uint64_t)v20, &qword_100380A08);
  char v32 = &v20[*(int *)(v18 + 44)];
  *char v32 = (char)v12;
  *(_OWORD *)(v32 + 8) = xmmword_1002B5670;
  *(_OWORD *)(v32 + 24) = xmmword_1002B5680;
  v32[40] = 0;
  sub_10000950C((uint64_t)v16, &qword_100380A08);
  uint64_t v33 = static Font.body.getter();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = v54;
  sub_10000D2A0((uint64_t)v20, v54, &qword_100382920);
  long long v36 = (uint64_t *)(v35 + *(int *)(v22 + 44));
  *long long v36 = v34;
  v36[1] = v33;
  sub_10000950C((uint64_t)v20, &qword_100382920);
  uint64_t v38 = v64;
  uint64_t v37 = v65;
  uint64_t v71 = v64;
  uint64_t v72 = v65;
  uint64_t v39 = v66;
  uint64_t v40 = v53;
  uint64_t v73 = v66;
  uint64_t v74 = v53;
  Binding.wrappedValue.getter();
  uint64_t v71 = v67;
  uint64_t v72 = v68;
  long long v41 = v58;
  Sequence.publisher.getter();
  swift_bridgeObjectRelease();
  long long v42 = v57;
  uint64_t v43 = v59;
  Publishers.Sequence.collect()();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v43);
  uint64_t v44 = (uint64_t (*)())swift_allocObject();
  *((void *)v44 + 2) = v38;
  *((void *)v44 + 3) = v37;
  *((void *)v44 + 4) = v39;
  *((void *)v44 + 5) = v40;
  uint64_t v45 = v63;
  sub_10000D2A0(v35, v63, &qword_100382928);
  uint64_t v46 = sub_100004010(&qword_100382930);
  uint64_t v48 = v61;
  uint64_t v47 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v45 + *(int *)(v46 + 52), v42, v62);
  uint64_t v49 = (uint64_t (**)())(v45 + *(int *)(v46 + 56));
  char *v49 = sub_100081394;
  v49[1] = v44;
  id v50 = *(void (**)(char *, uint64_t))(v48 + 8);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v50(v42, v47);
  return sub_10000950C(v35, &qword_100382928);
}

uint64_t sub_10007FE6C()
{
  sub_100004010(&qword_100387430);
  Binding.wrappedValue.getter();
  uint64_t v0 = String.count.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v0 >= 161)
  {
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100382938);
    sub_100009B18(&qword_100382940, &qword_100382938);
    String.init<A>(_:)();
    return Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_10007FF90@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F850(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_10007FF9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v43 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004010(&qword_1003828F8);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_1003828E8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_100004010(&qword_1003828D0);
  __chkstk_darwin(v45);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004010(&qword_100382908);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v38 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004010(&qword_1003828C8);
  __chkstk_darwin(v39);
  long long v41 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  sub_10000D2A0((uint64_t)v5, (uint64_t)v13 + *(int *)(v11 + 44), &qword_1003828F8);
  uint64_t *v13 = v18;
  swift_retain();
  sub_10000950C((uint64_t)v5, &qword_1003828F8);
  __n128 v20 = v9;
  uint64_t v21 = v45;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  uint64_t v22 = (uint64_t)v46;
  swift_release();
  static Font.title2.getter();
  static Font.Weight.bold.getter();
  uint64_t v23 = Font.weight(_:)();
  swift_release();
  uint64_t v24 = swift_getKeyPath();
  sub_10000D2A0((uint64_t)v13, (uint64_t)v15, &qword_1003828E8);
  Swift::String v25 = (uint64_t *)&v15[*(int *)(v21 + 36)];
  *Swift::String v25 = v24;
  v25[1] = v23;
  sub_10000950C((uint64_t)v13, &qword_1003828E8);
  uint64_t v26 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v27 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v22, v26, v27);
  sub_100081474(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1000811EC();
  sub_100009B18(&qword_10037F030, &qword_10037F010);
  uint64_t v18 = (uint64_t)v38;
  View.dynamicTypeSize<A>(_:)();
  sub_10000950C(v22, &qword_10037F010);
  sub_10000950C((uint64_t)v15, &qword_1003828D0);
  if (qword_10037DCC8 != -1) {
LABEL_5:
  }
    swift_once();
  uint64_t v28 = qword_1003A9860;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v47 = v28;
  swift_retain_n();
  uint64_t v30 = AnyShapeStyle.init<A>(_:)();
  uint64_t v32 = v40;
  uint64_t v31 = (uint64_t)v41;
  uint64_t v33 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v41, v18, v42);
  swift_release();
  uint64_t v34 = (uint64_t *)(v31 + *(int *)(v39 + 36));
  *uint64_t v34 = v29;
  v34[1] = v30;
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v18, v33);
  LOBYTE(v28) = static Edge.Set.all.getter();
  uint64_t v35 = v44;
  sub_10000D2A0(v31, v44, &qword_1003828C8);
  uint64_t v36 = v35 + *(int *)(sub_100004010(&qword_1003828B0) + 36);
  *(unsigned char *)uint64_t v36 = v28;
  *(void *)(v36 + 8) = 0;
  *(void *)(v36 + 16) = 0;
  *(void *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = 0x4000000000000000;
  *(unsigned char *)(v36 + 40) = 0;
  return sub_10000950C(v31, &qword_1003828C8);
}

uint64_t sub_1000805DC()
{
  uint64_t v1 = sub_100004010(&qword_1003828A8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  sub_100004010(&qword_1003828B0);
  sub_10008104C(&qword_1003828B8, &qword_1003828B0, (void (*)(void))sub_1000810C8);
  Button.init(action:label:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_100009B18(&qword_100382900, &qword_1003828A8);
  View.accessibility(label:)();
  sub_100033364(v8, v10, v12);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100080824()
{
  return sub_10007DEC8(v0 + 16);
}

unint64_t sub_10008083C()
{
  unint64_t result = qword_1003827E8;
  if (!qword_1003827E8)
  {
    sub_1000094C4(&qword_1003827F0);
    sub_10008104C(&qword_1003827F8, &qword_100382800, (void (*)(void))sub_100033620);
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003827E8);
  }
  return result;
}

uint64_t sub_100080908(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033724(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10008094C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100033364(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100080998(uint64_t a1)
{
  return a1;
}

uint64_t sub_100080A68(uint64_t a1)
{
  return a1;
}

void sub_100080B38(uint64_t a1, unsigned char *a2)
{
}

uint64_t sub_100080B40(uint64_t a1)
{
  return a1;
}

unint64_t sub_100080BC0()
{
  unint64_t result = qword_100382870;
  if (!qword_100382870)
  {
    sub_1000094C4(&qword_100382828);
    sub_100009B18(&qword_100382878, &qword_100382820);
    sub_100009B18(&qword_100382880, &qword_100382860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382870);
  }
  return result;
}

unint64_t sub_100080C84()
{
  unint64_t result = qword_100382888;
  if (!qword_100382888)
  {
    sub_1000094C4(&qword_100382868);
    sub_100049A24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382888);
  }
  return result;
}

uint64_t sub_100080CFC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100080D64()
{
  return sub_10007F4B8(v0 + 16);
}

uint64_t sub_100080D74()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_100080D84(unsigned char *a1)
{
  return sub_100065034(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100080D8C()
{
  return _swift_deallocObject(v0, 17, 7);
}

ValueMetadata *type metadata accessor for TryOutMessageEntrySendButton()
{
  return &type metadata for TryOutMessageEntrySendButton;
}

uint64_t destroy for TryOutMessageTextFieldView()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TryOutMessageTextFieldView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TryOutMessageTextFieldView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TryOutMessageTextFieldView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TryOutMessageTextFieldView()
{
  return &type metadata for TryOutMessageTextFieldView;
}

uint64_t sub_100080F20()
{
  return sub_100009B18(&qword_100382898, &qword_1003828A0);
}

uint64_t sub_100080F5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100080FDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100080FF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100081014()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008104C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000810C8()
{
  unint64_t result = qword_1003828C0;
  if (!qword_1003828C0)
  {
    sub_1000094C4(&qword_1003828C8);
    sub_1000094C4(&qword_1003828D0);
    sub_1000094C4(&qword_10037F010);
    sub_1000811EC();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003828C0);
  }
  return result;
}

unint64_t sub_1000811EC()
{
  unint64_t result = qword_1003828D8;
  if (!qword_1003828D8)
  {
    sub_1000094C4(&qword_1003828D0);
    sub_10008128C();
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003828D8);
  }
  return result;
}

unint64_t sub_10008128C()
{
  unint64_t result = qword_1003828E0;
  if (!qword_1003828E0)
  {
    sub_1000094C4(&qword_1003828E8);
    sub_100009B18(&qword_1003828F0, &qword_1003828F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003828E0);
  }
  return result;
}

uint64_t sub_10008134C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100081394()
{
  return sub_10007FE6C();
}

unint64_t sub_1000813A4()
{
  unint64_t result = qword_100382948;
  if (!qword_100382948)
  {
    sub_1000094C4(&qword_100382950);
    sub_100009B18(&qword_100382900, &qword_1003828A8);
    sub_100081474(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100382948);
  }
  return result;
}

uint64_t sub_100081474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000814BC()
{
  return sub_100009B18(&qword_100382958, &qword_100382930);
}

uint64_t sub_1000814FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v18[0] = a2;
  uint64_t v3 = type metadata accessor for SymbolVariants();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_1003831D0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_1003831D8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = Image.init(systemName:)();
  uint64_t KeyPath = swift_getKeyPath();
  v18[1] = v14;
  uint64_t v18[2] = KeyPath;
  v18[3] = a1;
  swift_retain();
  static SymbolVariants.fill.getter();
  sub_100004010(&qword_10037F1D8);
  sub_10000C9A4();
  View.symbolVariant(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = static Color.green.getter();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  *(void *)&v13[*(int *)(v11 + 36)] = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10008486C();
  View.accessibility(hidden:)();
  return sub_10000950C((uint64_t)v13, &qword_1003831D8);
}

uint64_t sub_1000817BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1000817D0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIMetricsBannerX()
{
  return self;
}

double sub_100081804()
{
  return 4.0;
}

uint64_t sub_100081810(uint64_t a1, uint64_t a2)
{
  return sub_100082604(a1, a2, (SEL *)&selRef_systemGray2Color, (uint64_t (*)(id))&Color.init(uiColor:));
}

uint64_t sub_100081830(uint64_t a1, uint64_t a2)
{
  return sub_10008248C(a1, a2, (void (*)(uint64_t))&static Font.subheadline.getter, (void (*)(void))&static Font.Weight.medium.getter);
}

uint64_t type metadata accessor for UIMetricsSessionX()
{
  return self;
}

uint64_t sub_100081880(uint64_t a1)
{
  return sub_1000817BC(a1, (uint64_t)&off_100352790);
}

double sub_10008188C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(double *)(v17 + 16) = a3;
  *(double *)(v17 + 24) = a4;
  *(double *)(v17 + 32) = a5;
  *(double *)(v17 + 40) = a2 * 0.01;
  *(void *)(v17 + 48) = 0;
  *(void *)(v17 + 56) = 0;
  *(double *)(v17 + 64) = a2 * 0.025;
  *(void *)(v17 + 80) = 0;
  *(void *)(v17 + 88) = 0;
  *(void *)(v17 + 72) = 0;
  *(double *)(v17 + 96) = a2 * 0.04;
  *(void *)(v17 + 104) = 0;
  *(double *)(v17 + 112) = a2 * 0.09;
  *(void *)(v17 + 120) = 0;
  *(double *)(v17 + 128) = a2 * 0.025;
  *(void *)(v17 + 136) = 0;
  *(double *)(v17 + 144) = a2 * 0.03;
  double v18 = (a1 + a1 * -0.8) * 0.5;
  *(void *)(v17 + 152) = 0;
  *(double *)(v17 + 160) = v18;
  *(double *)(v17 + 168) = a2 * 0.015;
  *(double *)(v17 + 176) = v18;
  *(double *)(v17 + 184) = a6;
  *(double *)(v17 + 192) = a7;
  *(double *)(v17 + 200) = a8;
  double result = a1 * 0.835;
  *(void *)(v17 + 208) = a17;
  *(double *)(v17 + 216) = result;
  return result;
}

uint64_t sub_10008194C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIMetricsFullScreenGuidanceX()
{
  return self;
}

double sub_100081980()
{
  return 5.0;
}

uint64_t sub_100081988()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.body.getter();
  Font.bold()();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v4 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void *sub_100081AA4(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UIMetricsSessionX();
  uint64_t v6 = swift_allocObject();
  v3[6] = v5;
  v3[7] = &off_100352790;
  v3[3] = v6;
  type metadata accessor for UIMetricsBannerX();
  uint64_t v7 = swift_allocObject();
  *(double *)(v7 + 16) = a1 + -32.0;
  *(void *)(v7 + 24) = 0x405C800000000000;
  v3[2] = v7;
  type metadata accessor for UIMetricsQuestionnaire390();
  uint64_t v8 = swift_allocObject();
  *(double *)(v8 + 16) = a2 * 0.03;
  *(_OWORD *)(v8 + 24) = xmmword_1002B5A60;
  *(void *)(v8 + 40) = 0;
  *(float64x2_t *)(v8 + 48) = vmulq_n_f64((float64x2_t)xmmword_1002B5A70, a2);
  *(float64x2_t *)(v8 + 64) = vmulq_n_f64((float64x2_t)xmmword_1002B5A80, a2);
  *(_OWORD *)(v8 + 80) = xmmword_1002B5A90;
  *(void *)(v8 + 96) = 0;
  v3[8] = v8;
  type metadata accessor for UIMetricsFullScreenGuidanceX();
  uint64_t v9 = swift_allocObject();
  sub_10008188C(a1, a2, a2 * 0.49, a2 * 0.45, a2 * 0.4, 0.0, 24.0, 0.0, v9, v10, v11, v12, v13, v14, v15, v16, 0x4038000000000000);
  v3[9] = v9;
  return v3;
}

uint64_t type metadata accessor for UIMetrics390()
{
  return self;
}

uint64_t sub_100081C38@<X0>(uint64_t a1@<X8>)
{
  return sub_1000090FC(*v1 + 24, a1);
}

uint64_t sub_100081C48@<X0>(void *a1@<X8>)
{
  return sub_100082284(type metadata accessor for UIMetricsQuestionnaire390, (uint64_t)&off_100352390, a1);
}

uint64_t sub_100081C6C(uint64_t a1, uint64_t a2)
{
  return sub_1000825C0(a1, a2, (void (*)(void))&static Font.title3.getter);
}

uint64_t sub_100081C84(uint64_t a1, uint64_t a2)
{
  return sub_1000825C0(a1, a2, (void (*)(void))&static Font.largeTitle.getter);
}

uint64_t sub_100081C9C(uint64_t a1, uint64_t a2)
{
  return sub_100082604(a1, a2, (SEL *)&selRef_secondaryLabelColor, (uint64_t (*)(id))&Color.init(uiColor:));
}

double sub_100081CBC()
{
  return 44.0;
}

uint64_t sub_100081CCC(char a1)
{
  return (0x118u >> a1) & 1;
}

uint64_t sub_100081CF4(char a1)
{
  return sub_1000845D8(a1 & 1);
}

uint64_t sub_100081D00()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIMetricsQuestionnaire390()
{
  return self;
}

double sub_100081D34()
{
  return 0.0;
}

double sub_100081D4C()
{
  return 258.0;
}

double sub_100081D60()
{
  return 0.0;
}

uint64_t sub_100081D74(uint64_t a1, uint64_t a2)
{
  return sub_10008248C(a1, a2, (void (*)(uint64_t))&static Font.largeTitle.getter, (void (*)(void))&static Font.Weight.bold.getter);
}

double sub_100081DA0()
{
  return 10.0;
}

double sub_100081DA8()
{
  return 25.0;
}

uint64_t sub_100081DB4(uint64_t a1, uint64_t a2)
{
  return sub_100082378(a1, a2, (void (*)(uint64_t))&static Font.footnote.getter);
}

double sub_100081DCC()
{
  return 14.0;
}

double sub_100081DD4()
{
  return 22.0;
}

double sub_100081DDC()
{
  return *(double *)(*(void *)v0 + 48);
}

double sub_100081DE8()
{
  return 34.0;
}

double sub_100081DF4()
{
  return *(double *)(*(void *)v0 + 64);
}

double sub_100081E00()
{
  return *(double *)(*(void *)v0 + 56);
}

uint64_t sub_100081E0C(uint64_t a1, uint64_t a2)
{
  return sub_100082378(a1, a2, (void (*)(uint64_t))&static Font.body.getter);
}

double sub_100081E24()
{
  return 16.0;
}

double sub_100081E2C()
{
  return 64.0;
}

uint64_t sub_100081E38(uint64_t a1, uint64_t a2)
{
  return sub_10008248C(a1, a2, (void (*)(uint64_t))&static Font.title3.getter, (void (*)(void))&static Font.Weight.semibold.getter);
}

double sub_100081E6C()
{
  return 11.0;
}

double sub_100081E74()
{
  return 8.0;
}

double sub_100081E7C()
{
  return 24.0;
}

double sub_100081E88()
{
  return 0.0;
}

double sub_100081E9C()
{
  return 20.0;
}

double sub_100081EA4()
{
  return 32.0;
}

double sub_100081EB4()
{
  return 24.0;
}

double sub_100081EC8()
{
  return 55.0;
}

double sub_100081ED8()
{
  return 0.0;
}

double sub_100081EEC()
{
  return 24.0;
}

uint64_t sub_100081EF4(uint64_t a1, uint64_t a2)
{
  return sub_100082604(a1, a2, (SEL *)&selRef_systemGray4Color, (uint64_t (*)(id))&Color.init(uiColor:));
}

uint64_t sub_100081F14(uint64_t a1, uint64_t a2)
{
  return sub_10008248C(a1, a2, (void (*)(uint64_t))&static Font.headline.getter, (void (*)(void))&static Font.Weight.semibold.getter);
}

uint64_t sub_100081F40(uint64_t a1, uint64_t a2)
{
  return sub_10008248C(a1, a2, (void (*)(uint64_t))&static Font.subheadline.getter, (void (*)(void))&static Font.Weight.semibold.getter);
}

double sub_100081F6C()
{
  return 0.8;
}

double sub_100081F7C()
{
  return 24.0;
}

uint64_t sub_100081F90(uint64_t a1, uint64_t a2)
{
  return sub_1000825C0(a1, a2, (void (*)(void))&static Font.body.getter);
}

double sub_100081FA8()
{
  return 96.0;
}

double sub_100081FB4@<D0>(uint64_t a1@<X8>)
{
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100082014(uint64_t a1, uint64_t a2)
{
  return sub_100082604(a1, a2, (SEL *)&selRef_systemGray5Color, (uint64_t (*)(id))&Color.init(_:));
}

void *sub_10008203C(double a1, double a2)
{
  long long v3 = v2;
  uint64_t v5 = type metadata accessor for UIMetricsSessionX();
  uint64_t v6 = swift_allocObject();
  v3[6] = v5;
  v3[7] = &off_100352790;
  v3[3] = v6;
  type metadata accessor for UIMetricsBannerX();
  uint64_t v7 = swift_allocObject();
  *(double *)(v7 + 16) = a1 + -32.0;
  *(void *)(v7 + 24) = 0x405C800000000000;
  v3[2] = v7;
  type metadata accessor for UIMetricsQuestionnaire428();
  uint64_t v8 = swift_allocObject();
  *(double *)(v8 + 16) = a2 * 0.03;
  *(_OWORD *)(v8 + 24) = xmmword_1002B5A60;
  *(void *)(v8 + 40) = 0;
  *(float64x2_t *)(v8 + 48) = vmulq_n_f64((float64x2_t)xmmword_1002B5A70, a2);
  *(float64x2_t *)(v8 + 64) = vmulq_n_f64((float64x2_t)xmmword_1002B5A80, a2);
  *(_OWORD *)(v8 + 80) = xmmword_1002B5A90;
  *(void *)(v8 + 96) = 0;
  v3[8] = v8;
  type metadata accessor for UIMetricsFullScreenGuidanceX();
  uint64_t v9 = swift_allocObject();
  sub_10008188C(a1, a2, a2 * 0.5, a2 * 0.45, a2 * 0.4, 0.0, 44.0, 0.0, v9, v10, v11, v12, v13, v14, v15, v16, 0x4046000000000000);
  v3[9] = v9;
  return v3;
}

uint64_t sub_1000821A0()
{
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 24);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIMetrics428()
{
  return self;
}

uint64_t sub_100082214@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  a1[3] = type metadata accessor for UIMetricsBannerX();
  a1[4] = &off_100352870;
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_100082264@<X0>(void *a1@<X8>)
{
  return sub_100082284(type metadata accessor for UIMetricsQuestionnaire428, (uint64_t)&off_1003520A0, a1);
}

uint64_t sub_100082284@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(*(void *)v3 + 64);
  a3[3] = a1();
  a3[4] = a2;
  *a3 = v6;

  return swift_retain();
}

uint64_t sub_1000822DC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  a1[3] = type metadata accessor for UIMetricsFullScreenGuidanceX();
  a1[4] = &off_1003526A8;
  *a1 = v3;

  return swift_retain();
}

uint64_t type metadata accessor for UIMetricsQuestionnaire428()
{
  return self;
}

double sub_100082350()
{
  return 0.0;
}

double sub_100082368()
{
  return *(double *)(*(void *)v0 + 16);
}

uint64_t sub_100082378(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v6);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for Font.Leading.tight(_:), v4);
  uint64_t v9 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9;
}

uint64_t sub_10008248C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for Font.Leading();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v8);
  a4();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for Font.Leading.tight(_:), v6);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v11;
}

uint64_t sub_1000825C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  static Font.Weight.semibold.getter();
  uint64_t v3 = Font.weight(_:)();
  swift_release();
  return v3;
}

uint64_t sub_100082604(uint64_t a1, uint64_t a2, SEL *a3, uint64_t (*a4)(id))
{
  id v4 = [self *a3];

  return a4(v4);
}

uint64_t sub_100082664()
{
  uint64_t v0 = sub_100004010(&qword_10037F140);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  static Font.system(size:weight:design:)();
  sub_10000950C((uint64_t)v2, &qword_10037F140);
  uint64_t v4 = Font.bold()();
  swift_release();
  return v4;
}

double sub_10008275C()
{
  return *(double *)(*(void *)v0 + 72);
}

__n128 sub_10008276C()
{
  __n128 result = *(__n128 *)&UIEdgeInsetsZero.top;
  long long v1 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_1003A9880 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)&qword_1003A9890 = v1;
  return result;
}

uint64_t sub_100082788()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_1003831B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)type metadata accessor for AccessibilitySettingsSource());
  swift_retain();
  *(void *)(v1 + 88) = [v9 init];
  id v50 = v4;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v10 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v10 = _swiftEmptySetSingleton;
  }
  *(void *)(v1 + 96) = v10;
  *(void *)(v1 + 104) = UIContentSizeCategoryUnspecified;
  *(void *)(v1 + 112) = UIContentSizeCategoryUnspecified;
  uint64_t v49 = v1 + 96;
  uint64_t v11 = self;
  uint64_t v12 = UIContentSizeCategoryUnspecified;
  id v13 = [v11 mainScreen];
  id v14 = [v13 fixedCoordinateSpace];

  [v14 bounds];
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  swift_unknownObjectRelease();
  v53.origin.double x = v16;
  v53.origin.double y = v18;
  v53.size.CGFloat width = v20;
  v53.size.double height = v22;
  double Width = CGRectGetWidth(v53);
  id v24 = [v11 mainScreen];
  id v25 = [v24 fixedCoordinateSpace];

  [v25 bounds];
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  swift_unknownObjectRelease();
  v54.origin.double x = v27;
  v54.origin.double y = v29;
  v54.size.CGFloat width = v31;
  v54.size.double height = v33;
  double Height = CGRectGetHeight(v54);
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000FD84(v35, (uint64_t)qword_1003A9B80);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    uint64_t v48 = v8;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v39 = sub_1000FC35C(2, Width, Height);
    id v52 = (id)sub_1001B3178(v39, v40, v51);
    uint64_t v8 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Screen size = %s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (Width >= 428.0)
  {
    uint64_t v41 = type metadata accessor for UIMetrics428();
    uint64_t v42 = swift_allocObject();
    sub_10008203C(Width, Height);
    uint64_t v43 = &off_1003522E0;
  }
  else
  {
    uint64_t v41 = type metadata accessor for UIMetrics390();
    uint64_t v42 = swift_allocObject();
    sub_100081AA4(Width, Height);
    uint64_t v43 = &off_1003525D0;
  }
  *(void *)(v1 + 72) = v41;
  *(void *)(v1 + 80) = v43;
  *(void *)(v1 + 48) = v42;
  swift_release();
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  v51[0] = *(void *)(*(void *)(v1 + 88)
                     + OBJC_IVAR____TtC8SOSBuddy27AccessibilitySettingsSource_contentSizeCategoryDidChange);
  sub_10000FDBC();
  swift_retain();
  swift_retain();
  id v52 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v44 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v45 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v50, 1, 1, v44);
  sub_100004010(&qword_1003831B8);
  sub_100009B18(&qword_1003831C0, &qword_1003831B8);
  sub_100028428();
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v45, &qword_1003924A0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100009B18(&qword_1003831C8, &qword_1003831B0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100082E30(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000832E4(v1);
    return swift_release();
  }
  return result;
}

void sub_100082E98()
{
  if ((sub_100204244() & 1) == 0)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_10000FD84(v0, (uint64_t)qword_1003A9958);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to start AccessibilitySettingsSource", v3, 2u);
      swift_slowDealloc();
    }
  }
  id v4 = [self currentTraitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  sub_1000832E4(v5);
}

void sub_100082FD4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      if (qword_10037DE38 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000FD84(v10, (uint64_t)qword_1003A9B80);
      id v11 = a1;
      swift_retain_n();
      id v12 = v11;
      id v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136446466;
        type metadata accessor for UIContentSizeCategory(0);
        id v16 = v12;
        uint64_t v17 = String.init<A>(describing:)();
        sub_1001B3178(v17, v18, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2082;
        id v19 = *(id *)(v2 + 104);
        uint64_t v20 = String.init<A>(describing:)();
        sub_1001B3178(v20, v21, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "contentSizeCategory changed from: %{public}s to: %{public}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      CGFloat v22 = *(void **)(v2 + 104);
      uint64_t v23 = *(void **)(v2 + 112);
      *(void *)(v2 + 112) = v22;
      id v24 = v22;

      if (*(void *)(v2 + 32))
      {
        *(unsigned char *)(v2 + 41) = 1;
      }
      else
      {
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
      }
    }
  }
}

void sub_1000832E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + 104);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    id v12 = v4;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id v11 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      if (*(void *)(v2 + 32))
      {
        *(unsigned char *)(v2 + 40) = 1;
      }
      else
      {
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
      }
    }
  }
  id v13 = *(void **)(v2 + 104);
  *(void *)(v2 + 104) = a1;
  id v14 = a1;

  sub_100082FD4(v4);
}

void sub_100083428()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 48);

  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 112);
}

uint64_t sub_100083470()
{
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)(v0 + 6));

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIMetrics()
{
  return self;
}

ValueMetadata *type metadata accessor for AXTraits()
{
  return &type metadata for AXTraits;
}

ValueMetadata *type metadata accessor for UIMetricsConcrete()
{
  return &type metadata for UIMetricsConcrete;
}

uint64_t sub_10008351C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100083548()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100083574(uint64_t a1)
{
  switch(*(unsigned char *)(*(void *)(a1 + 48) + 120))
  {
    case 1:
    case 5:
      goto LABEL_6;
    case 2:
      return static Color.red.getter();
    case 3:
    case 4:
    case 6:
    case 7:
    case 9:
      goto LABEL_2;
    case 8:
      if (*(unsigned char *)(a1 + 56) == 1)
      {
LABEL_6:
        uint64_t result = static Color.orange.getter();
      }
      else
      {
LABEL_2:
        id v1 = [self secondaryLabelColor];
        uint64_t result = Color.init(uiColor:)();
      }
      break;
    default:
      uint64_t result = static Color.green.getter();
      break;
  }
  return result;
}

uint64_t sub_10008367C(uint64_t a1, char a2)
{
  uint64_t countAndFlagsBits = 0;
  switch(a2)
  {
    case 2:
    case 5:
      int v10 = sub_1001111C8();
      uint64_t v6 = (objc_class *)[self mainBundle];
      if (v10 == 2)
      {
        unint64_t v8 = 0xD000000000000017;
        unint64_t v7 = 0xD00000000000005FLL;
        unint64_t v17 = 0x80000001002CBBA0;
        id v11 = "Unable to send location";
      }
      else
      {
        unint64_t v8 = 0xD00000000000001ALL;
        unint64_t v7 = 0xD000000000000059;
        unint64_t v17 = 0x80000001002CBC20;
        id v11 = "Unable to send and receive";
      }
      unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      goto LABEL_16;
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
      return countAndFlagsBits;
    case 9:
      uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28));
      uint64_t v6 = (objc_class *)[self mainBundle];
      if (v12 != 100) {
        goto LABEL_14;
      }
      unint64_t v7 = 0xD00000000000003DLL;
      goto LABEL_13;
    default:
      int v4 = sub_1001111C8();
      uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28));
      uint64_t v6 = (objc_class *)[self mainBundle];
      if (v4 == 2)
      {
        if (v5 == 100)
        {
          unint64_t v7 = 0xD00000000000005CLL;
          unint64_t v17 = 0x80000001002CBD00;
          unint64_t v8 = 0x6E6F697461636F4CLL;
          unint64_t v9 = 0xED0000746E657320;
        }
        else
        {
          unint64_t v7 = 0xD00000000000005ALL;
          unint64_t v17 = 0x80000001002CBCA0;
          unint64_t v9 = 0x80000001002CBC80;
          unint64_t v8 = 0x1000000000000013;
        }
      }
      else
      {
        if (v5 != 100)
        {
LABEL_14:
          unint64_t v17 = 0x80000001002CBD60;
          unint64_t v8 = 0xE2676E69646E6553;
          unint64_t v9 = 0xAA0000000000A680;
          v13.super.Class isa = v6;
          uint64_t v14 = 0;
          unint64_t v15 = 0xE000000000000000;
          unint64_t v7 = 0xD00000000000003BLL;
          goto LABEL_17;
        }
        unint64_t v7 = 0xD00000000000003DLL;
LABEL_13:
        unint64_t v17 = 0x80000001002CBDA0;
        unint64_t v8 = 1953391955;
        unint64_t v9 = 0xE400000000000000;
      }
LABEL_16:
      v13.super.Class isa = v6;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
LABEL_17:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, v13, *(Swift::String *)&v14, *(Swift::String *)&v7)._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

uint64_t sub_100083958(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      uint64_t v2 = (objc_class *)[self mainBundle];
      goto LABEL_16;
    case 3:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v3 = 0xD000000000000029;
      unint64_t v18 = 0x80000001002CB850;
      int v10 = "Network Issues Ended Satellite Connection";
      goto LABEL_23;
    case 6:
      uint64_t v2 = (objc_class *)[self mainBundle];
      unint64_t v3 = 0xD000000000000031;
      unint64_t v18 = 0x80000001002CB850;
      int v10 = "Satellite Connection Not Supported in This Region";
      goto LABEL_23;
    case 7:
    case 0xC:
      uint64_t v9 = *(void *)&a1[*(int *)(type metadata accessor for ConnectionClosed(0) + 24)];
      if (sub_100078E0C(0, v9))
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v3 = 0xD00000000000002CLL;
        unint64_t v18 = 0x80000001002CB850;
        int v10 = "Emergency SOS via Satellite is Not Available";
      }
      else
      {
        if (sub_100078E0C(1, v9))
        {
          uint64_t v2 = (objc_class *)[self mainBundle];
          unint64_t v6 = 0xD000000000000012;
          unint64_t v3 = 0xD000000000000032;
          unint64_t v18 = 0x80000001002CB850;
          unint64_t v7 = 0x80000001002CBA30;
          unint64_t v8 = 0x80000001002C7760;
          goto LABEL_24;
        }
        char v12 = sub_100078E0C(3, v9);
        uint64_t v2 = (objc_class *)[self mainBundle];
        if (v12)
        {
          unint64_t v3 = 0xD000000000000024;
          unint64_t v18 = 0x80000001002CB850;
          int v10 = "SOS Demo Connection is Not Available";
        }
        else
        {
          unint64_t v3 = 0xD000000000000025;
          unint64_t v18 = 0x80000001002CB850;
          int v10 = "Satellite Connection is Not Available";
        }
      }
LABEL_23:
      unint64_t v7 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v6 = 0;
      unint64_t v8 = 0;
LABEL_24:
      v13.super.Class isa = v2;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      unint64_t v4 = 0xD000000000000022;
      goto LABEL_25;
    default:
      uint64_t v1 = *(void *)&a1[*(int *)(type metadata accessor for ConnectionClosed(0) + 24)];
      if (sub_100078E0C(0, v1))
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        unint64_t v3 = 0xD000000000000021;
        unint64_t v4 = 0xD000000000000037;
        unint64_t v18 = 0x80000001002CB8E0;
        uint64_t v5 = "Emergency SOS via Satellite Ended";
      }
      else
      {
        if (sub_100078E0C(1, v1))
        {
          uint64_t v2 = (objc_class *)[self mainBundle];
          unint64_t v6 = 0xD000000000000012;
          unint64_t v3 = 0xD000000000000027;
          unint64_t v4 = 0xD000000000000037;
          unint64_t v18 = 0x80000001002CB8E0;
          unint64_t v7 = 0x80000001002CBB20;
          unint64_t v8 = 0x80000001002C7760;
          goto LABEL_21;
        }
        if (sub_100078E0C(3, v1))
        {
          uint64_t v2 = (objc_class *)[self mainBundle];
          unint64_t v3 = 0xD000000000000019;
          unint64_t v4 = 0xD000000000000037;
          unint64_t v18 = 0x80000001002CB8E0;
          uint64_t v5 = "SOS Demo Connection Ended";
        }
        else
        {
          char v11 = sub_100078E0C(4, v1);
          uint64_t v2 = (objc_class *)[self mainBundle];
          if (v11)
          {
LABEL_16:
            unint64_t v3 = 0xD00000000000001BLL;
            unint64_t v4 = 0xD00000000000003ELL;
            unint64_t v18 = 0x80000001002CBAC0;
            uint64_t v5 = "Location Sent via Satellite";
          }
          else
          {
            unint64_t v3 = 0xD00000000000001ALL;
            unint64_t v4 = 0xD000000000000037;
            unint64_t v18 = 0x80000001002CB8E0;
            uint64_t v5 = "Satellite Connection Ended";
          }
        }
      }
      unint64_t v7 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v6 = 0;
      unint64_t v8 = 0;
LABEL_21:
      v13.super.Class isa = v2;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
LABEL_25:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v6, v13, *(Swift::String *)&v14, *(Swift::String *)&v4)._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

uint64_t sub_100083E74(unsigned char *a1)
{
  uint64_t countAndFlagsBits = 0;
  switch(*a1)
  {
    case 2:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD000000000000024;
      unint64_t v9 = 0x80000001002CB750;
      unint64_t v4 = "Turn off airplane mode to reconnect.";
      goto LABEL_7;
    case 7:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD000000000000024;
      unint64_t v9 = 0x80000001002CB750;
      unint64_t v4 = "Turn on location access in Settings.";
      goto LABEL_7;
    case 9:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD00000000000001CLL;
      unint64_t v9 = 0x80000001002CB750;
      unint64_t v4 = "Timed out trying to connect.";
      goto LABEL_7;
    case 0xA:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD000000000000026;
      unint64_t v9 = 0x80000001002CB750;
      unint64_t v4 = "Try again now that iPhone cooled down.";
      goto LABEL_7;
    case 0xB:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD000000000000023;
      unint64_t v9 = 0x80000001002CB750;
      unint64_t v4 = "Service is temporarily unavailable.";
LABEL_7:
      unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      unint64_t v7 = 0xD000000000000048;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v2, v6, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

      break;
    default:
      return countAndFlagsBits;
  }
  return countAndFlagsBits;
}

uint64_t sub_1000840C8(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD00000000000002CLL;
      unint64_t v11 = 0x80000001002CB850;
      unint64_t v8 = "Emergency SOS via Satellite is Not Available";
      goto LABEL_5;
    case 3:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000031;
      unint64_t v11 = 0x80000001002CB850;
      unint64_t v8 = "Satellite Connection Not Supported in This Region";
LABEL_5:
      unint64_t v4 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      v5.super.Class isa = v1;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
      unint64_t v3 = 0xD000000000000022;
      break;
    default:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD00000000000001ALL;
      unint64_t v3 = 0xD000000000000037;
      unint64_t v11 = 0x80000001002CB8E0;
      unint64_t v4 = 0x80000001002CB8C0;
      v5.super.Class isa = v1;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
      break;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100084278(char a1)
{
  uint64_t countAndFlagsBits = 0;
  switch(a1)
  {
    case 1:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xD00000000000005FLL;
      unint64_t v8 = 0x80000001002CB7C0;
      unint64_t v4 = 0x80000001002CB7A0;
      unint64_t v5 = 0xD00000000000001FLL;
      goto LABEL_4;
    case 4:
      id v2 = [self mainBundle];
      unint64_t v5 = 0xD000000000000026;
      unint64_t v3 = 0xD000000000000048;
      unint64_t v8 = 0x80000001002CB750;
      unint64_t v4 = 0x80000001002CB720;
LABEL_4:
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, (NSBundle)v2, v6, *(Swift::String *)&v3)._countAndFlagsBits;

      break;
    default:
      return countAndFlagsBits;
  }
  return countAndFlagsBits;
}

uint64_t sub_1000843C8(uint64_t a1)
{
  if (!a1)
  {
    id v2 = [self mainBundle];
LABEL_5:
    unint64_t v4 = 0xD000000000000014;
    unint64_t v3 = 0xD00000000000008ALL;
    unint64_t v12 = 0x80000001002C75D0;
    unint64_t v5 = 0x80000001002C75B0;
    goto LABEL_6;
  }
  if ((sub_100078E0C(0, a1) & 1) == 0)
  {
    if (sub_100078E0C(1, a1))
    {
      id v2 = [self mainBundle];
      unint64_t v4 = 0xD000000000000013;
      unint64_t v3 = 0xD000000000000038;
      unint64_t v12 = 0x80000001002CB630;
      unint64_t v5 = 0x80000001002C7F70;
      unint64_t v7 = 0x80000001002C7760;
      unint64_t v6 = 0xD000000000000012;
      goto LABEL_7;
    }
    char v11 = sub_100078E0C(3, a1);
    id v2 = [self mainBundle];
    if (v11)
    {
      unint64_t v3 = 0xD00000000000004ELL;
      unint64_t v12 = 0x80000001002CB6D0;
      unint64_t v5 = 0x80000001002CB6B0;
      unint64_t v4 = 0xD000000000000012;
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v2 = [self mainBundle];
  unint64_t v3 = 0xD000000000000032;
  unint64_t v12 = 0x80000001002CB670;
  unint64_t v4 = 0x636E656772656D45;
  unint64_t v5 = 0xED0000534F532079;
LABEL_6:
  unint64_t v6 = 0;
  unint64_t v7 = 0;
LABEL_7:
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v6, (NSBundle)v2, v8, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000845D8(char a1)
{
  id v2 = [self mainBundle];
  if (a1)
  {
    unint64_t v4 = 0xD000000000000013;
    unint64_t v3 = 0xD000000000000038;
    unint64_t v11 = 0x80000001002CB630;
    unint64_t v5 = 0x80000001002C7F70;
    unint64_t v7 = 0x80000001002C7760;
    unint64_t v6 = 0xD000000000000012;
  }
  else
  {
    unint64_t v3 = 0xD000000000000032;
    unint64_t v11 = 0x80000001002CB670;
    unint64_t v4 = 0x636E656772656D45;
    unint64_t v5 = 0xED0000534F532079;
    unint64_t v6 = 0;
    unint64_t v7 = 0;
  }
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v6, (NSBundle)v2, v8, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000846E4(char a1)
{
  id v2 = [self mainBundle];
  if (a1)
  {
    unint64_t v3 = 0xD00000000000005BLL;
    unint64_t v9 = 0x80000001002CB5D0;
    unint64_t v4 = 0x80000001002CB5A0;
    unint64_t v5 = 0x1000000000000020;
  }
  else
  {
    unint64_t v3 = 0xD000000000000063;
    unint64_t v9 = 0x80000001002CB530;
    unint64_t v4 = 0x80000001002CB500;
    unint64_t v5 = 0xD000000000000021;
  }
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, (NSBundle)v2, v6, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000847D4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008480C(void **a1)
{
  return sub_100082E30(a1);
}

uint64_t sub_100084814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100084840()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_10008486C()
{
  unint64_t result = qword_1003831E0;
  if (!qword_1003831E0)
  {
    sub_1000094C4(&qword_1003831D8);
    sub_1000094C4(&qword_10037F1D8);
    sub_10000C9A4();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003831E8, &qword_1003831F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003831E0);
  }
  return result;
}

double sub_100084940()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  id v2 = [v1 fixedCoordinateSpace];

  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  swift_unknownObjectRelease();
  v23.origin.double x = v4;
  v23.origin.double y = v6;
  v23.size.CGFloat width = v8;
  v23.size.double height = v10;
  double Width = CGRectGetWidth(v23);
  id v12 = [v0 mainScreen];
  id v13 = [v12 fixedCoordinateSpace];

  [v13 bounds];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  swift_unknownObjectRelease();
  v24.origin.double x = v15;
  v24.origin.double y = v17;
  v24.size.CGFloat width = v19;
  v24.size.double height = v21;
  CGRectGetHeight(v24);
  return Width;
}

uint64_t sub_100084A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self imageNamed:v4];

    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }

  return Image.init(_:bundle:)();
}

ValueMetadata *type metadata accessor for UIMetrics.ImageNameWithFallback()
{
  return &type metadata for UIMetrics.ImageNameWithFallback;
}

uint64_t sub_100084B8C(uint64_t a1)
{
  *(void *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(unsigned char *)(v1 + 80) = 1;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  *(void *)(v1 + 88) = 0;
  *(_WORD *)(v1 + 112) = 769;
  *(_DWORD *)(v1 + 114) = 0;
  *(_WORD *)(v1 + 118) = 2;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_100084BD0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LinkState(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  CGFloat v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100383910);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  CGFloat v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v22 - v11;
  sub_10000D2A0(a1, (uint64_t)&v22 - v11, (uint64_t *)&unk_100383910);
  id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v13(v12, 1, v3) == 1)
  {
    uint64_t result = sub_10000950C((uint64_t)v12, (uint64_t *)&unk_100383910);
    int v15 = 2;
  }
  else
  {
    int v15 = v12[1];
    uint64_t result = sub_100088264((uint64_t)v12, type metadata accessor for LinkState);
  }
  int v16 = *(unsigned __int8 *)(v1 + 118);
  if (v16 != 2 && (v16 & 1) != 0 && v15 != 2 && (v15 & 1) == 0)
  {
    uint64_t v18 = *(void *)(v1 + 24);
    if (v18)
    {
      uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lostSyncTimes);
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20)
      {
        __break(1u);
        return result;
      }
      *(void *)(v18 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lostSyncTimes) = v21;
    }
  }
  *(unsigned char *)(v1 + 118) = v15;
  sub_10000D2A0(a1, (uint64_t)v10, (uint64_t *)&unk_100383910);
  if (v13(v10, 1, v3) == 1) {
    return sub_10000950C((uint64_t)v10, (uint64_t *)&unk_100383910);
  }
  sub_100088200((uint64_t)v10, (uint64_t)v6);
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    sub_100086310((uint64_t)v6);
    swift_release();
  }
  return sub_100088264((uint64_t)v6, type metadata accessor for LinkState);
}

uint64_t sub_100084E3C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow))
  {
    uint64_t v5 = 0;
    *(unsigned char *)(v1 + 113) = 3;
LABEL_9:
    long long v4 = 0uLL;
    char v6 = 1;
    goto LABEL_10;
  }
  if ((*(unsigned char *)(a1 + 66) & 1) != 0 || (int v3 = *(unsigned __int8 *)(a1 + 64), v3 == 4)) {
    LOBYTE(v3) = 3;
  }
  *(unsigned char *)(v1 + 113) = v3;
  if (*(unsigned char *)(a1 + 66))
  {
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  long long v4 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 16);
  char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24);
LABEL_10:
  *(_OWORD *)(v1 + 88) = v4;
  *(void *)(v1 + 104) = v5;
  *(unsigned char *)(v1 + 112) = v6;
  uint64_t v7 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  *(unsigned char *)(v1 + 114) = sub_100078E0C(0, *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1;
  uint64_t result = sub_100078E0C(4, *(void *)(a1 + v7));
  if ((result & 1) != 0 && (*(unsigned char *)(v1 + 116) & 1) == 0 && (*(unsigned char *)(v1 + 115) & 1) == 0)
  {
    uint64_t v9 = *(void *)(v1 + 24);
    if (v9)
    {
      uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceTimes);
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11)
      {
        __break(1u);
        return result;
      }
      *(void *)(v9 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceTimes) = v12;
    }
  }
  *(unsigned char *)(v1 + 115) = result & 1;
  if (*(unsigned char *)(v1 + 114) == 1 && *(void *)(v1 + 24))
  {
    int v13 = *(unsigned __int8 *)(v1 + 119);
    swift_retain();
    sub_100086658(v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_100084F94(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 48);
  if (!v2) {
    goto LABEL_19;
  }
  uint64_t v3 = result;
  uint64_t result = sub_100078E0C(2, *(void *)(v2 + 48));
  char v4 = result;
  uint64_t v5 = *(void *)(v3 + 48);
  if (!v5)
  {
    if (result)
    {
      uint64_t result = 0;
      goto LABEL_8;
    }
LABEL_19:
    char v6 = 0;
    *(unsigned char *)(v1 + 116) = 0;
    goto LABEL_20;
  }
  uint64_t result = sub_100078E0C(5, *(void *)(v5 + 48));
  if ((v4 & 1) == 0)
  {
    *(unsigned char *)(v1 + 116) = 0;
    if ((result & 1) == 0)
    {
LABEL_5:
      char v6 = 0;
LABEL_20:
      *(unsigned char *)(v1 + 117) = v6;
      return result;
    }
    goto LABEL_14;
  }
LABEL_8:
  if ((*(unsigned char *)(v1 + 116) & 1) == 0 && (*(unsigned char *)(v1 + 115) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v1 + 24);
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceTimes);
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_22;
      }
      *(void *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceTimes) = v10;
    }
  }
  *(unsigned char *)(v1 + 116) = 1;
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
LABEL_14:
  if (*(unsigned char *)(v1 + 117)) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v1 + 24);
  if (!v11) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceTimes);
  BOOL v9 = __OFADD__(v12, 1);
  uint64_t v13 = v12 + 1;
  if (!v9)
  {
    *(void *)(v11 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceTimes) = v13;
LABEL_18:
    char v6 = 1;
    goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100085088(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10000D544(a1, (uint64_t)v32, &qword_1003826B8);
  uint64_t v6 = v32[4];
  uint64_t v7 = sub_100004010(&qword_100380780);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (unsigned __int8 *)v32 - v11;
  uint64_t v13 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v13 - 8);
  int v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10000D544(a1, (uint64_t)v33, &qword_1003826B8);
  if (*((void *)&v33[0] + 1))
  {
    long long v37 = v33[2];
    long long v38 = v33[3];
    long long v39 = v33[4];
    uint64_t v40 = v34;
    long long v35 = v33[0];
    long long v36 = v33[1];
    sub_1000207A0(&v35, &v41);
    uint64_t result = (uint64_t)sub_1000207A0(&v41, v42);
    if (v42[0] == 5 && BYTE1(v36) == 1)
    {
      if (*(void *)(v3 + 24)) {
        return result;
      }
      static DispatchTime.now()();
      char v17 = sub_100078E0C(3, v6);
      type metadata accessor for Data();
      swift_allocObject();
      *(void *)(v3 + 24) = sub_100085C5C(v15, v17 & 1);
      goto LABEL_18;
    }
  }
  uint64_t v18 = *(void *)(v3 + 24);
  if (!v18) {
    return result;
  }
  sub_10000D2A0(a2, (uint64_t)v12, &qword_100380780);
  uint64_t v19 = type metadata accessor for ConnectionClosed(0);
  BOOL v20 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  if (v20(v12, 1, v19) == 1)
  {
    swift_retain();
    sub_10000950C((uint64_t)v12, &qword_100380780);
LABEL_10:
    unint64_t v22 = 0;
    unint64_t v23 = 0;
    goto LABEL_12;
  }
  int v21 = *v12;
  swift_retain();
  sub_100088264((uint64_t)v12, type metadata accessor for ConnectionClosed);
  if (v21 == 12) {
    goto LABEL_10;
  }
  unint64_t v22 = sub_100085468(v21);
LABEL_12:
  CGRect v24 = (unint64_t *)(v18 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_exitReason);
  unint64_t *v24 = v22;
  v24[1] = v23;
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000D2A0(a2, (uint64_t)v10, &qword_100380780);
  if (v20((unsigned __int8 *)v10, 1, v19) == 1)
  {
    uint64_t result = sub_10000950C((uint64_t)v10, &qword_100380780);
  }
  else
  {
    uint64_t v25 = *(void *)&v10[*(int *)(v19 + 24)];
    swift_bridgeObjectRetain();
    uint64_t result = sub_100088264((uint64_t)v10, type metadata accessor for ConnectionClosed);
    uint64_t v26 = *(void *)(v3 + 24);
    if (!v26)
    {
LABEL_21:
      __break(1u);
      return result;
    }
    uint64_t v27 = sub_100141608(v25);
    uint64_t v29 = v28;
    swift_retain();
    swift_bridgeObjectRelease();
    double v30 = (uint64_t *)(v26 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_requestReason);
    *double v30 = v27;
    v30[1] = v29;
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (!*(void *)(v3 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  uint64_t v31 = sub_1000872E4();
  swift_release();
  sub_1001B6D38(0, v31);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 24) = 0;
LABEL_18:
  swift_release();
  return sub_100085660();
}

unint64_t sub_100085468(char a1)
{
  unint64_t result = 0x7571655272657355;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x794D646E6946;
      break;
    case 2:
      unint64_t result = 0x656E616C70726941;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x636E656772656D45;
      break;
    case 5:
    case 6:
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x7265766F646E6148;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000855EC(uint64_t result)
{
  if (*(unsigned char *)(v1 + 119) != (result & 1))
  {
    *(unsigned char *)(v1 + 119) = result & 1;
    if (result)
    {
      if (*(void *)(v1 + 24))
      {
        char v2 = *(unsigned char *)(v1 + 114);
        swift_retain();
        sub_100086CC4(v2);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_100085660()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003838E8);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t result = *(void *)(v1 + 32);
  if (*(void *)(v1 + 24))
  {
    if (result) {
      return result;
    }
    sub_10001E6FC(0, (unint64_t *)&qword_1003838F0);
    id v11 = [self mainRunLoop];
    uint64_t v12 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
    uint64_t v13 = static NSTimer.publish(every:tolerance:on:in:options:)();

    sub_10000950C((uint64_t)v4, &qword_1003838E8);
    uint64_t v17 = v13;
    type metadata accessor for NSTimer.TimerPublisher();
    sub_10008810C();
    uint64_t v14 = ConnectablePublisher.autoconnect()();
    swift_release();
    uint64_t v17 = v14;
    swift_allocObject();
    swift_weakInit();
    sub_100004010(&qword_100383900);
    sub_1000881A4();
    uint64_t v15 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)(v1 + 32) = v15;
  }
  else
  {
    if (!result) {
      return result;
    }
    *(void *)(v1 + 32) = 0;
  }
  return swift_release();
}

uint64_t sub_100085958()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 24))
    {
      sub_10000D544(result + 40, (uint64_t)v10, &qword_100382698);
      uint64_t v2 = *(unint64_t **)(v1 + 88);
      unint64_t v3 = *(void *)(v1 + 96);
      uint64_t v4 = *(void *)(v1 + 104);
      uint64_t v5 = *(unsigned __int8 *)(v1 + 112);
      char v6 = *(unsigned char *)(v1 + 113);
      if (*(unsigned char *)(v1 + 116)) {
        char v7 = 1;
      }
      else {
        char v7 = *(unsigned char *)(v1 + 115);
      }
      char v8 = *(unsigned char *)(v1 + 117);
      char v9 = *(unsigned char *)(v1 + 118);
      swift_retain();
      sub_100086EA4((uint64_t)v10, v2, v3, v4, v5, v6, v7, v8, v9);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100085A50()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnalyticsSatelliteConnectionStats()
{
  return self;
}

uint64_t sub_100085ABC(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_10000D544(a1, *v1 + 40, &qword_100382698);
  uint64_t result = sub_10000D544(a1, (uint64_t)v5, &qword_100382698);
  if ((v7 & 1) == 0)
  {
    v8[0] = v5[0];
    v8[1] = v5[1];
    uint64_t v9 = v6;
    if (*(void *)(v3 + 24))
    {
      swift_retain();
      sub_1000860C8(v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100085B4C(uint64_t a1)
{
  return sub_100084BD0(a1);
}

uint64_t sub_100085B70(uint64_t a1)
{
  return sub_100084E3C(a1);
}

uint64_t sub_100085B94(uint64_t a1)
{
  return sub_100084F94(a1);
}

uint64_t sub_100085BB8(uint64_t a1, uint64_t a2)
{
  return sub_100085088(a1, a2);
}

uint64_t sub_100085BDC()
{
  if (*(void *)(*(void *)v0 + 24))
  {
    char v1 = *(unsigned char *)(*(void *)v0 + 114);
    swift_retain();
    sub_100086A48(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100085C38(uint64_t a1)
{
  return sub_1000855EC(a1);
}

uint64_t sub_100085C5C(char *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_firstTargetId;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  uint64_t v14 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lastTargetId;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_inServiceSeconds) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_outOfServiceSeconds) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_kRelativeAzimuthBuckets) = &off_10034A420;
  uint64_t v15 = OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativeAzimuth;
  *(void *)(v3 + v15) = sub_100286048((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativePitch) = &off_10034A478;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_targetVisibility) = &off_10034A4B0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caForegroundRequests) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyTotal) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyCount) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caBannerTargetAimHelpCount) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceTimes) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceSeconds) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceTimes) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceSeconds) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lostSyncTimes) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_notSyncedSeconds) = 0;
  uint64_t v16 = (void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_exitReason);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = (void *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_requestReason);
  *uint64_t v17 = 0;
  v17[1] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingCALatencySince, 1, 1, v6);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection) = 2;
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v18(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_startTimestamp, a1, v6);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_isTryOut) = a2;
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000FD84(v19, (uint64_t)qword_1003A9940);
  v18((uint64_t)v12, a1, v6);
  BOOL v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    CGFloat v33 = a1;
    unint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = v12;
    uint64_t v32 = v24;
    uint64_t v35 = v24;
    *(_DWORD *)unint64_t v23 = 136315138;
    double v30 = v23 + 4;
    v18((uint64_t)v10, v12, v6);
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v34 = sub_1001B3178(v25, v26, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v31, v6);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "SatelliteConnectionStats: started tracking at %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v27(v33, v6);
  }
  else
  {

    uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v12, v6);
    v28(a1, v6);
  }
  return v3;
}

void sub_1000860C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_firstTargetId;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_firstTargetId + 8) == 1)
  {
    *(void *)uint64_t v4 = *a1;
    *(unsigned char *)(v4 + 8) = 0;
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A9940);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "SatelliteConnectionStats: first targetId == %lld", v8, 0xCu);
      swift_slowDealloc();
    }
  }
  uint64_t v9 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lastTargetId;
  uint64_t v10 = *a1;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lastTargetId + 8) & 1) != 0
    || *(void *)v9 != v10)
  {
    *(void *)uint64_t v9 = v10;
    *(unsigned char *)(v9 + 8) = 0;
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000FD84(v11, (uint64_t)qword_1003A9940);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "SatelliteConnectionStats: last targetId == %lld", v14, 0xCu);
      swift_slowDealloc();
    }
  }
}

void sub_100086310(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection) != 2)
  {
    if (v2 == 2) {
      return;
    }
    int v8 = *(unsigned __int8 *)(a1 + 2);
    if (v8 == 2 || (v2 & v8 & 1) == 0) {
      return;
    }
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection) = 2;
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000FD84(v9, (uint64_t)qword_1003A9940);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(oslog, v5)) {
      goto LABEL_19;
    }
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    os_log_type_t v7 = "SatelliteConnectionStats: stopped tracking lost connection";
    goto LABEL_18;
  }
  if (v2 != 2 && (v2 & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection) = 0;
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9940);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(oslog, v5)) {
      goto LABEL_19;
    }
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    os_log_type_t v7 = "SatelliteConnectionStats: started tracking lost connection";
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, v7, v6, 2u);
    swift_slowDealloc();
LABEL_19:
  }
}

void sub_1000864E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyTotal);
  BOOL v3 = __CFADD__(v2, a1);
  uint64_t v4 = v2 + a1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyTotal) = v4;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyCount);
    BOOL v3 = __CFADD__(v5, 1);
    uint64_t v6 = v5 + 1;
    if (!v3)
    {
      *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyCount) = v6;
      if (qword_10037DD78 == -1) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  swift_once();
LABEL_4:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9940);
  oslog = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "SatelliteConnectionStats: recorded CA latencdouble y = %llu", v9, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100086658(int a1)
{
  int v39 = a1;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380788);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  long long v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v36 - v12;
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingCALatencySince;
  swift_beginAccess();
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100380788);
  uint64_t v38 = v3;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v16 = v15(v13, 1, v2);
  sub_10000950C((uint64_t)v13, &qword_100380788);
  BOOL v28 = v16 == 1;
  uint64_t v17 = v1;
  if (v28) {
    goto LABEL_8;
  }
  static DispatchTime.now()();
  sub_10000D2A0(v14, (uint64_t)v11, &qword_100380788);
  if (v15(v11, 1, v2) == 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  unint64_t v18 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v18) {
    goto LABEL_6;
  }
  unint64_t v19 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v20 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v21 = v19 - v20;
  if (v19 < v20)
  {
    __break(1u);
LABEL_6:
    unint64_t v21 = 0;
  }
  unint64_t v22 = v21;
  uint64_t v23 = v38;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v38 + 8);
  v24(v5, v2);
  v24(v11, v2);
  sub_1000864E8(v22 / 0x3B9ACA00);
  uint64_t v25 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v37, 1, 1, v2);
  swift_beginAccess();
  sub_10002D2A8(v25, v14);
  swift_endAccess();
LABEL_8:
  uint64_t v26 = OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection;
  int v27 = *(unsigned __int8 *)(v17
                           + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingLostConnection);
  BOOL v28 = v27 != 2 && (v27 & 1) == 0;
  if (v28)
  {
    if ((v39 & 1) == 0) {
      goto LABEL_19;
    }
    uint64_t v29 = *(void *)(v17 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caBannerTargetAimHelpCount);
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v17 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caBannerTargetAimHelpCount) = v31;
      if (qword_10037DD78 == -1)
      {
LABEL_16:
        uint64_t v32 = type metadata accessor for Logger();
        sub_10000FD84(v32, (uint64_t)qword_1003A9940);
        CGFloat v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "SatelliteConnectionStats: recorded CA banner orientation assistance", v35, 2u);
          swift_slowDealloc();
        }

LABEL_19:
        if (*(unsigned char *)(v17 + v26) != 2)
        {
          *(unsigned char *)(v17 + v26) = 1;
          return;
        }
        goto LABEL_24;
      }
    }
    swift_once();
    goto LABEL_16;
  }
}

void sub_100086A48(char a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caForegroundRequests);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caForegroundRequests) = v11;
    if (qword_10037DD78 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9940);
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "SatelliteConnectionStats: recorded CA foreground request", v15, 2u);
    swift_slowDealloc();
  }

  if ((a1 & 1) == 0)
  {
    static DispatchTime.now()();
    uint64_t v16 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
    sub_10000D544((uint64_t)v8, (uint64_t)v6, &qword_100380788);
    uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingCALatencySince;
    swift_beginAccess();
    sub_10002D2A8((uint64_t)v6, v17);
    swift_endAccess();
    unint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "SatelliteConnectionStats: started tracking CA latency", v20, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100086CC4(char a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  if ((a1 & 1) == 0)
  {
    static DispatchTime.now()();
    uint64_t v9 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
    sub_10000D544((uint64_t)v8, (uint64_t)v6, &qword_100380788);
    uint64_t v10 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingCALatencySince;
    swift_beginAccess();
    sub_10002D2A8((uint64_t)v6, v10);
    swift_endAccess();
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000FD84(v11, (uint64_t)qword_1003A9940);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "SatelliteConnectionStats: started tracking CA latency", v14, 2u);
      swift_slowDealloc();
    }
  }
}

unint64_t sub_100086EA4(uint64_t a1, unint64_t *a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, char a9)
{
  uint64_t v10 = v9;
  LOBYTE(v13) = a6;
  sub_10000D544(a1, (uint64_t)v51, &qword_100382698);
  if (v51[40])
  {
    uint64_t v17 = (void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_outOfServiceSeconds);
    uint64_t v18 = *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_outOfServiceSeconds);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19) {
      goto LABEL_6;
    }
    __break(1u);
  }
  uint64_t v17 = (void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_inServiceSeconds);
  uint64_t v21 = *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_inServiceSeconds);
  BOOL v19 = __OFADD__(v21, 1);
  uint64_t v20 = v21 + 1;
  if (v19) {
    goto LABEL_58;
  }
LABEL_6:
  *uint64_t v17 = v20;
  if (a5) {
    goto LABEL_36;
  }
  double v22 = *(double *)&a2;
  if (*(double *)&a2 < 0.0) {
    double v22 = -*(double *)&a2;
  }
  double v23 = floor(v22 * 57.2957795);
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0) {
    goto LABEL_59;
  }
  if (v23 <= -9.22337204e18) {
    goto LABEL_60;
  }
  if (v23 >= 9.22337204e18) {
    goto LABEL_61;
  }
  uint64_t v24 = *(void **)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_kRelativeAzimuthBuckets);
  uint64_t v25 = v24[2];
  if (v25)
  {
    a5 = v24[4];
    if (a5 >= (uint64_t)v23)
    {
LABEL_17:
      uint64_t v29 = (uint64_t *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativeAzimuth);
      unint64_t result = swift_beginAccess();
      uint64_t v31 = *v29;
      uint64_t v32 = *(void *)(*v29 + 16);
      if (v32)
      {
        unint64_t result = sub_1001BEDE8(a5);
        if (v33) {
          uint64_t v32 = *(void *)(*(void *)(v31 + 56) + 8 * result);
        }
        else {
          uint64_t v32 = 0;
        }
      }
      uint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_72;
      }
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50[0] = *v29;
      uint64_t *v29 = 0x8000000000000000;
      *(double *)&a2 = COERCE_DOUBLE(v50);
      sub_100269B58(v34, a5, isUniquelyReferenced_nonNull_native);
      uint64_t *v29 = v50[0];
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    else
    {
      uint64_t v26 = v24 + 5;
      uint64_t v27 = v25 - 1;
      while (v27)
      {
        uint64_t v28 = *v26++;
        a5 = v28;
        --v27;
        if (v28 >= (uint64_t)v23) {
          goto LABEL_17;
        }
      }
    }
  }
  double v36 = *(double *)&a3;
  if (*(double *)&a3 < 0.0) {
    double v36 = -*(double *)&a3;
  }
  double v37 = floor(v36 * 57.2957795 / 15.0);
  if ((~*(void *)&v37 & 0x7FF0000000000000) == 0) {
    goto LABEL_62;
  }
  if (v37 <= -9.22337204e18) {
    goto LABEL_63;
  }
  if (v37 >= 9.22337204e18) {
    goto LABEL_64;
  }
  a2 = (unint64_t *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativePitch);
  swift_beginAccess();
  if (*(void *)(*a2 + 16) - 1 >= (uint64_t)v37) {
    a5 = (uint64_t)v37;
  }
  else {
    a5 = *(void *)(*a2 + 16) - 1;
  }
  swift_beginAccess();
  a3 = *a2;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = a3;
  if ((result & 1) == 0) {
    goto LABEL_65;
  }
  for (; (a5 & 0x8000000000000000) == 0; *a2 = result)
  {
    if ((unint64_t)a5 >= *(void *)(a3 + 16)) {
      goto LABEL_67;
    }
    uint64_t v38 = *(void *)(a3 + 32 + 8 * a5);
    BOOL v19 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v19) {
      goto LABEL_68;
    }
    *(void *)(a3 + 32 + 8 * a5) = v39;
    swift_endAccess();
LABEL_36:
    uint64_t v40 = qword_1002B5F70[(char)v13];
    a2 = (unint64_t *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_targetVisibility);
    swift_beginAccess();
    if (*(void *)(*a2 + 16) - 1 >= v40) {
      a3 = v40;
    }
    else {
      a3 = *(void *)(*a2 + 16) - 1;
    }
    swift_beginAccess();
    unint64_t v13 = *a2;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v13;
    if (v41)
    {
      if ((a3 & 0x8000000000000000) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      unint64_t v13 = (unint64_t)sub_1001D58CC((void *)v13);
      *a2 = v13;
      if ((a3 & 0x8000000000000000) != 0)
      {
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
    }
    if (a3 >= *(void *)(v13 + 16)) {
      goto LABEL_56;
    }
    uint64_t v42 = *(void *)(v13 + 32 + 8 * a3);
    BOOL v19 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (!v19)
    {
      *(void *)(v13 + 32 + 8 * a3) = v43;
      unint64_t result = swift_endAccess();
      if (a7)
      {
        uint64_t v44 = *(void *)(v10
                        + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceSeconds);
        BOOL v19 = __OFADD__(v44, 1);
        uint64_t v45 = v44 + 1;
        if (v19) {
          goto LABEL_69;
        }
        *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_obstructionGuidanceSeconds) = v45;
      }
      if (a8)
      {
        uint64_t v46 = *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceSeconds);
        BOOL v19 = __OFADD__(v46, 1);
        uint64_t v47 = v46 + 1;
        if (v19) {
          goto LABEL_70;
        }
        *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_skimmerGuidanceSeconds) = v47;
      }
      if (a9 != 2 && (a9 & 1) == 0)
      {
        uint64_t v48 = *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_notSyncedSeconds);
        BOOL v19 = __OFADD__(v48, 1);
        uint64_t v49 = v48 + 1;
        if (v19) {
          goto LABEL_71;
        }
        *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_notSyncedSeconds) = v49;
      }
      return result;
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    unint64_t result = (unint64_t)sub_1001D58CC((void *)a3);
    a3 = result;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1000872E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B5E60;
  *(void *)(inited + 32) = 0x6C614361436D756ELL;
  *(void *)(inited + 40) = 0xEB0000000070756CLL;
  *(NSNumber *)(inited + 48) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 56), "numCaCallupFS");
  *(_WORD *)(inited + 70) = -4864;
  *(NSNumber *)(inited + 72) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x306E65704F727564;
  *(void *)(inited + 88) = 0xE800000000000000;
  uint64_t v7 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_targetVisibility;
  swift_beginAccess();
  if (!*(void *)(*(void *)v7 + 16)) {
    goto LABEL_42;
  }
  *(NSNumber *)(inited + 96) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x316E65704F727564;
  *(void *)(inited + 112) = 0xE800000000000000;
  if (*(void *)(*(void *)v7 + 16) < 2uLL)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  *(NSNumber *)(inited + 120) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 0x326E65704F727564;
  *(void *)(inited + 136) = 0xE800000000000000;
  if (*(void *)(*(void *)v7 + 16) < 3uLL)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  *(NSNumber *)(inited + 144) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 152) = 0x336E65704F727564;
  *(void *)(inited + 160) = 0xE800000000000000;
  if (*(void *)(*(void *)v7 + 16) < 4uLL)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  *(NSNumber *)(inited + 168) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 176), "durOrientv15");
  *(unsigned char *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  uint64_t v8 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativePitch;
  swift_beginAccess();
  if (!*(void *)(*(void *)v8 + 16))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  *(NSNumber *)(inited + 192) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 200), "durOrientv30");
  *(unsigned char *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  if (*(void *)(*(void *)v8 + 16) < 2uLL)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  *(NSNumber *)(inited + 216) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 224) = 0x6E6569724F727564;
  *(void *)(inited + 232) = 0xEF726568744F7674;
  if (*(void *)(*(void *)v8 + 16) < 3uLL) {
    goto LABEL_48;
  }
  *(NSNumber *)(inited + 240) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 248), "durInService");
  *(unsigned char *)(inited + 261) = 0;
  *(_WORD *)(inited + 262) = -5120;
  *(NSNumber *)(inited + 264) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 272), "durOutService");
  *(_WORD *)(inited + 286) = -4864;
  *(NSNumber *)(inited + 288) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 296) = 0x6C61746F54727564;
  *(void *)(inited + 304) = 0xE800000000000000;
  static DispatchTime.now()();
  unint64_t v9 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() < v9)
  {
    unint64_t v10 = DispatchTime.uptimeNanoseconds.getter();
    if (v10 < DispatchTime.uptimeNanoseconds.getter()) {
      __break(1u);
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(NSNumber *)(inited + 312) = UInt64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 320), "is_tryout_mode");
  *(unsigned char *)(inited + 335) = -18;
  *(NSNumber *)(inited + 336) = Bool._bridgeToObjectiveC()();
  strcpy((char *)(inited + 344), "numObstruction");
  *(unsigned char *)(inited + 359) = -18;
  *(NSNumber *)(inited + 360) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 368) = 0xD000000000000013;
  *(void *)(inited + 376) = 0x80000001002CC1C0;
  *(NSNumber *)(inited + 384) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 392) = 0x6D6D696B536D756ELL;
  *(void *)(inited + 400) = 0xEA00000000007265;
  *(NSNumber *)(inited + 408) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 416) = 0x6E6F697461727564;
  *(void *)(inited + 424) = 0xEF72656D6D696B53;
  *(NSNumber *)(inited + 432) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 440) = 0x6E79736E556D756ELL;
  *(void *)(inited + 448) = 0xE900000000000063;
  *(NSNumber *)(inited + 456) = Int64._bridgeToObjectiveC()();
  strcpy((char *)(inited + 464), "durationUnsync");
  *(unsigned char *)(inited + 479) = -18;
  *(NSNumber *)(inited + 480) = Int64._bridgeToObjectiveC()();
  uint64_t v11 = (void *)sub_100283ACC(inited);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_kRelativeAzimuthBuckets);
  uint64_t v48 = *(void *)(v12 + 16);
  if (v48)
  {
    uint64_t v45 = v1;
    uint64_t v13 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_relativeAzimuth;
    swift_bridgeObjectRetain();
    uint64_t v47 = v13;
    swift_beginAccess();
    uint64_t v14 = 0;
    uint64_t v46 = v12;
    while (1)
    {
      uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
      uint64_t v50 = 0x6E6569724F727564;
      unint64_t v51 = 0xEA00000000006874;
      uint64_t v49 = v16;
      v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = v50;
      uint64_t v18 = v51;
      if (*(void *)(*(void *)v47 + 16)) {
        sub_1001BEDE8(v16);
      }
      v20.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = (uint64_t)v11;
      unint64_t v23 = sub_1001BEC58(v19, v18);
      uint64_t v24 = v11[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      char v27 = v22;
      if (v11[3] >= v26)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v11 = (void *)v50;
          if (v22) {
            goto LABEL_13;
          }
        }
        else
        {
          sub_1000A2000();
          uint64_t v11 = (void *)v50;
          if (v27) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        sub_10009F540(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_1001BEC58(v19, v18);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_49;
        }
        unint64_t v23 = v28;
        uint64_t v11 = (void *)v50;
        if (v27)
        {
LABEL_13:
          uint64_t v15 = v11[7];

          *(NSNumber *)(v15 + 8 * v23) = v20;
          goto LABEL_14;
        }
      }
      v11[(v23 >> 6) + 8] |= 1 << v23;
      BOOL v30 = (uint64_t *)(v11[6] + 16 * v23);
      *BOOL v30 = v19;
      v30[1] = v18;
      *(NSNumber *)(v11[7] + 8 * v23) = v20;
      uint64_t v31 = v11[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_41;
      }
      void v11[2] = v33;
      swift_bridgeObjectRetain();
LABEL_14:
      ++v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v46;
      if (v48 == v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v45;
        break;
      }
    }
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_caLatencyCount))
  {
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = (uint64_t)v11;
    sub_1002699E8((uint64_t)isa, 0x636E6574614C6163, 0xEC00000065764179, v35);
    uint64_t v11 = (void *)v50;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_firstTargetId + 8) & 1) == 0)
  {
    Class v36 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = (uint64_t)v11;
    sub_1002699E8((uint64_t)v36, 0x6174536449746173, 0xEA00000000007472, v37);
    uint64_t v11 = (void *)v50;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_lastTargetId + 8) & 1) == 0)
  {
    Class v38 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = (uint64_t)v11;
    sub_1002699E8((uint64_t)v38, 0x646E456449746173, 0xE800000000000000, v39);
    uint64_t v11 = (void *)v50;
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_exitReason + 8))
  {
    swift_bridgeObjectRetain();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = (uint64_t)v11;
    sub_1002699E8((uint64_t)v40, 0x7361655274697865, 0xEA00000000006E6FLL, v41);
    uint64_t v11 = (void *)v50;
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_requestReason + 8))
  {
    swift_bridgeObjectRetain();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = (uint64_t)v11;
    sub_1002699E8((uint64_t)v42, 0x5274736575716572, 0xED00006E6F736165, v43);
    uint64_t v11 = (void *)v50;
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v11;
}

uint64_t sub_100087CBC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_startTimestamp;
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddyP33_01F568DD0E8813FA3CE40EF8739F88CF4Data_trackingCALatencySince, &qword_100380788);
  return v0;
}

uint64_t sub_100087DA0()
{
  sub_100087CBC();

  return swift_deallocClassInstance();
}

uint64_t sub_100087DF4()
{
  return type metadata accessor for Data();
}

uint64_t type metadata accessor for Data()
{
  uint64_t result = qword_100383570;
  if (!qword_100383570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100087E48()
{
  type metadata accessor for DispatchTime();
  if (v0 <= 0x3F)
  {
    sub_10002D190();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t getEnumTagSinglePayload for TryOutModel.WhenActive(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Data.LostConnectionTracking(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000880D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.LostConnectionTracking()
{
  return &type metadata for Data.LostConnectionTracking;
}

unint64_t sub_10008810C()
{
  unint64_t result = qword_1003838F8;
  if (!qword_1003838F8)
  {
    type metadata accessor for NSTimer.TimerPublisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003838F8);
  }
  return result;
}

uint64_t sub_100088164()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008819C()
{
  return sub_100085958();
}

unint64_t sub_1000881A4()
{
  unint64_t result = qword_100383908;
  if (!qword_100383908)
  {
    sub_1000094C4(&qword_100383900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383908);
  }
  return result;
}

uint64_t sub_100088200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LinkState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100088264(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t SBUISystemApertureLayoutMode.debugDescription.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  unint64_t result = 0x6465766F6D6572;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x6C616974696E69;
      break;
    case 2:
      unint64_t result = 0x6576697463616E69;
      break;
    case 3:
      unint64_t result = 0x6C616D696E696DLL;
      break;
    case 4:
      unint64_t result = 0x746361706D6F63;
      break;
    case 5:
      unint64_t result = 0x6D6F74737563;
      break;
    default:
      _StringGuts.grow(_:)(42);
      swift_bridgeObjectRelease();
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      unint64_t result = 0xD000000000000027;
      break;
  }
  return result;
}

unint64_t sub_10008842C()
{
  return SBUISystemApertureLayoutMode.debugDescription.getter(*v0);
}

void sub_100088434(void *a1@<X8>)
{
  *a1 = &off_10034A4F0;
}

uint64_t sub_100088444(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return sub_10008B34C((uint64_t)v5, (uint64_t)v7) & 1;
}

id sub_1000884A0()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy17NotificationAgent_didFinishPostNotificationRequest;
  sub_100004010(&qword_100385860);
  swift_allocObject();
  long long v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  uint64_t v3 = OBJC_IVAR____TtC8SOSBuddy17NotificationAgent_didReceiveAction;
  sub_100004010(&qword_100383A20);
  swift_allocObject();
  *(void *)&v2[v3] = PassthroughSubject.init()();
  uint64_t v4 = OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__currentNotifications;
  *(void *)&v2[v4] = sub_100286120((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = &v2[OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent];
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *(_OWORD *)uint64_t v5 = 0u;
  v5[48] = 0;

  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for NotificationAgent();
  [super init];
  uint64_t v7 = qword_10037DD80;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9958);
  id v10 = v8;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    id v14 = v10;
    id v15 = [v14 description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    sub_1001B3178(v16, v18, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%{public}s] init", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v19 = [self currentNotificationCenter];
  [v19 setDelegate:v10];

  return v10;
}

id sub_100088798()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for NotificationAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for NotificationAgent()
{
  return self;
}

void sub_100088A54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v78 = *(void *)a1;
  uint64_t v79 = *(void *)(a1 + 8);
  uint64_t v77 = *(void *)(a1 + 16);
  uint64_t v80 = *(void *)(a1 + 24);
  uint64_t v76 = *(void *)(a1 + 32);
  uint64_t v83 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  int v75 = v4 & 1;
  int v82 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v81 = v2;
  unint64_t v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__currentNotifications);
  swift_beginAccess();
  uint64_t v11 = *v10;
  if (!*(void *)(*v10 + 16)) {
    goto LABEL_7;
  }
  unint64_t v12 = sub_1001BEBE8(v82);
  if ((v13 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(v11 + 56) + 72 * v12;
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v73 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v17 = *(void *)(v14 + 24);
  uint64_t v18 = *(void *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 40);
  uint64_t v20 = *(void *)(v14 + 48);
  uint64_t v21 = *(void *)(v14 + 56);
  char v22 = *(unsigned char *)(v14 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    v91[0] = v16;
    v91[1] = v17;
    v91[2] = v18;
    v91[3] = v19;
    v91[4] = v20;
    v91[5] = v21;
    char v92 = v22;
    sub_10008C098((uint64_t)v91);
    sub_10008BF84(v73, v15);
    char v23 = sub_10008B34C((uint64_t)v91, a1);
    sub_10008C0E4((uint64_t)v91);
    if (v23) {
      return;
    }
  }
  else
  {
LABEL_7:
    sub_10008C098(a1);
    sub_10002D394(0, 0, 0, 0);
    sub_10002D394(v78, v79, v77, v80);
  }
  uint64_t v24 = v81 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent;
  if (*(void *)(v81 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent + 24))
  {
    if (qword_10037DE00 == -1)
    {
LABEL_10:
      uint64_t v25 = type metadata accessor for Logger();
      sub_10000FD84(v25, (uint64_t)qword_1003A9AD8);
      sub_10008C098(a1);
      sub_10008C098(a1);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v28 = 136446210;
        long long v29 = *(_OWORD *)(a1 + 16);
        long long v86 = *(_OWORD *)a1;
        long long v87 = v29;
        long long v88 = *(_OWORD *)(a1 + 32);
        LOBYTE(v89) = *(unsigned char *)(a1 + 48);
        sub_10008C098(a1);
        uint64_t v30 = String.init<A>(describing:)();
        *(void *)&long long v86 = sub_1001B3178(v30, v31, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10008C0E4(a1);
        sub_10008C0E4(a1);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Request for another content is already pending, postponing the update until it is done: %{public}s", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10008C0E4(a1);
        sub_10008C0E4(a1);
      }

      return;
    }
LABEL_29:
    swift_once();
    goto LABEL_10;
  }
  if (qword_10037DE00 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000FD84(v32, (uint64_t)qword_1003A9AD8);
  sub_10008C098(a1);
  sub_10008C098(a1);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v74 = v10;
  if (v35)
  {
    Class v36 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)Class v36 = 136446210;
    long long v37 = *(_OWORD *)(a1 + 16);
    long long v86 = *(_OWORD *)a1;
    long long v87 = v37;
    long long v88 = *(_OWORD *)(a1 + 32);
    LOBYTE(v89) = *(unsigned char *)(a1 + 48);
    sub_10008C098(a1);
    uint64_t v38 = String.init<A>(describing:)();
    *(void *)&long long v86 = sub_1001B3178(v38, v39, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10008C0E4(a1);
    sub_10008C0E4(a1);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Present notification: %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10008C0E4(a1);
    sub_10008C0E4(a1);
  }

  uint64_t v73 = *(void *)v24;
  uint64_t v72 = *(void *)(v24 + 8);
  uint64_t v71 = *(void *)(v24 + 16);
  uint64_t v70 = *(void *)(v24 + 24);
  v69[1] = *(void *)(v24 + 32);
  uint64_t v40 = v78;
  uint64_t v41 = v79;
  *(void *)uint64_t v24 = v78;
  *(void *)(v24 + 8) = v41;
  uint64_t v42 = v77;
  uint64_t v43 = v80;
  *(void *)(v24 + 16) = v77;
  *(void *)(v24 + 24) = v43;
  uint64_t v44 = v76;
  uint64_t v45 = v83;
  *(void *)(v24 + 32) = v76;
  *(void *)(v24 + 40) = v45;
  char v46 = v75;
  *(unsigned char *)(v24 + 48) = v75;
  sub_10008C098(a1);
  sub_10002D394(v73, v72, v71, v70);
  char v47 = v82;
  uint64_t v48 = 10;
  if (v82) {
    uint64_t v48 = 7;
  }
  unint64_t v49 = v48 | 0xD000000000000010;
  uint64_t v50 = "ConnectionAssistantRequest";
  if (v82) {
    uint64_t v50 = "OffGridModeOfferRequest";
  }
  *(void *)&long long v86 = v49;
  *((void *)&v86 + 1) = (unint64_t)(v50 - 32) | 0x8000000000000000;
  *(void *)&long long v87 = v40;
  *((void *)&v87 + 1) = v41;
  *(void *)&long long v88 = v42;
  *((void *)&v88 + 1) = v43;
  *(void *)&long long v89 = v44;
  *((void *)&v89 + 1) = v83;
  char v90 = v46;
  unint64_t v51 = v74;
  swift_beginAccess();
  sub_10008C098(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v85 = *v51;
  *unint64_t v51 = 0x8000000000000000;
  sub_100268FE8((uint64_t)&v86, v47, isUniquelyReferenced_nonNull_native);
  *unint64_t v51 = v85;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v53 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  NSString v54 = String._bridgeToObjectiveC()();
  [v53 setTitle:v54];

  NSString v55 = String._bridgeToObjectiveC()();
  [v53 setBody:v55];

  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v57 = [self iconForSystemImageNamed:v56];

    [v53 setIcon:v57];
  }
  [v53 setInterruptionLevel:1];
  int v58 = v82;
  NSString v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setCategoryIdentifier:v59];

  if (v58) {
    [v53 setShouldDisplayActionsInline:1];
  }
  [v53 setShouldIgnoreDowntime:1];
  [v53 setShouldIgnoreDoNotDisturb:1];
  [v53 setShouldHideDate:1];
  [v53 setShouldPreemptPresentedNotification:1];
  [v53 setShouldPreventNotificationDismissalAfterDefaultAction:1];
  swift_bridgeObjectRetain();
  id v60 = v53;
  NSString v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v62 = [self requestWithIdentifier:v61 content:v60 trigger:0];

  id v63 = [self currentNotificationCenter];
  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v65 = swift_allocObject();
  long long v66 = v86;
  *(_OWORD *)(v65 + 40) = v87;
  long long v67 = v89;
  *(_OWORD *)(v65 + 56) = v88;
  *(_OWORD *)(v65 + 72) = v67;
  *(void *)(v65 + 16) = v64;
  *(unsigned char *)(v65 + 88) = v90;
  *(_OWORD *)(v65 + 24) = v66;
  aBlock[4] = (uint64_t)sub_10008C1C0;
  aBlock[5] = v65;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100273438;
  aBlock[3] = (uint64_t)&unk_100352D78;
  uint64_t v68 = _Block_copy(aBlock);
  swift_release();
  [v63 addNotificationRequest:v62 withCompletionHandler:v68];
  _Block_release(v68);
}

uint64_t sub_1000895B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FDBC();
  uint64_t v21 = static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(a3 + 16);
  long long v16 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v14 + 72) = v16;
  *(void *)(v14 + 16) = v12;
  *(unsigned char *)(v14 + 88) = *(unsigned char *)(a3 + 64);
  *(_OWORD *)(v14 + 24) = v15;
  *(void *)(v14 + 96) = a1;
  aBlock[4] = sub_10008C22C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_100352DC8;
  uint64_t v17 = _Block_copy(aBlock);
  sub_10008BFE8(a3);
  swift_errorRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10007C914();
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v18 = (void *)v21;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

void sub_1000898D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_100089948(a2, a3);
  }
}

uint64_t sub_100089948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v11 = v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent;
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent);
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent + 8);
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent + 16);
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__pendingContent + 24);
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(unsigned char *)(v11 + 48) = 0;
  sub_10002D394(v12, v13, v14, v15);
  if (a2)
  {
    swift_errorRetain();
    if (qword_10037DE00 == -1)
    {
LABEL_4:
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000FD84(v16, (uint64_t)qword_1003A9AD8);
      swift_errorRetain();
      sub_10008BFE8(a1);
      swift_errorRetain();
      sub_10008BFE8(a1);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136446466;
        long long v20 = *(_OWORD *)(a1 + 48);
        long long v47 = *(_OWORD *)(a1 + 32);
        long long v48 = v20;
        char v49 = *(unsigned char *)(a1 + 64);
        long long v21 = *(_OWORD *)(a1 + 16);
        long long v45 = *(_OWORD *)a1;
        long long v46 = v21;
        sub_10008BFE8(a1);
        uint64_t v22 = String.init<A>(describing:)();
        *(void *)&long long v45 = sub_1001B3178(v22, v23, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10008C040(a1);
        sub_10008C040(a1);
        *(_WORD *)(v19 + 12) = 2082;
        *(void *)&long long v45 = a2;
        swift_errorRetain();
        sub_100004010(&qword_10037FFB0);
        uint64_t v24 = String.init<A>(describing:)();
        *(void *)&long long v45 = sub_1001B3178(v24, v25, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to present notification: %{public}s, error: %{public}s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10008C040(a1);
        sub_10008C040(a1);
        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v35 = *(void *)a1;
      uint64_t v36 = *(void *)(a1 + 8);
      if (v35 == 0xD00000000000001ALL && v36 == 0x80000001002CC3F0)
      {
        char v37 = 0;
      }
      else
      {
        char v37 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v35 == 0xD000000000000017 && v36 == 0x80000001002CC410) {
            char v37 = 1;
          }
          else {
            char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
        }
      }
      uint64_t v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__currentNotifications);
      swift_beginAccess();
      unint64_t v39 = sub_1001BEBE8(v37 & 1);
      if (v40)
      {
        unint64_t v41 = v39;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v43 = *v38;
        uint64_t v50 = *v38;
        *uint64_t v38 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000A0DA4();
          uint64_t v43 = v50;
        }
        sub_1001C0BAC(v41, v43);
        *uint64_t v38 = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_errorRelease();
      goto LABEL_26;
    }
LABEL_28:
    swift_once();
    goto LABEL_4;
  }
  if (qword_10037DE00 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000FD84(v26, (uint64_t)qword_1003A9AD8);
  sub_10008BFE8(a1);
  sub_10008BFE8(a1);
  os_log_type_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    long long v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)long long v29 = 136446210;
    uint64_t v50 = v30;
    long long v31 = *(_OWORD *)(a1 + 48);
    long long v47 = *(_OWORD *)(a1 + 32);
    long long v48 = v31;
    char v49 = *(unsigned char *)(a1 + 64);
    long long v32 = *(_OWORD *)(a1 + 16);
    long long v45 = *(_OWORD *)a1;
    long long v46 = v32;
    sub_10008BFE8(a1);
    uint64_t v33 = String.init<A>(describing:)();
    *(void *)&long long v45 = sub_1001B3178(v33, v34, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10008C040(a1);
    sub_10008C040(a1);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Presented notification: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10008C040(a1);
    sub_10008C040(a1);
  }

LABEL_26:
  LOBYTE(v45) = a2 == 0;
  swift_retain();
  PassthroughSubject.send(_:)();
  return swift_release();
}

uint64_t sub_10008A008(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v2 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC8SOSBuddy17NotificationAgent__currentNotifications);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v2;
  if (!*(void *)(*v2 + 16)) {
    return result;
  }
  int v31 = a1 & 1;
  uint64_t result = sub_1001BEBE8(a1 & 1);
  if ((v11 & 1) == 0) {
    return result;
  }
  uint64_t v12 = (uint64_t *)(*(void *)(v10 + 56) + 72 * result);
  a1 = *v12;
  uint64_t v4 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    return result;
  }
  swift_bridgeObjectRetain();
  sub_10008BF84(a1, v4);
  if (qword_10037DE00 != -1) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9AD8);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = a1;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1001B3178(a1, v4, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Dismissing notification: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v16 = a1;
  }
  os_log_type_t v18 = self;
  id v19 = [v18 currentNotificationCenter];
  sub_100004010((uint64_t *)&unk_1003839F0);
  uint64_t v20 = swift_allocObject();
  long long v30 = xmmword_1002B3350;
  *(_OWORD *)(v20 + 16) = xmmword_1002B3350;
  *(void *)(v20 + 32) = v16;
  *(void *)(v20 + 40) = v4;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 removePendingNotificationRequestsWithIdentifiers:isa];

  id v22 = [v18 currentNotificationCenter];
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v30;
  *(void *)(v23 + 32) = v16;
  *(void *)(v23 + 40) = v4;
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 removeDeliveredNotificationsWithIdentifiers:v24];

  swift_beginAccess();
  unint64_t v25 = sub_1001BEBE8(v31);
  if (v26)
  {
    unint64_t v27 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v2;
    uint64_t v32 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000A0DA4();
      uint64_t v29 = v32;
    }
    sub_1001C0BAC(v27, v29);
    uint64_t *v2 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

void sub_10008A510(void *a1)
{
  switch((unint64_t)[a1 authorizationStatus])
  {
    case 0uLL:
      if (qword_10037DE00 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10000FD84(v12, (uint64_t)qword_1003A9AD8);
      oslog = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(oslog, v3)) {
        goto LABEL_23;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "User hasn't been prompted for notification access";
      goto LABEL_22;
    case 1uLL:
      if (qword_10037DE00 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000FD84(v13, (uint64_t)qword_1003A9AD8);
      oslog = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(oslog, v3)) {
        goto LABEL_23;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "User denied notification access";
      goto LABEL_22;
    case 2uLL:
      if (qword_10037DE00 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10000FD84(v14, (uint64_t)qword_1003A9AD8);
      oslog = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v3)) {
        goto LABEL_23;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Notifications are authorized";
      goto LABEL_22;
    case 3uLL:
    case 4uLL:
      if (qword_10037DE00 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      sub_10000FD84(v2, (uint64_t)qword_1003A9AD8);
      oslog = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(oslog, v3)) {
        goto LABEL_23;
      }
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Notifications are provisional";
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
      swift_slowDealloc();
      goto LABEL_23;
    default:
      if (qword_10037DE00 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000FD84(v6, (uint64_t)qword_1003A9AD8);
      oslog = a1;
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136446210;
        [oslog authorizationStatus];
        type metadata accessor for UNAuthorizationStatus(0);
        uint64_t v10 = String.init<A>(describing:)();
        sub_1001B3178(v10, v11, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unknown notification authorization status %{public}s", v9, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

LABEL_23:
      }
      return;
  }
}

void sub_10008A9B0(uint64_t a1, void *a2)
{
  os_log_type_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t destroy for NotificationAgent.Content()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationAgent.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationAgent.Content(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for QuestionnairePolicy(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NotificationAgent.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationAgent.Content(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationAgent.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAgent.Content()
{
  return &type metadata for NotificationAgent.Content;
}

uint64_t destroy for NotificationAgent.NotificationState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationAgent.NotificationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationAgent.NotificationState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for NotificationAgent.NotificationState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NotificationAgent.NotificationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationAgent.NotificationState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationAgent.NotificationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAgent.NotificationState()
{
  return &type metadata for NotificationAgent.NotificationState;
}

unsigned char *storeEnumTagSinglePayload for NotificationAgent.ContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008B12CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAgent.ContentType()
{
  return &type metadata for NotificationAgent.ContentType;
}

uint64_t destroy for NotificationAgent.ActionReceived()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for NotificationAgent.ActionReceived(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NotificationAgent.ActionReceived(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationAgent.ActionReceived(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationAgent.ActionReceived()
{
  return &type metadata for NotificationAgent.ActionReceived;
}

uint64_t sub_10008B2B8()
{
  return sub_100009B18(&qword_1003839C8, &qword_1003839D0);
}

unint64_t sub_10008B2F8()
{
  unint64_t result = qword_1003839D8;
  if (!qword_1003839D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003839D8);
  }
  return result;
}

uint64_t sub_10008B34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v4)
  {
    if (v5)
    {
      if (*(void *)a1 != *(void *)a2 || v4 != v5)
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v8 = 0;
        if ((v7 & 1) == 0) {
          return v8 & 1;
        }
      }
      goto LABEL_11;
    }
LABEL_10:
    char v8 = 0;
    return v8 & 1;
  }
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v8 = 0, (v10 & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
      || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v8 = 0, (v11 & 1) != 0))
    {
      char v8 = *(unsigned char *)(a1 + 48) ^ *(unsigned char *)(a2 + 48) ^ 1;
    }
  }
  return v8 & 1;
}

void sub_10008B414()
{
  if (qword_10037DE00 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9AD8);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "_confirmNotificationSettings", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self currentNotificationCenter];
  v6[4] = sub_10008A510;
  v6[5] = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_10008A9B0;
  _OWORD v6[3] = &unk_100352D00;
  uint64_t v5 = _Block_copy(v6);
  [v4 getNotificationSettingsWithCompletionHandler:v5];
  _Block_release(v5);
}

uint64_t sub_10008B59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008B5AC()
{
  return swift_release();
}

uint64_t sub_10008B5B4(void *a1, uint64_t a2)
{
  if (qword_10037DE00 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9AD8);
  id v5 = a1;
  unsigned int v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    char v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)char v8 = 136446210;
    id v9 = [v5 request];
    id v10 = [v9 identifier];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_1001B3178(v11, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "userNotificationCenter willPresent id = '%{public}s'", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, 8);
}

uint64_t sub_10008B7C4(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_10037DE00 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9AD8);
  id v5 = a1;
  unsigned int v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  p_base_prots = &SessionEnvironmentFactory.base_prots;
  id v9 = &SessionEnvironmentFactory.base_prots;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v38 = (void *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543618;
    char v37 = &v40;
    id v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v38 = v5;

    *(_WORD *)(v10 + 12) = 2082;
    id v12 = [v11 notification];
    id v13 = [v12 request];

    id v14 = [v13 identifier];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
    uint64_t v18 = v15;
    id v9 = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
    sub_1001B3178(v18, v17, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "userNotificationCenter didReceive %{public}@ for %{public}s", (uint8_t *)v10, 0x16u);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v19 = [v5 setObject:v37];
  id v20 = [v19 (SEL)v9[427]];

  id v21 = [v20 identifier];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  id v25 = [v5 actionIdentifier];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v26 && v29 == v28)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_retain();
    uint64_t v31 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000013, 0x80000001002CC3D0);
    LOBYTE(v40) = 0;
LABEL_11:
    uint64_t v41 = v22;
    uint64_t v42 = v24;
    uint64_t v43 = v31;
    PassthroughSubject.send(_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(void))(a3 + 16))();
  }
  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_10;
  }
  if (v26 == 0x747065636341 && v28 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_retain();
    uint64_t v31 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000013, 0x80000001002CC3D0);
    LOBYTE(v40) = 2;
    goto LABEL_11;
  }
  if (v26 == 0x656E696C636544 && v28 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_retain();
    uint64_t v31 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000013, 0x80000001002CC3D0);
    LOBYTE(v40) = 1;
    goto LABEL_11;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v26 && v33 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(void))(a3 + 16))();
    }
  }
  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000013, 0x80000001002CC3D0);
  LOBYTE(v40) = 1;
  uint64_t v41 = v22;
  uint64_t v42 = v24;
  uint64_t v43 = v35;
  PassthroughSubject.send(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v22 == 0xD00000000000001ALL && v24 == 0x80000001002CC3F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v36 = 0;
  }
  else if (v22 == 0xD000000000000017 && v24 == 0x80000001002CC410)
  {
    swift_bridgeObjectRelease();
    char v36 = 1;
  }
  else
  {
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  sub_10008A008(v36 & 1);
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_10008BF84(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10008BFE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008C040(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008C098(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008C0E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008C130()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008C168()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_10008C1C0(uint64_t a1)
{
  return sub_1000895B0(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_10008C1CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return _swift_deallocObject(v0, 104, 7);
}

void sub_10008C22C()
{
  sub_1000898D8(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 96));
}

unsigned char *storeEnumTagSinglePayload for NotificationAgent.NotificationAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008C308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAgent.NotificationAction()
{
  return &type metadata for NotificationAgent.NotificationAction;
}

unint64_t sub_10008C344()
{
  unint64_t result = qword_100383A28;
  if (!qword_100383A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383A28);
  }
  return result;
}

void ConnectionAssistantStars.makeStar()(uint64_t a1@<X8>)
{
  sub_10008C64C(v1[6].f32[3], v1[7].f32[0]);
  int v4 = v3;
  sub_10008C64C(v1[6].f32[1], v1[6].f32[2]);
  int v6 = v5;
  unsigned int v7 = sub_10008CA58(16777217);
  if (v1[6].i8[0])
  {
    *(float *)v8.i32 = (float)((float)((float)((float)v7 * 0.000000059605) + (float)((float)v7 * 0.000000059605)) + -1.0)
                     * 13.591;
    if (v7 == 0x1000000) {
      *(float *)v8.i32 = 13.591;
    }
    *(float *)v8.i32 = fminf(*(float *)v8.i32 - floorf(*(float *)v8.i32), 1.0);
    *(float32x2_t *)_Q1.f32 = vadd_f32((float32x2_t)vdup_lane_s32(v8, 0), (float32x2_t)0x3F2AAAAB3F800000);
    _Q1.f32[2] = *(float *)v8.i32 + 0.33333;
    _Q1.i32[3] = 0;
    float32x4_t v10 = _Q1;
    v10.i32[3] = 0;
    float32x4_t v11 = vsubq_f32(_Q1, vrndmq_f32(v10));
    v11.i32[3] = 0;
    _Q1.i64[1] = 1065353215;
    float32x4_t v12 = vminnmq_f32(v11, (float32x4_t)xmmword_1002B6190);
    __asm
    {
      FMOV            V1.2S, #6.0
      FMOV            V2.2S, #-3.0
    }
    *(float32x2_t *)_Q1.f32 = vadd_f32(vmul_f32(*(float32x2_t *)v12.f32, *(float32x2_t *)_Q1.f32), _D2);
    float32x4_t v18 = _Q1;
    v18.f32[2] = vmuls_lane_f32(6.0, v12, 2) + -3.0;
    float32x4_t v19 = vabsq_f32(v18);
    *(float32x2_t *)v18.f32 = vadd_f32(vmul_f32((float32x2_t)(_Q1.i64[0] & 0x7FFFFFFF7FFFFFFFLL), (float32x2_t)vdup_n_s32(0x3ECCCCCDu)), (float32x2_t)vdup_n_s32(0x3F19999Au));
    v18.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(0.4, v19, 2) + 0.6);
    float32x4_t v30 = v18;
  }
  else
  {
    float32x4_t v30 = v1[5];
  }
  sub_10008C6C0((uint64_t)&v1[1], (uint64_t)v31);
  sub_10008C6C0((uint64_t)v31, (uint64_t)v34);
  if (v36) {
    float v20 = 0.0;
  }
  else {
    float v20 = v35;
  }
  if (v20 < 0.0)
  {
    __break(1u);
  }
  else
  {
    sub_10008C64C(0.0, v20);
    int v22 = v21;
    sub_10008C6C0((uint64_t)v31, (uint64_t)v32);
    if (v33)
    {
      unsigned int v23 = sub_10008CA58(16777217);
      if (v23 == 0x1000000) {
        float v24 = 6.2832;
      }
      else {
        float v24 = (float)((float)((float)v23 * 0.000000059605) * 6.2832) + 0.0;
      }
      unsigned int v25 = sub_10008CA58(16777217);
      float v26 = acosf(1.0- (float)((float)((float)((float)v25 * 0.000000059605) + 0.0)+ (float)((float)((float)v25 * 0.000000059605) + 0.0)));
      __float2 v27 = __sincosf_stret(v26);
      __float2 v28 = __sincosf_stret(v24);
      *(float *)&long long v29 = v27.__sinval * v28.__cosval;
      *((float *)&v29 + 1) = v27.__sinval * v28.__sinval;
      *((void *)&v29 + 1) = LODWORD(v27.__cosval);
    }
    else
    {
      long long v29 = v32[0];
    }
    *(_DWORD *)a1 = v6;
    *(float32x4_t *)(a1 + 16) = v30;
    *(_DWORD *)(a1 + 32) = v4;
    *(_OWORD *)(a1 + 48) = v29;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = v22;
    *(float *)(a1 + 84) = v20;
  }
}

void sub_10008C64C(float a1, float a2)
{
  if ((~COERCE_INT(a2 - a1) & 0x7F800000) != 0) {
    sub_10008CA58(16777217);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_10008C6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ConnectionAssistantStars.starsCount.getter()
{
  return *(void *)v0;
}

uint64_t ConnectionAssistantStars.starsCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ConnectionAssistantSatellite.radius.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantStars.Spawn.position.setter(__n128 a1)
{
  *uint64_t v1 = a1;
}

__n128 ConnectionAssistantSatellite.color.getter()
{
  return v0[1];
}

void ConnectionAssistantSatellite.color.setter(__n128 a1)
{
  v1[1] = a1;
}

uint64_t (*ConnectionAssistantSatellite.color.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantRendererProjection.Ellipse.angle.getter()
{
  return *(float *)(v0 + 32);
}

void ConnectionAssistantSatellite.opacity.setter(float a1)
{
  *(float *)(v1 + 32) = a1;
}

uint64_t (*ConnectionAssistantSatellite.opacity.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantStars.Spawn.speed.getter()
{
  return *(float *)(v0 + 36);
}

void ConnectionAssistantStars.Spawn.speed.setter(float a1, float a2)
{
  *(float *)(v2 + 36) = a1;
  *(float *)(v2 + 40) = a2;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereInnerStrength.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

double ConnectionAssistantStars.Spawn.duration.getter()
{
  return *(double *)(v0 + 48);
}

void ConnectionAssistantStars.Spawn.duration.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t (*ConnectionAssistantStars.Spawn.duration.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

__n128 ConnectionAssistantStars.spawn.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  char v3 = *(unsigned char *)(v1 + 72);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  return result;
}

uint64_t ConnectionAssistantStars.spawn.setter(uint64_t a1)
{
  return sub_10008C6C0(a1, v1 + 16);
}

uint64_t ConnectionAssistantStars.color.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t ConnectionAssistantStars.color.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 80) = result;
  *(void *)(v3 + 88) = a2;
  *(unsigned char *)(v3 + 96) = a3 & 1;
  return result;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineColor.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantStars.size.getter()
{
  return *(float *)(v0 + 100);
}

void ConnectionAssistantStars.size.setter(float a1, float a2)
{
  *(float *)(v2 + 100) = a1;
  *(float *)(v2 + 104) = a2;
}

uint64_t (*ConnectionAssistantStars.size.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantStars.opacity.getter()
{
  return *(float *)(v0 + 108);
}

void ConnectionAssistantStars.opacity.setter(float a1, float a2)
{
  *(float *)(v2 + 108) = a1;
  *(float *)(v2 + 112) = a2;
}

uint64_t (*ConnectionAssistantStars.opacity.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

double ConnectionAssistantStars.init(count:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(void *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = 1;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 1;
  double result = 2048.00049;
  *(_OWORD *)(a2 + 100) = xmmword_1002B61A0;
  return result;
}

__n128 initializeWithCopy for ConnectionAssistantStars(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantStars(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 116)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantStars(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 116) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantStars()
{
  return &type metadata for ConnectionAssistantStars;
}

__n128 initializeWithCopy for ConnectionAssistantStars.Spawn(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantStars.Spawn(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantStars.Spawn(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantStars.Spawn()
{
  return &type metadata for ConnectionAssistantStars.Spawn;
}

uint64_t sub_10008CA58(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    swift_stdlib_random();
    __n128 result = 0;
    if (-v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008CAE8()
{
  return sub_10008CAF4("[%{public}s] init");
}

uint64_t sub_10008CAF4(const char *a1)
{
  uint64_t v3 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  int v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)long long v7 = 136446210;
    type metadata accessor for FindMyAgent();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v3;
}

uint64_t sub_10008CCBC()
{
  sub_10008CAF4("[%{public}s] deinit");

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FindMyAgent()
{
  return self;
}

void sub_10008CD1C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136446466;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100383AE8);
    uint64_t v3 = String.init<A>(describing:)();
    sub_1001B3178(v3, v4, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v2 + 12) = 2082;
    swift_errorRetain();
    sub_100004010(&qword_100385630);
    uint64_t v5 = String.init<A>(describing:)();
    sub_1001B3178(v5, v6, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Opening Find My result: %{public}s, %{public}s", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10008CF98()
{
  uint64_t v0 = sub_100004010(&qword_100380420);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)aBlock - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    float32x4_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float32x4_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Opening Find My", v10, 2u);
    swift_slowDealloc();
  }

  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10004C504((uint64_t)v2);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to form Find My URL", v13, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    id v14 = [self defaultWorkspace];
    if (v14)
    {
      unint64_t v16 = v14;
      URL._bridgeToObjectiveC()(v15);
      float32x4_t v18 = v17;
      id v19 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
      aBlock[4] = sub_10008CD1C;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100174C8C;
      aBlock[3] = &unk_100352FA0;
      float v20 = _Block_copy(aBlock);
      [v16 openURL:v18 configuration:v19 completionHandler:v20];
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10008D328(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008D338()
{
  return swift_release();
}

void *sub_10008D340()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for TimeZoneSource());
  swift_retain();
  v1[4] = [v2 init];
  v1[5] = 0;
  uint64_t v3 = (char *)v1 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  uint64_t v4 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_release();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  v1[2] = PassthroughSubject.init()();
  swift_allocObject();
  v1[3] = PassthroughSubject.init()();
  uint64_t v5 = qword_10037DD80;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    type metadata accessor for TimeZoneModel();
    swift_retain();
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "init: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10008D5E0()
{
  swift_release();
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone, &qword_100383C38);
}

uint64_t sub_10008D61C()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for TimeZoneModel();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();

  swift_release();
  sub_10000950C(v1 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone, &qword_100383C38);
  return v1;
}

uint64_t sub_10008D820()
{
  sub_10008D61C();

  return swift_deallocClassInstance();
}

uint64_t sub_10008D878()
{
  return type metadata accessor for TimeZoneModel();
}

uint64_t type metadata accessor for TimeZoneModel()
{
  uint64_t result = qword_100383B20;
  if (!qword_100383B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008D8CC()
{
  sub_10008DAC4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10008D974()
{
  uint64_t v1 = v0;
  sub_10000FDBC();
  swift_retain();
  uint64_t v2 = static OS_dispatch_queue.main.getter();
  sub_100004010(&qword_100383C40);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    os_log_type_t v4 = (void *)sub_100265020((unint64_t)&_swiftEmptyArrayStorage);
  }
  else {
    os_log_type_t v4 = &_swiftEmptySetSingleton;
  }
  *(void *)(v3 + 32) = v4;
  swift_weakAssign();
  swift_release();
  *(void *)(v3 + 24) = v2;
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_1002A907C(v5, (uint64_t)sub_10008DB1C, 0);
  swift_retain();
  swift_release();
  swift_release();
  *(void *)(v1 + 40) = v6;
  swift_release();
  id v7 = *(id *)(v1 + 32);
  sub_100017C34();
}

void sub_10008DAC4()
{
  if (!qword_100383B30)
  {
    type metadata accessor for TimeZone();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100383B30);
    }
  }
}

uint64_t sub_10008DB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383C38);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v14[-v8];
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  swift_beginAccess();
  sub_10008E4F4(v12, (uint64_t)v7);
  sub_10008DCC0((uint64_t)v9);
  swift_beginAccess();
  sub_10008E55C((uint64_t)v9, v12);
  swift_endAccess();
  sub_10008DFAC((uint64_t)v7);
  sub_10000950C((uint64_t)v9, &qword_100383C38);
  return sub_10000950C((uint64_t)v7, &qword_100383C38);
}

uint64_t sub_10008DCC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TimeZone();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100383C38);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_100383C48);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10008E4F4(v15, (uint64_t)v14);
  sub_10008E4F4(a1, v16);
  unint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1) {
      return sub_10000950C((uint64_t)v14, &qword_100383C38);
    }
  }
  else
  {
    sub_10008E4F4((uint64_t)v14, (uint64_t)v10);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_10008E5C4();
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      float v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      uint64_t result = sub_10000950C((uint64_t)v14, &qword_100383C38);
      if (v19) {
        return result;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_10000950C((uint64_t)v14, &qword_100383C48);
LABEL_8:
  sub_100004010(&qword_100393AA0);
  sub_100019834();
  return Subject<>.send()();
}

uint64_t sub_10008DFAC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TimeZone();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100004010(&qword_100383C38);
  uint64_t v7 = __chkstk_darwin(v34);
  uint64_t v33 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v36 = (uint64_t)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_100004010(&qword_100383C48);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10008E4F4(v17, (uint64_t)v16);
  uint64_t v35 = a1;
  sub_10008E4F4(a1, v18);
  char v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v16, 1, v3) == 1)
  {
    if (v19(v18, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v16, &qword_100383C38);
    }
  }
  else
  {
    sub_10008E4F4((uint64_t)v16, (uint64_t)v12);
    if (v19(v18, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v18, v3);
      sub_10008E5C4();
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v6, v3);
      v32(v12, v3);
      uint64_t result = sub_10000950C((uint64_t)v16, &qword_100383C38);
      if (v31) {
        return result;
      }
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  }
  sub_10000950C((uint64_t)v16, &qword_100383C48);
LABEL_7:
  if (qword_10037DE30 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000FD84(v21, (uint64_t)qword_1003A9B68);
  uint64_t v22 = v36;
  sub_10008E4F4(v35, v36);
  swift_retain_n();
  unsigned int v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v39 = v35;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v26 = v33;
    sub_10008E4F4(v22, v33);
    uint64_t v27 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v27, v28, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v22, &qword_100383C38);
    *(_WORD *)(v25 + 12) = 2080;
    sub_10008E4F4(v17, v26);
    uint64_t v29 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v29, v30, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "timeZone changed from %s to %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C(v22, &qword_100383C38);

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100019834();
  return Subject<>.send()();
}

uint64_t sub_10008E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008E55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008E5C4()
{
  unint64_t result = qword_100383C50;
  if (!qword_100383C50)
  {
    type metadata accessor for TimeZone();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383C50);
  }
  return result;
}

uint64_t sub_10008E620(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StartEmegrencyThreadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StartEmegrencyThreadRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StartEmegrencyThreadRequest()
{
  return &type metadata for StartEmegrencyThreadRequest;
}

uint64_t sub_10008E710(unsigned __int8 *a1, char *a2)
{
  return sub_10028AA74(*a1, *a2);
}

Swift::Int sub_10008E71C()
{
  return Hasher._finalize()();
}

uint64_t sub_10008E7EC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008E8A4()
{
  return Hasher._finalize()();
}

unint64_t sub_10008E970@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10008EEAC(*a1);
  *a2 = result;
  return result;
}

void sub_10008E9A0(uint64_t a1@<X8>)
{
  uint64_t v2 = 1819042147;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1954047348;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "fallDetection");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x617070616BLL;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
  }
}

__n128 initializeWithCopy for EmergencyModel.Emergency(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for EmergencyRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyRequest()
{
  return &type metadata for EmergencyRequest;
}

unsigned char *storeEnumTagSinglePayload for EmergencyRequestReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008EBBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyRequestReason()
{
  return &type metadata for EmergencyRequestReason;
}

unint64_t sub_10008EBF8()
{
  unint64_t result = qword_100383C58;
  if (!qword_100383C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383C58);
  }
  return result;
}

BOOL sub_10008EC4C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  __int16 v6 = *(_WORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  __int16 v8 = *(_WORD *)(a2 + 32);
  return sub_10008EC98((unsigned __int8 *)v5, (uint64_t)v7);
}

BOOL sub_10008EC98(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = 1819042147;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v7 = 1819042147;
  switch(v3)
  {
    case 1:
      uint64_t v7 = 1954047348;
      break;
    case 2:
      uint64_t v7 = 0x657465446C6C6166;
      unint64_t v4 = 0xED00006E6F697463;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v7 = 0x617070616BLL;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(*(unsigned char *)a2)
  {
    case 1:
      if (v7 == 1954047348) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      uint64_t v2 = 0x657465446C6C6166;
      unint64_t v8 = 0xED00006E6F697463;
      goto LABEL_9;
    case 3:
      unint64_t v8 = 0xE500000000000000;
      if (v7 != 0x617070616BLL) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (v7 != v2) {
        goto LABEL_13;
      }
LABEL_10:
      if (v4 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v9 & 1) == 0) {
          return result;
        }
      }
      if (*((void *)a1 + 1) != *(void *)(a2 + 8) || ((a1[16] ^ *(unsigned __int8 *)(a2 + 16)) & 1) != 0) {
        return 0;
      }
      char v11 = *(unsigned char *)(a2 + 32);
      if (a1[32])
      {
        if (!*(unsigned char *)(a2 + 32)) {
          return 0;
        }
      }
      else
      {
        if (*((void *)a1 + 3) != *(void *)(a2 + 24)) {
          char v11 = 1;
        }
        if (v11) {
          return 0;
        }
      }
      int v12 = a1[33];
      int v13 = *(unsigned __int8 *)(a2 + 33);
      if (v12 != 2)
      {
        BOOL v14 = (v12 & 1) == 0;
        return v13 != 2 && ((v14 ^ v13) & 1) != 0;
      }
      return v13 == 2;
  }
}

unint64_t sub_10008EEAC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034A518, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t destroy for TryOutCancelIntroButton(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_10004C738(v2, v3);
}

uint64_t initializeWithCopy for TryOutCancelIntroButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_10004C6D4(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for TryOutCancelIntroButton(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_10004C6D4(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_10004C738(v5, v6);
  return a1;
}

__n128 initializeWithTake for StewieCompressedData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TryOutCancelIntroButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10004C738(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutCancelIntroButton(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutCancelIntroButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutCancelIntroButton()
{
  return &type metadata for TryOutCancelIntroButton;
}

uint64_t sub_10008F130()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008F14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v44 = a5;
  int v6 = a4 & 1;
  uint64_t v7 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = (void *)v7;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100381AE0);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100380E00);
  uint64_t v38 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100383C60);
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004C6D4(a3, v6);
  char v18 = sub_10004EE90(a3, v6);
  sub_10004C738(a3, v6);
  id v19 = [self mainBundle];
  unint64_t v34 = 0x80000001002CC530;
  if (v18)
  {
    uint64_t v20 = 1701736260;
    unint64_t v21 = 0xE400000000000000;
  }
  else
  {
    uint64_t v20 = 0x6C65636E6143;
    unint64_t v21 = 0xE600000000000000;
  }
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  unint64_t v23 = 0xD000000000000084;
  Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, (Swift::String_optional)0, (NSBundle)v19, v22, *(Swift::String *)(&v34 - 1));

  Swift::String v45 = v24;
  static ButtonRole.cancel.getter();
  uint64_t v25 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v36;
  *(void *)(v26 + 16) = v37;
  *(void *)(v26 + 24) = v27;
  *(void *)(v26 + 32) = a3;
  *(unsigned char *)(v26 + 40) = v6 != 0;
  sub_10004C6D4(a3, v6);
  sub_100033310();
  swift_retain();
  Button<>.init<A>(_:role:action:)();
  unint64_t v28 = v41;
  BorderlessButtonStyle.init()();
  uint64_t v29 = sub_100009B18(&qword_100380E08, &qword_100380E00);
  uint64_t v30 = sub_10008F75C(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  char v31 = v43;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, void *))(v42 + 8))(v28, v31);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v12);
  static Font.Weight.bold.getter();
  v45._uint64_t countAndFlagsBits = v12;
  v45._object = v31;
  uint64_t v46 = v29;
  uint64_t v47 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v40;
  View.fontWeight(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v17, v32);
}

uint64_t sub_10008F614(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_10008F75C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10008F6F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F14C(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_10008F708()
{
  swift_release();
  sub_10004C738(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008F74C()
{
  return sub_10008F614(*(void *)(v0 + 16));
}

uint64_t sub_10008F75C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F7A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for QuestionnaireNavigationPageForQuestion()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s8SOSBuddy38QuestionnaireNavigationPageForQuestionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QuestionnaireNavigationPageForQuestion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for QuestionnaireNavigationPageForQuestion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for QuestionnaireNavigationPageForQuestion()
{
  return &type metadata for QuestionnaireNavigationPageForQuestion;
}

unint64_t sub_10008F9EC()
{
  unint64_t result = qword_100383C68;
  if (!qword_100383C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383C68);
  }
  return result;
}

Swift::Int sub_10008FA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10008FAEC(uint64_t *a1, uint64_t *a2)
{
  return sub_100090098(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

Swift::Int sub_10008FB08()
{
  return sub_10008FA40(*v0, v0[1], v0[2]);
}

void sub_10008FB14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10008FBCC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_10008FC70()
{
  Hasher._combine(_:)(*(void *)v0);
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 8));
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 32);
    Hasher._combine(_:)(1u);
    sub_10009049C(v1);
    sub_10009049C(v1);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v2)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      Hasher._combine(_:)(0);
      swift_release();
    }
    sub_1000904E0(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

BOOL sub_10008FD9C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_10008FE68((uint64_t)v5, (uint64_t)v7);
}

Swift::Int sub_10008FDE8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10008FE2C()
{
  return Hasher._finalize()();
}

BOOL sub_10008FE68(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  BOOL v4 = (v2 | v3) == 0;
  if (v2 && v3)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    BOOL v9 = *(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24);
    if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      sub_10009049C(v2);
      sub_10009049C(v2);
      sub_10009049C(v3);
      swift_release();
      BOOL v4 = 0;
LABEL_26:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000904E0(v2);
      return v4;
    }
    if (v6)
    {
      if (v7)
      {
        if (v5 == v8 && v6 == v7)
        {
          sub_10009049C(v2);
          sub_10009049C(v2);
          uint64_t v10 = v3;
LABEL_19:
          sub_10009049C(v10);
          swift_release();
LABEL_25:
          BOOL v4 = 1;
          goto LABEL_26;
        }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10009049C(v2);
        sub_10009049C(v2);
        sub_10009049C(v3);
        swift_release();
        if (v12) {
          goto LABEL_25;
        }
        goto LABEL_23;
      }
      sub_10009049C(v2);
      sub_10009049C(v2);
    }
    else
    {
      sub_10009049C(v2);
      sub_10009049C(v2);
      if (!v7)
      {
        uint64_t v10 = v3;
        goto LABEL_19;
      }
    }
    sub_10009049C(v3);
    swift_release();
LABEL_23:
    BOOL v4 = 0;
    goto LABEL_26;
  }
  return v4;
}

uint64_t sub_100090098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(a4 + 24);
  BOOL v12 = *(void *)(a1 + 16) == v10 && *(void *)(a1 + 24) == v11;
  if (v12 || (char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v13 & 1) != 0))
  {
    if (a3)
    {
      if (a6 && (a2 == a5 && a3 == a6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t destroy for QuestionnaireNavigationPage(uint64_t a1)
{
  swift_release();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for QuestionnaireNavigationPage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = a2 + 16;
  uint64_t v4 = *(void *)(a2 + 16);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(void *)(a1 + 32) = *(void *)(v5 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for QuestionnaireNavigationPage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 16) = v6;
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10005F3C0(a1 + 16);
      uint64_t v8 = *(void *)(a2 + 32);
      *uint64_t v4 = *v7;
      *(void *)(a1 + 32) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *uint64_t v4 = v9;
  }
  return a1;
}

uint64_t assignWithTake for QuestionnaireNavigationPage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_10005F3C0(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return a1;
  }
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireNavigationPage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireNavigationPage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireNavigationPage()
{
  return &type metadata for QuestionnaireNavigationPage;
}

unint64_t sub_100090448()
{
  unint64_t result = qword_100383C70[0];
  if (!qword_100383C70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100383C70);
  }
  return result;
}

uint64_t sub_10009049C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000904E0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100090520()
{
  uint64_t result = type metadata accessor for Spring();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000905F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = v13 + v11;
  unint64_t v15 = ((v13 + v11 + ((v13 + v11 + ((v8 + v11) & ~v11)) & ~v11)) & ~v11) + v13;
  uint64_t v16 = (*(unsigned char *)(v7 + 80) | *(unsigned char *)(v10 + 80));
  if (v16 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    unint64_t v21 = ((unint64_t)a1 + v12) & v20;
    unint64_t v22 = ((unint64_t)a2 + v12) & v20;
    unint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    v23(v21, v22, v9);
    unint64_t v24 = (v14 + v21) & v20;
    unint64_t v25 = (v14 + v22) & v20;
    v23(v24, v25, v9);
    v23((v14 + v24) & v20, (v14 + v25) & v20, v9);
  }
  return a1;
}

uint64_t sub_1000907C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Spring();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v15 = v8 + 8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v9) & ~v9;
  v14(v10, v7);
  uint64_t v11 = *(void *)(v15 + 56) + v9;
  uint64_t v12 = (v11 + v10) & ~v9;
  v14(v12, v7);

  return ((uint64_t (*)(uint64_t, uint64_t))v14)((v11 + v12) & ~v9, v7);
}

uint64_t sub_1000908D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v9 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v7 + 48) + v12;
  uint64_t v14 = (v13 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  v10(v14, v15, v8);
  uint64_t v16 = *(void *)(v11 + 48) + v12;
  uint64_t v17 = (v16 + v14) & ~v12;
  uint64_t v18 = (v16 + v15) & ~v12;
  v10(v17, v18, v8);
  v10((v16 + v17) & ~v12, (v16 + v18) & ~v12, v8);
  return a1;
}

uint64_t sub_1000909F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24);
  uint64_t v11 = v9 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v7 + 40) + v12;
  uint64_t v14 = (v13 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  v10(v14, v15, v8);
  uint64_t v16 = *(void *)(v11 + 40) + v12;
  uint64_t v17 = (v16 + v14) & ~v12;
  uint64_t v18 = (v16 + v15) & ~v12;
  v10(v17, v18, v8);
  v10((v16 + v17) & ~v12, (v16 + v18) & ~v12, v8);
  return a1;
}

uint64_t sub_100090B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v11 = v9 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v7 + 32) + v12;
  uint64_t v14 = (v13 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  v10(v14, v15, v8);
  uint64_t v16 = *(void *)(v11 + 32) + v12;
  uint64_t v17 = (v16 + v14) & ~v12;
  uint64_t v18 = (v16 + v15) & ~v12;
  v10(v17, v18, v8);
  v10((v16 + v17) & ~v12, (v16 + v18) & ~v12, v8);
  return a1;
}

uint64_t sub_100090C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  uint64_t v11 = v9 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v7 + 24) + v12;
  uint64_t v14 = (v13 + a1) & ~v12;
  uint64_t v15 = (v13 + a2) & ~v12;
  v10(v14, v15, v8);
  uint64_t v16 = *(void *)(v11 + 24) + v12;
  uint64_t v17 = (v16 + v14) & ~v12;
  uint64_t v18 = (v16 + v15) & ~v12;
  v10(v17, v18, v8);
  v10((v16 + v17) & ~v12, (v16 + v18) & ~v12, v8);
  return a1;
}

uint64_t sub_100090D60(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Spring();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = ((*(void *)(v9 + 64) + v11 + ((*(void *)(v9 + 64) + v11 + (v13 & ~v11)) & ~v11)) & ~v11)
      + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          unint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          unint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = ((*(_DWORD *)(v9 + 64) + v11 + ((*(_DWORD *)(v9 + 64) + v11 + (v13 & ~v11)) & ~v11)) & ~v11)
    }
          + *(_DWORD *)(v9 + 64);
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_100090FD4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Spring();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v13;
  size_t v16 = ((*(void *)(v11 + 64) + v13 + ((*(void *)(v11 + 64) + v13 + (v15 & ~v13)) & ~v13)) & ~v13)
      + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v18 = ~v14 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1000912C8);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v10 >= v12)
        {
          unint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v9 + 56);
          v23(a1, a2);
        }
        else
        {
          unint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v13, a2, v12);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Spring()
{
  return sub_100006BAC();
}

{
  return type metadata accessor for Spring();
}

unsigned char *storeEnumTagSinglePayload for QuestionnairePolicy.QuestionnaireScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000913D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnairePolicy.QuestionnaireScope()
{
  return &type metadata for QuestionnairePolicy.QuestionnaireScope;
}

uint64_t initializeWithCopy for QuestionnairePolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QuestionnairePolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for QuestionnairePolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnairePolicy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnairePolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnairePolicy()
{
  return &type metadata for QuestionnairePolicy;
}

unint64_t sub_1000915B8()
{
  unint64_t result = qword_100383CF8;
  if (!qword_100383CF8)
  {
    sub_1000094C4(&qword_100383D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383CF8);
  }
  return result;
}

void sub_100091614(void *a1@<X8>)
{
  *a1 = &off_10034A598;
}

unint64_t sub_100091628()
{
  unint64_t result = qword_100383D08;
  if (!qword_100383D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383D08);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnairePolicy.AutoSendPolicy()
{
  return &type metadata for QuestionnairePolicy.AutoSendPolicy;
}

__n128 initializeWithTake for GuidanceMessagesModel.BitsForStats(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ExplorerGuidanceState.SettledLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerGuidanceState.SettledLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerGuidanceState.SettledLocation()
{
  return &type metadata for ExplorerGuidanceState.SettledLocation;
}

uint64_t destroy for ExplorerGuidanceState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExplorerGuidanceState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplorerGuidanceState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  long long v5 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v5;
  return a1;
}

uint64_t assignWithTake for ExplorerGuidanceState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerGuidanceState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerGuidanceState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerGuidanceState()
{
  return &type metadata for ExplorerGuidanceState;
}

uint64_t sub_100091A78(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100091AAC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[5];
  _OWORD v10[4] = a1[4];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 89);
  long long v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  long long v4 = a1[3];
  uint64_t v10[2] = a1[2];
  v10[3] = v4;
  long long v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  long long v6 = a2[2];
  long long v7 = a2[3];
  *(_OWORD *)&v13[9] = *(_OWORD *)((char *)a2 + 89);
  long long v8 = a2[5];
  v12[4] = a2[4];
  *(_OWORD *)uint64_t v13 = v8;
  v12[2] = v6;
  v12[3] = v7;
  return sub_100091B68((unsigned __int8 *)v10, (unsigned __int8 *)v12) & 1;
}

double sub_100091B18()
{
  byte_1003A98A0 = 0;
  qword_1003A98A8 = (uint64_t)&_swiftEmptySetSingleton;
  word_1003A98B0 = 9;
  byte_1003A98B2 = 2;
  double result = 0.0;
  *(_OWORD *)&qword_1003A98B8 = 0u;
  *(long long *)((char *)&xmmword_1003A98C0 + 8) = 0u;
  unk_1003A98D8 = 0u;
  *((void *)&xmmword_1003A98E0 + 1) = 0;
  word_1003A98F0 = 1;
  qword_1003A98F8 = 0;
  unk_1003A9900 = 0;
  byte_1003A9908 = 2;
  return result;
}

uint64_t sub_100091B68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (((*a1 ^ *a2) & 1) != 0 || (sub_10020D19C(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) == 0) {
    return 0;
  }
  int v4 = a1[16];
  int v5 = a2[16];
  if (v4 == 9)
  {
    if (v5 != 9) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    if (v5 == 9 || v4 != v5) {
      return result;
    }
  }
  if ((a1[17] ^ a2[17])) {
    return 0;
  }
  int v7 = a1[18];
  int v8 = a2[18];
  if (v7 == 2)
  {
    if (v8 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v9 = (v7 & 1) == 0;
    if (v8 == 2 || ((v9 ^ v8) & 1) == 0) {
      return result;
    }
  }
  uint64_t v10 = *((void *)a1 + 4);
  uint64_t v11 = *((void *)a2 + 4);
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    if (*((void *)a1 + 3) != *((void *)a2 + 3) || v10 != v11)
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v12 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v13 = *((void *)a1 + 6);
  uint64_t v14 = *((void *)a2 + 6);
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    if (*((void *)a1 + 5) != *((void *)a2 + 5) || v13 != v14)
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v14)
  {
    return 0;
  }
  uint64_t v16 = *((void *)a1 + 8);
  uint64_t v17 = *((void *)a2 + 8);
  if (!v16)
  {
    if (v17) {
      return 0;
    }
LABEL_37:
    if (a1[80])
    {
      if (!a2[80]) {
        return 0;
      }
    }
    else if ((a2[80] & 1) != 0 || (static Angle.== infix(_:_:)() & 1) == 0)
    {
      return 0;
    }
    if (((a1[81] ^ a2[81]) & 1) == 0)
    {
      int v19 = a1[104];
      int v20 = a2[104];
      if (v19 == 2)
      {
        if (v20 != 2) {
          return 0;
        }
      }
      else if (v20 == 2 {
             || *((double *)a1 + 11) != *((double *)a2 + 11)
      }
             || *((double *)a1 + 12) != *((double *)a2 + 12)
             || ((v20 ^ v19) & 1) != 0)
      {
        return 0;
      }
      return 1;
    }
    return 0;
  }
  if (!v17) {
    return 0;
  }
  if (*((void *)a1 + 7) == *((void *)a2 + 7) && v16 == v17) {
    goto LABEL_37;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v18) {
    goto LABEL_37;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExplorerGuidanceState.LocationAccuracy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100091E4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerGuidanceState.LocationAccuracy()
{
  return &type metadata for ExplorerGuidanceState.LocationAccuracy;
}

unint64_t sub_100091E88()
{
  unint64_t result = qword_100383D10;
  if (!qword_100383D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383D10);
  }
  return result;
}

uint64_t destroy for SingleChoiceContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SingleChoiceContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SingleChoiceContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SingleChoiceContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleChoiceContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleChoiceContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleChoiceContentView()
{
  return &type metadata for SingleChoiceContentView;
}

uint64_t sub_1000921A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000921C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100383D20);
  __chkstk_darwin(v6 - 8);
  int v8 = (double *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_100008F88(a1, v9);
  double v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 232))(v9, v10);
  *(void *)int v8 = static HorizontalAlignment.center.getter();
  v8[1] = v11;
  *((unsigned char *)v8 + 16) = 0;
  sub_100004010(&qword_100383D28);
  sub_100092FAC(a2);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_100092E34(v12, a2);
  sub_100093014(a2);
  swift_bridgeObjectRelease();
  uint64_t v24 = v13;
  swift_getKeyPath();
  sub_1000090FC((uint64_t)a1, (uint64_t)v23);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v14 + 64) = v15;
  *(void *)(v14 + 80) = *(void *)(a2 + 64);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 32) = v16;
  sub_100009164(v23, v14 + 88);
  sub_100092FAC(a2);
  sub_100004010(&qword_1003808D0);
  sub_100004010(&qword_100383D30);
  sub_100009B18(&qword_1003808E0, &qword_1003808D0);
  sub_10002EFDC();
  sub_1000930E8();
  ForEach<>.init(_:id:content:)();
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v17 + 64) = v18;
  *(void *)(v17 + 80) = *(void *)(a2 + 64);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v17 + 32) = v19;
  sub_100093218((uint64_t)v8, a3);
  int v20 = (uint64_t (**)(uint64_t *))(a3 + *(int *)(sub_100004010(&qword_100383D48) + 36));
  *int v20 = sub_100093210;
  v20[1] = (uint64_t (*)(uint64_t *))v17;
  sub_100092FAC(a2);
  return sub_100093280((uint64_t)v8);
}

__n128 sub_100092464@<Q0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if (a1[8] == 1)
  {
    uint64_t v6 = *(void *)a1;
    uint64_t v7 = *(void *)(*(void *)a1 + 32);
    long long v62 = *(_OWORD *)(a2 + 48);
    v63.n128_u64[0] = *(void *)(a2 + 64);
    sub_100032A1C(v6, 1);
    swift_retain();
    sub_100004010(&qword_100383D50);
    State.wrappedValue.getter();
    uint64_t v8 = v34;
    uint64_t v9 = v35;
    uint64_t v10 = swift_allocObject();
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v10 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v10 + 64) = v11;
    uint64_t v12 = *(void *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v10 + 32) = v13;
    *(void *)(v10 + 80) = v12;
    *(void *)(v10 + 88) = v6;
    sub_100032A1C(v6, 1);
    sub_100092FAC(a2);
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    uint64_t v34 = EnvironmentObject.init()();
    uint64_t v35 = v14;
    uint64_t v36 = v7;
    uint64_t v37 = v8;
    uint64_t v38 = v9;
    uint64_t v39 = sub_1000933B4;
    uint64_t v40 = v10;
    sub_1000933E0((uint64_t)&v34);
    sub_1000932EC((uint64_t)&v34, (uint64_t)&v62);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100004010(&qword_100380908);
    sub_100093164();
    sub_10002F100();
    _ConditionalContent<>.init(storage:)();
    sub_100032A28(v6, 1);
    swift_release();
    swift_release();
    swift_release();
    long long v68 = v25[6];
    long long v69 = v25[7];
    char v70 = v26;
    long long v64 = v25[2];
    long long v65 = v25[3];
    long long v66 = v25[4];
    long long v67 = v25[5];
    long long v62 = v25[0];
    __n128 v63 = (__n128)v25[1];
  }
  else
  {
    uint64_t v15 = a3[3];
    uint64_t v16 = a3[4];
    sub_100008F88(a3, v15);
    uint64_t v17 = *(double (**)(uint64_t, uint64_t))(v16 + 272);
    double v18 = v17(v15, v16);
    double v19 = v17(v15, v16);
    static Alignment.center.getter();
    if (v18 > v19)
    {
      static os_log_type_t.fault.getter();
      int v20 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    char v33 = 1;
    char v32 = v50;
    char v31 = v52;
    char v30 = v54;
    char v29 = v56;
    char v28 = v58;
    char v27 = v60;
    uint64_t v34 = 0;
    LOBYTE(v35) = 1;
    uint64_t v36 = v49;
    LOBYTE(v37) = v50;
    uint64_t v38 = v51;
    LOBYTE(v39) = v52;
    uint64_t v40 = v53;
    char v41 = v54;
    uint64_t v42 = v55;
    char v43 = v56;
    uint64_t v44 = v57;
    char v45 = v58;
    uint64_t v46 = v59;
    char v47 = v60;
    long long v48 = v61;
    sub_1000932E0((uint64_t)&v34);
    sub_1000932EC((uint64_t)&v34, (uint64_t)v25);
    sub_100004010(&qword_100380908);
    sub_100093164();
    sub_10002F100();
    _ConditionalContent<>.init(storage:)();
  }
  long long v21 = v69;
  *(_OWORD *)(a4 + 96) = v68;
  *(_OWORD *)(a4 + 112) = v21;
  *(unsigned char *)(a4 + 128) = v70;
  long long v22 = v65;
  *(_OWORD *)(a4 + 32) = v64;
  *(_OWORD *)(a4 + 48) = v22;
  long long v23 = v67;
  *(_OWORD *)(a4 + 64) = v66;
  *(_OWORD *)(a4 + 80) = v23;
  __n128 result = v63;
  *(_OWORD *)a4 = v62;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

uint64_t sub_100092858(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 24);
  if ((sub_1000CA784(v3, a1, 0) & 1) == 0)
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9B08);
    sub_100092FAC(v1);
    sub_100092FAC(v1);
    sub_100092FAC(v1);
    swift_retain();
    sub_100092FAC(v1);
    swift_retain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446723;
      uint64_t v8 = sub_1000C8E54();
      sub_1001B3178(v8, v9, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100093014(v1);
      sub_100093014(v1);
      *(_WORD *)(v7 + 12) = 2081;
      uint64_t v11 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_1001B3178(v11, v10, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 22) = 2081;
      uint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      swift_bridgeObjectRetain();
      sub_1001B3178(v13, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100093014(v1);
      sub_100093014(v1);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%{public}s] QuestionnaireBodyView: failed to record %{private}s answer for %{private}s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100093014(v1);
      sub_100093014(v1);
      swift_release_n();
      sub_100093014(v1);
      sub_100093014(v1);
    }
  }
  return (*(uint64_t (**)(void))(v1 + 32))();
}

uint64_t sub_100092B24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    *(void *)&long long v13 = v3;
    *((void *)&v13 + 1) = v4;
    type metadata accessor for CGSize(0);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)&long long v13 = sub_1001B3178(v9, v10, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Button icon size requested: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v13 = *(_OWORD *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 64);
  v12[0] = v3;
  v12[1] = v4;
  sub_100004010(&qword_100383D50);
  return State.wrappedValue.setter();
}

uint64_t sub_100092CF4@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  uint64_t v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v4;
  uint64_t v11 = *(void *)(v1 + 64);
  if (*(void *)&v10[0])
  {
    uint64_t v5 = *(void *)(*(void *)&v10[0] + 72);
    uint64_t v6 = *(void *)(*(void *)&v10[0] + 80);
    sub_100008F88((void *)(*(void *)&v10[0] + 48), v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v9, v5, v6);
    *(void *)a1 = static VerticalAlignment.center.getter();
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v7 = sub_100004010(&qword_100383D18);
    sub_1000921C4(v9, (uint64_t)v10, a1 + *(int *)(v7 + 44));
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v9);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

unint64_t sub_100092DDC()
{
  unint64_t result = qword_10037EFF0;
  if (!qword_10037EFF0)
  {
    type metadata accessor for UIMetrics();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037EFF0);
  }
  return result;
}

uint64_t sub_100092E34(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v15 = result + 40;
    do
    {
      if (v4 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v4;
      }
      uint64_t v6 = -(uint64_t)v5;
      for (id i = (unsigned __int8 *)(v15 + 16 * v4++); ; i += 16)
      {
        if (v6 + v4 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = *((void *)i - 1);
        int v9 = *i;
        if (v9 != 1) {
          break;
        }
        uint64_t v10 = *(void *)(*(void *)(a2 + 24) + 152);
        if (!v10
          || ((unint64_t result = *(void *)(v8 + 16), result == *(void *)(v10 + 16))
            ? (BOOL v11 = *(void *)(v8 + 24) == *(void *)(v10 + 24))
            : (BOOL v11 = 0),
              !v11 && (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)))
        {
          swift_retain();
          break;
        }
        if (++v4 - v2 == 1) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = sub_1001BF724(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        unint64_t result = sub_1001BF724(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v8;
      *((unsigned char *)v14 + 40) = v9;
    }
    while (v4 != v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100092FAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100093014(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009307C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 88);

  return _swift_deallocObject(v0, 128, 7);
}

double sub_1000930DC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_100092464(a1, v2 + 16, (void *)(v2 + 88), a2).n128_u64[0];
  return result;
}

unint64_t sub_1000930E8()
{
  unint64_t result = qword_100383D38;
  if (!qword_100383D38)
  {
    sub_1000094C4(&qword_100383D30);
    sub_100093164();
    sub_10002F100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383D38);
  }
  return result;
}

unint64_t sub_100093164()
{
  unint64_t result = qword_100383D40;
  if (!qword_100383D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383D40);
  }
  return result;
}

uint64_t sub_1000931B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100093210(uint64_t *a1)
{
  return sub_100092B24(a1, v1 + 16);
}

uint64_t sub_100093218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100093280(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100383D20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000932E0(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_1000932EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100383D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100093354()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000933B4()
{
  return sub_100092858(*(void *)(v0 + 88));
}

uint64_t sub_1000933E0(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_1000933E8()
{
  return sub_100009B18(&qword_100383D60, &qword_100383D68);
}

void *sub_100093424()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100383E38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 32) = PassthroughSubject.init()();
  *(void *)(v0 + 40) = [objc_allocWithZone((Class)type metadata accessor for StewieStateSource()) init];
  uint64_t v24 = v4;
  unint64_t v25 = v8;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    int v9 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    int v9 = _swiftEmptySetSingleton;
  }
  *(void *)(v0 + 48) = v9;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(void *)(v0 + 136) = 0;
  swift_release();
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  uint64_t v10 = qword_10037DD80;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9958);
  swift_retain_n();
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v6;
    v26[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v27 = v1;
    swift_retain();
    uint64_t v16 = String.init<A>(describing:)();
    id v27 = (id)sub_1001B3178(v16, v17, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%{public}s] init", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v6 = v23;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  v26[0] = *(void *)(v1[5] + OBJC_IVAR____TtC8SOSBuddy17StewieStateSource_stateDidChange);
  sub_10000FDBC();
  swift_retain();
  id v27 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v19 = (uint64_t)v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v24, 1, 1, v18);
  sub_100004010(&qword_10037FFF8);
  sub_100009B18(&qword_100383E40, &qword_10037FFF8);
  sub_100028428();
  int v20 = v25;
  Publisher.receive<A>(on:options:)();
  sub_100028480(v19);

  swift_release();
  sub_100009B18(&qword_100383E48, &qword_100383E38);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

void *sub_100093984(unsigned __int8 *a1, void *a2)
{
  long long v3 = *((_OWORD *)a1 + 3);
  uint64_t v64[2] = *((_OWORD *)a1 + 2);
  v64[3] = v3;
  v64[4] = *((_OWORD *)a1 + 4);
  uint64_t v34 = *((void *)a1 + 9);
  uint64_t v35 = *((void *)a1 + 10);
  uint64_t v65 = v35;
  long long v4 = *((_OWORD *)a1 + 1);
  v64[0] = *(_OWORD *)a1;
  v64[1] = v4;
  uint64_t v5 = *a1;
  uint64_t v6 = *((void *)a1 + 1);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v32 = *((void *)a1 + 5);
  uint64_t v33 = *((void *)a1 + 4);
  uint64_t v30 = *((void *)a1 + 7);
  uint64_t v31 = *((void *)a1 + 6);
  unint64_t v8 = a1[16] | ((unint64_t)a1[17] << 8);
  uint64_t v40 = *((unsigned __int16 *)a1 + 32);
  sub_100094590((uint64_t)(a2 + 7), (uint64_t)v63);
  uint64_t v10 = a2[7];
  uint64_t v9 = a2[8];
  uint64_t v11 = a2[9];
  uint64_t v12 = a2[10];
  uint64_t v24 = a2[11];
  uint64_t v25 = a2[12];
  uint64_t v13 = a2[15];
  uint64_t v26 = a2[13];
  uint64_t v27 = a2[14];
  uint64_t v28 = a2[16];
  uint64_t v29 = a2[17];
  sub_100094590((uint64_t)v63, (uint64_t)v66);
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  unint64_t v36 = v8;
  uint64_t v37 = v5;
  if (!v67)
  {
    uint64_t v41 = v10;
    uint64_t v42 = v9;
    uint64_t v43 = v11;
    uint64_t v44 = v12;
    uint64_t v45 = v24;
    uint64_t v46 = v25;
    uint64_t v47 = v26;
    uint64_t v48 = v27;
    uint64_t v49 = v13;
    uint64_t v50 = v28;
    uint64_t v51 = v29;
    uint64_t v52 = v5;
    uint64_t v53 = v6;
    unint64_t v54 = v8;
    uint64_t v19 = v32;
    uint64_t v20 = v33;
    uint64_t v55 = v7;
    uint64_t v56 = v33;
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    uint64_t v57 = v32;
    uint64_t v58 = v31;
    uint64_t v59 = v30;
    uint64_t v60 = v40;
    uint64_t v16 = v34;
    uint64_t v15 = v35;
    uint64_t v61 = v34;
    uint64_t v62 = v35;
    sub_1000945F8((uint64_t)v64);
    sub_1000945F8((uint64_t)v64);
    sub_100094668(&v41);
    goto LABEL_5;
  }
  LOBYTE(v41) = v10;
  uint64_t v42 = v9;
  LOWORD(v43) = v11 & 0xFF01;
  uint64_t v44 = v12;
  uint64_t v45 = v24;
  uint64_t v46 = v25;
  uint64_t v47 = v26;
  uint64_t v48 = v27;
  LOWORD(v49) = v13;
  uint64_t v50 = v28;
  uint64_t v51 = v29;
  BOOL v14 = sub_1000205F0((uint64_t)&v41, (uint64_t)v64);
  sub_1000945F8((uint64_t)v64);
  uint64_t v16 = v34;
  uint64_t v15 = v35;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  uint64_t v19 = v32;
  uint64_t v20 = v33;
  if (!v14)
  {
LABEL_5:
    sub_1000947AC(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    goto LABEL_6;
  }
  sub_1000947AC(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
LABEL_6:
  uint64_t v21 = a2[7];
  uint64_t v22 = a2[8];
  a2[7] = v37;
  a2[8] = v38;
  a2[9] = v36;
  a2[10] = v39;
  a2[11] = v20;
  a2[12] = v19;
  a2[13] = v18;
  a2[14] = v17;
  a2[15] = v40;
  a2[16] = v16;
  a2[17] = v15;
  sub_100093F40(v21, v22);
  sub_100093FC4(v63);
  return sub_1000947AC(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
}

uint64_t sub_100093C5C()
{
  swift_release();

  swift_bridgeObjectRelease();
  return sub_100093F40(*(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_100093CB4()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100093F40(*(void *)(v1 + 56), *(void *)(v1 + 64));
  return v1;
}

uint64_t sub_100093EE8()
{
  sub_100093CB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StewieStateModel()
{
  return self;
}

uint64_t sub_100093F40(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100093FC4(void *a1)
{
  uint64_t v2 = v1;
  sub_100094590((uint64_t)a1, (uint64_t)v72);
  uint64_t v4 = v72[2];
  uint64_t v34 = v72[0];
  uint64_t v35 = v72[1];
  uint64_t v36 = v72[3];
  uint64_t v37 = v72[4];
  uint64_t v38 = v72[5];
  uint64_t v39 = v72[6];
  uint64_t v5 = v72[8];
  uint64_t v40 = v72[7];
  uint64_t v41 = v72[9];
  uint64_t v7 = v2[7];
  uint64_t v6 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v8 = v2[10];
  uint64_t v10 = v2[11];
  uint64_t v45 = v2[12];
  uint64_t v46 = v2[13];
  uint64_t v11 = v2[15];
  uint64_t v47 = v2[14];
  uint64_t v48 = a1;
  uint64_t v44 = v2[16];
  uint64_t v42 = v72[10];
  uint64_t v43 = v2[17];
  if (!v6)
  {
    uint64_t result = sub_100094590((uint64_t)a1, (uint64_t)v86);
    if (!v87) {
      return result;
    }
    goto LABEL_6;
  }
  sub_100094590((uint64_t)a1, (uint64_t)v84);
  if (!v85)
  {
LABEL_6:
    uint64_t v50 = v7;
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    uint64_t v53 = v8;
    uint64_t v54 = v10;
    uint64_t v55 = v45;
    uint64_t v56 = v46;
    uint64_t v57 = v47;
    uint64_t v58 = v11;
    uint64_t v59 = v44;
    uint64_t v60 = v43;
    uint64_t v61 = v34;
    uint64_t v62 = v35;
    uint64_t v63 = v4;
    uint64_t v64 = v36;
    uint64_t v65 = v37;
    uint64_t v66 = v38;
    uint64_t v67 = v39;
    uint64_t v68 = v40;
    uint64_t v69 = v5;
    uint64_t v70 = v41;
    uint64_t v71 = v42;
    sub_100094728(v7, v6);
    sub_1000947AC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    sub_100094668(&v50);
    goto LABEL_7;
  }
  LOBYTE(v50) = v34;
  uint64_t v51 = v35;
  LOWORD(v52) = v4 & 0xFF01;
  uint64_t v53 = v36;
  uint64_t v54 = v37;
  uint64_t v55 = v38;
  uint64_t v56 = v39;
  uint64_t v57 = v40;
  LOWORD(v58) = v5;
  uint64_t v59 = v41;
  uint64_t v60 = v42;
  v86[0] = v7;
  uint64_t v87 = v6;
  __int16 v88 = v9 & 0xFF01;
  uint64_t v89 = v8;
  uint64_t v90 = v10;
  uint64_t v91 = v45;
  uint64_t v92 = v46;
  uint64_t v93 = v47;
  __int16 v94 = v11;
  uint64_t v95 = v44;
  uint64_t v96 = v43;
  uint64_t result = sub_1000205F0((uint64_t)v86, (uint64_t)&v50);
  if (result) {
    return result;
  }
LABEL_7:
  if (qword_10037DE28 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9B50);
  sub_1000947AC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
  swift_retain();
  sub_1000947AC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
  swift_retain();
  BOOL v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_100094590((uint64_t)v48, (uint64_t)&v73);
    sub_1000947AC(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    sub_100004010(&qword_1003826B8);
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v73 = sub_1001B3178(v17, v18, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000947AC(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
    sub_1000947AC(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v19 = v2[8];
    uint64_t v20 = v2[9];
    uint64_t v21 = v2[10];
    uint64_t v22 = v2[11];
    uint64_t v23 = v2[12];
    uint64_t v24 = v2[13];
    uint64_t v25 = v2[14];
    uint64_t v26 = v2[15];
    uint64_t v27 = v2[16];
    uint64_t v28 = v2[17];
    uint64_t v73 = v2[7];
    uint64_t v74 = v19;
    uint64_t v75 = v20;
    uint64_t v76 = v21;
    uint64_t v77 = v22;
    uint64_t v78 = v23;
    uint64_t v79 = v24;
    uint64_t v80 = v25;
    uint64_t v81 = v26;
    uint64_t v82 = v27;
    uint64_t v83 = v28;
    sub_100094728(v73, v19);
    uint64_t v29 = String.init<A>(describing:)();
    uint64_t v73 = sub_1001B3178(v29, v30, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "state changed from: %{public}s to: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000947AC(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
    sub_1000947AC(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  if (v2[8])
  {
    uint64_t v31 = v2[11];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v31 = 0;
  }
  uint64_t result = sub_100094590((uint64_t)v48, (uint64_t)&v73);
  if (!v74)
  {
    if (!v31) {
      return result;
    }
    goto LABEL_23;
  }
  uint64_t v32 = v77;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v31)
  {
    if (!v32) {
      return result;
    }
    goto LABEL_23;
  }
  if (!v32)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return Subject<>.send()();
  }
  char v33 = sub_10020D19C(v31, v32);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v33 & 1) == 0) {
    return Subject<>.send()();
  }
  return result;
}

void *sub_100094588(unsigned __int8 *a1)
{
  return sub_100093984(a1, v1);
}

uint64_t sub_100094590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003826B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000945F8(uint64_t a1)
{
  return a1;
}

uint64_t *sub_100094668(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  sub_100093F40(*a1, a1[1]);
  sub_100093F40(v2, v3);
  return a1;
}

uint64_t sub_100094728(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1000947AC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

BOOL sub_100094808(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

id sub_100094830()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__publisher;
  id v2 = objc_allocWithZone((Class)STStewieStatusDomainPublisher);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(_WORD *)&v3[OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__lastReportedState] = 2;

  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for StatusBarAgent();
  id v4 = [super init];
  uint64_t v5 = qword_10037DD80;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  id v8 = v6;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    id v12 = v8;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    sub_1001B3178(v14, v16, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{public}s] init", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v8;
}

id sub_100094A9C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for StatusBarAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for StatusBarAgent()
{
  return self;
}

uint64_t sub_100094CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *unint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (qword_10037DD80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9958);
  id v12 = v3;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = a2;
    aBlock[0] = v27;
    *(_DWORD *)unint64_t v15 = 136446210;
    uint64_t v26 = v15 + 4;
    unint64_t v16 = v12;
    uint64_t v17 = a1;
    id v18 = [v16 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    a1 = v17;
    uint64_t v29 = sub_1001B3178(v19, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] start", v15, 0xCu);
    swift_arrayDestroy();
    a2 = v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v22 = *(void **)&v12[OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__publisher];
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  aBlock[4] = (uint64_t)sub_100095A64;
  aBlock[5] = v23;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10008A9B0;
  aBlock[3] = (uint64_t)&unk_1003538F8;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v22 handleUserInteractionsWithBlock:v24];
  _Block_release(v24);
  sub_100095434(0);
  return 1;
}

uint64_t sub_100095088(uint64_t a1, uint64_t (*a2)(void))
{
  if (qword_10037DE20 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9B38);
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Status pill tapped", v6, 2u);
    swift_slowDealloc();
  }

  return a2();
}

void sub_10009517C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *os_log_type_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DD80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  id v8 = v1;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    id v12 = v8;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    uint64_t v17 = sub_1001B3178(v14, v16, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{public}s] stop", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100095434(uint64_t result)
{
  uint64_t v2 = v1;
  __int16 v3 = result;
  LODWORD(v4) = result & 1;
  unsigned int v5 = result & 0x100;
  uint64_t v6 = OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__lastReportedState;
  __int16 v7 = *(_WORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__lastReportedState);
  if (v7 == 2
    || (BOOL v8 = (v7 & 1) == 0, v9 = (v7 & 0x100) == 0, (v4 != 0) == v8)
    || (((v5 != 0) ^ v9) & 1) == 0)
  {
    if (qword_10037DE20 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9B38);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      char v21 = (char)v4;
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136446210;
      aBlock[0] = v13;
      unsigned int v14 = v5 >> 8;
      uint64_t v15 = String.init<A>(describing:)();
      sub_1001B3178(v15, v16, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Updating state: %{public}s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      LOBYTE(v4) = v21;
      swift_slowDealloc();
    }
    else
    {

      unsigned int v14 = v5 >> 8;
    }
    uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy14StatusBarAgent__publisher);
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = (_BYTE)v4;
    *(unsigned char *)(v18 + 17) = v14;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100095988;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = (uint64_t)sub_1000959EC;
    aBlock[5] = v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10009592C;
    aBlock[3] = (uint64_t)&unk_1003538A8;
    unint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v17 updateVolatileDataWithBlock:v20];
    _Block_release(v20);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v17)
    {
      __break(1u);
    }
    else
    {
      *(_WORD *)(v2 + v6) = v3 & 0x101;
      return swift_release();
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CoreTelephonySPIAgent.SelectRoadsideProviderResponse(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusBarAgent.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000958F4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusBarAgent.State()
{
  return &type metadata for StatusBarAgent.State;
}

void sub_10009592C(uint64_t a1, void *a2)
{
  int v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_100095978()
{
  return _swift_deallocObject(v0, 18, 7);
}

id sub_100095988(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 17);
  [a1 setStewieActive:v3];

  return [a1 setStewieConnected:v4];
}

uint64_t sub_1000959DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000959EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100095A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100095A24()
{
  return swift_release();
}

uint64_t sub_100095A2C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100095A64(uint64_t a1)
{
  return sub_100095088(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100095A74()
{
  return swift_weakInit();
}

uint64_t sub_100095A84(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v2;
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v14 = sub_1001B3178(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v14 = a1;
    swift_retain();
    sub_100004010(&qword_100383F38);
    uint64_t v10 = String.init<A>(describing:)();
    uint64_t v14 = sub_1001B3178(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] env = [%s]", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (qword_10037DCF8 != -1) {
    swift_once();
  }
  return swift_weakAssign();
}

NSObject *sub_100095CD4()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_tapGesture;
  id v2 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_cornerRadius] = 0x4030000000000000;
  *(void *)&v3[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentPreferences] = 0;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for LockScreenViewController();
  id v4 = [super initWithNibName:0 bundle:0];
  uint64_t v5 = qword_10037DDE8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = v6;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 138543362;
    uint64_t v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v12 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "init: '%{public}@'", v11, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v9 = v8;
  }

  sub_100097A34();
  return v8;
}

id sub_100095F50()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    id v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: '%{public}@'", v5, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for LockScreenViewController();
  return [super dealloc];
}

void sub_100096188()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v45 = v1;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    __dst[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v46 = v2;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    __src[0] = sub_1001B3178(v8, v10, __dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v1 = v45;
    id v2 = v46;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] loadView", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_10037DCF8 != -1) {
    swift_once();
  }
  if (swift_weakLoadStrong())
  {
    type metadata accessor for GuidanceMessagesModel();
    sub_1000994C4(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    uint64_t v11 = EnvironmentObject.init()();
    uint64_t v13 = v12;
    type metadata accessor for ConnectionModel(0);
    sub_1000994C4(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
    uint64_t v14 = EnvironmentObject.init()();
    uint64_t v16 = v15;
    type metadata accessor for UIMetrics();
    sub_1000994C4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v17 = EnvironmentObject.init()();
    *(void *)&long long v50 = v11;
    *((void *)&v50 + 1) = v13;
    uint64_t v51 = v14;
    uint64_t v52 = v16;
    uint64_t v53 = v17;
    uint64_t v54 = v18;
    sub_1001B07F8(&v50, (uint64_t)__src);
    LOBYTE(v13) = static Edge.Set.all.getter();
    swift_release();
    swift_release();
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    char v48 = v13;
    sub_100004010(&qword_100383F48);
    sub_100099518();
    uint64_t v19 = AnyView.init<A>(_:)();
    id v20 = objc_allocWithZone((Class)sub_100004010(&qword_100384220));
    char v21 = sub_100098FE0(v19);
    uint64_t v22 = OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView;
    uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView];
    *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView] = v21;

    uint64_t v24 = *(void **)&v2[v22];
    if (v24)
    {
      uint64_t v25 = self;
      id v26 = v24;
      id v27 = [v25 mainScreen];
      [v27 _referenceBounds];
      double v29 = v28;
      double v31 = v30;
      double v33 = v32;
      double v35 = v34;

      [v26 setFrame:v29, v31, v33, v35];
      [v2 setView:*(void *)&v2[v22]];
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    sub_10000FD84(v1, (uint64_t)qword_1003A9958);
    uint64_t v36 = v2;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      __dst[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446210;
      uint64_t v40 = v36;
      id v41 = [v40 description];
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v44 = v43;

      __src[0] = sub_1001B3178(v42, v44, __dst);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%{public}s] env is gone", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000967A8()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for LockScreenViewController();
  [super viewDidLoad];
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    id v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "viewDidLoad for '%{public}@'", v5, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v3 = v2;
  }

  uint64_t v8 = *(Class *)((char *)&v2->isa + OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_tapGesture);
  [v8 addTarget:v2 action:"didTap"];
  id v9 = [v2 view];
  if (v9)
  {
    unint64_t v10 = v9;
    [v9 addGestureRecognizer:v8];
  }
  else
  {
    __break(1u);
  }
}

void sub_100096A68(char a1, SEL *a2, const char *a3)
{
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for LockScreenViewController();
  [super a1 & 1];
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A90);
  uint64_t v8 = v3;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    objc_super v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)objc_super v11 = 138543362;
    uint64_t v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, a3, v11, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v9 = v8;
  }
}

void sub_100096C88()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v21 = v1;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    uint64_t v11 = v8;
    uint64_t v1 = v21;
    sub_1001B3178(v11, v10, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] didTap", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_10037DCF8 != -1) {
    swift_once();
  }
  if (swift_weakLoadStrong())
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    sub_10000FD84(v1, (uint64_t)qword_1003A9958);
    id v12 = v2;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      id v16 = v12;
      id v17 = [v16 description];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;

      sub_1001B3178(v18, v20, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] env is gone", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100097100(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9A90);
  id v16 = v5;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    unint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138543618;
    uint64_t v28 = (uint64_t)v16;
    uint64_t v21 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v20 = v16;

    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v28 = *(void *)&a1;
    double v29 = a2;
    double v30 = a3;
    double v31 = a4;
    type metadata accessor for CGRect(0);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v28 = sub_1001B3178(v22, v23, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "updateLayout for '%{public}@' update layout with safe bounds: %{public}s", (uint8_t *)v19, 0x16u);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v24 = *(char **)&v16[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView];
  if (v24)
  {
    uint64_t v25 = (double *)&v24[qword_1003935A0];
    *uint64_t v25 = a1;
    v25[1] = a2;
    v25[2] = a3;
    v25[3] = a4;
    id v26 = v24;
    sub_100098A3C();
  }
  else
  {
    __break(1u);
  }
}

void sub_10009768C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *id v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9A90);
  id v10 = v2;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v15 = (void *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = (uint64_t)v10;
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v13 = 138543618;
    id v17 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v10;

    *(_WORD *)(v13 + 12) = 2082;
    uint64_t v22 = v21;
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v22 = sub_1001B3178(v18, v19, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%{public}@] did dismiss, type: %{public}s", (uint8_t *)v13, 0x16u);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100097A34()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    sub_100004010(&qword_100383F40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002B67F0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v8;
    *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 64) = v9;
    *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 88) = v10;
    *(NSNumber *)(inited + 96) = Bool._bridgeToObjectiveC()();
    *(void *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 112) = v11;
    *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 136) = v12;
    *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
    *(void *)(inited + 152) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 160) = v13;
    sub_10001E6FC(0, (unint64_t *)&qword_100393B80);
    *(NSNumber *)(inited + 168) = NSNumber.init(BOOLeanLiteral:)(0);
    sub_100283AD8(inited);
    id v14 = objc_allocWithZone((Class)SBSRemoteContentPreferences);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v14 initWithConfiguration:isa];

    id v17 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentPreferences];
    *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentPreferences] = v16;

    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000FD84(v18, (uint64_t)qword_1003A9A90);
  unint64_t v19 = v1;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138543362;
    v25[1] = v19;
    uint64_t v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v19;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%{public}@] updateContentPreferences", v22, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v20 = v19;
  }
}

uint64_t sub_100097E38()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    char v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    id v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}@] _shouldRemoveViewFromHierarchyOnDisappear", v5, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_100098008()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9A90);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_1001B3178(v4, v5, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] _isSecureForRemoteViewService", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 1;
}

uint64_t sub_1000981B8()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9A90);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    char v6 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 138543362;
    id v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}@] _canShowWhileLocked", v5, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

id sub_100098388()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9A90);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_1001B3178(v4, v5, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] _remoteViewControllerInterface", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v6 = [self interfaceWithProtocol:&OBJC_PROTOCOL___SBSRemoteContentHostInterface];

  return v6;
}

uint64_t sub_100098578()
{
  if (qword_10037DDE8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9A90);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_1001B3178(v4, v5, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] _exportedInterface", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100098ED0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B4DF0;
  *(void *)(inited + 32) = sub_10001E6FC(0, &qword_100384238);
  *(void *)(inited + 40) = sub_10001E6FC(0, &qword_100384240);
  *(void *)(inited + 48) = sub_10001E6FC(0, (unint64_t *)&qword_1003826B0);
  sub_100110E40(inited);
  swift_setDeallocating();
  id v7 = objc_allocWithZone((Class)NSSet);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithArray:isa];

  uint64_t v13 = 0;
  static Set._conditionallyBridgeFromObjectiveC(_:result:)();

  if (v13)
  {
    id v10 = [self interfaceWithProtocol:&OBJC_PROTOCOL___SBSRemoteContentServiceInterface];
    Class v11 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 setClasses:v11 forSelector:"configureWithUserInfo:contentBounds:endpoint:" argumentIndex:0 ofReply:0];

    [v10 setXPCType:&_xpc_type_dictionary forSelector:"configureWithUserInfo:contentBounds:endpoint:" argumentIndex:1 ofReply:0];
    [v10 setXPCType:&_xpc_type_endpoint forSelector:"configureWithUserInfo:contentBounds:endpoint:" argumentIndex:2 ofReply:0];
    return (uint64_t)v10;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for LockScreenViewController()
{
  return self;
}

double sub_100098990()
{
  uint64_t v1 = v0 + qword_100393598;
  if ((*(unsigned char *)(v1 + 32) & 1) == 0) {
    return *(double *)v1;
  }
  id v2 = [self mainScreen];
  [v2 _referenceBounds];
  double v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;

  *(double *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v6;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v10;
  *(unsigned char *)(v1 + 32) = 0;
  return v4;
}

void sub_100098A3C()
{
  uint64_t v1 = *(void **)&v0[qword_1003935A8];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v2 = (CGRect *)&v0[qword_1003935A0];
  [v1 setConstant:*(double *)&v0[qword_1003935A0 + 8]];
  double v3 = *(void **)&v0[qword_1003935B0];
  if (!v3)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v4 = v3;
  sub_100098990();
  [v4 setConstant:v5 - CGRectGetMaxY(*v2)];

  id v6 = [*(id *)&v0[qword_1003935B8] view];
  if (v6)
  {
    id v7 = v6;
    [v0 bounds];
    [v7 setFrame:];
  }
}

void sub_100098B5C()
{
  id v1 = [objc_allocWithZone((Class)UILayoutGuide) init];
  [v0 addLayoutGuide:v1];
  id v2 = [self mainScreen];
  [v2 _referenceBounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v38.origin.double x = v4;
  v38.origin.double y = v6;
  v38.size.CGFloat width = v8;
  v38.size.double height = v10;
  double Width = CGRectGetWidth(v38);
  id v12 = [v1 topAnchor];
  id v13 = [v0 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  uint64_t v15 = qword_1003935A8;
  id v16 = *(void **)&v0[qword_1003935A8];
  *(void *)&v0[qword_1003935A8] = v14;

  id v17 = [v0 bottomAnchor];
  id v18 = [v1 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  uint64_t v20 = qword_1003935B0;
  os_log_type_t v21 = *(void **)&v0[qword_1003935B0];
  *(void *)&v0[qword_1003935B0] = v19;

  sub_100004010(&qword_1003913B0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1002B6800;
  uint64_t v23 = *(void **)&v0[v15];
  if (!v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v24 = (void *)v22;
  *(void *)(v22 + 32) = v23;
  uint64_t v25 = *(void **)&v0[v20];
  if (!v25)
  {
LABEL_10:
    __break(1u);
    return;
  }
  if (Width < 414.0) {
    double v26 = 46.0;
  }
  else {
    double v26 = 51.0;
  }
  uint64_t v27 = self;
  v24[5] = v25;
  id v28 = v23;
  id v29 = v25;
  id v30 = [v1 leadingAnchor];
  id v31 = [v0 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31 constant:v26];

  v24[6] = v32;
  id v33 = [v1 trailingAnchor];
  id v34 = [v0 trailingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34 constant:-v26];

  v24[7] = v35;
  specialized Array._endMutation()();
  sub_10001E6FC(0, (unint64_t *)&qword_100384230);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];
}

uint64_t sub_100098ED0()
{
  uint64_t v0 = sub_100004010(&qword_100384248);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    id v2 = &qword_1003913B0;
  }
  else {
    id v2 = (uint64_t *)&unk_100384250;
  }

  return sub_100004010(v2);
}

void sub_100098F30()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_tapGesture;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_cornerRadius] = 0x4030000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy24LockScreenViewController_contentPreferences] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_100098FE0(uint64_t a1)
{
  double v3 = &v1[qword_100393598];
  *(_OWORD *)double v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v3[32] = 1;
  CGFloat v4 = &v1[qword_1003935A0];
  *(_OWORD *)CGFloat v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *(void *)&v1[qword_1003935A8] = 0;
  *(void *)&v1[qword_1003935B0] = 0;
  objc_allocWithZone((Class)sub_100004010(&qword_100384228));
  uint64_t v14 = a1;
  swift_retain();
  double v5 = v1;
  *(void *)&v5[qword_1003935B8] = UIHostingController.init(rootView:)();

  v13.receiver = v5;
  v13.super_class = (Class)sub_100004010(&qword_100384220);
  CGFloat v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  double v7 = *(void **)&v6[qword_1003935B8];
  CGFloat v8 = v6;
  id v9 = [v7 view];
  if (v9)
  {
    CGFloat v10 = v9;
    id v11 = [self clearColor];
    [v10 setBackgroundColor:v11];

    [v8 addSubview:v10];
  }
  sub_100098B5C();

  return v8;
}

void sub_10009915C()
{
  double v5 = v0;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *id v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    BSDeserializeCGRectFromXPCDictionaryWithKey();
    double v1 = v11;
    double v2 = v12;
    double v3 = v13;
    double v4 = v14;
    if (qword_10037DDE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9A90);
  id v16 = v5;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138543618;
    uint64_t v25 = (uint64_t)v16;
    id v21 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = v16;

    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v25 = *(void *)&v1;
    double v26 = v2;
    double v27 = v3;
    double v28 = v4;
    type metadata accessor for CGRect(0);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v25 = sub_1001B3178(v22, v23, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%{public}@] configure with userInfo: ?, bounds: %{public}s endpoint: ?", (uint8_t *)v19, 0x16u);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100097100(v1, v2, v3, v4);
}

uint64_t sub_1000994C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100099518()
{
  unint64_t result = qword_100383F50;
  if (!qword_100383F50)
  {
    sub_1000094C4(&qword_100383F48);
    sub_100099594();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F50);
  }
  return result;
}

unint64_t sub_100099594()
{
  unint64_t result = qword_100383F58;
  if (!qword_100383F58)
  {
    sub_1000094C4(&qword_100383F60);
    sub_100099634();
    sub_100009B18(&qword_100384210, &qword_100384218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F58);
  }
  return result;
}

unint64_t sub_100099634()
{
  unint64_t result = qword_100383F68;
  if (!qword_100383F68)
  {
    sub_1000094C4(&qword_100383F70);
    sub_1000996D4();
    sub_100009B18(&qword_100384200, &qword_100384208);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F68);
  }
  return result;
}

unint64_t sub_1000996D4()
{
  unint64_t result = qword_100383F78;
  if (!qword_100383F78)
  {
    sub_1000094C4(&qword_100383F80);
    sub_100099774();
    sub_100009B18(&qword_1003841F0, &qword_1003841F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F78);
  }
  return result;
}

unint64_t sub_100099774()
{
  unint64_t result = qword_100383F88;
  if (!qword_100383F88)
  {
    sub_1000094C4(&qword_100383F90);
    sub_100099814();
    sub_100009B18(&qword_1003841E0, &qword_1003841E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F88);
  }
  return result;
}

unint64_t sub_100099814()
{
  unint64_t result = qword_100383F98;
  if (!qword_100383F98)
  {
    sub_1000094C4(&qword_100383FA0);
    sub_1000998B4();
    sub_100009B18(&qword_1003841D0, &qword_1003841D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383F98);
  }
  return result;
}

unint64_t sub_1000998B4()
{
  unint64_t result = qword_100383FA8;
  if (!qword_100383FA8)
  {
    sub_1000094C4(&qword_100383FB0);
    sub_100099954();
    sub_100009B18(&qword_1003841C0, &qword_1003841C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FA8);
  }
  return result;
}

unint64_t sub_100099954()
{
  unint64_t result = qword_100383FB8;
  if (!qword_100383FB8)
  {
    sub_1000094C4(&qword_100383FC0);
    sub_1000999F4();
    sub_100009B18(&qword_1003841B0, &qword_1003841B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FB8);
  }
  return result;
}

unint64_t sub_1000999F4()
{
  unint64_t result = qword_100383FC8;
  if (!qword_100383FC8)
  {
    sub_1000094C4(&qword_100383FD0);
    sub_100099A94();
    sub_100009B18(&qword_1003841A0, &qword_1003841A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FC8);
  }
  return result;
}

unint64_t sub_100099A94()
{
  unint64_t result = qword_100383FD8;
  if (!qword_100383FD8)
  {
    sub_1000094C4(&qword_100383FE0);
    sub_100099B34();
    sub_100009B18(&qword_100384190, &qword_100384198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FD8);
  }
  return result;
}

unint64_t sub_100099B34()
{
  unint64_t result = qword_100383FE8;
  if (!qword_100383FE8)
  {
    sub_1000094C4(&qword_100383FF0);
    sub_100099BD4();
    sub_100009B18(&qword_100384180, &qword_100384188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FE8);
  }
  return result;
}

unint64_t sub_100099BD4()
{
  unint64_t result = qword_100383FF8;
  if (!qword_100383FF8)
  {
    sub_1000094C4(&qword_100384000);
    sub_100099C74();
    sub_100009B18(&qword_100384170, &qword_100384178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100383FF8);
  }
  return result;
}

unint64_t sub_100099C74()
{
  unint64_t result = qword_100384008;
  if (!qword_100384008)
  {
    sub_1000094C4(&qword_100384010);
    sub_100099D14();
    sub_100009B18(&qword_100384160, &qword_100384168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384008);
  }
  return result;
}

unint64_t sub_100099D14()
{
  unint64_t result = qword_100384018;
  if (!qword_100384018)
  {
    sub_1000094C4(&qword_100384020);
    sub_100099DB4();
    sub_100009B18(&qword_100384150, &qword_100384158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384018);
  }
  return result;
}

unint64_t sub_100099DB4()
{
  unint64_t result = qword_100384028;
  if (!qword_100384028)
  {
    sub_1000094C4(&qword_100384030);
    sub_100099E54();
    sub_100009B18(&qword_100384140, &qword_100384148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384028);
  }
  return result;
}

unint64_t sub_100099E54()
{
  unint64_t result = qword_100384038;
  if (!qword_100384038)
  {
    sub_1000094C4(&qword_100384040);
    sub_100099EF4();
    sub_100009B18(&qword_100384130, &qword_100384138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384038);
  }
  return result;
}

unint64_t sub_100099EF4()
{
  unint64_t result = qword_100384048;
  if (!qword_100384048)
  {
    sub_1000094C4(&qword_100384050);
    sub_100099F94();
    sub_100009B18(&qword_100384120, &qword_100384128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384048);
  }
  return result;
}

unint64_t sub_100099F94()
{
  unint64_t result = qword_100384058;
  if (!qword_100384058)
  {
    sub_1000094C4(&qword_100384060);
    sub_10009A034();
    sub_100009B18(&qword_100384110, &qword_100384118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384058);
  }
  return result;
}

unint64_t sub_10009A034()
{
  unint64_t result = qword_100384068;
  if (!qword_100384068)
  {
    sub_1000094C4(&qword_100384070);
    sub_10009A0D4();
    sub_100009B18(&qword_100384100, &qword_100384108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384068);
  }
  return result;
}

unint64_t sub_10009A0D4()
{
  unint64_t result = qword_100384078;
  if (!qword_100384078)
  {
    sub_1000094C4(&qword_100384080);
    sub_10009A174();
    sub_100009B18(&qword_1003840F0, &qword_1003840F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384078);
  }
  return result;
}

unint64_t sub_10009A174()
{
  unint64_t result = qword_100384088;
  if (!qword_100384088)
  {
    sub_1000094C4(&qword_100384090);
    sub_10009A214();
    sub_100009B18(&qword_1003840E0, &qword_1003840E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384088);
  }
  return result;
}

unint64_t sub_10009A214()
{
  unint64_t result = qword_100384098;
  if (!qword_100384098)
  {
    sub_1000094C4(&qword_1003840A0);
    sub_10009A2B4();
    sub_100009B18(&qword_1003840D0, &qword_1003840D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100384098);
  }
  return result;
}

unint64_t sub_10009A2B4()
{
  unint64_t result = qword_1003840A8;
  if (!qword_1003840A8)
  {
    sub_1000094C4(&qword_1003840B0);
    sub_10009A354();
    sub_100009B18(&qword_1003840C0, &qword_1003840C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003840A8);
  }
  return result;
}

unint64_t sub_10009A354()
{
  unint64_t result = qword_1003840B8;
  if (!qword_1003840B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003840B8);
  }
  return result;
}

BOOL sub_10009A3A8()
{
  if (*(void *)(*(void *)(v0 + 56) + 16)) {
    return 0;
  }
  if (*(unsigned char *)(v0 + 32) == 2) {
    return 0;
  }
  return *(unsigned char *)(v0 + 64) != 6;
}

uint64_t sub_10009A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7 = v6;
  unint64_t v8 = v5;
  uint64_t isUniquelyReferenced_nonNull_native = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v5 + 48) = v10;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(v5 + 80) = *(unsigned char *)(a3 + 48);
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  if (a5 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain_n();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_43:
    id v41 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *(void *)(v8 + 104) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
LABEL_44:
    *(void *)(v8 + 112) = v41;
    sub_10012CA2C();
    if (v7) {
      swift_release();
    }
    return v8;
  }
  uint64_t v11 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v11) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t v47 = v7;
  unint64_t v48 = v8;
  unint64_t v50 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  double v12 = &_swiftEmptyDictionarySingleton;
  uint64_t v7 = 4;
  uint64_t v49 = isUniquelyReferenced_nonNull_native;
  do
  {
    uint64_t v14 = v7 - 4;
    if (v50)
    {
      uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v7 - 3;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v7);
      swift_retain();
      uint64_t v16 = v7 - 3;
      if (__OFADD__(v14, 1))
      {
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    if (v12[2])
    {
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001BEC58(v18, v17);
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        uint64_t v43 = *(void *)(v15 + 16);
        uint64_t v42 = *(void *)(v15 + 24);
        sub_1000A1FAC();
        swift_allocError();
        *(void *)uint64_t v44 = v43;
        *(void *)(v44 + 8) = v42;
        *(void *)(v44 + 16) = 0;
        *(void *)(v44 + 24) = 0;
        *(unsigned char *)(v44 + 32) = 1;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_bridgeObjectRelease();
        int v45 = 0;
        unint64_t v8 = v48;
        goto LABEL_35;
      }
    }
    uint64_t v51 = v16;
    uint64_t v21 = v11;
    uint64_t v22 = v15;
    uint64_t v23 = *(void *)(v15 + 16);
    uint64_t v24 = v22;
    uint64_t v25 = *(void *)(v22 + 24);
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = v12;
    unint64_t v8 = sub_1001BEC58(v23, v25);
    uint64_t v27 = v12[2];
    BOOL v28 = (v26 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_39;
    }
    char v30 = v26;
    if (v12[3] >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        double v12 = v53;
        if (v26) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1000A1DF4();
        double v12 = v53;
        if (v30) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_10009F228(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_1001BEC58(v23, v25);
      if ((v30 & 1) != (v32 & 1))
      {
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v8 = v31;
      double v12 = v53;
      if (v30)
      {
LABEL_4:
        uint64_t v13 = v12[7];
        v8 *= 8;
        swift_release();
        *(void *)(v13 + v8) = v24;
        goto LABEL_5;
      }
    }
    v12[(v8 >> 6) + 8] |= 1 << v8;
    id v33 = (uint64_t *)(v12[6] + 16 * v8);
    uint64_t *v33 = v23;
    v33[1] = v25;
    *(void *)(v12[7] + 8 * v8) = v24;
    uint64_t v34 = v12[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_41;
    }
    uint64_t v12[2] = v36;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    uint64_t v11 = v21;
    uint64_t isUniquelyReferenced_nonNull_native = v49;
  }
  while (v51 != v21);
  swift_bridgeObjectRelease();
  unint64_t v8 = v48;
  *(void *)(v48 + 104) = v12;
  uint64_t v53 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRetain();
  uint64_t v37 = 4;
  uint64_t v7 = v47;
  while (1)
  {
    uint64_t v38 = v37 - 4;
    if (v50)
    {
      uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v35 = __OFADD__(v38, 1);
      uint64_t v40 = v37 - 3;
      if (v35) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v39 = *(void *)(v49 + 8 * v37);
      swift_retain();
      BOOL v35 = __OFADD__(v38, 1);
      uint64_t v40 = v37 - 3;
      if (v35) {
        goto LABEL_40;
      }
    }
    uint64_t v52 = v39;
    sub_10009A888((uint64_t)&v53, &v52);
    if (v47) {
      break;
    }
    swift_release();
    ++v37;
    if (v40 == v21)
    {
      swift_bridgeObjectRelease_n();
      id v41 = v53;
      goto LABEL_44;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  int v45 = 1;
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45) {
    swift_bridgeObjectRelease();
  }
  swift_deallocPartialClassInstance();
  return v8;
}

uint64_t sub_10009A888(uint64_t a1, uint64_t *a2)
{
  uint64_t v36 = *a2;
  unint64_t v2 = *(void *)(*a2 + 40);
  if (v2 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  unint64_t v33 = v2;
  unint64_t v34 = v2 & 0xC000000000000001;
  uint64_t v4 = 4;
  while (1)
  {
    uint64_t v6 = v4 - 4;
    if (v34)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(v2 + 8 * v4);
      swift_retain();
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v6, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    if (*(void *)(*(void *)a1 + 16))
    {
      uint64_t v10 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001BEC58(v10, v9);
      char v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(v7 + 16);
        uint64_t v29 = *(void *)(v7 + 24);
        sub_1000A1FAC();
        swift_allocError();
        *(void *)uint64_t v31 = v30;
        *(void *)(v31 + 8) = v29;
        *(void *)(v31 + 16) = 0;
        *(void *)(v31 + 24) = 0;
        *(unsigned char *)(v31 + 32) = 1;
        swift_bridgeObjectRetain();
        swift_willThrow();
        return swift_release();
      }
    }
    uint64_t v35 = v8;
    uint64_t v13 = v3;
    uint64_t v15 = *(void *)(v7 + 16);
    uint64_t v14 = *(void *)(v7 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void **)a1;
    *(void *)a1 = 0x8000000000000000;
    unint64_t v19 = sub_1001BEC58(v15, v14);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_27;
    }
    unint64_t v2 = v18;
    if (v17[3] < v22) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1000A1DF4();
      if (v2)
      {
LABEL_4:
        uint64_t v5 = v17[7];
        swift_release();
        *(void *)(v5 + 8 * v19) = v36;
        goto LABEL_5;
      }
    }
LABEL_20:
    v17[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v25 = (uint64_t *)(v17[6] + 16 * v19);
    *uint64_t v25 = v15;
    v25[1] = v14;
    *(void *)(v17[7] + 8 * v19) = v36;
    uint64_t v26 = v17[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_28;
    }
    uint64_t v17[2] = v28;
    swift_bridgeObjectRetain();
LABEL_5:
    *(void *)a1 = v17;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v4;
    uint64_t v3 = v13;
    unint64_t v2 = v33;
    if (v35 == v13) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_10009F228(v22, isUniquelyReferenced_nonNull_native);
  unint64_t v23 = sub_1001BEC58(v15, v14);
  if ((v2 & 1) == (v24 & 1))
  {
    unint64_t v19 = v23;
    if (v2) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}